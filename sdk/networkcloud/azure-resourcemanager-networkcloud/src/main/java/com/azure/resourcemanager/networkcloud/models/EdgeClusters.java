// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of EdgeClusters.
 */
public interface EdgeClusters {
    /**
     * List edge clusters in the subscription.
     * 
     * Get a list of edge clusters in the provided subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of edge clusters in the provided subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EdgeCluster> list();

    /**
     * List edge clusters in the subscription.
     * 
     * Get a list of edge clusters in the provided subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of edge clusters in the provided subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EdgeCluster> list(Context context);

    /**
     * List edge clusters in the resource group.
     * 
     * Get a list of edge clusters in the provided resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of edge clusters in the provided resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EdgeCluster> listByResourceGroup(String resourceGroupName);

    /**
     * List edge clusters in the resource group.
     * 
     * Get a list of edge clusters in the provided resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of edge clusters in the provided resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EdgeCluster> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieve the edge cluster.
     * 
     * Get properties of the provided the edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster along with {@link Response}.
     */
    Response<EdgeCluster> getByResourceGroupWithResponse(String resourceGroupName, String edgeClusterName,
        Context context);

    /**
     * Retrieve the edge cluster.
     * 
     * Get properties of the provided the edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster.
     */
    EdgeCluster getByResourceGroup(String resourceGroupName, String edgeClusterName);

    /**
     * Delete the edge cluster.
     * 
     * Delete the provided edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteByResourceGroup(String resourceGroupName, String edgeClusterName);

    /**
     * Delete the edge cluster.
     * 
     * Delete the provided edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(String resourceGroupName, String edgeClusterName, Context context);

    /**
     * Retrieve the kubernetes configuration credentials for the edge cluster.
     * 
     * Generates and returns the kubernetes configuration credentials for the edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param listUserCredentialParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return credentialResults represents the results of the cluster user credential request along with
     * {@link Response}.
     */
    Response<CredentialResults> listClusterUserCredentialWithResponse(String resourceGroupName, String edgeClusterName,
        ListUserCredentialParameters listUserCredentialParameters, Context context);

    /**
     * Retrieve the kubernetes configuration credentials for the edge cluster.
     * 
     * Generates and returns the kubernetes configuration credentials for the edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return credentialResults represents the results of the cluster user credential request.
     */
    CredentialResults listClusterUserCredential(String resourceGroupName, String edgeClusterName);

    /**
     * Stages a runtime version for an edge cluster.
     * 
     * Prepares and stages the images to the edge cluster nodes for the specified runtime version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param edgeClusterStageRuntimeParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult stageRuntime(String resourceGroupName, String edgeClusterName,
        EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters);

    /**
     * Stages a runtime version for an edge cluster.
     * 
     * Prepares and stages the images to the edge cluster nodes for the specified runtime version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param edgeClusterStageRuntimeParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult stageRuntime(String resourceGroupName, String edgeClusterName,
        EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters, Context context);

    /**
     * Retrieve the edge cluster.
     * 
     * Get properties of the provided the edge cluster.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster along with {@link Response}.
     */
    EdgeCluster getById(String id);

    /**
     * Retrieve the edge cluster.
     * 
     * Get properties of the provided the edge cluster.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster along with {@link Response}.
     */
    Response<EdgeCluster> getByIdWithResponse(String id, Context context);

    /**
     * Delete the edge cluster.
     * 
     * Delete the provided edge cluster.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteById(String id);

    /**
     * Delete the edge cluster.
     * 
     * Delete the provided edge cluster.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new EdgeCluster resource.
     * 
     * @param name resource name.
     * @return the first stage of the new EdgeCluster definition.
     */
    EdgeCluster.DefinitionStages.Blank define(String name);
}

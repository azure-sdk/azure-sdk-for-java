// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkcloud.fluent.models.OperationStatusResultInner;
import com.azure.resourcemanager.networkcloud.fluent.models.RegistrationHubMachineInner;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachinePatchParameters;

/**
 * An instance of this class provides access to all the operations defined in RegistrationHubMachinesClient.
 */
public interface RegistrationHubMachinesClient {
    /**
     * List machines in the registration hub.
     * 
     * Get a list of machines in the provided registration hub.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of machines in the provided registration hub as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistrationHubMachineInner> listByRegistrationHub(String resourceGroupName,
        String registrationHubName);

    /**
     * List machines in the registration hub.
     * 
     * Get a list of machines in the provided registration hub.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of machines in the provided registration hub as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistrationHubMachineInner> listByRegistrationHub(String resourceGroupName,
        String registrationHubName, Context context);

    /**
     * Retrieve the registration hub machine.
     * 
     * Get properties of the provided registration hub machine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided registration hub machine along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistrationHubMachineInner> getWithResponse(String resourceGroupName, String registrationHubName,
        String machineName, Context context);

    /**
     * Retrieve the registration hub machine.
     * 
     * Get properties of the provided registration hub machine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided registration hub machine.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubMachineInner get(String resourceGroupName, String registrationHubName, String machineName);

    /**
     * Create or update the registration hub machines.
     * 
     * Create a new registration hub machine or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param registrationHubMachineParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubMachine represents the registration of a machine to
     * a registration hub.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubMachineInner>, RegistrationHubMachineInner> beginCreateOrUpdate(
        String resourceGroupName, String registrationHubName, String machineName,
        RegistrationHubMachineInner registrationHubMachineParameters);

    /**
     * Create or update the registration hub machines.
     * 
     * Create a new registration hub machine or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param registrationHubMachineParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubMachine represents the registration of a machine to
     * a registration hub.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubMachineInner>, RegistrationHubMachineInner> beginCreateOrUpdate(
        String resourceGroupName, String registrationHubName, String machineName,
        RegistrationHubMachineInner registrationHubMachineParameters, Context context);

    /**
     * Create or update the registration hub machines.
     * 
     * Create a new registration hub machine or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param registrationHubMachineParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubMachine represents the registration of a machine to a registration hub.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubMachineInner createOrUpdate(String resourceGroupName, String registrationHubName, String machineName,
        RegistrationHubMachineInner registrationHubMachineParameters);

    /**
     * Create or update the registration hub machines.
     * 
     * Create a new registration hub machine or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param registrationHubMachineParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubMachine represents the registration of a machine to a registration hub.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubMachineInner createOrUpdate(String resourceGroupName, String registrationHubName, String machineName,
        RegistrationHubMachineInner registrationHubMachineParameters, Context context);

    /**
     * Delete the registration hub machine.
     * 
     * Delete the provided registration hub machine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginDelete(String resourceGroupName,
        String registrationHubName, String machineName);

    /**
     * Delete the registration hub machine.
     * 
     * Delete the provided registration hub machine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginDelete(String resourceGroupName,
        String registrationHubName, String machineName, Context context);

    /**
     * Delete the registration hub machine.
     * 
     * Delete the provided registration hub machine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner delete(String resourceGroupName, String registrationHubName, String machineName);

    /**
     * Delete the registration hub machine.
     * 
     * Delete the provided registration hub machine.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner delete(String resourceGroupName, String registrationHubName, String machineName,
        Context context);

    /**
     * Patch the registration hub machine.
     * 
     * Patch properties of the provided registration hub machine, or update the tags associated with the registration
     * hub machine. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubMachine represents the registration of a machine to
     * a registration hub.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubMachineInner>, RegistrationHubMachineInner>
        beginUpdate(String resourceGroupName, String registrationHubName, String machineName);

    /**
     * Patch the registration hub machine.
     * 
     * Patch properties of the provided registration hub machine, or update the tags associated with the registration
     * hub machine. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param registrationHubMachineUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubMachine represents the registration of a machine to
     * a registration hub.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubMachineInner>, RegistrationHubMachineInner> beginUpdate(
        String resourceGroupName, String registrationHubName, String machineName,
        RegistrationHubMachinePatchParameters registrationHubMachineUpdateParameters, Context context);

    /**
     * Patch the registration hub machine.
     * 
     * Patch properties of the provided registration hub machine, or update the tags associated with the registration
     * hub machine. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubMachine represents the registration of a machine to a registration hub.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubMachineInner update(String resourceGroupName, String registrationHubName, String machineName);

    /**
     * Patch the registration hub machine.
     * 
     * Patch properties of the provided registration hub machine, or update the tags associated with the registration
     * hub machine. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param registrationHubMachineUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubMachine represents the registration of a machine to a registration hub.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubMachineInner update(String resourceGroupName, String registrationHubName, String machineName,
        RegistrationHubMachinePatchParameters registrationHubMachineUpdateParameters, Context context);

    /**
     * Decline the machine
     * 
     * Declines a machine that is pending approval during registration. This effectively “dead ends” this machine and is
     * an explicit refusal to let the machine proceed with further provisioning.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner>
        beginDecline(String resourceGroupName, String registrationHubName, String machineName);

    /**
     * Decline the machine
     * 
     * Declines a machine that is pending approval during registration. This effectively “dead ends” this machine and is
     * an explicit refusal to let the machine proceed with further provisioning.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner>
        beginDecline(String resourceGroupName, String registrationHubName, String machineName, Context context);

    /**
     * Decline the machine
     * 
     * Declines a machine that is pending approval during registration. This effectively “dead ends” this machine and is
     * an explicit refusal to let the machine proceed with further provisioning.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner decline(String resourceGroupName, String registrationHubName, String machineName);

    /**
     * Decline the machine
     * 
     * Declines a machine that is pending approval during registration. This effectively “dead ends” this machine and is
     * an explicit refusal to let the machine proceed with further provisioning.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param machineName The name of the registration hub machine.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner decline(String resourceGroupName, String registrationHubName, String machineName,
        Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * L2ServiceLoadBalancerConfiguration represents the configuration of a layer 2 service load balancer.
 */
@Fluent
public final class L2ServiceLoadBalancerConfiguration {
    /*
     * The list of pools of IP addresses that can be allocated to load balancer services.
     */
    @JsonProperty(value = "ipAddressPools")
    private List<IpAddressPool> ipAddressPools;

    /**
     * Creates an instance of L2ServiceLoadBalancerConfiguration class.
     */
    public L2ServiceLoadBalancerConfiguration() {
    }

    /**
     * Get the ipAddressPools property: The list of pools of IP addresses that can be allocated to load balancer
     * services.
     * 
     * @return the ipAddressPools value.
     */
    public List<IpAddressPool> ipAddressPools() {
        return this.ipAddressPools;
    }

    /**
     * Set the ipAddressPools property: The list of pools of IP addresses that can be allocated to load balancer
     * services.
     * 
     * @param ipAddressPools the ipAddressPools value to set.
     * @return the L2ServiceLoadBalancerConfiguration object itself.
     */
    public L2ServiceLoadBalancerConfiguration withIpAddressPools(List<IpAddressPool> ipAddressPools) {
        this.ipAddressPools = ipAddressPools;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ipAddressPools() != null) {
            ipAddressPools().forEach(e -> e.validate());
        }
    }
}

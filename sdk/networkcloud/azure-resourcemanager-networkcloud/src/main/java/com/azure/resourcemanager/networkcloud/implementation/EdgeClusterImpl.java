// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.EdgeClusterInner;
import com.azure.resourcemanager.networkcloud.models.CredentialResults;
import com.azure.resourcemanager.networkcloud.models.EdgeCluster;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterAvailableUpgradeRuntimeVersion;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterEntraConfiguration;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterLifecycleStatus;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterPatchParameters;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterProvisioningState;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterPtpConfiguration;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterStageRuntimeParameters;
import com.azure.resourcemanager.networkcloud.models.EndpointDependency;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.ListUserCredentialParameters;
import com.azure.resourcemanager.networkcloud.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentity;
import com.azure.resourcemanager.networkcloud.models.OperationStatusResult;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class EdgeClusterImpl implements EdgeCluster, EdgeCluster.Definition, EdgeCluster.Update {
    private EdgeClusterInner innerObject;

    private final com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ManagedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public List<EdgeClusterAvailableUpgradeRuntimeVersion> availableUpgradeRuntimeVersions() {
        List<EdgeClusterAvailableUpgradeRuntimeVersion> inner = this.innerModel().availableUpgradeRuntimeVersions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ExtendedLocation clusterExtendedLocation() {
        return this.innerModel().clusterExtendedLocation();
    }

    public String connectedClusterId() {
        return this.innerModel().connectedClusterId();
    }

    public String description() {
        return this.innerModel().description();
    }

    public String edgeClusterSkuId() {
        return this.innerModel().edgeClusterSkuId();
    }

    public EdgeClusterEntraConfiguration entraConfiguration() {
        return this.innerModel().entraConfiguration();
    }

    public List<String> infrastructureResourceIds() {
        List<String> inner = this.innerModel().infrastructureResourceIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String kubernetesVersion() {
        return this.innerModel().kubernetesVersion();
    }

    public EdgeClusterLifecycleStatus lifecycleStatus() {
        return this.innerModel().lifecycleStatus();
    }

    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.innerModel().managedResourceGroupConfiguration();
    }

    public String managementServicesVersion() {
        return this.innerModel().managementServicesVersion();
    }

    public String networkFabricId() {
        return this.innerModel().networkFabricId();
    }

    public EdgeClusterProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public EdgeClusterPtpConfiguration ptpConfiguration() {
        return this.innerModel().ptpConfiguration();
    }

    public String registrationHubId() {
        return this.innerModel().registrationHubId();
    }

    public List<EndpointDependency> requiredEndpointAllowList() {
        List<EndpointDependency> inner = this.innerModel().requiredEndpointAllowList();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String runtimeVersionId() {
        return this.innerModel().runtimeVersionId();
    }

    public String supportExpiryDate() {
        return this.innerModel().supportExpiryDate();
    }

    public List<String> workloadResourceIds() {
        List<String> inner = this.innerModel().workloadResourceIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public EdgeClusterInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.networkcloud.NetworkCloudManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String edgeClusterName;

    private EdgeClusterPatchParameters updateEdgeClusterUpdateParameters;

    public EdgeClusterImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public EdgeCluster create() {
        this.innerObject = serviceManager.serviceClient()
            .getEdgeClusters()
            .createOrUpdate(resourceGroupName, edgeClusterName, this.innerModel(), Context.NONE);
        return this;
    }

    public EdgeCluster create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEdgeClusters()
            .createOrUpdate(resourceGroupName, edgeClusterName, this.innerModel(), context);
        return this;
    }

    EdgeClusterImpl(String name, com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = new EdgeClusterInner();
        this.serviceManager = serviceManager;
        this.edgeClusterName = name;
    }

    public EdgeClusterImpl update() {
        this.updateEdgeClusterUpdateParameters = new EdgeClusterPatchParameters();
        return this;
    }

    public EdgeCluster apply() {
        this.innerObject = serviceManager.serviceClient()
            .getEdgeClusters()
            .update(resourceGroupName, edgeClusterName, updateEdgeClusterUpdateParameters, Context.NONE);
        return this;
    }

    public EdgeCluster apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEdgeClusters()
            .update(resourceGroupName, edgeClusterName, updateEdgeClusterUpdateParameters, context);
        return this;
    }

    EdgeClusterImpl(EdgeClusterInner innerObject,
        com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.edgeClusterName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "edgeClusters");
    }

    public EdgeCluster refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getEdgeClusters()
            .getByResourceGroupWithResponse(resourceGroupName, edgeClusterName, Context.NONE)
            .getValue();
        return this;
    }

    public EdgeCluster refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEdgeClusters()
            .getByResourceGroupWithResponse(resourceGroupName, edgeClusterName, context)
            .getValue();
        return this;
    }

    public Response<CredentialResults> listClusterUserCredentialWithResponse(
        ListUserCredentialParameters listUserCredentialParameters, Context context) {
        return serviceManager.edgeClusters()
            .listClusterUserCredentialWithResponse(resourceGroupName, edgeClusterName, listUserCredentialParameters,
                context);
    }

    public CredentialResults listClusterUserCredential() {
        return serviceManager.edgeClusters().listClusterUserCredential(resourceGroupName, edgeClusterName);
    }

    public OperationStatusResult stageRuntime(EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters) {
        return serviceManager.edgeClusters()
            .stageRuntime(resourceGroupName, edgeClusterName, edgeClusterStageRuntimeParameters);
    }

    public OperationStatusResult stageRuntime(EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters,
        Context context) {
        return serviceManager.edgeClusters()
            .stageRuntime(resourceGroupName, edgeClusterName, edgeClusterStageRuntimeParameters, context);
    }

    public EdgeClusterImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public EdgeClusterImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public EdgeClusterImpl withEdgeClusterSkuId(String edgeClusterSkuId) {
        this.innerModel().withEdgeClusterSkuId(edgeClusterSkuId);
        return this;
    }

    public EdgeClusterImpl withNetworkFabricId(String networkFabricId) {
        this.innerModel().withNetworkFabricId(networkFabricId);
        return this;
    }

    public EdgeClusterImpl withRuntimeVersionId(String runtimeVersionId) {
        if (isInCreateMode()) {
            this.innerModel().withRuntimeVersionId(runtimeVersionId);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withRuntimeVersionId(runtimeVersionId);
            return this;
        }
    }

    public EdgeClusterImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withTags(tags);
            return this;
        }
    }

    public EdgeClusterImpl withIdentity(ManagedServiceIdentity identity) {
        if (isInCreateMode()) {
            this.innerModel().withIdentity(identity);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withIdentity(identity);
            return this;
        }
    }

    public EdgeClusterImpl withDescription(String description) {
        if (isInCreateMode()) {
            this.innerModel().withDescription(description);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withDescription(description);
            return this;
        }
    }

    public EdgeClusterImpl withEntraConfiguration(EdgeClusterEntraConfiguration entraConfiguration) {
        if (isInCreateMode()) {
            this.innerModel().withEntraConfiguration(entraConfiguration);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withEntraConfiguration(entraConfiguration);
            return this;
        }
    }

    public EdgeClusterImpl
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        this.innerModel().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    public EdgeClusterImpl withRegistrationHubId(String registrationHubId) {
        if (isInCreateMode()) {
            this.innerModel().withRegistrationHubId(registrationHubId);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withRegistrationHubId(registrationHubId);
            return this;
        }
    }

    public EdgeClusterImpl withWorkloadResourceIds(List<String> workloadResourceIds) {
        if (isInCreateMode()) {
            this.innerModel().withWorkloadResourceIds(workloadResourceIds);
            return this;
        } else {
            this.updateEdgeClusterUpdateParameters.withWorkloadResourceIds(workloadResourceIds);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

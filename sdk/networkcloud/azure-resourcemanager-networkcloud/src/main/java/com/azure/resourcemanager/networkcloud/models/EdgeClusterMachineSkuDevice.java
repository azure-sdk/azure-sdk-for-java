// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * EdgeClusterMachineSkuDevice represents a device of an edge cluster machine.
 */
@Immutable
public final class EdgeClusterMachineSkuDevice {
    /*
     * The PCI or bus address of the device. If there are multiple addresses this value will be omitted.
     */
    @JsonProperty(value = "address", access = JsonProperty.Access.WRITE_ONLY)
    private String address;

    /*
     * The list of PCI or bus addresses associated with the device. When there is only one value, the first value will match the address field value.
     */
    @JsonProperty(value = "addresses", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> addresses;

    /*
     * The bus that connects this device.
     */
    @JsonProperty(value = "bus", access = JsonProperty.Access.WRITE_ONLY)
    private String bus;

    /*
     * The class of the device.
     */
    @JsonProperty(value = "class", access = JsonProperty.Access.WRITE_ONLY)
    private String classProperty;

    /*
     * The information about a device that does not have a defined field. The information in this field is subject to move to a more appropriate field in future versions.
     */
    @JsonProperty(value = "extra", access = JsonProperty.Access.WRITE_ONLY)
    private String extra;

    /*
     * The amount of memory for a device measured in gibibytes. This value is specified for devices such as GPUs.
     */
    @JsonProperty(value = "memory", access = JsonProperty.Access.WRITE_ONLY)
    private Long memory;

    /*
     * The model of the device.
     */
    @JsonProperty(value = "model", access = JsonProperty.Access.WRITE_ONLY)
    private String model;

    /*
     * The number of ports on the device. This value is only specified for devices with ports.
     */
    @JsonProperty(value = "portCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long portCount;

    /*
     * The advertised size of a storage device in gibibytes.
     */
    @JsonProperty(value = "sizeGB", access = JsonProperty.Access.WRITE_ONLY)
    private Long sizeGB;

    /*
     * The vendor for the device.
     */
    @JsonProperty(value = "vendor", access = JsonProperty.Access.WRITE_ONLY)
    private String vendor;

    /**
     * Creates an instance of EdgeClusterMachineSkuDevice class.
     */
    public EdgeClusterMachineSkuDevice() {
    }

    /**
     * Get the address property: The PCI or bus address of the device. If there are multiple addresses this value will
     * be omitted.
     * 
     * @return the address value.
     */
    public String address() {
        return this.address;
    }

    /**
     * Get the addresses property: The list of PCI or bus addresses associated with the device. When there is only one
     * value, the first value will match the address field value.
     * 
     * @return the addresses value.
     */
    public List<String> addresses() {
        return this.addresses;
    }

    /**
     * Get the bus property: The bus that connects this device.
     * 
     * @return the bus value.
     */
    public String bus() {
        return this.bus;
    }

    /**
     * Get the classProperty property: The class of the device.
     * 
     * @return the classProperty value.
     */
    public String classProperty() {
        return this.classProperty;
    }

    /**
     * Get the extra property: The information about a device that does not have a defined field. The information in
     * this field is subject to move to a more appropriate field in future versions.
     * 
     * @return the extra value.
     */
    public String extra() {
        return this.extra;
    }

    /**
     * Get the memory property: The amount of memory for a device measured in gibibytes. This value is specified for
     * devices such as GPUs.
     * 
     * @return the memory value.
     */
    public Long memory() {
        return this.memory;
    }

    /**
     * Get the model property: The model of the device.
     * 
     * @return the model value.
     */
    public String model() {
        return this.model;
    }

    /**
     * Get the portCount property: The number of ports on the device. This value is only specified for devices with
     * ports.
     * 
     * @return the portCount value.
     */
    public Long portCount() {
        return this.portCount;
    }

    /**
     * Get the sizeGB property: The advertised size of a storage device in gibibytes.
     * 
     * @return the sizeGB value.
     */
    public Long sizeGB() {
        return this.sizeGB;
    }

    /**
     * Get the vendor property: The vendor for the device.
     * 
     * @return the vendor value.
     */
    public String vendor() {
        return this.vendor;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterSkuFabricManagedBy;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterSkuPtpRequired;
import com.azure.resourcemanager.networkcloud.models.MachineSkuSupportRange;
import com.azure.resourcemanager.networkcloud.models.UsageDomain;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * EdgeClusterSku represents the use case and overall configuration parameters of an edge cluster.
 */
@Fluent
public final class EdgeClusterSkuInner extends ProxyResource {
    /*
     * EdgeClusterSkuProperties represents the defining characteristics of an edge cluster configuration.
     * 
     * The list of the resource properties.
     */
    @JsonProperty(value = "properties", required = true)
    private EdgeClusterSkuProperties innerProperties = new EdgeClusterSkuProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of EdgeClusterSkuInner class.
     */
    public EdgeClusterSkuInner() {
    }

    /**
     * Get the innerProperties property: EdgeClusterSkuProperties represents the defining characteristics of an edge
     * cluster configuration.
     * 
     * The list of the resource properties.
     * 
     * @return the innerProperties value.
     */
    private EdgeClusterSkuProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the fabricManagedBy property: Indicates if the network fabric is managed by the user or by the system.
     * 
     * @return the fabricManagedBy value.
     */
    public EdgeClusterSkuFabricManagedBy fabricManagedBy() {
        return this.innerProperties() == null ? null : this.innerProperties().fabricManagedBy();
    }

    /**
     * Get the machineSkuSupport property: The list of supported edge cluster machine SKUs that can be used for this
     * edge cluster.
     * 
     * @return the machineSkuSupport value.
     */
    public List<MachineSkuSupportRange> machineSkuSupport() {
        return this.innerProperties() == null ? null : this.innerProperties().machineSkuSupport();
    }

    /**
     * Get the maximumNodeQuantity property: The largest number of nodes that can be created in this edge cluster.
     * 
     * @return the maximumNodeQuantity value.
     */
    public Long maximumNodeQuantity() {
        return this.innerProperties() == null ? null : this.innerProperties().maximumNodeQuantity();
    }

    /**
     * Get the minimumNodeQuantity property: The smallest number of nodes that can be created for this edge cluster.
     * 
     * @return the minimumNodeQuantity value.
     */
    public Long minimumNodeQuantity() {
        return this.innerProperties() == null ? null : this.innerProperties().minimumNodeQuantity();
    }

    /**
     * Get the ptpRequired property: Indicates if the edge cluster uses the Precision Time Protocol (PTP) for time
     * synchronization.
     * 
     * @return the ptpRequired value.
     */
    public EdgeClusterSkuPtpRequired ptpRequired() {
        return this.innerProperties() == null ? null : this.innerProperties().ptpRequired();
    }

    /**
     * Get the usageDomain property: UsageDomain represents the usage domain that is associated with a solution.
     * 
     * The use case of the edge cluster.
     * 
     * @return the usageDomain value.
     */
    public UsageDomain usageDomain() {
        return this.innerProperties() == null ? null : this.innerProperties().usageDomain();
    }

    /**
     * Set the usageDomain property: UsageDomain represents the usage domain that is associated with a solution.
     * 
     * The use case of the edge cluster.
     * 
     * @param usageDomain the usageDomain value to set.
     * @return the EdgeClusterSkuInner object itself.
     */
    public EdgeClusterSkuInner withUsageDomain(UsageDomain usageDomain) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterSkuProperties();
        }
        this.innerProperties().withUsageDomain(usageDomain);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model EdgeClusterSkuInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EdgeClusterSkuInner.class);
}

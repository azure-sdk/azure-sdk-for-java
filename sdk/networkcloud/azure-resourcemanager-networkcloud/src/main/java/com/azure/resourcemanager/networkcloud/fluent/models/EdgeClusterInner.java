// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterAvailableUpgradeRuntimeVersion;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterEntraConfiguration;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterLifecycleStatus;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterProvisioningState;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterPtpConfiguration;
import com.azure.resourcemanager.networkcloud.models.EndpointDependency;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentity;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * EdgeCluster represents a cluster that encompasses one or more nodes used to host network functions.
 */
@Fluent
public final class EdgeClusterInner extends Resource {
    /*
     * The identity of the edge cluster.
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /*
     * EdgeClusterProperties represents the properties of an edge cluster.
     * 
     * The list of the resource properties.
     */
    @JsonProperty(value = "properties", required = true)
    private EdgeClusterProperties innerProperties = new EdgeClusterProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of EdgeClusterInner class.
     */
    public EdgeClusterInner() {
    }

    /**
     * Get the identity property: The identity of the edge cluster.
     * 
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The identity of the edge cluster.
     * 
     * @param identity the identity value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the innerProperties property: EdgeClusterProperties represents the properties of an edge cluster.
     * 
     * The list of the resource properties.
     * 
     * @return the innerProperties value.
     */
    private EdgeClusterProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeClusterInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeClusterInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the availableUpgradeRuntimeVersions property: The list of runtimes upgrades that are available for the Edge
     * Cluster.
     * 
     * @return the availableUpgradeRuntimeVersions value.
     */
    public List<EdgeClusterAvailableUpgradeRuntimeVersion> availableUpgradeRuntimeVersions() {
        return this.innerProperties() == null ? null : this.innerProperties().availableUpgradeRuntimeVersions();
    }

    /**
     * Get the clusterExtendedLocation property: ExtendedLocation represents the Azure custom location where the
     * resource will be created.
     * 
     * The extended location that represents the edge cluster's control plane location and is used to route the requests
     * for workload infrastructure resources.
     * 
     * @return the clusterExtendedLocation value.
     */
    public ExtendedLocation clusterExtendedLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterExtendedLocation();
    }

    /**
     * Get the connectedClusterId property: The resource ID of the connected cluster set up when this edge cluster is
     * created.
     * 
     * @return the connectedClusterId value.
     */
    public String connectedClusterId() {
        return this.innerProperties() == null ? null : this.innerProperties().connectedClusterId();
    }

    /**
     * Get the description property: User provided description information about the edge cluster.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: User provided description information about the edge cluster.
     * 
     * @param description the description value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the edgeClusterSkuId property: The resource ID of the SKU of the edge cluster.
     * 
     * @return the edgeClusterSkuId value.
     */
    public String edgeClusterSkuId() {
        return this.innerProperties() == null ? null : this.innerProperties().edgeClusterSkuId();
    }

    /**
     * Set the edgeClusterSkuId property: The resource ID of the SKU of the edge cluster.
     * 
     * @param edgeClusterSkuId the edgeClusterSkuId value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withEdgeClusterSkuId(String edgeClusterSkuId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withEdgeClusterSkuId(edgeClusterSkuId);
        return this;
    }

    /**
     * Get the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
     * integration properties.
     * 
     * The attributes used for Entra (Azure Active Directory) integration.
     * 
     * @return the entraConfiguration value.
     */
    public EdgeClusterEntraConfiguration entraConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().entraConfiguration();
    }

    /**
     * Set the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
     * integration properties.
     * 
     * The attributes used for Entra (Azure Active Directory) integration.
     * 
     * @param entraConfiguration the entraConfiguration value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withEntraConfiguration(EdgeClusterEntraConfiguration entraConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withEntraConfiguration(entraConfiguration);
        return this;
    }

    /**
     * Get the infrastructureResourceIds property: The list of system-controlled workload resource IDs that are
     * dependent upon the edge cluster. The presence of resource IDs inform lifecycle events for the edge cluster.
     * 
     * @return the infrastructureResourceIds value.
     */
    public List<String> infrastructureResourceIds() {
        return this.innerProperties() == null ? null : this.innerProperties().infrastructureResourceIds();
    }

    /**
     * Get the kubernetesVersion property: The Kubernetes version that is currently running on the edge cluster.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().kubernetesVersion();
    }

    /**
     * Get the lifecycleStatus property: The status representing the lifecycle stage of the edge cluster.
     * 
     * @return the lifecycleStatus value.
     */
    public EdgeClusterLifecycleStatus lifecycleStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleStatus();
    }

    /**
     * Get the managedResourceGroupConfiguration property: ManagedResourceGroupConfiguration represents the
     * configuration of the resource group managed by Azure.
     * 
     * The configuration of the managed resource group associated with the resource.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().managedResourceGroupConfiguration();
    }

    /**
     * Set the managedResourceGroupConfiguration property: ManagedResourceGroupConfiguration represents the
     * configuration of the resource group managed by Azure.
     * 
     * The configuration of the managed resource group associated with the resource.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    /**
     * Get the managementServicesVersion property: The version of the running management services.
     * 
     * @return the managementServicesVersion value.
     */
    public String managementServicesVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().managementServicesVersion();
    }

    /**
     * Get the networkFabricId property: The resource ID of the network fabric that defines the network configuration
     * for the edge cluster.
     * 
     * @return the networkFabricId value.
     */
    public String networkFabricId() {
        return this.innerProperties() == null ? null : this.innerProperties().networkFabricId();
    }

    /**
     * Set the networkFabricId property: The resource ID of the network fabric that defines the network configuration
     * for the edge cluster.
     * 
     * @param networkFabricId the networkFabricId value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withNetworkFabricId(String networkFabricId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withNetworkFabricId(networkFabricId);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the edge cluster.
     * 
     * @return the provisioningState value.
     */
    public EdgeClusterProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the ptpConfiguration property: EdgeClusterPtpConfiguration represents the PTP clock configuration for the
     * edge cluster, if applicable.
     * 
     * The PTP clock information for the edge cluster, if applicable.
     * 
     * @return the ptpConfiguration value.
     */
    public EdgeClusterPtpConfiguration ptpConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().ptpConfiguration();
    }

    /**
     * Get the registrationHubId property: The resource ID of the registration hub that the edge cluster will use to
     * register machines for edge cluster nodes.
     * 
     * @return the registrationHubId value.
     */
    public String registrationHubId() {
        return this.innerProperties() == null ? null : this.innerProperties().registrationHubId();
    }

    /**
     * Set the registrationHubId property: The resource ID of the registration hub that the edge cluster will use to
     * register machines for edge cluster nodes.
     * 
     * @param registrationHubId the registrationHubId value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withRegistrationHubId(String registrationHubId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withRegistrationHubId(registrationHubId);
        return this;
    }

    /**
     * Get the requiredEndpointAllowList property: The list of endpoints that must be accessible to the edge cluster.
     * 
     * @return the requiredEndpointAllowList value.
     */
    public List<EndpointDependency> requiredEndpointAllowList() {
        return this.innerProperties() == null ? null : this.innerProperties().requiredEndpointAllowList();
    }

    /**
     * Get the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge cluster.
     * 
     * @return the runtimeVersionId value.
     */
    public String runtimeVersionId() {
        return this.innerProperties() == null ? null : this.innerProperties().runtimeVersionId();
    }

    /**
     * Set the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge cluster.
     * 
     * @param runtimeVersionId the runtimeVersionId value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withRuntimeVersionId(String runtimeVersionId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withRuntimeVersionId(runtimeVersionId);
        return this;
    }

    /**
     * Get the supportExpiryDate property: The date after which the Edge Cluster is no longer supported using the
     * currently configured runtime version.
     * 
     * @return the supportExpiryDate value.
     */
    public String supportExpiryDate() {
        return this.innerProperties() == null ? null : this.innerProperties().supportExpiryDate();
    }

    /**
     * Get the workloadResourceIds property: The list of user-managed workload resource IDs that are dependent upon the
     * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
     * 
     * @return the workloadResourceIds value.
     */
    public List<String> workloadResourceIds() {
        return this.innerProperties() == null ? null : this.innerProperties().workloadResourceIds();
    }

    /**
     * Set the workloadResourceIds property: The list of user-managed workload resource IDs that are dependent upon the
     * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
     * 
     * @param workloadResourceIds the workloadResourceIds value to set.
     * @return the EdgeClusterInner object itself.
     */
    public EdgeClusterInner withWorkloadResourceIds(List<String> workloadResourceIds) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterProperties();
        }
        this.innerProperties().withWorkloadResourceIds(workloadResourceIds);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model EdgeClusterInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EdgeClusterInner.class);
}

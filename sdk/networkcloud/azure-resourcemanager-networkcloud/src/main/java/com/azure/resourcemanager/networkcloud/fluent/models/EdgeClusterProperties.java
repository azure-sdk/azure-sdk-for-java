// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterAvailableUpgradeRuntimeVersion;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterEntraConfiguration;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterLifecycleStatus;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterProvisioningState;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterPtpConfiguration;
import com.azure.resourcemanager.networkcloud.models.EndpointDependency;
import com.azure.resourcemanager.networkcloud.models.ExtendedLocation;
import com.azure.resourcemanager.networkcloud.models.ManagedResourceGroupConfiguration;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * EdgeClusterProperties represents the properties of an edge cluster.
 */
@Fluent
public final class EdgeClusterProperties {
    /*
     * The list of runtimes upgrades that are available for the Edge Cluster.
     */
    @JsonProperty(value = "availableUpgradeRuntimeVersions", access = JsonProperty.Access.WRITE_ONLY)
    private List<EdgeClusterAvailableUpgradeRuntimeVersion> availableUpgradeRuntimeVersions;

    /*
     * ExtendedLocation represents the Azure custom location where the resource will be created.
     * 
     * The extended location that represents the edge cluster's control plane location and is used to route the requests for workload infrastructure resources.
     */
    @JsonProperty(value = "clusterExtendedLocation", access = JsonProperty.Access.WRITE_ONLY)
    private ExtendedLocation clusterExtendedLocation;

    /*
     * The resource ID of the connected cluster set up when this edge cluster is created.
     */
    @JsonProperty(value = "connectedClusterId", access = JsonProperty.Access.WRITE_ONLY)
    private String connectedClusterId;

    /*
     * User provided description information about the edge cluster.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The resource ID of the SKU of the edge cluster.
     */
    @JsonProperty(value = "edgeClusterSkuId", required = true)
    private String edgeClusterSkuId;

    /*
     * EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory) integration properties.
     * 
     * The attributes used for Entra (Azure Active Directory) integration.
     */
    @JsonProperty(value = "entraConfiguration")
    private EdgeClusterEntraConfiguration entraConfiguration;

    /*
     * The list of system-controlled workload resource IDs that are dependent upon the edge cluster. The presence of resource IDs inform lifecycle events for the edge cluster.
     */
    @JsonProperty(value = "infrastructureResourceIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> infrastructureResourceIds;

    /*
     * The Kubernetes version that is currently running on the edge cluster.
     */
    @JsonProperty(value = "kubernetesVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String kubernetesVersion;

    /*
     * The status representing the lifecycle stage of the edge cluster.
     */
    @JsonProperty(value = "lifecycleStatus", access = JsonProperty.Access.WRITE_ONLY)
    private EdgeClusterLifecycleStatus lifecycleStatus;

    /*
     * ManagedResourceGroupConfiguration represents the configuration of the resource group managed by Azure.
     * 
     * The configuration of the managed resource group associated with the resource.
     */
    @JsonProperty(value = "managedResourceGroupConfiguration")
    private ManagedResourceGroupConfiguration managedResourceGroupConfiguration;

    /*
     * The version of the running management services.
     */
    @JsonProperty(value = "managementServicesVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String managementServicesVersion;

    /*
     * The resource ID of the network fabric that defines the network configuration for the edge cluster.
     */
    @JsonProperty(value = "networkFabricId", required = true)
    private String networkFabricId;

    /*
     * The provisioning state of the edge cluster.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private EdgeClusterProvisioningState provisioningState;

    /*
     * EdgeClusterPtpConfiguration represents the PTP clock configuration for the edge cluster, if applicable.
     * 
     * The PTP clock information for the edge cluster, if applicable.
     */
    @JsonProperty(value = "ptpConfiguration", access = JsonProperty.Access.WRITE_ONLY)
    private EdgeClusterPtpConfiguration ptpConfiguration;

    /*
     * The resource ID of the registration hub that the edge cluster will use to register machines for edge cluster nodes.
     */
    @JsonProperty(value = "registrationHubId")
    private String registrationHubId;

    /*
     * The list of endpoints that must be accessible to the edge cluster.
     */
    @JsonProperty(value = "requiredEndpointAllowList", access = JsonProperty.Access.WRITE_ONLY)
    private List<EndpointDependency> requiredEndpointAllowList;

    /*
     * The resource ID of the edge cluster runtime version for the edge cluster.
     */
    @JsonProperty(value = "runtimeVersionId", required = true)
    private String runtimeVersionId;

    /*
     * The date after which the Edge Cluster is no longer supported using the currently configured runtime version.
     */
    @JsonProperty(value = "supportExpiryDate", access = JsonProperty.Access.WRITE_ONLY)
    private String supportExpiryDate;

    /*
     * The list of user-managed workload resource IDs that are dependent upon the edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
     */
    @JsonProperty(value = "workloadResourceIds")
    private List<String> workloadResourceIds;

    /**
     * Creates an instance of EdgeClusterProperties class.
     */
    public EdgeClusterProperties() {
    }

    /**
     * Get the availableUpgradeRuntimeVersions property: The list of runtimes upgrades that are available for the Edge
     * Cluster.
     * 
     * @return the availableUpgradeRuntimeVersions value.
     */
    public List<EdgeClusterAvailableUpgradeRuntimeVersion> availableUpgradeRuntimeVersions() {
        return this.availableUpgradeRuntimeVersions;
    }

    /**
     * Get the clusterExtendedLocation property: ExtendedLocation represents the Azure custom location where the
     * resource will be created.
     * 
     * The extended location that represents the edge cluster's control plane location and is used to route the requests
     * for workload infrastructure resources.
     * 
     * @return the clusterExtendedLocation value.
     */
    public ExtendedLocation clusterExtendedLocation() {
        return this.clusterExtendedLocation;
    }

    /**
     * Get the connectedClusterId property: The resource ID of the connected cluster set up when this edge cluster is
     * created.
     * 
     * @return the connectedClusterId value.
     */
    public String connectedClusterId() {
        return this.connectedClusterId;
    }

    /**
     * Get the description property: User provided description information about the edge cluster.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: User provided description information about the edge cluster.
     * 
     * @param description the description value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the edgeClusterSkuId property: The resource ID of the SKU of the edge cluster.
     * 
     * @return the edgeClusterSkuId value.
     */
    public String edgeClusterSkuId() {
        return this.edgeClusterSkuId;
    }

    /**
     * Set the edgeClusterSkuId property: The resource ID of the SKU of the edge cluster.
     * 
     * @param edgeClusterSkuId the edgeClusterSkuId value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withEdgeClusterSkuId(String edgeClusterSkuId) {
        this.edgeClusterSkuId = edgeClusterSkuId;
        return this;
    }

    /**
     * Get the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
     * integration properties.
     * 
     * The attributes used for Entra (Azure Active Directory) integration.
     * 
     * @return the entraConfiguration value.
     */
    public EdgeClusterEntraConfiguration entraConfiguration() {
        return this.entraConfiguration;
    }

    /**
     * Set the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
     * integration properties.
     * 
     * The attributes used for Entra (Azure Active Directory) integration.
     * 
     * @param entraConfiguration the entraConfiguration value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withEntraConfiguration(EdgeClusterEntraConfiguration entraConfiguration) {
        this.entraConfiguration = entraConfiguration;
        return this;
    }

    /**
     * Get the infrastructureResourceIds property: The list of system-controlled workload resource IDs that are
     * dependent upon the edge cluster. The presence of resource IDs inform lifecycle events for the edge cluster.
     * 
     * @return the infrastructureResourceIds value.
     */
    public List<String> infrastructureResourceIds() {
        return this.infrastructureResourceIds;
    }

    /**
     * Get the kubernetesVersion property: The Kubernetes version that is currently running on the edge cluster.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }

    /**
     * Get the lifecycleStatus property: The status representing the lifecycle stage of the edge cluster.
     * 
     * @return the lifecycleStatus value.
     */
    public EdgeClusterLifecycleStatus lifecycleStatus() {
        return this.lifecycleStatus;
    }

    /**
     * Get the managedResourceGroupConfiguration property: ManagedResourceGroupConfiguration represents the
     * configuration of the resource group managed by Azure.
     * 
     * The configuration of the managed resource group associated with the resource.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.managedResourceGroupConfiguration;
    }

    /**
     * Set the managedResourceGroupConfiguration property: ManagedResourceGroupConfiguration represents the
     * configuration of the resource group managed by Azure.
     * 
     * The configuration of the managed resource group associated with the resource.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        this.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
        return this;
    }

    /**
     * Get the managementServicesVersion property: The version of the running management services.
     * 
     * @return the managementServicesVersion value.
     */
    public String managementServicesVersion() {
        return this.managementServicesVersion;
    }

    /**
     * Get the networkFabricId property: The resource ID of the network fabric that defines the network configuration
     * for the edge cluster.
     * 
     * @return the networkFabricId value.
     */
    public String networkFabricId() {
        return this.networkFabricId;
    }

    /**
     * Set the networkFabricId property: The resource ID of the network fabric that defines the network configuration
     * for the edge cluster.
     * 
     * @param networkFabricId the networkFabricId value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withNetworkFabricId(String networkFabricId) {
        this.networkFabricId = networkFabricId;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the edge cluster.
     * 
     * @return the provisioningState value.
     */
    public EdgeClusterProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the ptpConfiguration property: EdgeClusterPtpConfiguration represents the PTP clock configuration for the
     * edge cluster, if applicable.
     * 
     * The PTP clock information for the edge cluster, if applicable.
     * 
     * @return the ptpConfiguration value.
     */
    public EdgeClusterPtpConfiguration ptpConfiguration() {
        return this.ptpConfiguration;
    }

    /**
     * Get the registrationHubId property: The resource ID of the registration hub that the edge cluster will use to
     * register machines for edge cluster nodes.
     * 
     * @return the registrationHubId value.
     */
    public String registrationHubId() {
        return this.registrationHubId;
    }

    /**
     * Set the registrationHubId property: The resource ID of the registration hub that the edge cluster will use to
     * register machines for edge cluster nodes.
     * 
     * @param registrationHubId the registrationHubId value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withRegistrationHubId(String registrationHubId) {
        this.registrationHubId = registrationHubId;
        return this;
    }

    /**
     * Get the requiredEndpointAllowList property: The list of endpoints that must be accessible to the edge cluster.
     * 
     * @return the requiredEndpointAllowList value.
     */
    public List<EndpointDependency> requiredEndpointAllowList() {
        return this.requiredEndpointAllowList;
    }

    /**
     * Get the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge cluster.
     * 
     * @return the runtimeVersionId value.
     */
    public String runtimeVersionId() {
        return this.runtimeVersionId;
    }

    /**
     * Set the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge cluster.
     * 
     * @param runtimeVersionId the runtimeVersionId value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withRuntimeVersionId(String runtimeVersionId) {
        this.runtimeVersionId = runtimeVersionId;
        return this;
    }

    /**
     * Get the supportExpiryDate property: The date after which the Edge Cluster is no longer supported using the
     * currently configured runtime version.
     * 
     * @return the supportExpiryDate value.
     */
    public String supportExpiryDate() {
        return this.supportExpiryDate;
    }

    /**
     * Get the workloadResourceIds property: The list of user-managed workload resource IDs that are dependent upon the
     * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
     * 
     * @return the workloadResourceIds value.
     */
    public List<String> workloadResourceIds() {
        return this.workloadResourceIds;
    }

    /**
     * Set the workloadResourceIds property: The list of user-managed workload resource IDs that are dependent upon the
     * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
     * 
     * @param workloadResourceIds the workloadResourceIds value to set.
     * @return the EdgeClusterProperties object itself.
     */
    public EdgeClusterProperties withWorkloadResourceIds(List<String> workloadResourceIds) {
        this.workloadResourceIds = workloadResourceIds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (availableUpgradeRuntimeVersions() != null) {
            availableUpgradeRuntimeVersions().forEach(e -> e.validate());
        }
        if (clusterExtendedLocation() != null) {
            clusterExtendedLocation().validate();
        }
        if (edgeClusterSkuId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property edgeClusterSkuId in model EdgeClusterProperties"));
        }
        if (entraConfiguration() != null) {
            entraConfiguration().validate();
        }
        if (managedResourceGroupConfiguration() != null) {
            managedResourceGroupConfiguration().validate();
        }
        if (networkFabricId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property networkFabricId in model EdgeClusterProperties"));
        }
        if (ptpConfiguration() != null) {
            ptpConfiguration().validate();
        }
        if (requiredEndpointAllowList() != null) {
            requiredEndpointAllowList().forEach(e -> e.validate());
        }
        if (runtimeVersionId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property runtimeVersionId in model EdgeClusterProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EdgeClusterProperties.class);
}

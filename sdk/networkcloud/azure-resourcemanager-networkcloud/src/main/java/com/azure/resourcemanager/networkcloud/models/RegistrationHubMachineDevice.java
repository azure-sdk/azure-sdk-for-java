// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RegistrationHubMachineDevice represents the inventory of devices detected on the machineâ€™s buses.
 */
@Fluent
public final class RegistrationHubMachineDevice {
    /*
     * The PCI/bus address of the device.
     */
    @JsonProperty(value = "address", required = true)
    private String address;

    /*
     * The bus that connects this device.
     */
    @JsonProperty(value = "bus", required = true)
    private String bus;

    /*
     * The device class.
     */
    @JsonProperty(value = "class", required = true)
    private String classProperty;

    /*
     * The MAC address of a network device.
     */
    @JsonProperty(value = "macAddress", required = true)
    private String macAddress;

    /*
     * The model of the device.
     */
    @JsonProperty(value = "model", required = true)
    private String model;

    /*
     * The serial number of the device.
     */
    @JsonProperty(value = "serialNumber", required = true)
    private String serialNumber;

    /*
     * The reported capacity of a storage device. Measured in gibibytes.
     */
    @JsonProperty(value = "sizeGB", required = true)
    private long sizeGB;

    /*
     * The vendor for the device.
     */
    @JsonProperty(value = "vendor", required = true)
    private String vendor;

    /**
     * Creates an instance of RegistrationHubMachineDevice class.
     */
    public RegistrationHubMachineDevice() {
    }

    /**
     * Get the address property: The PCI/bus address of the device.
     * 
     * @return the address value.
     */
    public String address() {
        return this.address;
    }

    /**
     * Set the address property: The PCI/bus address of the device.
     * 
     * @param address the address value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get the bus property: The bus that connects this device.
     * 
     * @return the bus value.
     */
    public String bus() {
        return this.bus;
    }

    /**
     * Set the bus property: The bus that connects this device.
     * 
     * @param bus the bus value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withBus(String bus) {
        this.bus = bus;
        return this;
    }

    /**
     * Get the classProperty property: The device class.
     * 
     * @return the classProperty value.
     */
    public String classProperty() {
        return this.classProperty;
    }

    /**
     * Set the classProperty property: The device class.
     * 
     * @param classProperty the classProperty value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withClassProperty(String classProperty) {
        this.classProperty = classProperty;
        return this;
    }

    /**
     * Get the macAddress property: The MAC address of a network device.
     * 
     * @return the macAddress value.
     */
    public String macAddress() {
        return this.macAddress;
    }

    /**
     * Set the macAddress property: The MAC address of a network device.
     * 
     * @param macAddress the macAddress value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withMacAddress(String macAddress) {
        this.macAddress = macAddress;
        return this;
    }

    /**
     * Get the model property: The model of the device.
     * 
     * @return the model value.
     */
    public String model() {
        return this.model;
    }

    /**
     * Set the model property: The model of the device.
     * 
     * @param model the model value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withModel(String model) {
        this.model = model;
        return this;
    }

    /**
     * Get the serialNumber property: The serial number of the device.
     * 
     * @return the serialNumber value.
     */
    public String serialNumber() {
        return this.serialNumber;
    }

    /**
     * Set the serialNumber property: The serial number of the device.
     * 
     * @param serialNumber the serialNumber value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }

    /**
     * Get the sizeGB property: The reported capacity of a storage device. Measured in gibibytes.
     * 
     * @return the sizeGB value.
     */
    public long sizeGB() {
        return this.sizeGB;
    }

    /**
     * Set the sizeGB property: The reported capacity of a storage device. Measured in gibibytes.
     * 
     * @param sizeGB the sizeGB value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withSizeGB(long sizeGB) {
        this.sizeGB = sizeGB;
        return this;
    }

    /**
     * Get the vendor property: The vendor for the device.
     * 
     * @return the vendor value.
     */
    public String vendor() {
        return this.vendor;
    }

    /**
     * Set the vendor property: The vendor for the device.
     * 
     * @param vendor the vendor value to set.
     * @return the RegistrationHubMachineDevice object itself.
     */
    public RegistrationHubMachineDevice withVendor(String vendor) {
        this.vendor = vendor;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (address() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property address in model RegistrationHubMachineDevice"));
        }
        if (bus() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property bus in model RegistrationHubMachineDevice"));
        }
        if (classProperty() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property classProperty in model RegistrationHubMachineDevice"));
        }
        if (macAddress() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property macAddress in model RegistrationHubMachineDevice"));
        }
        if (model() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property model in model RegistrationHubMachineDevice"));
        }
        if (serialNumber() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property serialNumber in model RegistrationHubMachineDevice"));
        }
        if (vendor() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property vendor in model RegistrationHubMachineDevice"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RegistrationHubMachineDevice.class);
}

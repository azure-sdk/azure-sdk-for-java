// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.RegistrationHubMachineInner;
import com.azure.resourcemanager.networkcloud.models.OperationStatusResult;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachine;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineConfiguration;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachinePatchParameters;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineProvisioningState;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineRegistrationState;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.Map;

public final class RegistrationHubMachineImpl
    implements RegistrationHubMachine, RegistrationHubMachine.Definition, RegistrationHubMachine.Update {
    private RegistrationHubMachineInner innerObject;

    private final com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String associatedResourceId() {
        return this.innerModel().associatedResourceId();
    }

    public String description() {
        return this.innerModel().description();
    }

    public OffsetDateTime lastRegistrationPollTime() {
        return this.innerModel().lastRegistrationPollTime();
    }

    public RegistrationHubMachineConfiguration machineConfiguration() {
        return this.innerModel().machineConfiguration();
    }

    public String machineSkuId() {
        return this.innerModel().machineSkuId();
    }

    public RegistrationHubMachineProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String registrationHubImageId() {
        return this.innerModel().registrationHubImageId();
    }

    public RegistrationHubMachineRegistrationState registrationState() {
        return this.innerModel().registrationState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public RegistrationHubMachineInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.networkcloud.NetworkCloudManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registrationHubName;

    private String machineName;

    private RegistrationHubMachinePatchParameters updateRegistrationHubMachineUpdateParameters;

    public RegistrationHubMachineImpl withExistingRegistrationHub(String resourceGroupName,
        String registrationHubName) {
        this.resourceGroupName = resourceGroupName;
        this.registrationHubName = registrationHubName;
        return this;
    }

    public RegistrationHubMachine create() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubMachines()
            .createOrUpdate(resourceGroupName, registrationHubName, machineName, this.innerModel(), Context.NONE);
        return this;
    }

    public RegistrationHubMachine create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubMachines()
            .createOrUpdate(resourceGroupName, registrationHubName, machineName, this.innerModel(), context);
        return this;
    }

    RegistrationHubMachineImpl(String name, com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = new RegistrationHubMachineInner();
        this.serviceManager = serviceManager;
        this.machineName = name;
    }

    public RegistrationHubMachineImpl update() {
        this.updateRegistrationHubMachineUpdateParameters = new RegistrationHubMachinePatchParameters();
        return this;
    }

    public RegistrationHubMachine apply() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubMachines()
            .update(resourceGroupName, registrationHubName, machineName, updateRegistrationHubMachineUpdateParameters,
                Context.NONE);
        return this;
    }

    public RegistrationHubMachine apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubMachines()
            .update(resourceGroupName, registrationHubName, machineName, updateRegistrationHubMachineUpdateParameters,
                context);
        return this;
    }

    RegistrationHubMachineImpl(RegistrationHubMachineInner innerObject,
        com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registrationHubName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "registrationHubs");
        this.machineName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "machines");
    }

    public RegistrationHubMachine refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubMachines()
            .getWithResponse(resourceGroupName, registrationHubName, machineName, Context.NONE)
            .getValue();
        return this;
    }

    public RegistrationHubMachine refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubMachines()
            .getWithResponse(resourceGroupName, registrationHubName, machineName, context)
            .getValue();
        return this;
    }

    public OperationStatusResult decline() {
        return serviceManager.registrationHubMachines().decline(resourceGroupName, registrationHubName, machineName);
    }

    public OperationStatusResult decline(Context context) {
        return serviceManager.registrationHubMachines()
            .decline(resourceGroupName, registrationHubName, machineName, context);
    }

    public RegistrationHubMachineImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public RegistrationHubMachineImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public RegistrationHubMachineImpl
        withMachineConfiguration(RegistrationHubMachineConfiguration machineConfiguration) {
        this.innerModel().withMachineConfiguration(machineConfiguration);
        return this;
    }

    public RegistrationHubMachineImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateRegistrationHubMachineUpdateParameters.withTags(tags);
            return this;
        }
    }

    public RegistrationHubMachineImpl withDescription(String description) {
        if (isInCreateMode()) {
            this.innerModel().withDescription(description);
            return this;
        } else {
            this.updateRegistrationHubMachineUpdateParameters.withDescription(description);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkcloud.fluent.models.OperationStatusResultInner;
import com.azure.resourcemanager.networkcloud.fluent.models.RegistrationHubImageInner;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubImagePatchParameters;

/**
 * An instance of this class provides access to all the operations defined in RegistrationHubImagesClient.
 */
public interface RegistrationHubImagesClient {
    /**
     * List images in the registration hub.
     * 
     * Get a list of images in the provided registration hub.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of images in the provided registration hub as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistrationHubImageInner> listByRegistrationHub(String resourceGroupName,
        String registrationHubName);

    /**
     * List images in the registration hub.
     * 
     * Get a list of images in the provided registration hub.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of images in the provided registration hub as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RegistrationHubImageInner> listByRegistrationHub(String resourceGroupName, String registrationHubName,
        Context context);

    /**
     * Retrieve the registration hub image.
     * 
     * Get properties of the provided registration hub image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided registration hub image along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RegistrationHubImageInner> getWithResponse(String resourceGroupName, String registrationHubName,
        String imageName, Context context);

    /**
     * Retrieve the registration hub image.
     * 
     * Get properties of the provided registration hub image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided registration hub image.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubImageInner get(String resourceGroupName, String registrationHubName, String imageName);

    /**
     * Create or update the registration hub images.
     * 
     * Create a new registration hub image or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param registrationHubImageParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubImage represents the image used to bootstrap a
     * machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubImageInner>, RegistrationHubImageInner> beginCreateOrUpdate(
        String resourceGroupName, String registrationHubName, String imageName,
        RegistrationHubImageInner registrationHubImageParameters);

    /**
     * Create or update the registration hub images.
     * 
     * Create a new registration hub image or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param registrationHubImageParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubImage represents the image used to bootstrap a
     * machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubImageInner>, RegistrationHubImageInner> beginCreateOrUpdate(
        String resourceGroupName, String registrationHubName, String imageName,
        RegistrationHubImageInner registrationHubImageParameters, Context context);

    /**
     * Create or update the registration hub images.
     * 
     * Create a new registration hub image or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param registrationHubImageParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubImage represents the image used to bootstrap a machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubImageInner createOrUpdate(String resourceGroupName, String registrationHubName, String imageName,
        RegistrationHubImageInner registrationHubImageParameters);

    /**
     * Create or update the registration hub images.
     * 
     * Create a new registration hub image or update properties of the existing one.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param registrationHubImageParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubImage represents the image used to bootstrap a machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubImageInner createOrUpdate(String resourceGroupName, String registrationHubName, String imageName,
        RegistrationHubImageInner registrationHubImageParameters, Context context);

    /**
     * Delete the registration hub image.
     * 
     * Delete the provided registration hub image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginDelete(String resourceGroupName,
        String registrationHubName, String imageName);

    /**
     * Delete the registration hub image.
     * 
     * Delete the provided registration hub image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginDelete(String resourceGroupName,
        String registrationHubName, String imageName, Context context);

    /**
     * Delete the registration hub image.
     * 
     * Delete the provided registration hub image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner delete(String resourceGroupName, String registrationHubName, String imageName);

    /**
     * Delete the registration hub image.
     * 
     * Delete the provided registration hub image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner delete(String resourceGroupName, String registrationHubName, String imageName,
        Context context);

    /**
     * Patch the registration hub image.
     * 
     * Patch properties of the provided registration hub image, or update the tags associated with the registration hub
     * image. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubImage represents the image used to bootstrap a
     * machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubImageInner>, RegistrationHubImageInner> beginUpdate(String resourceGroupName,
        String registrationHubName, String imageName);

    /**
     * Patch the registration hub image.
     * 
     * Patch properties of the provided registration hub image, or update the tags associated with the registration hub
     * image. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param registrationHubImageUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of registrationHubImage represents the image used to bootstrap a
     * machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RegistrationHubImageInner>, RegistrationHubImageInner> beginUpdate(String resourceGroupName,
        String registrationHubName, String imageName,
        RegistrationHubImagePatchParameters registrationHubImageUpdateParameters, Context context);

    /**
     * Patch the registration hub image.
     * 
     * Patch properties of the provided registration hub image, or update the tags associated with the registration hub
     * image. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubImage represents the image used to bootstrap a machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubImageInner update(String resourceGroupName, String registrationHubName, String imageName);

    /**
     * Patch the registration hub image.
     * 
     * Patch properties of the provided registration hub image, or update the tags associated with the registration hub
     * image. Properties and tag updates can be done independently.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registrationHubName The name of the registration hub.
     * @param imageName The name of the registration hub image.
     * @param registrationHubImageUpdateParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return registrationHubImage represents the image used to bootstrap a machine in Edge Cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RegistrationHubImageInner update(String resourceGroupName, String registrationHubName, String imageName,
        RegistrationHubImagePatchParameters registrationHubImageUpdateParameters, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClusterSecretArchive configures the key vault to archive the secrets of the cluster for later retrieval.
 */
@Fluent
public final class ClusterSecretArchive {
    /*
     * The resource ID of the key vault to archive the secrets of the cluster.
     */
    @JsonProperty(value = "keyVaultId", required = true)
    private String keyVaultId;

    /*
     * The indicator if the specified key vault should be used to archive the secrets of the cluster.
     */
    @JsonProperty(value = "useKeyVault")
    private ClusterSecretArchiveEnabled useKeyVault;

    /**
     * Creates an instance of ClusterSecretArchive class.
     */
    public ClusterSecretArchive() {
    }

    /**
     * Get the keyVaultId property: The resource ID of the key vault to archive the secrets of the cluster.
     * 
     * @return the keyVaultId value.
     */
    public String keyVaultId() {
        return this.keyVaultId;
    }

    /**
     * Set the keyVaultId property: The resource ID of the key vault to archive the secrets of the cluster.
     * 
     * @param keyVaultId the keyVaultId value to set.
     * @return the ClusterSecretArchive object itself.
     */
    public ClusterSecretArchive withKeyVaultId(String keyVaultId) {
        this.keyVaultId = keyVaultId;
        return this;
    }

    /**
     * Get the useKeyVault property: The indicator if the specified key vault should be used to archive the secrets of
     * the cluster.
     * 
     * @return the useKeyVault value.
     */
    public ClusterSecretArchiveEnabled useKeyVault() {
        return this.useKeyVault;
    }

    /**
     * Set the useKeyVault property: The indicator if the specified key vault should be used to archive the secrets of
     * the cluster.
     * 
     * @param useKeyVault the useKeyVault value to set.
     * @return the ClusterSecretArchive object itself.
     */
    public ClusterSecretArchive withUseKeyVault(ClusterSecretArchiveEnabled useKeyVault) {
        this.useKeyVault = useKeyVault;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (keyVaultId() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property keyVaultId in model ClusterSecretArchive"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterSecretArchive.class);
}

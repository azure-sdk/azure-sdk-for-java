// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.fluent.EdgeClustersClient;
import com.azure.resourcemanager.networkcloud.fluent.models.CredentialResultsInner;
import com.azure.resourcemanager.networkcloud.fluent.models.EdgeClusterInner;
import com.azure.resourcemanager.networkcloud.fluent.models.OperationStatusResultInner;
import com.azure.resourcemanager.networkcloud.models.CredentialResults;
import com.azure.resourcemanager.networkcloud.models.EdgeCluster;
import com.azure.resourcemanager.networkcloud.models.EdgeClusters;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterStageRuntimeParameters;
import com.azure.resourcemanager.networkcloud.models.ListUserCredentialParameters;
import com.azure.resourcemanager.networkcloud.models.OperationStatusResult;

public final class EdgeClustersImpl implements EdgeClusters {
    private static final ClientLogger LOGGER = new ClientLogger(EdgeClustersImpl.class);

    private final EdgeClustersClient innerClient;

    private final com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager;

    public EdgeClustersImpl(EdgeClustersClient innerClient,
        com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<EdgeCluster> list() {
        PagedIterable<EdgeClusterInner> inner = this.serviceClient().list();
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EdgeClusterImpl(inner1, this.manager()));
    }

    public PagedIterable<EdgeCluster> list(Context context) {
        PagedIterable<EdgeClusterInner> inner = this.serviceClient().list(context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EdgeClusterImpl(inner1, this.manager()));
    }

    public PagedIterable<EdgeCluster> listByResourceGroup(String resourceGroupName) {
        PagedIterable<EdgeClusterInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EdgeClusterImpl(inner1, this.manager()));
    }

    public PagedIterable<EdgeCluster> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<EdgeClusterInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EdgeClusterImpl(inner1, this.manager()));
    }

    public Response<EdgeCluster> getByResourceGroupWithResponse(String resourceGroupName, String edgeClusterName,
        Context context) {
        Response<EdgeClusterInner> inner
            = this.serviceClient().getByResourceGroupWithResponse(resourceGroupName, edgeClusterName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new EdgeClusterImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public EdgeCluster getByResourceGroup(String resourceGroupName, String edgeClusterName) {
        EdgeClusterInner inner = this.serviceClient().getByResourceGroup(resourceGroupName, edgeClusterName);
        if (inner != null) {
            return new EdgeClusterImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OperationStatusResult deleteByResourceGroup(String resourceGroupName, String edgeClusterName) {
        OperationStatusResultInner inner = this.serviceClient().delete(resourceGroupName, edgeClusterName);
        if (inner != null) {
            return new OperationStatusResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OperationStatusResult delete(String resourceGroupName, String edgeClusterName, Context context) {
        OperationStatusResultInner inner = this.serviceClient().delete(resourceGroupName, edgeClusterName, context);
        if (inner != null) {
            return new OperationStatusResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CredentialResults> listClusterUserCredentialWithResponse(String resourceGroupName,
        String edgeClusterName, ListUserCredentialParameters listUserCredentialParameters, Context context) {
        Response<CredentialResultsInner> inner = this.serviceClient()
            .listClusterUserCredentialWithResponse(resourceGroupName, edgeClusterName, listUserCredentialParameters,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CredentialResultsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CredentialResults listClusterUserCredential(String resourceGroupName, String edgeClusterName) {
        CredentialResultsInner inner
            = this.serviceClient().listClusterUserCredential(resourceGroupName, edgeClusterName);
        if (inner != null) {
            return new CredentialResultsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OperationStatusResult stageRuntime(String resourceGroupName, String edgeClusterName,
        EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters) {
        OperationStatusResultInner inner
            = this.serviceClient().stageRuntime(resourceGroupName, edgeClusterName, edgeClusterStageRuntimeParameters);
        if (inner != null) {
            return new OperationStatusResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OperationStatusResult stageRuntime(String resourceGroupName, String edgeClusterName,
        EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters, Context context) {
        OperationStatusResultInner inner = this.serviceClient()
            .stageRuntime(resourceGroupName, edgeClusterName, edgeClusterStageRuntimeParameters, context);
        if (inner != null) {
            return new OperationStatusResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public EdgeCluster getById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String edgeClusterName = ResourceManagerUtils.getValueFromIdByName(id, "edgeClusters");
        if (edgeClusterName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'edgeClusters'.", id)));
        }
        return this.getByResourceGroupWithResponse(resourceGroupName, edgeClusterName, Context.NONE).getValue();
    }

    public Response<EdgeCluster> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String edgeClusterName = ResourceManagerUtils.getValueFromIdByName(id, "edgeClusters");
        if (edgeClusterName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'edgeClusters'.", id)));
        }
        return this.getByResourceGroupWithResponse(resourceGroupName, edgeClusterName, context);
    }

    public OperationStatusResult deleteById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String edgeClusterName = ResourceManagerUtils.getValueFromIdByName(id, "edgeClusters");
        if (edgeClusterName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'edgeClusters'.", id)));
        }
        return this.delete(resourceGroupName, edgeClusterName, Context.NONE);
    }

    public OperationStatusResult deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String edgeClusterName = ResourceManagerUtils.getValueFromIdByName(id, "edgeClusters");
        if (edgeClusterName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'edgeClusters'.", id)));
        }
        return this.delete(resourceGroupName, edgeClusterName, context);
    }

    private EdgeClustersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.networkcloud.NetworkCloudManager manager() {
        return this.serviceManager;
    }

    public EdgeClusterImpl define(String name) {
        return new EdgeClusterImpl(name, this.manager());
    }
}

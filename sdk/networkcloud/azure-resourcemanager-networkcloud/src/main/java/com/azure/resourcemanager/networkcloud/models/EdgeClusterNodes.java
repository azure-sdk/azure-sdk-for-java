// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of EdgeClusterNodes.
 */
public interface EdgeClusterNodes {
    /**
     * List edge cluster nodes in the edge cluster.
     * 
     * Get a list of edge cluster nodes in the provided edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of edge cluster nodes in the provided edge cluster as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EdgeClusterNode> listByEdgeCluster(String resourceGroupName, String edgeClusterName);

    /**
     * List edge cluster nodes in the edge cluster.
     * 
     * Get a list of edge cluster nodes in the provided edge cluster.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of edge cluster nodes in the provided edge cluster as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<EdgeClusterNode> listByEdgeCluster(String resourceGroupName, String edgeClusterName, Context context);

    /**
     * Retrieve the edge cluster node.
     * 
     * Get properties of the provided the edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster node along with {@link Response}.
     */
    Response<EdgeClusterNode> getWithResponse(String resourceGroupName, String edgeClusterName, String nodeName,
        Context context);

    /**
     * Retrieve the edge cluster node.
     * 
     * Get properties of the provided the edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster node.
     */
    EdgeClusterNode get(String resourceGroupName, String edgeClusterName, String nodeName);

    /**
     * Delete the edge cluster node.
     * 
     * Delete the provided edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(String resourceGroupName, String edgeClusterName, String nodeName);

    /**
     * Delete the edge cluster node.
     * 
     * Delete the provided edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult delete(String resourceGroupName, String edgeClusterName, String nodeName, Context context);

    /**
     * Reimage the edge cluster node.
     * 
     * Reimages the edge cluster node, returning it to a refreshed OS image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult reimage(String resourceGroupName, String edgeClusterName, String nodeName);

    /**
     * Reimage the edge cluster node.
     * 
     * Reimages the edge cluster node, returning it to a refreshed OS image.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult reimage(String resourceGroupName, String edgeClusterName, String nodeName, Context context);

    /**
     * Restart the edge cluster node.
     * 
     * Restarts the edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult restart(String resourceGroupName, String edgeClusterName, String nodeName);

    /**
     * Restart the edge cluster node.
     * 
     * Restarts the edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult restart(String resourceGroupName, String edgeClusterName, String nodeName, Context context);

    /**
     * Synchronize time for the edge cluster node.
     * 
     * Synchronizes the time for the edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult synchronizeTime(String resourceGroupName, String edgeClusterName, String nodeName);

    /**
     * Synchronize time for the edge cluster node.
     * 
     * Synchronizes the time for the edge cluster node.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param edgeClusterName The name of the edge cluster.
     * @param nodeName The name of the node.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult synchronizeTime(String resourceGroupName, String edgeClusterName, String nodeName,
        Context context);

    /**
     * Retrieve the edge cluster node.
     * 
     * Get properties of the provided the edge cluster node.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster node along with {@link Response}.
     */
    EdgeClusterNode getById(String id);

    /**
     * Retrieve the edge cluster node.
     * 
     * Get properties of the provided the edge cluster node.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of the provided the edge cluster node along with {@link Response}.
     */
    Response<EdgeClusterNode> getByIdWithResponse(String id, Context context);

    /**
     * Delete the edge cluster node.
     * 
     * Delete the provided edge cluster node.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteById(String id);

    /**
     * Delete the edge cluster node.
     * 
     * Delete the provided edge cluster node.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new EdgeClusterNode resource.
     * 
     * @param name resource name.
     * @return the first stage of the new EdgeClusterNode definition.
     */
    EdgeClusterNode.DefinitionStages.Blank define(String name);
}

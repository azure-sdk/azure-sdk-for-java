// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * RegistrationHub represents the resource responsible for onboarding and bootstrapping of machines that are used in
 * Edge Clusters.
 */
@Fluent
public final class RegistrationHubInner extends Resource {
    /*
     * RegistrationHubProperties represents the user-provided information about the registration hub.
     * 
     * The list of the resource properties.
     */
    @JsonProperty(value = "properties", required = true)
    private RegistrationHubProperties innerProperties = new RegistrationHubProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of RegistrationHubInner class.
     */
    public RegistrationHubInner() {
    }

    /**
     * Get the innerProperties property: RegistrationHubProperties represents the user-provided information about the
     * registration hub.
     * 
     * The list of the resource properties.
     * 
     * @return the innerProperties value.
     */
    private RegistrationHubProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationHubInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationHubInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the azureRelayEndpoint property: The URL to access the azure relay for the registration hub.
     * 
     * @return the azureRelayEndpoint value.
     */
    public String azureRelayEndpoint() {
        return this.innerProperties() == null ? null : this.innerProperties().azureRelayEndpoint();
    }

    /**
     * Get the azureRelayId property: The resource ID of the relay that has been set up to serve the registration hub.
     * 
     * @return the azureRelayId value.
     */
    public String azureRelayId() {
        return this.innerProperties() == null ? null : this.innerProperties().azureRelayId();
    }

    /**
     * Get the description property: The user-provided information about the registration hub.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The user-provided information about the registration hub.
     * 
     * @param description the description value to set.
     * @return the RegistrationHubInner object itself.
     */
    public RegistrationHubInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RegistrationHubProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the registration hub resource.
     * 
     * @return the provisioningState value.
     */
    public RegistrationHubProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model RegistrationHubInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RegistrationHubInner.class);
}

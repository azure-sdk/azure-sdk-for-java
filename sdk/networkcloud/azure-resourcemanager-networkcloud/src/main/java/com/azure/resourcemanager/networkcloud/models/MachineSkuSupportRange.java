// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MachineSkuSupportRange represents a range of supported machine SKUs for an edge cluster.
 */
@Fluent
public final class MachineSkuSupportRange {
    /*
     * The resource ID of the edge cluster machine SKU supported.
     */
    @JsonProperty(value = "machineSkuId", access = JsonProperty.Access.WRITE_ONLY)
    private String machineSkuId;

    /*
     * VersionRange represents a range of versions.
     * 
     * The range of versions supported for the edge cluster machine SKU.
     */
    @JsonProperty(value = "versionRange")
    private VersionRange versionRange;

    /**
     * Creates an instance of MachineSkuSupportRange class.
     */
    public MachineSkuSupportRange() {
    }

    /**
     * Get the machineSkuId property: The resource ID of the edge cluster machine SKU supported.
     * 
     * @return the machineSkuId value.
     */
    public String machineSkuId() {
        return this.machineSkuId;
    }

    /**
     * Get the versionRange property: VersionRange represents a range of versions.
     * 
     * The range of versions supported for the edge cluster machine SKU.
     * 
     * @return the versionRange value.
     */
    public VersionRange versionRange() {
        return this.versionRange;
    }

    /**
     * Set the versionRange property: VersionRange represents a range of versions.
     * 
     * The range of versions supported for the edge cluster machine SKU.
     * 
     * @param versionRange the versionRange value to set.
     * @return the MachineSkuSupportRange object itself.
     */
    public MachineSkuSupportRange withVersionRange(VersionRange versionRange) {
        this.versionRange = versionRange;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (versionRange() != null) {
            versionRange().validate();
        }
    }
}

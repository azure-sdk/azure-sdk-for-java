// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineConfiguration;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineProvisioningState;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineRegistrationState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * RegistrationHubMachineProperties represents the properties of a registration hub machine.
 */
@Fluent
public final class RegistrationHubMachineProperties {
    /*
     * The resource ID of the edge cluster node that has been associated with this machine.
     */
    @JsonProperty(value = "associatedResourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String associatedResourceId;

    /*
     * The user-provided freeform description for the machine.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The timestamp of the last polling request from a machine that is undergoing registration.
     */
    @JsonProperty(value = "lastRegistrationPollTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastRegistrationPollTime;

    /*
     * RegistrationHubMachineConfiguration represents details of the hardware configuration of the machine supplied during the registration process.
     * 
     * The hardware configuration of the machine supplied during the registration process.
     */
    @JsonProperty(value = "machineConfiguration", required = true)
    private RegistrationHubMachineConfiguration machineConfiguration;

    /*
     * The resource ID of the machine SKU that is identified by the hardware information provided for the machine.
     */
    @JsonProperty(value = "machineSkuId", access = JsonProperty.Access.WRITE_ONLY)
    private String machineSkuId;

    /*
     * The provisioning state of the registration hub machine resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private RegistrationHubMachineProvisioningState provisioningState;

    /*
     * The resource ID of the registration hub image that was used to bootstrap the machine.
     */
    @JsonProperty(value = "registrationHubImageId", access = JsonProperty.Access.WRITE_ONLY)
    private String registrationHubImageId;

    /*
     * The stage and disposition of the registration for the machine.
     */
    @JsonProperty(value = "registrationState", access = JsonProperty.Access.WRITE_ONLY)
    private RegistrationHubMachineRegistrationState registrationState;

    /**
     * Creates an instance of RegistrationHubMachineProperties class.
     */
    public RegistrationHubMachineProperties() {
    }

    /**
     * Get the associatedResourceId property: The resource ID of the edge cluster node that has been associated with
     * this machine.
     * 
     * @return the associatedResourceId value.
     */
    public String associatedResourceId() {
        return this.associatedResourceId;
    }

    /**
     * Get the description property: The user-provided freeform description for the machine.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The user-provided freeform description for the machine.
     * 
     * @param description the description value to set.
     * @return the RegistrationHubMachineProperties object itself.
     */
    public RegistrationHubMachineProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the lastRegistrationPollTime property: The timestamp of the last polling request from a machine that is
     * undergoing registration.
     * 
     * @return the lastRegistrationPollTime value.
     */
    public OffsetDateTime lastRegistrationPollTime() {
        return this.lastRegistrationPollTime;
    }

    /**
     * Get the machineConfiguration property: RegistrationHubMachineConfiguration represents details of the hardware
     * configuration of the machine supplied during the registration process.
     * 
     * The hardware configuration of the machine supplied during the registration process.
     * 
     * @return the machineConfiguration value.
     */
    public RegistrationHubMachineConfiguration machineConfiguration() {
        return this.machineConfiguration;
    }

    /**
     * Set the machineConfiguration property: RegistrationHubMachineConfiguration represents details of the hardware
     * configuration of the machine supplied during the registration process.
     * 
     * The hardware configuration of the machine supplied during the registration process.
     * 
     * @param machineConfiguration the machineConfiguration value to set.
     * @return the RegistrationHubMachineProperties object itself.
     */
    public RegistrationHubMachineProperties
        withMachineConfiguration(RegistrationHubMachineConfiguration machineConfiguration) {
        this.machineConfiguration = machineConfiguration;
        return this;
    }

    /**
     * Get the machineSkuId property: The resource ID of the machine SKU that is identified by the hardware information
     * provided for the machine.
     * 
     * @return the machineSkuId value.
     */
    public String machineSkuId() {
        return this.machineSkuId;
    }

    /**
     * Get the provisioningState property: The provisioning state of the registration hub machine resource.
     * 
     * @return the provisioningState value.
     */
    public RegistrationHubMachineProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the registrationHubImageId property: The resource ID of the registration hub image that was used to bootstrap
     * the machine.
     * 
     * @return the registrationHubImageId value.
     */
    public String registrationHubImageId() {
        return this.registrationHubImageId;
    }

    /**
     * Get the registrationState property: The stage and disposition of the registration for the machine.
     * 
     * @return the registrationState value.
     */
    public RegistrationHubMachineRegistrationState registrationState() {
        return this.registrationState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (machineConfiguration() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property machineConfiguration in model RegistrationHubMachineProperties"));
        } else {
            machineConfiguration().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RegistrationHubMachineProperties.class);
}

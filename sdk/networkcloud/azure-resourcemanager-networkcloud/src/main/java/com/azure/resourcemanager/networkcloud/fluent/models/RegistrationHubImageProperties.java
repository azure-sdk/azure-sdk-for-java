// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.networkcloud.models.AllowRegistration;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubImageProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RegistrationHubImageProperties represents the properties of a registration hub image.
 */
@Fluent
public final class RegistrationHubImageProperties {
    /*
     * The indicator of whether the image can be used to register machines.
     */
    @JsonProperty(value = "allowRegistration")
    private AllowRegistration allowRegistration;

    /*
     * The base64 encoded client configuration that contains the system provided information for the bootstrap process.
     */
    @JsonProperty(value = "clientConfiguration", access = JsonProperty.Access.WRITE_ONLY)
    private String clientConfiguration;

    /*
     * The base64 encoded configuration that can be modified with custom settings for the bootstrap process.
     */
    @JsonProperty(value = "customConfiguration", access = JsonProperty.Access.WRITE_ONLY)
    private String customConfiguration;

    /*
     * The user provided information about the registration hub image.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The URI where the bootstrap image can be downloaded from.
     */
    @JsonProperty(value = "imageDownloadUri", access = JsonProperty.Access.WRITE_ONLY)
    private String imageDownloadUri;

    /*
     * The unique identifier that represents this image.
     */
    @JsonProperty(value = "imageUniqueId")
    private String imageUniqueId;

    /*
     * The provisioning state of the registration hub image resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private RegistrationHubImageProvisioningState provisioningState;

    /**
     * Creates an instance of RegistrationHubImageProperties class.
     */
    public RegistrationHubImageProperties() {
    }

    /**
     * Get the allowRegistration property: The indicator of whether the image can be used to register machines.
     * 
     * @return the allowRegistration value.
     */
    public AllowRegistration allowRegistration() {
        return this.allowRegistration;
    }

    /**
     * Set the allowRegistration property: The indicator of whether the image can be used to register machines.
     * 
     * @param allowRegistration the allowRegistration value to set.
     * @return the RegistrationHubImageProperties object itself.
     */
    public RegistrationHubImageProperties withAllowRegistration(AllowRegistration allowRegistration) {
        this.allowRegistration = allowRegistration;
        return this;
    }

    /**
     * Get the clientConfiguration property: The base64 encoded client configuration that contains the system provided
     * information for the bootstrap process.
     * 
     * @return the clientConfiguration value.
     */
    public String clientConfiguration() {
        return this.clientConfiguration;
    }

    /**
     * Get the customConfiguration property: The base64 encoded configuration that can be modified with custom settings
     * for the bootstrap process.
     * 
     * @return the customConfiguration value.
     */
    public String customConfiguration() {
        return this.customConfiguration;
    }

    /**
     * Get the description property: The user provided information about the registration hub image.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The user provided information about the registration hub image.
     * 
     * @param description the description value to set.
     * @return the RegistrationHubImageProperties object itself.
     */
    public RegistrationHubImageProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the imageDownloadUri property: The URI where the bootstrap image can be downloaded from.
     * 
     * @return the imageDownloadUri value.
     */
    public String imageDownloadUri() {
        return this.imageDownloadUri;
    }

    /**
     * Get the imageUniqueId property: The unique identifier that represents this image.
     * 
     * @return the imageUniqueId value.
     */
    public String imageUniqueId() {
        return this.imageUniqueId;
    }

    /**
     * Set the imageUniqueId property: The unique identifier that represents this image.
     * 
     * @param imageUniqueId the imageUniqueId value to set.
     * @return the RegistrationHubImageProperties object itself.
     */
    public RegistrationHubImageProperties withImageUniqueId(String imageUniqueId) {
        this.imageUniqueId = imageUniqueId;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the registration hub image resource.
     * 
     * @return the provisioningState value.
     */
    public RegistrationHubImageProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

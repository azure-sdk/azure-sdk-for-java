// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HybridConnectionConfig represents the rendezvous endpoint and sender access token.
 */
@Immutable
public final class HybridConnectionConfig {
    /*
     * ExpirationTime the the timestamp when the token will be expired.
     */
    @JsonProperty(value = "expirationTime", access = JsonProperty.Access.WRITE_ONLY)
    private Long expirationTime;

    /*
     * HybridConnectionName is the name of the hybrid connection.
     */
    @JsonProperty(value = "hybridConnectionName", access = JsonProperty.Access.WRITE_ONLY)
    private String hybridConnectionName;

    /*
     * Relay is the name of the relay.
     */
    @JsonProperty(value = "relay", access = JsonProperty.Access.WRITE_ONLY)
    private String relay;

    /*
     * Token is the sender access token.
     */
    @JsonProperty(value = "token", access = JsonProperty.Access.WRITE_ONLY)
    private String token;

    /**
     * Creates an instance of HybridConnectionConfig class.
     */
    public HybridConnectionConfig() {
    }

    /**
     * Get the expirationTime property: ExpirationTime the the timestamp when the token will be expired.
     * 
     * @return the expirationTime value.
     */
    public Long expirationTime() {
        return this.expirationTime;
    }

    /**
     * Get the hybridConnectionName property: HybridConnectionName is the name of the hybrid connection.
     * 
     * @return the hybridConnectionName value.
     */
    public String hybridConnectionName() {
        return this.hybridConnectionName;
    }

    /**
     * Get the relay property: Relay is the name of the relay.
     * 
     * @return the relay value.
     */
    public String relay() {
        return this.relay;
    }

    /**
     * Get the token property: Token is the sender access token.
     * 
     * @return the token value.
     */
    public String token() {
        return this.token;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

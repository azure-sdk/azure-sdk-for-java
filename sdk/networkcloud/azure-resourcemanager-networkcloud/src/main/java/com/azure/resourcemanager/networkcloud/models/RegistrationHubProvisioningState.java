// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * The provisioning state of the registration hub resource.
 */
public final class RegistrationHubProvisioningState extends ExpandableStringEnum<RegistrationHubProvisioningState> {
    /**
     * Static value Succeeded for RegistrationHubProvisioningState.
     */
    public static final RegistrationHubProvisioningState SUCCEEDED = fromString("Succeeded");

    /**
     * Static value Failed for RegistrationHubProvisioningState.
     */
    public static final RegistrationHubProvisioningState FAILED = fromString("Failed");

    /**
     * Static value Canceled for RegistrationHubProvisioningState.
     */
    public static final RegistrationHubProvisioningState CANCELED = fromString("Canceled");

    /**
     * Static value Accepted for RegistrationHubProvisioningState.
     */
    public static final RegistrationHubProvisioningState ACCEPTED = fromString("Accepted");

    /**
     * Creates a new instance of RegistrationHubProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public RegistrationHubProvisioningState() {
    }

    /**
     * Creates or finds a RegistrationHubProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding RegistrationHubProvisioningState.
     */
    @JsonCreator
    public static RegistrationHubProvisioningState fromString(String name) {
        return fromString(name, RegistrationHubProvisioningState.class);
    }

    /**
     * Gets known RegistrationHubProvisioningState values.
     * 
     * @return known RegistrationHubProvisioningState values.
     */
    public static Collection<RegistrationHubProvisioningState> values() {
        return values(RegistrationHubProvisioningState.class);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.RegistrationHubMachineInner;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * An immutable client-side representation of RegistrationHubMachine.
 */
public interface RegistrationHubMachine {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the associatedResourceId property: The resource ID of the edge cluster node that has been associated with
     * this machine.
     * 
     * @return the associatedResourceId value.
     */
    String associatedResourceId();

    /**
     * Gets the description property: The user-provided freeform description for the machine.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the lastRegistrationPollTime property: The timestamp of the last polling request from a machine that is
     * undergoing registration.
     * 
     * @return the lastRegistrationPollTime value.
     */
    OffsetDateTime lastRegistrationPollTime();

    /**
     * Gets the machineConfiguration property: RegistrationHubMachineConfiguration represents details of the hardware
     * configuration of the machine supplied during the registration process.
     * 
     * The hardware configuration of the machine supplied during the registration process.
     * 
     * @return the machineConfiguration value.
     */
    RegistrationHubMachineConfiguration machineConfiguration();

    /**
     * Gets the machineSkuId property: The resource ID of the machine SKU that is identified by the hardware information
     * provided for the machine.
     * 
     * @return the machineSkuId value.
     */
    String machineSkuId();

    /**
     * Gets the provisioningState property: The provisioning state of the registration hub machine resource.
     * 
     * @return the provisioningState value.
     */
    RegistrationHubMachineProvisioningState provisioningState();

    /**
     * Gets the registrationHubImageId property: The resource ID of the registration hub image that was used to
     * bootstrap the machine.
     * 
     * @return the registrationHubImageId value.
     */
    String registrationHubImageId();

    /**
     * Gets the registrationState property: The stage and disposition of the registration for the machine.
     * 
     * @return the registrationState value.
     */
    RegistrationHubMachineRegistrationState registrationState();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkcloud.fluent.models.RegistrationHubMachineInner object.
     * 
     * @return the inner object.
     */
    RegistrationHubMachineInner innerModel();

    /**
     * The entirety of the RegistrationHubMachine definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithMachineConfiguration, DefinitionStages.WithCreate {
    }

    /**
     * The RegistrationHubMachine definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the RegistrationHubMachine definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the RegistrationHubMachine definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the RegistrationHubMachine definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, registrationHubName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param registrationHubName The name of the registration hub.
             * @return the next definition stage.
             */
            WithMachineConfiguration withExistingRegistrationHub(String resourceGroupName, String registrationHubName);
        }

        /**
         * The stage of the RegistrationHubMachine definition allowing to specify machineConfiguration.
         */
        interface WithMachineConfiguration {
            /**
             * Specifies the machineConfiguration property: RegistrationHubMachineConfiguration represents details of
             * the hardware configuration of the machine supplied during the registration process.
             * 
             * The hardware configuration of the machine supplied during the registration process..
             * 
             * @param machineConfiguration RegistrationHubMachineConfiguration represents details of the hardware
             * configuration of the machine supplied during the registration process.
             * 
             * The hardware configuration of the machine supplied during the registration process.
             * @return the next definition stage.
             */
            WithCreate withMachineConfiguration(RegistrationHubMachineConfiguration machineConfiguration);
        }

        /**
         * The stage of the RegistrationHubMachine definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithDescription {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            RegistrationHubMachine create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RegistrationHubMachine create(Context context);
        }

        /**
         * The stage of the RegistrationHubMachine definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the RegistrationHubMachine definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: The user-provided freeform description for the machine..
             * 
             * @param description The user-provided freeform description for the machine.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
    }

    /**
     * Begins update for the RegistrationHubMachine resource.
     * 
     * @return the stage of resource update.
     */
    RegistrationHubMachine.Update update();

    /**
     * The template for RegistrationHubMachine update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithDescription {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        RegistrationHubMachine apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RegistrationHubMachine apply(Context context);
    }

    /**
     * The RegistrationHubMachine update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the RegistrationHubMachine update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: The Azure resource tags that will replace the existing ones..
             * 
             * @param tags The Azure resource tags that will replace the existing ones.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the RegistrationHubMachine update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: The user-provided freeform description for the machine..
             * 
             * @param description The user-provided freeform description for the machine.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    RegistrationHubMachine refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RegistrationHubMachine refresh(Context context);

    /**
     * Decline the machine
     * 
     * Declines a machine that is pending approval during registration. This effectively “dead ends” this machine and is
     * an explicit refusal to let the machine proceed with further provisioning.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult decline();

    /**
     * Decline the machine
     * 
     * Declines a machine that is pending approval during registration. This effectively “dead ends” this machine and is
     * an explicit refusal to let the machine proceed with further provisioning.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult decline(Context context);
}

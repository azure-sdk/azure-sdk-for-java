// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.RegistrationHubInner;
import com.azure.resourcemanager.networkcloud.models.RegistrationHub;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubPatchParameters;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class RegistrationHubImpl implements RegistrationHub, RegistrationHub.Definition, RegistrationHub.Update {
    private RegistrationHubInner innerObject;

    private final com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String azureRelayEndpoint() {
        return this.innerModel().azureRelayEndpoint();
    }

    public String azureRelayId() {
        return this.innerModel().azureRelayId();
    }

    public String description() {
        return this.innerModel().description();
    }

    public RegistrationHubProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public RegistrationHubInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.networkcloud.NetworkCloudManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registrationHubName;

    private RegistrationHubPatchParameters updateRegistrationHubUpdateParameters;

    public RegistrationHubImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public RegistrationHub create() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubs()
            .createOrUpdate(resourceGroupName, registrationHubName, this.innerModel(), Context.NONE);
        return this;
    }

    public RegistrationHub create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubs()
            .createOrUpdate(resourceGroupName, registrationHubName, this.innerModel(), context);
        return this;
    }

    RegistrationHubImpl(String name, com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = new RegistrationHubInner();
        this.serviceManager = serviceManager;
        this.registrationHubName = name;
    }

    public RegistrationHubImpl update() {
        this.updateRegistrationHubUpdateParameters = new RegistrationHubPatchParameters();
        return this;
    }

    public RegistrationHub apply() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubs()
            .update(resourceGroupName, registrationHubName, updateRegistrationHubUpdateParameters, Context.NONE);
        return this;
    }

    public RegistrationHub apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubs()
            .update(resourceGroupName, registrationHubName, updateRegistrationHubUpdateParameters, context);
        return this;
    }

    RegistrationHubImpl(RegistrationHubInner innerObject,
        com.azure.resourcemanager.networkcloud.NetworkCloudManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registrationHubName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "registrationHubs");
    }

    public RegistrationHub refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubs()
            .getByResourceGroupWithResponse(resourceGroupName, registrationHubName, Context.NONE)
            .getValue();
        return this;
    }

    public RegistrationHub refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRegistrationHubs()
            .getByResourceGroupWithResponse(resourceGroupName, registrationHubName, context)
            .getValue();
        return this;
    }

    public RegistrationHubImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public RegistrationHubImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public RegistrationHubImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateRegistrationHubUpdateParameters.withTags(tags);
            return this;
        }
    }

    public RegistrationHubImpl withDescription(String description) {
        if (isInCreateMode()) {
            this.innerModel().withDescription(description);
            return this;
        } else {
            this.updateRegistrationHubUpdateParameters.withDescription(description);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

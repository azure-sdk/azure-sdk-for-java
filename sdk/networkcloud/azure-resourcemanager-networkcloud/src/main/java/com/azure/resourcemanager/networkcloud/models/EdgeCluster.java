// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkcloud.fluent.models.EdgeClusterInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of EdgeCluster.
 */
public interface EdgeCluster {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The identity of the edge cluster.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the availableUpgradeRuntimeVersions property: The list of runtimes upgrades that are available for the Edge
     * Cluster.
     * 
     * @return the availableUpgradeRuntimeVersions value.
     */
    List<EdgeClusterAvailableUpgradeRuntimeVersion> availableUpgradeRuntimeVersions();

    /**
     * Gets the clusterExtendedLocation property: ExtendedLocation represents the Azure custom location where the
     * resource will be created.
     * 
     * The extended location that represents the edge cluster's control plane location and is used to route the requests
     * for workload infrastructure resources.
     * 
     * @return the clusterExtendedLocation value.
     */
    ExtendedLocation clusterExtendedLocation();

    /**
     * Gets the connectedClusterId property: The resource ID of the connected cluster set up when this edge cluster is
     * created.
     * 
     * @return the connectedClusterId value.
     */
    String connectedClusterId();

    /**
     * Gets the description property: User provided description information about the edge cluster.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the edgeClusterSkuId property: The resource ID of the SKU of the edge cluster.
     * 
     * @return the edgeClusterSkuId value.
     */
    String edgeClusterSkuId();

    /**
     * Gets the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
     * integration properties.
     * 
     * The attributes used for Entra (Azure Active Directory) integration.
     * 
     * @return the entraConfiguration value.
     */
    EdgeClusterEntraConfiguration entraConfiguration();

    /**
     * Gets the infrastructureResourceIds property: The list of system-controlled workload resource IDs that are
     * dependent upon the edge cluster. The presence of resource IDs inform lifecycle events for the edge cluster.
     * 
     * @return the infrastructureResourceIds value.
     */
    List<String> infrastructureResourceIds();

    /**
     * Gets the kubernetesVersion property: The Kubernetes version that is currently running on the edge cluster.
     * 
     * @return the kubernetesVersion value.
     */
    String kubernetesVersion();

    /**
     * Gets the lifecycleStatus property: The status representing the lifecycle stage of the edge cluster.
     * 
     * @return the lifecycleStatus value.
     */
    EdgeClusterLifecycleStatus lifecycleStatus();

    /**
     * Gets the managedResourceGroupConfiguration property: ManagedResourceGroupConfiguration represents the
     * configuration of the resource group managed by Azure.
     * 
     * The configuration of the managed resource group associated with the resource.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    ManagedResourceGroupConfiguration managedResourceGroupConfiguration();

    /**
     * Gets the managementServicesVersion property: The version of the running management services.
     * 
     * @return the managementServicesVersion value.
     */
    String managementServicesVersion();

    /**
     * Gets the networkFabricId property: The resource ID of the network fabric that defines the network configuration
     * for the edge cluster.
     * 
     * @return the networkFabricId value.
     */
    String networkFabricId();

    /**
     * Gets the provisioningState property: The provisioning state of the edge cluster.
     * 
     * @return the provisioningState value.
     */
    EdgeClusterProvisioningState provisioningState();

    /**
     * Gets the ptpConfiguration property: EdgeClusterPtpConfiguration represents the PTP clock configuration for the
     * edge cluster, if applicable.
     * 
     * The PTP clock information for the edge cluster, if applicable.
     * 
     * @return the ptpConfiguration value.
     */
    EdgeClusterPtpConfiguration ptpConfiguration();

    /**
     * Gets the registrationHubId property: The resource ID of the registration hub that the edge cluster will use to
     * register machines for edge cluster nodes.
     * 
     * @return the registrationHubId value.
     */
    String registrationHubId();

    /**
     * Gets the requiredEndpointAllowList property: The list of endpoints that must be accessible to the edge cluster.
     * 
     * @return the requiredEndpointAllowList value.
     */
    List<EndpointDependency> requiredEndpointAllowList();

    /**
     * Gets the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge cluster.
     * 
     * @return the runtimeVersionId value.
     */
    String runtimeVersionId();

    /**
     * Gets the supportExpiryDate property: The date after which the Edge Cluster is no longer supported using the
     * currently configured runtime version.
     * 
     * @return the supportExpiryDate value.
     */
    String supportExpiryDate();

    /**
     * Gets the workloadResourceIds property: The list of user-managed workload resource IDs that are dependent upon the
     * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
     * 
     * @return the workloadResourceIds value.
     */
    List<String> workloadResourceIds();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkcloud.fluent.models.EdgeClusterInner object.
     * 
     * @return the inner object.
     */
    EdgeClusterInner innerModel();

    /**
     * The entirety of the EdgeCluster definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithEdgeClusterSkuId, DefinitionStages.WithNetworkFabricId,
        DefinitionStages.WithRuntimeVersionId, DefinitionStages.WithCreate {
    }

    /**
     * The EdgeCluster definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the EdgeCluster definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithEdgeClusterSkuId withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify edgeClusterSkuId.
         */
        interface WithEdgeClusterSkuId {
            /**
             * Specifies the edgeClusterSkuId property: The resource ID of the SKU of the edge cluster..
             * 
             * @param edgeClusterSkuId The resource ID of the SKU of the edge cluster.
             * @return the next definition stage.
             */
            WithNetworkFabricId withEdgeClusterSkuId(String edgeClusterSkuId);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify networkFabricId.
         */
        interface WithNetworkFabricId {
            /**
             * Specifies the networkFabricId property: The resource ID of the network fabric that defines the network
             * configuration for the edge cluster..
             * 
             * @param networkFabricId The resource ID of the network fabric that defines the network configuration for
             * the edge cluster.
             * @return the next definition stage.
             */
            WithRuntimeVersionId withNetworkFabricId(String networkFabricId);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify runtimeVersionId.
         */
        interface WithRuntimeVersionId {
            /**
             * Specifies the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge
             * cluster..
             * 
             * @param runtimeVersionId The resource ID of the edge cluster runtime version for the edge cluster.
             * @return the next definition stage.
             */
            WithCreate withRuntimeVersionId(String runtimeVersionId);
        }

        /**
         * The stage of the EdgeCluster definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithIdentity, DefinitionStages.WithDescription,
            DefinitionStages.WithEntraConfiguration, DefinitionStages.WithManagedResourceGroupConfiguration,
            DefinitionStages.WithRegistrationHubId, DefinitionStages.WithWorkloadResourceIds {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            EdgeCluster create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            EdgeCluster create(Context context);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identity of the edge cluster..
             * 
             * @param identity The identity of the edge cluster.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: User provided description information about the edge cluster..
             * 
             * @param description User provided description information about the edge cluster.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify entraConfiguration.
         */
        interface WithEntraConfiguration {
            /**
             * Specifies the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure
             * Active Directory) integration properties.
             * 
             * The attributes used for Entra (Azure Active Directory) integration..
             * 
             * @param entraConfiguration EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
             * integration properties.
             * 
             * The attributes used for Entra (Azure Active Directory) integration.
             * @return the next definition stage.
             */
            WithCreate withEntraConfiguration(EdgeClusterEntraConfiguration entraConfiguration);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify managedResourceGroupConfiguration.
         */
        interface WithManagedResourceGroupConfiguration {
            /**
             * Specifies the managedResourceGroupConfiguration property: ManagedResourceGroupConfiguration represents
             * the configuration of the resource group managed by Azure.
             * 
             * The configuration of the managed resource group associated with the resource..
             * 
             * @param managedResourceGroupConfiguration ManagedResourceGroupConfiguration represents the configuration
             * of the resource group managed by Azure.
             * 
             * The configuration of the managed resource group associated with the resource.
             * @return the next definition stage.
             */
            WithCreate withManagedResourceGroupConfiguration(
                ManagedResourceGroupConfiguration managedResourceGroupConfiguration);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify registrationHubId.
         */
        interface WithRegistrationHubId {
            /**
             * Specifies the registrationHubId property: The resource ID of the registration hub that the edge cluster
             * will use to register machines for edge cluster nodes..
             * 
             * @param registrationHubId The resource ID of the registration hub that the edge cluster will use to
             * register machines for edge cluster nodes.
             * @return the next definition stage.
             */
            WithCreate withRegistrationHubId(String registrationHubId);
        }

        /**
         * The stage of the EdgeCluster definition allowing to specify workloadResourceIds.
         */
        interface WithWorkloadResourceIds {
            /**
             * Specifies the workloadResourceIds property: The list of user-managed workload resource IDs that are
             * dependent upon the edge cluster. The presence of workload resource IDs inform lifecycle events for the
             * edge cluster..
             * 
             * @param workloadResourceIds The list of user-managed workload resource IDs that are dependent upon the
             * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
             * @return the next definition stage.
             */
            WithCreate withWorkloadResourceIds(List<String> workloadResourceIds);
        }
    }

    /**
     * Begins update for the EdgeCluster resource.
     * 
     * @return the stage of resource update.
     */
    EdgeCluster.Update update();

    /**
     * The template for EdgeCluster update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithDescription,
        UpdateStages.WithEntraConfiguration, UpdateStages.WithRegistrationHubId, UpdateStages.WithRuntimeVersionId,
        UpdateStages.WithWorkloadResourceIds {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        EdgeCluster apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        EdgeCluster apply(Context context);
    }

    /**
     * The EdgeCluster update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the EdgeCluster update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: The Azure resource tags that will replace the existing ones..
             * 
             * @param tags The Azure resource tags that will replace the existing ones.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the EdgeCluster update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identity for the resource..
             * 
             * @param identity The identity for the resource.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the EdgeCluster update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: User provided description information about the edge cluster..
             * 
             * @param description User provided description information about the edge cluster.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the EdgeCluster update allowing to specify entraConfiguration.
         */
        interface WithEntraConfiguration {
            /**
             * Specifies the entraConfiguration property: EdgeClusterEntraConfiguration represents the Entra (Azure
             * Active Directory) integration properties.
             * 
             * The attributes used for Entra (Azure Active Directory) integration..
             * 
             * @param entraConfiguration EdgeClusterEntraConfiguration represents the Entra (Azure Active Directory)
             * integration properties.
             * 
             * The attributes used for Entra (Azure Active Directory) integration.
             * @return the next definition stage.
             */
            Update withEntraConfiguration(EdgeClusterEntraConfiguration entraConfiguration);
        }

        /**
         * The stage of the EdgeCluster update allowing to specify registrationHubId.
         */
        interface WithRegistrationHubId {
            /**
             * Specifies the registrationHubId property: The resource ID of the registration hub that the edge cluster
             * will use to register machines for edge cluster nodes..
             * 
             * @param registrationHubId The resource ID of the registration hub that the edge cluster will use to
             * register machines for edge cluster nodes.
             * @return the next definition stage.
             */
            Update withRegistrationHubId(String registrationHubId);
        }

        /**
         * The stage of the EdgeCluster update allowing to specify runtimeVersionId.
         */
        interface WithRuntimeVersionId {
            /**
             * Specifies the runtimeVersionId property: The resource ID of the edge cluster runtime version for the edge
             * cluster..
             * 
             * @param runtimeVersionId The resource ID of the edge cluster runtime version for the edge cluster.
             * @return the next definition stage.
             */
            Update withRuntimeVersionId(String runtimeVersionId);
        }

        /**
         * The stage of the EdgeCluster update allowing to specify workloadResourceIds.
         */
        interface WithWorkloadResourceIds {
            /**
             * Specifies the workloadResourceIds property: The list of user-managed workload resource IDs that are
             * dependent upon the edge cluster. The presence of workload resource IDs inform lifecycle events for the
             * edge cluster..
             * 
             * @param workloadResourceIds The list of user-managed workload resource IDs that are dependent upon the
             * edge cluster. The presence of workload resource IDs inform lifecycle events for the edge cluster.
             * @return the next definition stage.
             */
            Update withWorkloadResourceIds(List<String> workloadResourceIds);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    EdgeCluster refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    EdgeCluster refresh(Context context);

    /**
     * Retrieve the kubernetes configuration credentials for the edge cluster.
     * 
     * Generates and returns the kubernetes configuration credentials for the edge cluster.
     * 
     * @param listUserCredentialParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return credentialResults represents the results of the cluster user credential request along with
     * {@link Response}.
     */
    Response<CredentialResults> listClusterUserCredentialWithResponse(
        ListUserCredentialParameters listUserCredentialParameters, Context context);

    /**
     * Retrieve the kubernetes configuration credentials for the edge cluster.
     * 
     * Generates and returns the kubernetes configuration credentials for the edge cluster.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return credentialResults represents the results of the cluster user credential request.
     */
    CredentialResults listClusterUserCredential();

    /**
     * Stages a runtime version for an edge cluster.
     * 
     * Prepares and stages the images to the edge cluster nodes for the specified runtime version.
     * 
     * @param edgeClusterStageRuntimeParameters The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult stageRuntime(EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters);

    /**
     * Stages a runtime version for an edge cluster.
     * 
     * Prepares and stages the images to the edge cluster nodes for the specified runtime version.
     * 
     * @param edgeClusterStageRuntimeParameters The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    OperationStatusResult stageRuntime(EdgeClusterStageRuntimeParameters edgeClusterStageRuntimeParameters,
        Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterNodeLifecycleStatus;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterNodeMatchingIdentifier;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterNodeNetworkInterface;
import com.azure.resourcemanager.networkcloud.models.EdgeClusterNodeProvisioningState;
import com.azure.resourcemanager.networkcloud.models.KubernetesLabel;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * EdgeClusterNode represents the node of an edge cluster.
 */
@Fluent
public final class EdgeClusterNodeInner extends Resource {
    /*
     * EdgeClusterNodeProperties represents the properties of an edge cluster node.
     * 
     * The list of the resource properties.
     */
    @JsonProperty(value = "properties", required = true)
    private EdgeClusterNodeProperties innerProperties = new EdgeClusterNodeProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of EdgeClusterNodeInner class.
     */
    public EdgeClusterNodeInner() {
    }

    /**
     * Get the innerProperties property: EdgeClusterNodeProperties represents the properties of an edge cluster node.
     * 
     * The list of the resource properties.
     * 
     * @return the innerProperties value.
     */
    private EdgeClusterNodeProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeClusterNodeInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EdgeClusterNodeInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the infrastructureResourceIds property: The resource IDs of the resources that depend on the Edge Cluster.
     * This includes both infrastructure resources added automatically and workload resources that are added through
     * orchestration.
     * 
     * @return the infrastructureResourceIds value.
     */
    public List<String> infrastructureResourceIds() {
        return this.innerProperties() == null ? null : this.innerProperties().infrastructureResourceIds();
    }

    /**
     * Get the kubernetesVersion property: The version of Kubernetes running on the node. This will typically match the
     * Edge Cluster’s Kubernetes version, but may differ during upgrade activities.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().kubernetesVersion();
    }

    /**
     * Get the lifecycleStatus property: The lifecycle status of the edge cluster node resource.
     * 
     * @return the lifecycleStatus value.
     */
    public EdgeClusterNodeLifecycleStatus lifecycleStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleStatus();
    }

    /**
     * Get the machineSkuId property: The resource ID of the SKU of the edge cluster node.
     * 
     * @return the machineSkuId value.
     */
    public String machineSkuId() {
        return this.innerProperties() == null ? null : this.innerProperties().machineSkuId();
    }

    /**
     * Set the machineSkuId property: The resource ID of the SKU of the edge cluster node.
     * 
     * @param machineSkuId the machineSkuId value to set.
     * @return the EdgeClusterNodeInner object itself.
     */
    public EdgeClusterNodeInner withMachineSkuId(String machineSkuId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterNodeProperties();
        }
        this.innerProperties().withMachineSkuId(machineSkuId);
        return this;
    }

    /**
     * Get the networkInterfaces property: The network interfaces of the node.
     * 
     * @return the networkInterfaces value.
     */
    public List<EdgeClusterNodeNetworkInterface> networkInterfaces() {
        return this.innerProperties() == null ? null : this.innerProperties().networkInterfaces();
    }

    /**
     * Get the nodeMatchingIdentifiers property: The identifiers used to match the node to a machine in the registration
     * hub.
     * 
     * @return the nodeMatchingIdentifiers value.
     */
    public List<EdgeClusterNodeMatchingIdentifier> nodeMatchingIdentifiers() {
        return this.innerProperties() == null ? null : this.innerProperties().nodeMatchingIdentifiers();
    }

    /**
     * Set the nodeMatchingIdentifiers property: The identifiers used to match the node to a machine in the registration
     * hub.
     * 
     * @param nodeMatchingIdentifiers the nodeMatchingIdentifiers value to set.
     * @return the EdgeClusterNodeInner object itself.
     */
    public EdgeClusterNodeInner
        withNodeMatchingIdentifiers(List<EdgeClusterNodeMatchingIdentifier> nodeMatchingIdentifiers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterNodeProperties();
        }
        this.innerProperties().withNodeMatchingIdentifiers(nodeMatchingIdentifiers);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the edge cluster node.
     * 
     * @return the provisioningState value.
     */
    public EdgeClusterNodeProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the registrationHubMachineId property: The resource ID of the machine in the registration hub that the node
     * is registered against.
     * 
     * @return the registrationHubMachineId value.
     */
    public String registrationHubMachineId() {
        return this.innerProperties() == null ? null : this.innerProperties().registrationHubMachineId();
    }

    /**
     * Set the registrationHubMachineId property: The resource ID of the machine in the registration hub that the node
     * is registered against.
     * 
     * @param registrationHubMachineId the registrationHubMachineId value to set.
     * @return the EdgeClusterNodeInner object itself.
     */
    public EdgeClusterNodeInner withRegistrationHubMachineId(String registrationHubMachineId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterNodeProperties();
        }
        this.innerProperties().withRegistrationHubMachineId(registrationHubMachineId);
        return this;
    }

    /**
     * Get the runtimeVersionId property: The resource ID of the runtime version of the Nexus software running on the
     * machine of the node. This will typically match the Edge Cluster’s runtime, but may differ during upgrade
     * activities.
     * 
     * @return the runtimeVersionId value.
     */
    public String runtimeVersionId() {
        return this.innerProperties() == null ? null : this.innerProperties().runtimeVersionId();
    }

    /**
     * Get the schedulingLabels property: The labels used to schedule resources on this node.
     * 
     * @return the schedulingLabels value.
     */
    public List<KubernetesLabel> schedulingLabels() {
        return this.innerProperties() == null ? null : this.innerProperties().schedulingLabels();
    }

    /**
     * Set the schedulingLabels property: The labels used to schedule resources on this node.
     * 
     * @param schedulingLabels the schedulingLabels value to set.
     * @return the EdgeClusterNodeInner object itself.
     */
    public EdgeClusterNodeInner withSchedulingLabels(List<KubernetesLabel> schedulingLabels) {
        if (this.innerProperties() == null) {
            this.innerProperties = new EdgeClusterNodeProperties();
        }
        this.innerProperties().withSchedulingLabels(schedulingLabels);
        return this;
    }

    /**
     * Get the stagedRuntimeVersionId property: The resource ID of the runtime version of the Nexus software that has
     * been pre-staged to the machine, pending a cluster runtime update. If no runtime has been staged, this field will
     * be omitted. During the process of staging a runtime, this field will be empty. It will only be populated when the
     * staging has completed.
     * 
     * @return the stagedRuntimeVersionId value.
     */
    public String stagedRuntimeVersionId() {
        return this.innerProperties() == null ? null : this.innerProperties().stagedRuntimeVersionId();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model EdgeClusterNodeInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EdgeClusterNodeInner.class);
}

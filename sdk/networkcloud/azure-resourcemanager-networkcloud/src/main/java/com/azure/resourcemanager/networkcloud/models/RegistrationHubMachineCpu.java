// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RegistrationHubMachineCpu represents CPU properties of a registration hub machine.
 */
@Fluent
public final class RegistrationHubMachineCpu {
    /*
     * The architecture of the CPU.
     */
    @JsonProperty(value = "architecture", required = true)
    private String architecture;

    /*
     * The CPU family.
     */
    @JsonProperty(value = "family", required = true)
    private String family;

    /*
     * The model of the CPU.
     */
    @JsonProperty(value = "model", required = true)
    private String model;

    /*
     * The model name of the CPU.
     */
    @JsonProperty(value = "modelName", required = true)
    private String modelName;

    /*
     * The number of physical CPU cores per socket.
     */
    @JsonProperty(value = "physicalCoresPerSocket", required = true)
    private long physicalCoresPerSocket;

    /*
     * The vendor of the CPU.
     */
    @JsonProperty(value = "vendor", required = true)
    private String vendor;

    /**
     * Creates an instance of RegistrationHubMachineCpu class.
     */
    public RegistrationHubMachineCpu() {
    }

    /**
     * Get the architecture property: The architecture of the CPU.
     * 
     * @return the architecture value.
     */
    public String architecture() {
        return this.architecture;
    }

    /**
     * Set the architecture property: The architecture of the CPU.
     * 
     * @param architecture the architecture value to set.
     * @return the RegistrationHubMachineCpu object itself.
     */
    public RegistrationHubMachineCpu withArchitecture(String architecture) {
        this.architecture = architecture;
        return this;
    }

    /**
     * Get the family property: The CPU family.
     * 
     * @return the family value.
     */
    public String family() {
        return this.family;
    }

    /**
     * Set the family property: The CPU family.
     * 
     * @param family the family value to set.
     * @return the RegistrationHubMachineCpu object itself.
     */
    public RegistrationHubMachineCpu withFamily(String family) {
        this.family = family;
        return this;
    }

    /**
     * Get the model property: The model of the CPU.
     * 
     * @return the model value.
     */
    public String model() {
        return this.model;
    }

    /**
     * Set the model property: The model of the CPU.
     * 
     * @param model the model value to set.
     * @return the RegistrationHubMachineCpu object itself.
     */
    public RegistrationHubMachineCpu withModel(String model) {
        this.model = model;
        return this;
    }

    /**
     * Get the modelName property: The model name of the CPU.
     * 
     * @return the modelName value.
     */
    public String modelName() {
        return this.modelName;
    }

    /**
     * Set the modelName property: The model name of the CPU.
     * 
     * @param modelName the modelName value to set.
     * @return the RegistrationHubMachineCpu object itself.
     */
    public RegistrationHubMachineCpu withModelName(String modelName) {
        this.modelName = modelName;
        return this;
    }

    /**
     * Get the physicalCoresPerSocket property: The number of physical CPU cores per socket.
     * 
     * @return the physicalCoresPerSocket value.
     */
    public long physicalCoresPerSocket() {
        return this.physicalCoresPerSocket;
    }

    /**
     * Set the physicalCoresPerSocket property: The number of physical CPU cores per socket.
     * 
     * @param physicalCoresPerSocket the physicalCoresPerSocket value to set.
     * @return the RegistrationHubMachineCpu object itself.
     */
    public RegistrationHubMachineCpu withPhysicalCoresPerSocket(long physicalCoresPerSocket) {
        this.physicalCoresPerSocket = physicalCoresPerSocket;
        return this;
    }

    /**
     * Get the vendor property: The vendor of the CPU.
     * 
     * @return the vendor value.
     */
    public String vendor() {
        return this.vendor;
    }

    /**
     * Set the vendor property: The vendor of the CPU.
     * 
     * @param vendor the vendor value to set.
     * @return the RegistrationHubMachineCpu object itself.
     */
    public RegistrationHubMachineCpu withVendor(String vendor) {
        this.vendor = vendor;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (architecture() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property architecture in model RegistrationHubMachineCpu"));
        }
        if (family() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property family in model RegistrationHubMachineCpu"));
        }
        if (model() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property model in model RegistrationHubMachineCpu"));
        }
        if (modelName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property modelName in model RegistrationHubMachineCpu"));
        }
        if (vendor() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property vendor in model RegistrationHubMachineCpu"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RegistrationHubMachineCpu.class);
}

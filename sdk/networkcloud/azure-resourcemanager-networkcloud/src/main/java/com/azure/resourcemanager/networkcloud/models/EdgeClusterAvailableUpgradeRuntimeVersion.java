// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EdgeClusterAvailableUpgradeRuntimeVersion represents the available edge cluster upgrades.
 */
@Immutable
public final class EdgeClusterAvailableUpgradeRuntimeVersion {
    /*
     * The indicator if the upgrade runtime version is generally available or in a different lifecycle phase.
     */
    @JsonProperty(value = "availabilityLifecycle", access = JsonProperty.Access.WRITE_ONLY)
    private AvailabilityLifecycle availabilityLifecycle;

    /*
     * The description of the upgrade.
     */
    @JsonProperty(value = "description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /*
     * The last date the version of the platform is supported.
     */
    @JsonProperty(value = "supportExpiryDate", access = JsonProperty.Access.WRITE_ONLY)
    private String supportExpiryDate;

    /*
     * The resource ID of the runtime version.
     */
    @JsonProperty(value = "targetRuntimeVersionId", access = JsonProperty.Access.WRITE_ONLY)
    private String targetRuntimeVersionId;

    /**
     * Creates an instance of EdgeClusterAvailableUpgradeRuntimeVersion class.
     */
    public EdgeClusterAvailableUpgradeRuntimeVersion() {
    }

    /**
     * Get the availabilityLifecycle property: The indicator if the upgrade runtime version is generally available or in
     * a different lifecycle phase.
     * 
     * @return the availabilityLifecycle value.
     */
    public AvailabilityLifecycle availabilityLifecycle() {
        return this.availabilityLifecycle;
    }

    /**
     * Get the description property: The description of the upgrade.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the supportExpiryDate property: The last date the version of the platform is supported.
     * 
     * @return the supportExpiryDate value.
     */
    public String supportExpiryDate() {
        return this.supportExpiryDate;
    }

    /**
     * Get the targetRuntimeVersionId property: The resource ID of the runtime version.
     * 
     * @return the targetRuntimeVersionId value.
     */
    public String targetRuntimeVersionId() {
        return this.targetRuntimeVersionId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

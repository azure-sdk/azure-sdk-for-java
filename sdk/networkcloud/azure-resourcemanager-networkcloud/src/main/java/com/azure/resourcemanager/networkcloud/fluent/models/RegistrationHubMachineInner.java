// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineConfiguration;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineProvisioningState;
import com.azure.resourcemanager.networkcloud.models.RegistrationHubMachineRegistrationState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * RegistrationHubMachine represents the registration of a machine to a registration hub.
 */
@Fluent
public final class RegistrationHubMachineInner extends Resource {
    /*
     * RegistrationHubMachineProperties represents the properties of a registration hub machine.
     * 
     * The list of the resource properties.
     */
    @JsonProperty(value = "properties", required = true)
    private RegistrationHubMachineProperties innerProperties = new RegistrationHubMachineProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of RegistrationHubMachineInner class.
     */
    public RegistrationHubMachineInner() {
    }

    /**
     * Get the innerProperties property: RegistrationHubMachineProperties represents the properties of a registration
     * hub machine.
     * 
     * The list of the resource properties.
     * 
     * @return the innerProperties value.
     */
    private RegistrationHubMachineProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationHubMachineInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegistrationHubMachineInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the associatedResourceId property: The resource ID of the edge cluster node that has been associated with
     * this machine.
     * 
     * @return the associatedResourceId value.
     */
    public String associatedResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().associatedResourceId();
    }

    /**
     * Get the description property: The user-provided freeform description for the machine.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The user-provided freeform description for the machine.
     * 
     * @param description the description value to set.
     * @return the RegistrationHubMachineInner object itself.
     */
    public RegistrationHubMachineInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RegistrationHubMachineProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the lastRegistrationPollTime property: The timestamp of the last polling request from a machine that is
     * undergoing registration.
     * 
     * @return the lastRegistrationPollTime value.
     */
    public OffsetDateTime lastRegistrationPollTime() {
        return this.innerProperties() == null ? null : this.innerProperties().lastRegistrationPollTime();
    }

    /**
     * Get the machineConfiguration property: RegistrationHubMachineConfiguration represents details of the hardware
     * configuration of the machine supplied during the registration process.
     * 
     * The hardware configuration of the machine supplied during the registration process.
     * 
     * @return the machineConfiguration value.
     */
    public RegistrationHubMachineConfiguration machineConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().machineConfiguration();
    }

    /**
     * Set the machineConfiguration property: RegistrationHubMachineConfiguration represents details of the hardware
     * configuration of the machine supplied during the registration process.
     * 
     * The hardware configuration of the machine supplied during the registration process.
     * 
     * @param machineConfiguration the machineConfiguration value to set.
     * @return the RegistrationHubMachineInner object itself.
     */
    public RegistrationHubMachineInner
        withMachineConfiguration(RegistrationHubMachineConfiguration machineConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RegistrationHubMachineProperties();
        }
        this.innerProperties().withMachineConfiguration(machineConfiguration);
        return this;
    }

    /**
     * Get the machineSkuId property: The resource ID of the machine SKU that is identified by the hardware information
     * provided for the machine.
     * 
     * @return the machineSkuId value.
     */
    public String machineSkuId() {
        return this.innerProperties() == null ? null : this.innerProperties().machineSkuId();
    }

    /**
     * Get the provisioningState property: The provisioning state of the registration hub machine resource.
     * 
     * @return the provisioningState value.
     */
    public RegistrationHubMachineProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the registrationHubImageId property: The resource ID of the registration hub image that was used to bootstrap
     * the machine.
     * 
     * @return the registrationHubImageId value.
     */
    public String registrationHubImageId() {
        return this.innerProperties() == null ? null : this.innerProperties().registrationHubImageId();
    }

    /**
     * Get the registrationState property: The stage and disposition of the registration for the machine.
     * 
     * @return the registrationState value.
     */
    public RegistrationHubMachineRegistrationState registrationState() {
        return this.innerProperties() == null ? null : this.innerProperties().registrationState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model RegistrationHubMachineInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RegistrationHubMachineInner.class);
}

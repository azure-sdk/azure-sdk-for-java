// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkcloud.generated;

import com.azure.resourcemanager.networkcloud.models.EdgeClusterEntraConfiguration;
import com.azure.resourcemanager.networkcloud.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentity;
import com.azure.resourcemanager.networkcloud.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.networkcloud.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for EdgeClusters CreateOrUpdate.
 */
public final class EdgeClustersCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-05-01-preview/examples/EdgeClusters_Create.json
     */
    /**
     * Sample code: Create or update edge cluster.
     * 
     * @param manager Entry point to NetworkCloudManager.
     */
    public static void createOrUpdateEdgeCluster(com.azure.resourcemanager.networkcloud.NetworkCloudManager manager) {
        manager.edgeClusters()
            .define("edgeClusterName")
            .withRegion("location")
            .withExistingResourceGroup("resourceGroupName")
            .withEdgeClusterSkuId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.NetworkCloud/edgeClusterSkus/edgeClusterSkuName")
            .withNetworkFabricId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/networkFabrics/networkFabricName")
            .withRuntimeVersionId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.NetworkCloud/edgeClusterRuntimeVersions/edgeClusterRuntimeVersionName")
            .withTags(mapOf("key1", "fakeTokenPlaceholder", "key2", "fakeTokenPlaceholder"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED))
            .withDescription("Edge cluster description value")
            .withEntraConfiguration(new EdgeClusterEntraConfiguration()
                .withAdminGroupObjectIds(Arrays.asList("ffffffff-ffff-ffff-ffff-ffffffffffff")))
            .withManagedResourceGroupConfiguration(
                new ManagedResourceGroupConfiguration().withLocation("East US").withName("my-managed-rg"))
            .withRegistrationHubId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.NetworkCloud/registrationHubs/registrationHubName")
            .withWorkloadResourceIds(Arrays.asList(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.Contoso/workloads/workloadName"))
            .create();
    }

    /*
     * x-ms-original-file: specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-05-01-preview/examples/EdgeClusters_Create_Uami.json
     */
    /**
     * Sample code: Create or update edge cluster with user assigned identity.
     * 
     * @param manager Entry point to NetworkCloudManager.
     */
    public static void createOrUpdateEdgeClusterWithUserAssignedIdentity(
        com.azure.resourcemanager.networkcloud.NetworkCloudManager manager) {
        manager.edgeClusters()
            .define("edgeClusterName")
            .withRegion("location")
            .withExistingResourceGroup("resourceGroupName")
            .withEdgeClusterSkuId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.NetworkCloud/edgeClusterSkus/edgeClusterSkuName")
            .withNetworkFabricId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/networkFabrics/networkFabricName")
            .withRuntimeVersionId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.NetworkCloud/edgeClusterRuntimeVersions/edgeClusterRuntimeVersionName")
            .withTags(mapOf("key1", "fakeTokenPlaceholder", "key2", "fakeTokenPlaceholder"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                .withUserAssignedIdentities(mapOf(
                    "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ManagedIdentity/userAssignedIdentities/userIdentity1",
                    new UserAssignedIdentity())))
            .withDescription("Edge cluster description value")
            .withEntraConfiguration(new EdgeClusterEntraConfiguration()
                .withAdminGroupObjectIds(Arrays.asList("ffffffff-ffff-ffff-ffff-ffffffffffff")))
            .withManagedResourceGroupConfiguration(
                new ManagedResourceGroupConfiguration().withLocation("East US").withName("my-managed-rg"))
            .withRegistrationHubId(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.NetworkCloud/registrationHubs/registrationHubName")
            .withWorkloadResourceIds(Arrays.asList(
                "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.Contoso/workloads/workloadName"))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managementgroups.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.managementgroups.fluent.HierarchySettingsOperationGroupsClient;
import com.azure.resourcemanager.managementgroups.fluent.models.HierarchySettingsInner;
import com.azure.resourcemanager.managementgroups.models.CreateOrUpdateSettingsRequest;
import com.azure.resourcemanager.managementgroups.models.HierarchySettings;
import com.azure.resourcemanager.managementgroups.models.HierarchySettingsOperationGroups;

public final class HierarchySettingsOperationGroupsImpl implements HierarchySettingsOperationGroups {
    private static final ClientLogger LOGGER = new ClientLogger(HierarchySettingsOperationGroupsImpl.class);

    private final HierarchySettingsOperationGroupsClient innerClient;

    private final com.azure.resourcemanager.managementgroups.ManagementGroupsManager serviceManager;

    public HierarchySettingsOperationGroupsImpl(HierarchySettingsOperationGroupsClient innerClient,
        com.azure.resourcemanager.managementgroups.ManagementGroupsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<HierarchySettings> list(String groupId) {
        PagedIterable<HierarchySettingsInner> inner = this.serviceClient().list(groupId);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new HierarchySettingsImpl(inner1, this.manager()));
    }

    public PagedIterable<HierarchySettings> list(String groupId, Context context) {
        PagedIterable<HierarchySettingsInner> inner = this.serviceClient().list(groupId, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new HierarchySettingsImpl(inner1, this.manager()));
    }

    public Response<HierarchySettings> getWithResponse(String groupId, Context context) {
        Response<HierarchySettingsInner> inner = this.serviceClient().getWithResponse(groupId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new HierarchySettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public HierarchySettings get(String groupId) {
        HierarchySettingsInner inner = this.serviceClient().get(groupId);
        if (inner != null) {
            return new HierarchySettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<HierarchySettings> createOrUpdateWithResponse(String groupId, HierarchySettingsInner resource,
        Context context) {
        Response<HierarchySettingsInner> inner
            = this.serviceClient().createOrUpdateWithResponse(groupId, resource, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new HierarchySettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public HierarchySettings createOrUpdate(String groupId, HierarchySettingsInner resource) {
        HierarchySettingsInner inner = this.serviceClient().createOrUpdate(groupId, resource);
        if (inner != null) {
            return new HierarchySettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<HierarchySettings> updateWithResponse(String groupId, CreateOrUpdateSettingsRequest properties,
        Context context) {
        Response<HierarchySettingsInner> inner = this.serviceClient().updateWithResponse(groupId, properties, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new HierarchySettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public HierarchySettings update(String groupId, CreateOrUpdateSettingsRequest properties) {
        HierarchySettingsInner inner = this.serviceClient().update(groupId, properties);
        if (inner != null) {
            return new HierarchySettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String groupId, Context context) {
        return this.serviceClient().deleteWithResponse(groupId, context);
    }

    public void delete(String groupId) {
        this.serviceClient().delete(groupId);
    }

    private HierarchySettingsOperationGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.managementgroups.ManagementGroupsManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.StaticSiteTrafficSplittingPropertiesArmResourceInner;
import com.azure.resourcemanager.appservice.generated.models.BasicAuthName;
import com.azure.resourcemanager.appservice.generated.models.StaticSiteTrafficSplittingPropertiesArmResource;
import java.util.Collections;
import java.util.Map;

public final class StaticSiteTrafficSplittingPropertiesArmResourceImpl
    implements StaticSiteTrafficSplittingPropertiesArmResource,
        StaticSiteTrafficSplittingPropertiesArmResource.Definition,
        StaticSiteTrafficSplittingPropertiesArmResource.Update {
    private StaticSiteTrafficSplittingPropertiesArmResourceInner innerObject;

    private final com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public Map<String, Integer> environmentDistribution() {
        Map<String, Integer> inner = this.innerModel().environmentDistribution();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public StaticSiteTrafficSplittingPropertiesArmResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appservice.generated.AppServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String name;

    private BasicAuthName trafficSplittingName;

    public StaticSiteTrafficSplittingPropertiesArmResourceImpl withExistingStaticSite(
        String resourceGroupName, String name) {
        this.resourceGroupName = resourceGroupName;
        this.name = name;
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStaticSites()
                .createOrUpdateTrafficSplitting(
                    resourceGroupName, name, trafficSplittingName, this.innerModel(), Context.NONE);
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStaticSites()
                .createOrUpdateTrafficSplitting(
                    resourceGroupName, name, trafficSplittingName, this.innerModel(), context);
        return this;
    }

    StaticSiteTrafficSplittingPropertiesArmResourceImpl(
        BasicAuthName name, com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = new StaticSiteTrafficSplittingPropertiesArmResourceInner();
        this.serviceManager = serviceManager;
        this.trafficSplittingName = name;
    }

    public StaticSiteTrafficSplittingPropertiesArmResourceImpl update() {
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStaticSites()
                .createOrUpdateTrafficSplitting(
                    resourceGroupName, name, trafficSplittingName, this.innerModel(), Context.NONE);
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStaticSites()
                .createOrUpdateTrafficSplitting(
                    resourceGroupName, name, trafficSplittingName, this.innerModel(), context);
        return this;
    }

    StaticSiteTrafficSplittingPropertiesArmResourceImpl(
        StaticSiteTrafficSplittingPropertiesArmResourceInner innerObject,
        com.azure.resourcemanager.appservice.generated.AppServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "staticSites");
        this.trafficSplittingName =
            BasicAuthName.fromString(Utils.getValueFromIdByName(innerObject.id(), "trafficSplitting"));
    }

    public StaticSiteTrafficSplittingPropertiesArmResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStaticSites()
                .getTrafficSplittingWithResponse(resourceGroupName, name, trafficSplittingName, Context.NONE)
                .getValue();
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStaticSites()
                .getTrafficSplittingWithResponse(resourceGroupName, name, trafficSplittingName, context)
                .getValue();
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResourceImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public StaticSiteTrafficSplittingPropertiesArmResourceImpl withEnvironmentDistribution(
        Map<String, Integer> environmentDistribution) {
        this.innerModel().withEnvironmentDistribution(environmentDistribution);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appservice.generated.fluent.models.AseMigrationOptionsProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Extra options and configurations that will be applied to an ASE during migration. */
@Fluent
public final class AseMigrationOptions extends ProxyOnlyResource {
    /*
     * AseMigrationOptions resource specific properties
     */
    @JsonProperty(value = "properties")
    private AseMigrationOptionsProperties innerProperties;

    /**
     * Get the innerProperties property: AseMigrationOptions resource specific properties.
     *
     * @return the innerProperties value.
     */
    private AseMigrationOptionsProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public AseMigrationOptions withKind(String kind) {
        super.withKind(kind);
        return this;
    }

    /**
     * Get the customDnsSuffixConfiguration property: The customDnsSuffixConfiguration property.
     *
     * @return the customDnsSuffixConfiguration value.
     */
    public CustomDnsSuffixConfiguration customDnsSuffixConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().customDnsSuffixConfiguration();
    }

    /**
     * Set the customDnsSuffixConfiguration property: The customDnsSuffixConfiguration property.
     *
     * @param customDnsSuffixConfiguration the customDnsSuffixConfiguration value to set.
     * @return the AseMigrationOptions object itself.
     */
    public AseMigrationOptions withCustomDnsSuffixConfiguration(
        CustomDnsSuffixConfiguration customDnsSuffixConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AseMigrationOptionsProperties();
        }
        this.innerProperties().withCustomDnsSuffixConfiguration(customDnsSuffixConfiguration);
        return this;
    }

    /**
     * Get the zoneRedundant property: The zoneRedundant property.
     *
     * @return the zoneRedundant value.
     */
    public Boolean zoneRedundant() {
        return this.innerProperties() == null ? null : this.innerProperties().zoneRedundant();
    }

    /**
     * Set the zoneRedundant property: The zoneRedundant property.
     *
     * @param zoneRedundant the zoneRedundant value to set.
     * @return the AseMigrationOptions object itself.
     */
    public AseMigrationOptions withZoneRedundant(Boolean zoneRedundant) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AseMigrationOptionsProperties();
        }
        this.innerProperties().withZoneRedundant(zoneRedundant);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

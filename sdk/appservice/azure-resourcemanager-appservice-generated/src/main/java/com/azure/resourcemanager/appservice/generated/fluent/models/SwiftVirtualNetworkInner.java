// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appservice.generated.models.SwiftVirtualNetworkResourceAllocation;
import com.azure.resourcemanager.appservice.generated.models.SwiftVirtualNetworkSubnetIpAllocation;
import com.azure.resourcemanager.appservice.generated.models.SwiftVirtualNetworkVnetConnectionAllocation;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Swift Virtual Network Contract.
 */
@Fluent
public final class SwiftVirtualNetworkInner {
    /*
     * The Virtual Network subnet's ARM ID
     */
    @JsonProperty(value = "subnetResourceId")
    private String subnetResourceId;

    /*
     * Boolean flag indicating whether Swift integration is supported
     */
    @JsonProperty(value = "swiftSupported")
    private Boolean swiftSupported;

    /*
     * IP allocation for a Swift Subnet
     */
    @JsonProperty(value = "subnetIpAllocation")
    private SwiftVirtualNetworkSubnetIpAllocation subnetIpAllocation;

    /*
     * Swift Connection allocation for an App Service Plan
     */
    @JsonProperty(value = "vnetConnectionAllocation")
    private SwiftVirtualNetworkVnetConnectionAllocation vnetConnectionAllocation;

    /*
     * Resources (sites and serverfarms) allocated to this subnet
     */
    @JsonProperty(value = "resourceAllocation")
    private SwiftVirtualNetworkResourceAllocation resourceAllocation;

    /**
     * Creates an instance of SwiftVirtualNetworkInner class.
     */
    public SwiftVirtualNetworkInner() {
    }

    /**
     * Get the subnetResourceId property: The Virtual Network subnet's ARM ID.
     * 
     * @return the subnetResourceId value.
     */
    public String subnetResourceId() {
        return this.subnetResourceId;
    }

    /**
     * Set the subnetResourceId property: The Virtual Network subnet's ARM ID.
     * 
     * @param subnetResourceId the subnetResourceId value to set.
     * @return the SwiftVirtualNetworkInner object itself.
     */
    public SwiftVirtualNetworkInner withSubnetResourceId(String subnetResourceId) {
        this.subnetResourceId = subnetResourceId;
        return this;
    }

    /**
     * Get the swiftSupported property: Boolean flag indicating whether Swift integration is supported.
     * 
     * @return the swiftSupported value.
     */
    public Boolean swiftSupported() {
        return this.swiftSupported;
    }

    /**
     * Set the swiftSupported property: Boolean flag indicating whether Swift integration is supported.
     * 
     * @param swiftSupported the swiftSupported value to set.
     * @return the SwiftVirtualNetworkInner object itself.
     */
    public SwiftVirtualNetworkInner withSwiftSupported(Boolean swiftSupported) {
        this.swiftSupported = swiftSupported;
        return this;
    }

    /**
     * Get the subnetIpAllocation property: IP allocation for a Swift Subnet.
     * 
     * @return the subnetIpAllocation value.
     */
    public SwiftVirtualNetworkSubnetIpAllocation subnetIpAllocation() {
        return this.subnetIpAllocation;
    }

    /**
     * Set the subnetIpAllocation property: IP allocation for a Swift Subnet.
     * 
     * @param subnetIpAllocation the subnetIpAllocation value to set.
     * @return the SwiftVirtualNetworkInner object itself.
     */
    public SwiftVirtualNetworkInner withSubnetIpAllocation(SwiftVirtualNetworkSubnetIpAllocation subnetIpAllocation) {
        this.subnetIpAllocation = subnetIpAllocation;
        return this;
    }

    /**
     * Get the vnetConnectionAllocation property: Swift Connection allocation for an App Service Plan.
     * 
     * @return the vnetConnectionAllocation value.
     */
    public SwiftVirtualNetworkVnetConnectionAllocation vnetConnectionAllocation() {
        return this.vnetConnectionAllocation;
    }

    /**
     * Set the vnetConnectionAllocation property: Swift Connection allocation for an App Service Plan.
     * 
     * @param vnetConnectionAllocation the vnetConnectionAllocation value to set.
     * @return the SwiftVirtualNetworkInner object itself.
     */
    public SwiftVirtualNetworkInner
        withVnetConnectionAllocation(SwiftVirtualNetworkVnetConnectionAllocation vnetConnectionAllocation) {
        this.vnetConnectionAllocation = vnetConnectionAllocation;
        return this;
    }

    /**
     * Get the resourceAllocation property: Resources (sites and serverfarms) allocated to this subnet.
     * 
     * @return the resourceAllocation value.
     */
    public SwiftVirtualNetworkResourceAllocation resourceAllocation() {
        return this.resourceAllocation;
    }

    /**
     * Set the resourceAllocation property: Resources (sites and serverfarms) allocated to this subnet.
     * 
     * @param resourceAllocation the resourceAllocation value to set.
     * @return the SwiftVirtualNetworkInner object itself.
     */
    public SwiftVirtualNetworkInner withResourceAllocation(SwiftVirtualNetworkResourceAllocation resourceAllocation) {
        this.resourceAllocation = resourceAllocation;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (subnetIpAllocation() != null) {
            subnetIpAllocation().validate();
        }
        if (vnetConnectionAllocation() != null) {
            vnetConnectionAllocation().validate();
        }
        if (resourceAllocation() != null) {
            resourceAllocation().validate();
        }
    }
}

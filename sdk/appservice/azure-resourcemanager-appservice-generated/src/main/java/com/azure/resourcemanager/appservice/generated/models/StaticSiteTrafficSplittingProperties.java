// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appservice.generated.fluent.models.StaticSiteTrafficSplittingPropertiesProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Properties for traffic splitting in a static site. */
@Fluent
public final class StaticSiteTrafficSplittingProperties extends ProxyOnlyResource {
    /*
     * StaticSiteTrafficSplittingProperties resource specific properties
     */
    @JsonProperty(value = "properties")
    private StaticSiteTrafficSplittingPropertiesProperties innerProperties;

    /** Creates an instance of StaticSiteTrafficSplittingProperties class. */
    public StaticSiteTrafficSplittingProperties() {
    }

    /**
     * Get the innerProperties property: StaticSiteTrafficSplittingProperties resource specific properties.
     *
     * @return the innerProperties value.
     */
    private StaticSiteTrafficSplittingPropertiesProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public StaticSiteTrafficSplittingProperties withKind(String kind) {
        super.withKind(kind);
        return this;
    }

    /**
     * Get the environmentDistribution property: Dictionary of &lt;integer&gt;.
     *
     * @return the environmentDistribution value.
     */
    public Map<String, Integer> environmentDistribution() {
        return this.innerProperties() == null ? null : this.innerProperties().environmentDistribution();
    }

    /**
     * Set the environmentDistribution property: Dictionary of &lt;integer&gt;.
     *
     * @param environmentDistribution the environmentDistribution value to set.
     * @return the StaticSiteTrafficSplittingProperties object itself.
     */
    public StaticSiteTrafficSplittingProperties withEnvironmentDistribution(
        Map<String, Integer> environmentDistribution) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StaticSiteTrafficSplittingPropertiesProperties();
        }
        this.innerProperties().withEnvironmentDistribution(environmentDistribution);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

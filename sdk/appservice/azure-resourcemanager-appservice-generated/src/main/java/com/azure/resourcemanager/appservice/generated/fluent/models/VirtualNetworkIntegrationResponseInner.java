// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.appservice.generated.models.SwiftVirtualNetworkProperties;
import com.azure.resourcemanager.appservice.generated.models.VirtualNetworkIntegrationResponseMessage;
import java.io.IOException;

/**
 * Response wrapper for PurgedUnusedVirtualNetworkIntegrations.
 */
@Fluent
public final class VirtualNetworkIntegrationResponseInner
    implements JsonSerializable<VirtualNetworkIntegrationResponseInner> {
    /*
     * Description of the result
     */
    private VirtualNetworkIntegrationResponseMessage message;

    /*
     * The Swift Virtual Network object
     */
    private SwiftVirtualNetworkProperties swiftVirtualNetwork;

    /**
     * Creates an instance of VirtualNetworkIntegrationResponseInner class.
     */
    public VirtualNetworkIntegrationResponseInner() {
    }

    /**
     * Get the message property: Description of the result.
     * 
     * @return the message value.
     */
    public VirtualNetworkIntegrationResponseMessage message() {
        return this.message;
    }

    /**
     * Set the message property: Description of the result.
     * 
     * @param message the message value to set.
     * @return the VirtualNetworkIntegrationResponseInner object itself.
     */
    public VirtualNetworkIntegrationResponseInner withMessage(VirtualNetworkIntegrationResponseMessage message) {
        this.message = message;
        return this;
    }

    /**
     * Get the swiftVirtualNetwork property: The Swift Virtual Network object.
     * 
     * @return the swiftVirtualNetwork value.
     */
    public SwiftVirtualNetworkProperties swiftVirtualNetwork() {
        return this.swiftVirtualNetwork;
    }

    /**
     * Set the swiftVirtualNetwork property: The Swift Virtual Network object.
     * 
     * @param swiftVirtualNetwork the swiftVirtualNetwork value to set.
     * @return the VirtualNetworkIntegrationResponseInner object itself.
     */
    public VirtualNetworkIntegrationResponseInner
        withSwiftVirtualNetwork(SwiftVirtualNetworkProperties swiftVirtualNetwork) {
        this.swiftVirtualNetwork = swiftVirtualNetwork;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (swiftVirtualNetwork() != null) {
            swiftVirtualNetwork().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("message", this.message == null ? null : this.message.toString());
        jsonWriter.writeJsonField("swiftVirtualNetwork", this.swiftVirtualNetwork);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualNetworkIntegrationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualNetworkIntegrationResponseInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualNetworkIntegrationResponseInner.
     */
    public static VirtualNetworkIntegrationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualNetworkIntegrationResponseInner deserializedVirtualNetworkIntegrationResponseInner
                = new VirtualNetworkIntegrationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    deserializedVirtualNetworkIntegrationResponseInner.message
                        = VirtualNetworkIntegrationResponseMessage.fromString(reader.getString());
                } else if ("swiftVirtualNetwork".equals(fieldName)) {
                    deserializedVirtualNetworkIntegrationResponseInner.swiftVirtualNetwork
                        = SwiftVirtualNetworkProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualNetworkIntegrationResponseInner;
        });
    }
}

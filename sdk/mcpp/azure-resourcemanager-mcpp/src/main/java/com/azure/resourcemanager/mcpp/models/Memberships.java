// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mcpp.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Memberships. */
public interface Memberships {
    /**
     * The operation to fetch purchase details of a CloudPartnerProgramMembership offer.
     *
     * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
     *     00000000-0000-0000-0000-000000000000).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mCPP Purchase details response along with {@link Response}.
     */
    Response<MembershipDetailsResponse> getByResourceGroupWithResponse(
        String subscriptionId, String resourceGroupName, String resourceName, Context context);

    /**
     * The operation to fetch purchase details of a CloudPartnerProgramMembership offer.
     *
     * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
     *     00000000-0000-0000-0000-000000000000).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mCPP Purchase details response.
     */
    MembershipDetailsResponse getByResourceGroup(String subscriptionId, String resourceGroupName, String resourceName);

    /**
     * The operation to cancel a CloudPartnerProgramMembership offer.
     *
     * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
     *     00000000-0000-0000-0000-000000000000).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String subscriptionId, String resourceGroupName, String resourceName, Context context);

    /**
     * The operation to cancel a CloudPartnerProgramMembership offer.
     *
     * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
     *     00000000-0000-0000-0000-000000000000).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String subscriptionId, String resourceGroupName, String resourceName);

    /**
     * The operation to fetch purchase details of a CloudPartnerProgramMembership offer.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mCPP Purchase details response along with {@link Response}.
     */
    MembershipDetailsResponse getById(String id);

    /**
     * The operation to fetch purchase details of a CloudPartnerProgramMembership offer.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return mCPP Purchase details response along with {@link Response}.
     */
    Response<MembershipDetailsResponse> getByIdWithResponse(String id, Context context);

    /**
     * The operation to cancel a CloudPartnerProgramMembership offer.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * The operation to cancel a CloudPartnerProgramMembership offer.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MembershipDetailsResponse resource.
     *
     * @param name resource name.
     * @return the first stage of the new MembershipDetailsResponse definition.
     */
    MembershipDetailsResponse.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.authorization.generated.models.DecisionResourceType;
import java.io.IOException;

/**
 * Target of the decision.
 */
@Fluent
public final class AccessReviewDecisionResource implements JsonSerializable<AccessReviewDecisionResource> {
    /*
     * The type of resource
     */
    private DecisionResourceType type;

    /*
     * The id of resource associated with a decision record.
     */
    private String id;

    /*
     * The display name of resource associated with a decision record.
     */
    private String displayName;

    /**
     * Creates an instance of AccessReviewDecisionResource class.
     */
    public AccessReviewDecisionResource() {
    }

    /**
     * Get the type property: The type of resource.
     * 
     * @return the type value.
     */
    public DecisionResourceType type() {
        return this.type;
    }

    /**
     * Set the type property: The type of resource.
     * 
     * @param type the type value to set.
     * @return the AccessReviewDecisionResource object itself.
     */
    public AccessReviewDecisionResource withType(DecisionResourceType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the id property: The id of resource associated with a decision record.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the displayName property: The display name of resource associated with a decision record.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property type in model AccessReviewDecisionResource"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AccessReviewDecisionResource.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccessReviewDecisionResource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccessReviewDecisionResource if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AccessReviewDecisionResource.
     */
    public static AccessReviewDecisionResource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccessReviewDecisionResource deserializedAccessReviewDecisionResource = new AccessReviewDecisionResource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedAccessReviewDecisionResource.type = DecisionResourceType.fromString(reader.getString());
                } else if ("id".equals(fieldName)) {
                    deserializedAccessReviewDecisionResource.id = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    deserializedAccessReviewDecisionResource.displayName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccessReviewDecisionResource;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.authorization.generated.fluent.models.AlertConfigurationPropertiesInner;
import com.azure.resourcemanager.authorization.generated.fluent.models.AlertDefinitionInner;
import java.io.IOException;

/**
 * The Azure roles assigned outside PIM alert configuration properties.
 */
@Fluent
public final class AzureRolesAssignedOutsidePimAlertConfigurationProperties extends AlertConfigurationPropertiesInner {
    /*
     * The alert configuration type.
     */
    private String alertConfigurationType = "AzureRolesAssignedOutsidePimAlertConfiguration";

    /*
     * The alert definition.
     */
    private AlertDefinitionInner alertDefinition;

    /*
     * The alert scope.
     */
    private String scope;

    /*
     * The alert definition ID.
     */
    private String alertDefinitionId;

    /**
     * Creates an instance of AzureRolesAssignedOutsidePimAlertConfigurationProperties class.
     */
    public AzureRolesAssignedOutsidePimAlertConfigurationProperties() {
    }

    /**
     * Get the alertConfigurationType property: The alert configuration type.
     * 
     * @return the alertConfigurationType value.
     */
    @Override
    public String alertConfigurationType() {
        return this.alertConfigurationType;
    }

    /**
     * Get the alertDefinition property: The alert definition.
     * 
     * @return the alertDefinition value.
     */
    @Override
    public AlertDefinitionInner alertDefinition() {
        return this.alertDefinition;
    }

    /**
     * Get the scope property: The alert scope.
     * 
     * @return the scope value.
     */
    @Override
    public String scope() {
        return this.scope;
    }

    /**
     * Get the alertDefinitionId property: The alert definition ID.
     * 
     * @return the alertDefinitionId value.
     */
    @Override
    public String alertDefinitionId() {
        return this.alertDefinitionId;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AzureRolesAssignedOutsidePimAlertConfigurationProperties withIsEnabled(Boolean isEnabled) {
        super.withIsEnabled(isEnabled);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (alertDefinition() != null) {
            alertDefinition().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("isEnabled", isEnabled());
        jsonWriter.writeStringField("alertConfigurationType", this.alertConfigurationType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureRolesAssignedOutsidePimAlertConfigurationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureRolesAssignedOutsidePimAlertConfigurationProperties if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AzureRolesAssignedOutsidePimAlertConfigurationProperties.
     */
    public static AzureRolesAssignedOutsidePimAlertConfigurationProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AzureRolesAssignedOutsidePimAlertConfigurationProperties deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties
                = new AzureRolesAssignedOutsidePimAlertConfigurationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("alertDefinitionId".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties.alertDefinitionId
                        = reader.getString();
                } else if ("scope".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties.scope = reader.getString();
                } else if ("isEnabled".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties
                        .withIsEnabled(reader.getNullable(JsonReader::getBoolean));
                } else if ("alertDefinition".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties.alertDefinition
                        = AlertDefinitionInner.fromJson(reader);
                } else if ("alertConfigurationType".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties.alertConfigurationType
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureRolesAssignedOutsidePimAlertConfigurationProperties;
        });
    }
}

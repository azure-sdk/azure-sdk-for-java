// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.authorization.generated.fluent.AlertConfigurationsClient;
import com.azure.resourcemanager.authorization.generated.fluent.models.AlertConfigurationInner;
import com.azure.resourcemanager.authorization.generated.models.AlertConfiguration;
import com.azure.resourcemanager.authorization.generated.models.AlertConfigurations;

public final class AlertConfigurationsImpl implements AlertConfigurations {
    private static final ClientLogger LOGGER = new ClientLogger(AlertConfigurationsImpl.class);

    private final AlertConfigurationsClient innerClient;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    public AlertConfigurationsImpl(
        AlertConfigurationsClient innerClient,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<AlertConfiguration> getWithResponse(String scope, String alertId, Context context) {
        Response<AlertConfigurationInner> inner = this.serviceClient().getWithResponse(scope, alertId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AlertConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AlertConfiguration get(String scope, String alertId) {
        AlertConfigurationInner inner = this.serviceClient().get(scope, alertId);
        if (inner != null) {
            return new AlertConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> updateWithResponse(
        String scope, String alertId, AlertConfigurationInner parameters, Context context) {
        return this.serviceClient().updateWithResponse(scope, alertId, parameters, context);
    }

    public void update(String scope, String alertId, AlertConfigurationInner parameters) {
        this.serviceClient().update(scope, alertId, parameters);
    }

    public PagedIterable<AlertConfiguration> listForScope(String scope) {
        PagedIterable<AlertConfigurationInner> inner = this.serviceClient().listForScope(scope);
        return Utils.mapPage(inner, inner1 -> new AlertConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<AlertConfiguration> listForScope(String scope, Context context) {
        PagedIterable<AlertConfigurationInner> inner = this.serviceClient().listForScope(scope, context);
        return Utils.mapPage(inner, inner1 -> new AlertConfigurationImpl(inner1, this.manager()));
    }

    private AlertConfigurationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.authorization.generated.models.AzureRolesAssignedOutsidePimAlertConfigurationProperties;
import com.azure.resourcemanager.authorization.generated.models.DuplicateRoleCreatedAlertConfigurationProperties;
import com.azure.resourcemanager.authorization.generated.models.TooManyOwnersAssignedToResourceAlertConfigurationProperties;
import com.azure.resourcemanager.authorization.generated.models.TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Alert configuration properties. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "alertConfigurationType",
    defaultImpl = AlertConfigurationProperties.class)
@JsonTypeName("AlertConfigurationProperties")
@JsonSubTypes({
    @JsonSubTypes.Type(
        name = "AzureRolesAssignedOutsidePimAlertConfiguration",
        value = AzureRolesAssignedOutsidePimAlertConfigurationProperties.class),
    @JsonSubTypes.Type(
        name = "DuplicateRoleCreatedAlertConfiguration",
        value = DuplicateRoleCreatedAlertConfigurationProperties.class),
    @JsonSubTypes.Type(
        name = "TooManyOwnersAssignedToResourceAlertConfiguration",
        value = TooManyOwnersAssignedToResourceAlertConfigurationProperties.class),
    @JsonSubTypes.Type(
        name = "TooManyPermanentOwnersAssignedToResourceAlertConfiguration",
        value = TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties.class)
})
@Fluent
public class AlertConfigurationProperties {
    /*
     * The alert definition ID.
     */
    @JsonProperty(value = "alertDefinitionId", access = JsonProperty.Access.WRITE_ONLY)
    private String alertDefinitionId;

    /*
     * The alert scope.
     */
    @JsonProperty(value = "scope", access = JsonProperty.Access.WRITE_ONLY)
    private String scope;

    /*
     * True if the alert is enabled, false will disable the scanning for the specific alert.
     */
    @JsonProperty(value = "isEnabled")
    private Boolean isEnabled;

    /** Creates an instance of AlertConfigurationProperties class. */
    public AlertConfigurationProperties() {
    }

    /**
     * Get the alertDefinitionId property: The alert definition ID.
     *
     * @return the alertDefinitionId value.
     */
    public String alertDefinitionId() {
        return this.alertDefinitionId;
    }

    /**
     * Get the scope property: The alert scope.
     *
     * @return the scope value.
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Get the isEnabled property: True if the alert is enabled, false will disable the scanning for the specific alert.
     *
     * @return the isEnabled value.
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }

    /**
     * Set the isEnabled property: True if the alert is enabled, false will disable the scanning for the specific alert.
     *
     * @param isEnabled the isEnabled value to set.
     * @return the AlertConfigurationProperties object itself.
     */
    public AlertConfigurationProperties withIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

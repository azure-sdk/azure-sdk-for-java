// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.authorization.generated.fluent.RoleEligibilityScheduleInstancesClient;
import com.azure.resourcemanager.authorization.generated.fluent.models.RoleEligibilityScheduleInstanceInner;
import com.azure.resourcemanager.authorization.generated.models.RoleEligibilityScheduleInstance;
import com.azure.resourcemanager.authorization.generated.models.RoleEligibilityScheduleInstances;

public final class RoleEligibilityScheduleInstancesImpl implements RoleEligibilityScheduleInstances {
    private static final ClientLogger LOGGER = new ClientLogger(RoleEligibilityScheduleInstancesImpl.class);

    private final RoleEligibilityScheduleInstancesClient innerClient;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    public RoleEligibilityScheduleInstancesImpl(RoleEligibilityScheduleInstancesClient innerClient,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<RoleEligibilityScheduleInstance> listForScope(String scope) {
        PagedIterable<RoleEligibilityScheduleInstanceInner> inner = this.serviceClient().listForScope(scope);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new RoleEligibilityScheduleInstanceImpl(inner1, this.manager()));
    }

    public PagedIterable<RoleEligibilityScheduleInstance> listForScope(String scope, String filter, Context context) {
        PagedIterable<RoleEligibilityScheduleInstanceInner> inner
            = this.serviceClient().listForScope(scope, filter, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new RoleEligibilityScheduleInstanceImpl(inner1, this.manager()));
    }

    public Response<RoleEligibilityScheduleInstance> getWithResponse(String scope,
        String roleEligibilityScheduleInstanceName, Context context) {
        Response<RoleEligibilityScheduleInstanceInner> inner
            = this.serviceClient().getWithResponse(scope, roleEligibilityScheduleInstanceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new RoleEligibilityScheduleInstanceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public RoleEligibilityScheduleInstance get(String scope, String roleEligibilityScheduleInstanceName) {
        RoleEligibilityScheduleInstanceInner inner
            = this.serviceClient().get(scope, roleEligibilityScheduleInstanceName);
        if (inner != null) {
            return new RoleEligibilityScheduleInstanceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private RoleEligibilityScheduleInstancesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }
}

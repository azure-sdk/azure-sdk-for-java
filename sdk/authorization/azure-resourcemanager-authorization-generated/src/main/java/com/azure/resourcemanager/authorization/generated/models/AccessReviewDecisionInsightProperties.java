// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Details of the Insight.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "type",
    defaultImpl = AccessReviewDecisionInsightProperties.class,
    visible = true)
@JsonTypeName("AccessReviewDecisionInsightProperties")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "userSignInInsight", value = AccessReviewDecisionUserSignInInsightProperties.class) })
@Immutable
public class AccessReviewDecisionInsightProperties {
    /*
     * The type of insight
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private AccessReviewDecisionInsightType type;

    /*
     * Date Time when the insight was created.
     */
    @JsonProperty(value = "insightCreatedDateTime", access = JsonProperty.Access.WRITE_ONLY)
    private Object insightCreatedDateTime;

    /**
     * Creates an instance of AccessReviewDecisionInsightProperties class.
     */
    public AccessReviewDecisionInsightProperties() {
        this.type = AccessReviewDecisionInsightType.fromString("AccessReviewDecisionInsightProperties");
    }

    /**
     * Get the type property: The type of insight.
     * 
     * @return the type value.
     */
    public AccessReviewDecisionInsightType type() {
        return this.type;
    }

    /**
     * Get the insightCreatedDateTime property: Date Time when the insight was created.
     * 
     * @return the insightCreatedDateTime value.
     */
    public Object insightCreatedDateTime() {
        return this.insightCreatedDateTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

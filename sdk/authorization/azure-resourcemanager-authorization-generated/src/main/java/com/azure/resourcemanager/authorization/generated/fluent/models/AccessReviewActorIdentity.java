// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewActorIdentityType;
import java.io.IOException;

/**
 * Details of the actor identity.
 */
@Immutable
public final class AccessReviewActorIdentity implements JsonSerializable<AccessReviewActorIdentity> {
    /*
     * The identity id
     */
    private String principalId;

    /*
     * The identity type : user/servicePrincipal
     */
    private AccessReviewActorIdentityType principalType;

    /*
     * The identity display name
     */
    private String principalName;

    /*
     * The user principal name(if valid)
     */
    private String userPrincipalName;

    /**
     * Creates an instance of AccessReviewActorIdentity class.
     */
    public AccessReviewActorIdentity() {
    }

    /**
     * Get the principalId property: The identity id.
     * 
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Get the principalType property: The identity type : user/servicePrincipal.
     * 
     * @return the principalType value.
     */
    public AccessReviewActorIdentityType principalType() {
        return this.principalType;
    }

    /**
     * Get the principalName property: The identity display name.
     * 
     * @return the principalName value.
     */
    public String principalName() {
        return this.principalName;
    }

    /**
     * Get the userPrincipalName property: The user principal name(if valid).
     * 
     * @return the userPrincipalName value.
     */
    public String userPrincipalName() {
        return this.userPrincipalName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccessReviewActorIdentity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccessReviewActorIdentity if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccessReviewActorIdentity.
     */
    public static AccessReviewActorIdentity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccessReviewActorIdentity deserializedAccessReviewActorIdentity = new AccessReviewActorIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("principalId".equals(fieldName)) {
                    deserializedAccessReviewActorIdentity.principalId = reader.getString();
                } else if ("principalType".equals(fieldName)) {
                    deserializedAccessReviewActorIdentity.principalType
                        = AccessReviewActorIdentityType.fromString(reader.getString());
                } else if ("principalName".equals(fieldName)) {
                    deserializedAccessReviewActorIdentity.principalName = reader.getString();
                } else if ("userPrincipalName".equals(fieldName)) {
                    deserializedAccessReviewActorIdentity.userPrincipalName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccessReviewActorIdentity;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Properties of access review contacted reviewer.
 */
@Immutable
public final class AccessReviewContactedReviewerProperties
    implements JsonSerializable<AccessReviewContactedReviewerProperties> {
    /*
     * The display name of the reviewer
     */
    private String userDisplayName;

    /*
     * The user principal name of the reviewer
     */
    private String userPrincipalName;

    /*
     * Date Time when the reviewer was contacted.
     */
    private OffsetDateTime createdDateTime;

    /**
     * Creates an instance of AccessReviewContactedReviewerProperties class.
     */
    public AccessReviewContactedReviewerProperties() {
    }

    /**
     * Get the userDisplayName property: The display name of the reviewer.
     * 
     * @return the userDisplayName value.
     */
    public String userDisplayName() {
        return this.userDisplayName;
    }

    /**
     * Get the userPrincipalName property: The user principal name of the reviewer.
     * 
     * @return the userPrincipalName value.
     */
    public String userPrincipalName() {
        return this.userPrincipalName;
    }

    /**
     * Get the createdDateTime property: Date Time when the reviewer was contacted.
     * 
     * @return the createdDateTime value.
     */
    public OffsetDateTime createdDateTime() {
        return this.createdDateTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccessReviewContactedReviewerProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccessReviewContactedReviewerProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccessReviewContactedReviewerProperties.
     */
    public static AccessReviewContactedReviewerProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccessReviewContactedReviewerProperties deserializedAccessReviewContactedReviewerProperties
                = new AccessReviewContactedReviewerProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("userDisplayName".equals(fieldName)) {
                    deserializedAccessReviewContactedReviewerProperties.userDisplayName = reader.getString();
                } else if ("userPrincipalName".equals(fieldName)) {
                    deserializedAccessReviewContactedReviewerProperties.userPrincipalName = reader.getString();
                } else if ("createdDateTime".equals(fieldName)) {
                    deserializedAccessReviewContactedReviewerProperties.createdDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccessReviewContactedReviewerProperties;
        });
    }
}

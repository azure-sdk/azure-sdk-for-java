// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.resourcemanager.authorization.generated.fluent.models.RoleManagementPolicyInner;
import com.azure.resourcemanager.authorization.generated.models.PolicyProperties;
import com.azure.resourcemanager.authorization.generated.models.Principal;
import com.azure.resourcemanager.authorization.generated.models.RoleManagementPolicy;
import com.azure.resourcemanager.authorization.generated.models.RoleManagementPolicyRule;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class RoleManagementPolicyImpl implements RoleManagementPolicy {
    private RoleManagementPolicyInner innerObject;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    RoleManagementPolicyImpl(
        RoleManagementPolicyInner innerObject,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String scope() {
        return this.innerModel().scope();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public Boolean isOrganizationDefault() {
        return this.innerModel().isOrganizationDefault();
    }

    public Principal lastModifiedBy() {
        return this.innerModel().lastModifiedBy();
    }

    public OffsetDateTime lastModifiedDateTime() {
        return this.innerModel().lastModifiedDateTime();
    }

    public List<RoleManagementPolicyRule> rules() {
        List<RoleManagementPolicyRule> inner = this.innerModel().rules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<RoleManagementPolicyRule> effectiveRules() {
        List<RoleManagementPolicyRule> inner = this.innerModel().effectiveRules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public PolicyProperties policyProperties() {
        return this.innerModel().policyProperties();
    }

    public RoleManagementPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }
}

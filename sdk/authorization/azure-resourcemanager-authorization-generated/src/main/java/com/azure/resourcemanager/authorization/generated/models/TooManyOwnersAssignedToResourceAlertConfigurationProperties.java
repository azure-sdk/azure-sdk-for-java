// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.authorization.generated.fluent.models.AlertConfigurationPropertiesInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Too many owners assigned to resource alert configuration properties.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "alertConfigurationType",
    defaultImpl = TooManyOwnersAssignedToResourceAlertConfigurationProperties.class,
    visible = true)
@JsonTypeName("TooManyOwnersAssignedToResourceAlertConfiguration")
@Fluent
public final class TooManyOwnersAssignedToResourceAlertConfigurationProperties
    extends AlertConfigurationPropertiesInner {
    /*
     * The alert configuration type.
     */
    @JsonTypeId
    @JsonProperty(value = "alertConfigurationType", required = true)
    private String alertConfigurationType = "TooManyOwnersAssignedToResourceAlertConfiguration";

    /*
     * The threshold number of owners.
     */
    @JsonProperty(value = "thresholdNumberOfOwners")
    private Integer thresholdNumberOfOwners;

    /*
     * The threshold percentage of owners out of all role members.
     */
    @JsonProperty(value = "thresholdPercentageOfOwnersOutOfAllRoleMembers")
    private Integer thresholdPercentageOfOwnersOutOfAllRoleMembers;

    /**
     * Creates an instance of TooManyOwnersAssignedToResourceAlertConfigurationProperties class.
     */
    public TooManyOwnersAssignedToResourceAlertConfigurationProperties() {
    }

    /**
     * Get the alertConfigurationType property: The alert configuration type.
     * 
     * @return the alertConfigurationType value.
     */
    @Override
    public String alertConfigurationType() {
        return this.alertConfigurationType;
    }

    /**
     * Get the thresholdNumberOfOwners property: The threshold number of owners.
     * 
     * @return the thresholdNumberOfOwners value.
     */
    public Integer thresholdNumberOfOwners() {
        return this.thresholdNumberOfOwners;
    }

    /**
     * Set the thresholdNumberOfOwners property: The threshold number of owners.
     * 
     * @param thresholdNumberOfOwners the thresholdNumberOfOwners value to set.
     * @return the TooManyOwnersAssignedToResourceAlertConfigurationProperties object itself.
     */
    public TooManyOwnersAssignedToResourceAlertConfigurationProperties
        withThresholdNumberOfOwners(Integer thresholdNumberOfOwners) {
        this.thresholdNumberOfOwners = thresholdNumberOfOwners;
        return this;
    }

    /**
     * Get the thresholdPercentageOfOwnersOutOfAllRoleMembers property: The threshold percentage of owners out of all
     * role members.
     * 
     * @return the thresholdPercentageOfOwnersOutOfAllRoleMembers value.
     */
    public Integer thresholdPercentageOfOwnersOutOfAllRoleMembers() {
        return this.thresholdPercentageOfOwnersOutOfAllRoleMembers;
    }

    /**
     * Set the thresholdPercentageOfOwnersOutOfAllRoleMembers property: The threshold percentage of owners out of all
     * role members.
     * 
     * @param thresholdPercentageOfOwnersOutOfAllRoleMembers the thresholdPercentageOfOwnersOutOfAllRoleMembers value to
     * set.
     * @return the TooManyOwnersAssignedToResourceAlertConfigurationProperties object itself.
     */
    public TooManyOwnersAssignedToResourceAlertConfigurationProperties
        withThresholdPercentageOfOwnersOutOfAllRoleMembers(Integer thresholdPercentageOfOwnersOutOfAllRoleMembers) {
        this.thresholdPercentageOfOwnersOutOfAllRoleMembers = thresholdPercentageOfOwnersOutOfAllRoleMembers;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TooManyOwnersAssignedToResourceAlertConfigurationProperties withIsEnabled(Boolean isEnabled) {
        super.withIsEnabled(isEnabled);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewScopePrincipalType;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Descriptor for what needs to be reviewed. */
@Immutable
public final class AccessReviewScope {
    /*
     * ResourceId in which this review is getting created
     */
    @JsonProperty(value = "resourceId", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceId;

    /*
     * This is used to indicate the role being reviewed
     */
    @JsonProperty(value = "roleDefinitionId", access = JsonProperty.Access.WRITE_ONLY)
    private String roleDefinitionId;

    /*
     * The identity type user/servicePrincipal to review
     */
    @JsonProperty(value = "principalType", access = JsonProperty.Access.WRITE_ONLY)
    private AccessReviewScopePrincipalType principalType;

    /**
     * Get the resourceId property: ResourceId in which this review is getting created.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Get the roleDefinitionId property: This is used to indicate the role being reviewed.
     *
     * @return the roleDefinitionId value.
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Get the principalType property: The identity type user/servicePrincipal to review.
     *
     * @return the principalType value.
     */
    public AccessReviewScopePrincipalType principalType() {
        return this.principalType;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

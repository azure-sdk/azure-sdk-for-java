// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewDecisionPrincipalResourceMembershipType;
import java.io.IOException;
import java.util.List;

/**
 * Target of the decision.
 */
@Fluent
public final class AccessReviewDecisionPrincipalResourceMembership
    implements JsonSerializable<AccessReviewDecisionPrincipalResourceMembership> {
    /*
     * Every decision item in an access review represents a principal's membership to a resource. This property
     * represents details of the membership. Examples of this detail might be whether the principal has direct access or
     * indirect access
     */
    private List<AccessReviewDecisionPrincipalResourceMembershipType> membershipTypes;

    /**
     * Creates an instance of AccessReviewDecisionPrincipalResourceMembership class.
     */
    public AccessReviewDecisionPrincipalResourceMembership() {
    }

    /**
     * Get the membershipTypes property: Every decision item in an access review represents a principal's membership to
     * a resource. This property represents details of the membership. Examples of this detail might be whether the
     * principal has direct access or indirect access.
     * 
     * @return the membershipTypes value.
     */
    public List<AccessReviewDecisionPrincipalResourceMembershipType> membershipTypes() {
        return this.membershipTypes;
    }

    /**
     * Set the membershipTypes property: Every decision item in an access review represents a principal's membership to
     * a resource. This property represents details of the membership. Examples of this detail might be whether the
     * principal has direct access or indirect access.
     * 
     * @param membershipTypes the membershipTypes value to set.
     * @return the AccessReviewDecisionPrincipalResourceMembership object itself.
     */
    public AccessReviewDecisionPrincipalResourceMembership
        withMembershipTypes(List<AccessReviewDecisionPrincipalResourceMembershipType> membershipTypes) {
        this.membershipTypes = membershipTypes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("membershipTypes", this.membershipTypes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccessReviewDecisionPrincipalResourceMembership from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccessReviewDecisionPrincipalResourceMembership if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccessReviewDecisionPrincipalResourceMembership.
     */
    public static AccessReviewDecisionPrincipalResourceMembership fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccessReviewDecisionPrincipalResourceMembership deserializedAccessReviewDecisionPrincipalResourceMembership
                = new AccessReviewDecisionPrincipalResourceMembership();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("membershipTypes".equals(fieldName)) {
                    List<AccessReviewDecisionPrincipalResourceMembershipType> membershipTypes = reader.readArray(
                        reader1 -> AccessReviewDecisionPrincipalResourceMembershipType.fromString(reader1.getString()));
                    deserializedAccessReviewDecisionPrincipalResourceMembership.membershipTypes = membershipTypes;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccessReviewDecisionPrincipalResourceMembership;
        });
    }
}

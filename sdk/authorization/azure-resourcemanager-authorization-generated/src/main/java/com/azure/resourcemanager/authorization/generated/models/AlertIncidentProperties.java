// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Alert incident properties.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "alertIncidentType",
    defaultImpl = AlertIncidentProperties.class,
    visible = true)
@JsonTypeName("AlertIncidentProperties")
@JsonSubTypes({
    @JsonSubTypes.Type(
        name = "AzureRolesAssignedOutsidePimAlertIncident",
        value = AzureRolesAssignedOutsidePimAlertIncidentProperties.class),
    @JsonSubTypes.Type(
        name = "DuplicateRoleCreatedAlertIncident",
        value = DuplicateRoleCreatedAlertIncidentProperties.class),
    @JsonSubTypes.Type(
        name = "TooManyOwnersAssignedToResourceAlertIncident",
        value = TooManyOwnersAssignedToResourceAlertIncidentProperties.class),
    @JsonSubTypes.Type(
        name = "TooManyPermanentOwnersAssignedToResourceAlertIncident",
        value = TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties.class) })
@Immutable
public class AlertIncidentProperties {
    /*
     * The alert incident type.
     */
    @JsonTypeId
    @JsonProperty(value = "alertIncidentType", required = true)
    private String alertIncidentType;

    /**
     * Creates an instance of AlertIncidentProperties class.
     */
    public AlertIncidentProperties() {
        this.alertIncidentType = "AlertIncidentProperties";
    }

    /**
     * Get the alertIncidentType property: The alert incident type.
     * 
     * @return the alertIncidentType value.
     */
    public String alertIncidentType() {
        return this.alertIncidentType;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

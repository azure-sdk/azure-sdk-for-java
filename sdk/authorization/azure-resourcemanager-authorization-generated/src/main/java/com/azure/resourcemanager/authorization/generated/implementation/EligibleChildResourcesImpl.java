// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.authorization.generated.fluent.EligibleChildResourcesClient;
import com.azure.resourcemanager.authorization.generated.fluent.models.EligibleChildResourceInner;
import com.azure.resourcemanager.authorization.generated.models.EligibleChildResource;
import com.azure.resourcemanager.authorization.generated.models.EligibleChildResources;

public final class EligibleChildResourcesImpl implements EligibleChildResources {
    private static final ClientLogger LOGGER = new ClientLogger(EligibleChildResourcesImpl.class);

    private final EligibleChildResourcesClient innerClient;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    public EligibleChildResourcesImpl(
        EligibleChildResourcesClient innerClient,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<EligibleChildResource> get(String scope) {
        PagedIterable<EligibleChildResourceInner> inner = this.serviceClient().get(scope);
        return Utils.mapPage(inner, inner1 -> new EligibleChildResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<EligibleChildResource> get(String scope, String filter, Context context) {
        PagedIterable<EligibleChildResourceInner> inner = this.serviceClient().get(scope, filter, context);
        return Utils.mapPage(inner, inner1 -> new EligibleChildResourceImpl(inner1, this.manager()));
    }

    private EligibleChildResourcesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }
}

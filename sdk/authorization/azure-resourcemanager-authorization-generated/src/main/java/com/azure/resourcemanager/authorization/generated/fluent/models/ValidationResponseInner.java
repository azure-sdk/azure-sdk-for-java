// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.authorization.generated.models.ValidationResponseErrorInfo;
import java.io.IOException;

/**
 * Validation response.
 */
@Fluent
public final class ValidationResponseInner implements JsonSerializable<ValidationResponseInner> {
    /*
     * Whether or not validation succeeded
     */
    private Boolean isValid;

    /*
     * Failed validation result details
     */
    private ValidationResponseErrorInfo errorInfo;

    /**
     * Creates an instance of ValidationResponseInner class.
     */
    public ValidationResponseInner() {
    }

    /**
     * Get the isValid property: Whether or not validation succeeded.
     * 
     * @return the isValid value.
     */
    public Boolean isValid() {
        return this.isValid;
    }

    /**
     * Get the errorInfo property: Failed validation result details.
     * 
     * @return the errorInfo value.
     */
    public ValidationResponseErrorInfo errorInfo() {
        return this.errorInfo;
    }

    /**
     * Set the errorInfo property: Failed validation result details.
     * 
     * @param errorInfo the errorInfo value to set.
     * @return the ValidationResponseInner object itself.
     */
    public ValidationResponseInner withErrorInfo(ValidationResponseErrorInfo errorInfo) {
        this.errorInfo = errorInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errorInfo() != null) {
            errorInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("errorInfo", this.errorInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ValidationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ValidationResponseInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ValidationResponseInner.
     */
    public static ValidationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ValidationResponseInner deserializedValidationResponseInner = new ValidationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("isValid".equals(fieldName)) {
                    deserializedValidationResponseInner.isValid = reader.getNullable(JsonReader::getBoolean);
                } else if ("errorInfo".equals(fieldName)) {
                    deserializedValidationResponseInner.errorInfo = ValidationResponseErrorInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedValidationResponseInner;
        });
    }
}

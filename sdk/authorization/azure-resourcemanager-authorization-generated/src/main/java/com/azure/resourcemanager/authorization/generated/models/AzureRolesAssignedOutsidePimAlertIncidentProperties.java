// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Azure roles assigned outside PIM alert incident properties.
 */
@Immutable
public final class AzureRolesAssignedOutsidePimAlertIncidentProperties extends AlertIncidentProperties {
    /*
     * The alert incident type.
     */
    private String alertIncidentType = "AzureRolesAssignedOutsidePimAlertIncident";

    /*
     * The assignee display name.
     */
    private String assigneeDisplayName;

    /*
     * The assignee user principal name.
     */
    private String assigneeUserPrincipalName;

    /*
     * The assignee ID.
     */
    private String assigneeId;

    /*
     * The role display name.
     */
    private String roleDisplayName;

    /*
     * The role template ID.
     */
    private String roleTemplateId;

    /*
     * The role definition ID.
     */
    private String roleDefinitionId;

    /*
     * The date the assignment was activated.
     */
    private OffsetDateTime assignmentActivatedDate;

    /*
     * The requestor ID.
     */
    private String requestorId;

    /*
     * The requestor display name.
     */
    private String requestorDisplayName;

    /*
     * The requestor user principal name.
     */
    private String requestorUserPrincipalName;

    /**
     * Creates an instance of AzureRolesAssignedOutsidePimAlertIncidentProperties class.
     */
    public AzureRolesAssignedOutsidePimAlertIncidentProperties() {
    }

    /**
     * Get the alertIncidentType property: The alert incident type.
     * 
     * @return the alertIncidentType value.
     */
    @Override
    public String alertIncidentType() {
        return this.alertIncidentType;
    }

    /**
     * Get the assigneeDisplayName property: The assignee display name.
     * 
     * @return the assigneeDisplayName value.
     */
    public String assigneeDisplayName() {
        return this.assigneeDisplayName;
    }

    /**
     * Get the assigneeUserPrincipalName property: The assignee user principal name.
     * 
     * @return the assigneeUserPrincipalName value.
     */
    public String assigneeUserPrincipalName() {
        return this.assigneeUserPrincipalName;
    }

    /**
     * Get the assigneeId property: The assignee ID.
     * 
     * @return the assigneeId value.
     */
    public String assigneeId() {
        return this.assigneeId;
    }

    /**
     * Get the roleDisplayName property: The role display name.
     * 
     * @return the roleDisplayName value.
     */
    public String roleDisplayName() {
        return this.roleDisplayName;
    }

    /**
     * Get the roleTemplateId property: The role template ID.
     * 
     * @return the roleTemplateId value.
     */
    public String roleTemplateId() {
        return this.roleTemplateId;
    }

    /**
     * Get the roleDefinitionId property: The role definition ID.
     * 
     * @return the roleDefinitionId value.
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Get the assignmentActivatedDate property: The date the assignment was activated.
     * 
     * @return the assignmentActivatedDate value.
     */
    public OffsetDateTime assignmentActivatedDate() {
        return this.assignmentActivatedDate;
    }

    /**
     * Get the requestorId property: The requestor ID.
     * 
     * @return the requestorId value.
     */
    public String requestorId() {
        return this.requestorId;
    }

    /**
     * Get the requestorDisplayName property: The requestor display name.
     * 
     * @return the requestorDisplayName value.
     */
    public String requestorDisplayName() {
        return this.requestorDisplayName;
    }

    /**
     * Get the requestorUserPrincipalName property: The requestor user principal name.
     * 
     * @return the requestorUserPrincipalName value.
     */
    public String requestorUserPrincipalName() {
        return this.requestorUserPrincipalName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("alertIncidentType", this.alertIncidentType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureRolesAssignedOutsidePimAlertIncidentProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureRolesAssignedOutsidePimAlertIncidentProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureRolesAssignedOutsidePimAlertIncidentProperties.
     */
    public static AzureRolesAssignedOutsidePimAlertIncidentProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AzureRolesAssignedOutsidePimAlertIncidentProperties deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties
                = new AzureRolesAssignedOutsidePimAlertIncidentProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("alertIncidentType".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.alertIncidentType
                        = reader.getString();
                } else if ("assigneeDisplayName".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.assigneeDisplayName
                        = reader.getString();
                } else if ("assigneeUserPrincipalName".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.assigneeUserPrincipalName
                        = reader.getString();
                } else if ("assigneeId".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.assigneeId = reader.getString();
                } else if ("roleDisplayName".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.roleDisplayName
                        = reader.getString();
                } else if ("roleTemplateId".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.roleTemplateId = reader.getString();
                } else if ("roleDefinitionId".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.roleDefinitionId
                        = reader.getString();
                } else if ("assignmentActivatedDate".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.assignmentActivatedDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("requestorId".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.requestorId = reader.getString();
                } else if ("requestorDisplayName".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.requestorDisplayName
                        = reader.getString();
                } else if ("requestorUserPrincipalName".equals(fieldName)) {
                    deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties.requestorUserPrincipalName
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureRolesAssignedOutsidePimAlertIncidentProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The PIM Only Mode settings.
 */
@Fluent
public final class PimOnlyModeSettings {
    /*
     * Determines whether the setting is enabled, disabled or report only.
     */
    @JsonProperty(value = "mode")
    private PimOnlyMode mode;

    /*
     * The list of object IDs that the rule does not apply to.
     */
    @JsonProperty(value = "excludes")
    private List<String> excludes;

    /*
     * Exclude all service principals from this rule.
     */
    @JsonProperty(value = "excludeAllServicePrincipals")
    private Boolean excludeAllServicePrincipals;

    /**
     * Creates an instance of PimOnlyModeSettings class.
     */
    public PimOnlyModeSettings() {
    }

    /**
     * Get the mode property: Determines whether the setting is enabled, disabled or report only.
     * 
     * @return the mode value.
     */
    public PimOnlyMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Determines whether the setting is enabled, disabled or report only.
     * 
     * @param mode the mode value to set.
     * @return the PimOnlyModeSettings object itself.
     */
    public PimOnlyModeSettings withMode(PimOnlyMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the excludes property: The list of object IDs that the rule does not apply to.
     * 
     * @return the excludes value.
     */
    public List<String> excludes() {
        return this.excludes;
    }

    /**
     * Set the excludes property: The list of object IDs that the rule does not apply to.
     * 
     * @param excludes the excludes value to set.
     * @return the PimOnlyModeSettings object itself.
     */
    public PimOnlyModeSettings withExcludes(List<String> excludes) {
        this.excludes = excludes;
        return this;
    }

    /**
     * Get the excludeAllServicePrincipals property: Exclude all service principals from this rule.
     * 
     * @return the excludeAllServicePrincipals value.
     */
    public Boolean excludeAllServicePrincipals() {
        return this.excludeAllServicePrincipals;
    }

    /**
     * Set the excludeAllServicePrincipals property: Exclude all service principals from this rule.
     * 
     * @param excludeAllServicePrincipals the excludeAllServicePrincipals value to set.
     * @return the PimOnlyModeSettings object itself.
     */
    public PimOnlyModeSettings withExcludeAllServicePrincipals(Boolean excludeAllServicePrincipals) {
        this.excludeAllServicePrincipals = excludeAllServicePrincipals;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

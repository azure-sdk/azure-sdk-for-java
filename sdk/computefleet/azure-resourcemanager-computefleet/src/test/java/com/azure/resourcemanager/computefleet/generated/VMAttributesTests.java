// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.AcceleratorManufacturer;
import com.azure.resourcemanager.computefleet.models.AcceleratorType;
import com.azure.resourcemanager.computefleet.models.ArchitectureType;
import com.azure.resourcemanager.computefleet.models.CpuManufacturer;
import com.azure.resourcemanager.computefleet.models.LocalStorageDiskType;
import com.azure.resourcemanager.computefleet.models.VMAttributeMinMaxDouble;
import com.azure.resourcemanager.computefleet.models.VMAttributeMinMaxInteger;
import com.azure.resourcemanager.computefleet.models.VMAttributeSupport;
import com.azure.resourcemanager.computefleet.models.VMAttributes;
import com.azure.resourcemanager.computefleet.models.VMCategory;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VMAttributesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VMAttributes model = BinaryData.fromString(
            "{\"vCpuCount\":{\"min\":1471497811,\"max\":700767866},\"memoryInGiB\":{\"min\":97.72873479939565,\"max\":0.1694622715400662},\"localStorageSupport\":\"Required\",\"localStorageInGiB\":{\"min\":56.14730648991429,\"max\":26.326199436407684},\"localStorageDiskTypes\":[\"HDD\",\"HDD\",\"HDD\",\"HDD\"],\"dataDiskCount\":{\"min\":1102727938,\"max\":1294203653},\"networkInterfaceCount\":{\"min\":1743582993,\"max\":1438650135},\"networkBandwidthInMbps\":{\"min\":95.85893282584422,\"max\":85.02961725926099},\"rdmaSupport\":\"Excluded\",\"rdmaNetworkInterfaceCount\":{\"min\":797371044,\"max\":2049120588},\"acceleratorSupport\":\"Required\",\"acceleratorManufacturers\":[\"AMD\",\"Xilinx\",\"Xilinx\"],\"acceleratorTypes\":[\"FPGA\",\"GPU\"],\"acceleratorCount\":{\"min\":388527245,\"max\":1962929741},\"vmCategories\":[\"FpgaAccelerated\",\"GpuAccelerated\"],\"architectureTypes\":[\"X86\",\"X86\",\"X86\",\"ARM64\"],\"cpuManufacturers\":[\"AMD\",\"Intel\",\"AMD\"],\"burstableSupport\":\"Required\",\"excludedVMSizes\":[\"k\",\"tyxolniwpwc\",\"kjfkg\",\"awxklr\"]}")
            .toObject(VMAttributes.class);
        Assertions.assertEquals(1471497811, model.vCpuCount().min());
        Assertions.assertEquals(700767866, model.vCpuCount().max());
        Assertions.assertEquals(97.72873479939565D, model.memoryInGiB().min());
        Assertions.assertEquals(0.1694622715400662D, model.memoryInGiB().max());
        Assertions.assertEquals(VMAttributeSupport.REQUIRED, model.localStorageSupport());
        Assertions.assertEquals(56.14730648991429D, model.localStorageInGiB().min());
        Assertions.assertEquals(26.326199436407684D, model.localStorageInGiB().max());
        Assertions.assertEquals(LocalStorageDiskType.HDD, model.localStorageDiskTypes().get(0));
        Assertions.assertEquals(1102727938, model.dataDiskCount().min());
        Assertions.assertEquals(1294203653, model.dataDiskCount().max());
        Assertions.assertEquals(1743582993, model.networkInterfaceCount().min());
        Assertions.assertEquals(1438650135, model.networkInterfaceCount().max());
        Assertions.assertEquals(95.85893282584422D, model.networkBandwidthInMbps().min());
        Assertions.assertEquals(85.02961725926099D, model.networkBandwidthInMbps().max());
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.rdmaSupport());
        Assertions.assertEquals(797371044, model.rdmaNetworkInterfaceCount().min());
        Assertions.assertEquals(2049120588, model.rdmaNetworkInterfaceCount().max());
        Assertions.assertEquals(VMAttributeSupport.REQUIRED, model.acceleratorSupport());
        Assertions.assertEquals(AcceleratorManufacturer.AMD, model.acceleratorManufacturers().get(0));
        Assertions.assertEquals(AcceleratorType.FPGA, model.acceleratorTypes().get(0));
        Assertions.assertEquals(388527245, model.acceleratorCount().min());
        Assertions.assertEquals(1962929741, model.acceleratorCount().max());
        Assertions.assertEquals(VMCategory.FPGA_ACCELERATED, model.vmCategories().get(0));
        Assertions.assertEquals(ArchitectureType.X86, model.architectureTypes().get(0));
        Assertions.assertEquals(CpuManufacturer.AMD, model.cpuManufacturers().get(0));
        Assertions.assertEquals(VMAttributeSupport.REQUIRED, model.burstableSupport());
        Assertions.assertEquals("k", model.excludedVMSizes().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VMAttributes model = new VMAttributes()
            .withVCpuCount(new VMAttributeMinMaxInteger().withMin(1471497811).withMax(700767866))
            .withMemoryInGiB(new VMAttributeMinMaxDouble().withMin(97.72873479939565D).withMax(0.1694622715400662D))
            .withLocalStorageSupport(VMAttributeSupport.REQUIRED)
            .withLocalStorageInGiB(
                new VMAttributeMinMaxDouble().withMin(56.14730648991429D).withMax(26.326199436407684D))
            .withLocalStorageDiskTypes(Arrays.asList(LocalStorageDiskType.HDD, LocalStorageDiskType.HDD,
                LocalStorageDiskType.HDD, LocalStorageDiskType.HDD))
            .withDataDiskCount(new VMAttributeMinMaxInteger().withMin(1102727938).withMax(1294203653))
            .withNetworkInterfaceCount(new VMAttributeMinMaxInteger().withMin(1743582993).withMax(1438650135))
            .withNetworkBandwidthInMbps(
                new VMAttributeMinMaxDouble().withMin(95.85893282584422D).withMax(85.02961725926099D))
            .withRdmaSupport(VMAttributeSupport.EXCLUDED)
            .withRdmaNetworkInterfaceCount(new VMAttributeMinMaxInteger().withMin(797371044).withMax(2049120588))
            .withAcceleratorSupport(VMAttributeSupport.REQUIRED)
            .withAcceleratorManufacturers(Arrays.asList(AcceleratorManufacturer.AMD, AcceleratorManufacturer.XILINX,
                AcceleratorManufacturer.XILINX))
            .withAcceleratorTypes(Arrays.asList(AcceleratorType.FPGA, AcceleratorType.GPU))
            .withAcceleratorCount(new VMAttributeMinMaxInteger().withMin(388527245).withMax(1962929741))
            .withVmCategories(Arrays.asList(VMCategory.FPGA_ACCELERATED, VMCategory.GPU_ACCELERATED))
            .withArchitectureTypes(
                Arrays.asList(ArchitectureType.X86, ArchitectureType.X86, ArchitectureType.X86, ArchitectureType.ARM64))
            .withCpuManufacturers(Arrays.asList(CpuManufacturer.AMD, CpuManufacturer.INTEL, CpuManufacturer.AMD))
            .withBurstableSupport(VMAttributeSupport.REQUIRED)
            .withExcludedVMSizes(Arrays.asList("k", "tyxolniwpwc", "kjfkg", "awxklr"));
        model = BinaryData.fromObject(model).toObject(VMAttributes.class);
        Assertions.assertEquals(1471497811, model.vCpuCount().min());
        Assertions.assertEquals(700767866, model.vCpuCount().max());
        Assertions.assertEquals(97.72873479939565D, model.memoryInGiB().min());
        Assertions.assertEquals(0.1694622715400662D, model.memoryInGiB().max());
        Assertions.assertEquals(VMAttributeSupport.REQUIRED, model.localStorageSupport());
        Assertions.assertEquals(56.14730648991429D, model.localStorageInGiB().min());
        Assertions.assertEquals(26.326199436407684D, model.localStorageInGiB().max());
        Assertions.assertEquals(LocalStorageDiskType.HDD, model.localStorageDiskTypes().get(0));
        Assertions.assertEquals(1102727938, model.dataDiskCount().min());
        Assertions.assertEquals(1294203653, model.dataDiskCount().max());
        Assertions.assertEquals(1743582993, model.networkInterfaceCount().min());
        Assertions.assertEquals(1438650135, model.networkInterfaceCount().max());
        Assertions.assertEquals(95.85893282584422D, model.networkBandwidthInMbps().min());
        Assertions.assertEquals(85.02961725926099D, model.networkBandwidthInMbps().max());
        Assertions.assertEquals(VMAttributeSupport.EXCLUDED, model.rdmaSupport());
        Assertions.assertEquals(797371044, model.rdmaNetworkInterfaceCount().min());
        Assertions.assertEquals(2049120588, model.rdmaNetworkInterfaceCount().max());
        Assertions.assertEquals(VMAttributeSupport.REQUIRED, model.acceleratorSupport());
        Assertions.assertEquals(AcceleratorManufacturer.AMD, model.acceleratorManufacturers().get(0));
        Assertions.assertEquals(AcceleratorType.FPGA, model.acceleratorTypes().get(0));
        Assertions.assertEquals(388527245, model.acceleratorCount().min());
        Assertions.assertEquals(1962929741, model.acceleratorCount().max());
        Assertions.assertEquals(VMCategory.FPGA_ACCELERATED, model.vmCategories().get(0));
        Assertions.assertEquals(ArchitectureType.X86, model.architectureTypes().get(0));
        Assertions.assertEquals(CpuManufacturer.AMD, model.cpuManufacturers().get(0));
        Assertions.assertEquals(VMAttributeSupport.REQUIRED, model.burstableSupport());
        Assertions.assertEquals("k", model.excludedVMSizes().get(0));
    }
}

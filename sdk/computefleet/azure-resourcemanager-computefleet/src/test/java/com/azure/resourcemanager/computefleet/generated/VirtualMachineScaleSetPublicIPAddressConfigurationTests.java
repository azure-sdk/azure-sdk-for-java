// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.management.SubResource;
import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.DeleteOptions;
import com.azure.resourcemanager.computefleet.models.DomainNameLabelScopeTypes;
import com.azure.resourcemanager.computefleet.models.IPVersion;
import com.azure.resourcemanager.computefleet.models.PublicIPAddressSku;
import com.azure.resourcemanager.computefleet.models.PublicIPAddressSkuName;
import com.azure.resourcemanager.computefleet.models.PublicIPAddressSkuTier;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetIpTag;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetPublicIPAddressConfiguration;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetPublicIPAddressConfigurationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineScaleSetPublicIPAddressConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineScaleSetPublicIPAddressConfiguration model = BinaryData.fromString(
            "{\"name\":\"p\",\"properties\":{\"idleTimeoutInMinutes\":899256068,\"dnsSettings\":{\"domainNameLabel\":\"tguvriuhp\",\"domainNameLabelScope\":\"ResourceGroupReuse\"},\"ipTags\":[{\"ipTagType\":\"xqtayriwwro\",\"tag\":\"bexrmcq\"},{\"ipTagType\":\"ycnojvknmefqsg\",\"tag\":\"ah\"},{\"ipTagType\":\"jyzhpvgq\",\"tag\":\"j\"},{\"ipTagType\":\"xdjzlmwlxk\",\"tag\":\"gfhzovawjvzunlut\"}],\"publicIPPrefix\":{\"id\":\"prnxipeil\"},\"publicIPAddressVersion\":\"IPv4\",\"deleteOption\":\"Delete\"},\"sku\":{\"name\":\"Basic\",\"tier\":\"Global\"}}")
            .toObject(VirtualMachineScaleSetPublicIPAddressConfiguration.class);
        Assertions.assertEquals("p", model.name());
        Assertions.assertEquals(899256068, model.properties().idleTimeoutInMinutes());
        Assertions.assertEquals("tguvriuhp", model.properties().dnsSettings().domainNameLabel());
        Assertions.assertEquals(DomainNameLabelScopeTypes.RESOURCE_GROUP_REUSE,
            model.properties().dnsSettings().domainNameLabelScope());
        Assertions.assertEquals("xqtayriwwro", model.properties().ipTags().get(0).ipTagType());
        Assertions.assertEquals("bexrmcq", model.properties().ipTags().get(0).tag());
        Assertions.assertEquals("prnxipeil", model.properties().publicIPPrefix().id());
        Assertions.assertEquals(IPVersion.IPV4, model.properties().publicIPAddressVersion());
        Assertions.assertEquals(DeleteOptions.DELETE, model.properties().deleteOption());
        Assertions.assertEquals(PublicIPAddressSkuName.BASIC, model.sku().name());
        Assertions.assertEquals(PublicIPAddressSkuTier.GLOBAL, model.sku().tier());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineScaleSetPublicIPAddressConfiguration model
            = new VirtualMachineScaleSetPublicIPAddressConfiguration().withName("p")
                .withProperties(new VirtualMachineScaleSetPublicIPAddressConfigurationProperties()
                    .withIdleTimeoutInMinutes(899256068)
                    .withDnsSettings(new VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings()
                        .withDomainNameLabel("tguvriuhp")
                        .withDomainNameLabelScope(DomainNameLabelScopeTypes.RESOURCE_GROUP_REUSE))
                    .withIpTags(
                        Arrays.asList(new VirtualMachineScaleSetIpTag().withIpTagType("xqtayriwwro").withTag("bexrmcq"),
                            new VirtualMachineScaleSetIpTag().withIpTagType("ycnojvknmefqsg").withTag("ah"),
                            new VirtualMachineScaleSetIpTag().withIpTagType("jyzhpvgq").withTag("j"),
                            new VirtualMachineScaleSetIpTag().withIpTagType("xdjzlmwlxk").withTag("gfhzovawjvzunlut")))
                    .withPublicIPPrefix(new SubResource().withId("prnxipeil"))
                    .withPublicIPAddressVersion(IPVersion.IPV4)
                    .withDeleteOption(DeleteOptions.DELETE))
                .withSku(new PublicIPAddressSku().withName(PublicIPAddressSkuName.BASIC)
                    .withTier(PublicIPAddressSkuTier.GLOBAL));
        model = BinaryData.fromObject(model).toObject(VirtualMachineScaleSetPublicIPAddressConfiguration.class);
        Assertions.assertEquals("p", model.name());
        Assertions.assertEquals(899256068, model.properties().idleTimeoutInMinutes());
        Assertions.assertEquals("tguvriuhp", model.properties().dnsSettings().domainNameLabel());
        Assertions.assertEquals(DomainNameLabelScopeTypes.RESOURCE_GROUP_REUSE,
            model.properties().dnsSettings().domainNameLabelScope());
        Assertions.assertEquals("xqtayriwwro", model.properties().ipTags().get(0).ipTagType());
        Assertions.assertEquals("bexrmcq", model.properties().ipTags().get(0).tag());
        Assertions.assertEquals("prnxipeil", model.properties().publicIPPrefix().id());
        Assertions.assertEquals(IPVersion.IPV4, model.properties().publicIPAddressVersion());
        Assertions.assertEquals(DeleteOptions.DELETE, model.properties().deleteOption());
        Assertions.assertEquals(PublicIPAddressSkuName.BASIC, model.sku().name());
        Assertions.assertEquals(PublicIPAddressSkuTier.GLOBAL, model.sku().tier());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.CachingTypes;
import com.azure.resourcemanager.computefleet.models.DiskCreateOptionTypes;
import com.azure.resourcemanager.computefleet.models.DiskDeleteOptionTypes;
import com.azure.resourcemanager.computefleet.models.DiskEncryptionSetParameters;
import com.azure.resourcemanager.computefleet.models.SecurityEncryptionTypes;
import com.azure.resourcemanager.computefleet.models.StorageAccountTypes;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetDataDisk;
import com.azure.resourcemanager.computefleet.models.VirtualMachineScaleSetManagedDiskParameters;
import com.azure.resourcemanager.computefleet.models.VMDiskSecurityProfile;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineScaleSetDataDiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineScaleSetDataDisk model = BinaryData.fromString(
            "{\"name\":\"oifiyipjxsqwpgr\",\"lun\":1124714443,\"caching\":\"ReadOnly\",\"writeAcceleratorEnabled\":true,\"createOption\":\"Restore\",\"diskSizeGB\":504698966,\"managedDisk\":{\"storageAccountType\":\"StandardSSD_ZRS\",\"diskEncryptionSet\":{\"id\":\"xqabnmocpcysh\"},\"securityProfile\":{\"securityEncryptionType\":\"VMGuestStateOnly\",\"diskEncryptionSet\":{\"id\":\"ljjgpbtoqcjmkl\"}}},\"diskIOPSReadWrite\":5230040712627920734,\"diskMBpsReadWrite\":270477454684900932,\"deleteOption\":\"Detach\"}")
            .toObject(VirtualMachineScaleSetDataDisk.class);
        Assertions.assertEquals("oifiyipjxsqwpgr", model.name());
        Assertions.assertEquals(1124714443, model.lun());
        Assertions.assertEquals(CachingTypes.READ_ONLY, model.caching());
        Assertions.assertEquals(true, model.writeAcceleratorEnabled());
        Assertions.assertEquals(DiskCreateOptionTypes.RESTORE, model.createOption());
        Assertions.assertEquals(504698966, model.diskSizeGB());
        Assertions.assertEquals(StorageAccountTypes.STANDARD_SSD_ZRS, model.managedDisk().storageAccountType());
        Assertions.assertEquals("xqabnmocpcysh", model.managedDisk().diskEncryptionSet().id());
        Assertions.assertEquals(SecurityEncryptionTypes.VMGUEST_STATE_ONLY,
            model.managedDisk().securityProfile().securityEncryptionType());
        Assertions.assertEquals("ljjgpbtoqcjmkl", model.managedDisk().securityProfile().diskEncryptionSet().id());
        Assertions.assertEquals(5230040712627920734L, model.diskIOPSReadWrite());
        Assertions.assertEquals(270477454684900932L, model.diskMBpsReadWrite());
        Assertions.assertEquals(DiskDeleteOptionTypes.DETACH, model.deleteOption());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineScaleSetDataDisk model
            = new VirtualMachineScaleSetDataDisk().withName("oifiyipjxsqwpgr")
                .withLun(1124714443)
                .withCaching(CachingTypes.READ_ONLY)
                .withWriteAcceleratorEnabled(true)
                .withCreateOption(DiskCreateOptionTypes.RESTORE)
                .withDiskSizeGB(504698966)
                .withManagedDisk(new VirtualMachineScaleSetManagedDiskParameters()
                    .withStorageAccountType(StorageAccountTypes.STANDARD_SSD_ZRS)
                    .withDiskEncryptionSet(new DiskEncryptionSetParameters().withId("xqabnmocpcysh"))
                    .withSecurityProfile(new VMDiskSecurityProfile()
                        .withSecurityEncryptionType(SecurityEncryptionTypes.VMGUEST_STATE_ONLY)
                        .withDiskEncryptionSet(new DiskEncryptionSetParameters().withId("ljjgpbtoqcjmkl"))))
                .withDiskIOPSReadWrite(5230040712627920734L)
                .withDiskMBpsReadWrite(270477454684900932L)
                .withDeleteOption(DiskDeleteOptionTypes.DETACH);
        model = BinaryData.fromObject(model).toObject(VirtualMachineScaleSetDataDisk.class);
        Assertions.assertEquals("oifiyipjxsqwpgr", model.name());
        Assertions.assertEquals(1124714443, model.lun());
        Assertions.assertEquals(CachingTypes.READ_ONLY, model.caching());
        Assertions.assertEquals(true, model.writeAcceleratorEnabled());
        Assertions.assertEquals(DiskCreateOptionTypes.RESTORE, model.createOption());
        Assertions.assertEquals(504698966, model.diskSizeGB());
        Assertions.assertEquals(StorageAccountTypes.STANDARD_SSD_ZRS, model.managedDisk().storageAccountType());
        Assertions.assertEquals("xqabnmocpcysh", model.managedDisk().diskEncryptionSet().id());
        Assertions.assertEquals(SecurityEncryptionTypes.VMGUEST_STATE_ONLY,
            model.managedDisk().securityProfile().securityEncryptionType());
        Assertions.assertEquals("ljjgpbtoqcjmkl", model.managedDisk().securityProfile().diskEncryptionSet().id());
        Assertions.assertEquals(5230040712627920734L, model.diskIOPSReadWrite());
        Assertions.assertEquals(270477454684900932L, model.diskMBpsReadWrite());
        Assertions.assertEquals(DiskDeleteOptionTypes.DETACH, model.deleteOption());
    }
}

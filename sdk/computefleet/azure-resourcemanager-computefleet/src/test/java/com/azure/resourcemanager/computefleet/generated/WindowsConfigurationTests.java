// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computefleet.models.AdditionalUnattendContent;
import com.azure.resourcemanager.computefleet.models.AdditionalUnattendContentComponentName;
import com.azure.resourcemanager.computefleet.models.AdditionalUnattendContentPassName;
import com.azure.resourcemanager.computefleet.models.PatchSettings;
import com.azure.resourcemanager.computefleet.models.ProtocolTypes;
import com.azure.resourcemanager.computefleet.models.SettingNames;
import com.azure.resourcemanager.computefleet.models.WinRMConfiguration;
import com.azure.resourcemanager.computefleet.models.WinRMListener;
import com.azure.resourcemanager.computefleet.models.WindowsConfiguration;
import com.azure.resourcemanager.computefleet.models.WindowsPatchAssessmentMode;
import com.azure.resourcemanager.computefleet.models.WindowsVMGuestPatchAutomaticByPlatformRebootSetting;
import com.azure.resourcemanager.computefleet.models.WindowsVMGuestPatchAutomaticByPlatformSettings;
import com.azure.resourcemanager.computefleet.models.WindowsVMGuestPatchMode;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WindowsConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WindowsConfiguration model = BinaryData.fromString(
            "{\"provisionVMAgent\":false,\"enableAutomaticUpdates\":false,\"timeZone\":\"xigjyjgzjaoyfhr\",\"additionalUnattendContent\":[{\"passName\":\"OobeSystem\",\"componentName\":\"Microsoft-Windows-Shell-Setup\",\"settingName\":\"AutoLogon\",\"content\":\"ysvlejuvf\"},{\"passName\":\"OobeSystem\",\"componentName\":\"Microsoft-Windows-Shell-Setup\",\"settingName\":\"FirstLogonCommands\",\"content\":\"jkcpr\"},{\"passName\":\"OobeSystem\",\"componentName\":\"Microsoft-Windows-Shell-Setup\",\"settingName\":\"FirstLogonCommands\",\"content\":\"tbvpysszdnru\"},{\"passName\":\"OobeSystem\",\"componentName\":\"Microsoft-Windows-Shell-Setup\",\"settingName\":\"AutoLogon\",\"content\":\"uqfprwzw\"}],\"patchSettings\":{\"patchMode\":\"AutomaticByOS\",\"enableHotpatching\":false,\"assessmentMode\":\"ImageDefault\",\"automaticByPlatformSettings\":{\"rebootSetting\":\"Unknown\",\"bypassPlatformSafetyChecksOnUserSchedule\":false}},\"winRM\":{\"listeners\":[{\"protocol\":\"Https\",\"certificateUrl\":\"uckyf\"},{\"protocol\":\"Https\",\"certificateUrl\":\"idf\"},{\"protocol\":\"Https\",\"certificateUrl\":\"zuhtymwisdkfthwx\"}]},\"enableVMAgentPlatformUpdates\":false}")
            .toObject(WindowsConfiguration.class);
        Assertions.assertEquals(false, model.provisionVMAgent());
        Assertions.assertEquals(false, model.enableAutomaticUpdates());
        Assertions.assertEquals("xigjyjgzjaoyfhr", model.timeZone());
        Assertions.assertEquals(AdditionalUnattendContentPassName.OOBE_SYSTEM,
            model.additionalUnattendContent().get(0).passName());
        Assertions.assertEquals(AdditionalUnattendContentComponentName.MICROSOFT_WINDOWS_SHELL_SETUP,
            model.additionalUnattendContent().get(0).componentName());
        Assertions.assertEquals(SettingNames.AUTO_LOGON, model.additionalUnattendContent().get(0).settingName());
        Assertions.assertEquals("ysvlejuvf", model.additionalUnattendContent().get(0).content());
        Assertions.assertEquals(WindowsVMGuestPatchMode.AUTOMATIC_BY_OS, model.patchSettings().patchMode());
        Assertions.assertEquals(false, model.patchSettings().enableHotpatching());
        Assertions.assertEquals(WindowsPatchAssessmentMode.IMAGE_DEFAULT, model.patchSettings().assessmentMode());
        Assertions.assertEquals(WindowsVMGuestPatchAutomaticByPlatformRebootSetting.UNKNOWN,
            model.patchSettings().automaticByPlatformSettings().rebootSetting());
        Assertions.assertEquals(false,
            model.patchSettings().automaticByPlatformSettings().bypassPlatformSafetyChecksOnUserSchedule());
        Assertions.assertEquals(ProtocolTypes.HTTPS, model.winRM().listeners().get(0).protocol());
        Assertions.assertEquals("uckyf", model.winRM().listeners().get(0).certificateUrl());
        Assertions.assertEquals(false, model.enableVMAgentPlatformUpdates());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WindowsConfiguration model = new WindowsConfiguration().withProvisionVMAgent(false)
            .withEnableAutomaticUpdates(false)
            .withTimeZone("xigjyjgzjaoyfhr")
            .withAdditionalUnattendContent(Arrays.asList(
                new AdditionalUnattendContent().withPassName(AdditionalUnattendContentPassName.OOBE_SYSTEM)
                    .withComponentName(AdditionalUnattendContentComponentName.MICROSOFT_WINDOWS_SHELL_SETUP)
                    .withSettingName(SettingNames.AUTO_LOGON)
                    .withContent("ysvlejuvf"),
                new AdditionalUnattendContent().withPassName(AdditionalUnattendContentPassName.OOBE_SYSTEM)
                    .withComponentName(AdditionalUnattendContentComponentName.MICROSOFT_WINDOWS_SHELL_SETUP)
                    .withSettingName(SettingNames.FIRST_LOGON_COMMANDS)
                    .withContent("jkcpr"),
                new AdditionalUnattendContent().withPassName(AdditionalUnattendContentPassName.OOBE_SYSTEM)
                    .withComponentName(AdditionalUnattendContentComponentName.MICROSOFT_WINDOWS_SHELL_SETUP)
                    .withSettingName(SettingNames.FIRST_LOGON_COMMANDS)
                    .withContent("tbvpysszdnru"),
                new AdditionalUnattendContent().withPassName(AdditionalUnattendContentPassName.OOBE_SYSTEM)
                    .withComponentName(AdditionalUnattendContentComponentName.MICROSOFT_WINDOWS_SHELL_SETUP)
                    .withSettingName(SettingNames.AUTO_LOGON)
                    .withContent("uqfprwzw")))
            .withPatchSettings(new PatchSettings().withPatchMode(WindowsVMGuestPatchMode.AUTOMATIC_BY_OS)
                .withEnableHotpatching(false)
                .withAssessmentMode(WindowsPatchAssessmentMode.IMAGE_DEFAULT)
                .withAutomaticByPlatformSettings(new WindowsVMGuestPatchAutomaticByPlatformSettings()
                    .withRebootSetting(WindowsVMGuestPatchAutomaticByPlatformRebootSetting.UNKNOWN)
                    .withBypassPlatformSafetyChecksOnUserSchedule(false)))
            .withWinRM(new WinRMConfiguration().withListeners(
                Arrays.asList(new WinRMListener().withProtocol(ProtocolTypes.HTTPS).withCertificateUrl("uckyf"),
                    new WinRMListener().withProtocol(ProtocolTypes.HTTPS).withCertificateUrl("idf"),
                    new WinRMListener().withProtocol(ProtocolTypes.HTTPS).withCertificateUrl("zuhtymwisdkfthwx"))))
            .withEnableVMAgentPlatformUpdates(false);
        model = BinaryData.fromObject(model).toObject(WindowsConfiguration.class);
        Assertions.assertEquals(false, model.provisionVMAgent());
        Assertions.assertEquals(false, model.enableAutomaticUpdates());
        Assertions.assertEquals("xigjyjgzjaoyfhr", model.timeZone());
        Assertions.assertEquals(AdditionalUnattendContentPassName.OOBE_SYSTEM,
            model.additionalUnattendContent().get(0).passName());
        Assertions.assertEquals(AdditionalUnattendContentComponentName.MICROSOFT_WINDOWS_SHELL_SETUP,
            model.additionalUnattendContent().get(0).componentName());
        Assertions.assertEquals(SettingNames.AUTO_LOGON, model.additionalUnattendContent().get(0).settingName());
        Assertions.assertEquals("ysvlejuvf", model.additionalUnattendContent().get(0).content());
        Assertions.assertEquals(WindowsVMGuestPatchMode.AUTOMATIC_BY_OS, model.patchSettings().patchMode());
        Assertions.assertEquals(false, model.patchSettings().enableHotpatching());
        Assertions.assertEquals(WindowsPatchAssessmentMode.IMAGE_DEFAULT, model.patchSettings().assessmentMode());
        Assertions.assertEquals(WindowsVMGuestPatchAutomaticByPlatformRebootSetting.UNKNOWN,
            model.patchSettings().automaticByPlatformSettings().rebootSetting());
        Assertions.assertEquals(false,
            model.patchSettings().automaticByPlatformSettings().bypassPlatformSafetyChecksOnUserSchedule());
        Assertions.assertEquals(ProtocolTypes.HTTPS, model.winRM().listeners().get(0).protocol());
        Assertions.assertEquals("uckyf", model.winRM().listeners().get(0).certificateUrl());
        Assertions.assertEquals(false, model.enableVMAgentPlatformUpdates());
    }
}

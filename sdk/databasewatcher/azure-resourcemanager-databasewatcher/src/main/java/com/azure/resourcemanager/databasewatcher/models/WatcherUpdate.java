// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databasewatcher.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.databasewatcher.fluent.models.WatcherUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The type used for update operations of the Watcher.
 */
@Fluent
public final class WatcherUpdate {
    /*
     * The managed service identities assigned to this resource.
     */
    @JsonProperty(value = "identity")
    private AzureResourceManagerLegacyManagedServiceIdentityV4 identity;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the Watcher.
     */
    @JsonProperty(value = "properties")
    private WatcherUpdateProperties innerProperties;

    /**
     * Creates an instance of WatcherUpdate class.
     */
    public WatcherUpdate() {
    }

    /**
     * Get the identity property: The managed service identities assigned to this resource.
     * 
     * @return the identity value.
     */
    public AzureResourceManagerLegacyManagedServiceIdentityV4 identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The managed service identities assigned to this resource.
     * 
     * @param identity the identity value to set.
     * @return the WatcherUpdate object itself.
     */
    public WatcherUpdate withIdentity(AzureResourceManagerLegacyManagedServiceIdentityV4 identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the WatcherUpdate object itself.
     */
    public WatcherUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the Watcher.
     * 
     * @return the innerProperties value.
     */
    private WatcherUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the datastore property: The data store for collected monitoring data.
     * 
     * @return the datastore value.
     */
    public DatastoreUpdate datastore() {
        return this.innerProperties() == null ? null : this.innerProperties().datastore();
    }

    /**
     * Set the datastore property: The data store for collected monitoring data.
     * 
     * @param datastore the datastore value to set.
     * @return the WatcherUpdate object itself.
     */
    public WatcherUpdate withDatastore(DatastoreUpdate datastore) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WatcherUpdateProperties();
        }
        this.innerProperties().withDatastore(datastore);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

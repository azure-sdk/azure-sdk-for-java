// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databasewatcher.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The properties specific to single database in Azure SQL Database.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "targetType")
@JsonTypeName("SqlDb")
@Fluent
public final class SqlDbSingleDatabaseTargetProperties extends TargetProperties {
    /*
     * The Azure ResourceId of an Azure SQL DB single database target.
     */
    @JsonProperty(value = "sqlDbResourceId", required = true)
    private String sqlDbResourceId;

    /*
     * Set to true to monitor a high availability replica of specified target, if any.
     */
    @JsonProperty(value = "readIntent")
    private Boolean readIntent;

    /**
     * Creates an instance of SqlDbSingleDatabaseTargetProperties class.
     */
    public SqlDbSingleDatabaseTargetProperties() {
    }

    /**
     * Get the sqlDbResourceId property: The Azure ResourceId of an Azure SQL DB single database target.
     * 
     * @return the sqlDbResourceId value.
     */
    public String sqlDbResourceId() {
        return this.sqlDbResourceId;
    }

    /**
     * Set the sqlDbResourceId property: The Azure ResourceId of an Azure SQL DB single database target.
     * 
     * @param sqlDbResourceId the sqlDbResourceId value to set.
     * @return the SqlDbSingleDatabaseTargetProperties object itself.
     */
    public SqlDbSingleDatabaseTargetProperties withSqlDbResourceId(String sqlDbResourceId) {
        this.sqlDbResourceId = sqlDbResourceId;
        return this;
    }

    /**
     * Get the readIntent property: Set to true to monitor a high availability replica of specified target, if any.
     * 
     * @return the readIntent value.
     */
    public Boolean readIntent() {
        return this.readIntent;
    }

    /**
     * Set the readIntent property: Set to true to monitor a high availability replica of specified target, if any.
     * 
     * @param readIntent the readIntent value to set.
     * @return the SqlDbSingleDatabaseTargetProperties object itself.
     */
    public SqlDbSingleDatabaseTargetProperties withReadIntent(Boolean readIntent) {
        this.readIntent = readIntent;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlDbSingleDatabaseTargetProperties
        withTargetAuthenticationType(TargetAuthenticationType targetAuthenticationType) {
        super.withTargetAuthenticationType(targetAuthenticationType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlDbSingleDatabaseTargetProperties withTargetVault(VaultSecret targetVault) {
        super.withTargetVault(targetVault);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlDbSingleDatabaseTargetProperties withConnectionServerName(String connectionServerName) {
        super.withConnectionServerName(connectionServerName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (sqlDbResourceId() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property sqlDbResourceId in model SqlDbSingleDatabaseTargetProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SqlDbSingleDatabaseTargetProperties.class);
}

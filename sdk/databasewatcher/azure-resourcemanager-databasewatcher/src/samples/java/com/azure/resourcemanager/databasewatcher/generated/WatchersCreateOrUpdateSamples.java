// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databasewatcher.generated;

import com.azure.resourcemanager.databasewatcher.models.Datastore;
import com.azure.resourcemanager.databasewatcher.models.KustoOfferingType;
import com.azure.resourcemanager.databasewatcher.models.ManagedServiceIdentity;
import com.azure.resourcemanager.databasewatcher.models.ManagedServiceIdentityType;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Watchers CreateOrUpdate.
 */
public final class WatchersCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/databasewatcher/resource-manager/Microsoft.DatabaseWatcher/preview/2024-07-19-preview/examples/
     * Watchers_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: Watchers_CreateOrUpdate - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to DatabasewatcherManager.
     */
    public static void watchersCreateOrUpdateGeneratedByMaximumSetRule(
        com.azure.resourcemanager.databasewatcher.DatabasewatcherManager manager) {
        manager.watchers()
            .define("testWatcher")
            .withRegion("eastus2euap")
            .withExistingResourceGroup("rgWatcher")
            .withTags(mapOf())
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED))
            .withDatastore(new Datastore().withAdxClusterResourceId(
                "/subscriptions/6f53185c-ea09-4fc3-9075-318dec805303/resourceGroups/apiTest/providers/Microsoft.Kusto/clusters/apiTestKusto")
                .withKustoClusterDisplayName("kustoUri-adx")
                .withKustoClusterUri("https://kustouri-adx.eastus.kusto.windows.net")
                .withKustoDataIngestionUri("https://ingest-kustouri-adx.eastus.kusto.windows.net")
                .withKustoDatabaseName("kustoDatabaseName1")
                .withKustoManagementUrl("https://portal.azure.com/")
                .withKustoOfferingType(KustoOfferingType.ADX))
            .withDefaultAlertRuleIdentityResourceId(
                "/subscriptions/469DD77C-C8DB-47B7-B9E1-72D29F8C878B/resourceGroups/rgWatcher/providers/Microsoft.ManagedIdentity/userAssignedIdentities/3pmtest")
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.sphere.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.sphere.AzureSphereManager;
import com.azure.resourcemanager.sphere.models.Deployment;
import com.azure.resourcemanager.sphere.models.RegionalDataBoundary;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CatalogsListDeploymentsMockTests {
    @Test
    public void testListDeployments() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"deploymentId\":\"cn\",\"deployedImages\":[{\"properties\":{\"image\":\"tkphywpnvjtoqn\",\"imageId\":\"mclfplphoxuscr\",\"imageName\":\"bgyepsbj\",\"regionalDataBoundary\":\"None\",\"uri\":\"ugxywpmueef\",\"description\":\"wfqkquj\",\"componentId\":\"suyonobglaocq\",\"imageType\":\"NormalWorldKernel\",\"provisioningState\":\"Deleting\"},\"id\":\"yudxytlmoy\",\"name\":\"xv\",\"type\":\"fudwpznt\"},{\"properties\":{\"image\":\"zhlrqjb\",\"imageId\":\"kfrlhrxsbky\",\"imageName\":\"ycanuzbpzkafku\",\"regionalDataBoundary\":\"None\",\"uri\":\"nwbmeh\",\"description\":\"eyvjusrtslhspkde\",\"componentId\":\"aofmxagkvtme\",\"imageType\":\"BootManifest\",\"provisioningState\":\"Failed\"},\"id\":\"ahvljuaha\",\"name\":\"uhcdhm\",\"type\":\"ualaexqpvfadmw\"},{\"properties\":{\"image\":\"r\",\"imageId\":\"xpvgo\",\"imageName\":\"lf\",\"regionalDataBoundary\":\"EU\",\"uri\":\"wbnb\",\"description\":\"ldawkzbaliourqha\",\"componentId\":\"uhashsfwx\",\"imageType\":\"CustomerUpdateManifest\",\"provisioningState\":\"Provisioning\"},\"id\":\"cugicjoox\",\"name\":\"j\",\"type\":\"bwpucwwfvovbv\"}],\"deploymentDateUtc\":\"2021-07-16T17:26Z\",\"provisioningState\":\"Updating\"},\"id\":\"vyhzceuojgjrwj\",\"name\":\"eiotwmcdytdx\",\"type\":\"it\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureSphereManager manager = AzureSphereManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Deployment> response = manager.catalogs()
            .listDeployments("xvnmicykvceov", "ilovnot", "fj", 1045744686, 1745104172, 1358891927,
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cn", response.iterator().next().properties().deploymentId());
        Assertions.assertEquals("tkphywpnvjtoqn",
            response.iterator().next().properties().deployedImages().get(0).properties().image());
        Assertions.assertEquals("mclfplphoxuscr",
            response.iterator().next().properties().deployedImages().get(0).properties().imageId());
        Assertions.assertEquals(RegionalDataBoundary.NONE,
            response.iterator().next().properties().deployedImages().get(0).properties().regionalDataBoundary());
    }
}

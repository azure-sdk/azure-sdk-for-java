// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.sphere.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.sphere.AzureSphereManager;
import com.azure.resourcemanager.sphere.models.Certificate;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CertificatesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"certificate\":\"ygpfqb\",\"status\":\"Revoked\",\"subject\":\"op\",\"thumbprint\":\"qrhhu\",\"expiryUtc\":\"2021-05-07T00:48:34Z\",\"notBeforeUtc\":\"2021-03-20T16:48:49Z\",\"provisioningState\":\"Provisioning\"},\"id\":\"qxolzdahzx\",\"name\":\"t\",\"type\":\"bgbkdmoizpost\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureSphereManager manager = AzureSphereManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Certificate response = manager.certificates()
            .getWithResponse("rmgucnap", "t", "oellwp", com.azure.core.util.Context.NONE)
            .getValue();

    }
}

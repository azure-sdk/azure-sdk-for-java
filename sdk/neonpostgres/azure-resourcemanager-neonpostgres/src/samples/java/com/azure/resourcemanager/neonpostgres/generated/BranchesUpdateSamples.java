// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.neonpostgres.generated;

import com.azure.resourcemanager.neonpostgres.models.Branch;
import com.azure.resourcemanager.neonpostgres.models.models.Attributes;
import com.azure.resourcemanager.neonpostgres.models.models.BranchProperties;
import com.azure.resourcemanager.neonpostgres.models.models.EndpointProperties;
import com.azure.resourcemanager.neonpostgres.models.models.EndpointType;
import com.azure.resourcemanager.neonpostgres.models.models.NeonDatabaseProperties;
import com.azure.resourcemanager.neonpostgres.models.models.NeonRoleProperties;
import java.util.Arrays;

/**
 * Samples for Branches Update.
 */
public final class BranchesUpdateSamples {
    /*
     * x-ms-original-file: 2025-03-01-preview/Branches_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: Branches_Update_MaximumSet.
     * 
     * @param manager Entry point to NeonPostgresManager.
     */
    public static void branchesUpdateMaximumSet(com.azure.resourcemanager.neonpostgres.NeonPostgresManager manager) {
        Branch resource = manager.branches()
            .getWithResponse("rgneon", "testOrg123", "test-entity", "test-entity", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withProperties(new BranchProperties().withEntityName("test-name")
                .withAttributes(Arrays.asList(new Attributes().withName("ioyjfywmt").withValue("sfbpcr")))
                .withProjectId("vtdzaxdiwnzvq")
                .withParentId("test-id")
                .withRoleName("imfhfgfpamibgcgibgxor")
                .withDatabaseName("xargveemydmqrdtjcdhf")
                .withRoles(Arrays.asList(new NeonRoleProperties().withEntityName("test-name")
                    .withAttributes(Arrays.asList(new Attributes().withName("ioyjfywmt").withValue("sfbpcr")))
                    .withBranchId("iecxepxhnzhjzeiguki")
                    .withPermissions(Arrays.asList("ddwmkyztotgspcbetfokelddpmq"))
                    .withIsSuperUser(true)))
                .withDatabases(Arrays.asList(new NeonDatabaseProperties().withEntityName("test-name")
                    .withAttributes(Arrays.asList(new Attributes().withName("ioyjfywmt").withValue("sfbpcr")))
                    .withBranchId("zoaopvqitcgjdmsllgzdbrb")
                    .withOwnerName("cutdyjupbqghhxfkmsslzvmjwa")))
                .withEndpoints(Arrays.asList(new EndpointProperties().withEntityName("test-name")
                    .withAttributes(Arrays.asList(new Attributes().withName("ioyjfywmt").withValue("sfbpcr")))
                    .withProjectId("fhfdyuiaaftqormerayks")
                    .withBranchId("oejenjawxexhuotsxodbl")
                    .withEndpointType(EndpointType.READ_ONLY))))
            .apply();
    }
}

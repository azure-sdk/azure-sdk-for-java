// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.standbypool.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.standbypool.fluent.models.StandbyContainerGroupPoolResourceUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The type used for update operations of the StandbyContainerGroupPoolResource.
 */
@Fluent
public final class StandbyContainerGroupPoolResourceUpdate {
    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the StandbyContainerGroupPoolResource.
     */
    @JsonProperty(value = "properties")
    private StandbyContainerGroupPoolResourceUpdateProperties innerProperties;

    /**
     * Creates an instance of StandbyContainerGroupPoolResourceUpdate class.
     */
    public StandbyContainerGroupPoolResourceUpdate() {
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the StandbyContainerGroupPoolResourceUpdate object itself.
     */
    public StandbyContainerGroupPoolResourceUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the StandbyContainerGroupPoolResource.
     * 
     * @return the innerProperties value.
     */
    private StandbyContainerGroupPoolResourceUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the elasticityProfile property: Specifies elasticity profile of standby container group pools.
     * 
     * @return the elasticityProfile value.
     */
    public StandbyContainerGroupPoolElasticityProfileUpdate elasticityProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().elasticityProfile();
    }

    /**
     * Set the elasticityProfile property: Specifies elasticity profile of standby container group pools.
     * 
     * @param elasticityProfile the elasticityProfile value to set.
     * @return the StandbyContainerGroupPoolResourceUpdate object itself.
     */
    public StandbyContainerGroupPoolResourceUpdate
        withElasticityProfile(StandbyContainerGroupPoolElasticityProfileUpdate elasticityProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StandbyContainerGroupPoolResourceUpdateProperties();
        }
        this.innerProperties().withElasticityProfile(elasticityProfile);
        return this;
    }

    /**
     * Get the containerGroupProperties property: Specifies container group properties of standby container group
     * pools.
     * 
     * @return the containerGroupProperties value.
     */
    public ContainerGroupPropertiesUpdate containerGroupProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().containerGroupProperties();
    }

    /**
     * Set the containerGroupProperties property: Specifies container group properties of standby container group
     * pools.
     * 
     * @param containerGroupProperties the containerGroupProperties value to set.
     * @return the StandbyContainerGroupPoolResourceUpdate object itself.
     */
    public StandbyContainerGroupPoolResourceUpdate
        withContainerGroupProperties(ContainerGroupPropertiesUpdate containerGroupProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StandbyContainerGroupPoolResourceUpdateProperties();
        }
        this.innerProperties().withContainerGroupProperties(containerGroupProperties);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

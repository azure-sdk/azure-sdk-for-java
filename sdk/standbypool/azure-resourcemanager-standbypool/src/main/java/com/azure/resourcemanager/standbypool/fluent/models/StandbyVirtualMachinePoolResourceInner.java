// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.standbypool.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.standbypool.models.ProvisioningState;
import com.azure.resourcemanager.standbypool.models.StandbyVirtualMachinePoolElasticityProfile;
import com.azure.resourcemanager.standbypool.models.VirtualMachineState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * A StandbyVirtualMachinePoolResource.
 */
@Fluent
public final class StandbyVirtualMachinePoolResourceInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private StandbyVirtualMachinePoolResourceProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of StandbyVirtualMachinePoolResourceInner class.
     */
    public StandbyVirtualMachinePoolResourceInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private StandbyVirtualMachinePoolResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandbyVirtualMachinePoolResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandbyVirtualMachinePoolResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the elasticityProfile property: Specifies the elasticity profile of the standby virtual machine pools.
     * 
     * @return the elasticityProfile value.
     */
    public StandbyVirtualMachinePoolElasticityProfile elasticityProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().elasticityProfile();
    }

    /**
     * Set the elasticityProfile property: Specifies the elasticity profile of the standby virtual machine pools.
     * 
     * @param elasticityProfile the elasticityProfile value to set.
     * @return the StandbyVirtualMachinePoolResourceInner object itself.
     */
    public StandbyVirtualMachinePoolResourceInner
        withElasticityProfile(StandbyVirtualMachinePoolElasticityProfile elasticityProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StandbyVirtualMachinePoolResourceProperties();
        }
        this.innerProperties().withElasticityProfile(elasticityProfile);
        return this;
    }

    /**
     * Get the virtualMachineState property: Specifies the desired state of virtual machines in the pool.
     * 
     * @return the virtualMachineState value.
     */
    public VirtualMachineState virtualMachineState() {
        return this.innerProperties() == null ? null : this.innerProperties().virtualMachineState();
    }

    /**
     * Set the virtualMachineState property: Specifies the desired state of virtual machines in the pool.
     * 
     * @param virtualMachineState the virtualMachineState value to set.
     * @return the StandbyVirtualMachinePoolResourceInner object itself.
     */
    public StandbyVirtualMachinePoolResourceInner withVirtualMachineState(VirtualMachineState virtualMachineState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StandbyVirtualMachinePoolResourceProperties();
        }
        this.innerProperties().withVirtualMachineState(virtualMachineState);
        return this;
    }

    /**
     * Get the attachedVirtualMachineScaleSetId property: Specifies the fully qualified resource ID of a virtual
     * machine scale set the pool is attached to.
     * 
     * @return the attachedVirtualMachineScaleSetId value.
     */
    public String attachedVirtualMachineScaleSetId() {
        return this.innerProperties() == null ? null : this.innerProperties().attachedVirtualMachineScaleSetId();
    }

    /**
     * Set the attachedVirtualMachineScaleSetId property: Specifies the fully qualified resource ID of a virtual
     * machine scale set the pool is attached to.
     * 
     * @param attachedVirtualMachineScaleSetId the attachedVirtualMachineScaleSetId value to set.
     * @return the StandbyVirtualMachinePoolResourceInner object itself.
     */
    public StandbyVirtualMachinePoolResourceInner
        withAttachedVirtualMachineScaleSetId(String attachedVirtualMachineScaleSetId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StandbyVirtualMachinePoolResourceProperties();
        }
        this.innerProperties().withAttachedVirtualMachineScaleSetId(attachedVirtualMachineScaleSetId);
        return this;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cloudshell.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Cloud shell console properties. */
@Fluent
public final class ConsoleProperties {
    /*
     * The operating system type of the cloud shell.
     */
    @JsonProperty(value = "osType", required = true)
    private OsType osType;

    /*
     * Provisioning state of the console.
     */
    @JsonProperty(value = "provisioningState", required = true)
    private ProvisioningState provisioningState;

    /*
     * Uri of the console.
     */
    @JsonProperty(value = "uri", required = true)
    private String uri;

    /** Creates an instance of ConsoleProperties class. */
    public ConsoleProperties() {
    }

    /**
     * Get the osType property: The operating system type of the cloud shell.
     *
     * @return the osType value.
     */
    public OsType osType() {
        return this.osType;
    }

    /**
     * Set the osType property: The operating system type of the cloud shell.
     *
     * @param osType the osType value to set.
     * @return the ConsoleProperties object itself.
     */
    public ConsoleProperties withOsType(OsType osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the console.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: Provisioning state of the console.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the ConsoleProperties object itself.
     */
    public ConsoleProperties withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the uri property: Uri of the console.
     *
     * @return the uri value.
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the uri property: Uri of the console.
     *
     * @param uri the uri value to set.
     * @return the ConsoleProperties object itself.
     */
    public ConsoleProperties withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (osType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property osType in model ConsoleProperties"));
        }
        if (provisioningState() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property provisioningState in model ConsoleProperties"));
        }
        if (uri() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property uri in model ConsoleProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ConsoleProperties.class);
}

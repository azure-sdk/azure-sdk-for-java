// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.keyvault.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.keyvault.generated.fluent.models.ManagedHsmInner;
import com.azure.resourcemanager.keyvault.generated.fluent.models.MhsmGeoReplicatedRegionInner;
import com.azure.resourcemanager.keyvault.generated.models.CreateMode;
import com.azure.resourcemanager.keyvault.generated.models.ManagedHsm;
import com.azure.resourcemanager.keyvault.generated.models.ManagedHsmProvisioningState;
import com.azure.resourcemanager.keyvault.generated.models.ManagedHsmSecurityDomainProperties;
import com.azure.resourcemanager.keyvault.generated.models.MhsmGeoReplicatedRegion;
import com.azure.resourcemanager.keyvault.generated.models.MhsmNetworkRuleSet;
import com.azure.resourcemanager.keyvault.generated.models.MhsmPrivateEndpointConnectionItem;
import com.azure.resourcemanager.keyvault.generated.models.PublicNetworkAccess;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;

public final class ManagedHsmImpl implements ManagedHsm, ManagedHsm.Definition, ManagedHsm.Update {
    private ManagedHsmInner innerObject;

    private final com.azure.resourcemanager.keyvault.generated.KeyvaultManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public UUID tenantId() {
        return this.innerModel().tenantId();
    }

    public List<String> initialAdminObjectIds() {
        List<String> inner = this.innerModel().initialAdminObjectIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String hsmUri() {
        return this.innerModel().hsmUri();
    }

    public Boolean enableSoftDelete() {
        return this.innerModel().enableSoftDelete();
    }

    public Integer softDeleteRetentionInDays() {
        return this.innerModel().softDeleteRetentionInDays();
    }

    public Boolean enablePurgeProtection() {
        return this.innerModel().enablePurgeProtection();
    }

    public CreateMode createMode() {
        return this.innerModel().createMode();
    }

    public String statusMessage() {
        return this.innerModel().statusMessage();
    }

    public ManagedHsmProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public MhsmNetworkRuleSet networkAcls() {
        return this.innerModel().networkAcls();
    }

    public List<MhsmGeoReplicatedRegion> regions() {
        List<MhsmGeoReplicatedRegionInner> inner = this.innerModel().regions();
        if (inner != null) {
            return Collections.unmodifiableList(inner.stream()
                .map(inner1 -> new MhsmGeoReplicatedRegionImpl(inner1, this.manager()))
                .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public List<MhsmPrivateEndpointConnectionItem> privateEndpointConnections() {
        List<MhsmPrivateEndpointConnectionItem> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public PublicNetworkAccess publicNetworkAccess() {
        return this.innerModel().publicNetworkAccess();
    }

    public OffsetDateTime scheduledPurgeDate() {
        return this.innerModel().scheduledPurgeDate();
    }

    public ManagedHsmSecurityDomainProperties securityDomainProperties() {
        return this.innerModel().securityDomainProperties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ManagedHsmInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.keyvault.generated.KeyvaultManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String name;

    public ManagedHsmImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ManagedHsm create() {
        this.innerObject = serviceManager.serviceClient()
            .getManagedHsms()
            .createOrUpdate(resourceGroupName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedHsm create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getManagedHsms()
            .createOrUpdate(resourceGroupName, name, this.innerModel(), context);
        return this;
    }

    ManagedHsmImpl(String name, com.azure.resourcemanager.keyvault.generated.KeyvaultManager serviceManager) {
        this.innerObject = new ManagedHsmInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public ManagedHsmImpl update() {
        return this;
    }

    public ManagedHsm apply() {
        this.innerObject = serviceManager.serviceClient()
            .getManagedHsms()
            .update(resourceGroupName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedHsm apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getManagedHsms()
            .update(resourceGroupName, name, this.innerModel(), context);
        return this;
    }

    ManagedHsmImpl(ManagedHsmInner innerObject,
        com.azure.resourcemanager.keyvault.generated.KeyvaultManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.name = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "managedHSMs");
    }

    public ManagedHsm refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getManagedHsms()
            .getByResourceGroupWithResponse(resourceGroupName, name, Context.NONE)
            .getValue();
        return this;
    }

    public ManagedHsm refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getManagedHsms()
            .getByResourceGroupWithResponse(resourceGroupName, name, context)
            .getValue();
        return this;
    }

    public ManagedHsmImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ManagedHsmImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ManagedHsmImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ManagedHsmImpl withTenantId(UUID tenantId) {
        this.innerModel().withTenantId(tenantId);
        return this;
    }

    public ManagedHsmImpl withInitialAdminObjectIds(List<String> initialAdminObjectIds) {
        this.innerModel().withInitialAdminObjectIds(initialAdminObjectIds);
        return this;
    }

    public ManagedHsmImpl withEnableSoftDelete(Boolean enableSoftDelete) {
        this.innerModel().withEnableSoftDelete(enableSoftDelete);
        return this;
    }

    public ManagedHsmImpl withSoftDeleteRetentionInDays(Integer softDeleteRetentionInDays) {
        this.innerModel().withSoftDeleteRetentionInDays(softDeleteRetentionInDays);
        return this;
    }

    public ManagedHsmImpl withEnablePurgeProtection(Boolean enablePurgeProtection) {
        this.innerModel().withEnablePurgeProtection(enablePurgeProtection);
        return this;
    }

    public ManagedHsmImpl withCreateMode(CreateMode createMode) {
        this.innerModel().withCreateMode(createMode);
        return this;
    }

    public ManagedHsmImpl withNetworkAcls(MhsmNetworkRuleSet networkAcls) {
        this.innerModel().withNetworkAcls(networkAcls);
        return this;
    }

    public ManagedHsmImpl withRegions(List<MhsmGeoReplicatedRegionInner> regions) {
        this.innerModel().withRegions(regions);
        return this;
    }

    public ManagedHsmImpl withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess) {
        this.innerModel().withPublicNetworkAccess(publicNetworkAccess);
        return this;
    }
}

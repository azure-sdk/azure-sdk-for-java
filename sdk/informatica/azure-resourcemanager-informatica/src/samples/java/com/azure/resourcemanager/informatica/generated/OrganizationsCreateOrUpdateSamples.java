// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informatica.generated;

import com.azure.resourcemanager.informatica.models.CompanyDetails;
import com.azure.resourcemanager.informatica.models.InformaticaProperties;
import com.azure.resourcemanager.informatica.models.LinkOrganization;
import com.azure.resourcemanager.informatica.models.MarketplaceDetails;
import com.azure.resourcemanager.informatica.models.OfferDetails;
import com.azure.resourcemanager.informatica.models.UserDetails;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Organizations CreateOrUpdate.
 */
public final class OrganizationsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/informatica/resource-manager/Informatica.DataManagement/stable/2024-05-08/examples/Organizations_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: Organizations_CreateOrUpdate.
     * 
     * @param manager Entry point to InformaticaManager.
     */
    public static void organizationsCreateOrUpdate(com.azure.resourcemanager.informatica.InformaticaManager manager) {
        manager.organizations()
            .define("C")
            .withRegion("pamjoudtssthlbhrnfjidr")
            .withExistingResourceGroup("rgopenapi")
            .withTags(mapOf("key8430", "fakeTokenPlaceholder"))
            .withInformaticaProperties(new InformaticaProperties().withOrganizationId("wtdmhlwhkvgqdumaehgfgiqcxgnqpx")
                .withOrganizationName("nomzbvwe")
                .withInformaticaRegion("zfqodqpbeflhedypiijdkc")
                .withSingleSignOnUrl("espcbzjhtmgwfdkckhqk"))
            .withMarketplaceDetails(new MarketplaceDetails().withMarketplaceSubscriptionId("ovenlecocg")
                .withOfferDetails(new OfferDetails()
                    .withPublisherId(
                        "zajxpfacudwongxjvnnuhhpygmnydchgowjccyuzsjonegmqxcqqpnzafanggowfqdixnnutyfvmvwrkx")
                    .withOfferId("cwswcfwmzhjcoksmueukegwaptvpcmbfyvixfhvgwnjyblqivqdkkwkunkgimiopwwkvgnwclmajhuty")
                    .withPlanId("jfnemevyivtlxhectiutdavdgfyidolivuojumdzckp")
                    .withPlanName(
                        "iaoxgaitteuoqgujkgxbdgryaobtkjjecuvchwutntrvmuorikrbqqegmelenbewhakiysprrnovjixyxrikscaptrbapbdspu")
                    .withTermUnit("gjwmgevrblbosuogsvfspsgspetbnxaygkbelvadpgwiywl")
                    .withTermId(
                        "tcvvsxdjnjlfmjhmvwklptdmxetnzydxyuhfqchoubmtoeqbchnfxoxqzezlgpxdnzyvzgkynjxzzgetkqccxvpzahxattluqdipvbdktqmndfefitzuifqjpschzlbvixnvznkmmgjwvkplfhemnapsewgqxggdzdokryhv")))
            .withUserDetails(new UserDetails().withFirstName("appvdclawzfjntdfdftjevlhvzropnxqtnypid")
                .withLastName("nzirbvzmkxtbrlamyatlcszebxgcyncxoascojsmacwvjsjvn")
                .withEmailAddress("7_-46@13D--3.m-4x-.11.c-9-.DHLYFc")
                .withUpn("undljch")
                .withPhoneNumber("fvcjylxlmhdnshsgywnzlyvshu"))
            .withCompanyDetails(new CompanyDetails().withCompanyName("xszcggknokhw")
                .withOfficeAddress("sbttzwyajgdbsvipuiclbzvkcvwyil")
                .withCountry("gwkcpnwyaqc")
                .withDomain("utcxetzzpmbvwmjrvphqngvp")
                .withBusiness("pucosrtjv")
                .withNumberOfEmployees(25))
            .withLinkOrganization(new LinkOrganization().withToken("fakeTokenPlaceholder"))
            .create();
    }

    /*
     * x-ms-original-file: specification/informatica/resource-manager/Informatica.DataManagement/stable/2024-05-08/examples/Organizations_CreateOrUpdate_MinimumSet_Gen.json
     */
    /**
     * Sample code: Organizations_CreateOrUpdate_Min.
     * 
     * @param manager Entry point to InformaticaManager.
     */
    public static void
        organizationsCreateOrUpdateMin(com.azure.resourcemanager.informatica.InformaticaManager manager) {
        manager.organizations()
            .define("n6v")
            .withRegion("pamjoudtssthlbhrnfjidr")
            .withExistingResourceGroup("rgopenapi")
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

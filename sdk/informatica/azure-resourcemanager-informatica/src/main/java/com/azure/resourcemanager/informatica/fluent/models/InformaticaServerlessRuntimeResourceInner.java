// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.informatica.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.informatica.models.AdvancedCustomProperties;
import com.azure.resourcemanager.informatica.models.ApplicationType;
import com.azure.resourcemanager.informatica.models.PlatformType;
import com.azure.resourcemanager.informatica.models.ProvisioningState;
import com.azure.resourcemanager.informatica.models.ServerlessRuntimeConfigProperties;
import com.azure.resourcemanager.informatica.models.ServerlessRuntimeNetworkProfile;
import com.azure.resourcemanager.informatica.models.ServerlessRuntimeTag;
import com.azure.resourcemanager.informatica.models.ServerlessRuntimeUserContextProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A Serverless Runtime environment resource by Informatica.
 */
@Fluent
public final class InformaticaServerlessRuntimeResourceInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private InformaticaServerlessRuntimeProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of InformaticaServerlessRuntimeResourceInner class.
     */
    public InformaticaServerlessRuntimeResourceInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private InformaticaServerlessRuntimeProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the provisioningState property: Provisioning State of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the description property: description of the serverless runtime.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: description of the serverless runtime.
     * 
     * @param description the description value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the platform property: Platform type of the Serverless Runtime.
     * 
     * @return the platform value.
     */
    public PlatformType platform() {
        return this.innerProperties() == null ? null : this.innerProperties().platform();
    }

    /**
     * Set the platform property: Platform type of the Serverless Runtime.
     * 
     * @param platform the platform value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withPlatform(PlatformType platform) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withPlatform(platform);
        return this;
    }

    /**
     * Get the applicationType property: Application type of the Serverless Runtime environment.
     * 
     * @return the applicationType value.
     */
    public ApplicationType applicationType() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationType();
    }

    /**
     * Set the applicationType property: Application type of the Serverless Runtime environment.
     * 
     * @param applicationType the applicationType value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withApplicationType(ApplicationType applicationType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withApplicationType(applicationType);
        return this;
    }

    /**
     * Get the computeUnits property: Compute units of the serverless runtime.
     * 
     * @return the computeUnits value.
     */
    public String computeUnits() {
        return this.innerProperties() == null ? null : this.innerProperties().computeUnits();
    }

    /**
     * Set the computeUnits property: Compute units of the serverless runtime.
     * 
     * @param computeUnits the computeUnits value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withComputeUnits(String computeUnits) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withComputeUnits(computeUnits);
        return this;
    }

    /**
     * Get the executionTimeout property: Serverless Execution timeout.
     * 
     * @return the executionTimeout value.
     */
    public String executionTimeout() {
        return this.innerProperties() == null ? null : this.innerProperties().executionTimeout();
    }

    /**
     * Set the executionTimeout property: Serverless Execution timeout.
     * 
     * @param executionTimeout the executionTimeout value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withExecutionTimeout(String executionTimeout) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withExecutionTimeout(executionTimeout);
        return this;
    }

    /**
     * Get the serverlessAccountLocation property: Serverless account creation location.
     * 
     * @return the serverlessAccountLocation value.
     */
    public String serverlessAccountLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().serverlessAccountLocation();
    }

    /**
     * Set the serverlessAccountLocation property: Serverless account creation location.
     * 
     * @param serverlessAccountLocation the serverlessAccountLocation value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withServerlessAccountLocation(String serverlessAccountLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withServerlessAccountLocation(serverlessAccountLocation);
        return this;
    }

    /**
     * Get the serverlessRuntimeNetworkProfile property: Informatica Serverless Network profile properties.
     * 
     * @return the serverlessRuntimeNetworkProfile value.
     */
    public ServerlessRuntimeNetworkProfile serverlessRuntimeNetworkProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().serverlessRuntimeNetworkProfile();
    }

    /**
     * Set the serverlessRuntimeNetworkProfile property: Informatica Serverless Network profile properties.
     * 
     * @param serverlessRuntimeNetworkProfile the serverlessRuntimeNetworkProfile value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner
        withServerlessRuntimeNetworkProfile(ServerlessRuntimeNetworkProfile serverlessRuntimeNetworkProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withServerlessRuntimeNetworkProfile(serverlessRuntimeNetworkProfile);
        return this;
    }

    /**
     * Get the advancedCustomProperties property: String KV pairs indicating Advanced custom properties.
     * 
     * @return the advancedCustomProperties value.
     */
    public List<AdvancedCustomProperties> advancedCustomProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().advancedCustomProperties();
    }

    /**
     * Set the advancedCustomProperties property: String KV pairs indicating Advanced custom properties.
     * 
     * @param advancedCustomProperties the advancedCustomProperties value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner
        withAdvancedCustomProperties(List<AdvancedCustomProperties> advancedCustomProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withAdvancedCustomProperties(advancedCustomProperties);
        return this;
    }

    /**
     * Get the supplementaryFileLocation property: Supplementary file location.
     * 
     * @return the supplementaryFileLocation value.
     */
    public String supplementaryFileLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().supplementaryFileLocation();
    }

    /**
     * Set the supplementaryFileLocation property: Supplementary file location.
     * 
     * @param supplementaryFileLocation the supplementaryFileLocation value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withSupplementaryFileLocation(String supplementaryFileLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withSupplementaryFileLocation(supplementaryFileLocation);
        return this;
    }

    /**
     * Get the serverlessRuntimeConfig property: Serverless config properties.
     * 
     * @return the serverlessRuntimeConfig value.
     */
    public ServerlessRuntimeConfigProperties serverlessRuntimeConfig() {
        return this.innerProperties() == null ? null : this.innerProperties().serverlessRuntimeConfig();
    }

    /**
     * Set the serverlessRuntimeConfig property: Serverless config properties.
     * 
     * @param serverlessRuntimeConfig the serverlessRuntimeConfig value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner
        withServerlessRuntimeConfig(ServerlessRuntimeConfigProperties serverlessRuntimeConfig) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withServerlessRuntimeConfig(serverlessRuntimeConfig);
        return this;
    }

    /**
     * Get the serverlessRuntimeTags property: Serverless Runtime Tags.
     * 
     * @return the serverlessRuntimeTags value.
     */
    public List<ServerlessRuntimeTag> serverlessRuntimeTags() {
        return this.innerProperties() == null ? null : this.innerProperties().serverlessRuntimeTags();
    }

    /**
     * Set the serverlessRuntimeTags property: Serverless Runtime Tags.
     * 
     * @param serverlessRuntimeTags the serverlessRuntimeTags value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner
        withServerlessRuntimeTags(List<ServerlessRuntimeTag> serverlessRuntimeTags) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withServerlessRuntimeTags(serverlessRuntimeTags);
        return this;
    }

    /**
     * Get the serverlessRuntimeUserContextProperties property: Serverless runtime user context properties.
     * 
     * @return the serverlessRuntimeUserContextProperties value.
     */
    public ServerlessRuntimeUserContextProperties serverlessRuntimeUserContextProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().serverlessRuntimeUserContextProperties();
    }

    /**
     * Set the serverlessRuntimeUserContextProperties property: Serverless runtime user context properties.
     * 
     * @param serverlessRuntimeUserContextProperties the serverlessRuntimeUserContextProperties value to set.
     * @return the InformaticaServerlessRuntimeResourceInner object itself.
     */
    public InformaticaServerlessRuntimeResourceInner withServerlessRuntimeUserContextProperties(
        ServerlessRuntimeUserContextProperties serverlessRuntimeUserContextProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new InformaticaServerlessRuntimeProperties();
        }
        this.innerProperties().withServerlessRuntimeUserContextProperties(serverlessRuntimeUserContextProperties);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

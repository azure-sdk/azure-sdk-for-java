// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.storage.generated.fluent.BlobServicesClient;
import com.azure.resourcemanager.storage.generated.fluent.models.BlobServiceItemsInner;
import com.azure.resourcemanager.storage.generated.fluent.models.BlobServicePropertiesInner;
import com.azure.resourcemanager.storage.generated.models.BlobServiceItems;
import com.azure.resourcemanager.storage.generated.models.BlobServiceProperties;
import com.azure.resourcemanager.storage.generated.models.BlobServices;

public final class BlobServicesImpl implements BlobServices {
    private static final ClientLogger LOGGER = new ClientLogger(BlobServicesImpl.class);

    private final BlobServicesClient innerClient;

    private final com.azure.resourcemanager.storage.generated.StorageManager serviceManager;

    public BlobServicesImpl(BlobServicesClient innerClient,
        com.azure.resourcemanager.storage.generated.StorageManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<BlobServiceItems> listWithResponse(String resourceGroupName, String accountName, Context context) {
        Response<BlobServiceItemsInner> inner
            = this.serviceClient().listWithResponse(resourceGroupName, accountName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BlobServiceItemsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BlobServiceItems list(String resourceGroupName, String accountName) {
        BlobServiceItemsInner inner = this.serviceClient().list(resourceGroupName, accountName);
        if (inner != null) {
            return new BlobServiceItemsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BlobServiceProperties> getServicePropertiesWithResponse(String resourceGroupName,
        String accountName, Context context) {
        Response<BlobServicePropertiesInner> inner
            = this.serviceClient().getServicePropertiesWithResponse(resourceGroupName, accountName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BlobServicePropertiesImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BlobServiceProperties getServiceProperties(String resourceGroupName, String accountName) {
        BlobServicePropertiesInner inner = this.serviceClient().getServiceProperties(resourceGroupName, accountName);
        if (inner != null) {
            return new BlobServicePropertiesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BlobServiceProperties> setServicePropertiesWithResponse(String resourceGroupName,
        String accountName, BlobServicePropertiesInner parameters, Context context) {
        Response<BlobServicePropertiesInner> inner = this.serviceClient()
            .setServicePropertiesWithResponse(resourceGroupName, accountName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BlobServicePropertiesImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BlobServiceProperties setServiceProperties(String resourceGroupName, String accountName,
        BlobServicePropertiesInner parameters) {
        BlobServicePropertiesInner inner
            = this.serviceClient().setServiceProperties(resourceGroupName, accountName, parameters);
        if (inner != null) {
            return new BlobServicePropertiesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private BlobServicesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.storage.generated.StorageManager manager() {
        return this.serviceManager;
    }
}

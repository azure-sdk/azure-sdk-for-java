// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob.implementation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.storage.blob.models.CorsRule;
import com.azure.storage.blob.models.Logging;
import com.azure.storage.blob.models.Metrics;
import com.azure.storage.blob.models.RetentionPolicy;
import com.azure.storage.blob.models.StaticWebsite;
import java.io.IOException;
import java.util.List;

/**
 * The SetPropertiesRequest model.
 */
@Fluent
public final class SetPropertiesRequest implements JsonSerializable<SetPropertiesRequest> {
    /*
     * The logging properties.
     */
    @Generated
    private Logging logging;

    /*
     * The hour metrics properties.
     */
    @Generated
    private Metrics hourMetrics;

    /*
     * The minute metrics properties.
     */
    @Generated
    private Metrics minuteMetrics;

    /*
     * The CORS properties.
     */
    @Generated
    private List<CorsRule> cors;

    /*
     * The default service version.
     */
    @Generated
    private String defaultServiceVersion;

    /*
     * The delete retention policy.
     */
    @Generated
    private RetentionPolicy deleteRetentionPolicy;

    /*
     * The static website properties.
     */
    @Generated
    private StaticWebsite staticWebsite;

    /**
     * Creates an instance of SetPropertiesRequest class.
     */
    @Generated
    public SetPropertiesRequest() {
    }

    /**
     * Get the logging property: The logging properties.
     * 
     * @return the logging value.
     */
    @Generated
    public Logging getLogging() {
        return this.logging;
    }

    /**
     * Set the logging property: The logging properties.
     * 
     * @param logging the logging value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setLogging(Logging logging) {
        this.logging = logging;
        return this;
    }

    /**
     * Get the hourMetrics property: The hour metrics properties.
     * 
     * @return the hourMetrics value.
     */
    @Generated
    public Metrics getHourMetrics() {
        return this.hourMetrics;
    }

    /**
     * Set the hourMetrics property: The hour metrics properties.
     * 
     * @param hourMetrics the hourMetrics value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setHourMetrics(Metrics hourMetrics) {
        this.hourMetrics = hourMetrics;
        return this;
    }

    /**
     * Get the minuteMetrics property: The minute metrics properties.
     * 
     * @return the minuteMetrics value.
     */
    @Generated
    public Metrics getMinuteMetrics() {
        return this.minuteMetrics;
    }

    /**
     * Set the minuteMetrics property: The minute metrics properties.
     * 
     * @param minuteMetrics the minuteMetrics value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setMinuteMetrics(Metrics minuteMetrics) {
        this.minuteMetrics = minuteMetrics;
        return this;
    }

    /**
     * Get the cors property: The CORS properties.
     * 
     * @return the cors value.
     */
    @Generated
    public List<CorsRule> getCors() {
        return this.cors;
    }

    /**
     * Set the cors property: The CORS properties.
     * 
     * @param cors the cors value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setCors(List<CorsRule> cors) {
        this.cors = cors;
        return this;
    }

    /**
     * Get the defaultServiceVersion property: The default service version.
     * 
     * @return the defaultServiceVersion value.
     */
    @Generated
    public String getDefaultServiceVersion() {
        return this.defaultServiceVersion;
    }

    /**
     * Set the defaultServiceVersion property: The default service version.
     * 
     * @param defaultServiceVersion the defaultServiceVersion value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setDefaultServiceVersion(String defaultServiceVersion) {
        this.defaultServiceVersion = defaultServiceVersion;
        return this;
    }

    /**
     * Get the deleteRetentionPolicy property: The delete retention policy.
     * 
     * @return the deleteRetentionPolicy value.
     */
    @Generated
    public RetentionPolicy getDeleteRetentionPolicy() {
        return this.deleteRetentionPolicy;
    }

    /**
     * Set the deleteRetentionPolicy property: The delete retention policy.
     * 
     * @param deleteRetentionPolicy the deleteRetentionPolicy value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setDeleteRetentionPolicy(RetentionPolicy deleteRetentionPolicy) {
        this.deleteRetentionPolicy = deleteRetentionPolicy;
        return this;
    }

    /**
     * Get the staticWebsite property: The static website properties.
     * 
     * @return the staticWebsite value.
     */
    @Generated
    public StaticWebsite getStaticWebsite() {
        return this.staticWebsite;
    }

    /**
     * Set the staticWebsite property: The static website properties.
     * 
     * @param staticWebsite the staticWebsite value to set.
     * @return the SetPropertiesRequest object itself.
     */
    @Generated
    public SetPropertiesRequest setStaticWebsite(StaticWebsite staticWebsite) {
        this.staticWebsite = staticWebsite;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("logging", this.logging);
        jsonWriter.writeJsonField("hourMetrics", this.hourMetrics);
        jsonWriter.writeJsonField("minuteMetrics", this.minuteMetrics);
        jsonWriter.writeArrayField("cors", this.cors, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("defaultServiceVersion", this.defaultServiceVersion);
        jsonWriter.writeJsonField("deleteRetentionPolicy", this.deleteRetentionPolicy);
        jsonWriter.writeJsonField("staticWebsite", this.staticWebsite);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SetPropertiesRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SetPropertiesRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SetPropertiesRequest.
     */
    @Generated
    public static SetPropertiesRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SetPropertiesRequest deserializedSetPropertiesRequest = new SetPropertiesRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("logging".equals(fieldName)) {
                    deserializedSetPropertiesRequest.logging = Logging.fromJson(reader);
                } else if ("hourMetrics".equals(fieldName)) {
                    deserializedSetPropertiesRequest.hourMetrics = Metrics.fromJson(reader);
                } else if ("minuteMetrics".equals(fieldName)) {
                    deserializedSetPropertiesRequest.minuteMetrics = Metrics.fromJson(reader);
                } else if ("cors".equals(fieldName)) {
                    List<CorsRule> cors = reader.readArray(reader1 -> CorsRule.fromJson(reader1));
                    deserializedSetPropertiesRequest.cors = cors;
                } else if ("defaultServiceVersion".equals(fieldName)) {
                    deserializedSetPropertiesRequest.defaultServiceVersion = reader.getString();
                } else if ("deleteRetentionPolicy".equals(fieldName)) {
                    deserializedSetPropertiesRequest.deleteRetentionPolicy = RetentionPolicy.fromJson(reader);
                } else if ("staticWebsite".equals(fieldName)) {
                    deserializedSetPropertiesRequest.staticWebsite = StaticWebsite.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSetPropertiesRequest;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The clear range.
 */
@Immutable
public final class ClearRange implements JsonSerializable<ClearRange> {
    /*
     * The start of the byte range.
     */
    @Generated
    private final long start;

    /*
     * The end of the byte range.
     */
    @Generated
    private final long end;

    /**
     * Creates an instance of ClearRange class.
     * 
     * @param start the start value to set.
     * @param end the end value to set.
     */
    @Generated
    private ClearRange(long start, long end) {
        this.start = start;
        this.end = end;
    }

    /**
     * Get the start property: The start of the byte range.
     * 
     * @return the start value.
     */
    @Generated
    public long getStart() {
        return this.start;
    }

    /**
     * Get the end property: The end of the byte range.
     * 
     * @return the end value.
     */
    @Generated
    public long getEnd() {
        return this.end;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeLongField("start", this.start);
        jsonWriter.writeLongField("end", this.end);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClearRange from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClearRange if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ClearRange.
     */
    @Generated
    public static ClearRange fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            long start = 0L;
            long end = 0L;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("start".equals(fieldName)) {
                    start = reader.getLong();
                } else if ("end".equals(fieldName)) {
                    end = reader.getLong();
                } else {
                    reader.skipChildren();
                }
            }
            return new ClearRange(start, end);
        });
    }
}

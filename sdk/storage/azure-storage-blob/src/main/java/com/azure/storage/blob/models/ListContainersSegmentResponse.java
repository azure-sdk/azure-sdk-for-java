// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The list container segement response.
 */
@Immutable
public final class ListContainersSegmentResponse implements JsonSerializable<ListContainersSegmentResponse> {
    /*
     * The service endpoint.
     */
    @Generated
    private final String serviceEndpoint;

    /*
     * The prefix of the containers.
     */
    @Generated
    private String prefix;

    /*
     * The marker of the containers.
     */
    @Generated
    private String marker;

    /*
     * The max results of the containers.
     */
    @Generated
    private Integer maxxResults;

    /*
     * The container segment.
     */
    @Generated
    private final List<ContainerItem> containerItems;

    /*
     * The next marker of the containers.
     */
    @Generated
    private String nextMarker;

    /**
     * Creates an instance of ListContainersSegmentResponse class.
     * 
     * @param serviceEndpoint the serviceEndpoint value to set.
     * @param containerItems the containerItems value to set.
     */
    @Generated
    private ListContainersSegmentResponse(String serviceEndpoint, List<ContainerItem> containerItems) {
        this.serviceEndpoint = serviceEndpoint;
        this.containerItems = containerItems;
    }

    /**
     * Get the serviceEndpoint property: The service endpoint.
     * 
     * @return the serviceEndpoint value.
     */
    @Generated
    public String getServiceEndpoint() {
        return this.serviceEndpoint;
    }

    /**
     * Get the prefix property: The prefix of the containers.
     * 
     * @return the prefix value.
     */
    @Generated
    public String getPrefix() {
        return this.prefix;
    }

    /**
     * Get the marker property: The marker of the containers.
     * 
     * @return the marker value.
     */
    @Generated
    public String getMarker() {
        return this.marker;
    }

    /**
     * Get the maxxResults property: The max results of the containers.
     * 
     * @return the maxxResults value.
     */
    @Generated
    public Integer getMaxxResults() {
        return this.maxxResults;
    }

    /**
     * Get the containerItems property: The container segment.
     * 
     * @return the containerItems value.
     */
    @Generated
    public List<ContainerItem> getContainerItems() {
        return this.containerItems;
    }

    /**
     * Get the nextMarker property: The next marker of the containers.
     * 
     * @return the nextMarker value.
     */
    @Generated
    public String getNextMarker() {
        return this.nextMarker;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("serviceEndpoint", this.serviceEndpoint);
        jsonWriter.writeArrayField("containerItems", this.containerItems,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("prefix", this.prefix);
        jsonWriter.writeStringField("marker", this.marker);
        jsonWriter.writeNumberField("maxxResults", this.maxxResults);
        jsonWriter.writeStringField("nextMarker", this.nextMarker);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ListContainersSegmentResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ListContainersSegmentResponse if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ListContainersSegmentResponse.
     */
    @Generated
    public static ListContainersSegmentResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String serviceEndpoint = null;
            List<ContainerItem> containerItems = null;
            String prefix = null;
            String marker = null;
            Integer maxxResults = null;
            String nextMarker = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("serviceEndpoint".equals(fieldName)) {
                    serviceEndpoint = reader.getString();
                } else if ("containerItems".equals(fieldName)) {
                    containerItems = reader.readArray(reader1 -> ContainerItem.fromJson(reader1));
                } else if ("prefix".equals(fieldName)) {
                    prefix = reader.getString();
                } else if ("marker".equals(fieldName)) {
                    marker = reader.getString();
                } else if ("maxxResults".equals(fieldName)) {
                    maxxResults = reader.getNullable(JsonReader::getInt);
                } else if ("nextMarker".equals(fieldName)) {
                    nextMarker = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            ListContainersSegmentResponse deserializedListContainersSegmentResponse
                = new ListContainersSegmentResponse(serviceEndpoint, containerItems);
            deserializedListContainersSegmentResponse.prefix = prefix;
            deserializedListContainersSegmentResponse.marker = marker;
            deserializedListContainersSegmentResponse.maxxResults = maxxResults;
            deserializedListContainersSegmentResponse.nextMarker = nextMarker;

            return deserializedListContainersSegmentResponse;
        });
    }
}

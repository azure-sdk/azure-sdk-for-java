// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.storage.blob.implementation.BlobClientImpl;
import com.azure.storage.blob.implementation.models.GetUserDelegationKeyRequest;
import com.azure.storage.blob.implementation.models.SetPropertiesRequest;
import com.azure.storage.blob.models.FilterBlobSegment;
import com.azure.storage.blob.models.FilterBlobsIncludeItem;
import com.azure.storage.blob.models.ListContainersIncludeType;
import com.azure.storage.blob.models.ListContainersSegmentResponse;
import com.azure.storage.blob.models.SetPropertiesOptions;
import com.azure.storage.blob.models.StorageServiceProperties;
import com.azure.storage.blob.models.StorageServiceStats;
import com.azure.storage.blob.models.SubmitBatchRequest;
import com.azure.storage.blob.models.UserDelegationKey;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Initializes a new instance of the synchronous BlobClient type.
 */
@ServiceClient(builder = BlobClientBuilder.class)
public final class BlobClient {
    @Generated
    private final BlobClientImpl serviceClient;

    /**
     * Initializes an instance of BlobClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    BlobClient(BlobClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Sets properties for a storage account's Blob service endpoint, including properties for Storage Analytics and
     * CORS (Cross-Origin Resource Sharing) rules.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     logging (Optional): {
     *         version: String (Required)
     *         delete: boolean (Required)
     *         read: boolean (Required)
     *         write: boolean (Required)
     *         retentionPolicy (Required): {
     *             enabled: boolean (Required)
     *             days: Integer (Optional)
     *             allowPermanentDelete: Boolean (Optional)
     *         }
     *     }
     *     hourMetrics (Optional): {
     *         version: String (Optional)
     *         enabled: boolean (Required)
     *         includeApis: Boolean (Optional)
     *         retentionPolicy (Optional): (recursive schema, see retentionPolicy above)
     *     }
     *     minuteMetrics (Optional): (recursive schema, see minuteMetrics above)
     *     cors (Optional): [
     *          (Optional){
     *             allowedOrigins: String (Required)
     *             allowedMethods: String (Required)
     *             allowedHeaders: String (Required)
     *             exposedHeaders: String (Required)
     *             maxAgeInSeconds: int (Required)
     *         }
     *     ]
     *     defaultServiceVersion: String (Optional)
     *     deleteRetentionPolicy (Optional): (recursive schema, see deleteRetentionPolicy above)
     *     staticWebsite (Optional): {
     *         enabled: boolean (Required)
     *         indexDocument: String (Optional)
     *         errorDocument404Path: String (Optional)
     *         defaultIndexDocumentPath: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param setPropertiesRequest The setPropertiesRequest parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> setPropertiesWithResponse(BinaryData setPropertiesRequest, RequestOptions requestOptions) {
        return this.serviceClient.setPropertiesWithResponse(setPropertiesRequest, requestOptions);
    }

    /**
     * Retrieves properties of a storage account's Blob service, including properties for Storage Analytics and CORS
     * (Cross-Origin Resource Sharing) rules.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     logging (Optional): {
     *         version: String (Required)
     *         delete: boolean (Required)
     *         read: boolean (Required)
     *         write: boolean (Required)
     *         retentionPolicy (Required): {
     *             enabled: boolean (Required)
     *             days: Integer (Optional)
     *             allowPermanentDelete: Boolean (Optional)
     *         }
     *     }
     *     hourMetrics (Optional): {
     *         version: String (Optional)
     *         enabled: boolean (Required)
     *         includeApis: Boolean (Optional)
     *         retentionPolicy (Optional): (recursive schema, see retentionPolicy above)
     *     }
     *     minuteMetrics (Optional): (recursive schema, see minuteMetrics above)
     *     cors (Optional): [
     *          (Optional){
     *             allowedOrigins: String (Required)
     *             allowedMethods: String (Required)
     *             allowedHeaders: String (Required)
     *             exposedHeaders: String (Required)
     *             maxAgeInSeconds: int (Required)
     *         }
     *     ]
     *     defaultServiceVersion: String (Optional)
     *     deleteRetentionPolicy (Optional): (recursive schema, see deleteRetentionPolicy above)
     *     staticWebsite (Optional): {
     *         enabled: boolean (Required)
     *         indexDocument: String (Optional)
     *         errorDocument404Path: String (Optional)
     *         defaultIndexDocumentPath: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the service properties along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getPropertiesWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getPropertiesWithResponse(requestOptions);
    }

    /**
     * Retrieves statistics related to replication for the Blob service. It is only available on the secondary location
     * endpoint when read-access geo-redundant replication is enabled for the storage account.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     geoReplication (Optional): {
     *         status: String(live/bootstrap/unavailable) (Required)
     *         lastSyncTime: DateTimeRfc1123 (Required)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return stats for the storage service along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getStatisticsWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getStatisticsWithResponse(requestOptions);
    }

    /**
     * The List Containers Segment operation returns a list of the containers under the specified account.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>prefix</td><td>String</td><td>No</td><td>Filters the results to return only containers whose name begins
     * with the specified prefix.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>include</td><td>List&lt;String&gt;</td><td>No</td><td>Include this parameter to specify that the
     * container's metadata be returned as part of the response body. In the form of "," separated string.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     serviceEndpoint: String (Required)
     *     prefix: String (Optional)
     *     marker: String (Optional)
     *     maxResults: Integer (Optional)
     *     containerItems (Required): [
     *          (Required){
     *             name: String (Required)
     *             delete: Boolean (Optional)
     *             version: String (Optional)
     *             properties (Required): {
     *                 lastModified: DateTimeRfc1123 (Required)
     *                 eTag: String (Required)
     *                 leaseStatus: String(unlocked/locked) (Optional)
     *                 leaseState: String(available/leased/expired/breaking/broken) (Optional)
     *                 leaseDuration: String(infinite/fixed) (Optional)
     *                 publicAccess: String(blob/container) (Optional)
     *                 hasImmutabilityPolicy: Boolean (Optional)
     *                 hasLegalHold: Boolean (Optional)
     *                 defaultEncryptionScope: String (Optional)
     *                 denyEncryptionScopeOverride: Boolean (Optional)
     *                 deletedTime: DateTimeRfc1123 (Optional)
     *                 remainingRetentionDays: Integer (Optional)
     *                 immutableStorageWithVersioningEnabled: Boolean (Optional)
     *             }
     *             metadata (Optional): {
     *                 String: String (Required)
     *             }
     *         }
     *     ]
     *     NextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the list container segment response along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listContainersSegmentWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.listContainersSegmentWithResponse(requestOptions);
    }

    /**
     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using bearer token
     * authentication.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     start: String (Required)
     *     expiry: String (Required)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     signedOid: String (Required)
     *     signedTid: String (Required)
     *     signedStart: String (Required)
     *     signedExpiry: String (Required)
     *     signedService: String (Required)
     *     signedVersion: String (Required)
     *     value: byte[] (Required)
     * }
     * }
     * </pre>
     * 
     * @param getUserDelegationKeyRequest The getUserDelegationKeyRequest parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a user delegation key along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getUserDelegationKeyWithResponse(BinaryData getUserDelegationKeyRequest,
        RequestOptions requestOptions) {
        return this.serviceClient.getUserDelegationKeyWithResponse(getUserDelegationKeyRequest, requestOptions);
    }

    /**
     * Returns the sku name and account kind.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> getAccountInfoWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getAccountInfoWithResponse(requestOptions);
    }

    /**
     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     body (Required): {
     *         content: BinaryData (Required)
     *         filename: String (Optional)
     *         contentType: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     body (Required): {
     *         content: BinaryData (Required)
     *         filename: String (Optional)
     *         contentType: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> submitBatchWithResponse(long contentLength, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.submitBatchWithResponse(contentLength, body, requestOptions);
    }

    /**
     * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search
     * expression.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>where</td><td>String</td><td>No</td><td>Filters the results to return only to return only blobs whose
     * tags match the specified expression.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * <tr><td>include</td><td>List&lt;String&gt;</td><td>No</td><td>Include this parameter to specify one or more
     * datasets to include in the response. In the form of "," separated string.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     serviceEndpoint: String (Required)
     *     where: String (Required)
     *     blobs (Required): [
     *          (Required){
     *             name: String (Required)
     *             containerName: String (Required)
     *             tags (Optional): {
     *                 blobTagSet (Required): [
     *                      (Required){
     *                         key: String (Required)
     *                         value: String (Required)
     *                     }
     *                 ]
     *             }
     *             versionId: String (Optional)
     *             isCurrentVersion: Boolean (Optional)
     *         }
     *     ]
     *     nextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the result of a Filter Blobs API call along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> filterBlobsWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.filterBlobsWithResponse(requestOptions);
    }

    /**
     * Sets properties for a storage account's Blob service endpoint, including properties for Storage Analytics and
     * CORS (Cross-Origin Resource Sharing) rules.
     * 
     * @param options Options for setProperties API.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void setProperties(SetPropertiesOptions options) {
        // Generated convenience method for setPropertiesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        Integer timeout = options.getTimeout();
        SetPropertiesRequest setPropertiesRequestObj = new SetPropertiesRequest().setLogging(options.getLogging())
            .setHourMetrics(options.getHourMetrics())
            .setMinuteMetrics(options.getMinuteMetrics())
            .setCors(options.getCors())
            .setDefaultServiceVersion(options.getDefaultServiceVersion())
            .setDeleteRetentionPolicy(options.getDeleteRetentionPolicy())
            .setStaticWebsite(options.getStaticWebsite());
        BinaryData setPropertiesRequest = BinaryData.fromObject(setPropertiesRequestObj);
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        setPropertiesWithResponse(setPropertiesRequest, requestOptions).getValue();
    }

    /**
     * Retrieves properties of a storage account's Blob service, including properties for Storage Analytics and CORS
     * (Cross-Origin Resource Sharing) rules.
     * 
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the service properties.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public StorageServiceProperties getProperties(Integer timeout) {
        // Generated convenience method for getPropertiesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        return getPropertiesWithResponse(requestOptions).getValue().toObject(StorageServiceProperties.class);
    }

    /**
     * Retrieves properties of a storage account's Blob service, including properties for Storage Analytics and CORS
     * (Cross-Origin Resource Sharing) rules.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the service properties.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public StorageServiceProperties getProperties() {
        // Generated convenience method for getPropertiesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getPropertiesWithResponse(requestOptions).getValue().toObject(StorageServiceProperties.class);
    }

    /**
     * Retrieves statistics related to replication for the Blob service. It is only available on the secondary location
     * endpoint when read-access geo-redundant replication is enabled for the storage account.
     * 
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return stats for the storage service.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public StorageServiceStats getStatistics(Integer timeout) {
        // Generated convenience method for getStatisticsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        return getStatisticsWithResponse(requestOptions).getValue().toObject(StorageServiceStats.class);
    }

    /**
     * Retrieves statistics related to replication for the Blob service. It is only available on the secondary location
     * endpoint when read-access geo-redundant replication is enabled for the storage account.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return stats for the storage service.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public StorageServiceStats getStatistics() {
        // Generated convenience method for getStatisticsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getStatisticsWithResponse(requestOptions).getValue().toObject(StorageServiceStats.class);
    }

    /**
     * The List Containers Segment operation returns a list of the containers under the specified account.
     * 
     * @param prefix Filters the results to return only containers whose name begins with the specified prefix.
     * @param marker A string value that identifies the portion of the list of containers to be returned with the next
     * listing operation. The operation returns the NextMarker value within the response body if the listing operation
     * did not return all containers remaining to be listed with the current page. The NextMarker value can be used as
     * the value for the marker parameter in a subsequent call to request the next page of list items. The marker value
     * is opaque to the client.
     * @param maxresults Specifies the maximum number of containers to return. If the request does not specify
     * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param include Include this parameter to specify that the container's metadata be returned as part of the
     * response body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list container segment response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ListContainersSegmentResponse listContainersSegment(String prefix, String marker, Integer maxresults,
        Integer timeout, List<ListContainersIncludeType> include) {
        // Generated convenience method for listContainersSegmentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (prefix != null) {
            requestOptions.addQueryParam("prefix", prefix, false);
        }
        if (marker != null) {
            requestOptions.addQueryParam("marker", marker, false);
        }
        if (maxresults != null) {
            requestOptions.addQueryParam("maxresults", String.valueOf(maxresults), false);
        }
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (include != null) {
            requestOptions.addQueryParam("include",
                include.stream()
                    .map(paramItemValue -> Objects.toString(paramItemValue, ""))
                    .collect(Collectors.joining(",")),
                false);
        }
        return listContainersSegmentWithResponse(requestOptions).getValue()
            .toObject(ListContainersSegmentResponse.class);
    }

    /**
     * The List Containers Segment operation returns a list of the containers under the specified account.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list container segment response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public ListContainersSegmentResponse listContainersSegment() {
        // Generated convenience method for listContainersSegmentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listContainersSegmentWithResponse(requestOptions).getValue()
            .toObject(ListContainersSegmentResponse.class);
    }

    /**
     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using bearer token
     * authentication.
     * 
     * @param start The date-time the key is active.
     * @param expiry The date-time the key expires.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a user delegation key.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public UserDelegationKey getUserDelegationKey(String start, String expiry, Integer timeout) {
        // Generated convenience method for getUserDelegationKeyWithResponse
        RequestOptions requestOptions = new RequestOptions();
        GetUserDelegationKeyRequest getUserDelegationKeyRequestObj = new GetUserDelegationKeyRequest(start, expiry);
        BinaryData getUserDelegationKeyRequest = BinaryData.fromObject(getUserDelegationKeyRequestObj);
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        return getUserDelegationKeyWithResponse(getUserDelegationKeyRequest, requestOptions).getValue()
            .toObject(UserDelegationKey.class);
    }

    /**
     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using bearer token
     * authentication.
     * 
     * @param start The date-time the key is active.
     * @param expiry The date-time the key expires.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a user delegation key.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public UserDelegationKey getUserDelegationKey(String start, String expiry) {
        // Generated convenience method for getUserDelegationKeyWithResponse
        RequestOptions requestOptions = new RequestOptions();
        GetUserDelegationKeyRequest getUserDelegationKeyRequestObj = new GetUserDelegationKeyRequest(start, expiry);
        BinaryData getUserDelegationKeyRequest = BinaryData.fromObject(getUserDelegationKeyRequestObj);
        return getUserDelegationKeyWithResponse(getUserDelegationKeyRequest, requestOptions).getValue()
            .toObject(UserDelegationKey.class);
    }

    /**
     * Returns the sku name and account kind.
     * 
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void getAccountInfo(Integer timeout) {
        // Generated convenience method for getAccountInfoWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        getAccountInfoWithResponse(requestOptions).getValue();
    }

    /**
     * Returns the sku name and account kind.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void getAccountInfo() {
        // Generated convenience method for getAccountInfoWithResponse
        RequestOptions requestOptions = new RequestOptions();
        getAccountInfoWithResponse(requestOptions).getValue();
    }

    /**
     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public SubmitBatchRequest submitBatch(long contentLength, SubmitBatchRequest body, Integer timeout) {
        // Generated convenience method for submitBatchWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        return submitBatchWithResponse(contentLength, body, requestOptions).getValue();
    }

    /**
     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public SubmitBatchRequest submitBatch(long contentLength, SubmitBatchRequest body) {
        // Generated convenience method for submitBatchWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return submitBatchWithResponse(contentLength, body, requestOptions).getValue();
    }

    /**
     * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search
     * expression.
     * 
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param where Filters the results to return only to return only blobs whose tags match the specified expression.
     * @param marker A string value that identifies the portion of the list of containers to be returned with the next
     * listing operation. The operation returns the NextMarker value within the response body if the listing operation
     * did not return all containers remaining to be listed with the current page. The NextMarker value can be used as
     * the value for the marker parameter in a subsequent call to request the next page of list items. The marker value
     * is opaque to the client.
     * @param maxresults Specifies the maximum number of containers to return. If the request does not specify
     * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
     * @param include Include this parameter to specify one or more datasets to include in the response.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a Filter Blobs API call.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FilterBlobSegment filterBlobs(Integer timeout, String where, String marker, Integer maxresults,
        List<FilterBlobsIncludeItem> include) {
        // Generated convenience method for filterBlobsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (where != null) {
            requestOptions.addQueryParam("where", where, false);
        }
        if (marker != null) {
            requestOptions.addQueryParam("marker", marker, false);
        }
        if (maxresults != null) {
            requestOptions.addQueryParam("maxresults", String.valueOf(maxresults), false);
        }
        if (include != null) {
            requestOptions.addQueryParam("include",
                include.stream()
                    .map(paramItemValue -> Objects.toString(paramItemValue, ""))
                    .collect(Collectors.joining(",")),
                false);
        }
        return filterBlobsWithResponse(requestOptions).getValue().toObject(FilterBlobSegment.class);
    }

    /**
     * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search
     * expression.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a Filter Blobs API call.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public FilterBlobSegment filterBlobs() {
        // Generated convenience method for filterBlobsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return filterBlobsWithResponse(requestOptions).getValue().toObject(FilterBlobSegment.class);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.Put;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.storage.blob.BlobServiceVersion;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in Services.
 */
public final class ServicesImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final ServicesService service;

    /**
     * The service client containing this operation class.
     */
    private final BlobClientImpl client;

    /**
     * Initializes an instance of ServicesImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    ServicesImpl(BlobClientImpl client) {
        this.service = RestProxy.create(ServicesService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public BlobServiceVersion getServiceVersion() {
        return client.getServiceVersion();
    }

    /**
     * The interface defining all the services for BlobClientServices to be used by the proxy service to perform REST
     * calls.
     */
    @Host("{url}")
    @ServiceInterface(name = "BlobClientServices")
    public interface ServicesService {
        @Put("/?restype=service&comp=properties")
        @ExpectedResponses({ 202 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> setProperties(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, @BodyParam("application/xml") BinaryData setPropertiesRequest,
            RequestOptions requestOptions, Context context);

        @Put("/?restype=service&comp=properties")
        @ExpectedResponses({ 202 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<Void> setPropertiesSync(@HostParam("url") String url, @HeaderParam("Content-Type") String contentType,
            @HeaderParam("x-ms-version") String xMsVersion, @HeaderParam("Accept") String accept,
            @BodyParam("application/xml") BinaryData setPropertiesRequest, RequestOptions requestOptions,
            Context context);

        @Get("/?restype=service&comp=properties")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getProperties(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?restype=service&comp=properties")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getPropertiesSync(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?restype=service&comp=stats")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getStatistics(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?restype=service&comp=stats")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getStatisticsSync(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?comp=list")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listContainersSegment(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?comp=list")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> listContainersSegmentSync(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Post("/?restype=service&comp=userdelegationkey")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getUserDelegationKey(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, @BodyParam("application/xml") BinaryData getUserDelegationKeyRequest,
            RequestOptions requestOptions, Context context);

        @Post("/?restype=service&comp=userdelegationkey")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getUserDelegationKeySync(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, @BodyParam("application/xml") BinaryData getUserDelegationKeyRequest,
            RequestOptions requestOptions, Context context);

        @Get("/?restype=account&comp=properties")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> getAccountInfo(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?restype=account&comp=properties")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<Void> getAccountInfoSync(@HostParam("url") String url, @HeaderParam("Content-Type") String contentType,
            @HeaderParam("x-ms-version") String xMsVersion, @HeaderParam("Accept") String accept,
            RequestOptions requestOptions, Context context);

        @Post("/?comp=batch")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> submitBatch(@HostParam("url") String url,
            @HeaderParam("Content-Type") String multipartContentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Content-Length") long contentLength, @HeaderParam("Accept") String accept,
            @BodyParam("multipart/mixed") BinaryData body, RequestOptions requestOptions, Context context);

        @Post("/?comp=batch")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> submitBatchSync(@HostParam("url") String url,
            @HeaderParam("Content-Type") String multipartContentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Content-Length") long contentLength, @HeaderParam("Accept") String accept,
            @BodyParam("multipart/mixed") BinaryData body, RequestOptions requestOptions, Context context);

        @Get("/?comp=blobs")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> filterBlobs(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/?comp=blobs")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> filterBlobsSync(@HostParam("url") String url,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("x-ms-version") String xMsVersion,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
    }

    /**
     * Sets properties for a storage account's Blob service endpoint, including properties for Storage Analytics and
     * CORS (Cross-Origin Resource Sharing) rules.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     logging (Optional): {
     *         version: String (Required)
     *         delete: boolean (Required)
     *         read: boolean (Required)
     *         write: boolean (Required)
     *         retentionPolicy (Required): {
     *             enabled: boolean (Required)
     *             days: Integer (Optional)
     *             allowPermanentDelete: Boolean (Optional)
     *         }
     *     }
     *     hourMetrics (Optional): {
     *         version: String (Optional)
     *         enabled: boolean (Required)
     *         includeApis: Boolean (Optional)
     *         retentionPolicy (Optional): (recursive schema, see retentionPolicy above)
     *     }
     *     minuteMetrics (Optional): (recursive schema, see minuteMetrics above)
     *     cors (Optional): [
     *          (Optional){
     *             allowedOrigins: String (Required)
     *             allowedMethods: String (Required)
     *             allowedHeaders: String (Required)
     *             exposedHeaders: String (Required)
     *             maxAgeInSeconds: int (Required)
     *         }
     *     ]
     *     defaultServiceVersion: String (Optional)
     *     deleteRetentionPolicy (Optional): (recursive schema, see deleteRetentionPolicy above)
     *     staticWebsite (Optional): {
     *         enabled: boolean (Required)
     *         indexDocument: String (Optional)
     *         errorDocument404Path: String (Optional)
     *         defaultIndexDocumentPath: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param setPropertiesRequest The setPropertiesRequest parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> setPropertiesWithResponseAsync(BinaryData setPropertiesRequest,
        RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.setProperties(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, setPropertiesRequest, requestOptions, context));
    }

    /**
     * Sets properties for a storage account's Blob service endpoint, including properties for Storage Analytics and
     * CORS (Cross-Origin Resource Sharing) rules.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     logging (Optional): {
     *         version: String (Required)
     *         delete: boolean (Required)
     *         read: boolean (Required)
     *         write: boolean (Required)
     *         retentionPolicy (Required): {
     *             enabled: boolean (Required)
     *             days: Integer (Optional)
     *             allowPermanentDelete: Boolean (Optional)
     *         }
     *     }
     *     hourMetrics (Optional): {
     *         version: String (Optional)
     *         enabled: boolean (Required)
     *         includeApis: Boolean (Optional)
     *         retentionPolicy (Optional): (recursive schema, see retentionPolicy above)
     *     }
     *     minuteMetrics (Optional): (recursive schema, see minuteMetrics above)
     *     cors (Optional): [
     *          (Optional){
     *             allowedOrigins: String (Required)
     *             allowedMethods: String (Required)
     *             allowedHeaders: String (Required)
     *             exposedHeaders: String (Required)
     *             maxAgeInSeconds: int (Required)
     *         }
     *     ]
     *     defaultServiceVersion: String (Optional)
     *     deleteRetentionPolicy (Optional): (recursive schema, see deleteRetentionPolicy above)
     *     staticWebsite (Optional): {
     *         enabled: boolean (Required)
     *         indexDocument: String (Optional)
     *         errorDocument404Path: String (Optional)
     *         defaultIndexDocumentPath: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param setPropertiesRequest The setPropertiesRequest parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> setPropertiesWithResponse(BinaryData setPropertiesRequest, RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/json";
        return service.setPropertiesSync(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, setPropertiesRequest, requestOptions, Context.NONE);
    }

    /**
     * Retrieves properties of a storage account's Blob service, including properties for Storage Analytics and CORS
     * (Cross-Origin Resource Sharing) rules.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     logging (Optional): {
     *         version: String (Required)
     *         delete: boolean (Required)
     *         read: boolean (Required)
     *         write: boolean (Required)
     *         retentionPolicy (Required): {
     *             enabled: boolean (Required)
     *             days: Integer (Optional)
     *             allowPermanentDelete: Boolean (Optional)
     *         }
     *     }
     *     hourMetrics (Optional): {
     *         version: String (Optional)
     *         enabled: boolean (Required)
     *         includeApis: Boolean (Optional)
     *         retentionPolicy (Optional): (recursive schema, see retentionPolicy above)
     *     }
     *     minuteMetrics (Optional): (recursive schema, see minuteMetrics above)
     *     cors (Optional): [
     *          (Optional){
     *             allowedOrigins: String (Required)
     *             allowedMethods: String (Required)
     *             allowedHeaders: String (Required)
     *             exposedHeaders: String (Required)
     *             maxAgeInSeconds: int (Required)
     *         }
     *     ]
     *     defaultServiceVersion: String (Optional)
     *     deleteRetentionPolicy (Optional): (recursive schema, see deleteRetentionPolicy above)
     *     staticWebsite (Optional): {
     *         enabled: boolean (Required)
     *         indexDocument: String (Optional)
     *         errorDocument404Path: String (Optional)
     *         defaultIndexDocumentPath: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the service properties along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getPropertiesWithResponseAsync(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return FluxUtil.withContext(context -> service.getProperties(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, context));
    }

    /**
     * Retrieves properties of a storage account's Blob service, including properties for Storage Analytics and CORS
     * (Cross-Origin Resource Sharing) rules.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     logging (Optional): {
     *         version: String (Required)
     *         delete: boolean (Required)
     *         read: boolean (Required)
     *         write: boolean (Required)
     *         retentionPolicy (Required): {
     *             enabled: boolean (Required)
     *             days: Integer (Optional)
     *             allowPermanentDelete: Boolean (Optional)
     *         }
     *     }
     *     hourMetrics (Optional): {
     *         version: String (Optional)
     *         enabled: boolean (Required)
     *         includeApis: Boolean (Optional)
     *         retentionPolicy (Optional): (recursive schema, see retentionPolicy above)
     *     }
     *     minuteMetrics (Optional): (recursive schema, see minuteMetrics above)
     *     cors (Optional): [
     *          (Optional){
     *             allowedOrigins: String (Required)
     *             allowedMethods: String (Required)
     *             allowedHeaders: String (Required)
     *             exposedHeaders: String (Required)
     *             maxAgeInSeconds: int (Required)
     *         }
     *     ]
     *     defaultServiceVersion: String (Optional)
     *     deleteRetentionPolicy (Optional): (recursive schema, see deleteRetentionPolicy above)
     *     staticWebsite (Optional): {
     *         enabled: boolean (Required)
     *         indexDocument: String (Optional)
     *         errorDocument404Path: String (Optional)
     *         defaultIndexDocumentPath: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the service properties along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getPropertiesWithResponse(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return service.getPropertiesSync(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, Context.NONE);
    }

    /**
     * Retrieves statistics related to replication for the Blob service. It is only available on the secondary location
     * endpoint when read-access geo-redundant replication is enabled for the storage account.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     geoReplication (Optional): {
     *         status: String(live/bootstrap/unavailable) (Required)
     *         lastSyncTime: String (Required)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return stats for the storage service along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getStatisticsWithResponseAsync(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return FluxUtil.withContext(context -> service.getStatistics(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, context));
    }

    /**
     * Retrieves statistics related to replication for the Blob service. It is only available on the secondary location
     * endpoint when read-access geo-redundant replication is enabled for the storage account.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     geoReplication (Optional): {
     *         status: String(live/bootstrap/unavailable) (Required)
     *         lastSyncTime: String (Required)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return stats for the storage service along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getStatisticsWithResponse(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return service.getStatisticsSync(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, Context.NONE);
    }

    /**
     * The List Containers Segment operation returns a list of the containers under the specified account.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>prefix</td><td>String</td><td>No</td><td>Filters the results to return only containers whose name begins
     * with the specified prefix.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>include</td><td>List&lt;String&gt;</td><td>No</td><td>Include this parameter to specify that the
     * container's metadata be returned as part of the response body. In the form of "," separated string.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     serviceEndpoint: String (Required)
     *     prefix: String (Optional)
     *     marker: String (Optional)
     *     maxResults: Integer (Optional)
     *     containerItems (Required): [
     *          (Required){
     *             name: String (Required)
     *             delete: Boolean (Optional)
     *             version: String (Optional)
     *             properties (Required): {
     *                 lastModified: String (Required)
     *                 eTag: String (Required)
     *                 leaseStatus: String(unlocked/locked) (Optional)
     *                 leaseState: String(available/leased/expired/breaking/broken) (Optional)
     *                 leaseDuration: String(infinite/fixed) (Optional)
     *                 publicAccess: String(blob/container) (Optional)
     *                 hasImmutabilityPolicy: Boolean (Optional)
     *                 hasLegalHold: Boolean (Optional)
     *                 defaultEncryptionScope: String (Optional)
     *                 denyEncryptionScopeOverride: Boolean (Optional)
     *                 deletedTime: String (Optional)
     *                 remainingRetentionDays: Integer (Optional)
     *                 immutableStorageWithVersioningEnabled: Boolean (Optional)
     *             }
     *             metadata (Optional): {
     *                 String: String (Required)
     *             }
     *         }
     *     ]
     *     NextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the list container segment response along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listContainersSegmentWithResponseAsync(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return FluxUtil.withContext(context -> service.listContainersSegment(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, context));
    }

    /**
     * The List Containers Segment operation returns a list of the containers under the specified account.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>prefix</td><td>String</td><td>No</td><td>Filters the results to return only containers whose name begins
     * with the specified prefix.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>include</td><td>List&lt;String&gt;</td><td>No</td><td>Include this parameter to specify that the
     * container's metadata be returned as part of the response body. In the form of "," separated string.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     serviceEndpoint: String (Required)
     *     prefix: String (Optional)
     *     marker: String (Optional)
     *     maxResults: Integer (Optional)
     *     containerItems (Required): [
     *          (Required){
     *             name: String (Required)
     *             delete: Boolean (Optional)
     *             version: String (Optional)
     *             properties (Required): {
     *                 lastModified: String (Required)
     *                 eTag: String (Required)
     *                 leaseStatus: String(unlocked/locked) (Optional)
     *                 leaseState: String(available/leased/expired/breaking/broken) (Optional)
     *                 leaseDuration: String(infinite/fixed) (Optional)
     *                 publicAccess: String(blob/container) (Optional)
     *                 hasImmutabilityPolicy: Boolean (Optional)
     *                 hasLegalHold: Boolean (Optional)
     *                 defaultEncryptionScope: String (Optional)
     *                 denyEncryptionScopeOverride: Boolean (Optional)
     *                 deletedTime: String (Optional)
     *                 remainingRetentionDays: Integer (Optional)
     *                 immutableStorageWithVersioningEnabled: Boolean (Optional)
     *             }
     *             metadata (Optional): {
     *                 String: String (Required)
     *             }
     *         }
     *     ]
     *     NextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the list container segment response along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listContainersSegmentWithResponse(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return service.listContainersSegmentSync(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, Context.NONE);
    }

    /**
     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using bearer token
     * authentication.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     start: String (Required)
     *     expiry: String (Required)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     signedOid: String (Required)
     *     signedTid: String (Required)
     *     signedStart: String (Required)
     *     signedExpiry: String (Required)
     *     signedService: String (Required)
     *     signedVersion: String (Required)
     *     value: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param getUserDelegationKeyRequest The getUserDelegationKeyRequest parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a user delegation key along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getUserDelegationKeyWithResponseAsync(BinaryData getUserDelegationKeyRequest,
        RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return FluxUtil.withContext(context -> service.getUserDelegationKey(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, getUserDelegationKeyRequest, requestOptions,
            context));
    }

    /**
     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using bearer token
     * authentication.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     start: String (Required)
     *     expiry: String (Required)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     signedOid: String (Required)
     *     signedTid: String (Required)
     *     signedStart: String (Required)
     *     signedExpiry: String (Required)
     *     signedService: String (Required)
     *     signedVersion: String (Required)
     *     value: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param getUserDelegationKeyRequest The getUserDelegationKeyRequest parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return a user delegation key along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getUserDelegationKeyWithResponse(BinaryData getUserDelegationKeyRequest,
        RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return service.getUserDelegationKeySync(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, getUserDelegationKeyRequest, requestOptions,
            Context.NONE);
    }

    /**
     * Returns the sku name and account kind.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> getAccountInfoWithResponseAsync(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.getAccountInfo(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, context));
    }

    /**
     * Returns the sku name and account kind.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> getAccountInfoWithResponse(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/json";
        return service.getAccountInfoSync(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, Context.NONE);
    }

    /**
     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> submitBatchWithResponseAsync(long contentLength, BinaryData body,
        RequestOptions requestOptions) {
        final String multipartContentType = "multipart/mixed";
        final String accept = "multipart/mixed";
        return FluxUtil.withContext(context -> service.submitBatch(this.client.getUrl(), multipartContentType,
            this.client.getServiceVersion().getVersion(), contentLength, accept, body, requestOptions, context));
    }

    /**
     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> submitBatchWithResponse(long contentLength, BinaryData body,
        RequestOptions requestOptions) {
        final String multipartContentType = "multipart/mixed";
        final String accept = "multipart/mixed";
        return service.submitBatchSync(this.client.getUrl(), multipartContentType,
            this.client.getServiceVersion().getVersion(), contentLength, accept, body, requestOptions, Context.NONE);
    }

    /**
     * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search
     * expression.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>where</td><td>String</td><td>No</td><td>Filters the results to return only to return only blobs whose
     * tags match the specified expression.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * <tr><td>include</td><td>List&lt;String&gt;</td><td>No</td><td>Include this parameter to specify one or more
     * datasets to include in the response. In the form of "," separated string.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     serviceEndpoint: String (Required)
     *     where: String (Required)
     *     blobs (Required): [
     *          (Required){
     *             name: String (Required)
     *             containerName: String (Required)
     *             tags (Optional): {
     *                 blobTagSet (Required): [
     *                      (Required){
     *                         key: String (Required)
     *                         value: String (Required)
     *                     }
     *                 ]
     *             }
     *             versionId: String (Optional)
     *             isCurrentVersion: Boolean (Optional)
     *         }
     *     ]
     *     nextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the result of a Filter Blobs API call along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> filterBlobsWithResponseAsync(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return FluxUtil.withContext(context -> service.filterBlobs(this.client.getUrl(), contentType,
            this.client.getServiceVersion().getVersion(), accept, requestOptions, context));
    }

    /**
     * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a given search
     * expression.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>where</td><td>String</td><td>No</td><td>Filters the results to return only to return only blobs whose
     * tags match the specified expression.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * <tr><td>include</td><td>List&lt;String&gt;</td><td>No</td><td>Include this parameter to specify one or more
     * datasets to include in the response. In the form of "," separated string.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     serviceEndpoint: String (Required)
     *     where: String (Required)
     *     blobs (Required): [
     *          (Required){
     *             name: String (Required)
     *             containerName: String (Required)
     *             tags (Optional): {
     *                 blobTagSet (Required): [
     *                      (Required){
     *                         key: String (Required)
     *                         value: String (Required)
     *                     }
     *                 ]
     *             }
     *             versionId: String (Optional)
     *             isCurrentVersion: Boolean (Optional)
     *         }
     *     ]
     *     nextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the result of a Filter Blobs API call along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> filterBlobsWithResponse(RequestOptions requestOptions) {
        final String contentType = "application/xml";
        final String accept = "application/xml";
        return service.filterBlobsSync(this.client.getUrl(), contentType, this.client.getServiceVersion().getVersion(),
            accept, requestOptions, Context.NONE);
    }
}

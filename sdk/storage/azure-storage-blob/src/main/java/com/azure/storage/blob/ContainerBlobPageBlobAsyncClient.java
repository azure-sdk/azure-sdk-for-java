// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpHeaderName;
import com.azure.core.http.RequestConditions;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.DateTimeRfc1123;
import com.azure.core.util.FluxUtil;
import com.azure.storage.blob.implementation.ContainerBlobPageBlobsImpl;
import com.azure.storage.blob.models.BlobImmutabilityPolicyMode;
import com.azure.storage.blob.models.EncryptionAlgorithmType;
import com.azure.storage.blob.models.PageList;
import com.azure.storage.blob.models.PremiumPageBlobAccessTier;
import com.azure.storage.blob.models.SequenceNumberActionType;
import java.time.OffsetDateTime;
import java.util.Map;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the asynchronous BlobClient type.
 */
@ServiceClient(builder = BlobClientBuilder.class, isAsync = true)
public final class ContainerBlobPageBlobAsyncClient {
    @Generated
    private final ContainerBlobPageBlobsImpl serviceClient;

    /**
     * Initializes an instance of ContainerBlobPageBlobAsyncClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    ContainerBlobPageBlobAsyncClient(ContainerBlobPageBlobsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * The Create operation creates a new page blob.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-meta</td><td>Map&lt;String, String&gt;</td><td>No</td><td>The metadata headers.</td></tr>
     * <tr><td>x-ms-access-tier</td><td>String</td><td>No</td><td>Optional. Indicates the tier to be set on the page
     * blob. Allowed values: "P4", "P6", "P10", "P15", "P20", "P30", "P40", "P50", "P60", "P70", "P80".</td></tr>
     * <tr><td>x-ms-blob-content-type</td><td>String</td><td>No</td><td>Optional. Sets the blob's content type. If
     * specified, this property is stored with the blob and returned with a read request.</td></tr>
     * <tr><td>x-ms-blob-content-encoding</td><td>String</td><td>No</td><td>Optional. Sets the blob's content encoding.
     * If specified, this property is stored with the blob and returned with a read request.</td></tr>
     * <tr><td>x-ms-blob-content-language</td><td>String</td><td>No</td><td>Optional. Set the blob's content language.
     * If specified, this property is stored with the blob and returned with a read request.</td></tr>
     * <tr><td>x-ms-blob-content-md5</td><td>byte[]</td><td>No</td><td>Optional. An MD5 hash of the blob content. Note
     * that this hash is not validated, as the hashes for the individual blocks were validated when each was
     * uploaded.</td></tr>
     * <tr><td>x-ms-blob-cache-control</td><td>String</td><td>No</td><td>Optional. Sets the blob's cache control. If
     * specified, this property is stored with the blob and returned with a read request.</td></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>x-ms-blob-content-disposition</td><td>String</td><td>No</td><td>Optional. Sets the blob's content
     * disposition. If specified, this property is stored with the blob and returned with a read request.</td></tr>
     * <tr><td>x-ms-encryption-key</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption key to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-encryption-key-sha256</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the SHA256 hash of the encryption key used to encrypt the data provided in the request. This header is
     * only used for encryption with a customer-provided key. If the request is authenticated with a client token, this
     * header should be specified using the SHA256 hash of the encryption key.</td></tr>
     * <tr><td>x-ms-encryption-algorithm</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the algorithm to use for encryption. If not specified, the default is AES256. Allowed values:
     * "AES256".</td></tr>
     * <tr><td>x-ms-encryption-scope</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption scope to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * <tr><td>x-ms-blob-sequence-number</td><td>Long</td><td>No</td><td>Optional. The sequence number is a
     * user-controlled property that you can use to track requests. The value of the sequence number must be between 0
     * and 2^63 - 1. The default value is 0.</td></tr>
     * <tr><td>x-ms-tags</td><td>String</td><td>No</td><td>Optional. Used to set blob tags in various blob
     * operations.</td></tr>
     * <tr><td>x-ms-immutability-policy-until-date</td><td>OffsetDateTime</td><td>No</td><td>Specifies the date time
     * when the blobs immutability policy is set to expire.</td></tr>
     * <tr><td>x-ms-immutability-policy-mode</td><td>String</td><td>No</td><td>Specifies the immutability policy mode to
     * set on the blob. Allowed values: "Mutable", "Locked", "Unlocked".</td></tr>
     * <tr><td>x-ms-legal-hold</td><td>Boolean</td><td>No</td><td>Specified if a legal hold should be set on the
     * blob.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param contentLength The length of the request.
     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The page blob size
     * must be aligned to a 512-byte boundary.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> createWithResponse(long contentLength, long blobContentLength,
        RequestOptions requestOptions) {
        return this.serviceClient.createWithResponseAsync(contentLength, blobContentLength, requestOptions);
    }

    /**
     * The Upload Pages operation writes a range of pages to a page blob.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Content-MD5</td><td>String</td><td>No</td><td>Optional. An MD5 hash of the blob content. Note that this
     * hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</td></tr>
     * <tr><td>x-ms-content-crc64</td><td>String</td><td>No</td><td>Specify the transactional crc64 for the body, to be
     * validated by the service.</td></tr>
     * <tr><td>x-ms-range</td><td>String</td><td>No</td><td>Return only the bytes of the blob in the specified
     * range.</td></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>x-ms-encryption-key</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption key to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-encryption-key-sha256</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the SHA256 hash of the encryption key used to encrypt the data provided in the request. This header is
     * only used for encryption with a customer-provided key. If the request is authenticated with a client token, this
     * header should be specified using the SHA256 hash of the encryption key.</td></tr>
     * <tr><td>x-ms-encryption-algorithm</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the algorithm to use for encryption. If not specified, the default is AES256. Allowed values:
     * "AES256".</td></tr>
     * <tr><td>x-ms-encryption-scope</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption scope to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-if-sequence-number-le</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has a sequence number less than or equal to the specified.</td></tr>
     * <tr><td>x-ms-if-sequence-number-lt</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has a sequence number less than the specified.</td></tr>
     * <tr><td>x-ms-if-sequence-number-eq</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has the specified sequence number.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * <tr><td>x-ms-structured-body</td><td>String</td><td>No</td><td>Required if the request body is a structured
     * message. Specifies the message schema version and properties.</td></tr>
     * <tr><td>x-ms-structured-content-length</td><td>Long</td><td>No</td><td>Required if the request body is a
     * structured message. Specifies the length of the blob/file content inside the message body. Will always be smaller
     * than Content-Length.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> uploadPagesWithResponse(long contentLength, BinaryData body,
        RequestOptions requestOptions) {
        return this.serviceClient.uploadPagesWithResponseAsync(contentLength, body, requestOptions);
    }

    /**
     * The Clear Pages operation clears a range of pages from a page blob.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-range</td><td>String</td><td>No</td><td>Return only the bytes of the blob in the specified
     * range.</td></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>x-ms-encryption-key</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption key to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-encryption-key-sha256</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the SHA256 hash of the encryption key used to encrypt the data provided in the request. This header is
     * only used for encryption with a customer-provided key. If the request is authenticated with a client token, this
     * header should be specified using the SHA256 hash of the encryption key.</td></tr>
     * <tr><td>x-ms-encryption-algorithm</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the algorithm to use for encryption. If not specified, the default is AES256. Allowed values:
     * "AES256".</td></tr>
     * <tr><td>x-ms-encryption-scope</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption scope to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-if-sequence-number-le</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has a sequence number less than or equal to the specified.</td></tr>
     * <tr><td>x-ms-if-sequence-number-lt</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has a sequence number less than the specified.</td></tr>
     * <tr><td>x-ms-if-sequence-number-eq</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has the specified sequence number.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param contentLength The length of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> clearPagesWithResponse(long contentLength, RequestOptions requestOptions) {
        return this.serviceClient.clearPagesWithResponseAsync(contentLength, requestOptions);
    }

    /**
     * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a URL.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-source-content-md5</td><td>String</td><td>No</td><td>Specify the md5 calculated for the range of
     * bytes that must be read from the copy source.</td></tr>
     * <tr><td>x-ms-source-content-crc64</td><td>byte[]</td><td>No</td><td>Specify the crc64 calculated for the range of
     * bytes that must be read from the copy source.</td></tr>
     * <tr><td>x-ms-encryption-key</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption key to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-encryption-key-sha256</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the SHA256 hash of the encryption key used to encrypt the data provided in the request. This header is
     * only used for encryption with a customer-provided key. If the request is authenticated with a client token, this
     * header should be specified using the SHA256 hash of the encryption key.</td></tr>
     * <tr><td>x-ms-encryption-algorithm</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the algorithm to use for encryption. If not specified, the default is AES256. Allowed values:
     * "AES256".</td></tr>
     * <tr><td>x-ms-encryption-scope</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption scope to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>x-ms-if-sequence-number-le</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has a sequence number less than or equal to the specified.</td></tr>
     * <tr><td>x-ms-if-sequence-number-lt</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has a sequence number less than the specified.</td></tr>
     * <tr><td>x-ms-if-sequence-number-eq</td><td>Long</td><td>No</td><td>Specify this header value to operate only on a
     * blob if it has the specified sequence number.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * <tr><td>x-ms-source-if-modified-since</td><td>OffsetDateTime</td><td>No</td><td>Specify this header value to
     * operate only on a blob if it has been modified since the specified date/time.</td></tr>
     * <tr><td>x-ms-source-if-unmodified-since</td><td>OffsetDateTime</td><td>No</td><td>Specify this header value to
     * operate only on a blob if it has not been modified since the specified date/time.</td></tr>
     * <tr><td>x-ms-source-if-match</td><td>String</td><td>No</td><td>Specify an ETag value to operate only on blobs
     * with a matching value.</td></tr>
     * <tr><td>x-ms-source-if-none-match</td><td>String</td><td>No</td><td>Specify this header value to operate only on
     * a blob if it has been modified since the specified date/time.</td></tr>
     * <tr><td>x-ms-copy-source-authorization</td><td>String</td><td>No</td><td>Only Bearer type is supported.
     * Credentials should be a valid OAuth access token to copy source.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param sourceUrl Specify a URL to the copy source.
     * @param sourceRange Bytes of source data in the specified range. The length of this range should match the
     * ContentLength header and x-ms-range/Range destination range header.
     * @param contentLength The length of the request.
     * @param range Bytes of source data in the specified range. The length of this range should match the ContentLength
     * header and x-ms-range/Range destination range header.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> uploadPagesFromUrlWithResponse(String sourceUrl, String sourceRange, long contentLength,
        String range, RequestOptions requestOptions) {
        return this.serviceClient.uploadPagesFromUrlWithResponseAsync(sourceUrl, sourceRange, contentLength, range,
            requestOptions);
    }

    /**
     * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a page blob.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>snapshot</td><td>String</td><td>No</td><td>The snapshot parameter is an opaque DateTime value that, when
     * present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob"&gt;Creating
     * a Snapshot of a Blob.&lt;/a&gt;</td></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-range</td><td>String</td><td>No</td><td>Return only the bytes of the blob in the specified
     * range.</td></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     pageRange (Optional): [
     *          (Optional){
     *             start: long (Required)
     *             end: long (Required)
     *         }
     *     ]
     *     clearRange (Optional): [
     *          (Optional){
     *             start: long (Required)
     *             end: long (Required)
     *         }
     *     ]
     *     nextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a page list along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getPageRangesWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getPageRangesWithResponseAsync(requestOptions);
    }

    /**
     * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob or snapshot of a page
     * blob.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>snapshot</td><td>String</td><td>No</td><td>The snapshot parameter is an opaque DateTime value that, when
     * present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob"&gt;Creating
     * a Snapshot of a Blob.&lt;/a&gt;</td></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * <tr><td>prevsnapshot</td><td>String</td><td>No</td><td>Optional in version 2015-07-08 and newer. The prevsnapshot
     * parameter is a DateTime value that specifies that the response will contain only pages that were changed between
     * target blob and previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a
     * snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note that incremental
     * snapshots are currently supported only for blobs created on or after January 1, 2016.</td></tr>
     * <tr><td>marker</td><td>String</td><td>No</td><td>A string value that identifies the portion of the list of
     * containers to be returned with the next listing operation. The operation returns the NextMarker value within the
     * response body if the listing operation did not return all containers remaining to be listed with the current
     * page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the
     * next page of list items. The marker value is opaque to the client.</td></tr>
     * <tr><td>maxresults</td><td>Integer</td><td>No</td><td>Specifies the maximum number of containers to return. If
     * the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to
     * 5000 items.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-previous-snapshot-url</td><td>String</td><td>No</td><td>Optional. This header is only supported in
     * service versions 2019-04-19 and after and specifies the URL of a previous snapshot of the target blob. The
     * response will only contain pages that were changed between the target blob and its previous snapshot.</td></tr>
     * <tr><td>x-ms-range</td><td>String</td><td>No</td><td>Return only the bytes of the blob in the specified
     * range.</td></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     pageRange (Optional): [
     *          (Optional){
     *             start: long (Required)
     *             end: long (Required)
     *         }
     *     ]
     *     clearRange (Optional): [
     *          (Optional){
     *             start: long (Required)
     *             end: long (Required)
     *         }
     *     ]
     *     nextMarker: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a page list along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getPageRangesDiffWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getPageRangesDiffWithResponseAsync(requestOptions);
    }

    /**
     * The Resize operation increases the size of the page blob to the specified size.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>x-ms-encryption-key</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption key to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>x-ms-encryption-key-sha256</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the SHA256 hash of the encryption key used to encrypt the data provided in the request. This header is
     * only used for encryption with a customer-provided key. If the request is authenticated with a client token, this
     * header should be specified using the SHA256 hash of the encryption key.</td></tr>
     * <tr><td>x-ms-encryption-algorithm</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later.
     * Specifies the algorithm to use for encryption. If not specified, the default is AES256. Allowed values:
     * "AES256".</td></tr>
     * <tr><td>x-ms-encryption-scope</td><td>String</td><td>No</td><td>Optional. Version 2019-07-07 and later. Specifies
     * the encryption scope to use to encrypt the data provided in the request. If not specified, the request will be
     * encrypted with the root account key.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The page blob size
     * must be aligned to a 512-byte boundary.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> resizeWithResponse(long blobContentLength, RequestOptions requestOptions) {
        return this.serviceClient.resizeWithResponseAsync(blobContentLength, requestOptions);
    }

    /**
     * The Update Sequence Number operation sets the blob's sequence number. The operation will fail if the specified
     * sequence number is less than the current sequence number of the blob.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>x-ms-lease-id</td><td>String</td><td>No</td><td>If specified, the operation only succeeds if the
     * resource's lease is active and matches this ID.</td></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * <tr><td>x-ms-blob-sequence-number</td><td>Long</td><td>No</td><td>Set for page blobs only. The sequence number is
     * a user-controlled value that you can use to track requests. The value of the sequence number must be between 0
     * and 2^63 - 1.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request. This
     * property applies to page blobs only. This property indicates how the service should modify the blob's sequence
     * number. Allowed values: "increment", "max", "update".
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> updateSequenceNumberWithResponse(String sequenceNumberAction,
        RequestOptions requestOptions) {
        return this.serviceClient.updateSequenceNumberWithResponseAsync(sequenceNumberAction, requestOptions);
    }

    /**
     * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob. The snapshot
     * is copied such that only the differential changes between the previously copied snapshot are transferred to the
     * destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as
     * usual. This API is supported since REST version 2016-05-31.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>timeout</td><td>Integer</td><td>No</td><td>The timeout parameter is expressed in seconds. For more
     * information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>The request should only proceed if an entity matches this
     * string.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>The request should only proceed if no entity matches this
     * string.</td></tr>
     * <tr><td>If-Unmodified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the
     * entity was not modified after this time.</td></tr>
     * <tr><td>If-Modified-Since</td><td>OffsetDateTime</td><td>No</td><td>The request should only proceed if the entity
     * was modified after this time.</td></tr>
     * <tr><td>x-ms-if-tags</td><td>String</td><td>No</td><td>Specify a SQL where clause on blob tags to operate only on
     * blobs with a matching value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in
     * length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI.
     * The source blob must either be public or must be authenticated via a shared access signature.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> copyIncrementalWithResponse(String copySource, RequestOptions requestOptions) {
        return this.serviceClient.copyIncrementalWithResponseAsync(copySource, requestOptions);
    }

    /**
     * The Create operation creates a new page blob.
     * 
     * @param contentLength The length of the request.
     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The page blob size
     * must be aligned to a 512-byte boundary.
     * @param metadata The metadata headers.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param tier Optional. Indicates the tier to be set on the page blob.
     * @param blobContentType Optional. Sets the blob's content type. If specified, this property is stored with the
     * blob and returned with a read request.
     * @param blobContentEncoding Optional. Sets the blob's content encoding. If specified, this property is stored with
     * the blob and returned with a read request.
     * @param blobContentLanguage Optional. Set the blob's content language. If specified, this property is stored with
     * the blob and returned with a read request.
     * @param blobContentMd5 Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the
     * hashes for the individual blocks were validated when each was uploaded.
     * @param blobCacheControl Optional. Sets the blob's cache control. If specified, this property is stored with the
     * blob and returned with a read request.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param blobContentDisposition Optional. Sets the blob's content disposition. If specified, this property is
     * stored with the blob and returned with a read request.
     * @param encryptionKey Optional. Version 2019-07-07 and later. Specifies the encryption key to use to encrypt the
     * data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param encryptionKeySha256 Optional. Version 2019-07-07 and later. Specifies the SHA256 hash of the encryption
     * key used to encrypt the data provided in the request. This header is only used for encryption with a
     * customer-provided key. If the request is authenticated with a client token, this header should be specified using
     * the SHA256 hash of the encryption key.
     * @param encryptionAlgorithm Optional. Version 2019-07-07 and later. Specifies the algorithm to use for encryption.
     * If not specified, the default is AES256.
     * @param encryptionScope Optional. Version 2019-07-07 and later. Specifies the encryption scope to use to encrypt
     * the data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param blobSequenceNumber Optional. The sequence number is a user-controlled property that you can use to track
     * requests. The value of the sequence number must be between 0 and 2^63 - 1. The default value is 0.
     * @param blobTagsString Optional. Used to set blob tags in various blob operations.
     * @param immutabilityPolicyExpiry Specifies the date time when the blobs immutability policy is set to expire.
     * @param immutabilityPolicyMode Specifies the immutability policy mode to set on the blob.
     * @param legalHold Specified if a legal hold should be set on the blob.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> create(long contentLength, long blobContentLength, Map<String, String> metadata, Integer timeout,
        PremiumPageBlobAccessTier tier, String blobContentType, String blobContentEncoding, String blobContentLanguage,
        byte[] blobContentMd5, String blobCacheControl, String leaseId, String blobContentDisposition,
        String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm,
        String encryptionScope, String ifTags, Long blobSequenceNumber, String blobTagsString,
        OffsetDateTime immutabilityPolicyExpiry, BlobImmutabilityPolicyMode immutabilityPolicyMode, Boolean legalHold,
        RequestConditions requestConditions) {
        // Generated convenience method for createWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (metadata != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-meta"), String.valueOf(metadata));
        }
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (tier != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-access-tier"), tier.toString());
        }
        if (blobContentType != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-content-type"), blobContentType);
        }
        if (blobContentEncoding != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-content-encoding"), blobContentEncoding);
        }
        if (blobContentLanguage != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-content-language"), blobContentLanguage);
        }
        if (blobContentMd5 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-content-md5"),
                String.valueOf(blobContentMd5));
        }
        if (blobCacheControl != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-cache-control"), blobCacheControl);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (blobContentDisposition != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-content-disposition"),
                blobContentDisposition);
        }
        if (encryptionKey != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key"), encryptionKey);
        }
        if (encryptionKeySha256 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key-sha256"), encryptionKeySha256);
        }
        if (encryptionAlgorithm != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-algorithm"),
                encryptionAlgorithm.toString());
        }
        if (encryptionScope != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-scope"), encryptionScope);
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (blobSequenceNumber != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-sequence-number"),
                String.valueOf(blobSequenceNumber));
        }
        if (blobTagsString != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-tags"), blobTagsString);
        }
        if (immutabilityPolicyExpiry != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-immutability-policy-until-date"),
                String.valueOf(new DateTimeRfc1123(immutabilityPolicyExpiry)));
        }
        if (immutabilityPolicyMode != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-immutability-policy-mode"),
                immutabilityPolicyMode.toString());
        }
        if (legalHold != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-legal-hold"), String.valueOf(legalHold));
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return createWithResponse(contentLength, blobContentLength, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Create operation creates a new page blob.
     * 
     * @param contentLength The length of the request.
     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The page blob size
     * must be aligned to a 512-byte boundary.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> create(long contentLength, long blobContentLength) {
        // Generated convenience method for createWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return createWithResponse(contentLength, blobContentLength, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Upload Pages operation writes a range of pages to a page blob.
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @param transactionalContentMD5 Optional. An MD5 hash of the blob content. Note that this hash is not validated,
     * as the hashes for the individual blocks were validated when each was uploaded.
     * @param transactionalContentCrc64 Specify the transactional crc64 for the body, to be validated by the service.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param range Return only the bytes of the blob in the specified range.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param encryptionKey Optional. Version 2019-07-07 and later. Specifies the encryption key to use to encrypt the
     * data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param encryptionKeySha256 Optional. Version 2019-07-07 and later. Specifies the SHA256 hash of the encryption
     * key used to encrypt the data provided in the request. This header is only used for encryption with a
     * customer-provided key. If the request is authenticated with a client token, this header should be specified using
     * the SHA256 hash of the encryption key.
     * @param encryptionAlgorithm Optional. Version 2019-07-07 and later. Specifies the algorithm to use for encryption.
     * If not specified, the default is AES256.
     * @param encryptionScope Optional. Version 2019-07-07 and later. Specifies the encryption scope to use to encrypt
     * the data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param ifSequenceNumberLessThanOrEqualTo Specify this header value to operate only on a blob if it has a sequence
     * number less than or equal to the specified.
     * @param ifSequenceNumberLessThan Specify this header value to operate only on a blob if it has a sequence number
     * less than the specified.
     * @param ifSequenceNumberEqualTo Specify this header value to operate only on a blob if it has the specified
     * sequence number.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param structuredBodyType Required if the request body is a structured message. Specifies the message schema
     * version and properties.
     * @param structuredContentLength Required if the request body is a structured message. Specifies the length of the
     * blob/file content inside the message body. Will always be smaller than Content-Length.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> uploadPages(long contentLength, BinaryData body, String transactionalContentMD5,
        String transactionalContentCrc64, Integer timeout, String range, String leaseId, String encryptionKey,
        String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope,
        Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo,
        String ifTags, String structuredBodyType, Long structuredContentLength, RequestConditions requestConditions) {
        // Generated convenience method for uploadPagesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (transactionalContentMD5 != null) {
            requestOptions.setHeader(HttpHeaderName.CONTENT_MD5, transactionalContentMD5);
        }
        if (transactionalContentCrc64 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-content-crc64"), transactionalContentCrc64);
        }
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (range != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-range"), range);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (encryptionKey != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key"), encryptionKey);
        }
        if (encryptionKeySha256 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key-sha256"), encryptionKeySha256);
        }
        if (encryptionAlgorithm != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-algorithm"),
                encryptionAlgorithm.toString());
        }
        if (encryptionScope != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-scope"), encryptionScope);
        }
        if (ifSequenceNumberLessThanOrEqualTo != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-le"),
                String.valueOf(ifSequenceNumberLessThanOrEqualTo));
        }
        if (ifSequenceNumberLessThan != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-lt"),
                String.valueOf(ifSequenceNumberLessThan));
        }
        if (ifSequenceNumberEqualTo != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-eq"),
                String.valueOf(ifSequenceNumberEqualTo));
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (structuredBodyType != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-structured-body"), structuredBodyType);
        }
        if (structuredContentLength != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-structured-content-length"),
                String.valueOf(structuredContentLength));
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return uploadPagesWithResponse(contentLength, body, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Upload Pages operation writes a range of pages to a page blob.
     * 
     * @param contentLength The length of the request.
     * @param body The body of the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> uploadPages(long contentLength, BinaryData body) {
        // Generated convenience method for uploadPagesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return uploadPagesWithResponse(contentLength, body, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Clear Pages operation clears a range of pages from a page blob.
     * 
     * @param contentLength The length of the request.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param range Return only the bytes of the blob in the specified range.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param encryptionKey Optional. Version 2019-07-07 and later. Specifies the encryption key to use to encrypt the
     * data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param encryptionKeySha256 Optional. Version 2019-07-07 and later. Specifies the SHA256 hash of the encryption
     * key used to encrypt the data provided in the request. This header is only used for encryption with a
     * customer-provided key. If the request is authenticated with a client token, this header should be specified using
     * the SHA256 hash of the encryption key.
     * @param encryptionAlgorithm Optional. Version 2019-07-07 and later. Specifies the algorithm to use for encryption.
     * If not specified, the default is AES256.
     * @param encryptionScope Optional. Version 2019-07-07 and later. Specifies the encryption scope to use to encrypt
     * the data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param ifSequenceNumberLessThanOrEqualTo Specify this header value to operate only on a blob if it has a sequence
     * number less than or equal to the specified.
     * @param ifSequenceNumberLessThan Specify this header value to operate only on a blob if it has a sequence number
     * less than the specified.
     * @param ifSequenceNumberEqualTo Specify this header value to operate only on a blob if it has the specified
     * sequence number.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> clearPages(long contentLength, Integer timeout, String range, String leaseId,
        String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm,
        String encryptionScope, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan,
        Long ifSequenceNumberEqualTo, String ifTags, RequestConditions requestConditions) {
        // Generated convenience method for clearPagesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (range != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-range"), range);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (encryptionKey != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key"), encryptionKey);
        }
        if (encryptionKeySha256 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key-sha256"), encryptionKeySha256);
        }
        if (encryptionAlgorithm != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-algorithm"),
                encryptionAlgorithm.toString());
        }
        if (encryptionScope != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-scope"), encryptionScope);
        }
        if (ifSequenceNumberLessThanOrEqualTo != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-le"),
                String.valueOf(ifSequenceNumberLessThanOrEqualTo));
        }
        if (ifSequenceNumberLessThan != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-lt"),
                String.valueOf(ifSequenceNumberLessThan));
        }
        if (ifSequenceNumberEqualTo != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-eq"),
                String.valueOf(ifSequenceNumberEqualTo));
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return clearPagesWithResponse(contentLength, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Clear Pages operation clears a range of pages from a page blob.
     * 
     * @param contentLength The length of the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> clearPages(long contentLength) {
        // Generated convenience method for clearPagesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return clearPagesWithResponse(contentLength, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a URL.
     * 
     * @param sourceUrl Specify a URL to the copy source.
     * @param sourceRange Bytes of source data in the specified range. The length of this range should match the
     * ContentLength header and x-ms-range/Range destination range header.
     * @param contentLength The length of the request.
     * @param range Bytes of source data in the specified range. The length of this range should match the ContentLength
     * header and x-ms-range/Range destination range header.
     * @param sourceContentMd5 Specify the md5 calculated for the range of bytes that must be read from the copy source.
     * @param sourceContentCrc64 Specify the crc64 calculated for the range of bytes that must be read from the copy
     * source.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param encryptionKey Optional. Version 2019-07-07 and later. Specifies the encryption key to use to encrypt the
     * data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param encryptionKeySha256 Optional. Version 2019-07-07 and later. Specifies the SHA256 hash of the encryption
     * key used to encrypt the data provided in the request. This header is only used for encryption with a
     * customer-provided key. If the request is authenticated with a client token, this header should be specified using
     * the SHA256 hash of the encryption key.
     * @param encryptionAlgorithm Optional. Version 2019-07-07 and later. Specifies the algorithm to use for encryption.
     * If not specified, the default is AES256.
     * @param encryptionScope Optional. Version 2019-07-07 and later. Specifies the encryption scope to use to encrypt
     * the data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param ifSequenceNumberLessThanOrEqualTo Specify this header value to operate only on a blob if it has a sequence
     * number less than or equal to the specified.
     * @param ifSequenceNumberLessThan Specify this header value to operate only on a blob if it has a sequence number
     * less than the specified.
     * @param ifSequenceNumberEqualTo Specify this header value to operate only on a blob if it has the specified
     * sequence number.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param sourceIfModifiedSince Specify this header value to operate only on a blob if it has been modified since
     * the specified date/time.
     * @param sourceIfUnmodifiedSince Specify this header value to operate only on a blob if it has not been modified
     * since the specified date/time.
     * @param sourceIfMatch Specify an ETag value to operate only on blobs with a matching value.
     * @param sourceIfNoneMatch Specify this header value to operate only on a blob if it has been modified since the
     * specified date/time.
     * @param copySourceAuthorization Only Bearer type is supported. Credentials should be a valid OAuth access token to
     * copy source.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> uploadPagesFromUrl(String sourceUrl, String sourceRange, long contentLength, String range,
        String sourceContentMd5, byte[] sourceContentCrc64, Integer timeout, String encryptionKey,
        String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, String leaseId,
        Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo,
        String ifTags, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince,
        String sourceIfMatch, String sourceIfNoneMatch, String copySourceAuthorization,
        RequestConditions requestConditions) {
        // Generated convenience method for uploadPagesFromUrlWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (sourceContentMd5 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-source-content-md5"), sourceContentMd5);
        }
        if (sourceContentCrc64 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-source-content-crc64"),
                String.valueOf(sourceContentCrc64));
        }
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (encryptionKey != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key"), encryptionKey);
        }
        if (encryptionKeySha256 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key-sha256"), encryptionKeySha256);
        }
        if (encryptionAlgorithm != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-algorithm"),
                encryptionAlgorithm.toString());
        }
        if (encryptionScope != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-scope"), encryptionScope);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (ifSequenceNumberLessThanOrEqualTo != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-le"),
                String.valueOf(ifSequenceNumberLessThanOrEqualTo));
        }
        if (ifSequenceNumberLessThan != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-lt"),
                String.valueOf(ifSequenceNumberLessThan));
        }
        if (ifSequenceNumberEqualTo != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-sequence-number-eq"),
                String.valueOf(ifSequenceNumberEqualTo));
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (sourceIfModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-source-if-modified-since"),
                String.valueOf(new DateTimeRfc1123(sourceIfModifiedSince)));
        }
        if (sourceIfUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-source-if-unmodified-since"),
                String.valueOf(new DateTimeRfc1123(sourceIfUnmodifiedSince)));
        }
        if (sourceIfMatch != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-source-if-match"), sourceIfMatch);
        }
        if (sourceIfNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-source-if-none-match"), sourceIfNoneMatch);
        }
        if (copySourceAuthorization != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-copy-source-authorization"),
                copySourceAuthorization);
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return uploadPagesFromUrlWithResponse(sourceUrl, sourceRange, contentLength, range, requestOptions)
            .flatMap(FluxUtil::toMono);
    }

    /**
     * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a URL.
     * 
     * @param sourceUrl Specify a URL to the copy source.
     * @param sourceRange Bytes of source data in the specified range. The length of this range should match the
     * ContentLength header and x-ms-range/Range destination range header.
     * @param contentLength The length of the request.
     * @param range Bytes of source data in the specified range. The length of this range should match the ContentLength
     * header and x-ms-range/Range destination range header.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> uploadPagesFromUrl(String sourceUrl, String sourceRange, long contentLength, String range) {
        // Generated convenience method for uploadPagesFromUrlWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return uploadPagesFromUrlWithResponse(sourceUrl, sourceRange, contentLength, range, requestOptions)
            .flatMap(FluxUtil::toMono);
    }

    /**
     * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a page blob.
     * 
     * @param snapshot The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
     * snapshot to retrieve. For more information on working with blob snapshots, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob"&gt;Creating
     * a Snapshot of a Blob.&lt;/a&gt;.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param range Return only the bytes of the blob in the specified range.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param marker A string value that identifies the portion of the list of containers to be returned with the next
     * listing operation. The operation returns the NextMarker value within the response body if the listing operation
     * did not return all containers remaining to be listed with the current page. The NextMarker value can be used as
     * the value for the marker parameter in a subsequent call to request the next page of list items. The marker value
     * is opaque to the client.
     * @param maxresults Specifies the maximum number of containers to return. If the request does not specify
     * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a page list on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<PageList> getPageRanges(String snapshot, Integer timeout, String range, String leaseId, String ifTags,
        String marker, Integer maxresults, RequestConditions requestConditions) {
        // Generated convenience method for getPageRangesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (snapshot != null) {
            requestOptions.addQueryParam("snapshot", snapshot, false);
        }
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (range != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-range"), range);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (marker != null) {
            requestOptions.addQueryParam("marker", marker, false);
        }
        if (maxresults != null) {
            requestOptions.addQueryParam("maxresults", String.valueOf(maxresults), false);
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return getPageRangesWithResponse(requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(PageList.class));
    }

    /**
     * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a page blob.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a page list on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<PageList> getPageRanges() {
        // Generated convenience method for getPageRangesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getPageRangesWithResponse(requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(PageList.class));
    }

    /**
     * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob or snapshot of a page
     * blob.
     * 
     * @param snapshot The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
     * snapshot to retrieve. For more information on working with blob snapshots, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob"&gt;Creating
     * a Snapshot of a Blob.&lt;/a&gt;.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param prevsnapshot Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that
     * specifies that the response will contain only pages that were changed between target blob and previous snapshot.
     * Changed pages include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot
     * specified by prevsnapshot is the older of the two. Note that incremental snapshots are currently supported only
     * for blobs created on or after January 1, 2016.
     * @param prevSnapshotUrl Optional. This header is only supported in service versions 2019-04-19 and after and
     * specifies the URL of a previous snapshot of the target blob. The response will only contain pages that were
     * changed between the target blob and its previous snapshot.
     * @param range Return only the bytes of the blob in the specified range.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param marker A string value that identifies the portion of the list of containers to be returned with the next
     * listing operation. The operation returns the NextMarker value within the response body if the listing operation
     * did not return all containers remaining to be listed with the current page. The NextMarker value can be used as
     * the value for the marker parameter in a subsequent call to request the next page of list items. The marker value
     * is opaque to the client.
     * @param maxresults Specifies the maximum number of containers to return. If the request does not specify
     * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a page list on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<PageList> getPageRangesDiff(String snapshot, Integer timeout, String prevsnapshot,
        String prevSnapshotUrl, String range, String leaseId, String ifTags, String marker, Integer maxresults,
        RequestConditions requestConditions) {
        // Generated convenience method for getPageRangesDiffWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (snapshot != null) {
            requestOptions.addQueryParam("snapshot", snapshot, false);
        }
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (prevsnapshot != null) {
            requestOptions.addQueryParam("prevsnapshot", prevsnapshot, false);
        }
        if (prevSnapshotUrl != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-previous-snapshot-url"), prevSnapshotUrl);
        }
        if (range != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-range"), range);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (marker != null) {
            requestOptions.addQueryParam("marker", marker, false);
        }
        if (maxresults != null) {
            requestOptions.addQueryParam("maxresults", String.valueOf(maxresults), false);
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return getPageRangesDiffWithResponse(requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(PageList.class));
    }

    /**
     * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob or snapshot of a page
     * blob.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a page list on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<PageList> getPageRangesDiff() {
        // Generated convenience method for getPageRangesDiffWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getPageRangesDiffWithResponse(requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(PageList.class));
    }

    /**
     * The Resize operation increases the size of the page blob to the specified size.
     * 
     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The page blob size
     * must be aligned to a 512-byte boundary.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param encryptionKey Optional. Version 2019-07-07 and later. Specifies the encryption key to use to encrypt the
     * data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param encryptionKeySha256 Optional. Version 2019-07-07 and later. Specifies the SHA256 hash of the encryption
     * key used to encrypt the data provided in the request. This header is only used for encryption with a
     * customer-provided key. If the request is authenticated with a client token, this header should be specified using
     * the SHA256 hash of the encryption key.
     * @param encryptionAlgorithm Optional. Version 2019-07-07 and later. Specifies the algorithm to use for encryption.
     * If not specified, the default is AES256.
     * @param encryptionScope Optional. Version 2019-07-07 and later. Specifies the encryption scope to use to encrypt
     * the data provided in the request. If not specified, the request will be encrypted with the root account key.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> resize(long blobContentLength, Integer timeout, String leaseId, String encryptionKey,
        String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, String ifTags,
        RequestConditions requestConditions) {
        // Generated convenience method for resizeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (encryptionKey != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key"), encryptionKey);
        }
        if (encryptionKeySha256 != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-key-sha256"), encryptionKeySha256);
        }
        if (encryptionAlgorithm != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-algorithm"),
                encryptionAlgorithm.toString());
        }
        if (encryptionScope != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-encryption-scope"), encryptionScope);
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return resizeWithResponse(blobContentLength, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Resize operation increases the size of the page blob to the specified size.
     * 
     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The page blob size
     * must be aligned to a 512-byte boundary.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> resize(long blobContentLength) {
        // Generated convenience method for resizeWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return resizeWithResponse(blobContentLength, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Update Sequence Number operation sets the blob's sequence number. The operation will fail if the specified
     * sequence number is less than the current sequence number of the blob.
     * 
     * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request. This
     * property applies to page blobs only. This property indicates how the service should modify the blob's sequence
     * number.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param blobSequenceNumber Set for page blobs only. The sequence number is a user-controlled value that you can
     * use to track requests. The value of the sequence number must be between 0 and 2^63 - 1.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> updateSequenceNumber(SequenceNumberActionType sequenceNumberAction, Integer timeout,
        String leaseId, String ifTags, Long blobSequenceNumber, RequestConditions requestConditions) {
        // Generated convenience method for updateSequenceNumberWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (leaseId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-lease-id"), leaseId);
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (blobSequenceNumber != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-blob-sequence-number"),
                String.valueOf(blobSequenceNumber));
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return updateSequenceNumberWithResponse(sequenceNumberAction.toString(), requestOptions)
            .flatMap(FluxUtil::toMono);
    }

    /**
     * The Update Sequence Number operation sets the blob's sequence number. The operation will fail if the specified
     * sequence number is less than the current sequence number of the blob.
     * 
     * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request. This
     * property applies to page blobs only. This property indicates how the service should modify the blob's sequence
     * number.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> updateSequenceNumber(SequenceNumberActionType sequenceNumberAction) {
        // Generated convenience method for updateSequenceNumberWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return updateSequenceNumberWithResponse(sequenceNumberAction.toString(), requestOptions)
            .flatMap(FluxUtil::toMono);
    }

    /**
     * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob. The snapshot
     * is copied such that only the differential changes between the previously copied snapshot are transferred to the
     * destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as
     * usual. This API is supported since REST version 2016-05-31.
     * 
     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in
     * length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI.
     * The source blob must either be public or must be authenticated via a shared access signature.
     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a
     * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations"&gt;Setting
     * Timeouts for Blob Service Operations.&lt;/a&gt;.
     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
     * @param requestConditions Specifies HTTP options for conditional requests based on modification time.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> copyIncremental(String copySource, Integer timeout, String ifTags,
        RequestConditions requestConditions) {
        // Generated convenience method for copyIncrementalWithResponse
        RequestOptions requestOptions = new RequestOptions();
        String ifMatch = requestConditions == null ? null : requestConditions.getIfMatch();
        String ifNoneMatch = requestConditions == null ? null : requestConditions.getIfNoneMatch();
        OffsetDateTime ifUnmodifiedSince = requestConditions == null ? null : requestConditions.getIfUnmodifiedSince();
        OffsetDateTime ifModifiedSince = requestConditions == null ? null : requestConditions.getIfModifiedSince();
        if (timeout != null) {
            requestOptions.addQueryParam("timeout", String.valueOf(timeout), false);
        }
        if (ifTags != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("x-ms-if-tags"), ifTags);
        }
        if (ifMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MATCH, ifMatch);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        if (ifUnmodifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_UNMODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifUnmodifiedSince)));
        }
        if (ifModifiedSince != null) {
            requestOptions.setHeader(HttpHeaderName.IF_MODIFIED_SINCE,
                String.valueOf(new DateTimeRfc1123(ifModifiedSince)));
        }
        return copyIncrementalWithResponse(copySource, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob. The snapshot
     * is copied such that only the differential changes between the previously copied snapshot are transferred to the
     * destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as
     * usual. This API is supported since REST version 2016-05-31.
     * 
     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in
     * length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI.
     * The source blob must either be public or must be authenticated via a shared access signature.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> copyIncremental(String copySource) {
        // Generated convenience method for copyIncrementalWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return copyIncrementalWithResponse(copySource, requestOptions).flatMap(FluxUtil::toMono);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The service properties.
 */
@Immutable
public final class StorageServiceProperties implements JsonSerializable<StorageServiceProperties> {
    /*
     * The logging properties.
     */
    @Generated
    private Logging logging;

    /*
     * The hour metrics properties.
     */
    @Generated
    private Metrics hourMetrics;

    /*
     * The minute metrics properties.
     */
    @Generated
    private Metrics minuteMetrics;

    /*
     * The CORS properties.
     */
    @Generated
    private List<CorsRule> cors;

    /*
     * The default service version.
     */
    @Generated
    private String defaultServiceVersion;

    /*
     * The delete retention policy.
     */
    @Generated
    private RetentionPolicy deleteRetentionPolicy;

    /*
     * The static website properties.
     */
    @Generated
    private StaticWebsite staticWebsite;

    /**
     * Creates an instance of StorageServiceProperties class.
     */
    @Generated
    private StorageServiceProperties() {
    }

    /**
     * Get the logging property: The logging properties.
     * 
     * @return the logging value.
     */
    @Generated
    public Logging getLogging() {
        return this.logging;
    }

    /**
     * Get the hourMetrics property: The hour metrics properties.
     * 
     * @return the hourMetrics value.
     */
    @Generated
    public Metrics getHourMetrics() {
        return this.hourMetrics;
    }

    /**
     * Get the minuteMetrics property: The minute metrics properties.
     * 
     * @return the minuteMetrics value.
     */
    @Generated
    public Metrics getMinuteMetrics() {
        return this.minuteMetrics;
    }

    /**
     * Get the cors property: The CORS properties.
     * 
     * @return the cors value.
     */
    @Generated
    public List<CorsRule> getCors() {
        return this.cors;
    }

    /**
     * Get the defaultServiceVersion property: The default service version.
     * 
     * @return the defaultServiceVersion value.
     */
    @Generated
    public String getDefaultServiceVersion() {
        return this.defaultServiceVersion;
    }

    /**
     * Get the deleteRetentionPolicy property: The delete retention policy.
     * 
     * @return the deleteRetentionPolicy value.
     */
    @Generated
    public RetentionPolicy getDeleteRetentionPolicy() {
        return this.deleteRetentionPolicy;
    }

    /**
     * Get the staticWebsite property: The static website properties.
     * 
     * @return the staticWebsite value.
     */
    @Generated
    public StaticWebsite getStaticWebsite() {
        return this.staticWebsite;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("logging", this.logging);
        jsonWriter.writeJsonField("hourMetrics", this.hourMetrics);
        jsonWriter.writeJsonField("minuteMetrics", this.minuteMetrics);
        jsonWriter.writeArrayField("cors", this.cors, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("defaultServiceVersion", this.defaultServiceVersion);
        jsonWriter.writeJsonField("deleteRetentionPolicy", this.deleteRetentionPolicy);
        jsonWriter.writeJsonField("staticWebsite", this.staticWebsite);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageServiceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageServiceProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageServiceProperties.
     */
    @Generated
    public static StorageServiceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageServiceProperties deserializedStorageServiceProperties = new StorageServiceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("logging".equals(fieldName)) {
                    deserializedStorageServiceProperties.logging = Logging.fromJson(reader);
                } else if ("hourMetrics".equals(fieldName)) {
                    deserializedStorageServiceProperties.hourMetrics = Metrics.fromJson(reader);
                } else if ("minuteMetrics".equals(fieldName)) {
                    deserializedStorageServiceProperties.minuteMetrics = Metrics.fromJson(reader);
                } else if ("cors".equals(fieldName)) {
                    List<CorsRule> cors = reader.readArray(reader1 -> CorsRule.fromJson(reader1));
                    deserializedStorageServiceProperties.cors = cors;
                } else if ("defaultServiceVersion".equals(fieldName)) {
                    deserializedStorageServiceProperties.defaultServiceVersion = reader.getString();
                } else if ("deleteRetentionPolicy".equals(fieldName)) {
                    deserializedStorageServiceProperties.deleteRetentionPolicy = RetentionPolicy.fromJson(reader);
                } else if ("staticWebsite".equals(fieldName)) {
                    deserializedStorageServiceProperties.staticWebsite = StaticWebsite.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageServiceProperties;
        });
    }
}

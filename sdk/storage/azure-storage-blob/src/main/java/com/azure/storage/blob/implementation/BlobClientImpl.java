// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.storage.blob.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.storage.blob.BlobServiceVersion;

/**
 * Initializes a new instance of the BlobClient type.
 */
public final class BlobClientImpl {
    /**
     * The host name of the blob storage account, e.g. accountName.blob.core.windows.net.
     */
    private final String endpoint;

    /**
     * Gets The host name of the blob storage account, e.g. accountName.blob.core.windows.net.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final BlobServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public BlobServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The ServicesImpl object to access its operations.
     */
    private final ServicesImpl services;

    /**
     * Gets the ServicesImpl object to access its operations.
     * 
     * @return the ServicesImpl object.
     */
    public ServicesImpl getServices() {
        return this.services;
    }

    /**
     * The ContainersImpl object to access its operations.
     */
    private final ContainersImpl containers;

    /**
     * Gets the ContainersImpl object to access its operations.
     * 
     * @return the ContainersImpl object.
     */
    public ContainersImpl getContainers() {
        return this.containers;
    }

    /**
     * The BlobsImpl object to access its operations.
     */
    private final BlobsImpl blobs;

    /**
     * Gets the BlobsImpl object to access its operations.
     * 
     * @return the BlobsImpl object.
     */
    public BlobsImpl getBlobs() {
        return this.blobs;
    }

    /**
     * The PageBlobsImpl object to access its operations.
     */
    private final PageBlobsImpl pageBlobs;

    /**
     * Gets the PageBlobsImpl object to access its operations.
     * 
     * @return the PageBlobsImpl object.
     */
    public PageBlobsImpl getPageBlobs() {
        return this.pageBlobs;
    }

    /**
     * The AppendBlobsImpl object to access its operations.
     */
    private final AppendBlobsImpl appendBlobs;

    /**
     * Gets the AppendBlobsImpl object to access its operations.
     * 
     * @return the AppendBlobsImpl object.
     */
    public AppendBlobsImpl getAppendBlobs() {
        return this.appendBlobs;
    }

    /**
     * The BlockBlobsImpl object to access its operations.
     */
    private final BlockBlobsImpl blockBlobs;

    /**
     * Gets the BlockBlobsImpl object to access its operations.
     * 
     * @return the BlockBlobsImpl object.
     */
    public BlockBlobsImpl getBlockBlobs() {
        return this.blockBlobs;
    }

    /**
     * Initializes an instance of BlobClient client.
     * 
     * @param endpoint The host name of the blob storage account, e.g. accountName.blob.core.windows.net.
     * @param serviceVersion Service version.
     */
    public BlobClientImpl(String endpoint, BlobServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of BlobClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint The host name of the blob storage account, e.g. accountName.blob.core.windows.net.
     * @param serviceVersion Service version.
     */
    public BlobClientImpl(HttpPipeline httpPipeline, String endpoint, BlobServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of BlobClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint The host name of the blob storage account, e.g. accountName.blob.core.windows.net.
     * @param serviceVersion Service version.
     */
    public BlobClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        BlobServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.services = new ServicesImpl(this);
        this.containers = new ContainersImpl(this);
        this.blobs = new BlobsImpl(this);
        this.pageBlobs = new PageBlobsImpl(this);
        this.appendBlobs = new AppendBlobsImpl(this);
        this.blockBlobs = new BlockBlobsImpl(this);
    }
}

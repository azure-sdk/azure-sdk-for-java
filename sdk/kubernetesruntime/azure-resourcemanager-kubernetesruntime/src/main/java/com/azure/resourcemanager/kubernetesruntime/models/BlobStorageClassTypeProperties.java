// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesruntime.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The properties of Blob StorageClass.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "type",
    defaultImpl = BlobStorageClassTypeProperties.class,
    visible = true)
@JsonTypeName("Blob")
@Fluent
public final class BlobStorageClassTypeProperties extends StorageClassTypeProperties {
    /*
     * Type of the storage class.
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private SCType type = SCType.BLOB;

    /*
     * Azure Storage Account Name
     */
    @JsonProperty(value = "azureStorageAccountName", required = true)
    private String azureStorageAccountName;

    /*
     * Azure Storage Account Key
     */
    @JsonProperty(value = "azureStorageAccountKey")
    private String azureStorageAccountKey;

    /**
     * Creates an instance of BlobStorageClassTypeProperties class.
     */
    public BlobStorageClassTypeProperties() {
    }

    /**
     * Get the type property: Type of the storage class.
     * 
     * @return the type value.
     */
    @Override
    public SCType type() {
        return this.type;
    }

    /**
     * Get the azureStorageAccountName property: Azure Storage Account Name.
     * 
     * @return the azureStorageAccountName value.
     */
    public String azureStorageAccountName() {
        return this.azureStorageAccountName;
    }

    /**
     * Set the azureStorageAccountName property: Azure Storage Account Name.
     * 
     * @param azureStorageAccountName the azureStorageAccountName value to set.
     * @return the BlobStorageClassTypeProperties object itself.
     */
    public BlobStorageClassTypeProperties withAzureStorageAccountName(String azureStorageAccountName) {
        this.azureStorageAccountName = azureStorageAccountName;
        return this;
    }

    /**
     * Get the azureStorageAccountKey property: Azure Storage Account Key.
     * 
     * @return the azureStorageAccountKey value.
     */
    public String azureStorageAccountKey() {
        return this.azureStorageAccountKey;
    }

    /**
     * Set the azureStorageAccountKey property: Azure Storage Account Key.
     * 
     * @param azureStorageAccountKey the azureStorageAccountKey value to set.
     * @return the BlobStorageClassTypeProperties object itself.
     */
    public BlobStorageClassTypeProperties withAzureStorageAccountKey(String azureStorageAccountKey) {
        this.azureStorageAccountKey = azureStorageAccountKey;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (azureStorageAccountName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureStorageAccountName in model BlobStorageClassTypeProperties"));
        }
        if (azureStorageAccountKey() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureStorageAccountKey in model BlobStorageClassTypeProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BlobStorageClassTypeProperties.class);
}

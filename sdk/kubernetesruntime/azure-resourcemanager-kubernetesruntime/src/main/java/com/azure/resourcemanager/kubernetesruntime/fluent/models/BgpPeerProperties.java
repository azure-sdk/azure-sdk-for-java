// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesruntime.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.kubernetesruntime.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details of the BgpPeer.
 */
@Fluent
public final class BgpPeerProperties {
    /*
     * My ASN
     */
    @JsonProperty(value = "myAsn", required = true)
    private int myAsn;

    /*
     * Peer ASN
     */
    @JsonProperty(value = "peerAsn", required = true)
    private int peerAsn;

    /*
     * Peer Address
     */
    @JsonProperty(value = "peerAddress", required = true)
    private String peerAddress;

    /*
     * Resource provision state
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of BgpPeerProperties class.
     */
    public BgpPeerProperties() {
    }

    /**
     * Get the myAsn property: My ASN.
     * 
     * @return the myAsn value.
     */
    public int myAsn() {
        return this.myAsn;
    }

    /**
     * Set the myAsn property: My ASN.
     * 
     * @param myAsn the myAsn value to set.
     * @return the BgpPeerProperties object itself.
     */
    public BgpPeerProperties withMyAsn(int myAsn) {
        this.myAsn = myAsn;
        return this;
    }

    /**
     * Get the peerAsn property: Peer ASN.
     * 
     * @return the peerAsn value.
     */
    public int peerAsn() {
        return this.peerAsn;
    }

    /**
     * Set the peerAsn property: Peer ASN.
     * 
     * @param peerAsn the peerAsn value to set.
     * @return the BgpPeerProperties object itself.
     */
    public BgpPeerProperties withPeerAsn(int peerAsn) {
        this.peerAsn = peerAsn;
        return this;
    }

    /**
     * Get the peerAddress property: Peer Address.
     * 
     * @return the peerAddress value.
     */
    public String peerAddress() {
        return this.peerAddress;
    }

    /**
     * Set the peerAddress property: Peer Address.
     * 
     * @param peerAddress the peerAddress value to set.
     * @return the BgpPeerProperties object itself.
     */
    public BgpPeerProperties withPeerAddress(String peerAddress) {
        this.peerAddress = peerAddress;
        return this;
    }

    /**
     * Get the provisioningState property: Resource provision state.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (peerAddress() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property peerAddress in model BgpPeerProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BgpPeerProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiembedded.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.powerbiembedded.models.AzureSku;
import java.io.IOException;
import java.util.Map;

/**
 * The WorkspaceCollection model.
 */
@Fluent
public final class WorkspaceCollectionInner implements JsonSerializable<WorkspaceCollectionInner> {
    /*
     * Resource id
     */
    private String id;

    /*
     * Workspace collection name
     */
    private String name;

    /*
     * Resource type
     */
    private String type;

    /*
     * Azure location
     */
    private String location;

    /*
     * Dictionary of <string>
     */
    private Map<String, String> tags;

    /*
     * The sku property.
     */
    private AzureSku sku;

    /*
     * Properties
     */
    private Object properties;

    /**
     * Creates an instance of WorkspaceCollectionInner class.
     */
    public WorkspaceCollectionInner() {
    }

    /**
     * Get the id property: Resource id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource id.
     * 
     * @param id the id value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Workspace collection name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Workspace collection name.
     * 
     * @param name the name value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     * 
     * @param type the type value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the location property: Azure location.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Azure location.
     * 
     * @param location the location value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the tags property: Dictionary of &lt;string&gt;.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Dictionary of &lt;string&gt;.
     * 
     * @param tags the tags value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the sku property: The sku property.
     * 
     * @return the sku value.
     */
    public AzureSku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The sku property.
     * 
     * @param sku the sku value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withSku(AzureSku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the properties property: Properties.
     * 
     * @return the properties value.
     */
    public Object properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Properties.
     * 
     * @param properties the properties value to set.
     * @return the WorkspaceCollectionInner object itself.
     */
    public WorkspaceCollectionInner withProperties(Object properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() != null) {
            sku().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeStringField("location", this.location);
        jsonWriter.writeMapField("tags", this.tags, (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("sku", this.sku);
        jsonWriter.writeUntypedField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkspaceCollectionInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkspaceCollectionInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkspaceCollectionInner.
     */
    public static WorkspaceCollectionInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkspaceCollectionInner deserializedWorkspaceCollectionInner = new WorkspaceCollectionInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedWorkspaceCollectionInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedWorkspaceCollectionInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedWorkspaceCollectionInner.type = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedWorkspaceCollectionInner.location = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedWorkspaceCollectionInner.tags = tags;
                } else if ("sku".equals(fieldName)) {
                    deserializedWorkspaceCollectionInner.sku = AzureSku.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedWorkspaceCollectionInner.properties = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkspaceCollectionInner;
        });
    }
}

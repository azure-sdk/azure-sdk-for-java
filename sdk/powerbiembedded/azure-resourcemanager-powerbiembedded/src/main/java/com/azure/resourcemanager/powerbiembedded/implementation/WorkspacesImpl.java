// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiembedded.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.powerbiembedded.fluent.WorkspacesClient;
import com.azure.resourcemanager.powerbiembedded.fluent.models.WorkspaceInner;
import com.azure.resourcemanager.powerbiembedded.models.Workspace;
import com.azure.resourcemanager.powerbiembedded.models.Workspaces;

public final class WorkspacesImpl implements Workspaces {
    private static final ClientLogger LOGGER = new ClientLogger(WorkspacesImpl.class);

    private final WorkspacesClient innerClient;

    private final com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager serviceManager;

    public WorkspacesImpl(WorkspacesClient innerClient,
        com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Workspace> list(String resourceGroupName, String workspaceCollectionName) {
        PagedIterable<WorkspaceInner> inner = this.serviceClient().list(resourceGroupName, workspaceCollectionName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new WorkspaceImpl(inner1, this.manager()));
    }

    public PagedIterable<Workspace> list(String resourceGroupName, String workspaceCollectionName, Context context) {
        PagedIterable<WorkspaceInner> inner
            = this.serviceClient().list(resourceGroupName, workspaceCollectionName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new WorkspaceImpl(inner1, this.manager()));
    }

    private WorkspacesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.powerbiembedded.PowerBIEmbeddedManager manager() {
        return this.serviceManager;
    }
}

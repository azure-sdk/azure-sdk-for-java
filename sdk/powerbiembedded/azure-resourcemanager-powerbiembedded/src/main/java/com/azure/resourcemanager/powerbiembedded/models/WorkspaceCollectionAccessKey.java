// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.powerbiembedded.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The WorkspaceCollectionAccessKey model.
 */
@Fluent
public final class WorkspaceCollectionAccessKey implements JsonSerializable<WorkspaceCollectionAccessKey> {
    /*
     * Key name
     */
    private AccessKeyName keyName;

    /**
     * Creates an instance of WorkspaceCollectionAccessKey class.
     */
    public WorkspaceCollectionAccessKey() {
    }

    /**
     * Get the keyName property: Key name.
     * 
     * @return the keyName value.
     */
    public AccessKeyName keyName() {
        return this.keyName;
    }

    /**
     * Set the keyName property: Key name.
     * 
     * @param keyName the keyName value to set.
     * @return the WorkspaceCollectionAccessKey object itself.
     */
    public WorkspaceCollectionAccessKey withKeyName(AccessKeyName keyName) {
        this.keyName = keyName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("keyName", this.keyName == null ? null : this.keyName.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkspaceCollectionAccessKey from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkspaceCollectionAccessKey if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkspaceCollectionAccessKey.
     */
    public static WorkspaceCollectionAccessKey fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkspaceCollectionAccessKey deserializedWorkspaceCollectionAccessKey = new WorkspaceCollectionAccessKey();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keyName".equals(fieldName)) {
                    deserializedWorkspaceCollectionAccessKey.keyName = AccessKeyName.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkspaceCollectionAccessKey;
        });
    }
}

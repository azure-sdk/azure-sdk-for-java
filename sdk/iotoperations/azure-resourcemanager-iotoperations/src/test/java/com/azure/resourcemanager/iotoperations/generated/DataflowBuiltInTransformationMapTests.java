// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowBuiltInTransformationMap;
import com.azure.resourcemanager.iotoperations.models.DataflowMappingType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataflowBuiltInTransformationMapTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowBuiltInTransformationMap model = BinaryData.fromString(
            "{\"type\":\"PassThrough\",\"description\":\"pkwhojvpa\",\"inputs\":[\"gxysmocmbqfqvm\"],\"expression\":\"xozap\",\"output\":\"helxprglya\"}")
            .toObject(DataflowBuiltInTransformationMap.class);
        Assertions.assertEquals(DataflowMappingType.PASS_THROUGH, model.type());
        Assertions.assertEquals("pkwhojvpa", model.description());
        Assertions.assertEquals("gxysmocmbqfqvm", model.inputs().get(0));
        Assertions.assertEquals("xozap", model.expression());
        Assertions.assertEquals("helxprglya", model.output());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowBuiltInTransformationMap model
            = new DataflowBuiltInTransformationMap().withType(DataflowMappingType.PASS_THROUGH)
                .withDescription("pkwhojvpa")
                .withInputs(Arrays.asList("gxysmocmbqfqvm"))
                .withExpression("xozap")
                .withOutput("helxprglya");
        model = BinaryData.fromObject(model).toObject(DataflowBuiltInTransformationMap.class);
        Assertions.assertEquals(DataflowMappingType.PASS_THROUGH, model.type());
        Assertions.assertEquals("pkwhojvpa", model.description());
        Assertions.assertEquals("gxysmocmbqfqvm", model.inputs().get(0));
        Assertions.assertEquals("xozap", model.expression());
        Assertions.assertEquals("helxprglya", model.output());
    }
}

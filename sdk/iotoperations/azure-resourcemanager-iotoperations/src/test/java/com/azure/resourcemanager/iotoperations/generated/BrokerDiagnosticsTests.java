// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BrokerDiagnostics;
import com.azure.resourcemanager.iotoperations.models.DiagnosticsLogs;
import com.azure.resourcemanager.iotoperations.models.Metrics;
import com.azure.resourcemanager.iotoperations.models.OpenTelemetryExportConfig;
import com.azure.resourcemanager.iotoperations.models.OpenTelemetryLogExportConfig;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import com.azure.resourcemanager.iotoperations.models.SelfCheck;
import com.azure.resourcemanager.iotoperations.models.SelfTracing;
import com.azure.resourcemanager.iotoperations.models.Traces;
import org.junit.jupiter.api.Assertions;

public final class BrokerDiagnosticsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        BrokerDiagnostics model = BinaryData.fromString(
            "{\"logs\":{\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"joghmewuama\",\"intervalSeconds\":1338226566,\"level\":\"ayvvtpgvdf\"},\"level\":\"otkftutqxlngx\"},\"metrics\":{\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"gug\",\"intervalSeconds\":929487618},\"prometheusPort\":2100016682},\"selfCheck\":{\"mode\":\"Enabled\",\"intervalSeconds\":423857841,\"timeoutSeconds\":676012519},\"traces\":{\"mode\":\"Enabled\",\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"qdrabhjybigehoqf\",\"intervalSeconds\":845567192},\"cacheSizeMegabytes\":1382683860,\"selfTracing\":{\"mode\":\"Enabled\",\"intervalSeconds\":1420716073},\"spanChannelCapacity\":1440760803}}")
            .toObject(BrokerDiagnostics.class);
        Assertions.assertEquals("joghmewuama", model.logs().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1338226566, model.logs().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals("ayvvtpgvdf", model.logs().opentelemetryExportConfig().level());
        Assertions.assertEquals("otkftutqxlngx", model.logs().level());
        Assertions.assertEquals("gug", model.metrics().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(929487618, model.metrics().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(2100016682, model.metrics().prometheusPort());
        Assertions.assertEquals(OperationalMode.ENABLED, model.selfCheck().mode());
        Assertions.assertEquals(423857841, model.selfCheck().intervalSeconds());
        Assertions.assertEquals(676012519, model.selfCheck().timeoutSeconds());
        Assertions.assertEquals(OperationalMode.ENABLED, model.traces().mode());
        Assertions.assertEquals("qdrabhjybigehoqf", model.traces().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(845567192, model.traces().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(1382683860, model.traces().cacheSizeMegabytes());
        Assertions.assertEquals(OperationalMode.ENABLED, model.traces().selfTracing().mode());
        Assertions.assertEquals(1420716073, model.traces().selfTracing().intervalSeconds());
        Assertions.assertEquals(1440760803, model.traces().spanChannelCapacity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        BrokerDiagnostics model = new BrokerDiagnostics()
            .withLogs(
                new DiagnosticsLogs()
                    .withOpentelemetryExportConfig(
                        new OpenTelemetryLogExportConfig().withOtlpGrpcEndpoint("joghmewuama")
                            .withIntervalSeconds(1338226566)
                            .withLevel("ayvvtpgvdf"))
                    .withLevel("otkftutqxlngx"))
            .withMetrics(new Metrics()
                .withOpentelemetryExportConfig(
                    new OpenTelemetryExportConfig().withOtlpGrpcEndpoint("gug").withIntervalSeconds(929487618))
                .withPrometheusPort(2100016682))
            .withSelfCheck(new SelfCheck().withMode(OperationalMode.ENABLED)
                .withIntervalSeconds(423857841)
                .withTimeoutSeconds(676012519))
            .withTraces(new Traces().withMode(OperationalMode.ENABLED)
                .withOpentelemetryExportConfig(new OpenTelemetryExportConfig().withOtlpGrpcEndpoint("qdrabhjybigehoqf")
                    .withIntervalSeconds(845567192))
                .withCacheSizeMegabytes(1382683860)
                .withSelfTracing(new SelfTracing().withMode(OperationalMode.ENABLED).withIntervalSeconds(1420716073))
                .withSpanChannelCapacity(1440760803));
        model = BinaryData.fromObject(model).toObject(BrokerDiagnostics.class);
        Assertions.assertEquals("joghmewuama", model.logs().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1338226566, model.logs().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals("ayvvtpgvdf", model.logs().opentelemetryExportConfig().level());
        Assertions.assertEquals("otkftutqxlngx", model.logs().level());
        Assertions.assertEquals("gug", model.metrics().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(929487618, model.metrics().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(2100016682, model.metrics().prometheusPort());
        Assertions.assertEquals(OperationalMode.ENABLED, model.selfCheck().mode());
        Assertions.assertEquals(423857841, model.selfCheck().intervalSeconds());
        Assertions.assertEquals(676012519, model.selfCheck().timeoutSeconds());
        Assertions.assertEquals(OperationalMode.ENABLED, model.traces().mode());
        Assertions.assertEquals("qdrabhjybigehoqf", model.traces().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(845567192, model.traces().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(1382683860, model.traces().cacheSizeMegabytes());
        Assertions.assertEquals(OperationalMode.ENABLED, model.traces().selfTracing().mode());
        Assertions.assertEquals(1420716073, model.traces().selfTracing().intervalSeconds());
        Assertions.assertEquals(1440760803, model.traces().spanChannelCapacity());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotoperations.IoTOperationsManager;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.InstanceResource;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"description\":\"evxccedcp\",\"provisioningState\":\"Accepted\",\"version\":\"odn\",\"schemaRegistryRef\":{\"resourceId\":\"zxltjcvn\"}},\"extendedLocation\":{\"name\":\"ltiugcxnavv\",\"type\":\"CustomLocation\"},\"identity\":{\"principalId\":\"byqunyow\",\"tenantId\":\"lmdjrkvfgbvfvpdb\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"bdeibqipqk\":{\"principalId\":\"zsjqlh\",\"clientId\":\"r\"},\"wkqnyhg\":{\"principalId\":\"vxndz\",\"clientId\":\"krefajpjo\"},\"wfsdjpvkvpbj\":{\"principalId\":\"j\",\"clientId\":\"ivfxzsjabibsyst\"},\"jk\":{\"principalId\":\"kzbzkdvncjabudu\",\"clientId\":\"kakmokzh\"}}},\"location\":\"fhmouwq\",\"tags\":{\"bizikayuhq\":\"rfzeey\",\"wrv\":\"bjbsybb\"},\"id\":\"ldgmfpgvmpip\",\"name\":\"slthaq\",\"type\":\"x\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTOperationsManager manager = IoTOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        InstanceResource response = manager.instances()
            .getByResourceGroupWithResponse("h", "hfwpracstwit", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("fhmouwq", response.location());
        Assertions.assertEquals("rfzeey", response.tags().get("bizikayuhq"));
        Assertions.assertEquals("evxccedcp", response.properties().description());
        Assertions.assertEquals("zxltjcvn", response.properties().schemaRegistryRef().resourceId());
        Assertions.assertEquals("ltiugcxnavv", response.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, response.extendedLocation().type());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, response.identity().type());
    }
}

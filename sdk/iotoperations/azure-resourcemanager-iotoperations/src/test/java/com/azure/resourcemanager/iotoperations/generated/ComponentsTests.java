// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.AdrProperties;
import com.azure.resourcemanager.iotoperations.models.AkriInstanceProperties;
import com.azure.resourcemanager.iotoperations.models.Components;
import com.azure.resourcemanager.iotoperations.models.ConnectorInstanceProperties;
import com.azure.resourcemanager.iotoperations.models.DataflowInstanceProperties;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import com.azure.resourcemanager.iotoperations.models.SchemaRegistryInstanceProperties;
import org.junit.jupiter.api.Assertions;

public final class ComponentsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        Components model = BinaryData.fromString(
            "{\"adr\":{\"state\":\"Enabled\"},\"akri\":{\"state\":\"Enabled\"},\"connectors\":{\"state\":\"Enabled\"},\"dataflows\":{\"state\":\"Disabled\"},\"schemaRegistry\":{\"state\":\"Disabled\"}}")
            .toObject(Components.class);
        Assertions.assertEquals(OperationalMode.ENABLED, model.adr().state());
        Assertions.assertEquals(OperationalMode.ENABLED, model.akri().state());
        Assertions.assertEquals(OperationalMode.ENABLED, model.connectors().state());
        Assertions.assertEquals(OperationalMode.DISABLED, model.dataflows().state());
        Assertions.assertEquals(OperationalMode.DISABLED, model.schemaRegistry().state());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        Components model = new Components().withAdr(new AdrProperties().withState(OperationalMode.ENABLED))
            .withAkri(new AkriInstanceProperties().withState(OperationalMode.ENABLED))
            .withConnectors(new ConnectorInstanceProperties().withState(OperationalMode.ENABLED))
            .withDataflows(new DataflowInstanceProperties().withState(OperationalMode.DISABLED))
            .withSchemaRegistry(new SchemaRegistryInstanceProperties().withState(OperationalMode.DISABLED));
        model = BinaryData.fromObject(model).toObject(Components.class);
        Assertions.assertEquals(OperationalMode.ENABLED, model.adr().state());
        Assertions.assertEquals(OperationalMode.ENABLED, model.akri().state());
        Assertions.assertEquals(OperationalMode.ENABLED, model.connectors().state());
        Assertions.assertEquals(OperationalMode.DISABLED, model.dataflows().state());
        Assertions.assertEquals(OperationalMode.DISABLED, model.schemaRegistry().state());
    }
}

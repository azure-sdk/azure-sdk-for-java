// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BatchingConfiguration;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricOneLakeAuthentication;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricOneLakeNames;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricPathType;
import com.azure.resourcemanager.iotoperations.models.FabricOneLakeAuthMethod;
import com.azure.resourcemanager.iotoperations.models.FabricOneLakeSettings;
import org.junit.jupiter.api.Assertions;

public final class FabricOneLakeSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FabricOneLakeSettings model = BinaryData.fromString(
            "{\"authentication\":{\"method\":\"SystemAssignedManagedIdentity\",\"systemAssignedManagedIdentitySettings\":{\"audience\":\"zuempsbzkf\"},\"userAssignedManagedIdentitySettings\":{\"clientId\":\"eyvpnqicvinvkj\",\"scope\":\"dxrbuukzcle\",\"tenantId\":\"yhmlwpaztzp\"}},\"names\":{\"lakehouseName\":\"fn\",\"workspaceName\":\"ckw\"},\"oneLakePathType\":\"Files\",\"host\":\"zqwhxxbuyqaxzfeq\",\"batching\":{\"latencySeconds\":1372310139,\"maxMessages\":1415965286}}")
            .toObject(FabricOneLakeSettings.class);
        Assertions.assertEquals(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY,
            model.authentication().method());
        Assertions.assertEquals("zuempsbzkf",
            model.authentication().systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("eyvpnqicvinvkj",
            model.authentication().userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("dxrbuukzcle", model.authentication().userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("yhmlwpaztzp", model.authentication().userAssignedManagedIdentitySettings().tenantId());
        Assertions.assertEquals("fn", model.names().lakehouseName());
        Assertions.assertEquals("ckw", model.names().workspaceName());
        Assertions.assertEquals(DataflowEndpointFabricPathType.FILES, model.oneLakePathType());
        Assertions.assertEquals("zqwhxxbuyqaxzfeq", model.host());
        Assertions.assertEquals(1372310139, model.batching().latencySeconds());
        Assertions.assertEquals(1415965286, model.batching().maxMessages());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FabricOneLakeSettings model = new FabricOneLakeSettings()
            .withAuthentication(new DataflowEndpointFabricOneLakeAuthentication()
                .withMethod(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                .withSystemAssignedManagedIdentitySettings(
                    new DataflowEndpointAuthenticationSystemAssignedManagedIdentity().withAudience("zuempsbzkf"))
                .withUserAssignedManagedIdentitySettings(
                    new DataflowEndpointAuthenticationUserAssignedManagedIdentity().withClientId("eyvpnqicvinvkj")
                        .withScope("dxrbuukzcle")
                        .withTenantId("yhmlwpaztzp")))
            .withNames(new DataflowEndpointFabricOneLakeNames().withLakehouseName("fn").withWorkspaceName("ckw"))
            .withOneLakePathType(DataflowEndpointFabricPathType.FILES)
            .withHost("zqwhxxbuyqaxzfeq")
            .withBatching(new BatchingConfiguration().withLatencySeconds(1372310139).withMaxMessages(1415965286));
        model = BinaryData.fromObject(model).toObject(FabricOneLakeSettings.class);
        Assertions.assertEquals(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY,
            model.authentication().method());
        Assertions.assertEquals("zuempsbzkf",
            model.authentication().systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("eyvpnqicvinvkj",
            model.authentication().userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("dxrbuukzcle", model.authentication().userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("yhmlwpaztzp", model.authentication().userAssignedManagedIdentitySettings().tenantId());
        Assertions.assertEquals("fn", model.names().lakehouseName());
        Assertions.assertEquals("ckw", model.names().workspaceName());
        Assertions.assertEquals(DataflowEndpointFabricPathType.FILES, model.oneLakePathType());
        Assertions.assertEquals("zqwhxxbuyqaxzfeq", model.host());
        Assertions.assertEquals(1372310139, model.batching().latencySeconds());
        Assertions.assertEquals(1415965286, model.batching().maxMessages());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.BatchingConfiguration;
import com.azure.resourcemanager.iotoperations.models.DataExplorerAuthMethod;
import com.azure.resourcemanager.iotoperations.models.DataExplorerEndpoint;
import com.azure.resourcemanager.iotoperations.models.DataExplorerSettings;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorerAuthentication;
import org.junit.jupiter.api.Assertions;

public final class DataExplorerEndpointTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataExplorerEndpoint model = BinaryData.fromString(
            "{\"endpointType\":\"DataExplorer\",\"dataExplorerSettings\":{\"authentication\":{\"method\":\"SystemAssignedManagedIdentity\",\"systemAssignedManagedIdentitySettings\":{\"audience\":\"cktqumiekkezzi\"},\"userAssignedManagedIdentitySettings\":{\"clientId\":\"ly\",\"scope\":\"hdgqggeb\",\"tenantId\":\"unygaeqid\"}},\"database\":\"qfatpxllrxcyjm\",\"host\":\"a\",\"batching\":{\"latencySeconds\":59301648,\"maxMessages\":239264688}},\"provisioningState\":\"Canceled\"}")
            .toObject(DataExplorerEndpoint.class);
        Assertions.assertEquals(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY,
            model.dataExplorerSettings().authentication().method());
        Assertions.assertEquals("cktqumiekkezzi",
            model.dataExplorerSettings().authentication().systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("ly",
            model.dataExplorerSettings().authentication().userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("hdgqggeb",
            model.dataExplorerSettings().authentication().userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("unygaeqid",
            model.dataExplorerSettings().authentication().userAssignedManagedIdentitySettings().tenantId());
        Assertions.assertEquals("qfatpxllrxcyjm", model.dataExplorerSettings().database());
        Assertions.assertEquals("a", model.dataExplorerSettings().host());
        Assertions.assertEquals(59301648, model.dataExplorerSettings().batching().latencySeconds());
        Assertions.assertEquals(239264688, model.dataExplorerSettings().batching().maxMessages());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataExplorerEndpoint model = new DataExplorerEndpoint().withDataExplorerSettings(new DataExplorerSettings()
            .withAuthentication(new DataflowEndpointDataExplorerAuthentication()
                .withMethod(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
                .withSystemAssignedManagedIdentitySettings(
                    new DataflowEndpointAuthenticationSystemAssignedManagedIdentity().withAudience("cktqumiekkezzi"))
                .withUserAssignedManagedIdentitySettings(
                    new DataflowEndpointAuthenticationUserAssignedManagedIdentity().withClientId("ly")
                        .withScope("hdgqggeb")
                        .withTenantId("unygaeqid")))
            .withDatabase("qfatpxllrxcyjm")
            .withHost("a")
            .withBatching(new BatchingConfiguration().withLatencySeconds(59301648).withMaxMessages(239264688)));
        model = BinaryData.fromObject(model).toObject(DataExplorerEndpoint.class);
        Assertions.assertEquals(DataExplorerAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY,
            model.dataExplorerSettings().authentication().method());
        Assertions.assertEquals("cktqumiekkezzi",
            model.dataExplorerSettings().authentication().systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("ly",
            model.dataExplorerSettings().authentication().userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("hdgqggeb",
            model.dataExplorerSettings().authentication().userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("unygaeqid",
            model.dataExplorerSettings().authentication().userAssignedManagedIdentitySettings().tenantId());
        Assertions.assertEquals("qfatpxllrxcyjm", model.dataExplorerSettings().database());
        Assertions.assertEquals("a", model.dataExplorerSettings().host());
        Assertions.assertEquals(59301648, model.dataExplorerSettings().batching().latencySeconds());
        Assertions.assertEquals(239264688, model.dataExplorerSettings().batching().maxMessages());
    }
}

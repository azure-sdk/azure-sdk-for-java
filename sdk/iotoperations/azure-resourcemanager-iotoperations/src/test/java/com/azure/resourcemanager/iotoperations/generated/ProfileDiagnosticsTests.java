// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DiagnosticsLogs;
import com.azure.resourcemanager.iotoperations.models.Metrics;
import com.azure.resourcemanager.iotoperations.models.OpenTelemetryExportConfig;
import com.azure.resourcemanager.iotoperations.models.OpenTelemetryLogExportConfig;
import com.azure.resourcemanager.iotoperations.models.ProfileDiagnostics;
import org.junit.jupiter.api.Assertions;

public final class ProfileDiagnosticsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ProfileDiagnostics model = BinaryData.fromString(
            "{\"logs\":{\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"znud\",\"intervalSeconds\":1568683744,\"level\":\"xzb\"},\"level\":\"blylpstdbh\"},\"metrics\":{\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"rzdzucerscdnt\",\"intervalSeconds\":1008975068},\"prometheusPort\":1072156994}}")
            .toObject(ProfileDiagnostics.class);
        Assertions.assertEquals("znud", model.logs().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1568683744, model.logs().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals("xzb", model.logs().opentelemetryExportConfig().level());
        Assertions.assertEquals("blylpstdbh", model.logs().level());
        Assertions.assertEquals("rzdzucerscdnt", model.metrics().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1008975068, model.metrics().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(1072156994, model.metrics().prometheusPort());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ProfileDiagnostics model = new ProfileDiagnostics()
            .withLogs(new DiagnosticsLogs()
                .withOpentelemetryExportConfig(new OpenTelemetryLogExportConfig().withOtlpGrpcEndpoint("znud")
                    .withIntervalSeconds(1568683744)
                    .withLevel("xzb"))
                .withLevel("blylpstdbh"))
            .withMetrics(new Metrics().withOpentelemetryExportConfig(
                new OpenTelemetryExportConfig().withOtlpGrpcEndpoint("rzdzucerscdnt").withIntervalSeconds(1008975068))
                .withPrometheusPort(1072156994));
        model = BinaryData.fromObject(model).toObject(ProfileDiagnostics.class);
        Assertions.assertEquals("znud", model.logs().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1568683744, model.logs().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals("xzb", model.logs().opentelemetryExportConfig().level());
        Assertions.assertEquals("blylpstdbh", model.logs().level());
        Assertions.assertEquals("rzdzucerscdnt", model.metrics().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1008975068, model.metrics().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(1072156994, model.metrics().prometheusPort());
    }
}

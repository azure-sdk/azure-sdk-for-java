// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.fluent.models.DataflowProfileResourceInner;
import com.azure.resourcemanager.iotoperations.models.DataflowProfileProperties;
import com.azure.resourcemanager.iotoperations.models.DiagnosticsLogs;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.Metrics;
import com.azure.resourcemanager.iotoperations.models.ProfileDiagnostics;
import org.junit.jupiter.api.Assertions;

public final class DataflowProfileResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowProfileResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"diagnostics\":{\"logs\":{\"level\":\"pu\"},\"metrics\":{\"prometheusPort\":1230471233}},\"instanceCount\":1156367150,\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"name\":\"lgqg\",\"type\":\"CustomLocation\"},\"id\":\"medjvcslynqwwncw\",\"name\":\"zhxgktrmgucn\",\"type\":\"pkteo\"}")
            .toObject(DataflowProfileResourceInner.class);
        Assertions.assertEquals("pu", model.properties().diagnostics().logs().level());
        Assertions.assertEquals(1230471233, model.properties().diagnostics().metrics().prometheusPort());
        Assertions.assertEquals(1156367150, model.properties().instanceCount());
        Assertions.assertEquals("lgqg", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, model.extendedLocation().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowProfileResourceInner model = new DataflowProfileResourceInner()
            .withProperties(new DataflowProfileProperties()
                .withDiagnostics(new ProfileDiagnostics().withLogs(new DiagnosticsLogs().withLevel("pu"))
                    .withMetrics(new Metrics().withPrometheusPort(1230471233)))
                .withInstanceCount(1156367150))
            .withExtendedLocation(
                new ExtendedLocation().withName("lgqg").withType(ExtendedLocationType.CUSTOM_LOCATION));
        model = BinaryData.fromObject(model).toObject(DataflowProfileResourceInner.class);
        Assertions.assertEquals("pu", model.properties().diagnostics().logs().level());
        Assertions.assertEquals(1230471233, model.properties().diagnostics().metrics().prometheusPort());
        Assertions.assertEquals(1156367150, model.properties().instanceCount());
        Assertions.assertEquals("lgqg", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, model.extendedLocation().type());
    }
}

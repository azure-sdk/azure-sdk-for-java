// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.fluent.models.DataflowProfileResourceInner;
import com.azure.resourcemanager.iotoperations.models.DataflowProfileProperties;
import com.azure.resourcemanager.iotoperations.models.DiagnosticsLogs;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.Metrics;
import com.azure.resourcemanager.iotoperations.models.OpenTelemetryExportConfig;
import com.azure.resourcemanager.iotoperations.models.OpenTelemetryLogExportConfig;
import com.azure.resourcemanager.iotoperations.models.ProfileDiagnostics;
import org.junit.jupiter.api.Assertions;

public final class DataflowProfileResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowProfileResourceInner model = BinaryData.fromString(
            "{\"properties\":{\"diagnostics\":{\"logs\":{\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"znfqqnvwpmqtar\",\"intervalSeconds\":477944589,\"level\":\"mkcjhwqytjrybn\"},\"level\":\"ewgdrjervn\"},\"metrics\":{\"opentelemetryExportConfig\":{\"otlpGrpcEndpoint\":\"qp\",\"intervalSeconds\":1479768723},\"prometheusPort\":681452902}},\"instanceCount\":895776000,\"provisioningState\":\"Deleting\"},\"extendedLocation\":{\"name\":\"ifthnz\",\"type\":\"CustomLocation\"},\"id\":\"sl\",\"name\":\"nayqi\",\"type\":\"ynduha\"}")
            .toObject(DataflowProfileResourceInner.class);
        Assertions.assertEquals("znfqqnvwpmqtar",
            model.properties().diagnostics().logs().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(477944589,
            model.properties().diagnostics().logs().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals("mkcjhwqytjrybn",
            model.properties().diagnostics().logs().opentelemetryExportConfig().level());
        Assertions.assertEquals("ewgdrjervn", model.properties().diagnostics().logs().level());
        Assertions.assertEquals("qp",
            model.properties().diagnostics().metrics().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1479768723,
            model.properties().diagnostics().metrics().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(681452902, model.properties().diagnostics().metrics().prometheusPort());
        Assertions.assertEquals(895776000, model.properties().instanceCount());
        Assertions.assertEquals("ifthnz", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, model.extendedLocation().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowProfileResourceInner model
            = new DataflowProfileResourceInner()
                .withProperties(
                    new DataflowProfileProperties()
                        .withDiagnostics(new ProfileDiagnostics()
                            .withLogs(new DiagnosticsLogs()
                                .withOpentelemetryExportConfig(
                                    new OpenTelemetryLogExportConfig().withOtlpGrpcEndpoint("znfqqnvwpmqtar")
                                        .withIntervalSeconds(477944589)
                                        .withLevel("mkcjhwqytjrybn"))
                                .withLevel("ewgdrjervn"))
                            .withMetrics(new Metrics()
                                .withOpentelemetryExportConfig(
                                    new OpenTelemetryExportConfig().withOtlpGrpcEndpoint("qp")
                                        .withIntervalSeconds(1479768723))
                                .withPrometheusPort(681452902)))
                        .withInstanceCount(895776000))
                .withExtendedLocation(
                    new ExtendedLocation().withName("ifthnz").withType(ExtendedLocationType.CUSTOM_LOCATION));
        model = BinaryData.fromObject(model).toObject(DataflowProfileResourceInner.class);
        Assertions.assertEquals("znfqqnvwpmqtar",
            model.properties().diagnostics().logs().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(477944589,
            model.properties().diagnostics().logs().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals("mkcjhwqytjrybn",
            model.properties().diagnostics().logs().opentelemetryExportConfig().level());
        Assertions.assertEquals("ewgdrjervn", model.properties().diagnostics().logs().level());
        Assertions.assertEquals("qp",
            model.properties().diagnostics().metrics().opentelemetryExportConfig().otlpGrpcEndpoint());
        Assertions.assertEquals(1479768723,
            model.properties().diagnostics().metrics().opentelemetryExportConfig().intervalSeconds());
        Assertions.assertEquals(681452902, model.properties().diagnostics().metrics().prometheusPort());
        Assertions.assertEquals(895776000, model.properties().instanceCount());
        Assertions.assertEquals("ifthnz", model.extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION, model.extendedLocation().type());
    }
}

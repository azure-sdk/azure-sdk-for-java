// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointFabricOneLakeAuthentication;
import com.azure.resourcemanager.iotoperations.models.FabricOneLakeAuthMethod;
import org.junit.jupiter.api.Assertions;

public final class DataflowEndpointFabricOneLakeAuthenticationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowEndpointFabricOneLakeAuthentication model = BinaryData.fromString(
            "{\"method\":\"SystemAssignedManagedIdentity\",\"systemAssignedManagedIdentitySettings\":{\"audience\":\"or\"},\"userAssignedManagedIdentitySettings\":{\"clientId\":\"lt\",\"scope\":\"mncwsobqwcsdb\",\"tenantId\":\"wdcfhucqdpfuv\"}}")
            .toObject(DataflowEndpointFabricOneLakeAuthentication.class);
        Assertions.assertEquals(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY, model.method());
        Assertions.assertEquals("or", model.systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("lt", model.userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("mncwsobqwcsdb", model.userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("wdcfhucqdpfuv", model.userAssignedManagedIdentitySettings().tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowEndpointFabricOneLakeAuthentication model = new DataflowEndpointFabricOneLakeAuthentication()
            .withMethod(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY)
            .withSystemAssignedManagedIdentitySettings(
                new DataflowEndpointAuthenticationSystemAssignedManagedIdentity().withAudience("or"))
            .withUserAssignedManagedIdentitySettings(
                new DataflowEndpointAuthenticationUserAssignedManagedIdentity().withClientId("lt")
                    .withScope("mncwsobqwcsdb")
                    .withTenantId("wdcfhucqdpfuv"));
        model = BinaryData.fromObject(model).toObject(DataflowEndpointFabricOneLakeAuthentication.class);
        Assertions.assertEquals(FabricOneLakeAuthMethod.SYSTEM_ASSIGNED_MANAGED_IDENTITY, model.method());
        Assertions.assertEquals("or", model.systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("lt", model.userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("mncwsobqwcsdb", model.userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("wdcfhucqdpfuv", model.userAssignedManagedIdentitySettings().tenantId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.iotoperations.models.DataExplorerAuthMethod;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationSystemAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointAuthenticationUserAssignedManagedIdentity;
import com.azure.resourcemanager.iotoperations.models.DataflowEndpointDataExplorerAuthentication;
import org.junit.jupiter.api.Assertions;

public final class DataflowEndpointDataExplorerAuthenticationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataflowEndpointDataExplorerAuthentication model = BinaryData.fromString(
            "{\"method\":\"UserAssignedManagedIdentity\",\"systemAssignedManagedIdentitySettings\":{\"audience\":\"gebdunygaeq\"},\"userAssignedManagedIdentitySettings\":{\"clientId\":\"bqfatpxllrxcyjmo\",\"scope\":\"su\",\"tenantId\":\"arm\"}}")
            .toObject(DataflowEndpointDataExplorerAuthentication.class);
        Assertions.assertEquals(DataExplorerAuthMethod.USER_ASSIGNED_MANAGED_IDENTITY, model.method());
        Assertions.assertEquals("gebdunygaeq", model.systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("bqfatpxllrxcyjmo", model.userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("su", model.userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("arm", model.userAssignedManagedIdentitySettings().tenantId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataflowEndpointDataExplorerAuthentication model = new DataflowEndpointDataExplorerAuthentication()
            .withMethod(DataExplorerAuthMethod.USER_ASSIGNED_MANAGED_IDENTITY)
            .withSystemAssignedManagedIdentitySettings(
                new DataflowEndpointAuthenticationSystemAssignedManagedIdentity().withAudience("gebdunygaeq"))
            .withUserAssignedManagedIdentitySettings(
                new DataflowEndpointAuthenticationUserAssignedManagedIdentity().withClientId("bqfatpxllrxcyjmo")
                    .withScope("su")
                    .withTenantId("arm"));
        model = BinaryData.fromObject(model).toObject(DataflowEndpointDataExplorerAuthentication.class);
        Assertions.assertEquals(DataExplorerAuthMethod.USER_ASSIGNED_MANAGED_IDENTITY, model.method());
        Assertions.assertEquals("gebdunygaeq", model.systemAssignedManagedIdentitySettings().audience());
        Assertions.assertEquals("bqfatpxllrxcyjmo", model.userAssignedManagedIdentitySettings().clientId());
        Assertions.assertEquals("su", model.userAssignedManagedIdentitySettings().scope());
        Assertions.assertEquals("arm", model.userAssignedManagedIdentitySettings().tenantId());
    }
}

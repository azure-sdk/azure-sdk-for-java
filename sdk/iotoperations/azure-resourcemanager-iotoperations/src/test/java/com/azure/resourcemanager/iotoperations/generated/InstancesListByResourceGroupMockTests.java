// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.iotoperations.IoTOperationsManager;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.InstanceResource;
import com.azure.resourcemanager.iotoperations.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"kutwpf\",\"provisioningState\":\"Failed\",\"version\":\"m\",\"schemaRegistryRef\":{\"resourceId\":\"r\"},\"features\":{\"nfd\":\"Disabled\",\"oakgtdlmkkzev\":\"Disabled\",\"hewpusdsttwv\":\"Enabled\",\"vbbejdcng\":\"Disabled\"}},\"extendedLocation\":{\"name\":\"qmoa\",\"type\":\"CustomLocation\"},\"identity\":{\"principalId\":\"m\",\"tenantId\":\"rwr\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"dwoyuhhziuiefoz\":{\"clientId\":\"aenuuz\",\"principalId\":\"pbminr\"},\"ae\":{\"clientId\":\"dmsmlm\",\"principalId\":\"hoftr\"},\"nswhcc\":{\"clientId\":\"iahxicsl\",\"principalId\":\"oqzpiyylha\"}}},\"location\":\"hka\",\"tags\":{\"bwemhairs\":\"itqscywuggwoluhc\",\"w\":\"rgzdwmsweyp\",\"tlstvlzywem\":\"xggicccnxqhuexmk\",\"lusiy\":\"zrncsdt\"},\"id\":\"bsfgytguslfea\",\"name\":\"cy\",\"type\":\"qukyhejhzi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        IoTOperationsManager manager = IoTOperationsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<InstanceResource> response
            = manager.instances().listByResourceGroup("yuuximerqfobwyzn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("hka", response.iterator().next().location());
        Assertions.assertEquals("itqscywuggwoluhc", response.iterator().next().tags().get("bwemhairs"));
        Assertions.assertEquals("kutwpf", response.iterator().next().properties().description());
        Assertions.assertEquals("r", response.iterator().next().properties().schemaRegistryRef().resourceId());
        Assertions.assertEquals(OperationalMode.DISABLED,
            response.iterator().next().properties().features().get("nfd"));
        Assertions.assertEquals("qmoa", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals(ExtendedLocationType.CUSTOM_LOCATION,
            response.iterator().next().extendedLocation().type());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
    }
}

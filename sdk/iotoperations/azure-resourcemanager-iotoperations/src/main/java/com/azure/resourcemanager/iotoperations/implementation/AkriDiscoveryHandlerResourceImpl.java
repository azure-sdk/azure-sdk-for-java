// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.iotoperations.fluent.models.AkriDiscoveryHandlerResourceInner;
import com.azure.resourcemanager.iotoperations.models.AkriDiscoveryHandlerProperties;
import com.azure.resourcemanager.iotoperations.models.AkriDiscoveryHandlerResource;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;

public final class AkriDiscoveryHandlerResourceImpl implements AkriDiscoveryHandlerResource,
    AkriDiscoveryHandlerResource.Definition, AkriDiscoveryHandlerResource.Update {
    private AkriDiscoveryHandlerResourceInner innerObject;

    private final com.azure.resourcemanager.iotoperations.IoTOperationsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public AkriDiscoveryHandlerProperties properties() {
        return this.innerModel().properties();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AkriDiscoveryHandlerResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.iotoperations.IoTOperationsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String instanceName;

    private String akriDiscoveryHandlerName;

    public AkriDiscoveryHandlerResourceImpl withExistingInstance(String resourceGroupName, String instanceName) {
        this.resourceGroupName = resourceGroupName;
        this.instanceName = instanceName;
        return this;
    }

    public AkriDiscoveryHandlerResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getAkriDiscoveryHandlers()
            .createOrUpdate(resourceGroupName, instanceName, akriDiscoveryHandlerName, this.innerModel(), Context.NONE);
        return this;
    }

    public AkriDiscoveryHandlerResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAkriDiscoveryHandlers()
            .createOrUpdate(resourceGroupName, instanceName, akriDiscoveryHandlerName, this.innerModel(), context);
        return this;
    }

    AkriDiscoveryHandlerResourceImpl(String name,
        com.azure.resourcemanager.iotoperations.IoTOperationsManager serviceManager) {
        this.innerObject = new AkriDiscoveryHandlerResourceInner();
        this.serviceManager = serviceManager;
        this.akriDiscoveryHandlerName = name;
    }

    public AkriDiscoveryHandlerResourceImpl update() {
        return this;
    }

    public AkriDiscoveryHandlerResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAkriDiscoveryHandlers()
            .createOrUpdate(resourceGroupName, instanceName, akriDiscoveryHandlerName, this.innerModel(), Context.NONE);
        return this;
    }

    public AkriDiscoveryHandlerResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAkriDiscoveryHandlers()
            .createOrUpdate(resourceGroupName, instanceName, akriDiscoveryHandlerName, this.innerModel(), context);
        return this;
    }

    AkriDiscoveryHandlerResourceImpl(AkriDiscoveryHandlerResourceInner innerObject,
        com.azure.resourcemanager.iotoperations.IoTOperationsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.instanceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "instances");
        this.akriDiscoveryHandlerName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "akriDiscoveryHandlers");
    }

    public AkriDiscoveryHandlerResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAkriDiscoveryHandlers()
            .getWithResponse(resourceGroupName, instanceName, akriDiscoveryHandlerName, Context.NONE)
            .getValue();
        return this;
    }

    public AkriDiscoveryHandlerResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAkriDiscoveryHandlers()
            .getWithResponse(resourceGroupName, instanceName, akriDiscoveryHandlerName, context)
            .getValue();
        return this;
    }

    public AkriDiscoveryHandlerResourceImpl withProperties(AkriDiscoveryHandlerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public AkriDiscoveryHandlerResourceImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.iotoperations.fluent.models.ListenerResourceInner;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;
import com.azure.resourcemanager.iotoperations.models.ListenerProperties;
import com.azure.resourcemanager.iotoperations.models.ListenerResource;

public final class ListenerResourceImpl
    implements ListenerResource, ListenerResource.Definition, ListenerResource.Update {
    private ListenerResourceInner innerObject;

    private final com.azure.resourcemanager.iotoperations.IoTOperationsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ListenerProperties properties() {
        return this.innerModel().properties();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ListenerResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.iotoperations.IoTOperationsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String instanceName;

    private String brokerName;

    private String listenerName;

    public ListenerResourceImpl withExistingBroker(String resourceGroupName, String instanceName, String brokerName) {
        this.resourceGroupName = resourceGroupName;
        this.instanceName = instanceName;
        this.brokerName = brokerName;
        return this;
    }

    public ListenerResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getBrokerListeners()
            .createOrUpdate(resourceGroupName, instanceName, brokerName, listenerName, this.innerModel(), Context.NONE);
        return this;
    }

    public ListenerResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBrokerListeners()
            .createOrUpdate(resourceGroupName, instanceName, brokerName, listenerName, this.innerModel(), context);
        return this;
    }

    ListenerResourceImpl(String name, com.azure.resourcemanager.iotoperations.IoTOperationsManager serviceManager) {
        this.innerObject = new ListenerResourceInner();
        this.serviceManager = serviceManager;
        this.listenerName = name;
    }

    public ListenerResourceImpl update() {
        return this;
    }

    public ListenerResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getBrokerListeners()
            .createOrUpdate(resourceGroupName, instanceName, brokerName, listenerName, this.innerModel(), Context.NONE);
        return this;
    }

    public ListenerResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBrokerListeners()
            .createOrUpdate(resourceGroupName, instanceName, brokerName, listenerName, this.innerModel(), context);
        return this;
    }

    ListenerResourceImpl(ListenerResourceInner innerObject,
        com.azure.resourcemanager.iotoperations.IoTOperationsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.instanceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "instances");
        this.brokerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "brokers");
        this.listenerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "listeners");
    }

    public ListenerResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getBrokerListeners()
            .getWithResponse(resourceGroupName, instanceName, brokerName, listenerName, Context.NONE)
            .getValue();
        return this;
    }

    public ListenerResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBrokerListeners()
            .getWithResponse(resourceGroupName, instanceName, brokerName, listenerName, context)
            .getValue();
        return this;
    }

    public ListenerResourceImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    public ListenerResourceImpl withProperties(ListenerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

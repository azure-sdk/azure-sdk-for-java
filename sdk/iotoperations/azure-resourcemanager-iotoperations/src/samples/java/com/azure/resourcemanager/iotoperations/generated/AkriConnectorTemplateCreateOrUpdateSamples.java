// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.iotoperations.generated;

import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateAioMetadata;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateDeviceInboundEndpointType;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateDiagnostics;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateProperties;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorTemplateRuntimeConfiguration;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsDiagnosticsLogs;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsMqttAuthentication;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsMqttConnectionConfiguration;
import com.azure.resourcemanager.iotoperations.models.AkriConnectorsMqttProtocolType;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocation;
import com.azure.resourcemanager.iotoperations.models.ExtendedLocationType;
import com.azure.resourcemanager.iotoperations.models.OperationalMode;
import com.azure.resourcemanager.iotoperations.models.TlsProperties;
import java.util.Arrays;

/**
 * Samples for AkriConnectorTemplate CreateOrUpdate.
 */
public final class AkriConnectorTemplateCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2025-07-01-preview/AkriConnectorTemplate_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: AkriConnectorTemplate_CreateOrUpdate_MaximumSet.
     * 
     * @param manager Entry point to IoTOperationsManager.
     */
    public static void akriConnectorTemplateCreateOrUpdateMaximumSet(
        com.azure.resourcemanager.iotoperations.IoTOperationsManager manager) {
        manager.akriConnectorTemplates()
            .define("resource-name123")
            .withExistingInstance("rgiotoperations", "resource-name123")
            .withProperties(new AkriConnectorTemplateProperties()
                .withAioMetadata(new AkriConnectorTemplateAioMetadata().withAioMinVersion("tkiz")
                    .withAioMaxVersion("qoxwkvfxvqedqtju"))
                .withRuntimeConfiguration(new AkriConnectorTemplateRuntimeConfiguration())
                .withDiagnostics(new AkriConnectorTemplateDiagnostics()
                    .withLogs(new AkriConnectorsDiagnosticsLogs().withLevel("pe")))
                .withDeviceInboundEndpointTypes(Arrays.asList(new AkriConnectorTemplateDeviceInboundEndpointType()
                    .withEndpointType("chkkpymxhp")
                    .withVersion("chkkpymxhp")
                    .withConfigurationSchemaRefs(new AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs()
                        .withDefaultDatasetConfigSchemaRef("nsifbedzo")
                        .withDefaultEventsConfigSchemaRef("tloquokslyfukgwhklpvpybdgykl")
                        .withDefaultProcessControlConfigSchemaRef("mvjycfnxovmiijpwlpbeacryfdo")
                        .withDefaultStreamsConfigSchemaRef("kdaitmohr")
                        .withAdditionalConfigSchemaRef("uxvyqeqxbamqwjy"))))
                .withMqttConnectionConfiguration(new AkriConnectorsMqttConnectionConfiguration()
                    .withAuthentication(new AkriConnectorsMqttAuthentication())
                    .withHost("kj")
                    .withProtocol(AkriConnectorsMqttProtocolType.MQTT)
                    .withKeepAliveSeconds(0)
                    .withMaxInflightMessages(0)
                    .withSessionExpirySeconds(0)
                    .withTls(new TlsProperties().withMode(OperationalMode.ENABLED)
                        .withTrustedCaCertificateConfigMapRef("tectjjvukvelsreihwadh"))))
            .withExtendedLocation(
                new ExtendedLocation().withName("qmbrfwcpwwhggszhrdjv").withType(ExtendedLocationType.CUSTOM_LOCATION))
            .create();
    }
}

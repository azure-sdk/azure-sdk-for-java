// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"namespace\":\"wd\",\"extensionProperties\":{\"dbpgnxytxhp\":\"zt\"},\"maintenanceScope\":\"Resource\",\"maintenanceWindow\":{\"startDateTime\":\"fzab\",\"expirationDateTime\":\"cuh\",\"duration\":\"tcty\",\"timeZone\":\"klbb\",\"recurEvery\":\"plwzbhvgyugu\"},\"visibility\":\"Public\",\"installPatches\":{\"rebootSetting\":\"IfRequired\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"qukkfp\"],\"kbNumbersToInclude\":[\"gsxnkjzkdeslpv\"],\"classificationsToInclude\":[\"wiyighxpkdw\",\"baiuebbaumny\"],\"excludeKbsRequiringReboot\":false},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"ojnabckhsmtxpsie\",\"tfhvpesapskrdqmh\"],\"packageNameMasksToInclude\":[\"htldwk\",\"zxuutkncwscwsvl\",\"otogtwrupqs\"],\"classificationsToInclude\":[\"micykvceoveilo\"]}}},\"location\":\"oty\",\"tags\":{\"kphywpnvjto\":\"cnjbkcnxdhbt\"},\"id\":\"nermcl\",\"name\":\"plpho\",\"type\":\"uscrpabgyepsb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MaintenanceConfiguration response = manager.maintenanceConfigurations()
            .getWithResponse("cuxrhdwbavx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("oty", response.location());
        Assertions.assertEquals("cnjbkcnxdhbt", response.tags().get("kphywpnvjto"));
        Assertions.assertEquals("wd", response.namespace());
        Assertions.assertEquals("zt", response.extensionProperties().get("dbpgnxytxhp"));
        Assertions.assertEquals(MaintenanceScope.RESOURCE, response.maintenanceScope());
        Assertions.assertEquals(Visibility.PUBLIC, response.visibility());
        Assertions.assertEquals(RebootOptions.IF_REQUIRED, response.installPatches().rebootSetting());
        Assertions.assertEquals("qukkfp", response.installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("gsxnkjzkdeslpv",
            response.installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("wiyighxpkdw",
            response.installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions.assertFalse(response.installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("ojnabckhsmtxpsie",
            response.installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("htldwk",
            response.installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("micykvceoveilo",
            response.installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("fzab", response.startDateTime());
        Assertions.assertEquals("cuh", response.expirationDateTime());
        Assertions.assertEquals("tcty", response.duration());
        Assertions.assertEquals("klbb", response.timeZone());
        Assertions.assertEquals("plwzbhvgyugu", response.recurEvery());
    }
}

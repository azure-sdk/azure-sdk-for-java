// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationOperationGroupsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"namespace\":\"mkh\",\"extensionProperties\":{\"lrbpbewtghfgbl\":\"bbcswsrtjri\"},\"maintenanceScope\":\"OSImage\",\"maintenanceWindow\":{\"startDateTime\":\"vlvqhjkbegi\",\"expirationDateTime\":\"nmxiebwwaloayqc\",\"duration\":\"rtzju\",\"timeZone\":\"wyzmhtxon\",\"recurEvery\":\"ts\"},\"visibility\":\"Public\",\"installPatches\":{\"rebootSetting\":\"Never\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"p\",\"rknftguvriuhprwm\",\"yvxqtayriwwroy\",\"bexrmcq\"],\"kbNumbersToInclude\":[\"cnojvknmefqsg\",\"vah\",\"pjyzhpv\",\"qzcjrvxdj\"],\"classificationsToInclude\":[\"wlxkvugfhzovaw\",\"vzunluthnnprnxi\"],\"excludeKbsRequiringReboot\":true},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"zuaejxd\",\"ltskzbbtd\",\"umveekgpwozuhkf\",\"bsjyofdx\"],\"packageNameMasksToInclude\":[\"sd\"],\"classificationsToInclude\":[\"uwaboekqvke\",\"nsmvbxwyj\",\"flhhcaal\",\"jixisxyawjoyaqcs\"]}}},\"location\":\"jpkiidzyexznelix\",\"tags\":{\"alaulppggdtpnapn\":\"ztfolhbnxk\"},\"id\":\"iropuhpigvpgylg\",\"name\":\"git\",\"type\":\"medjvcslynqwwncw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MaintenanceConfiguration response = manager.maintenanceConfigurationOperationGroups()
            .getByResourceGroupWithResponse("nbmpowuwprzq", "veual", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jpkiidzyexznelix", response.location());
        Assertions.assertEquals("ztfolhbnxk", response.tags().get("alaulppggdtpnapn"));
        Assertions.assertEquals("mkh", response.namespace());
        Assertions.assertEquals("bbcswsrtjri", response.extensionProperties().get("lrbpbewtghfgbl"));
        Assertions.assertEquals(MaintenanceScope.OSIMAGE, response.maintenanceScope());
        Assertions.assertEquals(Visibility.PUBLIC, response.visibility());
        Assertions.assertEquals(RebootOptions.NEVER, response.installPatches().rebootSetting());
        Assertions.assertEquals("p", response.installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("cnojvknmefqsg",
            response.installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("wlxkvugfhzovaw",
            response.installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions.assertTrue(response.installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("zuaejxd",
            response.installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("sd", response.installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("uwaboekqvke",
            response.installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("vlvqhjkbegi", response.startDateTime());
        Assertions.assertEquals("nmxiebwwaloayqc", response.expirationDateTime());
        Assertions.assertEquals("rtzju", response.duration());
        Assertions.assertEquals("wyzmhtxon", response.timeZone());
        Assertions.assertEquals("ts", response.recurEvery());
    }
}

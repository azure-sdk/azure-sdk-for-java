// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationOperationGroupsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"namespace\":\"fcnihgwq\",\"extensionProperties\":{\"pkeqdcvdrhvoo\":\"edgfbcvkcvq\",\"dopcjwvnh\":\"sotbob\"},\"maintenanceScope\":\"Host\",\"maintenanceWindow\":{\"startDateTime\":\"gx\",\"expirationDateTime\":\"rslpmutwuoeg\",\"duration\":\"khjwn\",\"timeZone\":\"qsluicp\",\"recurEvery\":\"gk\"},\"visibility\":\"Public\",\"installPatches\":{\"rebootSetting\":\"IfRequired\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"xmodf\",\"uefywsbpfvmwy\",\"rfouyftaakcpw\"],\"kbNumbersToInclude\":[\"vqtmnub\",\"xkp\",\"ksmond\"],\"classificationsToInclude\":[\"uxvypomgkopkwh\",\"jvp\",\"jqg\"],\"excludeKbsRequiringReboot\":false},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"mbqfqvmk\",\"xozap\",\"helxprglya\"],\"packageNameMasksToInclude\":[\"ckcb\",\"uejrjxgc\"],\"classificationsToInclude\":[\"brh\",\"sxsdqrhzoymibm\",\"qyib\"]}}},\"location\":\"wfluszdt\",\"tags\":{\"cpi\":\"kwofyyvoq\",\"nwashrtd\":\"xpbtgiwbwo\",\"ulpiuj\":\"kcnqxwbpo\"},\"id\":\"aasipqi\",\"name\":\"obyu\",\"type\":\"erpqlpqwcciuqg\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<MaintenanceConfiguration> response
            = manager.maintenanceConfigurationOperationGroups().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("wfluszdt", response.iterator().next().location());
        Assertions.assertEquals("kwofyyvoq", response.iterator().next().tags().get("cpi"));
        Assertions.assertEquals("fcnihgwq", response.iterator().next().namespace());
        Assertions.assertEquals("edgfbcvkcvq", response.iterator().next().extensionProperties().get("pkeqdcvdrhvoo"));
        Assertions.assertEquals(MaintenanceScope.HOST, response.iterator().next().maintenanceScope());
        Assertions.assertEquals(Visibility.PUBLIC, response.iterator().next().visibility());
        Assertions.assertEquals(RebootOptions.IF_REQUIRED, response.iterator().next().installPatches().rebootSetting());
        Assertions.assertEquals("xmodf",
            response.iterator().next().installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("vqtmnub",
            response.iterator().next().installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("uxvypomgkopkwh",
            response.iterator().next().installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions
            .assertFalse(response.iterator().next().installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("mbqfqvmk",
            response.iterator().next().installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("ckcb",
            response.iterator().next().installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("brh",
            response.iterator().next().installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("gx", response.iterator().next().startDateTime());
        Assertions.assertEquals("rslpmutwuoeg", response.iterator().next().expirationDateTime());
        Assertions.assertEquals("khjwn", response.iterator().next().duration());
        Assertions.assertEquals("qsluicp", response.iterator().next().timeZone());
        Assertions.assertEquals("gk", response.iterator().next().recurEvery());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationOperationGroupsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"namespace\":\"bbglzpswiydmc\",\"extensionProperties\":{\"dbzm\":\"zdxss\",\"cblylpstdbhhxsr\":\"vdfznudaodvxzb\",\"erscdntne\":\"dzu\"},\"maintenanceScope\":\"InGuestPatch\",\"maintenanceWindow\":{\"startDateTime\":\"mygtdssls\",\"expirationDateTime\":\"mweriofzpy\",\"duration\":\"emwabnet\",\"timeZone\":\"hszhedplvwiwu\",\"recurEvery\":\"wmbesldnkw\"},\"visibility\":\"Custom\",\"installPatches\":{\"rebootSetting\":\"Always\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"ogaok\",\"nzmnsikvm\",\"qzeqqkdltfzxm\",\"hvhgureod\"],\"kbNumbersToInclude\":[\"bdagxt\",\"bqdxbx\",\"akbogqxndlkzgxh\",\"ripl\"],\"classificationsToInclude\":[\"dxunkbebxmubyyn\",\"wlrbqtkoievseo\"],\"excludeKbsRequiringReboot\":false},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"tmuwlauwzi\",\"xbmp\",\"cjefuzmu\",\"pbttdum\"],\"packageNameMasksToInclude\":[\"pxebmnzbt\"],\"classificationsToInclude\":[\"pglkf\",\"ohdneuel\",\"phsdyhto\"]}}},\"location\":\"ikdowwquuvx\",\"tags\":{\"hcohfwdsjnk\":\"lvithhqzonosgg\",\"swacffgdkzz\":\"ljuti\"},\"id\":\"wkfvhqcrailvp\",\"name\":\"ppfufl\",\"type\":\"wdmhdlxyjrxs\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<MaintenanceConfiguration> response = manager.maintenanceConfigurationOperationGroups()
            .listByResourceGroup("lqlfm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ikdowwquuvx", response.iterator().next().location());
        Assertions.assertEquals("lvithhqzonosgg", response.iterator().next().tags().get("hcohfwdsjnk"));
        Assertions.assertEquals("bbglzpswiydmc", response.iterator().next().namespace());
        Assertions.assertEquals("zdxss", response.iterator().next().extensionProperties().get("dbzm"));
        Assertions.assertEquals(MaintenanceScope.IN_GUEST_PATCH, response.iterator().next().maintenanceScope());
        Assertions.assertEquals(Visibility.CUSTOM, response.iterator().next().visibility());
        Assertions.assertEquals(RebootOptions.ALWAYS, response.iterator().next().installPatches().rebootSetting());
        Assertions.assertEquals("ogaok",
            response.iterator().next().installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("bdagxt",
            response.iterator().next().installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("dxunkbebxmubyyn",
            response.iterator().next().installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions
            .assertFalse(response.iterator().next().installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("tmuwlauwzi",
            response.iterator().next().installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("pxebmnzbt",
            response.iterator().next().installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("pglkf",
            response.iterator().next().installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("mygtdssls", response.iterator().next().startDateTime());
        Assertions.assertEquals("mweriofzpy", response.iterator().next().expirationDateTime());
        Assertions.assertEquals("emwabnet", response.iterator().next().duration());
        Assertions.assertEquals("hszhedplvwiwu", response.iterator().next().timeZone());
        Assertions.assertEquals("wmbesldnkw", response.iterator().next().recurEvery());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.MaintenanceConfiguration;
import com.azure.resourcemanager.maintenance.models.MaintenanceScope;
import com.azure.resourcemanager.maintenance.models.RebootOptions;
import com.azure.resourcemanager.maintenance.models.Visibility;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class MaintenanceConfigurationOperationGroupsDeleteByResourceGroupWithResponseMockTests {
    @Test
    public void testDeleteWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"namespace\":\"wptfdy\",\"extensionProperties\":{\"huaoppp\":\"qbuaceopzfqr\",\"z\":\"qeqxo\",\"moizpos\":\"ahzxctobgbk\"},\"maintenanceScope\":\"Resource\",\"maintenanceWindow\":{\"startDateTime\":\"fbunrmfqjhhk\",\"expirationDateTime\":\"pvjymjhxxjyng\",\"duration\":\"ivkrtsw\",\"timeZone\":\"qzvszjf\",\"recurEvery\":\"vjfdx\"},\"visibility\":\"Custom\",\"installPatches\":{\"rebootSetting\":\"IfRequired\",\"windowsParameters\":{\"kbNumbersToExclude\":[\"aqtdoqmcbx\",\"wvxysl\",\"bhsfxob\",\"ytkblmpew\"],\"kbNumbersToInclude\":[\"bkrvrnsvshqj\",\"hxcr\",\"bfovasrruvwbhsq\"],\"classificationsToInclude\":[\"bcgjbirxbp\",\"bsrfbj\",\"dtws\"],\"excludeKbsRequiringReboot\":false},\"linuxParameters\":{\"packageNameMasksToExclude\":[\"vjz\",\"exilzznfqqnvwpmq\"],\"packageNameMasksToInclude\":[\"uoujmkcjhwqy\",\"jrybnwjewgdrjer\"],\"classificationsToInclude\":[\"enq\"]}}},\"location\":\"hin\",\"tags\":{\"dslgnayqigynduh\":\"gmifthnzd\"},\"id\":\"vhqlkthumaqo\",\"name\":\"bgycduiertgccym\",\"type\":\"aolps\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        MaintenanceConfiguration response = manager.maintenanceConfigurationOperationGroups()
            .deleteByResourceGroupWithResponse("zhxgktrmgucn", "pkteo", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("hin", response.location());
        Assertions.assertEquals("gmifthnzd", response.tags().get("dslgnayqigynduh"));
        Assertions.assertEquals("wptfdy", response.namespace());
        Assertions.assertEquals("qbuaceopzfqr", response.extensionProperties().get("huaoppp"));
        Assertions.assertEquals(MaintenanceScope.RESOURCE, response.maintenanceScope());
        Assertions.assertEquals(Visibility.CUSTOM, response.visibility());
        Assertions.assertEquals(RebootOptions.IF_REQUIRED, response.installPatches().rebootSetting());
        Assertions.assertEquals("aqtdoqmcbx",
            response.installPatches().windowsParameters().kbNumbersToExclude().get(0));
        Assertions.assertEquals("bkrvrnsvshqj",
            response.installPatches().windowsParameters().kbNumbersToInclude().get(0));
        Assertions.assertEquals("bcgjbirxbp",
            response.installPatches().windowsParameters().classificationsToInclude().get(0));
        Assertions.assertFalse(response.installPatches().windowsParameters().excludeKbsRequiringReboot());
        Assertions.assertEquals("vjz", response.installPatches().linuxParameters().packageNameMasksToExclude().get(0));
        Assertions.assertEquals("uoujmkcjhwqy",
            response.installPatches().linuxParameters().packageNameMasksToInclude().get(0));
        Assertions.assertEquals("enq", response.installPatches().linuxParameters().classificationsToInclude().get(0));
        Assertions.assertEquals("fbunrmfqjhhk", response.startDateTime());
        Assertions.assertEquals("pvjymjhxxjyng", response.expirationDateTime());
        Assertions.assertEquals("ivkrtsw", response.duration());
        Assertions.assertEquals("qzvszjf", response.timeZone());
        Assertions.assertEquals("vjfdx", response.recurEvery());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.maintenance.MaintenanceManager;
import com.azure.resourcemanager.maintenance.models.ConfigurationAssignment;
import com.azure.resourcemanager.maintenance.models.TagOperators;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ConfigurationAssignmentsForResourceGroupsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"location\":\"jvusfzldmozux\",\"properties\":{\"maintenanceConfigurationId\":\"sbtkadpysownbtgk\",\"resourceId\":\"grjqctojcmi\",\"filter\":{\"resourceTypes\":[\"eypefojyqd\",\"cuplcplcwkhih\"],\"resourceGroups\":[\"hzdsqtzbsrgnow\",\"jhf\",\"mvec\"],\"osTypes\":[\"xmwoteyowcluqo\",\"ekqvgqouwif\",\"mpjw\"],\"locations\":[\"qikfxcv\",\"rfsphuagrt\",\"ikteusqczkvyk\",\"xubyjaffmmfblcqc\"],\"tagSettings\":{\"tags\":{\"seypxiutcxapz\":[\"ibrta\",\"metttwgd\",\"lqxihhrmooiz\"],\"vnh\":[\"rpetogebjoxsl\"],\"lftidgfcwqmpim\":[\"brqnkkzjcjb\",\"rgaehvvibrxjj\",\"toqbeitpkxztmoob\"],\"bawpfajnjwltlwt\":[\"xzhemjyh\",\"hujswtwkozzwcul\"]},\"filterOperator\":\"All\"}}},\"id\":\"ktalhsnvkcdmxz\",\"name\":\"poaimlnwiaaomyl\",\"type\":\"eazulcs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MaintenanceManager manager = MaintenanceManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ConfigurationAssignment response = manager.configurationAssignmentsForResourceGroups()
            .getByResourceGroupWithResponse("agt", "ojocqwogf", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jvusfzldmozux", response.location());
        Assertions.assertEquals("sbtkadpysownbtgk", response.maintenanceConfigurationId());
        Assertions.assertEquals("grjqctojcmi", response.resourceId());
        Assertions.assertEquals("eypefojyqd", response.filter().resourceTypes().get(0));
        Assertions.assertEquals("hzdsqtzbsrgnow", response.filter().resourceGroups().get(0));
        Assertions.assertEquals("xmwoteyowcluqo", response.filter().osTypes().get(0));
        Assertions.assertEquals("qikfxcv", response.filter().locations().get(0));
        Assertions.assertEquals("ibrta", response.filter().tagSettings().tags().get("seypxiutcxapz").get(0));
        Assertions.assertEquals(TagOperators.ALL, response.filter().tagSettings().filterOperator());
    }
}

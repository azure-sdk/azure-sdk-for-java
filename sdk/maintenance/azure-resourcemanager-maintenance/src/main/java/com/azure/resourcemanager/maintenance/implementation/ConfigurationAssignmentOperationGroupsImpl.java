// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.maintenance.fluent.ConfigurationAssignmentOperationGroupsClient;
import com.azure.resourcemanager.maintenance.fluent.models.ConfigurationAssignmentInner;
import com.azure.resourcemanager.maintenance.models.ConfigurationAssignment;
import com.azure.resourcemanager.maintenance.models.ConfigurationAssignmentOperationGroups;

public final class ConfigurationAssignmentOperationGroupsImpl implements ConfigurationAssignmentOperationGroups {
    private static final ClientLogger LOGGER = new ClientLogger(ConfigurationAssignmentOperationGroupsImpl.class);

    private final ConfigurationAssignmentOperationGroupsClient innerClient;

    private final com.azure.resourcemanager.maintenance.MaintenanceManager serviceManager;

    public ConfigurationAssignmentOperationGroupsImpl(ConfigurationAssignmentOperationGroupsClient innerClient,
        com.azure.resourcemanager.maintenance.MaintenanceManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ConfigurationAssignment> getWithResponse(String resourceGroupName, String providerName,
        String resourceType, String resourceName, String configurationAssignmentName, Context context) {
        Response<ConfigurationAssignmentInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ConfigurationAssignmentImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ConfigurationAssignment get(String resourceGroupName, String providerName, String resourceType,
        String resourceName, String configurationAssignmentName) {
        ConfigurationAssignmentInner inner = this.serviceClient()
            .get(resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName);
        if (inner != null) {
            return new ConfigurationAssignmentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ConfigurationAssignment> createOrUpdateWithResponse(String resourceGroupName, String providerName,
        String resourceType, String resourceName, String configurationAssignmentName,
        ConfigurationAssignmentInner configurationAssignment, Context context) {
        Response<ConfigurationAssignmentInner> inner = this.serviceClient()
            .createOrUpdateWithResponse(resourceGroupName, providerName, resourceType, resourceName,
                configurationAssignmentName, configurationAssignment, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ConfigurationAssignmentImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ConfigurationAssignment createOrUpdate(String resourceGroupName, String providerName, String resourceType,
        String resourceName, String configurationAssignmentName, ConfigurationAssignmentInner configurationAssignment) {
        ConfigurationAssignmentInner inner = this.serviceClient()
            .createOrUpdate(resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName,
                configurationAssignment);
        if (inner != null) {
            return new ConfigurationAssignmentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ConfigurationAssignment> deleteWithResponse(String resourceGroupName, String providerName,
        String resourceType, String resourceName, String configurationAssignmentName, Context context) {
        Response<ConfigurationAssignmentInner> inner = this.serviceClient()
            .deleteWithResponse(resourceGroupName, providerName, resourceType, resourceName,
                configurationAssignmentName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ConfigurationAssignmentImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ConfigurationAssignment delete(String resourceGroupName, String providerName, String resourceType,
        String resourceName, String configurationAssignmentName) {
        ConfigurationAssignmentInner inner = this.serviceClient()
            .delete(resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName);
        if (inner != null) {
            return new ConfigurationAssignmentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ConfigurationAssignmentOperationGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.maintenance.MaintenanceManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.maintenance.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.maintenance.fluent.ApplyUpdatesOperationGroupsClient;
import com.azure.resourcemanager.maintenance.fluent.models.ApplyUpdateInner;
import com.azure.resourcemanager.maintenance.models.ApplyUpdate;
import com.azure.resourcemanager.maintenance.models.ApplyUpdatesOperationGroups;
import com.azure.resourcemanager.maintenance.models.ApplyUpdatesOperationGroupsCreateOrUpdateParentResponse;
import com.azure.resourcemanager.maintenance.models.ApplyUpdatesOperationGroupsCreateOrUpdateResponse;

public final class ApplyUpdatesOperationGroupsImpl implements ApplyUpdatesOperationGroups {
    private static final ClientLogger LOGGER = new ClientLogger(ApplyUpdatesOperationGroupsImpl.class);

    private final ApplyUpdatesOperationGroupsClient innerClient;

    private final com.azure.resourcemanager.maintenance.MaintenanceManager serviceManager;

    public ApplyUpdatesOperationGroupsImpl(ApplyUpdatesOperationGroupsClient innerClient,
        com.azure.resourcemanager.maintenance.MaintenanceManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ApplyUpdate> createOrUpdateParentWithResponse(String resourceGroupName, String providerName,
        String resourceParentType, String resourceParentName, String resourceType, String resourceName,
        Context context) {
        ApplyUpdatesOperationGroupsCreateOrUpdateParentResponse inner = this.serviceClient()
            .createOrUpdateParentWithResponse(resourceGroupName, providerName, resourceParentType, resourceParentName,
                resourceType, resourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ApplyUpdateImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ApplyUpdate createOrUpdateParent(String resourceGroupName, String providerName, String resourceParentType,
        String resourceParentName, String resourceType, String resourceName) {
        ApplyUpdateInner inner = this.serviceClient()
            .createOrUpdateParent(resourceGroupName, providerName, resourceParentType, resourceParentName, resourceType,
                resourceName);
        if (inner != null) {
            return new ApplyUpdateImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ApplyUpdate> createOrUpdateWithResponse(String resourceGroupName, String providerName,
        String resourceType, String resourceName, Context context) {
        ApplyUpdatesOperationGroupsCreateOrUpdateResponse inner = this.serviceClient()
            .createOrUpdateWithResponse(resourceGroupName, providerName, resourceType, resourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ApplyUpdateImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ApplyUpdate createOrUpdate(String resourceGroupName, String providerName, String resourceType,
        String resourceName) {
        ApplyUpdateInner inner
            = this.serviceClient().createOrUpdate(resourceGroupName, providerName, resourceType, resourceName);
        if (inner != null) {
            return new ApplyUpdateImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ApplyUpdatesOperationGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.maintenance.MaintenanceManager manager() {
        return this.serviceManager;
    }
}

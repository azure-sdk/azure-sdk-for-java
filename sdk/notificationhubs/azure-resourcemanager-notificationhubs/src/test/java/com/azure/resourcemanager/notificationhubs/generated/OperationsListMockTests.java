// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.notificationhubs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.notificationhubs.NotificationhubsManager;
import com.azure.resourcemanager.notificationhubs.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"vetvt\",\"display\":{\"provider\":\"qtdo\",\"resource\":\"cbxvwvxyslqbh\",\"operation\":\"xoblytkbl\",\"description\":\"ewwwfbkrvrnsv\"},\"isDataAction\":false,\"properties\":{\"serviceSpecification\":{\"logSpecifications\":[{\"name\":\"rsbfovasrruvw\",\"displayName\":\"sqfsubcgjbirxb\",\"blobDuration\":\"bsrfbj\",\"categoryGroups\":[\"w\"]}],\"metricSpecifications\":[{\"name\":\"ftpvjzbexil\",\"displayName\":\"nfqqnvwp\",\"displayDescription\":\"taruoujmkcj\",\"unit\":\"qytjrybnwjewgd\",\"aggregationType\":\"ervnaenqpehi\",\"availabilities\":[{},{}],\"supportedTimeGrainTypes\":[\"mifthnzdnd\",\"l\",\"nayqi\"],\"metricFilterPattern\":\"nduhavhqlkthum\",\"fillGapWithZero\":true},{\"name\":\"bgycduiertgccym\",\"displayName\":\"olpsslqlf\",\"displayDescription\":\"dnbbglzps\",\"unit\":\"ydmcwyhzdxssa\",\"aggregationType\":\"zmnvdfznudaod\",\"availabilities\":[{}],\"supportedTimeGrainTypes\":[\"cblylpstdbhhxsr\",\"dzu\",\"erscdntne\"],\"metricFilterPattern\":\"iwjmygtdssls\",\"fillGapWithZero\":true},{\"name\":\"eriofzpyqs\",\"displayName\":\"wab\",\"displayDescription\":\"tshhszhedp\",\"unit\":\"wiwubm\",\"aggregationType\":\"besldnkwwtppjflc\",\"availabilities\":[{},{},{},{}],\"supportedTimeGrainTypes\":[\"konzmnsik\",\"mkqzeqqkdltfzxmh\",\"v\",\"gureodkwobdag\"],\"metricFilterPattern\":\"ibqdxbxwakbogqx\",\"fillGapWithZero\":true},{\"name\":\"zgx\",\"displayName\":\"ripl\",\"displayDescription\":\"odxun\",\"unit\":\"ebxmubyynt\",\"aggregationType\":\"rbqtkoie\",\"availabilities\":[{}],\"supportedTimeGrainTypes\":[\"gqrlltmuwla\"],\"metricFilterPattern\":\"zizxbmpgcj\",\"fillGapWithZero\":false}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NotificationhubsManager manager = NotificationhubsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.notificationhubs.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.notificationhubs.fluent.NamespacesOperationGroupsClient;
import com.azure.resourcemanager.notificationhubs.fluent.models.CheckAvailabilityResultInner;
import com.azure.resourcemanager.notificationhubs.models.CheckAvailabilityParameters;
import com.azure.resourcemanager.notificationhubs.models.CheckAvailabilityResult;
import com.azure.resourcemanager.notificationhubs.models.NamespacesOperationGroups;

public final class NamespacesOperationGroupsImpl implements NamespacesOperationGroups {
    private static final ClientLogger LOGGER = new ClientLogger(NamespacesOperationGroupsImpl.class);

    private final NamespacesOperationGroupsClient innerClient;

    private final com.azure.resourcemanager.notificationhubs.NotificationhubsManager serviceManager;

    public NamespacesOperationGroupsImpl(NamespacesOperationGroupsClient innerClient,
        com.azure.resourcemanager.notificationhubs.NotificationhubsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<CheckAvailabilityResult> checkAvailabilityWithResponse(CheckAvailabilityParameters parameters,
        Context context) {
        Response<CheckAvailabilityResultInner> inner
            = this.serviceClient().checkAvailabilityWithResponse(parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new CheckAvailabilityResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CheckAvailabilityResult checkAvailability(CheckAvailabilityParameters parameters) {
        CheckAvailabilityResultInner inner = this.serviceClient().checkAvailability(parameters);
        if (inner != null) {
            return new CheckAvailabilityResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private NamespacesOperationGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.notificationhubs.NotificationhubsManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.notificationhubs.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.notificationhubs.fluent.PrivateLinkResourcesClient;
import com.azure.resourcemanager.notificationhubs.fluent.models.PrivateLinkResourceInner;
import com.azure.resourcemanager.notificationhubs.models.PrivateLinkResource;
import com.azure.resourcemanager.notificationhubs.models.PrivateLinkResources;

public final class PrivateLinkResourcesImpl implements PrivateLinkResources {
    private static final ClientLogger LOGGER = new ClientLogger(PrivateLinkResourcesImpl.class);

    private final PrivateLinkResourcesClient innerClient;

    private final com.azure.resourcemanager.notificationhubs.NotificationhubsManager serviceManager;

    public PrivateLinkResourcesImpl(PrivateLinkResourcesClient innerClient,
        com.azure.resourcemanager.notificationhubs.NotificationhubsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<PrivateLinkResource> getGroupIdWithResponse(String resourceGroupName, String namespaceName,
        String subResourceName, Context context) {
        Response<PrivateLinkResourceInner> inner
            = this.serviceClient().getGroupIdWithResponse(resourceGroupName, namespaceName, subResourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateLinkResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateLinkResource getGroupId(String resourceGroupName, String namespaceName, String subResourceName) {
        PrivateLinkResourceInner inner
            = this.serviceClient().getGroupId(resourceGroupName, namespaceName, subResourceName);
        if (inner != null) {
            return new PrivateLinkResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<PrivateLinkResource> listGroupIds(String resourceGroupName, String namespaceName) {
        PagedIterable<PrivateLinkResourceInner> inner
            = this.serviceClient().listGroupIds(resourceGroupName, namespaceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PrivateLinkResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateLinkResource> listGroupIds(String resourceGroupName, String namespaceName,
        Context context) {
        PagedIterable<PrivateLinkResourceInner> inner
            = this.serviceClient().listGroupIds(resourceGroupName, namespaceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PrivateLinkResourceImpl(inner1, this.manager()));
    }

    private PrivateLinkResourcesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.notificationhubs.NotificationhubsManager manager() {
        return this.serviceManager;
    }
}

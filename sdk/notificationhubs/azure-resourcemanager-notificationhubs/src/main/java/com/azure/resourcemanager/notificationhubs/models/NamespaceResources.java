// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.notificationhubs.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NamespaceResources.
 */
public interface NamespaceResources {
    /**
     * Returns the given namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return notification Hubs Namespace Resource along with {@link Response}.
     */
    Response<NamespaceResource> getByResourceGroupWithResponse(String resourceGroupName, String namespaceName,
        Context context);

    /**
     * Returns the given namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return notification Hubs Namespace Resource.
     */
    NamespaceResource getByResourceGroup(String resourceGroupName, String namespaceName);

    /**
     * Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String namespaceName, Context context);

    /**
     * Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String namespaceName);

    /**
     * Lists the available namespaces within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of NamespaceResource items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NamespaceResource> listByResourceGroup(String resourceGroupName);

    /**
     * Lists the available namespaces within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param skipToken Skip token for subsequent requests.
     * @param top Maximum number of results to return.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of NamespaceResource items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NamespaceResource> listByResourceGroup(String resourceGroupName, String skipToken, Integer top,
        Context context);

    /**
     * Lists all the available namespaces within the subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of NamespaceResource items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NamespaceResource> list();

    /**
     * Lists all the available namespaces within the subscription.
     * 
     * @param skipToken Skip token for subsequent requests.
     * @param top Maximum number of results to return.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of NamespaceResource items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NamespaceResource> list(String skipToken, Integer top, Context context);

    /**
     * Checks the availability of the given notificationHub in a namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param parameters Request content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a CheckAvailability resource along with {@link Response}.
     */
    Response<CheckAvailabilityResult> checkNotificationHubAvailabilityWithResponse(String resourceGroupName,
        String namespaceName, CheckAvailabilityParameters parameters, Context context);

    /**
     * Checks the availability of the given notificationHub in a namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param parameters Request content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a CheckAvailability resource.
     */
    CheckAvailabilityResult checkNotificationHubAvailability(String resourceGroupName, String namespaceName,
        CheckAvailabilityParameters parameters);

    /**
     * Lists the PNS credentials associated with a namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a NotificationHub PNS Credentials along with {@link Response}.
     */
    Response<PnsCredentialsResource> getPnsCredentialsWithResponse(String resourceGroupName, String namespaceName,
        Context context);

    /**
     * Lists the PNS credentials associated with a namespace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param namespaceName Namespace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return description of a NotificationHub PNS Credentials.
     */
    PnsCredentialsResource getPnsCredentials(String resourceGroupName, String namespaceName);

    /**
     * Returns the given namespace.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return notification Hubs Namespace Resource along with {@link Response}.
     */
    NamespaceResource getById(String id);

    /**
     * Returns the given namespace.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return notification Hubs Namespace Resource along with {@link Response}.
     */
    Response<NamespaceResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NamespaceResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new NamespaceResource definition.
     */
    NamespaceResource.DefinitionStages.Blank define(String name);
}

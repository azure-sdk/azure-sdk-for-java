// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Allocation endpoint.
 */
@Fluent
public final class AllocationEndpoint {
    /*
     * Resource id of the endpoint.
     */
    @JsonProperty(value = "resourceId", required = true)
    private String resourceId;

    /*
     * host name of the endpoint.
     */
    @JsonProperty(value = "hostName", required = true)
    private String hostname;

    /**
     * Creates an instance of AllocationEndpoint class.
     */
    public AllocationEndpoint() {
    }

    /**
     * Get the resourceId property: Resource id of the endpoint.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Resource id of the endpoint.
     * 
     * @param resourceId the resourceId value to set.
     * @return the AllocationEndpoint object itself.
     */
    public AllocationEndpoint withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the hostname property: host name of the endpoint.
     * 
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Set the hostname property: host name of the endpoint.
     * 
     * @param hostname the hostname value to set.
     * @return the AllocationEndpoint object itself.
     */
    public AllocationEndpoint withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceId() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property resourceId in model AllocationEndpoint"));
        }
        if (hostname() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property hostname in model AllocationEndpoint"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AllocationEndpoint.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.fairfieldgardens.models.DeviceEndpoints;
import com.azure.resourcemanager.fairfieldgardens.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details of the EdgeProvisioning ProvisioningResource.
 */
@Fluent
public final class ProvisioningResourceProperties {
    /*
     * The status of the last operation.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The provisioning service endpoints.
     */
    @JsonProperty(value = "deviceEndpoints", access = JsonProperty.Access.WRITE_ONLY)
    private DeviceEndpoints deviceEndpoints;

    /*
     * Selecting 'yes' will enable a Microsoft managed PKI to issue certificates. Setting up of the CA and policies for
     * certificate management will be while defining the bumblebee provisioning policy.
     */
    @JsonProperty(value = "enableOperationalCertificates", required = true)
    private boolean enableOperationalCertificates;

    /**
     * Creates an instance of ProvisioningResourceProperties class.
     */
    public ProvisioningResourceProperties() {
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the deviceEndpoints property: The provisioning service endpoints.
     * 
     * @return the deviceEndpoints value.
     */
    public DeviceEndpoints deviceEndpoints() {
        return this.deviceEndpoints;
    }

    /**
     * Get the enableOperationalCertificates property: Selecting 'yes' will enable a Microsoft managed PKI to issue
     * certificates. Setting up of the CA and policies for certificate management will be while defining the bumblebee
     * provisioning policy.
     * 
     * @return the enableOperationalCertificates value.
     */
    public boolean enableOperationalCertificates() {
        return this.enableOperationalCertificates;
    }

    /**
     * Set the enableOperationalCertificates property: Selecting 'yes' will enable a Microsoft managed PKI to issue
     * certificates. Setting up of the CA and policies for certificate management will be while defining the bumblebee
     * provisioning policy.
     * 
     * @param enableOperationalCertificates the enableOperationalCertificates value to set.
     * @return the ProvisioningResourceProperties object itself.
     */
    public ProvisioningResourceProperties withEnableOperationalCertificates(boolean enableOperationalCertificates) {
        this.enableOperationalCertificates = enableOperationalCertificates;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deviceEndpoints() != null) {
            deviceEndpoints().validate();
        }
    }
}

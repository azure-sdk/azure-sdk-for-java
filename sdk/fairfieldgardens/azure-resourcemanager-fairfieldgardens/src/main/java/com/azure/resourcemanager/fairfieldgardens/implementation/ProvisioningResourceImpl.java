// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.fairfieldgardens.fluent.models.ProvisioningResourceInner;
import com.azure.resourcemanager.fairfieldgardens.models.DeviceEndpoints;
import com.azure.resourcemanager.fairfieldgardens.models.ProvisioningResource;
import com.azure.resourcemanager.fairfieldgardens.models.ProvisioningResourceUpdate;
import com.azure.resourcemanager.fairfieldgardens.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class ProvisioningResourceImpl
    implements ProvisioningResource, ProvisioningResource.Definition, ProvisioningResource.Update {
    private ProvisioningResourceInner innerObject;

    private final com.azure.resourcemanager.fairfieldgardens.FairfieldgardensManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public DeviceEndpoints deviceEndpoints() {
        return this.innerModel().deviceEndpoints();
    }

    public boolean enableOperationalCertificates() {
        return this.innerModel().enableOperationalCertificates();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ProvisioningResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.fairfieldgardens.FairfieldgardensManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String provisioningResourceName;

    private ProvisioningResourceUpdate updateProperties;

    public ProvisioningResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ProvisioningResource create() {
        this.innerObject = serviceManager.serviceClient().getProvisioningResources().createOrUpdate(resourceGroupName,
            provisioningResourceName, this.innerModel(), Context.NONE);
        return this;
    }

    public ProvisioningResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getProvisioningResources().createOrUpdate(resourceGroupName,
            provisioningResourceName, this.innerModel(), context);
        return this;
    }

    ProvisioningResourceImpl(String name,
        com.azure.resourcemanager.fairfieldgardens.FairfieldgardensManager serviceManager) {
        this.innerObject = new ProvisioningResourceInner();
        this.serviceManager = serviceManager;
        this.provisioningResourceName = name;
    }

    public ProvisioningResourceImpl update() {
        this.updateProperties = new ProvisioningResourceUpdate();
        return this;
    }

    public ProvisioningResource apply() {
        this.innerObject = serviceManager.serviceClient().getProvisioningResources()
            .updateWithResponse(resourceGroupName, provisioningResourceName, updateProperties, Context.NONE).getValue();
        return this;
    }

    public ProvisioningResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getProvisioningResources()
            .updateWithResponse(resourceGroupName, provisioningResourceName, updateProperties, context).getValue();
        return this;
    }

    ProvisioningResourceImpl(ProvisioningResourceInner innerObject,
        com.azure.resourcemanager.fairfieldgardens.FairfieldgardensManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.provisioningResourceName = Utils.getValueFromIdByName(innerObject.id(), "provisioningResources");
    }

    public ProvisioningResource refresh() {
        this.innerObject = serviceManager.serviceClient().getProvisioningResources()
            .getByResourceGroupWithResponse(resourceGroupName, provisioningResourceName, Context.NONE).getValue();
        return this;
    }

    public ProvisioningResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getProvisioningResources()
            .getByResourceGroupWithResponse(resourceGroupName, provisioningResourceName, context).getValue();
        return this;
    }

    public ProvisioningResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ProvisioningResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ProvisioningResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public ProvisioningResourceImpl withEnableOperationalCertificates(boolean enableOperationalCertificates) {
        this.innerModel().withEnableOperationalCertificates(enableOperationalCertificates);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.fairfieldgardens.fluent.models.ProvisioningPolicyUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The type used for update operations of the ProvisioningPolicy.
 */
@Fluent
public final class ProvisioningPolicyUpdate {
    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the ProvisioningPolicy.
     */
    @JsonProperty(value = "properties")
    private ProvisioningPolicyUpdateProperties innerProperties;

    /**
     * Creates an instance of ProvisioningPolicyUpdate class.
     */
    public ProvisioningPolicyUpdate() {
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the ProvisioningPolicy.
     * 
     * @return the innerProperties value.
     */
    private ProvisioningPolicyUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the description property: Description of the policy.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: Description of the policy.
     * 
     * @param description the description value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisioningPolicyUpdateProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the status property: The policy status.
     * 
     * @return the status value.
     */
    public Boolean status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: The policy status.
     * 
     * @param status the status value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withStatus(Boolean status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisioningPolicyUpdateProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the bootstrapAuthentication property: The bootstrap authentication rule.
     * 
     * @return the bootstrapAuthentication value.
     */
    public BootstrapAuthenticationRule bootstrapAuthentication() {
        return this.innerProperties() == null ? null : this.innerProperties().bootstrapAuthentication();
    }

    /**
     * Set the bootstrapAuthentication property: The bootstrap authentication rule.
     * 
     * @param bootstrapAuthentication the bootstrapAuthentication value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withBootstrapAuthentication(BootstrapAuthenticationRule bootstrapAuthentication) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisioningPolicyUpdateProperties();
        }
        this.innerProperties().withBootstrapAuthentication(bootstrapAuthentication);
        return this;
    }

    /**
     * Get the allocations property: Allocation rules.
     * 
     * @return the allocations value.
     */
    public List<AllocationRule> allocations() {
        return this.innerProperties() == null ? null : this.innerProperties().allocations();
    }

    /**
     * Set the allocations property: Allocation rules.
     * 
     * @param allocations the allocations value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withAllocations(List<AllocationRule> allocations) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisioningPolicyUpdateProperties();
        }
        this.innerProperties().withAllocations(allocations);
        return this;
    }

    /**
     * Get the jit property: Just-in-time rule to create the device resource.
     * 
     * @return the jit value.
     */
    public JitRuleUpdate jit() {
        return this.innerProperties() == null ? null : this.innerProperties().jit();
    }

    /**
     * Set the jit property: Just-in-time rule to create the device resource.
     * 
     * @param jit the jit value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withJit(JitRuleUpdate jit) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisioningPolicyUpdateProperties();
        }
        this.innerProperties().withJit(jit);
        return this;
    }

    /**
     * Get the resourceDetails property: Further details about the policy resource.
     * 
     * @return the resourceDetails value.
     */
    public ProvisioningPolicyResourceDetails resourceDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceDetails();
    }

    /**
     * Set the resourceDetails property: Further details about the policy resource.
     * 
     * @param resourceDetails the resourceDetails value to set.
     * @return the ProvisioningPolicyUpdate object itself.
     */
    public ProvisioningPolicyUpdate withResourceDetails(ProvisioningPolicyResourceDetails resourceDetails) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisioningPolicyUpdateProperties();
        }
        this.innerProperties().withResourceDetails(resourceDetails);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.fairfieldgardens.fluent.models.ProvisioningPolicyInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of ProvisioningPolicy.
 */
public interface ProvisioningPolicy {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the description property: Description of the policy.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the status property: The policy status.
     * 
     * @return the status value.
     */
    boolean status();

    /**
     * Gets the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the bootstrapAuthentication property: The bootstrap authentication rule.
     * 
     * @return the bootstrapAuthentication value.
     */
    BootstrapAuthenticationRule bootstrapAuthentication();

    /**
     * Gets the allocations property: Allocation rules.
     * 
     * @return the allocations value.
     */
    List<AllocationRule> allocations();

    /**
     * Gets the jit property: Just-in-time rule to create the device resource.
     * 
     * @return the jit value.
     */
    JitRule jit();

    /**
     * Gets the resourceDetails property: Further details about the policy resource.
     * 
     * @return the resourceDetails value.
     */
    ProvisioningPolicyResourceDetails resourceDetails();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.fairfieldgardens.fluent.models.ProvisioningPolicyInner object.
     * 
     * @return the inner object.
     */
    ProvisioningPolicyInner innerModel();

    /**
     * The entirety of the ProvisioningPolicy definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ProvisioningPolicy definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ProvisioningPolicy definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, provisioningResourceName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param provisioningResourceName The name of the Provisioning Resource.
             * @return the next definition stage.
             */
            WithCreate withExistingProvisioningResource(String resourceGroupName, String provisioningResourceName);
        }

        /**
         * The stage of the ProvisioningPolicy definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithDescription,
            DefinitionStages.WithStatus, DefinitionStages.WithBootstrapAuthentication, DefinitionStages.WithAllocations,
            DefinitionStages.WithJit, DefinitionStages.WithResourceDetails {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ProvisioningPolicy create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ProvisioningPolicy create(Context context);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: Description of the policy.
             * 
             * @param description Description of the policy.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify status.
         */
        interface WithStatus {
            /**
             * Specifies the status property: The policy status.
             * 
             * @param status The policy status.
             * @return the next definition stage.
             */
            WithCreate withStatus(boolean status);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify bootstrapAuthentication.
         */
        interface WithBootstrapAuthentication {
            /**
             * Specifies the bootstrapAuthentication property: The bootstrap authentication rule..
             * 
             * @param bootstrapAuthentication The bootstrap authentication rule.
             * @return the next definition stage.
             */
            WithCreate withBootstrapAuthentication(BootstrapAuthenticationRule bootstrapAuthentication);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify allocations.
         */
        interface WithAllocations {
            /**
             * Specifies the allocations property: Allocation rules..
             * 
             * @param allocations Allocation rules.
             * @return the next definition stage.
             */
            WithCreate withAllocations(List<AllocationRule> allocations);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify jit.
         */
        interface WithJit {
            /**
             * Specifies the jit property: Just-in-time rule to create the device resource..
             * 
             * @param jit Just-in-time rule to create the device resource.
             * @return the next definition stage.
             */
            WithCreate withJit(JitRule jit);
        }

        /**
         * The stage of the ProvisioningPolicy definition allowing to specify resourceDetails.
         */
        interface WithResourceDetails {
            /**
             * Specifies the resourceDetails property: Further details about the policy resource.
             * 
             * @param resourceDetails Further details about the policy resource.
             * @return the next definition stage.
             */
            WithCreate withResourceDetails(ProvisioningPolicyResourceDetails resourceDetails);
        }
    }

    /**
     * Begins update for the ProvisioningPolicy resource.
     * 
     * @return the stage of resource update.
     */
    ProvisioningPolicy.Update update();

    /**
     * The template for ProvisioningPolicy update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithDescription, UpdateStages.WithStatus,
        UpdateStages.WithBootstrapAuthentication, UpdateStages.WithAllocations, UpdateStages.WithJit,
        UpdateStages.WithResourceDetails {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ProvisioningPolicy apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ProvisioningPolicy apply(Context context);
    }

    /**
     * The ProvisioningPolicy update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ProvisioningPolicy update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the ProvisioningPolicy update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: Description of the policy.
             * 
             * @param description Description of the policy.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the ProvisioningPolicy update allowing to specify status.
         */
        interface WithStatus {
            /**
             * Specifies the status property: The policy status.
             * 
             * @param status The policy status.
             * @return the next definition stage.
             */
            Update withStatus(Boolean status);
        }

        /**
         * The stage of the ProvisioningPolicy update allowing to specify bootstrapAuthentication.
         */
        interface WithBootstrapAuthentication {
            /**
             * Specifies the bootstrapAuthentication property: The bootstrap authentication rule..
             * 
             * @param bootstrapAuthentication The bootstrap authentication rule.
             * @return the next definition stage.
             */
            Update withBootstrapAuthentication(BootstrapAuthenticationRule bootstrapAuthentication);
        }

        /**
         * The stage of the ProvisioningPolicy update allowing to specify allocations.
         */
        interface WithAllocations {
            /**
             * Specifies the allocations property: Allocation rules..
             * 
             * @param allocations Allocation rules.
             * @return the next definition stage.
             */
            Update withAllocations(List<AllocationRule> allocations);
        }

        /**
         * The stage of the ProvisioningPolicy update allowing to specify jit.
         */
        interface WithJit {
            /**
             * Specifies the jit property: Just-in-time rule to create the device resource..
             * 
             * @param jit Just-in-time rule to create the device resource.
             * @return the next definition stage.
             */
            Update withJit(JitRuleUpdate jit);
        }

        /**
         * The stage of the ProvisioningPolicy update allowing to specify resourceDetails.
         */
        interface WithResourceDetails {
            /**
             * Specifies the resourceDetails property: Further details about the policy resource.
             * 
             * @param resourceDetails Further details about the policy resource.
             * @return the next definition stage.
             */
            Update withResourceDetails(ProvisioningPolicyResourceDetails resourceDetails);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ProvisioningPolicy refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ProvisioningPolicy refresh(Context context);
}

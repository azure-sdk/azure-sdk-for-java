// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.fairfieldgardens.models.AllocationRule;
import com.azure.resourcemanager.fairfieldgardens.models.BootstrapAuthenticationRule;
import com.azure.resourcemanager.fairfieldgardens.models.JitRuleUpdate;
import com.azure.resourcemanager.fairfieldgardens.models.ProvisioningPolicyResourceDetails;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The updatable properties of the ProvisioningPolicy.
 */
@Fluent
public final class ProvisioningPolicyUpdateProperties {
    /*
     * Description of the policy
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The policy status
     */
    @JsonProperty(value = "status")
    private Boolean status;

    /*
     * The bootstrap authentication rule.
     */
    @JsonProperty(value = "bootstrapAuthentication")
    private BootstrapAuthenticationRule bootstrapAuthentication;

    /*
     * Allocation rules.
     */
    @JsonProperty(value = "allocations")
    private List<AllocationRule> allocations;

    /*
     * Just-in-time rule to create the device resource.
     */
    @JsonProperty(value = "jit")
    private JitRuleUpdate jit;

    /*
     * Further details about the policy resource
     */
    @JsonProperty(value = "resourceDetails")
    private ProvisioningPolicyResourceDetails resourceDetails;

    /**
     * Creates an instance of ProvisioningPolicyUpdateProperties class.
     */
    public ProvisioningPolicyUpdateProperties() {
    }

    /**
     * Get the description property: Description of the policy.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the policy.
     * 
     * @param description the description value to set.
     * @return the ProvisioningPolicyUpdateProperties object itself.
     */
    public ProvisioningPolicyUpdateProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the status property: The policy status.
     * 
     * @return the status value.
     */
    public Boolean status() {
        return this.status;
    }

    /**
     * Set the status property: The policy status.
     * 
     * @param status the status value to set.
     * @return the ProvisioningPolicyUpdateProperties object itself.
     */
    public ProvisioningPolicyUpdateProperties withStatus(Boolean status) {
        this.status = status;
        return this;
    }

    /**
     * Get the bootstrapAuthentication property: The bootstrap authentication rule.
     * 
     * @return the bootstrapAuthentication value.
     */
    public BootstrapAuthenticationRule bootstrapAuthentication() {
        return this.bootstrapAuthentication;
    }

    /**
     * Set the bootstrapAuthentication property: The bootstrap authentication rule.
     * 
     * @param bootstrapAuthentication the bootstrapAuthentication value to set.
     * @return the ProvisioningPolicyUpdateProperties object itself.
     */
    public ProvisioningPolicyUpdateProperties
        withBootstrapAuthentication(BootstrapAuthenticationRule bootstrapAuthentication) {
        this.bootstrapAuthentication = bootstrapAuthentication;
        return this;
    }

    /**
     * Get the allocations property: Allocation rules.
     * 
     * @return the allocations value.
     */
    public List<AllocationRule> allocations() {
        return this.allocations;
    }

    /**
     * Set the allocations property: Allocation rules.
     * 
     * @param allocations the allocations value to set.
     * @return the ProvisioningPolicyUpdateProperties object itself.
     */
    public ProvisioningPolicyUpdateProperties withAllocations(List<AllocationRule> allocations) {
        this.allocations = allocations;
        return this;
    }

    /**
     * Get the jit property: Just-in-time rule to create the device resource.
     * 
     * @return the jit value.
     */
    public JitRuleUpdate jit() {
        return this.jit;
    }

    /**
     * Set the jit property: Just-in-time rule to create the device resource.
     * 
     * @param jit the jit value to set.
     * @return the ProvisioningPolicyUpdateProperties object itself.
     */
    public ProvisioningPolicyUpdateProperties withJit(JitRuleUpdate jit) {
        this.jit = jit;
        return this;
    }

    /**
     * Get the resourceDetails property: Further details about the policy resource.
     * 
     * @return the resourceDetails value.
     */
    public ProvisioningPolicyResourceDetails resourceDetails() {
        return this.resourceDetails;
    }

    /**
     * Set the resourceDetails property: Further details about the policy resource.
     * 
     * @param resourceDetails the resourceDetails value to set.
     * @return the ProvisioningPolicyUpdateProperties object itself.
     */
    public ProvisioningPolicyUpdateProperties withResourceDetails(ProvisioningPolicyResourceDetails resourceDetails) {
        this.resourceDetails = resourceDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (bootstrapAuthentication() != null) {
            bootstrapAuthentication().validate();
        }
        if (allocations() != null) {
            allocations().forEach(e -> e.validate());
        }
        if (jit() != null) {
            jit().validate();
        }
        if (resourceDetails() != null) {
            resourceDetails().validate();
        }
    }
}

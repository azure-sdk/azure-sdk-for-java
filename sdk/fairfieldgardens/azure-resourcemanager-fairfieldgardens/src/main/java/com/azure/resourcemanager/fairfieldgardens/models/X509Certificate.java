// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fairfieldgardens.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * X509 Certificate.
 */
@Fluent
public final class X509Certificate {
    /*
     * The certificate.
     */
    @JsonProperty(value = "certificate", required = true)
    private String certificate;

    /*
     * Thumbprint extracted from the certificate.
     */
    @JsonProperty(value = "thumbprint", access = JsonProperty.Access.WRITE_ONLY)
    private String thumbprint;

    /*
     * Expiry date for the certificate.
     */
    @JsonProperty(value = "expiryDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime expiryDate;

    /**
     * Creates an instance of X509Certificate class.
     */
    public X509Certificate() {
    }

    /**
     * Get the certificate property: The certificate.
     * 
     * @return the certificate value.
     */
    public String certificate() {
        return this.certificate;
    }

    /**
     * Set the certificate property: The certificate.
     * 
     * @param certificate the certificate value to set.
     * @return the X509Certificate object itself.
     */
    public X509Certificate withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }

    /**
     * Get the thumbprint property: Thumbprint extracted from the certificate.
     * 
     * @return the thumbprint value.
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Get the expiryDate property: Expiry date for the certificate.
     * 
     * @return the expiryDate value.
     */
    public OffsetDateTime expiryDate() {
        return this.expiryDate;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certificate() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property certificate in model X509Certificate"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(X509Certificate.class);
}

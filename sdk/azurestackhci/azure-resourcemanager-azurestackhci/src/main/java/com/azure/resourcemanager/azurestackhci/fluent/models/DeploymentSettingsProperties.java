// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurestackhci.models.DeploymentConfiguration;
import com.azure.resourcemanager.azurestackhci.models.DeploymentMode;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.azure.resourcemanager.azurestackhci.models.ReportedProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * DeploymentSetting properties.
 */
@Fluent
public final class DeploymentSettingsProperties {
    /*
     * DeploymentSetting provisioning state
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Azure resource ids of Arc machines to be part of cluster.
     */
    @JsonProperty(value = "arcNodeResourceIds", required = true)
    private List<String> arcNodeResourceIds;

    /*
     * The deployment mode for cluster deployment.
     */
    @JsonProperty(value = "deploymentMode", required = true)
    private DeploymentMode deploymentMode;

    /*
     * Scale units will contains list of deployment data
     */
    @JsonProperty(value = "deploymentConfiguration", required = true)
    private DeploymentConfiguration deploymentConfiguration;

    /*
     * Deployment Status reported from cluster.
     */
    @JsonProperty(value = "reportedProperties", access = JsonProperty.Access.WRITE_ONLY)
    private ReportedProperties reportedProperties;

    /**
     * Creates an instance of DeploymentSettingsProperties class.
     */
    public DeploymentSettingsProperties() {
    }

    /**
     * Get the provisioningState property: DeploymentSetting provisioning state.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the arcNodeResourceIds property: Azure resource ids of Arc machines to be part of cluster.
     * 
     * @return the arcNodeResourceIds value.
     */
    public List<String> arcNodeResourceIds() {
        return this.arcNodeResourceIds;
    }

    /**
     * Set the arcNodeResourceIds property: Azure resource ids of Arc machines to be part of cluster.
     * 
     * @param arcNodeResourceIds the arcNodeResourceIds value to set.
     * @return the DeploymentSettingsProperties object itself.
     */
    public DeploymentSettingsProperties withArcNodeResourceIds(List<String> arcNodeResourceIds) {
        this.arcNodeResourceIds = arcNodeResourceIds;
        return this;
    }

    /**
     * Get the deploymentMode property: The deployment mode for cluster deployment.
     * 
     * @return the deploymentMode value.
     */
    public DeploymentMode deploymentMode() {
        return this.deploymentMode;
    }

    /**
     * Set the deploymentMode property: The deployment mode for cluster deployment.
     * 
     * @param deploymentMode the deploymentMode value to set.
     * @return the DeploymentSettingsProperties object itself.
     */
    public DeploymentSettingsProperties withDeploymentMode(DeploymentMode deploymentMode) {
        this.deploymentMode = deploymentMode;
        return this;
    }

    /**
     * Get the deploymentConfiguration property: Scale units will contains list of deployment data.
     * 
     * @return the deploymentConfiguration value.
     */
    public DeploymentConfiguration deploymentConfiguration() {
        return this.deploymentConfiguration;
    }

    /**
     * Set the deploymentConfiguration property: Scale units will contains list of deployment data.
     * 
     * @param deploymentConfiguration the deploymentConfiguration value to set.
     * @return the DeploymentSettingsProperties object itself.
     */
    public DeploymentSettingsProperties withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration) {
        this.deploymentConfiguration = deploymentConfiguration;
        return this;
    }

    /**
     * Get the reportedProperties property: Deployment Status reported from cluster.
     * 
     * @return the reportedProperties value.
     */
    public ReportedProperties reportedProperties() {
        return this.reportedProperties;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (arcNodeResourceIds() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property arcNodeResourceIds in model DeploymentSettingsProperties"));
        }
        if (deploymentMode() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property deploymentMode in model DeploymentSettingsProperties"));
        }
        if (deploymentConfiguration() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property deploymentConfiguration in model DeploymentSettingsProperties"));
        } else {
            deploymentConfiguration().validate();
        }
        if (reportedProperties() != null) {
            reportedProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DeploymentSettingsProperties.class);
}

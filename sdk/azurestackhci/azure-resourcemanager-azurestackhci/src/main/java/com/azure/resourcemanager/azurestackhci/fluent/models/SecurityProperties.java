// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.azurestackhci.models.ComplianceAssignmentType;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.azure.resourcemanager.azurestackhci.models.SecurityComplianceStatus;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Security properties of the resource.
 */
@Fluent
public final class SecurityProperties {
    /*
     * Secured Core Compliance Assignment
     */
    @JsonProperty(value = "securedCoreComplianceAssignment")
    private ComplianceAssignmentType securedCoreComplianceAssignment;

    /*
     * Security Compliance Status
     */
    @JsonProperty(value = "securityComplianceStatus", access = JsonProperty.Access.WRITE_ONLY)
    private SecurityComplianceStatus securityComplianceStatus;

    /*
     * The status of the last operation.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of SecurityProperties class.
     */
    public SecurityProperties() {
    }

    /**
     * Get the securedCoreComplianceAssignment property: Secured Core Compliance Assignment.
     * 
     * @return the securedCoreComplianceAssignment value.
     */
    public ComplianceAssignmentType securedCoreComplianceAssignment() {
        return this.securedCoreComplianceAssignment;
    }

    /**
     * Set the securedCoreComplianceAssignment property: Secured Core Compliance Assignment.
     * 
     * @param securedCoreComplianceAssignment the securedCoreComplianceAssignment value to set.
     * @return the SecurityProperties object itself.
     */
    public SecurityProperties
        withSecuredCoreComplianceAssignment(ComplianceAssignmentType securedCoreComplianceAssignment) {
        this.securedCoreComplianceAssignment = securedCoreComplianceAssignment;
        return this;
    }

    /**
     * Get the securityComplianceStatus property: Security Compliance Status.
     * 
     * @return the securityComplianceStatus value.
     */
    public SecurityComplianceStatus securityComplianceStatus() {
        return this.securityComplianceStatus;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (securityComplianceStatus() != null) {
            securityComplianceStatus().validate();
        }
    }
}

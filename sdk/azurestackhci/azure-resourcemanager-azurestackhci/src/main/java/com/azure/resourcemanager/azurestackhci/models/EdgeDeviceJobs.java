// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestackhci.fluent.models.EdgeDeviceJobInner;

/**
 * Resource collection API of EdgeDeviceJobs.
 */
public interface EdgeDeviceJobs {
    /**
     * List EdgeDeviceJob resources by EdgeDevice.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EdgeDeviceJob list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EdgeDeviceJob> listByEdgeDevice(String resourceUri, String edgeDeviceName);

    /**
     * List EdgeDeviceJob resources by EdgeDevice.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EdgeDeviceJob list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EdgeDeviceJob> listByEdgeDevice(String resourceUri, String edgeDeviceName, Context context);

    /**
     * Get a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a EdgeDeviceJob along with {@link Response}.
     */
    Response<EdgeDeviceJob> getWithResponse(String resourceUri, String edgeDeviceName, String jobsName,
        Context context);

    /**
     * Get a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a EdgeDeviceJob.
     */
    EdgeDeviceJob get(String resourceUri, String edgeDeviceName, String jobsName);

    /**
     * Create a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return edgeDevice Jobs resource.
     */
    EdgeDeviceJob createOrUpdate(String resourceUri, String edgeDeviceName, String jobsName,
        EdgeDeviceJobInner resource);

    /**
     * Create a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return edgeDevice Jobs resource.
     */
    EdgeDeviceJob createOrUpdate(String resourceUri, String edgeDeviceName, String jobsName,
        EdgeDeviceJobInner resource, Context context);

    /**
     * Delete a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceUri, String edgeDeviceName, String jobsName);

    /**
     * Delete a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceUri, String edgeDeviceName, String jobsName, Context context);
}

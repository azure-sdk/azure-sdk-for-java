// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurestackhci.fluent.UpdatesClient;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateInner;
import com.azure.resourcemanager.azurestackhci.models.Update;
import com.azure.resourcemanager.azurestackhci.models.Updates;

public final class UpdatesImpl implements Updates {
    private static final ClientLogger LOGGER = new ClientLogger(UpdatesImpl.class);

    private final UpdatesClient innerClient;

    private final com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager;

    public UpdatesImpl(
        UpdatesClient innerClient, com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void post(String resourceGroupName, String clusterName, String updateName) {
        this.serviceClient().post(resourceGroupName, clusterName, updateName);
    }

    public void post(String resourceGroupName, String clusterName, String updateName, Context context) {
        this.serviceClient().post(resourceGroupName, clusterName, updateName, context);
    }

    public PagedIterable<Update> list(String resourceGroupName, String clusterName) {
        PagedIterable<UpdateInner> inner = this.serviceClient().list(resourceGroupName, clusterName);
        return Utils.mapPage(inner, inner1 -> new UpdateImpl(inner1, this.manager()));
    }

    public PagedIterable<Update> list(String resourceGroupName, String clusterName, Context context) {
        PagedIterable<UpdateInner> inner = this.serviceClient().list(resourceGroupName, clusterName, context);
        return Utils.mapPage(inner, inner1 -> new UpdateImpl(inner1, this.manager()));
    }

    public Response<Update> getWithResponse(
        String resourceGroupName, String clusterName, String updateName, Context context) {
        Response<UpdateInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, clusterName, updateName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new UpdateImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Update get(String resourceGroupName, String clusterName, String updateName) {
        UpdateInner inner = this.serviceClient().get(resourceGroupName, clusterName, updateName);
        if (inner != null) {
            return new UpdateImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private UpdatesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.azurestackhci.AzureStackHciManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Payload properties for Validated Solution Recipe for AzureStackHCI Cluster.
 */
@Immutable
public final class AssemblyInfoPayload implements JsonSerializable<AssemblyInfoPayload> {
    /*
     * assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster
     */
    private String identifier;

    /*
     * Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster
     */
    private String hash;

    /*
     * File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster
     */
    private String fileName;

    /*
     * Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster
     */
    private String url;

    /**
     * Creates an instance of AssemblyInfoPayload class.
     */
    public AssemblyInfoPayload() {
    }

    /**
     * Get the identifier property: assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster.
     * 
     * @return the identifier value.
     */
    public String identifier() {
        return this.identifier;
    }

    /**
     * Get the hash property: Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster.
     * 
     * @return the hash value.
     */
    public String hash() {
        return this.hash;
    }

    /**
     * Get the fileName property: File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster.
     * 
     * @return the fileName value.
     */
    public String fileName() {
        return this.fileName;
    }

    /**
     * Get the url property: Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssemblyInfoPayload from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssemblyInfoPayload if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AssemblyInfoPayload.
     */
    public static AssemblyInfoPayload fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AssemblyInfoPayload deserializedAssemblyInfoPayload = new AssemblyInfoPayload();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("identifier".equals(fieldName)) {
                    deserializedAssemblyInfoPayload.identifier = reader.getString();
                } else if ("hash".equals(fieldName)) {
                    deserializedAssemblyInfoPayload.hash = reader.getString();
                } else if ("fileName".equals(fieldName)) {
                    deserializedAssemblyInfoPayload.fileName = reader.getString();
                } else if ("url".equals(fieldName)) {
                    deserializedAssemblyInfoPayload.url = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAssemblyInfoPayload;
        });
    }
}

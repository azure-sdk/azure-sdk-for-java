// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurestackhci.fluent.models.EdgeDeviceJobInner;

/**
 * An instance of this class provides access to all the operations defined in EdgeDeviceJobsClient.
 */
public interface EdgeDeviceJobsClient {
    /**
     * List EdgeDeviceJob resources by EdgeDevice.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EdgeDeviceJob list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EdgeDeviceJobInner> listByEdgeDevice(String resourceUri, String edgeDeviceName);

    /**
     * List EdgeDeviceJob resources by EdgeDevice.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a EdgeDeviceJob list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EdgeDeviceJobInner> listByEdgeDevice(String resourceUri, String edgeDeviceName, Context context);

    /**
     * Get a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a EdgeDeviceJob along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EdgeDeviceJobInner> getWithResponse(String resourceUri, String edgeDeviceName, String jobsName,
        Context context);

    /**
     * Get a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a EdgeDeviceJob.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EdgeDeviceJobInner get(String resourceUri, String edgeDeviceName, String jobsName);

    /**
     * Create a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of edgeDevice Jobs resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EdgeDeviceJobInner>, EdgeDeviceJobInner> beginCreateOrUpdate(String resourceUri,
        String edgeDeviceName, String jobsName, EdgeDeviceJobInner resource);

    /**
     * Create a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of edgeDevice Jobs resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<EdgeDeviceJobInner>, EdgeDeviceJobInner> beginCreateOrUpdate(String resourceUri,
        String edgeDeviceName, String jobsName, EdgeDeviceJobInner resource, Context context);

    /**
     * Create a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return edgeDevice Jobs resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EdgeDeviceJobInner createOrUpdate(String resourceUri, String edgeDeviceName, String jobsName,
        EdgeDeviceJobInner resource);

    /**
     * Create a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return edgeDevice Jobs resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EdgeDeviceJobInner createOrUpdate(String resourceUri, String edgeDeviceName, String jobsName,
        EdgeDeviceJobInner resource, Context context);

    /**
     * Delete a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceUri, String edgeDeviceName, String jobsName);

    /**
     * Delete a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceUri, String edgeDeviceName, String jobsName,
        Context context);

    /**
     * Delete a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String edgeDeviceName, String jobsName);

    /**
     * Delete a EdgeDeviceJob.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param edgeDeviceName The name of the EdgeDevice.
     * @param jobsName Name of EdgeDevice Job.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String edgeDeviceName, String jobsName, Context context);
}

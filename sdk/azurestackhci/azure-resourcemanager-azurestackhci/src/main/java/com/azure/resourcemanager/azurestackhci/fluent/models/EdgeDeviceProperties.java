// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurestackhci.models.DeviceConfiguration;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Edge Device properties.
 */
@Fluent
public final class EdgeDeviceProperties {
    /*
     * Device Configuration
     */
    @JsonProperty(value = "deviceConfiguration", required = true)
    private DeviceConfiguration deviceConfiguration;

    /*
     * Provisioning state of edgeDevice resource
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of EdgeDeviceProperties class.
     */
    public EdgeDeviceProperties() {
    }

    /**
     * Get the deviceConfiguration property: Device Configuration.
     * 
     * @return the deviceConfiguration value.
     */
    public DeviceConfiguration deviceConfiguration() {
        return this.deviceConfiguration;
    }

    /**
     * Set the deviceConfiguration property: Device Configuration.
     * 
     * @param deviceConfiguration the deviceConfiguration value to set.
     * @return the EdgeDeviceProperties object itself.
     */
    public EdgeDeviceProperties withDeviceConfiguration(DeviceConfiguration deviceConfiguration) {
        this.deviceConfiguration = deviceConfiguration;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of edgeDevice resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deviceConfiguration() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property deviceConfiguration in model EdgeDeviceProperties"));
        } else {
            deviceConfiguration().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EdgeDeviceProperties.class);
}

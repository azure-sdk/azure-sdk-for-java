// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.azurestackhci.fluent.models.UpdateInner;
import com.azure.resourcemanager.azurestackhci.models.AvailabilityType;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.azure.resourcemanager.azurestackhci.models.State;
import com.azure.resourcemanager.azurestackhci.models.Update;
import com.azure.resourcemanager.azurestackhci.models.UpdatePrerequisite;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class UpdateImpl implements Update {
    private UpdateInner innerObject;

    private final com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager;

    UpdateImpl(UpdateInner innerObject, com.azure.resourcemanager.azurestackhci.AzureStackHciManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public OffsetDateTime installedDate() {
        return this.innerModel().installedDate();
    }

    public String description() {
        return this.innerModel().description();
    }

    public State state() {
        return this.innerModel().state();
    }

    public List<UpdatePrerequisite> prerequisites() {
        List<UpdatePrerequisite> inner = this.innerModel().prerequisites();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String packagePath() {
        return this.innerModel().packagePath();
    }

    public Float packageSizeInMb() {
        return this.innerModel().packageSizeInMb();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String version() {
        return this.innerModel().version();
    }

    public String publisher() {
        return this.innerModel().publisher();
    }

    public String releaseLink() {
        return this.innerModel().releaseLink();
    }

    public AvailabilityType availabilityType() {
        return this.innerModel().availabilityType();
    }

    public String packageType() {
        return this.innerModel().packageType();
    }

    public String additionalProperties() {
        return this.innerModel().additionalProperties();
    }

    public Float progressPercentage() {
        return this.innerModel().progressPercentage();
    }

    public String notifyMessage() {
        return this.innerModel().notifyMessage();
    }

    public UpdateInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurestackhci.AzureStackHciManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** NodeConfiguration properties. */
@Fluent
public final class NodeConfigurationProperties {
    /*
     * Provisioning state.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The base 64 encoded string for the node configuration with all the ips and nics
     */
    @JsonProperty(value = "nodeConfiguration")
    private String nodeConfiguration;

    /** Creates an instance of NodeConfigurationProperties class. */
    public NodeConfigurationProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the nodeConfiguration property: The base 64 encoded string for the node configuration with all the ips and
     * nics.
     *
     * @return the nodeConfiguration value.
     */
    public String nodeConfiguration() {
        return this.nodeConfiguration;
    }

    /**
     * Set the nodeConfiguration property: The base 64 encoded string for the node configuration with all the ips and
     * nics.
     *
     * @param nodeConfiguration the nodeConfiguration value to set.
     * @return the NodeConfigurationProperties object itself.
     */
    public NodeConfigurationProperties withNodeConfiguration(String nodeConfiguration) {
        this.nodeConfiguration = nodeConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

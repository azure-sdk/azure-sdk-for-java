// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurestackhci.fluent.models.ExtensionInner;
import java.util.List;

/** An immutable client-side representation of Extension. */
public interface Extension {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Provisioning state of the Extension proxy resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the extensionParameters property: Parameters specific to this extension type.
     *
     * @return the extensionParameters value.
     */
    ExtensionParameters extensionParameters();

    /**
     * Gets the aggregateState property: Aggregate state of Arc Extensions across the nodes in this HCI cluster.
     *
     * @return the aggregateState value.
     */
    ExtensionAggregateState aggregateState();

    /**
     * Gets the perNodeExtensionDetails property: State of Arc Extension in each of the nodes.
     *
     * @return the perNodeExtensionDetails value.
     */
    List<PerNodeExtensionState> perNodeExtensionDetails();

    /**
     * Gets the managedBy property: Indicates if the extension is managed by azure or the user.
     *
     * @return the managedBy value.
     */
    ExtensionManagedBy managedBy();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.azurestackhci.fluent.models.ExtensionInner object.
     *
     * @return the inner object.
     */
    ExtensionInner innerModel();

    /** The entirety of the Extension definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The Extension definition stages. */
    interface DefinitionStages {
        /** The first stage of the Extension definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Extension definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, clusterName, arcSettingName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param clusterName The name of the cluster.
             * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.
             * @return the next definition stage.
             */
            WithCreate withExistingArcSetting(String resourceGroupName, String clusterName, String arcSettingName);
        }
        /**
         * The stage of the Extension definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithExtensionParameters {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Extension create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Extension create(Context context);
        }
        /** The stage of the Extension definition allowing to specify extensionParameters. */
        interface WithExtensionParameters {
            /**
             * Specifies the extensionParameters property: Parameters specific to this extension type..
             *
             * @param extensionParameters Parameters specific to this extension type.
             * @return the next definition stage.
             */
            WithCreate withExtensionParameters(ExtensionParameters extensionParameters);
        }
    }
    /**
     * Begins update for the Extension resource.
     *
     * @return the stage of resource update.
     */
    Extension.Update update();

    /** The template for Extension update. */
    interface Update extends UpdateStages.WithExtensionParameters {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Extension apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Extension apply(Context context);
    }
    /** The Extension update stages. */
    interface UpdateStages {
        /** The stage of the Extension update allowing to specify extensionParameters. */
        interface WithExtensionParameters {
            /**
             * Specifies the extensionParameters property: Parameters specific to this extension type..
             *
             * @param extensionParameters Parameters specific to this extension type.
             * @return the next definition stage.
             */
            Update withExtensionParameters(ExtensionParameters extensionParameters);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Extension refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Extension refresh(Context context);

    /**
     * Upgrade a particular Arc Extension of HCI Cluster.
     *
     * @param extensionUpgradeParameters Parameters supplied to the Upgrade Extensions operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void upgrade(ExtensionUpgradeParameters extensionUpgradeParameters);

    /**
     * Upgrade a particular Arc Extension of HCI Cluster.
     *
     * @param extensionUpgradeParameters Parameters supplied to the Upgrade Extensions operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void upgrade(ExtensionUpgradeParameters extensionUpgradeParameters, Context context);
}

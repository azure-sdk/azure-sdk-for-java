// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azurelogistics.fluent.models.ApplicationManagerInner;
import com.azure.resourcemanager.azurelogistics.fluent.models.ApplicationManagerListInner;
import com.azure.resourcemanager.azurelogistics.models.ApplicationManagerPatchResource;

/** An instance of this class provides access to all the operations defined in ApplicationManagersClient. */
public interface ApplicationManagersClient {
    /**
     * Gets an applicationManager.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an applicationManager.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApplicationManagerInner getByResourceGroup(String resourceGroupName, String applicationManagerName);

    /**
     * Gets an applicationManager.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an applicationManager along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ApplicationManagerInner> getByResourceGroupWithResponse(
        String resourceGroupName, String applicationManagerName, Context context);

    /**
     * Creates or updates a applicationManager.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param applicationManager The applicationManager's content to apply.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApplicationManagerInner put(
        String resourceGroupName, String applicationManagerName, ApplicationManagerInner applicationManager);

    /**
     * Creates or updates a applicationManager.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param applicationManager The applicationManager's content to apply.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ApplicationManagerInner> putWithResponse(
        String resourceGroupName,
        String applicationManagerName,
        ApplicationManagerInner applicationManager,
        Context context);

    /**
     * The delete operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String applicationManagerName);

    /**
     * The delete operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String applicationManagerName, Context context);

    /**
     * The delete operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String applicationManagerName);

    /**
     * The delete operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String applicationManagerName, Context context);

    /**
     * Patches applicationManager properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param applicationManagerPatchResource applicationManager patch properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApplicationManagerInner update(
        String resourceGroupName,
        String applicationManagerName,
        ApplicationManagerPatchResource applicationManagerPatchResource);

    /**
     * Patches applicationManager properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param applicationManagerPatchResource applicationManager patch properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ApplicationManagerInner> updateWithResponse(
        String resourceGroupName,
        String applicationManagerName,
        ApplicationManagerPatchResource applicationManagerPatchResource,
        Context context);

    /**
     * Lists a collection of applicationManagers under the given resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of applicationManager resources.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApplicationManagerListInner list(String resourceGroupName);

    /**
     * Lists a collection of applicationManagers under the given resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of applicationManager resources along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ApplicationManagerListInner> listWithResponse(String resourceGroupName, Context context);

    /**
     * Lists a collection of applicationManagers under the given Azure Subscription ID.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of applicationManager resources.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ApplicationManagerListInner listAll();

    /**
     * Lists a collection of applicationManagers under the given Azure Subscription ID.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of applicationManager resources along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ApplicationManagerListInner> listAllWithResponse(Context context);
}

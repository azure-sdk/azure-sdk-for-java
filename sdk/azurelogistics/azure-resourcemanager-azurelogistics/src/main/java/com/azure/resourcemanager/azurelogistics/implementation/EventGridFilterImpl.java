// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurelogistics.fluent.models.EventGridFilterInner;
import com.azure.resourcemanager.azurelogistics.models.EventGridFilter;
import com.azure.resourcemanager.azurelogistics.models.EventGridFilterProperties;

public final class EventGridFilterImpl implements EventGridFilter, EventGridFilter.Definition, EventGridFilter.Update {
    private EventGridFilterInner innerObject;

    private final com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public EventGridFilterProperties properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public EventGridFilterInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurelogistics.AzurelogisticsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String eventGridFilterName;

    public EventGridFilterImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public EventGridFilter create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getEventGridWorkspaceFilters()
                .putWithResponse(resourceGroupName, workspaceName, eventGridFilterName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public EventGridFilter create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getEventGridWorkspaceFilters()
                .putWithResponse(resourceGroupName, workspaceName, eventGridFilterName, this.innerModel(), context)
                .getValue();
        return this;
    }

    EventGridFilterImpl(String name, com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerObject = new EventGridFilterInner();
        this.serviceManager = serviceManager;
        this.eventGridFilterName = name;
    }

    public EventGridFilterImpl update() {
        return this;
    }

    public EventGridFilter apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getEventGridWorkspaceFilters()
                .putWithResponse(resourceGroupName, workspaceName, eventGridFilterName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public EventGridFilter apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getEventGridWorkspaceFilters()
                .putWithResponse(resourceGroupName, workspaceName, eventGridFilterName, this.innerModel(), context)
                .getValue();
        return this;
    }

    EventGridFilterImpl(
        EventGridFilterInner innerObject,
        com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.eventGridFilterName = Utils.getValueFromIdByName(innerObject.id(), "eventGridFilters");
    }

    public EventGridFilter refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getEventGridWorkspaceFilters()
                .getWithResponse(resourceGroupName, workspaceName, eventGridFilterName, Context.NONE)
                .getValue();
        return this;
    }

    public EventGridFilter refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getEventGridWorkspaceFilters()
                .getWithResponse(resourceGroupName, workspaceName, eventGridFilterName, context)
                .getValue();
        return this;
    }

    public EventGridFilterImpl withProperties(EventGridFilterProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

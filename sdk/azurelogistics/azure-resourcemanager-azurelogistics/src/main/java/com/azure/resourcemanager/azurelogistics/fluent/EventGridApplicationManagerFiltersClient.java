// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurelogistics.fluent.models.EventGridFilterInner;

/**
 * An instance of this class provides access to all the operations defined in EventGridApplicationManagerFiltersClient.
 */
public interface EventGridApplicationManagerFiltersClient {
    /**
     * The get operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param eventGridFilterName The name of resource. This is the name of your Azure Supply Chain Service's workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EventGridFilterInner get(String resourceGroupName, String applicationManagerName, String eventGridFilterName);

    /**
     * The get operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param eventGridFilterName The name of resource. This is the name of your Azure Supply Chain Service's workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EventGridFilterInner> getWithResponse(
        String resourceGroupName, String applicationManagerName, String eventGridFilterName, Context context);

    /**
     * The put operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param eventGridFilterName The name of resource. This is the name of your Azure Supply Chain Service's workspace.
     * @param eventGridFilter The eventGridFilter parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EventGridFilterInner put(
        String resourceGroupName,
        String applicationManagerName,
        String eventGridFilterName,
        EventGridFilterInner eventGridFilter);

    /**
     * The put operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param eventGridFilterName The name of resource. This is the name of your Azure Supply Chain Service's workspace.
     * @param eventGridFilter The eventGridFilter parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EventGridFilterInner> putWithResponse(
        String resourceGroupName,
        String applicationManagerName,
        String eventGridFilterName,
        EventGridFilterInner eventGridFilter,
        Context context);

    /**
     * The delete operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param eventGridFilterName The name of resource. This is the name of your Azure Supply Chain Service's workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String applicationManagerName, String eventGridFilterName);

    /**
     * The delete operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param eventGridFilterName The name of resource. This is the name of your Azure Supply Chain Service's workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String applicationManagerName, String eventGridFilterName, Context context);

    /**
     * The list operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of event grid filter resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EventGridFilterInner> list(String resourceGroupName, String applicationManagerName);

    /**
     * The list operation.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param applicationManagerName The name of resource. This is the name of your Azure Supply Chain Service's
     *     applicationManager.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of event grid filter resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EventGridFilterInner> list(String resourceGroupName, String applicationManagerName, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** The ApplicationProperties model. */
@Fluent
public final class ApplicationProperties {
    /*
     * Name to display for application to register
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Manifest id for application to register
     */
    @JsonProperty(value = "applicationDefinitionId")
    private String applicationDefinitionId;

    /*
     * Parameters required by application to register, should match parameters in application manifest
     */
    @JsonProperty(value = "parameters")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> parameters;

    /*
     * List of resources required by application to register, e.g. share. should match resources in application
     * manifest
     */
    @JsonProperty(value = "resources")
    private List<ApplicationResource> resources;

    /*
     * The provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ApplicationProvisioningState provisioningState;

    /*
     * ISV provided status on application
     */
    @JsonProperty(value = "status")
    private String status;

    /**
     * Get the displayName property: Name to display for application to register.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Name to display for application to register.
     *
     * @param displayName the displayName value to set.
     * @return the ApplicationProperties object itself.
     */
    public ApplicationProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the applicationDefinitionId property: Manifest id for application to register.
     *
     * @return the applicationDefinitionId value.
     */
    public String applicationDefinitionId() {
        return this.applicationDefinitionId;
    }

    /**
     * Set the applicationDefinitionId property: Manifest id for application to register.
     *
     * @param applicationDefinitionId the applicationDefinitionId value to set.
     * @return the ApplicationProperties object itself.
     */
    public ApplicationProperties withApplicationDefinitionId(String applicationDefinitionId) {
        this.applicationDefinitionId = applicationDefinitionId;
        return this;
    }

    /**
     * Get the parameters property: Parameters required by application to register, should match parameters in
     * application manifest.
     *
     * @return the parameters value.
     */
    public Map<String, String> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Parameters required by application to register, should match parameters in
     * application manifest.
     *
     * @param parameters the parameters value to set.
     * @return the ApplicationProperties object itself.
     */
    public ApplicationProperties withParameters(Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the resources property: List of resources required by application to register, e.g. share. should match
     * resources in application manifest.
     *
     * @return the resources value.
     */
    public List<ApplicationResource> resources() {
        return this.resources;
    }

    /**
     * Set the resources property: List of resources required by application to register, e.g. share. should match
     * resources in application manifest.
     *
     * @param resources the resources value to set.
     * @return the ApplicationProperties object itself.
     */
    public ApplicationProperties withResources(List<ApplicationResource> resources) {
        this.resources = resources;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ApplicationProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the status property: ISV provided status on application.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: ISV provided status on application.
     *
     * @param status the status value to set.
     * @return the ApplicationProperties object itself.
     */
    public ApplicationProperties withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resources() != null) {
            resources().forEach(e -> e.validate());
        }
    }
}

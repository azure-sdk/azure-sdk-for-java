// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for ApplicationManagerProvisioningState. */
public final class ApplicationManagerProvisioningState
    extends ExpandableStringEnum<ApplicationManagerProvisioningState> {
    /** Static value Accepted for ApplicationManagerProvisioningState. */
    public static final ApplicationManagerProvisioningState ACCEPTED = fromString("Accepted");

    /** Static value Succeeded for ApplicationManagerProvisioningState. */
    public static final ApplicationManagerProvisioningState SUCCEEDED = fromString("Succeeded");

    /** Static value Creating for ApplicationManagerProvisioningState. */
    public static final ApplicationManagerProvisioningState CREATING = fromString("Creating");

    /** Static value Deleting for ApplicationManagerProvisioningState. */
    public static final ApplicationManagerProvisioningState DELETING = fromString("Deleting");

    /** Static value Failed for ApplicationManagerProvisioningState. */
    public static final ApplicationManagerProvisioningState FAILED = fromString("Failed");

    /**
     * Creates or finds a ApplicationManagerProvisioningState from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding ApplicationManagerProvisioningState.
     */
    @JsonCreator
    public static ApplicationManagerProvisioningState fromString(String name) {
        return fromString(name, ApplicationManagerProvisioningState.class);
    }

    /**
     * Gets known ApplicationManagerProvisioningState values.
     *
     * @return known ApplicationManagerProvisioningState values.
     */
    public static Collection<ApplicationManagerProvisioningState> values() {
        return values(ApplicationManagerProvisioningState.class);
    }
}

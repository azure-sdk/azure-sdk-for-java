// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurelogistics.fluent.models.ApplicationManagerInner;
import com.azure.resourcemanager.azurelogistics.models.ApplicationManager;
import com.azure.resourcemanager.azurelogistics.models.ApplicationManagerPatchResource;
import com.azure.resourcemanager.azurelogistics.models.ApplicationManagerProperties;
import java.util.Collections;
import java.util.Map;

public final class ApplicationManagerImpl
    implements ApplicationManager, ApplicationManager.Definition, ApplicationManager.Update {
    private ApplicationManagerInner innerObject;

    private final com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ApplicationManagerProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApplicationManagerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurelogistics.AzurelogisticsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String applicationManagerName;

    private ApplicationManagerPatchResource updateApplicationManagerPatchResource;

    public ApplicationManagerImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ApplicationManager create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationManagers()
                .putWithResponse(resourceGroupName, applicationManagerName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationManager create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationManagers()
                .putWithResponse(resourceGroupName, applicationManagerName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ApplicationManagerImpl(String name, com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerObject = new ApplicationManagerInner();
        this.serviceManager = serviceManager;
        this.applicationManagerName = name;
    }

    public ApplicationManagerImpl update() {
        this.updateApplicationManagerPatchResource = new ApplicationManagerPatchResource();
        return this;
    }

    public ApplicationManager apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationManagers()
                .updateWithResponse(
                    resourceGroupName, applicationManagerName, updateApplicationManagerPatchResource, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationManager apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationManagers()
                .updateWithResponse(
                    resourceGroupName, applicationManagerName, updateApplicationManagerPatchResource, context)
                .getValue();
        return this;
    }

    ApplicationManagerImpl(
        ApplicationManagerInner innerObject,
        com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.applicationManagerName = Utils.getValueFromIdByName(innerObject.id(), "applicationManagers");
    }

    public ApplicationManager refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationManagers()
                .getByResourceGroupWithResponse(resourceGroupName, applicationManagerName, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationManager refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationManagers()
                .getByResourceGroupWithResponse(resourceGroupName, applicationManagerName, context)
                .getValue();
        return this;
    }

    public ApplicationManagerImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ApplicationManagerImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ApplicationManagerImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateApplicationManagerPatchResource.withTags(tags);
            return this;
        }
    }

    public ApplicationManagerImpl withProperties(ApplicationManagerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurelogistics.fluent.models.ShareInner;
import com.azure.resourcemanager.azurelogistics.models.Share;
import com.azure.resourcemanager.azurelogistics.models.ShareProperties;
import java.util.Collections;
import java.util.Map;

public final class ShareImpl implements Share, Share.Definition, Share.Update {
    private ShareInner innerObject;

    private final com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ShareProperties properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ShareInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurelogistics.AzurelogisticsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String shareName;

    public ShareImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Share create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getShares()
                .putWithResponse(resourceGroupName, workspaceName, shareName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Share create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getShares()
                .putWithResponse(resourceGroupName, workspaceName, shareName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ShareImpl(String name, com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerObject = new ShareInner();
        this.serviceManager = serviceManager;
        this.shareName = name;
    }

    public ShareImpl update() {
        return this;
    }

    public Share apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getShares()
                .updateWithResponse(resourceGroupName, workspaceName, shareName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Share apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getShares()
                .updateWithResponse(resourceGroupName, workspaceName, shareName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ShareImpl(ShareInner innerObject, com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.shareName = Utils.getValueFromIdByName(innerObject.id(), "shares");
    }

    public Share refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getShares()
                .getWithResponse(resourceGroupName, workspaceName, shareName, Context.NONE)
                .getValue();
        return this;
    }

    public Share refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getShares()
                .getWithResponse(resourceGroupName, workspaceName, shareName, context)
                .getValue();
        return this;
    }

    public ShareImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ShareImpl withProperties(ShareProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

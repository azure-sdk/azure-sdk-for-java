// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurelogistics.fluent.NamespacesClient;
import com.azure.resourcemanager.azurelogistics.fluent.models.CheckNameAvailabilityResultInner;
import com.azure.resourcemanager.azurelogistics.models.CheckNameAvailabilityResult;
import com.azure.resourcemanager.azurelogistics.models.NameAvailabilityRequest;
import com.azure.resourcemanager.azurelogistics.models.Namespaces;

public final class NamespacesImpl implements Namespaces {
    private static final ClientLogger LOGGER = new ClientLogger(NamespacesImpl.class);

    private final NamespacesClient innerClient;

    private final com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager;

    public NamespacesImpl(
        NamespacesClient innerClient, com.azure.resourcemanager.azurelogistics.AzurelogisticsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public CheckNameAvailabilityResult checkNameAvailability(NameAvailabilityRequest nameAvailabilityRequest) {
        CheckNameAvailabilityResultInner inner = this.serviceClient().checkNameAvailability(nameAvailabilityRequest);
        if (inner != null) {
            return new CheckNameAvailabilityResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CheckNameAvailabilityResult> checkNameAvailabilityWithResponse(
        NameAvailabilityRequest nameAvailabilityRequest, Context context) {
        Response<CheckNameAvailabilityResultInner> inner =
            this.serviceClient().checkNameAvailabilityWithResponse(nameAvailabilityRequest, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new CheckNameAvailabilityResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private NamespacesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.azurelogistics.AzurelogisticsManager manager() {
        return this.serviceManager;
    }
}

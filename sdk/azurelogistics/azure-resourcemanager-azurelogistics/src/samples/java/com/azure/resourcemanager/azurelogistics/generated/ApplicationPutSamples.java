// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelogistics.generated;

import com.azure.resourcemanager.azurelogistics.models.AccessAssignment;
import com.azure.resourcemanager.azurelogistics.models.ApplicationProperties;
import com.azure.resourcemanager.azurelogistics.models.ApplicationResource;
import com.azure.resourcemanager.azurelogistics.models.ApplicationResourceShareProperties;
import com.azure.resourcemanager.azurelogistics.models.AttributeCondition;
import com.azure.resourcemanager.azurelogistics.models.AttributeMatchingScheme;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for Application Put. */
public final class ApplicationPutSamples {
    /*
     * x-ms-original-file: specification/azurelogistics/resource-manager/Microsoft.OpenLogisticsPlatform/stable/2022-08-01/examples/Application_Put.json
     */
    /**
     * Sample code: Application Put.
     *
     * @param manager Entry point to AzurelogisticsManager.
     */
    public static void applicationPut(com.azure.resourcemanager.azurelogistics.AzurelogisticsManager manager) {
        manager
            .applications()
            .define("sampleapplication")
            .withExistingWorkspace("mygroup", "contosoWorkspace")
            .withProperties(
                new ApplicationProperties()
                    .withDisplayName("sample application name")
                    .withApplicationDefinitionId("oscp.manifest1")
                    .withParameters(mapOf("SampleInput1", "123", "SampleInput2", "XYZ"))
                    .withResources(
                        Arrays
                            .asList(
                                new ApplicationResource()
                                    .withType("shares")
                                    .withProperties(
                                        new ApplicationResourceShareProperties()
                                            .withAccessAssignments(
                                                Arrays
                                                    .asList(
                                                        new AccessAssignment()
                                                            .withActionIds(
                                                                Arrays
                                                                    .asList(
                                                                        "Microsoft.OpenLogisticsPlatform/workspaces/items/read"))
                                                            .withAttributeConditions(
                                                                Arrays
                                                                    .asList(
                                                                        new AttributeCondition()
                                                                            .withAttributeName(
                                                                                "Microsoft.OLP/workspaces/item/label")
                                                                            .withValues(
                                                                                Arrays
                                                                                    .asList(
                                                                                        "some_value1",
                                                                                        "some_value2",
                                                                                        "some_value3"))
                                                                            .withAttributeMatchingScheme(
                                                                                AttributeMatchingScheme
                                                                                    .ALLOFANY)))))))))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

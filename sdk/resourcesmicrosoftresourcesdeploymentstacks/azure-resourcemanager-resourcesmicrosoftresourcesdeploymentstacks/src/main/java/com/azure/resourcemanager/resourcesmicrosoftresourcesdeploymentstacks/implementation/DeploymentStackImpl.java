// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.Context;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.fluent.models.DeploymentStackInner;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.ActionOnUnmanage;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DenySettings;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentParameter;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStack;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStackProvisioningState;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStackTemplateDefinition;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStackValidateResult;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStacksDebugSetting;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStacksParametersLink;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.DeploymentStacksTemplateLink;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.ManagedResourceReference;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.ResourceReference;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.models.ResourceReferenceExtended;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class DeploymentStackImpl implements DeploymentStack, DeploymentStack.Definition, DeploymentStack.Update {
    private DeploymentStackInner innerObject;

    private final com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.DeploymentStacksManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Object template() {
        return this.innerModel().template();
    }

    public DeploymentStacksTemplateLink templateLink() {
        return this.innerModel().templateLink();
    }

    public Map<String, DeploymentParameter> parameters() {
        Map<String, DeploymentParameter> inner = this.innerModel().parameters();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public DeploymentStacksParametersLink parametersLink() {
        return this.innerModel().parametersLink();
    }

    public ActionOnUnmanage actionOnUnmanage() {
        return this.innerModel().actionOnUnmanage();
    }

    public DeploymentStacksDebugSetting debugSetting() {
        return this.innerModel().debugSetting();
    }

    public Boolean bypassStackOutOfSyncError() {
        return this.innerModel().bypassStackOutOfSyncError();
    }

    public String deploymentScope() {
        return this.innerModel().deploymentScope();
    }

    public String description() {
        return this.innerModel().description();
    }

    public DenySettings denySettings() {
        return this.innerModel().denySettings();
    }

    public DeploymentStackProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String correlationId() {
        return this.innerModel().correlationId();
    }

    public List<ResourceReference> detachedResources() {
        List<ResourceReference> inner = this.innerModel().detachedResources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ResourceReference> deletedResources() {
        List<ResourceReference> inner = this.innerModel().deletedResources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ResourceReferenceExtended> failedResources() {
        List<ResourceReferenceExtended> inner = this.innerModel().failedResources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ManagedResourceReference> resources() {
        List<ManagedResourceReference> inner = this.innerModel().resources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String deploymentId() {
        return this.innerModel().deploymentId();
    }

    public Object outputs() {
        return this.innerModel().outputs();
    }

    public String duration() {
        return this.innerModel().duration();
    }

    public ManagementError error() {
        return this.innerModel().error();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DeploymentStackInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.DeploymentStacksManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String deploymentStackName;

    public DeploymentStackImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public DeploymentStack create() {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), Context.NONE);
        return this;
    }

    public DeploymentStack create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), context);
        return this;
    }

    DeploymentStackImpl(String name,
        com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.DeploymentStacksManager serviceManager) {
        this.innerObject = new DeploymentStackInner();
        this.serviceManager = serviceManager;
        this.deploymentStackName = name;
    }

    public DeploymentStackImpl update() {
        return this;
    }

    public DeploymentStack apply() {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), Context.NONE);
        return this;
    }

    public DeploymentStack apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .createOrUpdateAtResourceGroup(resourceGroupName, deploymentStackName, this.innerModel(), context);
        return this;
    }

    DeploymentStackImpl(DeploymentStackInner innerObject,
        com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentstacks.DeploymentStacksManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.deploymentStackName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "deploymentStacks");
    }

    public DeploymentStack refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .getByResourceGroupWithResponse(resourceGroupName, deploymentStackName, Context.NONE)
            .getValue();
        return this;
    }

    public DeploymentStack refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDeploymentStacks()
            .getByResourceGroupWithResponse(resourceGroupName, deploymentStackName, context)
            .getValue();
        return this;
    }

    public Response<DeploymentStackTemplateDefinition> exportTemplateAtResourceGroupWithResponse(Context context) {
        return serviceManager.deploymentStacks()
            .exportTemplateAtResourceGroupWithResponse(resourceGroupName, deploymentStackName, context);
    }

    public DeploymentStackTemplateDefinition exportTemplateAtResourceGroup() {
        return serviceManager.deploymentStacks().exportTemplateAtResourceGroup(resourceGroupName, deploymentStackName);
    }

    public DeploymentStackValidateResult validateStackAtResourceGroup(DeploymentStackInner deploymentStack) {
        return serviceManager.deploymentStacks()
            .validateStackAtResourceGroup(resourceGroupName, deploymentStackName, deploymentStack);
    }

    public DeploymentStackValidateResult validateStackAtResourceGroup(DeploymentStackInner deploymentStack,
        Context context) {
        return serviceManager.deploymentStacks()
            .validateStackAtResourceGroup(resourceGroupName, deploymentStackName, deploymentStack, context);
    }

    public DeploymentStackImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public DeploymentStackImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public DeploymentStackImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public DeploymentStackImpl withTemplate(Object template) {
        this.innerModel().withTemplate(template);
        return this;
    }

    public DeploymentStackImpl withTemplateLink(DeploymentStacksTemplateLink templateLink) {
        this.innerModel().withTemplateLink(templateLink);
        return this;
    }

    public DeploymentStackImpl withParameters(Map<String, DeploymentParameter> parameters) {
        this.innerModel().withParameters(parameters);
        return this;
    }

    public DeploymentStackImpl withParametersLink(DeploymentStacksParametersLink parametersLink) {
        this.innerModel().withParametersLink(parametersLink);
        return this;
    }

    public DeploymentStackImpl withActionOnUnmanage(ActionOnUnmanage actionOnUnmanage) {
        this.innerModel().withActionOnUnmanage(actionOnUnmanage);
        return this;
    }

    public DeploymentStackImpl withDebugSetting(DeploymentStacksDebugSetting debugSetting) {
        this.innerModel().withDebugSetting(debugSetting);
        return this;
    }

    public DeploymentStackImpl withBypassStackOutOfSyncError(Boolean bypassStackOutOfSyncError) {
        this.innerModel().withBypassStackOutOfSyncError(bypassStackOutOfSyncError);
        return this;
    }

    public DeploymentStackImpl withDeploymentScope(String deploymentScope) {
        this.innerModel().withDeploymentScope(deploymentScope);
        return this;
    }

    public DeploymentStackImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public DeploymentStackImpl withDenySettings(DenySettings denySettings) {
        this.innerModel().withDenySettings(denySettings);
        return this;
    }

    public DeploymentStackImpl withError(ManagementError error) {
        this.innerModel().withError(error);
        return this;
    }
}

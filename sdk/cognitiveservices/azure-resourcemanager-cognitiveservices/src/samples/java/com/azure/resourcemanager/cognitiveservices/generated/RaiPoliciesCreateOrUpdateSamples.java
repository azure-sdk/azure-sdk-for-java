// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.generated;

import com.azure.resourcemanager.cognitiveservices.models.ContentLevel;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentFilter;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyContentSource;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyMode;
import com.azure.resourcemanager.cognitiveservices.models.RaiPolicyProperties;
import java.util.Arrays;

/**
 * Samples for RaiPolicies CreateOrUpdate.
 */
public final class RaiPoliciesCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/cognitiveservices/resource-manager/Microsoft.CognitiveServices/stable/2024-10-01/examples/
     * PutRaiPolicy.json
     */
    /**
     * Sample code: PutRaiPolicy.
     * 
     * @param manager Entry point to CognitiveServicesManager.
     */
    public static void putRaiPolicy(com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager manager) {
        manager.raiPolicies()
            .define("raiPolicyName")
            .withExistingAccount("resourceGroupName", "accountName")
            .withProperties(new RaiPolicyProperties().withMode(RaiPolicyMode.ASYNCHRONOUS_FILTER)
                .withBasePolicyName("Microsoft.Default")
                .withContentFilters(Arrays.asList(
                    new RaiPolicyContentFilter().withName("hate")
                        .withEnabled(false)
                        .withSeverityThreshold(ContentLevel.HIGH)
                        .withBlocking(false)
                        .withSource(RaiPolicyContentSource.PROMPT),
                    new RaiPolicyContentFilter().withName("hate")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.MEDIUM)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.COMPLETION),
                    new RaiPolicyContentFilter().withName("sexual")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.HIGH)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.PROMPT),
                    new RaiPolicyContentFilter().withName("sexual")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.MEDIUM)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.COMPLETION),
                    new RaiPolicyContentFilter().withName("selfharm")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.HIGH)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.PROMPT),
                    new RaiPolicyContentFilter().withName("selfharm")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.MEDIUM)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.COMPLETION),
                    new RaiPolicyContentFilter().withName("violence")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.MEDIUM)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.PROMPT),
                    new RaiPolicyContentFilter().withName("violence")
                        .withEnabled(true)
                        .withSeverityThreshold(ContentLevel.MEDIUM)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.COMPLETION),
                    new RaiPolicyContentFilter().withName("jailbreak")
                        .withEnabled(true)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.PROMPT),
                    new RaiPolicyContentFilter().withName("protected_material_text")
                        .withEnabled(true)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.COMPLETION),
                    new RaiPolicyContentFilter().withName("protected_material_code")
                        .withEnabled(true)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.COMPLETION),
                    new RaiPolicyContentFilter().withName("profanity")
                        .withEnabled(true)
                        .withBlocking(true)
                        .withSource(RaiPolicyContentSource.PROMPT))))
            .create();
    }
}

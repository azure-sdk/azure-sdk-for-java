// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The Properties of Network Security Perimeter Rule.
 */
@Fluent
public final class NetworkSecurityPerimeterAccessRuleProperties {
    /*
     * Direction of Access Rule
     */
    @JsonProperty(value = "direction")
    private NspAccessRuleDirection direction;

    /*
     * Address prefixes for inbound rules
     */
    @JsonProperty(value = "addressPrefixes")
    private List<String> addressPrefixes;

    /*
     * Subscriptions for inbound rules
     */
    @JsonProperty(value = "subscriptions")
    private List<NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem> subscriptions;

    /*
     * NetworkSecurityPerimeters for inbound rules
     */
    @JsonProperty(value = "networkSecurityPerimeters")
    private List<NetworkSecurityPerimeter> networkSecurityPerimeters;

    /*
     * Fully qualified domain name for outbound rules
     */
    @JsonProperty(value = "fullyQualifiedDomainNames")
    private List<String> fullyQualifiedDomainNames;

    /**
     * Creates an instance of NetworkSecurityPerimeterAccessRuleProperties class.
     */
    public NetworkSecurityPerimeterAccessRuleProperties() {
    }

    /**
     * Get the direction property: Direction of Access Rule.
     * 
     * @return the direction value.
     */
    public NspAccessRuleDirection direction() {
        return this.direction;
    }

    /**
     * Set the direction property: Direction of Access Rule.
     * 
     * @param direction the direction value to set.
     * @return the NetworkSecurityPerimeterAccessRuleProperties object itself.
     */
    public NetworkSecurityPerimeterAccessRuleProperties withDirection(NspAccessRuleDirection direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Get the addressPrefixes property: Address prefixes for inbound rules.
     * 
     * @return the addressPrefixes value.
     */
    public List<String> addressPrefixes() {
        return this.addressPrefixes;
    }

    /**
     * Set the addressPrefixes property: Address prefixes for inbound rules.
     * 
     * @param addressPrefixes the addressPrefixes value to set.
     * @return the NetworkSecurityPerimeterAccessRuleProperties object itself.
     */
    public NetworkSecurityPerimeterAccessRuleProperties withAddressPrefixes(List<String> addressPrefixes) {
        this.addressPrefixes = addressPrefixes;
        return this;
    }

    /**
     * Get the subscriptions property: Subscriptions for inbound rules.
     * 
     * @return the subscriptions value.
     */
    public List<NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem> subscriptions() {
        return this.subscriptions;
    }

    /**
     * Set the subscriptions property: Subscriptions for inbound rules.
     * 
     * @param subscriptions the subscriptions value to set.
     * @return the NetworkSecurityPerimeterAccessRuleProperties object itself.
     */
    public NetworkSecurityPerimeterAccessRuleProperties
        withSubscriptions(List<NetworkSecurityPerimeterAccessRulePropertiesSubscriptionsItem> subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }

    /**
     * Get the networkSecurityPerimeters property: NetworkSecurityPerimeters for inbound rules.
     * 
     * @return the networkSecurityPerimeters value.
     */
    public List<NetworkSecurityPerimeter> networkSecurityPerimeters() {
        return this.networkSecurityPerimeters;
    }

    /**
     * Set the networkSecurityPerimeters property: NetworkSecurityPerimeters for inbound rules.
     * 
     * @param networkSecurityPerimeters the networkSecurityPerimeters value to set.
     * @return the NetworkSecurityPerimeterAccessRuleProperties object itself.
     */
    public NetworkSecurityPerimeterAccessRuleProperties
        withNetworkSecurityPerimeters(List<NetworkSecurityPerimeter> networkSecurityPerimeters) {
        this.networkSecurityPerimeters = networkSecurityPerimeters;
        return this;
    }

    /**
     * Get the fullyQualifiedDomainNames property: Fully qualified domain name for outbound rules.
     * 
     * @return the fullyQualifiedDomainNames value.
     */
    public List<String> fullyQualifiedDomainNames() {
        return this.fullyQualifiedDomainNames;
    }

    /**
     * Set the fullyQualifiedDomainNames property: Fully qualified domain name for outbound rules.
     * 
     * @param fullyQualifiedDomainNames the fullyQualifiedDomainNames value to set.
     * @return the NetworkSecurityPerimeterAccessRuleProperties object itself.
     */
    public NetworkSecurityPerimeterAccessRuleProperties
        withFullyQualifiedDomainNames(List<String> fullyQualifiedDomainNames) {
        this.fullyQualifiedDomainNames = fullyQualifiedDomainNames;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (subscriptions() != null) {
            subscriptions().forEach(e -> e.validate());
        }
        if (networkSecurityPerimeters() != null) {
            networkSecurityPerimeters().forEach(e -> e.validate());
        }
    }
}

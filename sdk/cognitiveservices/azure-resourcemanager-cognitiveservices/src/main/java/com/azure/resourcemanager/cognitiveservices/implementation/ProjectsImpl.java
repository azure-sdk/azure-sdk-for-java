// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cognitiveservices.fluent.ProjectsClient;
import com.azure.resourcemanager.cognitiveservices.fluent.models.AccountInner;
import com.azure.resourcemanager.cognitiveservices.models.Account;
import com.azure.resourcemanager.cognitiveservices.models.Projects;

public final class ProjectsImpl implements Projects {
    private static final ClientLogger LOGGER = new ClientLogger(ProjectsImpl.class);

    private final ProjectsClient innerClient;

    private final com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager;

    public ProjectsImpl(ProjectsClient innerClient,
        com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Account create(String resourceGroupName, String accountName, String projectName, AccountInner project) {
        AccountInner inner = this.serviceClient().create(resourceGroupName, accountName, projectName, project);
        if (inner != null) {
            return new AccountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Account create(String resourceGroupName, String accountName, String projectName, AccountInner project,
        Context context) {
        AccountInner inner = this.serviceClient().create(resourceGroupName, accountName, projectName, project, context);
        if (inner != null) {
            return new AccountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Account update(String resourceGroupName, String accountName, String projectName, AccountInner project) {
        AccountInner inner = this.serviceClient().update(resourceGroupName, accountName, projectName, project);
        if (inner != null) {
            return new AccountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Account update(String resourceGroupName, String accountName, String projectName, AccountInner project,
        Context context) {
        AccountInner inner = this.serviceClient().update(resourceGroupName, accountName, projectName, project, context);
        if (inner != null) {
            return new AccountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String accountName, String projectName) {
        this.serviceClient().delete(resourceGroupName, accountName, projectName);
    }

    public void delete(String resourceGroupName, String accountName, String projectName, Context context) {
        this.serviceClient().delete(resourceGroupName, accountName, projectName, context);
    }

    public Response<Account> getWithResponse(String resourceGroupName, String accountName, String projectName,
        Context context) {
        Response<AccountInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, accountName, projectName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new AccountImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Account get(String resourceGroupName, String accountName, String projectName) {
        AccountInner inner = this.serviceClient().get(resourceGroupName, accountName, projectName);
        if (inner != null) {
            return new AccountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<Account> list(String resourceGroupName, String accountName) {
        PagedIterable<AccountInner> inner = this.serviceClient().list(resourceGroupName, accountName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AccountImpl(inner1, this.manager()));
    }

    public PagedIterable<Account> list(String resourceGroupName, String accountName, Context context) {
        PagedIterable<AccountInner> inner = this.serviceClient().list(resourceGroupName, accountName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AccountImpl(inner1, this.manager()));
    }

    private ProjectsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager manager() {
        return this.serviceManager;
    }
}

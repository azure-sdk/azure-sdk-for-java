// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cognitiveservices.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cognitiveservices.fluent.RaiBlocklistOperationsClient;
import com.azure.resourcemanager.cognitiveservices.fluent.models.RaiBlocklistInner;
import com.azure.resourcemanager.cognitiveservices.models.RaiBlocklist;
import com.azure.resourcemanager.cognitiveservices.models.RaiBlocklistOperations;

public final class RaiBlocklistOperationsImpl implements RaiBlocklistOperations {
    private static final ClientLogger LOGGER = new ClientLogger(RaiBlocklistOperationsImpl.class);

    private final RaiBlocklistOperationsClient innerClient;

    private final com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager;

    public RaiBlocklistOperationsImpl(
        RaiBlocklistOperationsClient innerClient,
        com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<RaiBlocklist> getWithResponse(
        String resourceGroupName, String accountName, String raiBlocklistName, Context context) {
        Response<RaiBlocklistInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, accountName, raiBlocklistName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RaiBlocklistImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public RaiBlocklist get(String resourceGroupName, String accountName, String raiBlocklistName) {
        RaiBlocklistInner inner = this.serviceClient().get(resourceGroupName, accountName, raiBlocklistName);
        if (inner != null) {
            return new RaiBlocklistImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public RaiBlocklist getById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String accountName = Utils.getValueFromIdByName(id, "accounts");
        if (accountName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'accounts'.", id)));
        }
        String raiBlocklistName = Utils.getValueFromIdByName(id, "raiBlocklists");
        if (raiBlocklistName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'raiBlocklists'.", id)));
        }
        return this.getWithResponse(resourceGroupName, accountName, raiBlocklistName, Context.NONE).getValue();
    }

    public Response<RaiBlocklist> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String accountName = Utils.getValueFromIdByName(id, "accounts");
        if (accountName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'accounts'.", id)));
        }
        String raiBlocklistName = Utils.getValueFromIdByName(id, "raiBlocklists");
        if (raiBlocklistName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'raiBlocklists'.", id)));
        }
        return this.getWithResponse(resourceGroupName, accountName, raiBlocklistName, context);
    }

    private RaiBlocklistOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.cognitiveservices.CognitiveServicesManager manager() {
        return this.serviceManager;
    }

    public RaiBlocklistImpl define(String name) {
        return new RaiBlocklistImpl(name, this.manager());
    }
}

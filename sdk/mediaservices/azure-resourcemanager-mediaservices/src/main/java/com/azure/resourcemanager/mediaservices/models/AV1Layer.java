// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;

/**
 * Describes the settings to be used when encoding the input video into a desired output bitrate layer with the AV1
 * video codec.
 */
@Fluent
public final class AV1Layer extends AV1VideoLayer {
    /*
     * The VBV buffer window length. The value should be in ISO 8601 format.
     * The value should be in the range [0.1-100] seconds. The default is 5
     * seconds (for example, PT5S).
     */
    @JsonProperty(value = "bufferWindow")
    private Duration bufferWindow;

    /*
     * The value of CRF to be used when encoding this layer. This setting takes
     * effect when RateControlMode of video codec is set at CRF mode. The range
     * of CRF value is between 0 and 63, where lower values would result in
     * better quality, at the expense of higher file sizes. Higher values mean
     * more compression, but at some point quality degradation will be noticed.
     * Default value is 32.
     */
    @JsonProperty(value = "crf")
    private Float crf;

    /*
     * We currently support Level up to 6.3. The value can be Auto, or a number
     * that matches the AV1 profile. If not specified, the default is Auto,
     * which lets the encoder choose the Level that is appropriate for this
     * layer.
     */
    @JsonProperty(value = "level")
    private String level;

    /*
     * We currently support Main. Default is Auto.
     */
    @JsonProperty(value = "profile")
    private AV1VideoProfile profile;

    /**
     * Get the bufferWindow property: The VBV buffer window length. The value should be in ISO 8601 format. The value
     * should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).
     *
     * @return the bufferWindow value.
     */
    public Duration bufferWindow() {
        return this.bufferWindow;
    }

    /**
     * Set the bufferWindow property: The VBV buffer window length. The value should be in ISO 8601 format. The value
     * should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).
     *
     * @param bufferWindow the bufferWindow value to set.
     * @return the AV1Layer object itself.
     */
    public AV1Layer withBufferWindow(Duration bufferWindow) {
        this.bufferWindow = bufferWindow;
        return this;
    }

    /**
     * Get the crf property: The value of CRF to be used when encoding this layer. This setting takes effect when
     * RateControlMode of video codec is set at CRF mode. The range of CRF value is between 0 and 63, where lower values
     * would result in better quality, at the expense of higher file sizes. Higher values mean more compression, but at
     * some point quality degradation will be noticed. Default value is 32.
     *
     * @return the crf value.
     */
    public Float crf() {
        return this.crf;
    }

    /**
     * Set the crf property: The value of CRF to be used when encoding this layer. This setting takes effect when
     * RateControlMode of video codec is set at CRF mode. The range of CRF value is between 0 and 63, where lower values
     * would result in better quality, at the expense of higher file sizes. Higher values mean more compression, but at
     * some point quality degradation will be noticed. Default value is 32.
     *
     * @param crf the crf value to set.
     * @return the AV1Layer object itself.
     */
    public AV1Layer withCrf(Float crf) {
        this.crf = crf;
        return this;
    }

    /**
     * Get the level property: We currently support Level up to 6.3. The value can be Auto, or a number that matches the
     * AV1 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate
     * for this layer.
     *
     * @return the level value.
     */
    public String level() {
        return this.level;
    }

    /**
     * Set the level property: We currently support Level up to 6.3. The value can be Auto, or a number that matches the
     * AV1 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate
     * for this layer.
     *
     * @param level the level value to set.
     * @return the AV1Layer object itself.
     */
    public AV1Layer withLevel(String level) {
        this.level = level;
        return this;
    }

    /**
     * Get the profile property: We currently support Main. Default is Auto.
     *
     * @return the profile value.
     */
    public AV1VideoProfile profile() {
        return this.profile;
    }

    /**
     * Set the profile property: We currently support Main. Default is Auto.
     *
     * @param profile the profile value to set.
     * @return the AV1Layer object itself.
     */
    public AV1Layer withProfile(AV1VideoProfile profile) {
        this.profile = profile;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1Layer withBitrate(int bitrate) {
        super.withBitrate(bitrate);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1Layer withFrameRate(String frameRate) {
        super.withFrameRate(frameRate);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1Layer withMaxBitrate(Integer maxBitrate) {
        super.withMaxBitrate(maxBitrate);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1Layer withWidth(String width) {
        super.withWidth(width);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1Layer withHeight(String height) {
        super.withHeight(height);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1Layer withLabel(String label) {
        super.withLabel(label);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

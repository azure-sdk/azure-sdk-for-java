// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describes the settings to be used when encoding the input video into a desired output bitrate layer. */
@Fluent
public class AV1VideoLayer extends Layer {
    /*
     * The average bitrate in bits per second at which to encode the input
     * video when generating this layer. For example: a target bitrate of
     * 3000Kbps or 3Mbps means this value should be 3000000 This is a required
     * field.
     */
    @JsonProperty(value = "bitrate", required = true)
    private int bitrate;

    /*
     * The frame rate (in frames per second) at which to encode this layer. The
     * value can be in the form of M/N where M and N are integers (For example,
     * 30000/1001), or in the form of a number (For example, 30, or 29.97). The
     * encoder enforces constraints on allowed frame rates based on the profile
     * and level. If it is not specified, the encoder will use the same frame
     * rate as the input video.
     */
    @JsonProperty(value = "frameRate")
    private String frameRate;

    /*
     * The maximum bitrate (in bits per second), at which the VBV buffer should
     * be assumed to refill. If not specified, defaults to the same value as
     * bitrate.
     */
    @JsonProperty(value = "maxBitrate")
    private Integer maxBitrate;

    /**
     * Get the bitrate property: The average bitrate in bits per second at which to encode the input video when
     * generating this layer. For example: a target bitrate of 3000Kbps or 3Mbps means this value should be 3000000 This
     * is a required field.
     *
     * @return the bitrate value.
     */
    public int bitrate() {
        return this.bitrate;
    }

    /**
     * Set the bitrate property: The average bitrate in bits per second at which to encode the input video when
     * generating this layer. For example: a target bitrate of 3000Kbps or 3Mbps means this value should be 3000000 This
     * is a required field.
     *
     * @param bitrate the bitrate value to set.
     * @return the AV1VideoLayer object itself.
     */
    public AV1VideoLayer withBitrate(int bitrate) {
        this.bitrate = bitrate;
        return this;
    }

    /**
     * Get the frameRate property: The frame rate (in frames per second) at which to encode this layer. The value can be
     * in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example,
     * 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is
     * not specified, the encoder will use the same frame rate as the input video.
     *
     * @return the frameRate value.
     */
    public String frameRate() {
        return this.frameRate;
    }

    /**
     * Set the frameRate property: The frame rate (in frames per second) at which to encode this layer. The value can be
     * in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example,
     * 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is
     * not specified, the encoder will use the same frame rate as the input video.
     *
     * @param frameRate the frameRate value to set.
     * @return the AV1VideoLayer object itself.
     */
    public AV1VideoLayer withFrameRate(String frameRate) {
        this.frameRate = frameRate;
        return this;
    }

    /**
     * Get the maxBitrate property: The maximum bitrate (in bits per second), at which the VBV buffer should be assumed
     * to refill. If not specified, defaults to the same value as bitrate.
     *
     * @return the maxBitrate value.
     */
    public Integer maxBitrate() {
        return this.maxBitrate;
    }

    /**
     * Set the maxBitrate property: The maximum bitrate (in bits per second), at which the VBV buffer should be assumed
     * to refill. If not specified, defaults to the same value as bitrate.
     *
     * @param maxBitrate the maxBitrate value to set.
     * @return the AV1VideoLayer object itself.
     */
    public AV1VideoLayer withMaxBitrate(Integer maxBitrate) {
        this.maxBitrate = maxBitrate;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1VideoLayer withWidth(String width) {
        super.withWidth(width);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1VideoLayer withHeight(String height) {
        super.withHeight(height);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AV1VideoLayer withLabel(String label) {
        super.withLabel(label);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

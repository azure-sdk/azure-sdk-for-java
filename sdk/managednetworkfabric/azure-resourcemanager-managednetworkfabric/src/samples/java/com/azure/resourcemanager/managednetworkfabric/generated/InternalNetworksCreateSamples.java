// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.resourcemanager.managednetworkfabric.models.InternalNetworkPropertiesBgpConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.InternalNetworkPropertiesBgpConfigurationBfdConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.InternalNetworkPropertiesConnectedIPv4SubnetsItem;
import java.util.Arrays;

/** Samples for InternalNetworks Create. */
public final class InternalNetworksCreateSamples {
    /*
     * x-ms-original-file: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2022-01-15-privatepreview/examples/InternalNetworks_Create_MaximumSet_Gen.json
     */
    /**
     * Sample code: InternalNetworks_Create_MaximumSet_Gen.
     *
     * @param manager Entry point to ManagednetworkfabricManager.
     */
    public static void internalNetworksCreateMaximumSetGen(
        com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager manager) {
        manager
            .internalNetworks()
            .define("example-internalnetwork")
            .withExistingL3IsolationDomain("resourceGroupName", "example-l3domain")
            .withVlanId(1001)
            .withMtu(1500)
            .withConnectedIPv4Subnets(
                Arrays
                    .asList(
                        new InternalNetworkPropertiesConnectedIPv4SubnetsItem()
                            .withPrefix("10.0.0.0/24")
                            .withGateway("10.0.0.1")))
            .withBgpConfiguration(
                new InternalNetworkPropertiesBgpConfiguration()
                    .withBfdConfiguration(
                        new InternalNetworkPropertiesBgpConfigurationBfdConfiguration()
                            .withInterval(3)
                            .withMultiplier(5))
                    .withDefaultRouteOriginate(true)
                    .withFabricAsn(65048)
                    .withPeerAsn(65047)
                    .withIpv4Prefix("10.0.0.0/28"))
            .create();
    }
}

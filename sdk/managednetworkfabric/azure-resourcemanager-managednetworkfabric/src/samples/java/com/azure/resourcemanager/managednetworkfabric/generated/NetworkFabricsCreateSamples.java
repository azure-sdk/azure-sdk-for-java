// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.generated;

import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesManagementNetworkConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesManagementNetworkConfigurationManagementVpnConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesManagementNetworkConfigurationWorkloadVpnConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesNetworkToNetworkInterconnect;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesNetworkToNetworkInterconnectLayer3Configuration;
import com.azure.resourcemanager.managednetworkfabric.models.NetworkFabricPropertiesTerminalServerConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.OptionBProperties;
import com.azure.resourcemanager.managednetworkfabric.models.PeeringOption;
import java.util.Arrays;

/** Samples for NetworkFabrics Create. */
public final class NetworkFabricsCreateSamples {
    /*
     * x-ms-original-file: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2022-01-15-privatepreview/examples/NetworkFabrics_Create_MaximumSet_Gen.json
     */
    /**
     * Sample code: NetworkFabrics_Create_MaximumSet_Gen.
     *
     * @param manager Entry point to ManagednetworkfabricManager.
     */
    public static void networkFabricsCreateMaximumSetGen(
        com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager manager) {
        manager
            .networkFabrics()
            .define("FabricName")
            .withRegion("eastus")
            .withExistingResourceGroup("resourceGroupName")
            .withNetworkFabricSku("fab3")
            .withNetworkFabricControllerId(
                "/subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/fabricControllerName")
            .withNetworkToNetworkInterconnect(
                new NetworkFabricPropertiesNetworkToNetworkInterconnect()
                    .withLayer2Configuration(
                        new NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration())
                    .withLayer3Configuration(
                        new NetworkFabricPropertiesNetworkToNetworkInterconnectLayer3Configuration()
                            .withPrimaryIpv4Prefix("10.18.0.124/31")
                            .withSecondaryIpv4Prefix("10.18.0.128/31")
                            .withPeerAsn(65046)
                            .withVlanId(20)
                            .withFabricAsn(65046)))
            .withTerminalServerConfiguration(
                new NetworkFabricPropertiesTerminalServerConfiguration()
                    .withPrimaryIpv4Prefix("20.0.0.12/30")
                    .withUsername("username")
                    .withPassword("fakeTokenPlaceholder"))
            .withManagementNetworkConfiguration(
                new NetworkFabricPropertiesManagementNetworkConfiguration()
                    .withIpv4Prefix("10.18.0.0/19")
                    .withManagementVpnConfiguration(
                        new NetworkFabricPropertiesManagementNetworkConfigurationManagementVpnConfiguration()
                            .withOptionBProperties(
                                new OptionBProperties()
                                    .withImportRouteTargets(Arrays.asList("65046:10039"))
                                    .withExportRouteTargets(Arrays.asList("65046:10039")))
                            .withPeeringOption(PeeringOption.OPTIONA))
                    .withWorkloadVpnConfiguration(
                        new NetworkFabricPropertiesManagementNetworkConfigurationWorkloadVpnConfiguration()
                            .withOptionBProperties(
                                new OptionBProperties()
                                    .withImportRouteTargets(Arrays.asList("65046:10050"))
                                    .withExportRouteTargets(Arrays.asList("65046:10050")))
                            .withPeeringOption(PeeringOption.OPTIONA)))
            .create();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Layer2Configuration configuration. This BGP configuration enables exchange of routes using mp-BGP for multiple
 * isolation domains with single peering.
 */
@Fluent
public final class NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration {
    /*
     * Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
     */
    @JsonProperty(value = "portCount")
    private Integer portCount;

    /*
     * MTU of the packets between PE & CE.
     */
    @JsonProperty(value = "mtu")
    private Integer mtu;

    /*
     * List of network device interfaces resource IDs.
     */
    @JsonProperty(value = "interfaces", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> interfaces;

    /** Creates an instance of NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration class. */
    public NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration() {
    }

    /**
     * Get the portCount property: Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
     *
     * @return the portCount value.
     */
    public Integer portCount() {
        return this.portCount;
    }

    /**
     * Set the portCount property: Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
     *
     * @param portCount the portCount value to set.
     * @return the NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration object itself.
     */
    public NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration withPortCount(Integer portCount) {
        this.portCount = portCount;
        return this;
    }

    /**
     * Get the mtu property: MTU of the packets between PE &amp; CE.
     *
     * @return the mtu value.
     */
    public Integer mtu() {
        return this.mtu;
    }

    /**
     * Set the mtu property: MTU of the packets between PE &amp; CE.
     *
     * @param mtu the mtu value to set.
     * @return the NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration object itself.
     */
    public NetworkFabricPropertiesNetworkToNetworkInterconnectLayer2Configuration withMtu(Integer mtu) {
        this.mtu = mtu;
        return this;
    }

    /**
     * Get the interfaces property: List of network device interfaces resource IDs.
     *
     * @return the interfaces value.
     */
    public List<String> interfaces() {
        return this.interfaces;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

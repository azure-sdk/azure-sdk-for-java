// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;

/**
 * Multi Protocol Border Gateway Protocol configuration. This BGP configuration enables exchange of routes using mp-BGP
 * for multiple isolation domains with single peering.
 */
@Fluent
public final class NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration extends MpBgpPatchableProperties {
    /** Creates an instance of NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration class. */
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration() {
    }

    /** {@inheritDoc} */
    @Override
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration withRouterId(String routerId) {
        super.withRouterId(routerId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration withPeerAsn(Integer peerAsn) {
        super.withPeerAsn(peerAsn);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration withPrimaryIpv4Prefix(
        String primaryIpv4Prefix) {
        super.withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration withPrimaryIpv6Prefix(
        String primaryIpv6Prefix) {
        super.withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration withSecondaryIpv4Prefix(
        String secondaryIpv4Prefix) {
        super.withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NniPatchParametersNetworkToNetworkInterconnectLayer3Configuration withSecondaryIpv6Prefix(
        String secondaryIpv6Prefix) {
        super.withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

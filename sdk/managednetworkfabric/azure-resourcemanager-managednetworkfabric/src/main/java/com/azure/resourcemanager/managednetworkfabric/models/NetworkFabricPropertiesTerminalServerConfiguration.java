// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;

/** Network and credentials configuration currently applied to terminal server. */
@Fluent
public final class NetworkFabricPropertiesTerminalServerConfiguration extends TerminalServerPatchableProperties {
    /** Creates an instance of NetworkFabricPropertiesTerminalServerConfiguration class. */
    public NetworkFabricPropertiesTerminalServerConfiguration() {
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFabricPropertiesTerminalServerConfiguration withUsername(String username) {
        super.withUsername(username);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFabricPropertiesTerminalServerConfiguration withPassword(String password) {
        super.withPassword(password);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFabricPropertiesTerminalServerConfiguration withPrimaryIpv4Prefix(String primaryIpv4Prefix) {
        super.withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFabricPropertiesTerminalServerConfiguration withPrimaryIpv6Prefix(String primaryIpv6Prefix) {
        super.withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFabricPropertiesTerminalServerConfiguration withSecondaryIpv4Prefix(String secondaryIpv4Prefix) {
        super.withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public NetworkFabricPropertiesTerminalServerConfiguration withSecondaryIpv6Prefix(String secondaryIpv6Prefix) {
        super.withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

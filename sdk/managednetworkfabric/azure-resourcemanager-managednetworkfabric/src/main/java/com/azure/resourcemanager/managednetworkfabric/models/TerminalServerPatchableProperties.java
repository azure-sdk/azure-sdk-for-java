// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Network and credential configuration currently applied on terminal server. */
@Fluent
public class TerminalServerPatchableProperties extends Layer3IpPrefixProperties {
    /*
     * ARM Resource ID used for the NetworkDevice.
     */
    @JsonProperty(value = "networkDeviceId", access = JsonProperty.Access.WRITE_ONLY)
    private String networkDeviceId;

    /*
     * Username for the terminal server connection.
     */
    @JsonProperty(value = "username")
    private String username;

    /*
     * Password for the terminal server connection.
     */
    @JsonProperty(value = "password")
    private String password;

    /** Creates an instance of TerminalServerPatchableProperties class. */
    public TerminalServerPatchableProperties() {
    }

    /**
     * Get the networkDeviceId property: ARM Resource ID used for the NetworkDevice.
     *
     * @return the networkDeviceId value.
     */
    public String networkDeviceId() {
        return this.networkDeviceId;
    }

    /**
     * Get the username property: Username for the terminal server connection.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Set the username property: Username for the terminal server connection.
     *
     * @param username the username value to set.
     * @return the TerminalServerPatchableProperties object itself.
     */
    public TerminalServerPatchableProperties withUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get the password property: Password for the terminal server connection.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password property: Password for the terminal server connection.
     *
     * @param password the password value to set.
     * @return the TerminalServerPatchableProperties object itself.
     */
    public TerminalServerPatchableProperties withPassword(String password) {
        this.password = password;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TerminalServerPatchableProperties withPrimaryIpv4Prefix(String primaryIpv4Prefix) {
        super.withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TerminalServerPatchableProperties withPrimaryIpv6Prefix(String primaryIpv6Prefix) {
        super.withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TerminalServerPatchableProperties withSecondaryIpv4Prefix(String secondaryIpv4Prefix) {
        super.withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TerminalServerPatchableProperties withSecondaryIpv6Prefix(String secondaryIpv6Prefix) {
        super.withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

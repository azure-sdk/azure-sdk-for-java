// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.managednetworkfabric.fluent.models.ExternalNetworkInner;
import com.azure.resourcemanager.managednetworkfabric.models.EnableDisableOnResources;
import com.azure.resourcemanager.managednetworkfabric.models.ExternalNetwork;
import com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPatch;
import com.azure.resourcemanager.managednetworkfabric.models.ExternalNetworkPropertiesBfdConfiguration;
import com.azure.resourcemanager.managednetworkfabric.models.ProvisioningState;
import com.azure.resourcemanager.managednetworkfabric.models.UpdateAdministrativeState;
import java.util.Collections;
import java.util.List;

public final class ExternalNetworkImpl implements ExternalNetwork, ExternalNetwork.Definition, ExternalNetwork.Update {
    private ExternalNetworkInner innerObject;

    private final com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Integer mtu() {
        return this.innerModel().mtu();
    }

    public Integer vlanId() {
        return this.innerModel().vlanId();
    }

    public Integer fabricAsn() {
        return this.innerModel().fabricAsn();
    }

    public Integer peerAsn() {
        return this.innerModel().peerAsn();
    }

    public ExternalNetworkPropertiesBfdConfiguration bfdConfiguration() {
        return this.innerModel().bfdConfiguration();
    }

    public List<String> disabledOnResources() {
        List<String> inner = this.innerModel().disabledOnResources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> bgpDisabledOnResources() {
        List<String> inner = this.innerModel().bgpDisabledOnResources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> bfdDisabledOnResources() {
        List<String> inner = this.innerModel().bfdDisabledOnResources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String administrativeState() {
        return this.innerModel().administrativeState();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String primaryIpv4Prefix() {
        return this.innerModel().primaryIpv4Prefix();
    }

    public String primaryIpv6Prefix() {
        return this.innerModel().primaryIpv6Prefix();
    }

    public String secondaryIpv4Prefix() {
        return this.innerModel().secondaryIpv4Prefix();
    }

    public String secondaryIpv6Prefix() {
        return this.innerModel().secondaryIpv6Prefix();
    }

    public String annotation() {
        return this.innerModel().annotation();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ExternalNetworkInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String l3IsolationDomainName;

    private String externalNetworkName;

    private ExternalNetworkPatch updateBody;

    public ExternalNetworkImpl withExistingL3IsolationDomain(String resourceGroupName, String l3IsolationDomainName) {
        this.resourceGroupName = resourceGroupName;
        this.l3IsolationDomainName = l3IsolationDomainName;
        return this;
    }

    public ExternalNetwork create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExternalNetworks()
                .create(resourceGroupName, l3IsolationDomainName, externalNetworkName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExternalNetwork create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExternalNetworks()
                .create(resourceGroupName, l3IsolationDomainName, externalNetworkName, this.innerModel(), context);
        return this;
    }

    ExternalNetworkImpl(
        String name, com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager serviceManager) {
        this.innerObject = new ExternalNetworkInner();
        this.serviceManager = serviceManager;
        this.externalNetworkName = name;
    }

    public ExternalNetworkImpl update() {
        this.updateBody = new ExternalNetworkPatch();
        return this;
    }

    public ExternalNetwork apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExternalNetworks()
                .update(resourceGroupName, l3IsolationDomainName, externalNetworkName, updateBody, Context.NONE);
        return this;
    }

    public ExternalNetwork apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExternalNetworks()
                .update(resourceGroupName, l3IsolationDomainName, externalNetworkName, updateBody, context);
        return this;
    }

    ExternalNetworkImpl(
        ExternalNetworkInner innerObject,
        com.azure.resourcemanager.managednetworkfabric.ManagednetworkfabricManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.l3IsolationDomainName = Utils.getValueFromIdByName(innerObject.id(), "l3IsolationDomains");
        this.externalNetworkName = Utils.getValueFromIdByName(innerObject.id(), "externalNetworks");
    }

    public ExternalNetwork refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExternalNetworks()
                .getWithResponse(resourceGroupName, l3IsolationDomainName, externalNetworkName, Context.NONE)
                .getValue();
        return this;
    }

    public ExternalNetwork refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExternalNetworks()
                .getWithResponse(resourceGroupName, l3IsolationDomainName, externalNetworkName, context)
                .getValue();
        return this;
    }

    public void updateAdminState(UpdateAdministrativeState body) {
        serviceManager
            .externalNetworks()
            .updateAdminState(resourceGroupName, l3IsolationDomainName, externalNetworkName, body);
    }

    public void updateAdminState(UpdateAdministrativeState body, Context context) {
        serviceManager
            .externalNetworks()
            .updateAdminState(resourceGroupName, l3IsolationDomainName, externalNetworkName, body, context);
    }

    public void updateBgpState(UpdateAdministrativeState body) {
        serviceManager
            .externalNetworks()
            .updateBgpState(resourceGroupName, l3IsolationDomainName, externalNetworkName, body);
    }

    public void updateBgpState(UpdateAdministrativeState body, Context context) {
        serviceManager
            .externalNetworks()
            .updateBgpState(resourceGroupName, l3IsolationDomainName, externalNetworkName, body, context);
    }

    public void updateBfdForBgpState(UpdateAdministrativeState body) {
        serviceManager
            .externalNetworks()
            .updateBfdForBgpState(resourceGroupName, l3IsolationDomainName, externalNetworkName, body);
    }

    public void updateBfdForBgpState(UpdateAdministrativeState body, Context context) {
        serviceManager
            .externalNetworks()
            .updateBfdForBgpState(resourceGroupName, l3IsolationDomainName, externalNetworkName, body, context);
    }

    public void clearIpv6Neighbors(EnableDisableOnResources body) {
        serviceManager
            .externalNetworks()
            .clearIpv6Neighbors(resourceGroupName, l3IsolationDomainName, externalNetworkName, body);
    }

    public void clearIpv6Neighbors(EnableDisableOnResources body, Context context) {
        serviceManager
            .externalNetworks()
            .clearIpv6Neighbors(resourceGroupName, l3IsolationDomainName, externalNetworkName, body, context);
    }

    public void clearArpEntries(EnableDisableOnResources body) {
        serviceManager
            .externalNetworks()
            .clearArpEntries(resourceGroupName, l3IsolationDomainName, externalNetworkName, body);
    }

    public void clearArpEntries(EnableDisableOnResources body, Context context) {
        serviceManager
            .externalNetworks()
            .clearArpEntries(resourceGroupName, l3IsolationDomainName, externalNetworkName, body, context);
    }

    public ExternalNetworkImpl withMtu(Integer mtu) {
        this.innerModel().withMtu(mtu);
        return this;
    }

    public ExternalNetworkImpl withVlanId(Integer vlanId) {
        this.innerModel().withVlanId(vlanId);
        return this;
    }

    public ExternalNetworkImpl withFabricAsn(Integer fabricAsn) {
        this.innerModel().withFabricAsn(fabricAsn);
        return this;
    }

    public ExternalNetworkImpl withPeerAsn(Integer peerAsn) {
        this.innerModel().withPeerAsn(peerAsn);
        return this;
    }

    public ExternalNetworkImpl withBfdConfiguration(ExternalNetworkPropertiesBfdConfiguration bfdConfiguration) {
        this.innerModel().withBfdConfiguration(bfdConfiguration);
        return this;
    }

    public ExternalNetworkImpl withAdministrativeState(String administrativeState) {
        this.innerModel().withAdministrativeState(administrativeState);
        return this;
    }

    public ExternalNetworkImpl withPrimaryIpv4Prefix(String primaryIpv4Prefix) {
        this.innerModel().withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    public ExternalNetworkImpl withPrimaryIpv6Prefix(String primaryIpv6Prefix) {
        this.innerModel().withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    public ExternalNetworkImpl withSecondaryIpv4Prefix(String secondaryIpv4Prefix) {
        this.innerModel().withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    public ExternalNetworkImpl withSecondaryIpv6Prefix(String secondaryIpv6Prefix) {
        this.innerModel().withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    public ExternalNetworkImpl withAnnotation(String annotation) {
        this.innerModel().withAnnotation(annotation);
        return this;
    }
}

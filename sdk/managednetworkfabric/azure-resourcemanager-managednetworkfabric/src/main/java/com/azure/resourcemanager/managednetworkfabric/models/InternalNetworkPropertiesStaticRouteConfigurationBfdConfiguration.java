// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** BFD configuration properties. */
@Fluent
public final class InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration {
    /*
     * interval in seconds. Example: 300.
     */
    @JsonProperty(value = "interval")
    private Integer interval;

    /*
     * Multiplier for the BFD configuration.
     */
    @JsonProperty(value = "multiplier")
    private Integer multiplier;

    /** Creates an instance of InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration class. */
    public InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration() {
    }

    /**
     * Get the interval property: interval in seconds. Example: 300.
     *
     * @return the interval value.
     */
    public Integer interval() {
        return this.interval;
    }

    /**
     * Set the interval property: interval in seconds. Example: 300.
     *
     * @param interval the interval value to set.
     * @return the InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration object itself.
     */
    public InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration withInterval(Integer interval) {
        this.interval = interval;
        return this;
    }

    /**
     * Get the multiplier property: Multiplier for the BFD configuration.
     *
     * @return the multiplier value.
     */
    public Integer multiplier() {
        return this.multiplier;
    }

    /**
     * Set the multiplier property: Multiplier for the BFD configuration.
     *
     * @param multiplier the multiplier value to set.
     * @return the InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration object itself.
     */
    public InternalNetworkPropertiesStaticRouteConfigurationBfdConfiguration withMultiplier(Integer multiplier) {
        this.multiplier = multiplier;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.managednetworkfabric.models.ValidationResultState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Validation result properties. */
@Fluent
public final class ValidationResultPropertiesInner {
    /*
     * Result of the NetworkFabric configuration validation.
     */
    @JsonProperty(value = "result")
    private ValidationResultState result;

    /*
     * List of validation errors.
     */
    @JsonProperty(value = "errors")
    private List<String> errors;

    /** Creates an instance of ValidationResultPropertiesInner class. */
    public ValidationResultPropertiesInner() {
    }

    /**
     * Get the result property: Result of the NetworkFabric configuration validation.
     *
     * @return the result value.
     */
    public ValidationResultState result() {
        return this.result;
    }

    /**
     * Set the result property: Result of the NetworkFabric configuration validation.
     *
     * @param result the result value to set.
     * @return the ValidationResultPropertiesInner object itself.
     */
    public ValidationResultPropertiesInner withResult(ValidationResultState result) {
        this.result = result;
        return this;
    }

    /**
     * Get the errors property: List of validation errors.
     *
     * @return the errors value.
     */
    public List<String> errors() {
        return this.errors;
    }

    /**
     * Set the errors property: List of validation errors.
     *
     * @param errors the errors value to set.
     * @return the ValidationResultPropertiesInner object itself.
     */
    public ValidationResultPropertiesInner withErrors(List<String> errors) {
        this.errors = errors;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

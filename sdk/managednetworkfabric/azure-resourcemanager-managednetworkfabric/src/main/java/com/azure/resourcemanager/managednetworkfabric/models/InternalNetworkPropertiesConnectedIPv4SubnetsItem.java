// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** connectedIPv4Subnet model. */
@Fluent
public final class InternalNetworkPropertiesConnectedIPv4SubnetsItem extends AnnotationResource {
    /*
     * ip prefix of the connectedIPv4Subnet.
     */
    @JsonProperty(value = "prefix")
    private String prefix;

    /*
     * gateway of the connectedIPv4Subnet.
     */
    @JsonProperty(value = "gateway")
    private String gateway;

    /** Creates an instance of InternalNetworkPropertiesConnectedIPv4SubnetsItem class. */
    public InternalNetworkPropertiesConnectedIPv4SubnetsItem() {
    }

    /**
     * Get the prefix property: ip prefix of the connectedIPv4Subnet.
     *
     * @return the prefix value.
     */
    public String prefix() {
        return this.prefix;
    }

    /**
     * Set the prefix property: ip prefix of the connectedIPv4Subnet.
     *
     * @param prefix the prefix value to set.
     * @return the InternalNetworkPropertiesConnectedIPv4SubnetsItem object itself.
     */
    public InternalNetworkPropertiesConnectedIPv4SubnetsItem withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }

    /**
     * Get the gateway property: gateway of the connectedIPv4Subnet.
     *
     * @return the gateway value.
     */
    public String gateway() {
        return this.gateway;
    }

    /**
     * Set the gateway property: gateway of the connectedIPv4Subnet.
     *
     * @param gateway the gateway value to set.
     * @return the InternalNetworkPropertiesConnectedIPv4SubnetsItem object itself.
     */
    public InternalNetworkPropertiesConnectedIPv4SubnetsItem withGateway(String gateway) {
        this.gateway = gateway;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public InternalNetworkPropertiesConnectedIPv4SubnetsItem withAnnotation(String annotation) {
        super.withAnnotation(annotation);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

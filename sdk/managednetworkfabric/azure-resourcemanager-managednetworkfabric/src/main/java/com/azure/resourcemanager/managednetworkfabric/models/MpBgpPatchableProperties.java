// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Multi Protocol Border Gateway Protocol configuration updatable properties. */
@Fluent
public class MpBgpPatchableProperties extends Layer3IpPrefixProperties {
    /*
     * Router Id of CE to be used for MP-BGP between PE and CE
     */
    @JsonProperty(value = "routerId")
    private String routerId;

    /*
     * ASN of PE devices for CE/PE connectivity.Example : 28
     */
    @JsonProperty(value = "peerAsn")
    private Integer peerAsn;

    /** Creates an instance of MpBgpPatchableProperties class. */
    public MpBgpPatchableProperties() {
    }

    /**
     * Get the routerId property: Router Id of CE to be used for MP-BGP between PE and CE.
     *
     * @return the routerId value.
     */
    public String routerId() {
        return this.routerId;
    }

    /**
     * Set the routerId property: Router Id of CE to be used for MP-BGP between PE and CE.
     *
     * @param routerId the routerId value to set.
     * @return the MpBgpPatchableProperties object itself.
     */
    public MpBgpPatchableProperties withRouterId(String routerId) {
        this.routerId = routerId;
        return this;
    }

    /**
     * Get the peerAsn property: ASN of PE devices for CE/PE connectivity.Example : 28.
     *
     * @return the peerAsn value.
     */
    public Integer peerAsn() {
        return this.peerAsn;
    }

    /**
     * Set the peerAsn property: ASN of PE devices for CE/PE connectivity.Example : 28.
     *
     * @param peerAsn the peerAsn value to set.
     * @return the MpBgpPatchableProperties object itself.
     */
    public MpBgpPatchableProperties withPeerAsn(Integer peerAsn) {
        this.peerAsn = peerAsn;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MpBgpPatchableProperties withPrimaryIpv4Prefix(String primaryIpv4Prefix) {
        super.withPrimaryIpv4Prefix(primaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MpBgpPatchableProperties withPrimaryIpv6Prefix(String primaryIpv6Prefix) {
        super.withPrimaryIpv6Prefix(primaryIpv6Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MpBgpPatchableProperties withSecondaryIpv4Prefix(String secondaryIpv4Prefix) {
        super.withSecondaryIpv4Prefix(secondaryIpv4Prefix);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public MpBgpPatchableProperties withSecondaryIpv6Prefix(String secondaryIpv6Prefix) {
        super.withSecondaryIpv6Prefix(secondaryIpv6Prefix);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

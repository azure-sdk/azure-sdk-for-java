// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Configuration to be used to setup the management network. */
@Fluent
public final class NetworkFabricPropertiesManagementNetworkConfiguration {
    /*
     * ipv4Prefix. Default value : 10.1.0.0/19.
     */
    @JsonProperty(value = "ipv4Prefix")
    private String ipv4Prefix;

    /*
     * ipv6Prefix. Default value 3FFE:FFFF:0:CD40::/59.
     */
    @JsonProperty(value = "ipv6Prefix")
    private String ipv6Prefix;

    /*
     * Configuration for management vpn.
     */
    @JsonProperty(value = "managementVpnConfiguration", required = true)
    private NetworkFabricPropertiesManagementNetworkConfigurationManagementVpnConfiguration managementVpnConfiguration;

    /*
     * Configuration for workload vpn.
     */
    @JsonProperty(value = "workloadVpnConfiguration")
    private NetworkFabricPropertiesManagementNetworkConfigurationWorkloadVpnConfiguration workloadVpnConfiguration;

    /** Creates an instance of NetworkFabricPropertiesManagementNetworkConfiguration class. */
    public NetworkFabricPropertiesManagementNetworkConfiguration() {
    }

    /**
     * Get the ipv4Prefix property: ipv4Prefix. Default value : 10.1.0.0/19.
     *
     * @return the ipv4Prefix value.
     */
    public String ipv4Prefix() {
        return this.ipv4Prefix;
    }

    /**
     * Set the ipv4Prefix property: ipv4Prefix. Default value : 10.1.0.0/19.
     *
     * @param ipv4Prefix the ipv4Prefix value to set.
     * @return the NetworkFabricPropertiesManagementNetworkConfiguration object itself.
     */
    public NetworkFabricPropertiesManagementNetworkConfiguration withIpv4Prefix(String ipv4Prefix) {
        this.ipv4Prefix = ipv4Prefix;
        return this;
    }

    /**
     * Get the ipv6Prefix property: ipv6Prefix. Default value 3FFE:FFFF:0:CD40::/59.
     *
     * @return the ipv6Prefix value.
     */
    public String ipv6Prefix() {
        return this.ipv6Prefix;
    }

    /**
     * Set the ipv6Prefix property: ipv6Prefix. Default value 3FFE:FFFF:0:CD40::/59.
     *
     * @param ipv6Prefix the ipv6Prefix value to set.
     * @return the NetworkFabricPropertiesManagementNetworkConfiguration object itself.
     */
    public NetworkFabricPropertiesManagementNetworkConfiguration withIpv6Prefix(String ipv6Prefix) {
        this.ipv6Prefix = ipv6Prefix;
        return this;
    }

    /**
     * Get the managementVpnConfiguration property: Configuration for management vpn.
     *
     * @return the managementVpnConfiguration value.
     */
    public NetworkFabricPropertiesManagementNetworkConfigurationManagementVpnConfiguration
        managementVpnConfiguration() {
        return this.managementVpnConfiguration;
    }

    /**
     * Set the managementVpnConfiguration property: Configuration for management vpn.
     *
     * @param managementVpnConfiguration the managementVpnConfiguration value to set.
     * @return the NetworkFabricPropertiesManagementNetworkConfiguration object itself.
     */
    public NetworkFabricPropertiesManagementNetworkConfiguration withManagementVpnConfiguration(
        NetworkFabricPropertiesManagementNetworkConfigurationManagementVpnConfiguration managementVpnConfiguration) {
        this.managementVpnConfiguration = managementVpnConfiguration;
        return this;
    }

    /**
     * Get the workloadVpnConfiguration property: Configuration for workload vpn.
     *
     * @return the workloadVpnConfiguration value.
     */
    public NetworkFabricPropertiesManagementNetworkConfigurationWorkloadVpnConfiguration workloadVpnConfiguration() {
        return this.workloadVpnConfiguration;
    }

    /**
     * Set the workloadVpnConfiguration property: Configuration for workload vpn.
     *
     * @param workloadVpnConfiguration the workloadVpnConfiguration value to set.
     * @return the NetworkFabricPropertiesManagementNetworkConfiguration object itself.
     */
    public NetworkFabricPropertiesManagementNetworkConfiguration withWorkloadVpnConfiguration(
        NetworkFabricPropertiesManagementNetworkConfigurationWorkloadVpnConfiguration workloadVpnConfiguration) {
        this.workloadVpnConfiguration = workloadVpnConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (managementVpnConfiguration() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property managementVpnConfiguration in model"
                            + " NetworkFabricPropertiesManagementNetworkConfiguration"));
        } else {
            managementVpnConfiguration().validate();
        }
        if (workloadVpnConfiguration() != null) {
            workloadVpnConfiguration().validate();
        }
    }

    private static final ClientLogger LOGGER =
        new ClientLogger(NetworkFabricPropertiesManagementNetworkConfiguration.class);
}

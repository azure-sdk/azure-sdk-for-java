// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetworkfabric.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** optionBConfiguration configuration. */
@Fluent
public final class L3IsolationDomainPropertiesExternalOptionBConfiguration {
    /*
     * List with importRouteTargets.
     */
    @JsonProperty(value = "importRouteTargets")
    private List<String> importRouteTargets;

    /*
     * List with exportRouteTargets.
     */
    @JsonProperty(value = "exportRouteTargets")
    private List<String> exportRouteTargets;

    /*
     * administrativeState of the network interface. Example: up | down.
     */
    @JsonProperty(value = "administrativeState")
    private String administrativeState;

    /** Creates an instance of L3IsolationDomainPropertiesExternalOptionBConfiguration class. */
    public L3IsolationDomainPropertiesExternalOptionBConfiguration() {
    }

    /**
     * Get the importRouteTargets property: List with importRouteTargets.
     *
     * @return the importRouteTargets value.
     */
    public List<String> importRouteTargets() {
        return this.importRouteTargets;
    }

    /**
     * Set the importRouteTargets property: List with importRouteTargets.
     *
     * @param importRouteTargets the importRouteTargets value to set.
     * @return the L3IsolationDomainPropertiesExternalOptionBConfiguration object itself.
     */
    public L3IsolationDomainPropertiesExternalOptionBConfiguration withImportRouteTargets(
        List<String> importRouteTargets) {
        this.importRouteTargets = importRouteTargets;
        return this;
    }

    /**
     * Get the exportRouteTargets property: List with exportRouteTargets.
     *
     * @return the exportRouteTargets value.
     */
    public List<String> exportRouteTargets() {
        return this.exportRouteTargets;
    }

    /**
     * Set the exportRouteTargets property: List with exportRouteTargets.
     *
     * @param exportRouteTargets the exportRouteTargets value to set.
     * @return the L3IsolationDomainPropertiesExternalOptionBConfiguration object itself.
     */
    public L3IsolationDomainPropertiesExternalOptionBConfiguration withExportRouteTargets(
        List<String> exportRouteTargets) {
        this.exportRouteTargets = exportRouteTargets;
        return this;
    }

    /**
     * Get the administrativeState property: administrativeState of the network interface. Example: up | down.
     *
     * @return the administrativeState value.
     */
    public String administrativeState() {
        return this.administrativeState;
    }

    /**
     * Set the administrativeState property: administrativeState of the network interface. Example: up | down.
     *
     * @param administrativeState the administrativeState value to set.
     * @return the L3IsolationDomainPropertiesExternalOptionBConfiguration object itself.
     */
    public L3IsolationDomainPropertiesExternalOptionBConfiguration withAdministrativeState(String administrativeState) {
        this.administrativeState = administrativeState;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

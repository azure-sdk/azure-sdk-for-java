// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The compute configuration. */
@Fluent
public final class ComputeConfiguration {
    /*
     * The alert email in case of a failure
     */
    @JsonProperty(value = "failureAlertEmail")
    private String failureAlertEmail;

    /*
     * The data throughput speed in mbps. The accepted values are: 10, 100, 300, 500, 1024
     */
    @JsonProperty(value = "throughput", required = true)
    private int throughput;

    /** Creates an instance of ComputeConfiguration class. */
    public ComputeConfiguration() {
    }

    /**
     * Get the failureAlertEmail property: The alert email in case of a failure.
     *
     * @return the failureAlertEmail value.
     */
    public String failureAlertEmail() {
        return this.failureAlertEmail;
    }

    /**
     * Set the failureAlertEmail property: The alert email in case of a failure.
     *
     * @param failureAlertEmail the failureAlertEmail value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withFailureAlertEmail(String failureAlertEmail) {
        this.failureAlertEmail = failureAlertEmail;
        return this;
    }

    /**
     * Get the throughput property: The data throughput speed in mbps. The accepted values are: 10, 100, 300, 500, 1024.
     *
     * @return the throughput value.
     */
    public int throughput() {
        return this.throughput;
    }

    /**
     * Set the throughput property: The data throughput speed in mbps. The accepted values are: 10, 100, 300, 500, 1024.
     *
     * @param throughput the throughput value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withThroughput(int throughput) {
        this.throughput = throughput;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

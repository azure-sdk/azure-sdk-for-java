// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Data Connector Information. */
@Fluent
public final class NetworkAnalyticsProductConnectorInformation {
    /*
     * The connector name
     */
    @JsonProperty(value = "connectorName", required = true)
    private String connectorName;

    /*
     * The datasets supported by the connector
     */
    @JsonProperty(value = "datasets", required = true)
    private List<String> datasets;

    /** Creates an instance of NetworkAnalyticsProductConnectorInformation class. */
    public NetworkAnalyticsProductConnectorInformation() {
    }

    /**
     * Get the connectorName property: The connector name.
     *
     * @return the connectorName value.
     */
    public String connectorName() {
        return this.connectorName;
    }

    /**
     * Set the connectorName property: The connector name.
     *
     * @param connectorName the connectorName value to set.
     * @return the NetworkAnalyticsProductConnectorInformation object itself.
     */
    public NetworkAnalyticsProductConnectorInformation withConnectorName(String connectorName) {
        this.connectorName = connectorName;
        return this;
    }

    /**
     * Get the datasets property: The datasets supported by the connector.
     *
     * @return the datasets value.
     */
    public List<String> datasets() {
        return this.datasets;
    }

    /**
     * Set the datasets property: The datasets supported by the connector.
     *
     * @param datasets the datasets value to set.
     * @return the NetworkAnalyticsProductConnectorInformation object itself.
     */
    public NetworkAnalyticsProductConnectorInformation withDatasets(List<String> datasets) {
        this.datasets = datasets;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (connectorName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property connectorName in model"
                            + " NetworkAnalyticsProductConnectorInformation"));
        }
        if (datasets() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property datasets in model NetworkAnalyticsProductConnectorInformation"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NetworkAnalyticsProductConnectorInformation.class);
}

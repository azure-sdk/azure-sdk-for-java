// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataLakeHouseResourcesInner;
import java.util.Map;

/** An immutable client-side representation of DataLakeHouseResources. */
public interface DataLakeHouseResources {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Storage properties.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the managedResourceGroupConfiguration property: Managed Resource Group configuration.
     *
     * @return the managedResourceGroupConfiguration value.
     */
    ManagedResourceGroupConfiguration managedResourceGroupConfiguration();

    /**
     * Gets the uniqueIdentifierName property: unique Identifier Name.
     *
     * @return the uniqueIdentifierName value.
     */
    String uniqueIdentifierName();

    /**
     * Gets the commonStorageAccountProperties property: Common Storage Account properties.
     *
     * @return the commonStorageAccountProperties value.
     */
    CommonStorageAccountProperties commonStorageAccountProperties();

    /**
     * Gets the bronzeStorageAccountProperties property: Bronze Storage Account properties.
     *
     * @return the bronzeStorageAccountProperties value.
     */
    BronzeStorageAccountProperties bronzeStorageAccountProperties();

    /**
     * Gets the azureDataExplorerProperties property: Azure DataExplorer Cluster properties.
     *
     * @return the azureDataExplorerProperties value.
     */
    AzureDataExplorerProperties azureDataExplorerProperties();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.networkanalytics.fluent.models.DataLakeHouseResourcesInner object.
     *
     * @return the inner object.
     */
    DataLakeHouseResourcesInner innerModel();

    /** The entirety of the DataLakeHouseResources definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The DataLakeHouseResources definition stages. */
    interface DefinitionStages {
        /** The first stage of the DataLakeHouseResources definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the DataLakeHouseResources definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithManagedResourceGroupConfiguration,
                DefinitionStages.WithUniqueIdentifierName,
                DefinitionStages.WithCommonStorageAccountProperties,
                DefinitionStages.WithBronzeStorageAccountProperties,
                DefinitionStages.WithAzureDataExplorerProperties {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            DataLakeHouseResources create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DataLakeHouseResources create(Context context);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify managedResourceGroupConfiguration. */
        interface WithManagedResourceGroupConfiguration {
            /**
             * Specifies the managedResourceGroupConfiguration property: Managed Resource Group configuration..
             *
             * @param managedResourceGroupConfiguration Managed Resource Group configuration.
             * @return the next definition stage.
             */
            WithCreate withManagedResourceGroupConfiguration(
                ManagedResourceGroupConfiguration managedResourceGroupConfiguration);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify uniqueIdentifierName. */
        interface WithUniqueIdentifierName {
            /**
             * Specifies the uniqueIdentifierName property: unique Identifier Name.
             *
             * @param uniqueIdentifierName unique Identifier Name.
             * @return the next definition stage.
             */
            WithCreate withUniqueIdentifierName(String uniqueIdentifierName);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify commonStorageAccountProperties. */
        interface WithCommonStorageAccountProperties {
            /**
             * Specifies the commonStorageAccountProperties property: Common Storage Account properties..
             *
             * @param commonStorageAccountProperties Common Storage Account properties.
             * @return the next definition stage.
             */
            WithCreate withCommonStorageAccountProperties(
                CommonStorageAccountProperties commonStorageAccountProperties);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify bronzeStorageAccountProperties. */
        interface WithBronzeStorageAccountProperties {
            /**
             * Specifies the bronzeStorageAccountProperties property: Bronze Storage Account properties..
             *
             * @param bronzeStorageAccountProperties Bronze Storage Account properties.
             * @return the next definition stage.
             */
            WithCreate withBronzeStorageAccountProperties(
                BronzeStorageAccountProperties bronzeStorageAccountProperties);
        }
        /** The stage of the DataLakeHouseResources definition allowing to specify azureDataExplorerProperties. */
        interface WithAzureDataExplorerProperties {
            /**
             * Specifies the azureDataExplorerProperties property: Azure DataExplorer Cluster properties..
             *
             * @param azureDataExplorerProperties Azure DataExplorer Cluster properties.
             * @return the next definition stage.
             */
            WithCreate withAzureDataExplorerProperties(AzureDataExplorerProperties azureDataExplorerProperties);
        }
    }
    /**
     * Begins update for the DataLakeHouseResources resource.
     *
     * @return the stage of resource update.
     */
    DataLakeHouseResources.Update update();

    /** The template for DataLakeHouseResources update. */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithManagedResourceGroupConfiguration {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        DataLakeHouseResources apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DataLakeHouseResources apply(Context context);
    }
    /** The DataLakeHouseResources update stages. */
    interface UpdateStages {
        /** The stage of the DataLakeHouseResources update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the DataLakeHouseResources update allowing to specify managedResourceGroupConfiguration. */
        interface WithManagedResourceGroupConfiguration {
            /**
             * Specifies the managedResourceGroupConfiguration property: Managed Resource Group configuration..
             *
             * @param managedResourceGroupConfiguration Managed Resource Group configuration.
             * @return the next definition stage.
             */
            Update withManagedResourceGroupConfiguration(
                ManagedResourceGroupConfiguration managedResourceGroupConfiguration);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    DataLakeHouseResources refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DataLakeHouseResources refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataConnectorsInner;
import com.azure.resourcemanager.networkanalytics.models.DataConnectorsUpdate;

/** An instance of this class provides access to all the operations defined in DataConnectorOperationsClient. */
public interface DataConnectorOperationsClient {
    /**
     * List DataConnectors resources by subscription ID.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DataConnectorsInner> list();

    /**
     * List DataConnectors resources by subscription ID.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DataConnectorsInner> list(Context context);

    /**
     * List DataConnectors resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DataConnectorsInner> listByResourceGroup(String resourceGroupName);

    /**
     * List DataConnectors resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DataConnectorsInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DataConnectors along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DataConnectorsInner> getByResourceGroupWithResponse(
        String resourceGroupName, String dataConnectorName, Context context);

    /**
     * Get a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DataConnectors.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DataConnectorsInner getByResourceGroup(String resourceGroupName, String dataConnectorName);

    /**
     * Create a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the data connector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DataConnectorsInner>, DataConnectorsInner> beginCreateOrUpdate(
        String resourceGroupName, String dataConnectorName, DataConnectorsInner resource);

    /**
     * Create a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the data connector resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DataConnectorsInner>, DataConnectorsInner> beginCreateOrUpdate(
        String resourceGroupName, String dataConnectorName, DataConnectorsInner resource, Context context);

    /**
     * Create a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the data connector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DataConnectorsInner createOrUpdate(
        String resourceGroupName, String dataConnectorName, DataConnectorsInner resource);

    /**
     * Create a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the data connector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DataConnectorsInner createOrUpdate(
        String resourceGroupName, String dataConnectorName, DataConnectorsInner resource, Context context);

    /**
     * Update a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the data connector resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DataConnectorsInner> updateWithResponse(
        String resourceGroupName, String dataConnectorName, DataConnectorsUpdate properties, Context context);

    /**
     * Update a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the data connector resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DataConnectorsInner update(String resourceGroupName, String dataConnectorName, DataConnectorsUpdate properties);

    /**
     * Delete a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String dataConnectorName);

    /**
     * Delete a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String dataConnectorName, Context context);

    /**
     * Delete a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dataConnectorName);

    /**
     * Delete a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dataConnectorName, Context context);
}

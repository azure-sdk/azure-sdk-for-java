// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of DataConnectorOperations. */
public interface DataConnectorOperations {
    /**
     * List DataConnectors resources by subscription ID.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DataConnectors> list();

    /**
     * List DataConnectors resources by subscription ID.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DataConnectors> list(Context context);

    /**
     * List DataConnectors resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DataConnectors> listByResourceGroup(String resourceGroupName);

    /**
     * List DataConnectors resources by resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnectors list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DataConnectors> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DataConnectors along with {@link Response}.
     */
    Response<DataConnectors> getByResourceGroupWithResponse(
        String resourceGroupName, String dataConnectorName, Context context);

    /**
     * Get a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DataConnectors.
     */
    DataConnectors getByResourceGroup(String resourceGroupName, String dataConnectorName);

    /**
     * Delete a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String dataConnectorName);

    /**
     * Delete a DataConnectors.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataConnectorName The data connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String dataConnectorName, Context context);

    /**
     * Get a DataConnectors.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DataConnectors along with {@link Response}.
     */
    DataConnectors getById(String id);

    /**
     * Get a DataConnectors.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DataConnectors along with {@link Response}.
     */
    Response<DataConnectors> getByIdWithResponse(String id, Context context);

    /**
     * Delete a DataConnectors.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a DataConnectors.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DataConnectors resource.
     *
     * @param name resource name.
     * @return the first stage of the new DataConnectors definition.
     */
    DataConnectors.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.networkanalytics.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkanalytics.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An ingestion endpoint for metrics relating to the parent resource. */
@Fluent
public final class MetricsIngestionEndpointResourcesInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private MetricsIngestionEndpointProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of MetricsIngestionEndpointResourcesInner class. */
    public MetricsIngestionEndpointResourcesInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     *
     * @return the innerProperties value.
     */
    private MetricsIngestionEndpointProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the ingressRegionName property: Name of the External Metrics Ingress Gateway region where the compute should
     * be deployed.
     *
     * @return the ingressRegionName value.
     */
    public String ingressRegionName() {
        return this.innerProperties() == null ? null : this.innerProperties().ingressRegionName();
    }

    /**
     * Set the ingressRegionName property: Name of the External Metrics Ingress Gateway region where the compute should
     * be deployed.
     *
     * @param ingressRegionName the ingressRegionName value to set.
     * @return the MetricsIngestionEndpointResourcesInner object itself.
     */
    public MetricsIngestionEndpointResourcesInner withIngressRegionName(String ingressRegionName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MetricsIngestionEndpointProperties();
        }
        this.innerProperties().withIngressRegionName(ingressRegionName);
        return this;
    }

    /**
     * Get the eventHubUrl property: Event Hub URL to which the metrics should be sent for this resource.
     *
     * @return the eventHubUrl value.
     */
    public String eventHubUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().eventHubUrl();
    }

    /**
     * Get the eventHubName property: Event Hub name to which the metrics should be sent for this resource.
     *
     * @return the eventHubName value.
     */
    public String eventHubName() {
        return this.innerProperties() == null ? null : this.innerProperties().eventHubName();
    }

    /**
     * Get the keyVaultUrl property: Key Vault URL where the connection string exists for authentication.
     *
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().keyVaultUrl();
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed Resource Group Configuration.
     *
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().managedResourceGroupConfiguration();
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed Resource Group Configuration.
     *
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the MetricsIngestionEndpointResourcesInner object itself.
     */
    public MetricsIngestionEndpointResourcesInner withManagedResourceGroupConfiguration(
        ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MetricsIngestionEndpointProperties();
        }
        this.innerProperties().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

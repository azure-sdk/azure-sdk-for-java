// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkanalytics.models.NetworkAnalyticsProductInformation;
import com.azure.resourcemanager.networkanalytics.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Details of the network analytics product properties. */
@Fluent
public final class NetworkAnalyticsProductsProperties {
    /*
     * The network analytics product provisioning state
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The network analytics product information
     */
    @JsonProperty(value = "networkAnalyticsProductInformation", required = true)
    private NetworkAnalyticsProductInformation networkAnalyticsProductInformation;

    /** Creates an instance of NetworkAnalyticsProductsProperties class. */
    public NetworkAnalyticsProductsProperties() {
    }

    /**
     * Get the provisioningState property: The network analytics product provisioning state.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the networkAnalyticsProductInformation property: The network analytics product information.
     *
     * @return the networkAnalyticsProductInformation value.
     */
    public NetworkAnalyticsProductInformation networkAnalyticsProductInformation() {
        return this.networkAnalyticsProductInformation;
    }

    /**
     * Set the networkAnalyticsProductInformation property: The network analytics product information.
     *
     * @param networkAnalyticsProductInformation the networkAnalyticsProductInformation value to set.
     * @return the NetworkAnalyticsProductsProperties object itself.
     */
    public NetworkAnalyticsProductsProperties withNetworkAnalyticsProductInformation(
        NetworkAnalyticsProductInformation networkAnalyticsProductInformation) {
        this.networkAnalyticsProductInformation = networkAnalyticsProductInformation;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (networkAnalyticsProductInformation() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property networkAnalyticsProductInformation in model"
                            + " NetworkAnalyticsProductsProperties"));
        } else {
            networkAnalyticsProductInformation().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NetworkAnalyticsProductsProperties.class);
}

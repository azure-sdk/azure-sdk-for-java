// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** The connector dataset information. */
@Fluent
public final class DatasetConfiguration {
    /*
     * The name of the dataset
     */
    @JsonProperty(value = "datasetName", required = true)
    private String datasetName;

    /*
     * The column key holding the timestamp data
     */
    @JsonProperty(value = "timestampKey")
    private OffsetDateTime timestampKey;

    /*
     * Columns to be masked
     */
    @JsonProperty(value = "columnsToMask")
    private List<String> columnsToMask;

    /** Creates an instance of DatasetConfiguration class. */
    public DatasetConfiguration() {
    }

    /**
     * Get the datasetName property: The name of the dataset.
     *
     * @return the datasetName value.
     */
    public String datasetName() {
        return this.datasetName;
    }

    /**
     * Set the datasetName property: The name of the dataset.
     *
     * @param datasetName the datasetName value to set.
     * @return the DatasetConfiguration object itself.
     */
    public DatasetConfiguration withDatasetName(String datasetName) {
        this.datasetName = datasetName;
        return this;
    }

    /**
     * Get the timestampKey property: The column key holding the timestamp data.
     *
     * @return the timestampKey value.
     */
    public OffsetDateTime timestampKey() {
        return this.timestampKey;
    }

    /**
     * Set the timestampKey property: The column key holding the timestamp data.
     *
     * @param timestampKey the timestampKey value to set.
     * @return the DatasetConfiguration object itself.
     */
    public DatasetConfiguration withTimestampKey(OffsetDateTime timestampKey) {
        this.timestampKey = timestampKey;
        return this;
    }

    /**
     * Get the columnsToMask property: Columns to be masked.
     *
     * @return the columnsToMask value.
     */
    public List<String> columnsToMask() {
        return this.columnsToMask;
    }

    /**
     * Set the columnsToMask property: Columns to be masked.
     *
     * @param columnsToMask the columnsToMask value to set.
     * @return the DatasetConfiguration object itself.
     */
    public DatasetConfiguration withColumnsToMask(List<String> columnsToMask) {
        this.columnsToMask = columnsToMask;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (datasetName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property datasetName in model DatasetConfiguration"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DatasetConfiguration.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.networkanalytics.fluent.models.MetricsIngestionEndpointResourcesInner;

/** Resource collection API of MetricsIngestionEndpoints. */
public interface MetricsIngestionEndpoints {
    /**
     * List MetricsIngestionEndpointResources resources by parent.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MetricsIngestionEndpointResources list operation as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<MetricsIngestionEndpointResources> list(String resourceUri);

    /**
     * List MetricsIngestionEndpointResources resources by parent.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MetricsIngestionEndpointResources list operation as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<MetricsIngestionEndpointResources> list(String resourceUri, Context context);

    /**
     * Get a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MetricsIngestionEndpointResources along with {@link Response}.
     */
    Response<MetricsIngestionEndpointResources> getWithResponse(String resourceUri, Context context);

    /**
     * Get a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MetricsIngestionEndpointResources.
     */
    MetricsIngestionEndpointResources get(String resourceUri);

    /**
     * Create a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an ingestion endpoint for metrics relating to the parent resource.
     */
    MetricsIngestionEndpointResources createOrUpdate(
        String resourceUri, MetricsIngestionEndpointResourcesInner resource);

    /**
     * Create a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an ingestion endpoint for metrics relating to the parent resource.
     */
    MetricsIngestionEndpointResources createOrUpdate(
        String resourceUri, MetricsIngestionEndpointResourcesInner resource, Context context);

    /**
     * Update a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an ingestion endpoint for metrics relating to the parent resource along with {@link Response}.
     */
    Response<MetricsIngestionEndpointResources> updateWithResponse(
        String resourceUri, Object properties, Context context);

    /**
     * Update a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an ingestion endpoint for metrics relating to the parent resource.
     */
    MetricsIngestionEndpointResources update(String resourceUri, Object properties);

    /**
     * Delete a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceUri);

    /**
     * Delete a MetricsIngestionEndpointResources.
     *
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceUri, Context context);
}

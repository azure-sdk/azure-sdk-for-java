// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The data retention, dataset and compute configurations for the connector. */
@Fluent
public final class DataConnectorConfiguration {
    /*
     * The data retention configuration
     */
    @JsonProperty(value = "dataRetentionProperties", required = true)
    private DataRetentionProperties dataRetentionProperties;

    /*
     * The datasets configuration array
     */
    @JsonProperty(value = "dataset", required = true)
    private DatasetConfiguration dataset;

    /*
     * The compute configuration
     */
    @JsonProperty(value = "compute", required = true)
    private ComputeConfiguration compute;

    /** Creates an instance of DataConnectorConfiguration class. */
    public DataConnectorConfiguration() {
    }

    /**
     * Get the dataRetentionProperties property: The data retention configuration.
     *
     * @return the dataRetentionProperties value.
     */
    public DataRetentionProperties dataRetentionProperties() {
        return this.dataRetentionProperties;
    }

    /**
     * Set the dataRetentionProperties property: The data retention configuration.
     *
     * @param dataRetentionProperties the dataRetentionProperties value to set.
     * @return the DataConnectorConfiguration object itself.
     */
    public DataConnectorConfiguration withDataRetentionProperties(DataRetentionProperties dataRetentionProperties) {
        this.dataRetentionProperties = dataRetentionProperties;
        return this;
    }

    /**
     * Get the dataset property: The datasets configuration array.
     *
     * @return the dataset value.
     */
    public DatasetConfiguration dataset() {
        return this.dataset;
    }

    /**
     * Set the dataset property: The datasets configuration array.
     *
     * @param dataset the dataset value to set.
     * @return the DataConnectorConfiguration object itself.
     */
    public DataConnectorConfiguration withDataset(DatasetConfiguration dataset) {
        this.dataset = dataset;
        return this;
    }

    /**
     * Get the compute property: The compute configuration.
     *
     * @return the compute value.
     */
    public ComputeConfiguration compute() {
        return this.compute;
    }

    /**
     * Set the compute property: The compute configuration.
     *
     * @param compute the compute value to set.
     * @return the DataConnectorConfiguration object itself.
     */
    public DataConnectorConfiguration withCompute(ComputeConfiguration compute) {
        this.compute = compute;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dataRetentionProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property dataRetentionProperties in model DataConnectorConfiguration"));
        } else {
            dataRetentionProperties().validate();
        }
        if (dataset() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property dataset in model DataConnectorConfiguration"));
        } else {
            dataset().validate();
        }
        if (compute() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property compute in model DataConnectorConfiguration"));
        } else {
            compute().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DataConnectorConfiguration.class);
}

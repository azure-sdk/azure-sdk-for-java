// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.networkanalytics.models.ManagedResourceGroupConfiguration;
import com.azure.resourcemanager.networkanalytics.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The resource-specific properties of a Metrics Ingestion Endpoint. */
@Fluent
public final class MetricsIngestionEndpointProperties {
    /*
     * Name of the External Metrics Ingress Gateway region where the compute should be deployed
     */
    @JsonProperty(value = "ingressRegionName", required = true)
    private String ingressRegionName;

    /*
     * Event Hub URL to which the metrics should be sent for this resource
     */
    @JsonProperty(value = "eventHubUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String eventHubUrl;

    /*
     * Event Hub name to which the metrics should be sent for this resource
     */
    @JsonProperty(value = "eventHubName", access = JsonProperty.Access.WRITE_ONLY)
    private String eventHubName;

    /*
     * Key Vault URL where the connection string exists for authentication
     */
    @JsonProperty(value = "keyVaultUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String keyVaultUrl;

    /*
     * The status of the last operation
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Managed Resource Group Configuration
     */
    @JsonProperty(value = "managedResourceGroupConfiguration")
    private ManagedResourceGroupConfiguration managedResourceGroupConfiguration;

    /** Creates an instance of MetricsIngestionEndpointProperties class. */
    public MetricsIngestionEndpointProperties() {
    }

    /**
     * Get the ingressRegionName property: Name of the External Metrics Ingress Gateway region where the compute should
     * be deployed.
     *
     * @return the ingressRegionName value.
     */
    public String ingressRegionName() {
        return this.ingressRegionName;
    }

    /**
     * Set the ingressRegionName property: Name of the External Metrics Ingress Gateway region where the compute should
     * be deployed.
     *
     * @param ingressRegionName the ingressRegionName value to set.
     * @return the MetricsIngestionEndpointProperties object itself.
     */
    public MetricsIngestionEndpointProperties withIngressRegionName(String ingressRegionName) {
        this.ingressRegionName = ingressRegionName;
        return this;
    }

    /**
     * Get the eventHubUrl property: Event Hub URL to which the metrics should be sent for this resource.
     *
     * @return the eventHubUrl value.
     */
    public String eventHubUrl() {
        return this.eventHubUrl;
    }

    /**
     * Get the eventHubName property: Event Hub name to which the metrics should be sent for this resource.
     *
     * @return the eventHubName value.
     */
    public String eventHubName() {
        return this.eventHubName;
    }

    /**
     * Get the keyVaultUrl property: Key Vault URL where the connection string exists for authentication.
     *
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.keyVaultUrl;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed Resource Group Configuration.
     *
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.managedResourceGroupConfiguration;
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed Resource Group Configuration.
     *
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the MetricsIngestionEndpointProperties object itself.
     */
    public MetricsIngestionEndpointProperties withManagedResourceGroupConfiguration(
        ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        this.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ingressRegionName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property ingressRegionName in model MetricsIngestionEndpointProperties"));
        }
        if (managedResourceGroupConfiguration() != null) {
            managedResourceGroupConfiguration().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MetricsIngestionEndpointProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.resourcemanager.networkanalytics.models.DataLakeHouseResources;
import com.azure.resourcemanager.networkanalytics.models.ManagedResourceGroupConfiguration;
import java.util.HashMap;
import java.util.Map;

/** Samples for Storage Update. */
public final class StorageUpdateSamples {
    /*
     * x-ms-original-file: specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-04-30/examples/Storage_Update_MinimumSet_Gen.json
     */
    /**
     * Sample code: Storage_Update_Min.
     *
     * @param manager Entry point to NetworkanalyticsManager.
     */
    public static void storageUpdateMin(com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager manager) {
        DataLakeHouseResources resource =
            manager
                .storages()
                .getByResourceGroupWithResponse("rgopenapi", "xpyfslhorwbf", com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().apply();
    }

    /*
     * x-ms-original-file: specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-04-30/examples/Storage_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: Storage_Update_Max.
     *
     * @param manager Entry point to NetworkanalyticsManager.
     */
    public static void storageUpdateMax(com.azure.resourcemanager.networkanalytics.NetworkanalyticsManager manager) {
        DataLakeHouseResources resource =
            manager
                .storages()
                .getByResourceGroupWithResponse("rgopenapi", "wkuqjmixiscljktf", com.azure.core.util.Context.NONE)
                .getValue();
        resource
            .update()
            .withTags(mapOf("key9798", "pmpellthjljwbmpulnmobfodhjuq"))
            .withManagedResourceGroupConfiguration(
                new ManagedResourceGroupConfiguration()
                    .withName("flfqtliobufzhuxkhfhj")
                    .withLocation("ecafvspgcuuampnlsrihbgtujgouq"))
            .apply();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

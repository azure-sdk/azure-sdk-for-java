// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwaresecuritymodulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"activationState\":\"Unknown\",\"autoGeneratedDomainNameLabelScope\":\"NoReuse\",\"hsms\":[{\"fqdn\":\"lcvydy\",\"state\":\"tdooaoj\",\"stateMessage\":\"iodkooebwnujhem\"},{\"fqdn\":\"bvdkcrodtjin\",\"state\":\"jlfltkacjvefkdlf\",\"stateMessage\":\"kggkfpa\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Updating\",\"groupIds\":[\"blylsyxkqjnsj\",\"r\",\"tiagx\"]},\"etag\":\"sz\",\"id\":\"mpsbzkfzbeyv\",\"name\":\"nqicvinvkjjxdxrb\",\"type\":\"ukzclewyhmlwpaz\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"InternalError\",\"groupIds\":[\"ckw\",\"fz\",\"whxxbuyqax\",\"feqztppriol\"]},\"etag\":\"rjaltolmncw\",\"id\":\"bqwcsdbnwdcf\",\"name\":\"ucqdpfuvglsb\",\"type\":\"jcanvxbvtvudut\"}],\"provisioningState\":\"Succeeded\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"lxqtvcofudfl\"},\"identity\":{\"principalId\":\"jub\",\"tenantId\":\"knnqvsaznq\",\"type\":\"None\",\"userAssignedIdentities\":{\"c\":{\"principalId\":\"dsg\",\"clientId\":\"hmk\"},\"oefki\":{\"principalId\":\"auwjuetaebu\",\"clientId\":\"vdmovsmzlxwabm\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":32059747},\"location\":\"ujmqlgkfbtndoa\",\"tags\":{\"ed\":\"bjcntujitc\",\"qouicybxarzgsz\":\"twwaezkojvdcpzf\",\"p\":\"foxciq\",\"xkhnzbonlwnto\":\"doamciodhkha\"},\"id\":\"gokdwbwhks\",\"name\":\"zcmrvexztvb\",\"type\":\"qgsfraoyzkoow\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwaresecuritymodulesManager manager = HardwaresecuritymodulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudHsmCluster> response
            = manager.cloudHsmClusters().list("xje", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ujmqlgkfbtndoa", response.iterator().next().location());
        Assertions.assertEquals("bjcntujitc", response.iterator().next().tags().get("ed"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.iterator().next().identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.iterator().next().sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, response.iterator().next().sku().name());
        Assertions.assertEquals(32059747, response.iterator().next().sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.NO_REUSE,
            response.iterator().next().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, response.iterator().next().publicNetworkAccess());
    }
}

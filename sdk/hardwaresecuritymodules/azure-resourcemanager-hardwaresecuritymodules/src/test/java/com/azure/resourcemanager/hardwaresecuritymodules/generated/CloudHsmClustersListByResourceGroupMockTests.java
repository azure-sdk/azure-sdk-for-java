// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwaresecuritymodulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"activationState\":\"Active\",\"autoGeneratedDomainNameLabelScope\":\"SubscriptionReuse\",\"hsms\":[{\"fqdn\":\"yrnxxmueedn\",\"state\":\"dvstkw\",\"stateMessage\":\"tchealmf\"},{\"fqdn\":\"d\",\"state\":\"ygdvwv\",\"stateMessage\":\"iohgwxrtfud\"},{\"fqdn\":\"pxgy\",\"state\":\"gvr\",\"stateMessage\":\"npkukghimdblx\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Canceled\",\"groupIds\":[\"j\",\"wmszkk\"]},\"etag\":\"qreyfkzi\",\"id\":\"jawneaiv\",\"name\":\"wczelpci\",\"type\":\"elsfeaen\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Updating\",\"groupIds\":[\"lddxbjhwua\"]},\"etag\":\"oz\",\"id\":\"sphyoulpjrvxa\",\"name\":\"l\",\"type\":\"vimjwos\"},{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Deleting\",\"groupIds\":[\"kfcktqum\"]},\"etag\":\"kkezzikhlyfjhdgq\",\"id\":\"ebdunyg\",\"name\":\"eqidbqfatpx\",\"type\":\"lr\"}],\"provisioningState\":\"Deleting\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"a\"},\"identity\":{\"principalId\":\"varmywdmj\",\"tenantId\":\"q\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"mareqnajxqugj\":{\"principalId\":\"x\",\"clientId\":\"wlycoduhpkxkg\"},\"i\":{\"principalId\":\"ycubeddgs\",\"clientId\":\"fwqmzqalkrmn\"},\"tuzqogsexne\":{\"principalId\":\"xacqqudfnbyx\",\"clientId\":\"aabjyvayffimrz\"},\"uzsoi\":{\"principalId\":\"dnw\",\"clientId\":\"mewzsyyc\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard B10\",\"capacity\":1817909710},\"location\":\"xtrthz\",\"tags\":{\"bpaxhexiilivpdt\":\"tdwkqbrq\"},\"id\":\"irqtdqoa\",\"name\":\"oruzfgsquyfxrxx\",\"type\":\"eptra\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwaresecuritymodulesManager manager = HardwaresecuritymodulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<CloudHsmCluster> response
            = manager.cloudHsmClusters().listByResourceGroup("z", "v", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xtrthz", response.iterator().next().location());
        Assertions.assertEquals("tdwkqbrq", response.iterator().next().tags().get("bpaxhexiilivpdt"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.iterator().next().sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B10, response.iterator().next().sku().name());
        Assertions.assertEquals(1817909710, response.iterator().next().sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.SUBSCRIPTION_REUSE,
            response.iterator().next().autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, response.iterator().next().publicNetworkAccess());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwaresecuritymodulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.AutoGeneratedDomainNameLabelScope;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmCluster;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuFamily;
import com.azure.resourcemanager.hardwaresecuritymodules.models.CloudHsmClusterSkuName;
import com.azure.resourcemanager.hardwaresecuritymodules.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.hardwaresecuritymodules.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudHsmClustersGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"activationState\":\"Active\",\"autoGeneratedDomainNameLabelScope\":\"NoReuse\",\"hsms\":[{\"fqdn\":\"fovljxyws\",\"state\":\"syrsndsytgadgvra\",\"stateMessage\":\"en\"}],\"privateEndpointConnections\":[{\"properties\":{\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"provisioningState\":\"Succeeded\",\"groupIds\":[\"q\",\"uijfqk\",\"cewiipfpub\",\"ibwwiftohqkv\"]},\"etag\":\"vksgplsaknynfsy\",\"id\":\"jphuopxodlqi\",\"name\":\"ntorzihleosjswsr\",\"type\":\"slyzrpzbchckqq\"}],\"provisioningState\":\"Canceled\",\"publicNetworkAccess\":\"Disabled\",\"statusMessage\":\"ysuiizynkedya\"},\"identity\":{\"principalId\":\"yhqmibzyhwi\",\"tenantId\":\"mypyynpcdpu\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"bldtlww\":{\"principalId\":\"wznm\",\"clientId\":\"iknsorgjh\"}}},\"sku\":{\"family\":\"B\",\"name\":\"Standard_B1\",\"capacity\":1940246801},\"location\":\"cvokotllxdyhg\",\"tags\":{\"hadoocrk\":\"cogjltdtbn\",\"amqgxqquezikyw\":\"cikhnv\"},\"id\":\"gxk\",\"name\":\"lla\",\"type\":\"melwuipiccjz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwaresecuritymodulesManager manager = HardwaresecuritymodulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CloudHsmCluster response = manager.cloudHsmClusters()
            .getByResourceGroupWithResponse("chkoymkcdyh", "pkkpw", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("cvokotllxdyhg", response.location());
        Assertions.assertEquals("cogjltdtbn", response.tags().get("hadoocrk"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals(CloudHsmClusterSkuFamily.B, response.sku().family());
        Assertions.assertEquals(CloudHsmClusterSkuName.STANDARD_B1, response.sku().name());
        Assertions.assertEquals(1940246801, response.sku().capacity());
        Assertions.assertEquals(AutoGeneratedDomainNameLabelScope.NO_REUSE,
            response.autoGeneratedDomainNameLabelScope());
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, response.publicNetworkAccess());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hardwaresecuritymodules.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hardwaresecuritymodules.HardwaresecuritymodulesManager;
import com.azure.resourcemanager.hardwaresecuritymodules.models.OutboundEnvironmentEndpoint;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DedicatedHsmsListOutboundNetworkDependenciesEndpointsMockTests {
    @Test
    public void testListOutboundNetworkDependenciesEndpoints() throws Exception {
        String responseStr
            = "{\"value\":[{\"category\":\"kq\",\"endpoints\":[{\"domainName\":\"zslesjcbher\",\"endpointDetails\":[{\"ipAddress\":\"ewdjcvbquwrb\",\"port\":372770519,\"protocol\":\"gohbuffkmrq\",\"description\":\"vvhmxtdrj\"},{\"ipAddress\":\"tac\",\"port\":441637569,\"protocol\":\"vewzcj\",\"description\":\"m\"}]},{\"domainName\":\"pmguaadraufac\",\"endpointDetails\":[{\"ipAddress\":\"zov\",\"port\":73539511,\"protocol\":\"iuxxpshneekulfg\",\"description\":\"qubkw\"},{\"ipAddress\":\"enr\",\"port\":1559984904,\"protocol\":\"ujbazpjuohminyfl\",\"description\":\"rwm\"},{\"ipAddress\":\"vwpklvxwmygdxp\",\"port\":2032648674,\"protocol\":\"hiszepnnbjcrxgib\",\"description\":\"axconfozauo\"},{\"ipAddress\":\"ukokwbqplhlvn\",\"port\":991430117,\"protocol\":\"zlrphwzs\",\"description\":\"dweyuqdunv\"}]}]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HardwaresecuritymodulesManager manager = HardwaresecuritymodulesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<OutboundEnvironmentEndpoint> response = manager.dedicatedHsms()
            .listOutboundNetworkDependenciesEndpoints("fmluiqtqzfavyvn", "qybaryeua", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kq", response.iterator().next().category());
        Assertions.assertEquals("zslesjcbher", response.iterator().next().endpoints().get(0).domainName());
        Assertions.assertEquals("ewdjcvbquwrb",
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).ipAddress());
        Assertions.assertEquals(372770519,
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).port());
        Assertions.assertEquals("gohbuffkmrq",
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).protocol());
        Assertions.assertEquals("vvhmxtdrj",
            response.iterator().next().endpoints().get(0).endpointDetails().get(0).description());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The properties of test base credential. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "credentialType",
    defaultImpl = CredentialProperties.class)
@JsonTypeName("CredentialProperties")
@JsonSubTypes({@JsonSubTypes.Type(name = "IntuneAccount", value = IntuneSingletonResourceProperties.class)})
@Fluent
public class CredentialProperties {
    /*
     * Credential display name.
     */
    @JsonProperty(value = "displayName", required = true)
    private String displayName;

    /** Creates an instance of CredentialProperties class. */
    public CredentialProperties() {
    }

    /**
     * Get the displayName property: Credential display name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Credential display name.
     *
     * @param displayName the displayName value to set.
     * @return the CredentialProperties object itself.
     */
    public CredentialProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (displayName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property displayName in model CredentialProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CredentialProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.ImageDefinitionResourceInner;

/** An immutable client-side representation of ImageDefinitionResource. */
public interface ImageDefinitionResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the architecture property: Custom image architecture.
     *
     * @return the architecture value.
     */
    ImageArchitecture architecture();

    /**
     * Gets the osState property: Custom image OS state.
     *
     * @return the osState value.
     */
    ImageOSState osState();

    /**
     * Gets the securityType property: Custom image security type.
     *
     * @return the securityType value.
     */
    ImageSecurityType securityType();

    /**
     * Gets the provisioningState property: The provisioningState property.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the inner com.azure.resourcemanager.testbase.fluent.models.ImageDefinitionResourceInner object.
     *
     * @return the inner object.
     */
    ImageDefinitionResourceInner innerModel();

    /** The entirety of the ImageDefinitionResource definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /** The ImageDefinitionResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the ImageDefinitionResource definition. */
        interface Blank extends WithParentResource {
        }

        /** The stage of the ImageDefinitionResource definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, testBaseAccountName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param testBaseAccountName The resource name of the Test Base Account.
             * @return the next definition stage.
             */
            WithCreate withExistingTestBaseAccount(String resourceGroupName, String testBaseAccountName);
        }

        /**
         * The stage of the ImageDefinitionResource definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithArchitecture, DefinitionStages.WithOsState, DefinitionStages.WithSecurityType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ImageDefinitionResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ImageDefinitionResource create(Context context);
        }

        /** The stage of the ImageDefinitionResource definition allowing to specify architecture. */
        interface WithArchitecture {
            /**
             * Specifies the architecture property: Custom image architecture..
             *
             * @param architecture Custom image architecture.
             * @return the next definition stage.
             */
            WithCreate withArchitecture(ImageArchitecture architecture);
        }

        /** The stage of the ImageDefinitionResource definition allowing to specify osState. */
        interface WithOsState {
            /**
             * Specifies the osState property: Custom image OS state..
             *
             * @param osState Custom image OS state.
             * @return the next definition stage.
             */
            WithCreate withOsState(ImageOSState osState);
        }

        /** The stage of the ImageDefinitionResource definition allowing to specify securityType. */
        interface WithSecurityType {
            /**
             * Specifies the securityType property: Custom image security type..
             *
             * @param securityType Custom image security type.
             * @return the next definition stage.
             */
            WithCreate withSecurityType(ImageSecurityType securityType);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ImageDefinitionResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ImageDefinitionResource refresh(Context context);
}

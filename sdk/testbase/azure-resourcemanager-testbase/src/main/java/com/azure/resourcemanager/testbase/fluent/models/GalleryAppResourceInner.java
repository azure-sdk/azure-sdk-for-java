// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.testbase.models.ApplicationType;
import com.azure.resourcemanager.testbase.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The gallery application resource. */
@Fluent
public final class GalleryAppResourceInner extends ProxyResource {
    /*
     * Properties of a gallery application.
     */
    @JsonProperty(value = "properties")
    private GalleryAppProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of GalleryAppResourceInner class. */
    public GalleryAppResourceInner() {
    }

    /**
     * Get the innerProperties property: Properties of a gallery application.
     *
     * @return the innerProperties value.
     */
    private GalleryAppProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the applicationType property: The application type of a gallery application.
     *
     * @return the applicationType value.
     */
    public ApplicationType applicationType() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationType();
    }

    /**
     * Set the applicationType property: The application type of a gallery application.
     *
     * @param applicationType the applicationType value to set.
     * @return the GalleryAppResourceInner object itself.
     */
    public GalleryAppResourceInner withApplicationType(ApplicationType applicationType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GalleryAppProperties();
        }
        this.innerProperties().withApplicationType(applicationType);
        return this;
    }

    /**
     * Get the applicationId property: The id of a gallery application.
     *
     * @return the applicationId value.
     */
    public String applicationId() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationId();
    }

    /**
     * Set the applicationId property: The id of a gallery application.
     *
     * @param applicationId the applicationId value to set.
     * @return the GalleryAppResourceInner object itself.
     */
    public GalleryAppResourceInner withApplicationId(String applicationId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GalleryAppProperties();
        }
        this.innerProperties().withApplicationId(applicationId);
        return this;
    }

    /**
     * Get the applicationName property: The name of a gallery application.
     *
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationName();
    }

    /**
     * Set the applicationName property: The name of a gallery application.
     *
     * @param applicationName the applicationName value to set.
     * @return the GalleryAppResourceInner object itself.
     */
    public GalleryAppResourceInner withApplicationName(String applicationName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GalleryAppProperties();
        }
        this.innerProperties().withApplicationName(applicationName);
        return this;
    }

    /**
     * Get the popularity property: The number of users using a gallery application.
     *
     * @return the popularity value.
     */
    public Long popularity() {
        return this.innerProperties() == null ? null : this.innerProperties().popularity();
    }

    /**
     * Set the popularity property: The number of users using a gallery application.
     *
     * @param popularity the popularity value to set.
     * @return the GalleryAppResourceInner object itself.
     */
    public GalleryAppResourceInner withPopularity(Long popularity) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GalleryAppProperties();
        }
        this.innerProperties().withPopularity(popularity);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

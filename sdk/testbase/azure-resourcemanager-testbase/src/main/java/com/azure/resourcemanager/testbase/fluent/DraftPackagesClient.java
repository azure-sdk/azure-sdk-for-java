// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.testbase.fluent.models.DraftPackageGetPathResponseInner;
import com.azure.resourcemanager.testbase.fluent.models.DraftPackageResourceInner;
import com.azure.resourcemanager.testbase.models.CopyFromPackageOperationParameters;
import com.azure.resourcemanager.testbase.models.DraftPackageUpdateParameters;
import com.azure.resourcemanager.testbase.models.ExtractFileOperationParameters;
import com.azure.resourcemanager.testbase.models.GenerateOperationParameters;

/** An instance of this class provides access to all the operations defined in DraftPackagesClient. */
public interface DraftPackagesClient {
    /**
     * Lists all the draft packages under a Test Base Account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Test Base Draft Packages as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DraftPackageResourceInner> listByTestBaseAccount(
        String resourceGroupName, String testBaseAccountName);

    /**
     * Lists all the draft packages under a Test Base Account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param packageName Parameter used to filter draft packages by linked Test Base Package.
     * @param editPackage Parameter used to filter draft packages by editPackage property.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Test Base Draft Packages as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DraftPackageResourceInner> listByTestBaseAccount(
        String resourceGroupName, String testBaseAccountName, String packageName, Boolean editPackage, Context context);

    /**
     * Creates or replaces a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to create a Test Base Draft Package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Test Base Draft Package resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DraftPackageResourceInner> createWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        DraftPackageResourceInner parameters,
        Context context);

    /**
     * Creates or replaces a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to create a Test Base Draft Package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Test Base Draft Package resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DraftPackageResourceInner create(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        DraftPackageResourceInner parameters);

    /**
     * Updates an existing Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to update a Test Base Draft Package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Test Base Draft Package resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DraftPackageResourceInner> updateWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        DraftPackageUpdateParameters parameters,
        Context context);

    /**
     * Updates an existing Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to update a Test Base Draft Package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Test Base Draft Package resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DraftPackageResourceInner update(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        DraftPackageUpdateParameters parameters);

    /**
     * Deletes a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String testBaseAccountName, String draftPackageName, Context context);

    /**
     * Deletes a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String testBaseAccountName, String draftPackageName);

    /**
     * Gets a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Test Base Draft Package along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DraftPackageResourceInner> getWithResponse(
        String resourceGroupName, String testBaseAccountName, String draftPackageName, Context context);

    /**
     * Gets a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Test Base Draft Package.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DraftPackageResourceInner get(String resourceGroupName, String testBaseAccountName, String draftPackageName);

    /**
     * Gets draft package path and temp working path with SAS.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return draft package path and temp working path with SAS along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DraftPackageGetPathResponseInner> getPathWithResponse(
        String resourceGroupName, String testBaseAccountName, String draftPackageName, Context context);

    /**
     * Gets draft package path and temp working path with SAS.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return draft package path and temp working path with SAS.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DraftPackageGetPathResponseInner getPath(
        String resourceGroupName, String testBaseAccountName, String draftPackageName);

    /**
     * Copy package file and metadata from a package to this draft package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package CopyFromPackage operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginCopyFromPackage(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        CopyFromPackageOperationParameters parameters);

    /**
     * Copy package file and metadata from a package to this draft package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package CopyFromPackage operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginCopyFromPackage(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        CopyFromPackageOperationParameters parameters,
        Context context);

    /**
     * Copy package file and metadata from a package to this draft package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package CopyFromPackage operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void copyFromPackage(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        CopyFromPackageOperationParameters parameters);

    /**
     * Copy package file and metadata from a package to this draft package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package CopyFromPackage operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void copyFromPackage(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        CopyFromPackageOperationParameters parameters,
        Context context);

    /**
     * Performs extracting file operation for a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package ExtractFile operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginExtractFile(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        ExtractFileOperationParameters parameters);

    /**
     * Performs extracting file operation for a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package ExtractFile operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginExtractFile(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        ExtractFileOperationParameters parameters,
        Context context);

    /**
     * Performs extracting file operation for a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package ExtractFile operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void extractFile(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        ExtractFileOperationParameters parameters);

    /**
     * Performs extracting file operation for a Test Base Draft Package.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package ExtractFile operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void extractFile(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        ExtractFileOperationParameters parameters,
        Context context);

    /**
     * Generates folders and scripts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package Generate operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginGenerateFoldersAndScripts(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        GenerateOperationParameters parameters);

    /**
     * Generates folders and scripts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package Generate operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginGenerateFoldersAndScripts(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        GenerateOperationParameters parameters,
        Context context);

    /**
     * Generates folders and scripts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package Generate operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void generateFoldersAndScripts(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        GenerateOperationParameters parameters);

    /**
     * Generates folders and scripts.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param draftPackageName The resource name of the Test Base Draft Package.
     * @param parameters Parameters supplied to the Test Base Draft Package Generate operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void generateFoldersAndScripts(
        String resourceGroupName,
        String testBaseAccountName,
        String draftPackageName,
        GenerateOperationParameters parameters,
        Context context);
}

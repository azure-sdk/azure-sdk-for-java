// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.testbase.models.Architecture;
import com.azure.resourcemanager.testbase.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Properties of a first party application.
 */
@Fluent
public final class FirstPartyAppProperties {
    /*
     * The provisioning state of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The media type of a first party application of a Test Base Account.
     */
    @JsonProperty(value = "mediaType")
    private String mediaType;

    /*
     * The architecture of a first party application of a Test Base Account.
     */
    @JsonProperty(value = "architecture")
    private Architecture architecture;

    /*
     * The channel info of a first party application of a Test Base Account.
     */
    @JsonProperty(value = "channel")
    private String channel;

    /*
     * The ring info of a first party application of a Test Base Account.
     */
    @JsonProperty(value = "ring")
    private String ring;

    /*
     * The supported OS products of a first party application of a Test Base Account.
     */
    @JsonProperty(value = "supportedProducts")
    private List<String> supportedProducts;

    /**
     * Creates an instance of FirstPartyAppProperties class.
     */
    public FirstPartyAppProperties() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the mediaType property: The media type of a first party application of a Test Base Account.
     * 
     * @return the mediaType value.
     */
    public String mediaType() {
        return this.mediaType;
    }

    /**
     * Set the mediaType property: The media type of a first party application of a Test Base Account.
     * 
     * @param mediaType the mediaType value to set.
     * @return the FirstPartyAppProperties object itself.
     */
    public FirstPartyAppProperties withMediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }

    /**
     * Get the architecture property: The architecture of a first party application of a Test Base Account.
     * 
     * @return the architecture value.
     */
    public Architecture architecture() {
        return this.architecture;
    }

    /**
     * Set the architecture property: The architecture of a first party application of a Test Base Account.
     * 
     * @param architecture the architecture value to set.
     * @return the FirstPartyAppProperties object itself.
     */
    public FirstPartyAppProperties withArchitecture(Architecture architecture) {
        this.architecture = architecture;
        return this;
    }

    /**
     * Get the channel property: The channel info of a first party application of a Test Base Account.
     * 
     * @return the channel value.
     */
    public String channel() {
        return this.channel;
    }

    /**
     * Set the channel property: The channel info of a first party application of a Test Base Account.
     * 
     * @param channel the channel value to set.
     * @return the FirstPartyAppProperties object itself.
     */
    public FirstPartyAppProperties withChannel(String channel) {
        this.channel = channel;
        return this;
    }

    /**
     * Get the ring property: The ring info of a first party application of a Test Base Account.
     * 
     * @return the ring value.
     */
    public String ring() {
        return this.ring;
    }

    /**
     * Set the ring property: The ring info of a first party application of a Test Base Account.
     * 
     * @param ring the ring value to set.
     * @return the FirstPartyAppProperties object itself.
     */
    public FirstPartyAppProperties withRing(String ring) {
        this.ring = ring;
        return this;
    }

    /**
     * Get the supportedProducts property: The supported OS products of a first party application of a Test Base
     * Account.
     * 
     * @return the supportedProducts value.
     */
    public List<String> supportedProducts() {
        return this.supportedProducts;
    }

    /**
     * Set the supportedProducts property: The supported OS products of a first party application of a Test Base
     * Account.
     * 
     * @param supportedProducts the supportedProducts value to set.
     * @return the FirstPartyAppProperties object itself.
     */
    public FirstPartyAppProperties withSupportedProducts(List<String> supportedProducts) {
        this.supportedProducts = supportedProducts;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

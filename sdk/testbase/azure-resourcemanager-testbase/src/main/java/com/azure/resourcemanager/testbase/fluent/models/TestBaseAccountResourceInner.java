// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.testbase.models.ProvisioningState;
import com.azure.resourcemanager.testbase.models.SystemAssignedServiceIdentity;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The Test Base Account resource. */
@Fluent
public final class TestBaseAccountResourceInner extends Resource {
    /*
     * Properties of a Test Base Account.
     */
    @JsonProperty(value = "properties")
    private TestBaseAccountResourcePropertiesInner innerProperties;

    /*
     * The identity of the testBaseAccount.
     */
    @JsonProperty(value = "identity")
    private SystemAssignedServiceIdentity identity;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of TestBaseAccountResourceInner class. */
    public TestBaseAccountResourceInner() {
    }

    /**
     * Get the innerProperties property: Properties of a Test Base Account.
     *
     * @return the innerProperties value.
     */
    private TestBaseAccountResourcePropertiesInner innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the identity property: The identity of the testBaseAccount.
     *
     * @return the identity value.
     */
    public SystemAssignedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The identity of the testBaseAccount.
     *
     * @param identity the identity value to set.
     * @return the TestBaseAccountResourceInner object itself.
     */
    public TestBaseAccountResourceInner withIdentity(SystemAssignedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public TestBaseAccountResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TestBaseAccountResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the sku property: The SKU of the Test Base Account.
     *
     * @return the sku value.
     */
    public TestBaseAccountSkuInner sku() {
        return this.innerProperties() == null ? null : this.innerProperties().sku();
    }

    /**
     * Set the sku property: The SKU of the Test Base Account.
     *
     * @param sku the sku value to set.
     * @return the TestBaseAccountResourceInner object itself.
     */
    public TestBaseAccountResourceInner withSku(TestBaseAccountSkuInner sku) {
        if (this.innerProperties() == null) {
            this.innerProperties = new TestBaseAccountResourcePropertiesInner();
        }
        this.innerProperties().withSku(sku);
        return this;
    }

    /**
     * Get the accessLevel property: The access level of the Test Base Account.
     *
     * @return the accessLevel value.
     */
    public String accessLevel() {
        return this.innerProperties() == null ? null : this.innerProperties().accessLevel();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** The Metadata of a single Intune App. */
@Fluent
public final class DraftPackageIntuneAppMetadataItem {
    /*
     * Intune app name.
     */
    @JsonProperty(value = "appName")
    private String appName;

    /*
     * Intune app version.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Intune app id.
     */
    @JsonProperty(value = "appId")
    private String appId;

    /*
     * Publisher of the app.
     */
    @JsonProperty(value = "publisher")
    private String publisher;

    /*
     * Description of the app.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Owner of the app.
     */
    @JsonProperty(value = "owner")
    private String owner;

    /*
     * Creation date of the app.
     */
    @JsonProperty(value = "createDate")
    private OffsetDateTime createDate;

    /*
     * Count of dependency apps.
     */
    @JsonProperty(value = "dependentAppCount")
    private Integer dependentAppCount;

    /*
     * Install command.
     */
    @JsonProperty(value = "installCommand")
    private String installCommand;

    /*
     * Uninstall command.
     */
    @JsonProperty(value = "uninstallCommand")
    private String uninstallCommand;

    /*
     * last processed time tickets.
     */
    @JsonProperty(value = "lastProcessed")
    private Long lastProcessed;

    /*
     * Ids of dependency apps.
     */
    @JsonProperty(value = "dependencyIds")
    private List<String> dependencyIds;

    /*
     * Setup file path.
     */
    @JsonProperty(value = "setupFile")
    private String setupFile;

    /*
     * Minimum supported OS. The OS version must be greater than this version to run this app.
     */
    @JsonProperty(value = "minimumSupportedOS")
    private String minimumSupportedOS;

    /*
     * Extract status.
     */
    @JsonProperty(value = "status")
    private IntuneExtractStatus status;

    /*
     * Expected exit codes returned from Intune App.
     */
    @JsonProperty(value = "expectedExitCodes")
    private List<String> expectedExitCodes;

    /** Creates an instance of DraftPackageIntuneAppMetadataItem class. */
    public DraftPackageIntuneAppMetadataItem() {
    }

    /**
     * Get the appName property: Intune app name.
     *
     * @return the appName value.
     */
    public String appName() {
        return this.appName;
    }

    /**
     * Set the appName property: Intune app name.
     *
     * @param appName the appName value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withAppName(String appName) {
        this.appName = appName;
        return this;
    }

    /**
     * Get the version property: Intune app version.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Intune app version.
     *
     * @param version the version value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the appId property: Intune app id.
     *
     * @return the appId value.
     */
    public String appId() {
        return this.appId;
    }

    /**
     * Set the appId property: Intune app id.
     *
     * @param appId the appId value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withAppId(String appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Get the publisher property: Publisher of the app.
     *
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Set the publisher property: Publisher of the app.
     *
     * @param publisher the publisher value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * Get the description property: Description of the app.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the app.
     *
     * @param description the description value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the owner property: Owner of the app.
     *
     * @return the owner value.
     */
    public String owner() {
        return this.owner;
    }

    /**
     * Set the owner property: Owner of the app.
     *
     * @param owner the owner value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withOwner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Get the createDate property: Creation date of the app.
     *
     * @return the createDate value.
     */
    public OffsetDateTime createDate() {
        return this.createDate;
    }

    /**
     * Set the createDate property: Creation date of the app.
     *
     * @param createDate the createDate value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withCreateDate(OffsetDateTime createDate) {
        this.createDate = createDate;
        return this;
    }

    /**
     * Get the dependentAppCount property: Count of dependency apps.
     *
     * @return the dependentAppCount value.
     */
    public Integer dependentAppCount() {
        return this.dependentAppCount;
    }

    /**
     * Set the dependentAppCount property: Count of dependency apps.
     *
     * @param dependentAppCount the dependentAppCount value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withDependentAppCount(Integer dependentAppCount) {
        this.dependentAppCount = dependentAppCount;
        return this;
    }

    /**
     * Get the installCommand property: Install command.
     *
     * @return the installCommand value.
     */
    public String installCommand() {
        return this.installCommand;
    }

    /**
     * Set the installCommand property: Install command.
     *
     * @param installCommand the installCommand value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withInstallCommand(String installCommand) {
        this.installCommand = installCommand;
        return this;
    }

    /**
     * Get the uninstallCommand property: Uninstall command.
     *
     * @return the uninstallCommand value.
     */
    public String uninstallCommand() {
        return this.uninstallCommand;
    }

    /**
     * Set the uninstallCommand property: Uninstall command.
     *
     * @param uninstallCommand the uninstallCommand value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withUninstallCommand(String uninstallCommand) {
        this.uninstallCommand = uninstallCommand;
        return this;
    }

    /**
     * Get the lastProcessed property: last processed time tickets.
     *
     * @return the lastProcessed value.
     */
    public Long lastProcessed() {
        return this.lastProcessed;
    }

    /**
     * Set the lastProcessed property: last processed time tickets.
     *
     * @param lastProcessed the lastProcessed value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withLastProcessed(Long lastProcessed) {
        this.lastProcessed = lastProcessed;
        return this;
    }

    /**
     * Get the dependencyIds property: Ids of dependency apps.
     *
     * @return the dependencyIds value.
     */
    public List<String> dependencyIds() {
        return this.dependencyIds;
    }

    /**
     * Set the dependencyIds property: Ids of dependency apps.
     *
     * @param dependencyIds the dependencyIds value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withDependencyIds(List<String> dependencyIds) {
        this.dependencyIds = dependencyIds;
        return this;
    }

    /**
     * Get the setupFile property: Setup file path.
     *
     * @return the setupFile value.
     */
    public String setupFile() {
        return this.setupFile;
    }

    /**
     * Set the setupFile property: Setup file path.
     *
     * @param setupFile the setupFile value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withSetupFile(String setupFile) {
        this.setupFile = setupFile;
        return this;
    }

    /**
     * Get the minimumSupportedOS property: Minimum supported OS. The OS version must be greater than this version to
     * run this app.
     *
     * @return the minimumSupportedOS value.
     */
    public String minimumSupportedOS() {
        return this.minimumSupportedOS;
    }

    /**
     * Set the minimumSupportedOS property: Minimum supported OS. The OS version must be greater than this version to
     * run this app.
     *
     * @param minimumSupportedOS the minimumSupportedOS value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withMinimumSupportedOS(String minimumSupportedOS) {
        this.minimumSupportedOS = minimumSupportedOS;
        return this;
    }

    /**
     * Get the status property: Extract status.
     *
     * @return the status value.
     */
    public IntuneExtractStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Extract status.
     *
     * @param status the status value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withStatus(IntuneExtractStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the expectedExitCodes property: Expected exit codes returned from Intune App.
     *
     * @return the expectedExitCodes value.
     */
    public List<String> expectedExitCodes() {
        return this.expectedExitCodes;
    }

    /**
     * Set the expectedExitCodes property: Expected exit codes returned from Intune App.
     *
     * @param expectedExitCodes the expectedExitCodes value to set.
     * @return the DraftPackageIntuneAppMetadataItem object itself.
     */
    public DraftPackageIntuneAppMetadataItem withExpectedExitCodes(List<String> expectedExitCodes) {
        this.expectedExitCodes = expectedExitCodes;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

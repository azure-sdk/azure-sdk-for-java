// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.AvailableInplaceUpgradeOSClient;
import com.azure.resourcemanager.testbase.fluent.models.AvailableInplaceUpgradeOSResourceInner;
import com.azure.resourcemanager.testbase.models.AvailableInplaceUpgradeOS;
import com.azure.resourcemanager.testbase.models.AvailableInplaceUpgradeOSResource;
import com.azure.resourcemanager.testbase.models.OsUpdateType;

public final class AvailableInplaceUpgradeOSImpl implements AvailableInplaceUpgradeOS {
    private static final ClientLogger LOGGER = new ClientLogger(AvailableInplaceUpgradeOSImpl.class);

    private final AvailableInplaceUpgradeOSClient innerClient;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    public AvailableInplaceUpgradeOSImpl(
        AvailableInplaceUpgradeOSClient innerClient,
        com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AvailableInplaceUpgradeOSResource> list(
        String resourceGroupName, String testBaseAccountName, OsUpdateType osUpdateType) {
        PagedIterable<AvailableInplaceUpgradeOSResourceInner> inner =
            this.serviceClient().list(resourceGroupName, testBaseAccountName, osUpdateType);
        return Utils.mapPage(inner, inner1 -> new AvailableInplaceUpgradeOSResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<AvailableInplaceUpgradeOSResource> list(
        String resourceGroupName, String testBaseAccountName, OsUpdateType osUpdateType, Context context) {
        PagedIterable<AvailableInplaceUpgradeOSResourceInner> inner =
            this.serviceClient().list(resourceGroupName, testBaseAccountName, osUpdateType, context);
        return Utils.mapPage(inner, inner1 -> new AvailableInplaceUpgradeOSResourceImpl(inner1, this.manager()));
    }

    public Response<AvailableInplaceUpgradeOSResource> getWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        String availableInplaceUpgradeOSResourceName,
        Context context) {
        Response<AvailableInplaceUpgradeOSResourceInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName, testBaseAccountName, availableInplaceUpgradeOSResourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AvailableInplaceUpgradeOSResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AvailableInplaceUpgradeOSResource get(
        String resourceGroupName, String testBaseAccountName, String availableInplaceUpgradeOSResourceName) {
        AvailableInplaceUpgradeOSResourceInner inner =
            this.serviceClient().get(resourceGroupName, testBaseAccountName, availableInplaceUpgradeOSResourceName);
        if (inner != null) {
            return new AvailableInplaceUpgradeOSResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private AvailableInplaceUpgradeOSClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }
}

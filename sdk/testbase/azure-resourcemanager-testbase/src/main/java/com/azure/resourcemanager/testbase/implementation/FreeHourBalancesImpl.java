// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.FreeHourBalancesClient;
import com.azure.resourcemanager.testbase.fluent.models.FreeHourBalanceResourceInner;
import com.azure.resourcemanager.testbase.models.FreeHourBalanceName;
import com.azure.resourcemanager.testbase.models.FreeHourBalanceResource;
import com.azure.resourcemanager.testbase.models.FreeHourBalances;

public final class FreeHourBalancesImpl implements FreeHourBalances {
    private static final ClientLogger LOGGER = new ClientLogger(FreeHourBalancesImpl.class);

    private final FreeHourBalancesClient innerClient;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    public FreeHourBalancesImpl(FreeHourBalancesClient innerClient,
        com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<FreeHourBalanceResource> list(String resourceGroupName, String testBaseAccountName) {
        PagedIterable<FreeHourBalanceResourceInner> inner
            = this.serviceClient().list(resourceGroupName, testBaseAccountName);
        return Utils.mapPage(inner, inner1 -> new FreeHourBalanceResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<FreeHourBalanceResource> list(String resourceGroupName, String testBaseAccountName,
        Context context) {
        PagedIterable<FreeHourBalanceResourceInner> inner
            = this.serviceClient().list(resourceGroupName, testBaseAccountName, context);
        return Utils.mapPage(inner, inner1 -> new FreeHourBalanceResourceImpl(inner1, this.manager()));
    }

    public Response<FreeHourBalanceResource> getWithResponse(String resourceGroupName, String testBaseAccountName,
        FreeHourBalanceName freeHourBalanceName, Context context) {
        Response<FreeHourBalanceResourceInner> inner = this.serviceClient().getWithResponse(resourceGroupName,
            testBaseAccountName, freeHourBalanceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new FreeHourBalanceResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public FreeHourBalanceResource get(String resourceGroupName, String testBaseAccountName,
        FreeHourBalanceName freeHourBalanceName) {
        FreeHourBalanceResourceInner inner
            = this.serviceClient().get(resourceGroupName, testBaseAccountName, freeHourBalanceName);
        if (inner != null) {
            return new FreeHourBalanceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private FreeHourBalancesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }
}

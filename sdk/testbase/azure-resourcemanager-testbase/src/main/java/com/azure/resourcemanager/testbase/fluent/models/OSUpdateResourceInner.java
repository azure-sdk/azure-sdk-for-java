// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.testbase.models.OsProperties;
import com.azure.resourcemanager.testbase.models.Type;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** An OS Update. */
@Fluent
public final class OSUpdateResourceInner extends ProxyResource {
    /*
     * Properties of an OS Update.
     */
    @JsonProperty(value = "properties")
    private OSUpdateProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of OSUpdateResourceInner class. */
    public OSUpdateResourceInner() {
    }

    /**
     * Get the innerProperties property: Properties of an OS Update.
     *
     * @return the innerProperties value.
     */
    private OSUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the osName property: The name of the OS.
     *
     * @return the osName value.
     */
    public String osName() {
        return this.innerProperties() == null ? null : this.innerProperties().osName();
    }

    /**
     * Set the osName property: The name of the OS.
     *
     * @param osName the osName value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withOsName(String osName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withOsName(osName);
        return this;
    }

    /**
     * Get the release property: The name of tested release.
     *
     * @return the release value.
     */
    public String release() {
        return this.innerProperties() == null ? null : this.innerProperties().release();
    }

    /**
     * Set the release property: The name of tested release.
     *
     * @param release the release value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withRelease(String release) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withRelease(release);
        return this;
    }

    /**
     * Get the flightingRing property: The flighting ring, only for release of feature updates.
     *
     * @return the flightingRing value.
     */
    public String flightingRing() {
        return this.innerProperties() == null ? null : this.innerProperties().flightingRing();
    }

    /**
     * Set the flightingRing property: The flighting ring, only for release of feature updates.
     *
     * @param flightingRing the flightingRing value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withFlightingRing(String flightingRing) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withFlightingRing(flightingRing);
        return this;
    }

    /**
     * Get the buildVersion property: The build version of the tested release (OS update).
     *
     * @return the buildVersion value.
     */
    public String buildVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().buildVersion();
    }

    /**
     * Set the buildVersion property: The build version of the tested release (OS update).
     *
     * @param buildVersion the buildVersion value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withBuildVersion(String buildVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withBuildVersion(buildVersion);
        return this;
    }

    /**
     * Get the buildRevision property: The build revision of the tested release (OS update).
     *
     * @return the buildRevision value.
     */
    public String buildRevision() {
        return this.innerProperties() == null ? null : this.innerProperties().buildRevision();
    }

    /**
     * Set the buildRevision property: The build revision of the tested release (OS update).
     *
     * @param buildRevision the buildRevision value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withBuildRevision(String buildRevision) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withBuildRevision(buildRevision);
        return this;
    }

    /**
     * Get the type property: The type of this release (OS update).
     *
     * @return the type value.
     */
    public Type typePropertiesType() {
        return this.innerProperties() == null ? null : this.innerProperties().type();
    }

    /**
     * Set the type property: The type of this release (OS update).
     *
     * @param type the type value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withTypePropertiesType(Type type) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withType(type);
        return this;
    }

    /**
     * Get the releaseVersionDate property: The release version date the tested release (OS update).
     *
     * @return the releaseVersionDate value.
     */
    public OffsetDateTime releaseVersionDate() {
        return this.innerProperties() == null ? null : this.innerProperties().releaseVersionDate();
    }

    /**
     * Set the releaseVersionDate property: The release version date the tested release (OS update).
     *
     * @param releaseVersionDate the releaseVersionDate value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withReleaseVersionDate(OffsetDateTime releaseVersionDate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withReleaseVersionDate(releaseVersionDate);
        return this;
    }

    /**
     * Get the inplaceUpgradeBaselineProperties property: The properties of baseline os for in-place upgrade test.
     *
     * @return the inplaceUpgradeBaselineProperties value.
     */
    public OsProperties inplaceUpgradeBaselineProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().inplaceUpgradeBaselineProperties();
    }

    /**
     * Set the inplaceUpgradeBaselineProperties property: The properties of baseline os for in-place upgrade test.
     *
     * @param inplaceUpgradeBaselineProperties the inplaceUpgradeBaselineProperties value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withInplaceUpgradeBaselineProperties(OsProperties inplaceUpgradeBaselineProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withInplaceUpgradeBaselineProperties(inplaceUpgradeBaselineProperties);
        return this;
    }

    /**
     * Get the customImageId property: Specify the referenced Test Base Custom Image Id if available.
     *
     * @return the customImageId value.
     */
    public String customImageId() {
        return this.innerProperties() == null ? null : this.innerProperties().customImageId();
    }

    /**
     * Set the customImageId property: Specify the referenced Test Base Custom Image Id if available.
     *
     * @param customImageId the customImageId value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withCustomImageId(String customImageId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withCustomImageId(customImageId);
        return this;
    }

    /**
     * Get the customImageDisplayName property: The name of the custom image resource.
     *
     * @return the customImageDisplayName value.
     */
    public String customImageDisplayName() {
        return this.innerProperties() == null ? null : this.innerProperties().customImageDisplayName();
    }

    /**
     * Set the customImageDisplayName property: The name of the custom image resource.
     *
     * @param customImageDisplayName the customImageDisplayName value to set.
     * @return the OSUpdateResourceInner object itself.
     */
    public OSUpdateResourceInner withCustomImageDisplayName(String customImageDisplayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OSUpdateProperties();
        }
        this.innerProperties().withCustomImageDisplayName(customImageDisplayName);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

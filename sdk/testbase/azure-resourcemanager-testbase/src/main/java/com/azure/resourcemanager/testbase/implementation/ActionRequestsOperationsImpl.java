// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.testbase.fluent.ActionRequestsOperationsClient;
import com.azure.resourcemanager.testbase.fluent.models.ActionRequestsInner;
import com.azure.resourcemanager.testbase.models.ActionRequests;
import com.azure.resourcemanager.testbase.models.ActionRequestsOperations;

public final class ActionRequestsOperationsImpl implements ActionRequestsOperations {
    private static final ClientLogger LOGGER = new ClientLogger(ActionRequestsOperationsImpl.class);

    private final ActionRequestsOperationsClient innerClient;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    public ActionRequestsOperationsImpl(
        ActionRequestsOperationsClient innerClient, com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName, String testBaseAccountName, String actionRequestName, Context context) {
        return this
            .serviceClient()
            .deleteWithResponse(resourceGroupName, testBaseAccountName, actionRequestName, context);
    }

    public void delete(String resourceGroupName, String testBaseAccountName, String actionRequestName) {
        this.serviceClient().delete(resourceGroupName, testBaseAccountName, actionRequestName);
    }

    public Response<ActionRequests> listWithResponse(
        String resourceGroupName, String testBaseAccountName, String requestType, Integer top, Context context) {
        Response<ActionRequestsInner> inner =
            this.serviceClient().listWithResponse(resourceGroupName, testBaseAccountName, requestType, top, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ActionRequestsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ActionRequests list(String resourceGroupName, String testBaseAccountName) {
        ActionRequestsInner inner = this.serviceClient().list(resourceGroupName, testBaseAccountName);
        if (inner != null) {
            return new ActionRequestsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void deleteById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String testBaseAccountName = Utils.getValueFromIdByName(id, "testBaseAccounts");
        if (testBaseAccountName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'testBaseAccounts'.", id)));
        }
        String actionRequestName = Utils.getValueFromIdByName(id, "actionRequests");
        if (actionRequestName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'actionRequests'.", id)));
        }
        this.deleteWithResponse(resourceGroupName, testBaseAccountName, actionRequestName, Context.NONE);
    }

    public Response<Void> deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String testBaseAccountName = Utils.getValueFromIdByName(id, "testBaseAccounts");
        if (testBaseAccountName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'testBaseAccounts'.", id)));
        }
        String actionRequestName = Utils.getValueFromIdByName(id, "actionRequests");
        if (actionRequestName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'actionRequests'.", id)));
        }
        return this.deleteWithResponse(resourceGroupName, testBaseAccountName, actionRequestName, context);
    }

    private ActionRequestsOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }

    public ActionRequestImpl define(String name) {
        return new ActionRequestImpl(name, this.manager());
    }
}

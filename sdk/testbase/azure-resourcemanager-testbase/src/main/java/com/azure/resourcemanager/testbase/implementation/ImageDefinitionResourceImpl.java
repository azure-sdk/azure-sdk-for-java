// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.ImageDefinitionResourceInner;
import com.azure.resourcemanager.testbase.models.ImageArchitecture;
import com.azure.resourcemanager.testbase.models.ImageDefinitionResource;
import com.azure.resourcemanager.testbase.models.ImageOSState;
import com.azure.resourcemanager.testbase.models.ImageSecurityType;

public final class ImageDefinitionResourceImpl implements ImageDefinitionResource, ImageDefinitionResource.Definition {
    private ImageDefinitionResourceInner innerObject;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    ImageDefinitionResourceImpl(
        ImageDefinitionResourceInner innerObject, com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ImageArchitecture architecture() {
        return this.innerModel().architecture();
    }

    public ImageOSState osState() {
        return this.innerModel().osState();
    }

    public ImageSecurityType securityType() {
        return this.innerModel().securityType();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ImageDefinitionResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String testBaseAccountName;

    private String imageDefinitionName;

    public ImageDefinitionResourceImpl withExistingTestBaseAccount(
        String resourceGroupName, String testBaseAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.testBaseAccountName = testBaseAccountName;
        return this;
    }

    public ImageDefinitionResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getImageDefinitions()
                .createWithResponse(
                    resourceGroupName, testBaseAccountName, imageDefinitionName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ImageDefinitionResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getImageDefinitions()
                .createWithResponse(
                    resourceGroupName, testBaseAccountName, imageDefinitionName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ImageDefinitionResourceImpl(String name, com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerObject = new ImageDefinitionResourceInner();
        this.serviceManager = serviceManager;
        this.imageDefinitionName = name;
    }

    public ImageDefinitionResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getImageDefinitions()
                .getWithResponse(resourceGroupName, testBaseAccountName, imageDefinitionName, Context.NONE)
                .getValue();
        return this;
    }

    public ImageDefinitionResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getImageDefinitions()
                .getWithResponse(resourceGroupName, testBaseAccountName, imageDefinitionName, context)
                .getValue();
        return this;
    }

    public ImageDefinitionResourceImpl withArchitecture(ImageArchitecture architecture) {
        this.innerModel().withArchitecture(architecture);
        return this;
    }

    public ImageDefinitionResourceImpl withOsState(ImageOSState osState) {
        this.innerModel().withOsState(osState);
        return this;
    }

    public ImageDefinitionResourceImpl withSecurityType(ImageSecurityType securityType) {
        this.innerModel().withSecurityType(securityType);
        return this;
    }
}

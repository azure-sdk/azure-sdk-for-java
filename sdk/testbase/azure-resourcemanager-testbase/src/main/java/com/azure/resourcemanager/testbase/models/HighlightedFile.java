// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The information of a highlighted file that user should pay attention to.
 */
@Fluent
public final class HighlightedFile {
    /*
     * The path of the highlighted file.
     */
    @JsonProperty(value = "path", required = true)
    private String path;

    /*
     * A flag to save whether this file is viewed by user.
     */
    @JsonProperty(value = "visited")
    private Boolean visited;

    /*
     * The name of sections to highlight.
     */
    @JsonProperty(value = "sections")
    private List<String> sections;

    /**
     * Creates an instance of HighlightedFile class.
     */
    public HighlightedFile() {
    }

    /**
     * Get the path property: The path of the highlighted file.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: The path of the highlighted file.
     * 
     * @param path the path value to set.
     * @return the HighlightedFile object itself.
     */
    public HighlightedFile withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the visited property: A flag to save whether this file is viewed by user.
     * 
     * @return the visited value.
     */
    public Boolean visited() {
        return this.visited;
    }

    /**
     * Set the visited property: A flag to save whether this file is viewed by user.
     * 
     * @param visited the visited value to set.
     * @return the HighlightedFile object itself.
     */
    public HighlightedFile withVisited(Boolean visited) {
        this.visited = visited;
        return this;
    }

    /**
     * Get the sections property: The name of sections to highlight.
     * 
     * @return the sections value.
     */
    public List<String> sections() {
        return this.sections;
    }

    /**
     * Set the sections property: The name of sections to highlight.
     * 
     * @param sections the sections value to set.
     * @return the HighlightedFile object itself.
     */
    public HighlightedFile withSections(List<String> sections) {
        this.sections = sections;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (path() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property path in model HighlightedFile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HighlightedFile.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.testbase.models.ProvisioningState;
import com.azure.resourcemanager.testbase.models.ReleaseProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The Available In-place Upgrade OS Map resource.
 */
@Fluent
public final class AvailableInplaceUpgradeOSResourceInner extends ProxyResource {
    /*
     * Available In-place Upgrade OS Map properties.
     */
    @JsonProperty(value = "properties")
    private AvailableInplaceUpgradeOSProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of AvailableInplaceUpgradeOSResourceInner class.
     */
    public AvailableInplaceUpgradeOSResourceInner() {
    }

    /**
     * Get the innerProperties property: Available In-place Upgrade OS Map properties.
     * 
     * @return the innerProperties value.
     */
    private AvailableInplaceUpgradeOSProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the sourceOsName property: The name of an Available In-place Upgrade source OS of a Test Base Account.
     * 
     * @return the sourceOsName value.
     */
    public String sourceOsName() {
        return this.innerProperties() == null ? null : this.innerProperties().sourceOsName();
    }

    /**
     * Set the sourceOsName property: The name of an Available In-place Upgrade source OS of a Test Base Account.
     * 
     * @param sourceOsName the sourceOsName value to set.
     * @return the AvailableInplaceUpgradeOSResourceInner object itself.
     */
    public AvailableInplaceUpgradeOSResourceInner withSourceOsName(String sourceOsName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AvailableInplaceUpgradeOSProperties();
        }
        this.innerProperties().withSourceOsName(sourceOsName);
        return this;
    }

    /**
     * Get the sourceOsReleases property: The the release list of the source os.
     * 
     * @return the sourceOsReleases value.
     */
    public List<ReleaseProperties> sourceOsReleases() {
        return this.innerProperties() == null ? null : this.innerProperties().sourceOsReleases();
    }

    /**
     * Set the sourceOsReleases property: The the release list of the source os.
     * 
     * @param sourceOsReleases the sourceOsReleases value to set.
     * @return the AvailableInplaceUpgradeOSResourceInner object itself.
     */
    public AvailableInplaceUpgradeOSResourceInner withSourceOsReleases(List<ReleaseProperties> sourceOsReleases) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AvailableInplaceUpgradeOSProperties();
        }
        this.innerProperties().withSourceOsReleases(sourceOsReleases);
        return this;
    }

    /**
     * Get the supportedTargetOsNameList property: The list of the corresponding Available In-place Upgrade target OS
     * name of a Test Base Account.
     * 
     * @return the supportedTargetOsNameList value.
     */
    public List<String> supportedTargetOsNameList() {
        return this.innerProperties() == null ? null : this.innerProperties().supportedTargetOsNameList();
    }

    /**
     * Set the supportedTargetOsNameList property: The list of the corresponding Available In-place Upgrade target OS
     * name of a Test Base Account.
     * 
     * @param supportedTargetOsNameList the supportedTargetOsNameList value to set.
     * @return the AvailableInplaceUpgradeOSResourceInner object itself.
     */
    public AvailableInplaceUpgradeOSResourceInner
        withSupportedTargetOsNameList(List<String> supportedTargetOsNameList) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AvailableInplaceUpgradeOSProperties();
        }
        this.innerProperties().withSupportedTargetOsNameList(supportedTargetOsNameList);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.ImageDefinitionResourceInner;

/**
 * An instance of this class provides access to all the operations defined in ImageDefinitionsClient.
 */
public interface ImageDefinitionsClient {
    /**
     * List all image definition properties created by test base custom images which are derived from 'VHD' source.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of all available image definition under a test base account as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ImageDefinitionResourceInner> listByTestBaseAccount(String resourceGroupName,
        String testBaseAccountName);

    /**
     * List all image definition properties created by test base custom images which are derived from 'VHD' source.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of all available image definition under a test base account as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ImageDefinitionResourceInner> listByTestBaseAccount(String resourceGroupName,
        String testBaseAccountName, Context context);

    /**
     * Create image definition for test base custom images which are derived from 'VHD' source.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param imageDefinitionName The resource name of the test base image definition.
     * @param parameters Parameters supplied to create a test base image definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the test base image definition resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ImageDefinitionResourceInner> createWithResponse(String resourceGroupName, String testBaseAccountName,
        String imageDefinitionName, ImageDefinitionResourceInner parameters, Context context);

    /**
     * Create image definition for test base custom images which are derived from 'VHD' source.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param imageDefinitionName The resource name of the test base image definition.
     * @param parameters Parameters supplied to create a test base image definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the test base image definition resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ImageDefinitionResourceInner create(String resourceGroupName, String testBaseAccountName,
        String imageDefinitionName, ImageDefinitionResourceInner parameters);

    /**
     * Get image properties under the image definition name created by test base custom image which derived from 'VHD'
     * source.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param imageDefinitionName The resource name of the test base image definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return image properties under the image definition name created by test base custom image which derived from
     * 'VHD' source along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ImageDefinitionResourceInner> getWithResponse(String resourceGroupName, String testBaseAccountName,
        String imageDefinitionName, Context context);

    /**
     * Get image properties under the image definition name created by test base custom image which derived from 'VHD'
     * source.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param imageDefinitionName The resource name of the test base image definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return image properties under the image definition name created by test base custom image which derived from
     * 'VHD' source.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ImageDefinitionResourceInner get(String resourceGroupName, String testBaseAccountName, String imageDefinitionName);

    /**
     * Delete a test base image definition resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param imageDefinitionName The resource name of the test base image definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String testBaseAccountName, String imageDefinitionName,
        Context context);

    /**
     * Delete a test base image definition resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param imageDefinitionName The resource name of the test base image definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String testBaseAccountName, String imageDefinitionName);
}

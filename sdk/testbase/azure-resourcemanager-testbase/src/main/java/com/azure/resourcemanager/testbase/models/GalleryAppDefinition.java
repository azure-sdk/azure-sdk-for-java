// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of the definition of a gallery application used in Test Base package. */
@Fluent
public final class GalleryAppDefinition {
    /*
     * The SKU id of the gallery application.
     */
    @JsonProperty(value = "skuId", required = true)
    private String skuId;

    /*
     * Whether the disclaimer of the gallery application is accepted.
     */
    @JsonProperty(value = "isConsented")
    private Boolean isConsented;

    /** Creates an instance of GalleryAppDefinition class. */
    public GalleryAppDefinition() {
    }

    /**
     * Get the skuId property: The SKU id of the gallery application.
     *
     * @return the skuId value.
     */
    public String skuId() {
        return this.skuId;
    }

    /**
     * Set the skuId property: The SKU id of the gallery application.
     *
     * @param skuId the skuId value to set.
     * @return the GalleryAppDefinition object itself.
     */
    public GalleryAppDefinition withSkuId(String skuId) {
        this.skuId = skuId;
        return this;
    }

    /**
     * Get the isConsented property: Whether the disclaimer of the gallery application is accepted.
     *
     * @return the isConsented value.
     */
    public Boolean isConsented() {
        return this.isConsented;
    }

    /**
     * Set the isConsented property: Whether the disclaimer of the gallery application is accepted.
     *
     * @param isConsented the isConsented value to set.
     * @return the GalleryAppDefinition object itself.
     */
    public GalleryAppDefinition withIsConsented(Boolean isConsented) {
        this.isConsented = isConsented;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (skuId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property skuId in model GalleryAppDefinition"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GalleryAppDefinition.class);
}

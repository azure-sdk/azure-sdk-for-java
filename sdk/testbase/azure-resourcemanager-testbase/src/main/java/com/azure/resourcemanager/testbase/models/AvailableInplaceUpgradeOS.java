// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of AvailableInplaceUpgradeOS.
 */
public interface AvailableInplaceUpgradeOS {
    /**
     * Lists all the available In-place Upgrade OSs to a package under a Test Base Account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param osUpdateType The type of the OS Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of available In-place Upgrade OSs as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AvailableInplaceUpgradeOSResource> list(String resourceGroupName, String testBaseAccountName,
        OsUpdateType osUpdateType);

    /**
     * Lists all the available In-place Upgrade OSs to a package under a Test Base Account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param osUpdateType The type of the OS Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of available In-place Upgrade OSs as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AvailableInplaceUpgradeOSResource> list(String resourceGroupName, String testBaseAccountName,
        OsUpdateType osUpdateType, Context context);

    /**
     * Gets an available In-place Upgrade OS to run a package under a Test Base Account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param availableInplaceUpgradeOSResourceName The resource name of an Available In-place Upgrade OS.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an available In-place Upgrade OS to run a package under a Test Base Account along with {@link Response}.
     */
    Response<AvailableInplaceUpgradeOSResource> getWithResponse(String resourceGroupName, String testBaseAccountName,
        String availableInplaceUpgradeOSResourceName, Context context);

    /**
     * Gets an available In-place Upgrade OS to run a package under a Test Base Account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param availableInplaceUpgradeOSResourceName The resource name of an Available In-place Upgrade OS.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an available In-place Upgrade OS to run a package under a Test Base Account.
     */
    AvailableInplaceUpgradeOSResource get(String resourceGroupName, String testBaseAccountName,
        String availableInplaceUpgradeOSResourceName);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Metadata of the enrolled Intune app.
 */
@Fluent
public final class EnrolledIntuneApp {
    /*
     * Intune app name.
     */
    @JsonProperty(value = "appName", required = true)
    private String appName;

    /*
     * Intune app id.
     */
    @JsonProperty(value = "appId", required = true)
    private String appId;

    /*
     * Intune app expected installation path.
     */
    @JsonProperty(value = "expectedInstallationPath", required = true)
    private String expectedInstallationPath;

    /**
     * Creates an instance of EnrolledIntuneApp class.
     */
    public EnrolledIntuneApp() {
    }

    /**
     * Get the appName property: Intune app name.
     * 
     * @return the appName value.
     */
    public String appName() {
        return this.appName;
    }

    /**
     * Set the appName property: Intune app name.
     * 
     * @param appName the appName value to set.
     * @return the EnrolledIntuneApp object itself.
     */
    public EnrolledIntuneApp withAppName(String appName) {
        this.appName = appName;
        return this;
    }

    /**
     * Get the appId property: Intune app id.
     * 
     * @return the appId value.
     */
    public String appId() {
        return this.appId;
    }

    /**
     * Set the appId property: Intune app id.
     * 
     * @param appId the appId value to set.
     * @return the EnrolledIntuneApp object itself.
     */
    public EnrolledIntuneApp withAppId(String appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Get the expectedInstallationPath property: Intune app expected installation path.
     * 
     * @return the expectedInstallationPath value.
     */
    public String expectedInstallationPath() {
        return this.expectedInstallationPath;
    }

    /**
     * Set the expectedInstallationPath property: Intune app expected installation path.
     * 
     * @param expectedInstallationPath the expectedInstallationPath value to set.
     * @return the EnrolledIntuneApp object itself.
     */
    public EnrolledIntuneApp withExpectedInstallationPath(String expectedInstallationPath) {
        this.expectedInstallationPath = expectedInstallationPath;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (appName() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property appName in model EnrolledIntuneApp"));
        }
        if (appId() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property appId in model EnrolledIntuneApp"));
        }
        if (expectedInstallationPath() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property expectedInstallationPath in model EnrolledIntuneApp"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EnrolledIntuneApp.class);
}

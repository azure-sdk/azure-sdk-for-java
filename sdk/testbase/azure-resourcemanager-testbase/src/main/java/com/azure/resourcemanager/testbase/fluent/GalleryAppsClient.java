// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.GalleryAppResourceInner;
import com.azure.resourcemanager.testbase.models.ApplicationType;
import com.azure.resourcemanager.testbase.models.OrderBy;

/** An instance of this class provides access to all the operations defined in GalleryAppsClient. */
public interface GalleryAppsClient {
    /**
     * Lists all gallery applications currently available for test runs under a Test Base Account which matches user
     * query.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of currently available gallery applications as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryAppResourceInner> list(String resourceGroupName, String testBaseAccountName);

    /**
     * Lists all gallery applications currently available for test runs under a Test Base Account which matches user
     * query.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param keyword The keywords which listed results should be related to.
     * @param applicationType The type of the gallery application.
     * @param orderBy The order of result list.
     * @param top How many of the sorted items to consider including in the result set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of currently available gallery applications as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GalleryAppResourceInner> list(
        String resourceGroupName,
        String testBaseAccountName,
        String keyword,
        ApplicationType applicationType,
        OrderBy orderBy,
        Integer top,
        Context context);

    /**
     * Gets a gallery application to prepare a test run for a Test Base Account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param galleryAppName The resource name of a gallery application.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery application to prepare a test run for a Test Base Account along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GalleryAppResourceInner> getWithResponse(
        String resourceGroupName, String testBaseAccountName, String galleryAppName, Context context);

    /**
     * Gets a gallery application to prepare a test run for a Test Base Account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param galleryAppName The resource name of a gallery application.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a gallery application to prepare a test run for a Test Base Account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GalleryAppResourceInner get(String resourceGroupName, String testBaseAccountName, String galleryAppName);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.testbase.fluent.models.CustomImageResourceInner;
import com.azure.resourcemanager.testbase.models.CustomImageResource;
import com.azure.resourcemanager.testbase.models.ImageSource;
import com.azure.resourcemanager.testbase.models.ImageStatus;
import com.azure.resourcemanager.testbase.models.ImageValidationResults;
import com.azure.resourcemanager.testbase.models.ProvisioningState;
import java.time.OffsetDateTime;

public final class CustomImageResourceImpl implements CustomImageResource, CustomImageResource.Definition {
    private CustomImageResourceInner innerObject;

    private final com.azure.resourcemanager.testbase.TestBaseManager serviceManager;

    CustomImageResourceImpl(CustomImageResourceInner innerObject,
        com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String vhdId() {
        return this.innerModel().vhdId();
    }

    public String definitionName() {
        return this.innerModel().definitionName();
    }

    public String versionName() {
        return this.innerModel().versionName();
    }

    public ImageSource source() {
        return this.innerModel().source();
    }

    public String product() {
        return this.innerModel().product();
    }

    public String release() {
        return this.innerModel().release();
    }

    public ImageStatus status() {
        return this.innerModel().status();
    }

    public OffsetDateTime creationTime() {
        return this.innerModel().creationTime();
    }

    public ImageValidationResults validationResults() {
        return this.innerModel().validationResults();
    }

    public Long osDiskImageSizeInGB() {
        return this.innerModel().osDiskImageSizeInGB();
    }

    public OffsetDateTime releaseVersionDate() {
        return this.innerModel().releaseVersionDate();
    }

    public String vhdFileName() {
        return this.innerModel().vhdFileName();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public CustomImageResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.testbase.TestBaseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String testBaseAccountName;

    private String customImageName;

    public CustomImageResourceImpl withExistingTestBaseAccount(String resourceGroupName, String testBaseAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.testBaseAccountName = testBaseAccountName;
        return this;
    }

    public CustomImageResource create() {
        this.innerObject = serviceManager.serviceClient().getCustomImages().create(resourceGroupName,
            testBaseAccountName, customImageName, this.innerModel(), Context.NONE);
        return this;
    }

    public CustomImageResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getCustomImages().create(resourceGroupName,
            testBaseAccountName, customImageName, this.innerModel(), context);
        return this;
    }

    CustomImageResourceImpl(String name, com.azure.resourcemanager.testbase.TestBaseManager serviceManager) {
        this.innerObject = new CustomImageResourceInner();
        this.serviceManager = serviceManager;
        this.customImageName = name;
    }

    public CustomImageResource refresh() {
        this.innerObject = serviceManager.serviceClient().getCustomImages()
            .getWithResponse(resourceGroupName, testBaseAccountName, customImageName, Context.NONE).getValue();
        return this;
    }

    public CustomImageResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getCustomImages()
            .getWithResponse(resourceGroupName, testBaseAccountName, customImageName, context).getValue();
        return this;
    }

    public CustomImageResourceImpl withVhdId(String vhdId) {
        this.innerModel().withVhdId(vhdId);
        return this;
    }

    public CustomImageResourceImpl withDefinitionName(String definitionName) {
        this.innerModel().withDefinitionName(definitionName);
        return this;
    }

    public CustomImageResourceImpl withVersionName(String versionName) {
        this.innerModel().withVersionName(versionName);
        return this;
    }

    public CustomImageResourceImpl withSource(ImageSource source) {
        this.innerModel().withSource(source);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of CustomImages. */
public interface CustomImages {
    /**
     * Lists all the custom images under a test base account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Test Base custom images as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CustomImageResource> listByTestBaseAccount(String resourceGroupName, String testBaseAccountName);

    /**
     * Lists all the custom images under a test base account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Test Base custom images as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CustomImageResource> listByTestBaseAccount(
        String resourceGroupName, String testBaseAccountName, Context context);

    /**
     * Deletes a test base custom image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param customImageName The resource name of the test base custom image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String testBaseAccountName, String customImageName);

    /**
     * Deletes a test base custom image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param customImageName The resource name of the test base custom image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String testBaseAccountName, String customImageName, Context context);

    /**
     * Gets a test base custom image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param customImageName The resource name of the test base custom image.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a test base custom image along with {@link Response}.
     */
    Response<CustomImageResource> getWithResponse(
        String resourceGroupName, String testBaseAccountName, String customImageName, Context context);

    /**
     * Gets a test base custom image.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param customImageName The resource name of the test base custom image.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a test base custom image.
     */
    CustomImageResource get(String resourceGroupName, String testBaseAccountName, String customImageName);

    /**
     * Checks that the test vase custom image generated from VHD resource has valid and unique definition and version,
     * return architecture and OS state of potential existing image definition.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param parameters Parameters supplied to the test base custom image CheckAvailability operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the detailed result of a validation or rule checking along with {@link Response}.
     */
    Response<VerificationResult> checkImageNameAvailabilityWithResponse(
        String resourceGroupName,
        String testBaseAccountName,
        ImageNameCheckAvailabilityParameters parameters,
        Context context);

    /**
     * Checks that the test vase custom image generated from VHD resource has valid and unique definition and version,
     * return architecture and OS state of potential existing image definition.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param testBaseAccountName The resource name of the Test Base Account.
     * @param parameters Parameters supplied to the test base custom image CheckAvailability operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the detailed result of a validation or rule checking.
     */
    VerificationResult checkImageNameAvailability(
        String resourceGroupName, String testBaseAccountName, ImageNameCheckAvailabilityParameters parameters);

    /**
     * Gets a test base custom image.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a test base custom image along with {@link Response}.
     */
    CustomImageResource getById(String id);

    /**
     * Gets a test base custom image.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a test base custom image along with {@link Response}.
     */
    Response<CustomImageResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a test base custom image.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a test base custom image.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CustomImageResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new CustomImageResource definition.
     */
    CustomImageResource.DefinitionStages.Blank define(String name);
}

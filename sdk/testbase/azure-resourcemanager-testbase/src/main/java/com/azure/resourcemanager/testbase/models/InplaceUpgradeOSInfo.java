// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Specifies the baseline os and target os for in-place upgrade tests. */
@Fluent
public final class InplaceUpgradeOSInfo {
    /*
     * Specifies the baseline os for in-place upgrade tests.
     */
    @JsonProperty(value = "baselineOS")
    private OsProperties baselineOS;

    /*
     * Specifies the target os for in-place upgrade tests.
     */
    @JsonProperty(value = "targetOS")
    private String targetOS;

    /** Creates an instance of InplaceUpgradeOSInfo class. */
    public InplaceUpgradeOSInfo() {
    }

    /**
     * Get the baselineOS property: Specifies the baseline os for in-place upgrade tests.
     *
     * @return the baselineOS value.
     */
    public OsProperties baselineOS() {
        return this.baselineOS;
    }

    /**
     * Set the baselineOS property: Specifies the baseline os for in-place upgrade tests.
     *
     * @param baselineOS the baselineOS value to set.
     * @return the InplaceUpgradeOSInfo object itself.
     */
    public InplaceUpgradeOSInfo withBaselineOS(OsProperties baselineOS) {
        this.baselineOS = baselineOS;
        return this;
    }

    /**
     * Get the targetOS property: Specifies the target os for in-place upgrade tests.
     *
     * @return the targetOS value.
     */
    public String targetOS() {
        return this.targetOS;
    }

    /**
     * Set the targetOS property: Specifies the target os for in-place upgrade tests.
     *
     * @param targetOS the targetOS value to set.
     * @return the InplaceUpgradeOSInfo object itself.
     */
    public InplaceUpgradeOSInfo withTargetOS(String targetOS) {
        this.targetOS = targetOS;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (baselineOS() != null) {
            baselineOS().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.testbase.fluent.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * The response of getting a download URL.
 */
@Immutable
public final class DraftPackageGetPathResponseInner {
    /*
     * The base URL of the storage account.
     */
    @JsonProperty(value = "baseUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String baseUrl;

    /*
     * The relative path of the folder hosting package files.
     */
    @JsonProperty(value = "draftPackagePath", access = JsonProperty.Access.WRITE_ONLY)
    private String draftPackagePath;

    /*
     * The relative path for a temporary folder for package creation work.
     */
    @JsonProperty(value = "workingPath", access = JsonProperty.Access.WRITE_ONLY)
    private String workingPath;

    /*
     * A SAS token for the storage account to access workspace.
     */
    @JsonProperty(value = "sasToken", access = JsonProperty.Access.WRITE_ONLY)
    private String sasToken;

    /*
     * Expiry date of the SAS token.
     */
    @JsonProperty(value = "expirationTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime expirationTime;

    /**
     * Creates an instance of DraftPackageGetPathResponseInner class.
     */
    public DraftPackageGetPathResponseInner() {
    }

    /**
     * Get the baseUrl property: The base URL of the storage account.
     * 
     * @return the baseUrl value.
     */
    public String baseUrl() {
        return this.baseUrl;
    }

    /**
     * Get the draftPackagePath property: The relative path of the folder hosting package files.
     * 
     * @return the draftPackagePath value.
     */
    public String draftPackagePath() {
        return this.draftPackagePath;
    }

    /**
     * Get the workingPath property: The relative path for a temporary folder for package creation work.
     * 
     * @return the workingPath value.
     */
    public String workingPath() {
        return this.workingPath;
    }

    /**
     * Get the sasToken property: A SAS token for the storage account to access workspace.
     * 
     * @return the sasToken value.
     */
    public String sasToken() {
        return this.sasToken;
    }

    /**
     * Get the expirationTime property: Expiry date of the SAS token.
     * 
     * @return the expirationTime value.
     */
    public OffsetDateTime expirationTime() {
        return this.expirationTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

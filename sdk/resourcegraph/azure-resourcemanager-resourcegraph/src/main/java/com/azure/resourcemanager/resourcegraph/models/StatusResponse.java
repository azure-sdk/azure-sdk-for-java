// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Status.
 */
@Fluent
public final class StatusResponse {
    /*
     * Status category for query generation result
     */
    @JsonProperty(value = "category", required = true)
    private StatusCategory category;

    /*
     * Status message for query generation result
     */
    @JsonProperty(value = "message", required = true)
    private String message;

    /**
     * Creates an instance of StatusResponse class.
     */
    public StatusResponse() {
    }

    /**
     * Get the category property: Status category for query generation result.
     * 
     * @return the category value.
     */
    public StatusCategory category() {
        return this.category;
    }

    /**
     * Set the category property: Status category for query generation result.
     * 
     * @param category the category value to set.
     * @return the StatusResponse object itself.
     */
    public StatusResponse withCategory(StatusCategory category) {
        this.category = category;
        return this;
    }

    /**
     * Get the message property: Status message for query generation result.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Status message for query generation result.
     * 
     * @param message the message value to set.
     * @return the StatusResponse object itself.
     */
    public StatusResponse withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (category() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property category in model StatusResponse"));
        }
        if (message() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property message in model StatusResponse"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(StatusResponse.class);
}

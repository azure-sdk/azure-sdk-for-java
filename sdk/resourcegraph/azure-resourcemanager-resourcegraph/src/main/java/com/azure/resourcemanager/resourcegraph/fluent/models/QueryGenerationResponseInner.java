// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcegraph.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.resourcegraph.models.StatusResponse;
import java.io.IOException;

/**
 * Query Generation Response.
 */
@Fluent
public final class QueryGenerationResponseInner implements JsonSerializable<QueryGenerationResponseInner> {
    /*
     * Query generated for a given user prompt text
     */
    private String query;

    /*
     * Status for the query generation result
     */
    private StatusResponse status;

    /**
     * Creates an instance of QueryGenerationResponseInner class.
     */
    public QueryGenerationResponseInner() {
    }

    /**
     * Get the query property: Query generated for a given user prompt text.
     * 
     * @return the query value.
     */
    public String query() {
        return this.query;
    }

    /**
     * Set the query property: Query generated for a given user prompt text.
     * 
     * @param query the query value to set.
     * @return the QueryGenerationResponseInner object itself.
     */
    public QueryGenerationResponseInner withQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get the status property: Status for the query generation result.
     * 
     * @return the status value.
     */
    public StatusResponse status() {
        return this.status;
    }

    /**
     * Set the status property: Status for the query generation result.
     * 
     * @param status the status value to set.
     * @return the QueryGenerationResponseInner object itself.
     */
    public QueryGenerationResponseInner withStatus(StatusResponse status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (query() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property query in model QueryGenerationResponseInner"));
        }
        if (status() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property status in model QueryGenerationResponseInner"));
        } else {
            status().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(QueryGenerationResponseInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("query", this.query);
        jsonWriter.writeJsonField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QueryGenerationResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QueryGenerationResponseInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the QueryGenerationResponseInner.
     */
    public static QueryGenerationResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            QueryGenerationResponseInner deserializedQueryGenerationResponseInner = new QueryGenerationResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("query".equals(fieldName)) {
                    deserializedQueryGenerationResponseInner.query = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedQueryGenerationResponseInner.status = StatusResponse.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedQueryGenerationResponseInner;
        });
    }
}

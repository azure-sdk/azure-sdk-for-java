// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.generated;

import com.azure.resourcemanager.postgresqlhsc.models.ClusterResponse;
import com.azure.resourcemanager.postgresqlhsc.models.MaintenanceWindow;

/** Samples for Clusters Update. */
public final class ClustersUpdateSamples {
    /*
     * x-ms-original-file: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ClusterScaleStorage.json
     */
    /**
     * Sample code: Scale storage.
     *
     * @param manager Entry point to PostgresqlhscManager.
     */
    public static void scaleStorage(com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager) {
        ClusterResponse resource =
            manager
                .clusters()
                .getByResourceGroupWithResponse("TestGroup", "hsctestsg", com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().withNodeStorageQuotaInMb(2097152L).apply();
    }

    /*
     * x-ms-original-file: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ClusterAddNode.json
     */
    /**
     * Sample code: Add new worker nodes.
     *
     * @param manager Entry point to PostgresqlhscManager.
     */
    public static void addNewWorkerNodes(com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager) {
        ClusterResponse resource =
            manager
                .clusters()
                .getByResourceGroupWithResponse("TestGroup", "hsctestsg", com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().withNodeCount(2L).apply();
    }

    /*
     * x-ms-original-file: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ClusterUpdateMaintenanceWindow.json
     */
    /**
     * Sample code: Update customer maintenance window.
     *
     * @param manager Entry point to PostgresqlhscManager.
     */
    public static void updateCustomerMaintenanceWindow(
        com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager) {
        ClusterResponse resource =
            manager
                .clusters()
                .getByResourceGroupWithResponse("TestGroup", "hsctestsg", com.azure.core.util.Context.NONE)
                .getValue();
        resource
            .update()
            .withMaintenanceWindow(
                new MaintenanceWindow()
                    .withCustomWindow("Enabled")
                    .withStartHour(8)
                    .withStartMinute(0)
                    .withDayOfWeek(0))
            .apply();
    }

    /*
     * x-ms-original-file: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ClusterUpdate.json
     */
    /**
     * Sample code: Update the cluster.
     *
     * @param manager Entry point to PostgresqlhscManager.
     */
    public static void updateTheCluster(com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager) {
        ClusterResponse resource =
            manager
                .clusters()
                .getByResourceGroupWithResponse("TestGroup", "hsctestsg", com.azure.core.util.Context.NONE)
                .getValue();
        resource
            .update()
            .withAdministratorLoginPassword("newpassword")
            .withCoordinatorVCores(16L)
            .withNodeCount(4L)
            .withNodeVCores(16L)
            .apply();
    }

    /*
     * x-ms-original-file: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ClusterScaleCompute.json
     */
    /**
     * Sample code: Scale compute.
     *
     * @param manager Entry point to PostgresqlhscManager.
     */
    public static void scaleCompute(com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager) {
        ClusterResponse resource =
            manager
                .clusters()
                .getByResourceGroupWithResponse("TestGroup", "hsctestsg", com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().withNodeVCores(16L).apply();
    }
}

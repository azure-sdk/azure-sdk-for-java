// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.postgresqlhsc.fluent.ServersClient;
import com.azure.resourcemanager.postgresqlhsc.fluent.models.ServerInner;
import com.azure.resourcemanager.postgresqlhsc.models.Server;
import com.azure.resourcemanager.postgresqlhsc.models.Servers;

public final class ServersImpl implements Servers {
    private static final ClientLogger LOGGER = new ClientLogger(ServersImpl.class);

    private final ServersClient innerClient;

    private final com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager serviceManager;

    public ServersImpl(
        ServersClient innerClient, com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Server> listByCluster(String resourceGroupName, String clusterName) {
        PagedIterable<ServerInner> inner = this.serviceClient().listByCluster(resourceGroupName, clusterName);
        return Utils.mapPage(inner, inner1 -> new ServerImpl(inner1, this.manager()));
    }

    public PagedIterable<Server> listByCluster(String resourceGroupName, String clusterName, Context context) {
        PagedIterable<ServerInner> inner = this.serviceClient().listByCluster(resourceGroupName, clusterName, context);
        return Utils.mapPage(inner, inner1 -> new ServerImpl(inner1, this.manager()));
    }

    public Response<Server> getWithResponse(
        String resourceGroupName, String clusterName, String serverName, Context context) {
        Response<ServerInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, clusterName, serverName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServerImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Server get(String resourceGroupName, String clusterName, String serverName) {
        ServerInner inner = this.serviceClient().get(resourceGroupName, clusterName, serverName);
        if (inner != null) {
            return new ServerImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ServersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.postgresqlhsc.PostgresqlhscManager manager() {
        return this.serviceManager;
    }
}

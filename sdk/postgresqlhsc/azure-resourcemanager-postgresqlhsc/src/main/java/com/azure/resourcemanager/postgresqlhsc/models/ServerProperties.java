// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.postgresqlhsc.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The properties of a server. */
@Fluent
public class ServerProperties {
    /*
     * The edition of a server
     */
    @JsonProperty(value = "serverEdition")
    private String serverEdition;

    /*
     * The storage of a server in MB.
     */
    @JsonProperty(value = "storageQuotaInMb")
    private Long storageQuotaInMb;

    /*
     * The vCores count of a server (max: 64).
     */
    @JsonProperty(value = "vCores")
    private Long vCores;

    /*
     * If high availability is enabled or not for the server.
     */
    @JsonProperty(value = "enableHa")
    private EnableHaEnum enableHa;

    /*
     * If public IP is requested or not for a server.
     */
    @JsonProperty(value = "enablePublicIp", access = JsonProperty.Access.WRITE_ONLY)
    private EnablePublicIpEnum enablePublicIp;

    /** Creates an instance of ServerProperties class. */
    public ServerProperties() {
    }

    /**
     * Get the serverEdition property: The edition of a server.
     *
     * @return the serverEdition value.
     */
    public String serverEdition() {
        return this.serverEdition;
    }

    /**
     * Set the serverEdition property: The edition of a server.
     *
     * @param serverEdition the serverEdition value to set.
     * @return the ServerProperties object itself.
     */
    public ServerProperties withServerEdition(String serverEdition) {
        this.serverEdition = serverEdition;
        return this;
    }

    /**
     * Get the storageQuotaInMb property: The storage of a server in MB.
     *
     * @return the storageQuotaInMb value.
     */
    public Long storageQuotaInMb() {
        return this.storageQuotaInMb;
    }

    /**
     * Set the storageQuotaInMb property: The storage of a server in MB.
     *
     * @param storageQuotaInMb the storageQuotaInMb value to set.
     * @return the ServerProperties object itself.
     */
    public ServerProperties withStorageQuotaInMb(Long storageQuotaInMb) {
        this.storageQuotaInMb = storageQuotaInMb;
        return this;
    }

    /**
     * Get the vCores property: The vCores count of a server (max: 64).
     *
     * @return the vCores value.
     */
    public Long vCores() {
        return this.vCores;
    }

    /**
     * Set the vCores property: The vCores count of a server (max: 64).
     *
     * @param vCores the vCores value to set.
     * @return the ServerProperties object itself.
     */
    public ServerProperties withVCores(Long vCores) {
        this.vCores = vCores;
        return this;
    }

    /**
     * Get the enableHa property: If high availability is enabled or not for the server.
     *
     * @return the enableHa value.
     */
    public EnableHaEnum enableHa() {
        return this.enableHa;
    }

    /**
     * Set the enableHa property: If high availability is enabled or not for the server.
     *
     * @param enableHa the enableHa value to set.
     * @return the ServerProperties object itself.
     */
    public ServerProperties withEnableHa(EnableHaEnum enableHa) {
        this.enableHa = enableHa;
        return this;
    }

    /**
     * Get the enablePublicIp property: If public IP is requested or not for a server.
     *
     * @return the enablePublicIp value.
     */
    public EnablePublicIpEnum enablePublicIp() {
        return this.enablePublicIp;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

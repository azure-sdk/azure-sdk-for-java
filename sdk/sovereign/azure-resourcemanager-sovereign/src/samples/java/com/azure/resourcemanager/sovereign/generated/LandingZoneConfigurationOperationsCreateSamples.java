// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sovereign.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.sovereign.models.CustomNamingConvention;
import com.azure.resourcemanager.sovereign.models.DecommissionedManagementGroupProperties;
import com.azure.resourcemanager.sovereign.models.FirewallCreationOptions;
import com.azure.resourcemanager.sovereign.models.LandingZoneConfigurationResourceProperties;
import com.azure.resourcemanager.sovereign.models.LandingZoneManagementGroupProperties;
import com.azure.resourcemanager.sovereign.models.ManagedIdentityProperties;
import com.azure.resourcemanager.sovereign.models.ManagedIdentityResourceType;
import com.azure.resourcemanager.sovereign.models.ManagementGroupProperties;
import com.azure.resourcemanager.sovereign.models.PlatformManagementGroupProperties;
import com.azure.resourcemanager.sovereign.models.PolicyInitiativeAssignmentProperties;
import com.azure.resourcemanager.sovereign.models.ResourceCreationOptions;
import com.azure.resourcemanager.sovereign.models.ResourceType;
import com.azure.resourcemanager.sovereign.models.SandboxManagementGroupProperties;
import com.azure.resourcemanager.sovereign.models.Tags;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for LandingZoneConfigurationOperations Create.
 */
public final class LandingZoneConfigurationOperationsCreateSamples {
    /*
     * x-ms-original-file:
     * specification/sovereign/resource-manager/Microsoft.Sovereign/preview/2025-02-27-preview/examples/
     * LandingZoneConfigurationOperations_Create.json
     */
    /**
     * Sample code: LandingZoneConfigurationOperations_Create.
     * 
     * @param manager Entry point to SovereignManager.
     */
    public static void landingZoneConfigurationOperationsCreate(
        com.azure.resourcemanager.sovereign.SovereignManager manager) throws IOException {
        manager.landingZoneConfigurationOperations()
            .define("lzc-RemApiExample")
            .withExistingLandingZoneAccount("rg-RemApiExample", "lza-RemApiExample")
            .withProperties(new LandingZoneConfigurationResourceProperties()
                .withDdosProtectionCreationOption(ResourceCreationOptions.USE_EXISTING)
                .withExistingDdosProtectionId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-RemApiExample/providers/Microsoft.Network/ddosProtectionPlans/ddos-RemApiExample")
                .withLogAnalyticsWorkspaceCreationOption(ResourceCreationOptions.USE_EXISTING)
                .withExistingLogAnalyticsWorkspaceId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-RemApiExample/providers/Microsoft.OperationalInsights/workspaces/log-RemApiExample")
                .withTags(Arrays.asList(new Tags().withName("tag1").withValue("Lorem"),
                    new Tags().withName("tag2").withValue("Ipsum")))
                .withFirewallCreationOption(FirewallCreationOptions.PREMIUM)
                .withFirewallSubnetCidrBlock("10.20.254.0/24")
                .withGatewaySubnetCidrBlock("10.20.252.0/24")
                .withLogRetentionInDays(540L)
                .withHubNetworkCidrBlock("10.20.0.0/16")
                .withAzureBastionCreationOption(ResourceCreationOptions.USE_EXISTING)
                .withExistingAzureBastionId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-RemApiExample/providers/Microsoft.Network/bastionHosts/bas-RemApiExample")
                .withLandingZonesMgChildren(Arrays.asList(
                    new LandingZoneManagementGroupProperties()
                        .withPolicyInitiativesAssignmentProperties(Arrays.asList())
                        .withName("Corp"),
                    new LandingZoneManagementGroupProperties()
                        .withPolicyInitiativesAssignmentProperties(Arrays.asList())
                        .withName("Online"),
                    new LandingZoneManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                        Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/03de05a4-c324-4ccd-882f-a814ea8ab9ea")
                            .withAssignmentParameters(mapOf())))
                        .withName("Confidential Corp"),
                    new LandingZoneManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                        Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/03de05a4-c324-4ccd-882f-a814ea8ab9ea")
                            .withAssignmentParameters(mapOf())))
                        .withName("Confidential Online")))
                .withTopLevelMgMetadata(new ManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                    Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                        "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\",\"eastus2\",\"uksouth\"]", Object.class,
                                    SerializerEncoding.JSON))))))
                .withLandingZonesMgMetadata(new ManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                    Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                        "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON))))))
                .withPlatformMgMetadata(new ManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                    Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                        "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON))))))
                .withPlatformManagementMgMetadata(new ManagementGroupProperties()
                    .withPolicyInitiativesAssignmentProperties(Arrays.asList(new PolicyInitiativeAssignmentProperties()
                        .withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON))))))
                .withPlatformConnectivityMgMetadata(new ManagementGroupProperties()
                    .withPolicyInitiativesAssignmentProperties(Arrays.asList(new PolicyInitiativeAssignmentProperties()
                        .withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON))))))
                .withPlatformIdentityMgMetadata(new ManagementGroupProperties()
                    .withPolicyInitiativesAssignmentProperties(Arrays.asList(new PolicyInitiativeAssignmentProperties()
                        .withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON))))))
                .withDecommissionedMgMetadata(new DecommissionedManagementGroupProperties()
                    .withPolicyInitiativesAssignmentProperties(Arrays.asList(new PolicyInitiativeAssignmentProperties()
                        .withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON)))))
                    .withCreate(true))
                .withSandboxMgMetadata(new SandboxManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                    Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                        "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON)))))
                    .withCreate(true))
                .withManagedIdentity(new ManagedIdentityProperties().withType(ManagedIdentityResourceType.USER_ASSIGNED)
                    .withUserAssignedIdentityResourceId(
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-RemApiExample/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-RemApiExample"))
                .withPlatformMgChildren(Arrays.asList(new PlatformManagementGroupProperties()
                    .withPolicyInitiativesAssignmentProperties(Arrays.asList(new PolicyInitiativeAssignmentProperties()
                        .withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                        .withAssignmentParameters(mapOf("listOfAllowedLocations",
                            SerializerFactory.createDefaultManagementSerializerAdapter()
                                .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON)))))
                    .withName("Telemetry"),
                    new PlatformManagementGroupProperties().withPolicyInitiativesAssignmentProperties(
                        Arrays.asList(new PolicyInitiativeAssignmentProperties().withPolicyInitiativeId(
                            "/providers/Microsoft.Authorization/policySetDefinitions/c1cbff38-87c0-4b9f-9f70-035c7a3b5523")
                            .withAssignmentParameters(mapOf("listOfAllowedLocations",
                                SerializerFactory.createDefaultManagementSerializerAdapter()
                                    .deserialize("[\"swedencentral\"]", Object.class, SerializerEncoding.JSON)))))
                        .withName("Security")))
                .withNamingConventionFormula(
                    "{ResourceTypeAbbreviation}-{DeploymentPrefix}-Contoso-{DeploymentSuffix}-{Environment}")
                .withCustomNamingConvention(
                    Arrays.asList(new CustomNamingConvention().withResourceType(ResourceType.DDOS_PROTECTION_PLANS)
                        .withFormula("{ResourceTypeAbbreviation}-{DeploymentPrefix}-Contoso-{DeploymentSuffix}"))))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

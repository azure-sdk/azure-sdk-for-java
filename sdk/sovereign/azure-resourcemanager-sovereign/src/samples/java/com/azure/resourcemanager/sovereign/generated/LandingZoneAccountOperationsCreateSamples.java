// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sovereign.generated;

import com.azure.resourcemanager.sovereign.models.LandingZoneAccountResourceProperties;
import com.azure.resourcemanager.sovereign.models.ManagedServiceIdentity;
import com.azure.resourcemanager.sovereign.models.ManagedServiceIdentityType;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for LandingZoneAccountOperations Create.
 */
public final class LandingZoneAccountOperationsCreateSamples {
    /*
     * x-ms-original-file:
     * specification/sovereign/resource-manager/Microsoft.Sovereign/preview/2025-02-27-preview/examples/
     * LandingZoneAccountOperations_Create.json
     */
    /**
     * Sample code: LandingZoneAccountOperations_Create.
     * 
     * @param manager Entry point to SovereignManager.
     */
    public static void
        landingZoneAccountOperationsCreate(com.azure.resourcemanager.sovereign.SovereignManager manager) {
        manager.landingZoneAccountOperations()
            .define("ExampleLZA")
            .withRegion("northeurope")
            .withExistingResourceGroup("SampleResourceGroup")
            .withTags(mapOf("tag1", "MCFS"))
            .withProperties(new LandingZoneAccountResourceProperties().withStorageAccount(
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestStorageAccount/providers/Microsoft.Storage/storageAccounts/teststorageaccount"))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

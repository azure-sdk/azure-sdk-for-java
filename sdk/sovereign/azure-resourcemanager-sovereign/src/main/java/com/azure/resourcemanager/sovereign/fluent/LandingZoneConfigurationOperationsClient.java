// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sovereign.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.sovereign.fluent.models.CreateLandingZoneConfigurationCopyResponseInner;
import com.azure.resourcemanager.sovereign.fluent.models.GenerateLandingZoneResponseInner;
import com.azure.resourcemanager.sovereign.fluent.models.LandingZoneConfigurationResourceInner;
import com.azure.resourcemanager.sovereign.fluent.models.UpdateAuthoringStatusResponseInner;
import com.azure.resourcemanager.sovereign.models.CreateLandingZoneConfigurationCopyRequest;
import com.azure.resourcemanager.sovereign.models.GenerateLandingZoneRequest;
import com.azure.resourcemanager.sovereign.models.LandingZoneConfigurationResourceUpdate;
import com.azure.resourcemanager.sovereign.models.UpdateAuthoringStatusRequest;

/**
 * An instance of this class provides access to all the operations defined in LandingZoneConfigurationOperationsClient.
 */
public interface LandingZoneConfigurationOperationsClient {
    /**
     * Lists the landing zone configurations within a subscription.
     * 
     * @param landingZoneAccountName The parent landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneConfigurationResourceInner> listBySubscription(String landingZoneAccountName);

    /**
     * Lists the landing zone configurations within a subscription.
     * 
     * @param landingZoneAccountName The parent landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneConfigurationResourceInner> listBySubscription(String landingZoneAccountName,
        Context context);

    /**
     * Lists the landing zone configurations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneConfigurationResourceInner> listByResourceGroup(String resourceGroupName,
        String landingZoneAccountName);

    /**
     * Lists the landing zone configurations within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneConfigurationResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneConfigurationResourceInner> listByResourceGroup(String resourceGroupName,
        String landingZoneAccountName, Context context);

    /**
     * Gets the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the landing zone configuration along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LandingZoneConfigurationResourceInner> getWithResponse(String resourceGroupName,
        String landingZoneAccountName, String landingZoneConfigurationName, Context context);

    /**
     * Gets the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the landing zone configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneConfigurationResourceInner get(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName);

    /**
     * Creates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of concrete proxy resource types can be created by aliasing this type
     * using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneConfigurationResourceInner>, LandingZoneConfigurationResourceInner> beginCreate(
        String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        LandingZoneConfigurationResourceInner resource);

    /**
     * Creates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of concrete proxy resource types can be created by aliasing this type
     * using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneConfigurationResourceInner>, LandingZoneConfigurationResourceInner> beginCreate(
        String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        LandingZoneConfigurationResourceInner resource, Context context);

    /**
     * Creates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete proxy resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneConfigurationResourceInner create(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, LandingZoneConfigurationResourceInner resource);

    /**
     * Creates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete proxy resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneConfigurationResourceInner create(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, LandingZoneConfigurationResourceInner resource, Context context);

    /**
     * Updates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of concrete proxy resource types can be created by aliasing this type
     * using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneConfigurationResourceInner>, LandingZoneConfigurationResourceInner> beginUpdate(
        String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        LandingZoneConfigurationResourceUpdate properties);

    /**
     * Updates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of concrete proxy resource types can be created by aliasing this type
     * using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneConfigurationResourceInner>, LandingZoneConfigurationResourceInner> beginUpdate(
        String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        LandingZoneConfigurationResourceUpdate properties, Context context);

    /**
     * Updates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete proxy resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneConfigurationResourceInner update(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, LandingZoneConfigurationResourceUpdate properties);

    /**
     * Updates the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete proxy resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneConfigurationResourceInner update(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, LandingZoneConfigurationResourceUpdate properties, Context context);

    /**
     * Deletes the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName);

    /**
     * Deletes the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, Context context);

    /**
     * Deletes the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName);

    /**
     * Deletes the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        Context context);

    /**
     * Provides a mechanism to create a copy of the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the response of the create copy action of landing zone
     * configuration.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CreateLandingZoneConfigurationCopyResponseInner>, CreateLandingZoneConfigurationCopyResponseInner>
        beginCreateCopy(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
            CreateLandingZoneConfigurationCopyRequest body);

    /**
     * Provides a mechanism to create a copy of the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the response of the create copy action of landing zone
     * configuration.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CreateLandingZoneConfigurationCopyResponseInner>, CreateLandingZoneConfigurationCopyResponseInner>
        beginCreateCopy(String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
            CreateLandingZoneConfigurationCopyRequest body, Context context);

    /**
     * Provides a mechanism to create a copy of the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the create copy action of landing zone configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CreateLandingZoneConfigurationCopyResponseInner createCopy(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, CreateLandingZoneConfigurationCopyRequest body);

    /**
     * Provides a mechanism to create a copy of the landing zone configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of the create copy action of landing zone configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CreateLandingZoneConfigurationCopyResponseInner createCopy(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, CreateLandingZoneConfigurationCopyRequest body, Context context);

    /**
     * Generate the landing zone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the response for the request to generate landing zone code.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GenerateLandingZoneResponseInner>, GenerateLandingZoneResponseInner> beginGenerateLandingZone(
        String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        GenerateLandingZoneRequest body);

    /**
     * Generate the landing zone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the response for the request to generate landing zone code.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GenerateLandingZoneResponseInner>, GenerateLandingZoneResponseInner> beginGenerateLandingZone(
        String resourceGroupName, String landingZoneAccountName, String landingZoneConfigurationName,
        GenerateLandingZoneRequest body, Context context);

    /**
     * Generate the landing zone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response for the request to generate landing zone code.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GenerateLandingZoneResponseInner generateLandingZone(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, GenerateLandingZoneRequest body);

    /**
     * Generate the landing zone.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response for the request to generate landing zone code.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GenerateLandingZoneResponseInner generateLandingZone(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, GenerateLandingZoneRequest body, Context context);

    /**
     * Provides a mechanism to update the authoring status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the response for the request to update authoring status.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<UpdateAuthoringStatusResponseInner>, UpdateAuthoringStatusResponseInner>
        beginUpdateAuthoringStatus(String resourceGroupName, String landingZoneAccountName,
            String landingZoneConfigurationName, UpdateAuthoringStatusRequest body);

    /**
     * Provides a mechanism to update the authoring status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the response for the request to update authoring status.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<UpdateAuthoringStatusResponseInner>, UpdateAuthoringStatusResponseInner>
        beginUpdateAuthoringStatus(String resourceGroupName, String landingZoneAccountName,
            String landingZoneConfigurationName, UpdateAuthoringStatusRequest body, Context context);

    /**
     * Provides a mechanism to update the authoring status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response for the request to update authoring status.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UpdateAuthoringStatusResponseInner updateAuthoringStatus(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, UpdateAuthoringStatusRequest body);

    /**
     * Provides a mechanism to update the authoring status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param landingZoneConfigurationName The landing zone configuration name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response for the request to update authoring status.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UpdateAuthoringStatusResponseInner updateAuthoringStatus(String resourceGroupName, String landingZoneAccountName,
        String landingZoneConfigurationName, UpdateAuthoringStatusRequest body, Context context);
}

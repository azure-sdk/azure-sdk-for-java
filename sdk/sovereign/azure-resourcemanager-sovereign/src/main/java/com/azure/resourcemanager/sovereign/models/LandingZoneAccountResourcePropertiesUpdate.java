// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sovereign.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of landing zone account resource type.
 */
@Fluent
public final class LandingZoneAccountResourcePropertiesUpdate
    implements JsonSerializable<LandingZoneAccountResourcePropertiesUpdate> {
    /*
     * The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
     */
    private String storageAccount;

    /**
     * Creates an instance of LandingZoneAccountResourcePropertiesUpdate class.
     */
    public LandingZoneAccountResourcePropertiesUpdate() {
    }

    /**
     * Get the storageAccount property: The storage account that will host the generated infrastructure as code (IaC)
     * for a landing zone deployment.
     * 
     * @return the storageAccount value.
     */
    public String storageAccount() {
        return this.storageAccount;
    }

    /**
     * Set the storageAccount property: The storage account that will host the generated infrastructure as code (IaC)
     * for a landing zone deployment.
     * 
     * @param storageAccount the storageAccount value to set.
     * @return the LandingZoneAccountResourcePropertiesUpdate object itself.
     */
    public LandingZoneAccountResourcePropertiesUpdate withStorageAccount(String storageAccount) {
        this.storageAccount = storageAccount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("storageAccount", this.storageAccount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LandingZoneAccountResourcePropertiesUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LandingZoneAccountResourcePropertiesUpdate if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LandingZoneAccountResourcePropertiesUpdate.
     */
    public static LandingZoneAccountResourcePropertiesUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LandingZoneAccountResourcePropertiesUpdate deserializedLandingZoneAccountResourcePropertiesUpdate
                = new LandingZoneAccountResourcePropertiesUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("storageAccount".equals(fieldName)) {
                    deserializedLandingZoneAccountResourcePropertiesUpdate.storageAccount = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLandingZoneAccountResourcePropertiesUpdate;
        });
    }
}

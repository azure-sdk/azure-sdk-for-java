// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sovereign.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.sovereign.fluent.models.LandingZoneAccountResourceInner;
import com.azure.resourcemanager.sovereign.models.LandingZoneAccountResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in LandingZoneAccountOperationsClient.
 */
public interface LandingZoneAccountOperationsClient {
    /**
     * Lists the landing zone accounts within a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneAccountResourceInner> list();

    /**
     * Lists the landing zone accounts within a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneAccountResourceInner> list(Context context);

    /**
     * Lists the landing zone accounts within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneAccountResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists the landing zone accounts within a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a LandingZoneAccountResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LandingZoneAccountResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the landing zone account along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LandingZoneAccountResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String landingZoneAccountName, Context context);

    /**
     * Gets the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the landing zone account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneAccountResourceInner getByResourceGroup(String resourceGroupName, String landingZoneAccountName);

    /**
     * Creates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneAccountResourceInner>, LandingZoneAccountResourceInner>
        beginCreate(String resourceGroupName, String landingZoneAccountName, LandingZoneAccountResourceInner resource);

    /**
     * Creates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneAccountResourceInner>, LandingZoneAccountResourceInner> beginCreate(
        String resourceGroupName, String landingZoneAccountName, LandingZoneAccountResourceInner resource,
        Context context);

    /**
     * Creates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneAccountResourceInner create(String resourceGroupName, String landingZoneAccountName,
        LandingZoneAccountResourceInner resource);

    /**
     * Creates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneAccountResourceInner create(String resourceGroupName, String landingZoneAccountName,
        LandingZoneAccountResourceInner resource, Context context);

    /**
     * Updates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneAccountResourceInner>, LandingZoneAccountResourceInner> beginUpdate(
        String resourceGroupName, String landingZoneAccountName, LandingZoneAccountResourceUpdate properties);

    /**
     * Updates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LandingZoneAccountResourceInner>, LandingZoneAccountResourceInner> beginUpdate(
        String resourceGroupName, String landingZoneAccountName, LandingZoneAccountResourceUpdate properties,
        Context context);

    /**
     * Updates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneAccountResourceInner update(String resourceGroupName, String landingZoneAccountName,
        LandingZoneAccountResourceUpdate properties);

    /**
     * Updates the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Landing zone account parent resource type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LandingZoneAccountResourceInner update(String resourceGroupName, String landingZoneAccountName,
        LandingZoneAccountResourceUpdate properties, Context context);

    /**
     * Deletes the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String landingZoneAccountName);

    /**
     * Deletes the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String landingZoneAccountName,
        Context context);

    /**
     * Deletes the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName);

    /**
     * Deletes the landing zone account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param landingZoneAccountName The parent landing zone account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String landingZoneAccountName, Context context);
}

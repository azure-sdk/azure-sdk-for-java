// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.billing.models.ArmResource;
import com.azure.resourcemanager.billing.models.DetailedTransferStatus;
import com.azure.resourcemanager.billing.models.EligibleProductType;
import com.azure.resourcemanager.billing.models.SupportedAccountType;
import com.azure.resourcemanager.billing.models.TransferStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Details of the transfer. */
@Immutable
public final class RecipientTransferDetailsInner extends ArmResource {
    /*
     * Details of the transfer.
     */
    @JsonProperty(value = "properties")
    private RecipientTransferProperties innerProperties;

    /** Creates an instance of RecipientTransferDetailsInner class. */
    public RecipientTransferDetailsInner() {
    }

    /**
     * Get the innerProperties property: Details of the transfer.
     *
     * @return the innerProperties value.
     */
    private RecipientTransferProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the expirationTime property: The time at which the transfer request expires.
     *
     * @return the expirationTime value.
     */
    public OffsetDateTime expirationTime() {
        return this.innerProperties() == null ? null : this.innerProperties().expirationTime();
    }

    /**
     * Get the allowedProductType property: Type of subscriptions that can be transferred.
     *
     * @return the allowedProductType value.
     */
    public List<EligibleProductType> allowedProductType() {
        return this.innerProperties() == null ? null : this.innerProperties().allowedProductType();
    }

    /**
     * Get the transferStatus property: Overall transfer status.
     *
     * @return the transferStatus value.
     */
    public TransferStatus transferStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().transferStatus();
    }

    /**
     * Get the recipientEmailId property: The email ID of the user to whom the transfer request was sent.
     *
     * @return the recipientEmailId value.
     */
    public String recipientEmailId() {
        return this.innerProperties() == null ? null : this.innerProperties().recipientEmailId();
    }

    /**
     * Get the initiatorEmailId property: The email ID of the user who sent the transfer request.
     *
     * @return the initiatorEmailId value.
     */
    public String initiatorEmailId() {
        return this.innerProperties() == null ? null : this.innerProperties().initiatorEmailId();
    }

    /**
     * Get the resellerId property: Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft
     * Partner Agreement billing account.
     *
     * @return the resellerId value.
     */
    public String resellerId() {
        return this.innerProperties() == null ? null : this.innerProperties().resellerId();
    }

    /**
     * Get the resellerName property: Optional name of the reseller for transfer requests that are sent from Microsoft
     * Partner Agreement billing account.
     *
     * @return the resellerName value.
     */
    public String resellerName() {
        return this.innerProperties() == null ? null : this.innerProperties().resellerName();
    }

    /**
     * Get the initiatorCustomerType property: The type of customer who sent the transfer request.
     *
     * @return the initiatorCustomerType value.
     */
    public String initiatorCustomerType() {
        return this.innerProperties() == null ? null : this.innerProperties().initiatorCustomerType();
    }

    /**
     * Get the canceledBy property: The email ID of the user who canceled the transfer request.
     *
     * @return the canceledBy value.
     */
    public String canceledBy() {
        return this.innerProperties() == null ? null : this.innerProperties().canceledBy();
    }

    /**
     * Get the detailedTransferStatus property: Detailed transfer status.
     *
     * @return the detailedTransferStatus value.
     */
    public List<DetailedTransferStatus> detailedTransferStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().detailedTransferStatus();
    }

    /**
     * Get the customerTenantId property: The customer tenant id.
     *
     * @return the customerTenantId value.
     */
    public String customerTenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().customerTenantId();
    }

    /**
     * Get the supportedAccounts property: List of supported account types.
     *
     * @return the supportedAccounts value.
     */
    public List<SupportedAccountType> supportedAccounts() {
        return this.innerProperties() == null ? null : this.innerProperties().supportedAccounts();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

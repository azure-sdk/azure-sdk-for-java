// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.billing.models.ValidationResultProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The properties of transfer validation response. */
@Fluent
public final class ValidateTransferResponseProperties {
    /*
     * The status of validation
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /*
     * The product id for which this result applies.
     */
    @JsonProperty(value = "productId", access = JsonProperty.Access.WRITE_ONLY)
    private String productId;

    /*
     * The array of validation results.
     */
    @JsonProperty(value = "results")
    private List<ValidationResultProperties> results;

    /** Creates an instance of ValidateTransferResponseProperties class. */
    public ValidateTransferResponseProperties() {
    }

    /**
     * Get the status property: The status of validation.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the productId property: The product id for which this result applies.
     *
     * @return the productId value.
     */
    public String productId() {
        return this.productId;
    }

    /**
     * Get the results property: The array of validation results.
     *
     * @return the results value.
     */
    public List<ValidationResultProperties> results() {
        return this.results;
    }

    /**
     * Set the results property: The array of validation results.
     *
     * @param results the results value to set.
     * @return the ValidateTransferResponseProperties object itself.
     */
    public ValidateTransferResponseProperties withResults(List<ValidationResultProperties> results) {
        this.results = results;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (results() != null) {
            results().forEach(e -> e.validate());
        }
    }
}

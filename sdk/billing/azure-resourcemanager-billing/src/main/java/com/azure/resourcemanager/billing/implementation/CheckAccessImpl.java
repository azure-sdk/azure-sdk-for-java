// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.billing.fluent.CheckAccessClient;
import com.azure.resourcemanager.billing.fluent.models.CheckAccessResponseInner;
import com.azure.resourcemanager.billing.models.CheckAccess;
import com.azure.resourcemanager.billing.models.CheckAccessRequest;
import com.azure.resourcemanager.billing.models.CheckAccessResponse;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class CheckAccessImpl implements CheckAccess {
    private static final ClientLogger LOGGER = new ClientLogger(CheckAccessImpl.class);

    private final CheckAccessClient innerClient;

    private final com.azure.resourcemanager.billing.BillingManager serviceManager;

    public CheckAccessImpl(
        CheckAccessClient innerClient, com.azure.resourcemanager.billing.BillingManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<List<CheckAccessResponse>> getByBillingProfileWithResponse(
        String billingAccountName, String billingProfileName, CheckAccessRequest body, Context context) {
        Response<List<CheckAccessResponseInner>> inner =
            this.serviceClient().getByBillingProfileWithResponse(billingAccountName, billingProfileName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public List<CheckAccessResponse> getByBillingProfile(String billingAccountName, String billingProfileName) {
        List<CheckAccessResponseInner> inner =
            this.serviceClient().getByBillingProfile(billingAccountName, billingProfileName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Response<List<CheckAccessResponse>> getByCustomerWithResponse(
        String billingAccountName,
        String billingProfileName,
        String customerName,
        CheckAccessRequest body,
        Context context) {
        Response<List<CheckAccessResponseInner>> inner =
            this
                .serviceClient()
                .getByCustomerWithResponse(billingAccountName, billingProfileName, customerName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public List<CheckAccessResponse> getByCustomer(
        String billingAccountName, String billingProfileName, String customerName) {
        List<CheckAccessResponseInner> inner =
            this.serviceClient().getByCustomer(billingAccountName, billingProfileName, customerName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Response<List<CheckAccessResponse>> getByInvoiceSectionWithResponse(
        String billingAccountName,
        String billingProfileName,
        String invoiceSectionName,
        CheckAccessRequest body,
        Context context) {
        Response<List<CheckAccessResponseInner>> inner =
            this
                .serviceClient()
                .getByInvoiceSectionWithResponse(
                    billingAccountName, billingProfileName, invoiceSectionName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public List<CheckAccessResponse> getByInvoiceSection(
        String billingAccountName, String billingProfileName, String invoiceSectionName) {
        List<CheckAccessResponseInner> inner =
            this.serviceClient().getByInvoiceSection(billingAccountName, billingProfileName, invoiceSectionName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Response<List<CheckAccessResponse>> getByBillingAccountWithResponse(
        String billingAccountName, CheckAccessRequest body, Context context) {
        Response<List<CheckAccessResponseInner>> inner =
            this.serviceClient().getByBillingAccountWithResponse(billingAccountName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public List<CheckAccessResponse> getByBillingAccount(String billingAccountName) {
        List<CheckAccessResponseInner> inner = this.serviceClient().getByBillingAccount(billingAccountName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Response<List<CheckAccessResponse>> getByDepartmentWithResponse(
        String billingAccountName, String departmentName, CheckAccessRequest body, Context context) {
        Response<List<CheckAccessResponseInner>> inner =
            this.serviceClient().getByDepartmentWithResponse(billingAccountName, departmentName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public List<CheckAccessResponse> getByDepartment(String billingAccountName, String departmentName) {
        List<CheckAccessResponseInner> inner = this.serviceClient().getByDepartment(billingAccountName, departmentName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Response<List<CheckAccessResponse>> getByEnrollmentAccountWithResponse(
        String billingAccountName, String enrollmentAccountName, CheckAccessRequest body, Context context) {
        Response<List<CheckAccessResponseInner>> inner =
            this
                .serviceClient()
                .getByEnrollmentAccountWithResponse(billingAccountName, enrollmentAccountName, body, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public List<CheckAccessResponse> getByEnrollmentAccount(String billingAccountName, String enrollmentAccountName) {
        List<CheckAccessResponseInner> inner =
            this.serviceClient().getByEnrollmentAccount(billingAccountName, enrollmentAccountName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CheckAccessResponseImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    private CheckAccessClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.billing.BillingManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.billing.fluent.models.CheckAccessResponseInner;
import com.azure.resourcemanager.billing.models.CheckAccessRequest;
import java.util.List;

/** An instance of this class provides access to all the operations defined in CheckAccessClient. */
public interface CheckAccessClient {
    /**
     * Provides a list of check access response objects for a billing profile.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param body The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<CheckAccessResponseInner>> getByBillingProfileWithResponse(
        String billingAccountName, String billingProfileName, CheckAccessRequest body, Context context);

    /**
     * Provides a list of check access response objects for a billing profile.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<CheckAccessResponseInner> getByBillingProfile(String billingAccountName, String billingProfileName);

    /**
     * Provides a list of check access response objects for a customer.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param customerName The ID that uniquely identifies a customer.
     * @param body The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<CheckAccessResponseInner>> getByCustomerWithResponse(
        String billingAccountName,
        String billingProfileName,
        String customerName,
        CheckAccessRequest body,
        Context context);

    /**
     * Provides a list of check access response objects for a customer.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param customerName The ID that uniquely identifies a customer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<CheckAccessResponseInner> getByCustomer(
        String billingAccountName, String billingProfileName, String customerName);

    /**
     * Provides a list of check access response objects for an invoice section.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @param body The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<CheckAccessResponseInner>> getByInvoiceSectionWithResponse(
        String billingAccountName,
        String billingProfileName,
        String invoiceSectionName,
        CheckAccessRequest body,
        Context context);

    /**
     * Provides a list of check access response objects for an invoice section.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param invoiceSectionName The ID that uniquely identifies an invoice section.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<CheckAccessResponseInner> getByInvoiceSection(
        String billingAccountName, String billingProfileName, String invoiceSectionName);

    /**
     * Provides a list of check access response objects for a billing account.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param body The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<CheckAccessResponseInner>> getByBillingAccountWithResponse(
        String billingAccountName, CheckAccessRequest body, Context context);

    /**
     * Provides a list of check access response objects for a billing account.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<CheckAccessResponseInner> getByBillingAccount(String billingAccountName);

    /**
     * Provides a list of check access response objects for a department.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param departmentName The name of the department.
     * @param body The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<CheckAccessResponseInner>> getByDepartmentWithResponse(
        String billingAccountName, String departmentName, CheckAccessRequest body, Context context);

    /**
     * Provides a list of check access response objects for a department.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param departmentName The name of the department.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<CheckAccessResponseInner> getByDepartment(String billingAccountName, String departmentName);

    /**
     * Provides a list of check access response objects for an enrollment account.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param enrollmentAccountName The name of the enrollment account.
     * @param body The request object against which access of the caller will be checked.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<CheckAccessResponseInner>> getByEnrollmentAccountWithResponse(
        String billingAccountName, String enrollmentAccountName, CheckAccessRequest body, Context context);

    /**
     * Provides a list of check access response objects for an enrollment account.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param enrollmentAccountName The name of the enrollment account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return array of CheckAccessResponse.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<CheckAccessResponseInner> getByEnrollmentAccount(String billingAccountName, String enrollmentAccountName);
}

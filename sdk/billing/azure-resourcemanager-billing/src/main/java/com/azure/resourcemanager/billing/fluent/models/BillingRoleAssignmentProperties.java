// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.billing.models.BillingRoleAssignmentPropertiesAutoGenerated;

/** The properties of a(n) BillingRoleAssignment. */
@Fluent
public final class BillingRoleAssignmentProperties extends BillingRoleAssignmentPropertiesAutoGenerated {
    /** Creates an instance of BillingRoleAssignmentProperties class. */
    public BillingRoleAssignmentProperties() {
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withNotificationContact(String notificationContact) {
        super.withNotificationContact(notificationContact);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withPrincipalPuid(String principalPuid) {
        super.withPrincipalPuid(principalPuid);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withPrincipalId(String principalId) {
        super.withPrincipalId(principalId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withPrincipalTenantId(String principalTenantId) {
        super.withPrincipalTenantId(principalTenantId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withRoleDefinitionId(String roleDefinitionId) {
        super.withRoleDefinitionId(roleDefinitionId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withScope(String scope) {
        super.withScope(scope);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withUserAuthenticationType(String userAuthenticationType) {
        super.withUserAuthenticationType(userAuthenticationType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BillingRoleAssignmentProperties withUserEmailAddress(String userEmailAddress) {
        super.withUserEmailAddress(userEmailAddress);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.billing.models.PaymentMethodFamily;
import com.azure.resourcemanager.billing.models.PaymentMethodLogo;
import com.azure.resourcemanager.billing.models.PaymentMethodStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The properties of a payment method. */
@Fluent
public final class PaymentMethodProperties {
    /*
     * The account holder name for the payment method. This is only supported for payment methods with family
     * CreditCard.
     */
    @JsonProperty(value = "accountHolderName", access = JsonProperty.Access.WRITE_ONLY)
    private String accountHolderName;

    /*
     * The display name of the payment method.
     */
    @JsonProperty(value = "displayName", access = JsonProperty.Access.WRITE_ONLY)
    private String displayName;

    /*
     * The expiration month and year of the payment method. This is only supported for payment methods with family
     * CreditCard.
     */
    @JsonProperty(value = "expiration", access = JsonProperty.Access.WRITE_ONLY)
    private String expiration;

    /*
     * The family of payment method.
     */
    @JsonProperty(value = "family")
    private PaymentMethodFamily family;

    /*
     * Last four digits of payment method.
     */
    @JsonProperty(value = "lastFourDigits", access = JsonProperty.Access.WRITE_ONLY)
    private String lastFourDigits;

    /*
     * The list of logos for the payment method.
     */
    @JsonProperty(value = "logos")
    private List<PaymentMethodLogo> logos;

    /*
     * The type of payment method.
     */
    @JsonProperty(value = "paymentMethodType", access = JsonProperty.Access.WRITE_ONLY)
    private String paymentMethodType;

    /*
     * Status of the payment method.
     */
    @JsonProperty(value = "status")
    private PaymentMethodStatus status;

    /** Creates an instance of PaymentMethodProperties class. */
    public PaymentMethodProperties() {
    }

    /**
     * Get the accountHolderName property: The account holder name for the payment method. This is only supported for
     * payment methods with family CreditCard.
     *
     * @return the accountHolderName value.
     */
    public String accountHolderName() {
        return this.accountHolderName;
    }

    /**
     * Get the displayName property: The display name of the payment method.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Get the expiration property: The expiration month and year of the payment method. This is only supported for
     * payment methods with family CreditCard.
     *
     * @return the expiration value.
     */
    public String expiration() {
        return this.expiration;
    }

    /**
     * Get the family property: The family of payment method.
     *
     * @return the family value.
     */
    public PaymentMethodFamily family() {
        return this.family;
    }

    /**
     * Set the family property: The family of payment method.
     *
     * @param family the family value to set.
     * @return the PaymentMethodProperties object itself.
     */
    public PaymentMethodProperties withFamily(PaymentMethodFamily family) {
        this.family = family;
        return this;
    }

    /**
     * Get the lastFourDigits property: Last four digits of payment method.
     *
     * @return the lastFourDigits value.
     */
    public String lastFourDigits() {
        return this.lastFourDigits;
    }

    /**
     * Get the logos property: The list of logos for the payment method.
     *
     * @return the logos value.
     */
    public List<PaymentMethodLogo> logos() {
        return this.logos;
    }

    /**
     * Set the logos property: The list of logos for the payment method.
     *
     * @param logos the logos value to set.
     * @return the PaymentMethodProperties object itself.
     */
    public PaymentMethodProperties withLogos(List<PaymentMethodLogo> logos) {
        this.logos = logos;
        return this;
    }

    /**
     * Get the paymentMethodType property: The type of payment method.
     *
     * @return the paymentMethodType value.
     */
    public String paymentMethodType() {
        return this.paymentMethodType;
    }

    /**
     * Get the status property: Status of the payment method.
     *
     * @return the status value.
     */
    public PaymentMethodStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the payment method.
     *
     * @param status the status value to set.
     * @return the PaymentMethodProperties object itself.
     */
    public PaymentMethodProperties withStatus(PaymentMethodStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (logos() != null) {
            logos().forEach(e -> e.validate());
        }
    }
}

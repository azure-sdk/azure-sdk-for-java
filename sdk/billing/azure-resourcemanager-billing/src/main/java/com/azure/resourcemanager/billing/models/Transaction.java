// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.billing.fluent.models.TransactionInner;

/** An immutable client-side representation of Transaction. */
public interface Transaction {
    /**
     * Gets the type property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the id property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the azureCreditApplied property: The amount.
     *
     * @return the azureCreditApplied value.
     */
    TransactionPropertiesAzureCreditApplied azureCreditApplied();

    /**
     * Gets the azurePlan property: Details of the Azure plan.
     *
     * @return the azurePlan value.
     */
    String azurePlan();

    /**
     * Gets the billingCurrency property: The ISO 4217 code for the currency in which this transaction is billed.
     *
     * @return the billingCurrency value.
     */
    String billingCurrency();

    /**
     * Gets the billingProfileDisplayName property: The name of the billing profile for the invoice section or customer.
     *
     * @return the billingProfileDisplayName value.
     */
    Object billingProfileDisplayName();

    /**
     * Gets the billingProfileId property: The fully qualified ID that uniquely identifies a billing profile.
     *
     * @return the billingProfileId value.
     */
    String billingProfileId();

    /**
     * Gets the consumptionCommitmentDecremented property: The amount.
     *
     * @return the consumptionCommitmentDecremented value.
     */
    TransactionPropertiesConsumptionCommitmentDecremented consumptionCommitmentDecremented();

    /**
     * Gets the customerDisplayName property: The name of the customer.
     *
     * @return the customerDisplayName value.
     */
    String customerDisplayName();

    /**
     * Gets the customerId property: The fully qualified ID that uniquely identifies a customer.
     *
     * @return the customerId value.
     */
    String customerId();

    /**
     * Gets the creditType property: The credit type of the transaction. Applies only to credited transactions.
     *
     * @return the creditType value.
     */
    CreditType creditType();

    /**
     * Gets the date property: The date of transaction.
     *
     * @return the date value.
     */
    String date();

    /**
     * Gets the discount property: The percentage discount, if any, applied to this transaction.
     *
     * @return the discount value.
     */
    Double discount();

    /**
     * Gets the effectivePrice property: The amount.
     *
     * @return the effectivePrice value.
     */
    TransactionPropertiesEffectivePrice effectivePrice();

    /**
     * Gets the exchangeRate property: The exchange rate used to convert charged amount to billing currency, if
     * applicable.
     *
     * @return the exchangeRate value.
     */
    Double exchangeRate();

    /**
     * Gets the invoice property: Invoice on which the transaction was billed or 'pending' if the transaction is not
     * billed.
     *
     * @return the invoice value.
     */
    String invoice();

    /**
     * Gets the invoiceId property: The ID of the invoice on which the transaction was billed. This field is only
     * applicable for transactions which are billed.
     *
     * @return the invoiceId value.
     */
    String invoiceId();

    /**
     * Gets the invoiceSectionDisplayName property: The name of the invoice section.
     *
     * @return the invoiceSectionDisplayName value.
     */
    String invoiceSectionDisplayName();

    /**
     * Gets the invoiceSectionId property: The fully qualified ID that uniquely identifies an invoice section.
     *
     * @return the invoiceSectionId value.
     */
    String invoiceSectionId();

    /**
     * Gets the isThirdParty property: Whether or not the transaction is third party.
     *
     * @return the isThirdParty value.
     */
    Boolean isThirdParty();

    /**
     * Gets the kind property: Type of the transaction, billed or unbilled.
     *
     * @return the kind value.
     */
    TransactionKind kind();

    /**
     * Gets the marketPrice property: The amount.
     *
     * @return the marketPrice value.
     */
    TransactionPropertiesMarketPrice marketPrice();

    /**
     * Gets the partNumber property: The part number of the product for which the transaction took place. The field is
     * only applicable for Enterprise Agreement invoices.
     *
     * @return the partNumber value.
     */
    String partNumber();

    /**
     * Gets the pricingCurrency property: The ISO 4217 code for the currency in which the product is priced.
     *
     * @return the pricingCurrency value.
     */
    String pricingCurrency();

    /**
     * Gets the productDescription property: The description of the product for which the transaction took place.
     *
     * @return the productDescription value.
     */
    String productDescription();

    /**
     * Gets the productFamily property: The family of the product for which the transaction took place.
     *
     * @return the productFamily value.
     */
    String productFamily();

    /**
     * Gets the productTypeId property: The ID of the product type for which the transaction took place.
     *
     * @return the productTypeId value.
     */
    String productTypeId();

    /**
     * Gets the productType property: The type of the product for which the transaction took place.
     *
     * @return the productType value.
     */
    String productType();

    /**
     * Gets the quantity property: The quantity purchased in the transaction.
     *
     * @return the quantity value.
     */
    Integer quantity();

    /**
     * Gets the reasonCode property: There reason code for the transaction.
     *
     * @return the reasonCode value.
     */
    String reasonCode();

    /**
     * Gets the servicePeriodStartDate property: The date of the purchase of the product, or the start date of the month
     * in which usage started.
     *
     * @return the servicePeriodStartDate value.
     */
    String servicePeriodStartDate();

    /**
     * Gets the servicePeriodEndDate property: The end date of the product term, or the end date of the month in which
     * usage ended.
     *
     * @return the servicePeriodEndDate value.
     */
    String servicePeriodEndDate();

    /**
     * Gets the subTotal property: The amount.
     *
     * @return the subTotal value.
     */
    TransactionPropertiesSubTotal subTotal();

    /**
     * Gets the tax property: The amount.
     *
     * @return the tax value.
     */
    TransactionPropertiesTax tax();

    /**
     * Gets the transactionAmount property: The amount.
     *
     * @return the transactionAmount value.
     */
    TransactionPropertiesTransactionAmount transactionAmount();

    /**
     * Gets the transactionType property: The type of transaction.
     *
     * @return the transactionType value.
     */
    String transactionType();

    /**
     * Gets the units property: The number of units used for a given product.
     *
     * @return the units value.
     */
    Double units();

    /**
     * Gets the unitOfMeasure property: The unit of measure used to bill for the product. For example, compute services
     * are billed per hour.
     *
     * @return the unitOfMeasure value.
     */
    String unitOfMeasure();

    /**
     * Gets the unitType property: The description for the unit of measure for a given product.
     *
     * @return the unitType value.
     */
    String unitType();

    /**
     * Gets the specialTaxationType property: Identifies the type of tax calculation used for the invoice. The field is
     * applicable only to invoices with special tax calculation logic.
     *
     * @return the specialTaxationType value.
     */
    SpecialTaxationType specialTaxationType();

    /**
     * Gets the refundTransactionDetails property: The refund details of a transaction.
     *
     * @return the refundTransactionDetails value.
     */
    TransactionPropertiesRefundTransactionDetails refundTransactionDetails();

    /**
     * Gets the inner com.azure.resourcemanager.billing.fluent.models.TransactionInner object.
     *
     * @return the inner object.
     */
    TransactionInner innerModel();
}

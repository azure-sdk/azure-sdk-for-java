// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.billing.fluent.models.AcceptTransferProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Request parameters to accept transfer. */
@Fluent
public final class AcceptTransferRequest {
    /*
     * Request parameters to accept transfer.
     */
    @JsonProperty(value = "properties")
    private AcceptTransferProperties innerProperties;

    /** Creates an instance of AcceptTransferRequest class. */
    public AcceptTransferRequest() {
    }

    /**
     * Get the innerProperties property: Request parameters to accept transfer.
     *
     * @return the innerProperties value.
     */
    private AcceptTransferProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the productDetails property: Request parameters to accept transfer.
     *
     * @return the productDetails value.
     */
    public List<ProductDetails> productDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().productDetails();
    }

    /**
     * Set the productDetails property: Request parameters to accept transfer.
     *
     * @param productDetails the productDetails value to set.
     * @return the AcceptTransferRequest object itself.
     */
    public AcceptTransferRequest withProductDetails(List<ProductDetails> productDetails) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AcceptTransferProperties();
        }
        this.innerProperties().withProductDetails(productDetails);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The details of refund request. */
@Fluent
public class RefundDetailsSummary {
    /*
     * Date when the refund was requested.
     */
    @JsonProperty(value = "requestedOn", access = JsonProperty.Access.WRITE_ONLY)
    private String requestedOn;

    /*
     * Date when the refund was approved.
     */
    @JsonProperty(value = "approvedOn", access = JsonProperty.Access.WRITE_ONLY)
    private String approvedOn;

    /*
     * Date when the refund was completed.
     */
    @JsonProperty(value = "completedOn", access = JsonProperty.Access.WRITE_ONLY)
    private String completedOn;

    /*
     * The amount.
     */
    @JsonProperty(value = "amountRequested")
    private RefundDetailsSummaryAmountRequested amountRequested;

    /*
     * The amount.
     */
    @JsonProperty(value = "amountRefunded")
    private RefundDetailsSummaryAmountRefunded amountRefunded;

    /*
     * The invoice ID of the rebill invoice for a refund.
     */
    @JsonProperty(value = "rebillInvoiceId", access = JsonProperty.Access.WRITE_ONLY)
    private String rebillInvoiceId;

    /*
     * The number of transactions refunded.
     */
    @JsonProperty(value = "transactionCount", access = JsonProperty.Access.WRITE_ONLY)
    private Integer transactionCount;

    /*
     * The status of refund request.
     */
    @JsonProperty(value = "refundStatus", access = JsonProperty.Access.WRITE_ONLY)
    private RefundStatus refundStatus;

    /*
     * The ID of refund operation.
     */
    @JsonProperty(value = "refundOperationId", access = JsonProperty.Access.WRITE_ONLY)
    private String refundOperationId;

    /*
     * The reason for refund.
     */
    @JsonProperty(value = "refundReason", access = JsonProperty.Access.WRITE_ONLY)
    private RefundReasonCode refundReason;

    /** Creates an instance of RefundDetailsSummary class. */
    public RefundDetailsSummary() {
    }

    /**
     * Get the requestedOn property: Date when the refund was requested.
     *
     * @return the requestedOn value.
     */
    public String requestedOn() {
        return this.requestedOn;
    }

    /**
     * Get the approvedOn property: Date when the refund was approved.
     *
     * @return the approvedOn value.
     */
    public String approvedOn() {
        return this.approvedOn;
    }

    /**
     * Get the completedOn property: Date when the refund was completed.
     *
     * @return the completedOn value.
     */
    public String completedOn() {
        return this.completedOn;
    }

    /**
     * Get the amountRequested property: The amount.
     *
     * @return the amountRequested value.
     */
    public RefundDetailsSummaryAmountRequested amountRequested() {
        return this.amountRequested;
    }

    /**
     * Set the amountRequested property: The amount.
     *
     * @param amountRequested the amountRequested value to set.
     * @return the RefundDetailsSummary object itself.
     */
    public RefundDetailsSummary withAmountRequested(RefundDetailsSummaryAmountRequested amountRequested) {
        this.amountRequested = amountRequested;
        return this;
    }

    /**
     * Get the amountRefunded property: The amount.
     *
     * @return the amountRefunded value.
     */
    public RefundDetailsSummaryAmountRefunded amountRefunded() {
        return this.amountRefunded;
    }

    /**
     * Set the amountRefunded property: The amount.
     *
     * @param amountRefunded the amountRefunded value to set.
     * @return the RefundDetailsSummary object itself.
     */
    public RefundDetailsSummary withAmountRefunded(RefundDetailsSummaryAmountRefunded amountRefunded) {
        this.amountRefunded = amountRefunded;
        return this;
    }

    /**
     * Get the rebillInvoiceId property: The invoice ID of the rebill invoice for a refund.
     *
     * @return the rebillInvoiceId value.
     */
    public String rebillInvoiceId() {
        return this.rebillInvoiceId;
    }

    /**
     * Get the transactionCount property: The number of transactions refunded.
     *
     * @return the transactionCount value.
     */
    public Integer transactionCount() {
        return this.transactionCount;
    }

    /**
     * Get the refundStatus property: The status of refund request.
     *
     * @return the refundStatus value.
     */
    public RefundStatus refundStatus() {
        return this.refundStatus;
    }

    /**
     * Get the refundOperationId property: The ID of refund operation.
     *
     * @return the refundOperationId value.
     */
    public String refundOperationId() {
        return this.refundOperationId;
    }

    /**
     * Get the refundReason property: The reason for refund.
     *
     * @return the refundReason value.
     */
    public RefundReasonCode refundReason() {
        return this.refundReason;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (amountRequested() != null) {
            amountRequested().validate();
        }
        if (amountRefunded() != null) {
            amountRefunded().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.support.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The look up resource Id request body.
 */
@Fluent
public final class LookUpResourceIdRequest implements JsonSerializable<LookUpResourceIdRequest> {
    /*
     * The System generated Id that is unique. Use supportTicketId property for Microsoft.Support/supportTickets
     * resource type.
     */
    private String identifier;

    /*
     * The type of resource.
     */
    private ResourceType type;

    /**
     * Creates an instance of LookUpResourceIdRequest class.
     */
    public LookUpResourceIdRequest() {
    }

    /**
     * Get the identifier property: The System generated Id that is unique. Use supportTicketId property for
     * Microsoft.Support/supportTickets resource type.
     * 
     * @return the identifier value.
     */
    public String identifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: The System generated Id that is unique. Use supportTicketId property for
     * Microsoft.Support/supportTickets resource type.
     * 
     * @param identifier the identifier value to set.
     * @return the LookUpResourceIdRequest object itself.
     */
    public LookUpResourceIdRequest withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the type property: The type of resource.
     * 
     * @return the type value.
     */
    public ResourceType type() {
        return this.type;
    }

    /**
     * Set the type property: The type of resource.
     * 
     * @param type the type value to set.
     * @return the LookUpResourceIdRequest object itself.
     */
    public LookUpResourceIdRequest withType(ResourceType type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("identifier", this.identifier);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LookUpResourceIdRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LookUpResourceIdRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LookUpResourceIdRequest.
     */
    public static LookUpResourceIdRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LookUpResourceIdRequest deserializedLookUpResourceIdRequest = new LookUpResourceIdRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("identifier".equals(fieldName)) {
                    deserializedLookUpResourceIdRequest.identifier = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedLookUpResourceIdRequest.type = ResourceType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLookUpResourceIdRequest;
        });
    }
}

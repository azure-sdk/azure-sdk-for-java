// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Notification event type.
 */
public final class NotificationEventType extends ExpandableStringEnum<NotificationEventType> {
    /**
     * Test run ended event. This event would occur when a test run reaches terminal state.
     */
    @Generated
    public static final NotificationEventType TEST_RUN_ENDED = fromString("TestRunEnded");

    /**
     * Test run started event. This event would occur when a new test run is triggered.
     */
    @Generated
    public static final NotificationEventType TEST_RUN_STARTED = fromString("TestRunStarted");

    /**
     * Trigger completed event. This event would occur when a trigger completes.
     */
    @Generated
    public static final NotificationEventType TRIGGER_COMPLETED = fromString("TriggerCompleted");

    /**
     * Trigger disabled event. This event would occur when a trigger is disabled.
     */
    @Generated
    public static final NotificationEventType TRIGGER_DISABLED = fromString("TriggerDisabled");

    /**
     * Creates a new instance of NotificationEventType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public NotificationEventType() {
    }

    /**
     * Creates or finds a NotificationEventType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NotificationEventType.
     */
    @Generated
    public static NotificationEventType fromString(String name) {
        return fromString(name, NotificationEventType.class);
    }

    /**
     * Gets known NotificationEventType values.
     * 
     * @return known NotificationEventType values.
     */
    @Generated
    public static Collection<NotificationEventType> values() {
        return values(NotificationEventType.class);
    }
}

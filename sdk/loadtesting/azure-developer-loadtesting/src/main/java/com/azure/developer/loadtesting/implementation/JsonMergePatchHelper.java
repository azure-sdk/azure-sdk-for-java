// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.implementation;

import com.azure.developer.loadtesting.models.AppComponent;
import com.azure.developer.loadtesting.models.ArtifactsContainerInfo;
import com.azure.developer.loadtesting.models.AutoStopCriteria;
import com.azure.developer.loadtesting.models.CertificateMetadata;
import com.azure.developer.loadtesting.models.ErrorDetails;
import com.azure.developer.loadtesting.models.LoadTestConfiguration;
import com.azure.developer.loadtesting.models.OptionalLoadTestConfig;
import com.azure.developer.loadtesting.models.PassFailCriteria;
import com.azure.developer.loadtesting.models.PassFailMetric;
import com.azure.developer.loadtesting.models.ResourceMetric;
import com.azure.developer.loadtesting.models.Secret;
import com.azure.developer.loadtesting.models.Test;
import com.azure.developer.loadtesting.models.TestAppComponents;
import com.azure.developer.loadtesting.models.TestFileInfo;
import com.azure.developer.loadtesting.models.TestInputArtifacts;
import com.azure.developer.loadtesting.models.TestRun;
import com.azure.developer.loadtesting.models.TestRunAppComponents;
import com.azure.developer.loadtesting.models.TestRunArtifacts;
import com.azure.developer.loadtesting.models.TestRunFileInfo;
import com.azure.developer.loadtesting.models.TestRunInputArtifacts;
import com.azure.developer.loadtesting.models.TestRunOutputArtifacts;
import com.azure.developer.loadtesting.models.TestRunServerMetricConfig;
import com.azure.developer.loadtesting.models.TestRunStatistics;
import com.azure.developer.loadtesting.models.TestServerMetricConfig;

/**
 * This is the Helper class to enable json merge patch serialization for a model.
 */
public class JsonMergePatchHelper {
    private static TestAccessor testAccessor;

    private static PassFailCriteriaAccessor passFailCriteriaAccessor;

    private static PassFailMetricAccessor passFailMetricAccessor;

    private static AutoStopCriteriaAccessor autoStopCriteriaAccessor;

    private static SecretAccessor secretAccessor;

    private static CertificateMetadataAccessor certificateMetadataAccessor;

    private static LoadTestConfigurationAccessor loadTestConfigurationAccessor;

    private static OptionalLoadTestConfigAccessor optionalLoadTestConfigAccessor;

    private static TestInputArtifactsAccessor testInputArtifactsAccessor;

    private static TestFileInfoAccessor testFileInfoAccessor;

    private static TestAppComponentsAccessor testAppComponentsAccessor;

    private static AppComponentAccessor appComponentAccessor;

    private static TestServerMetricConfigAccessor testServerMetricConfigAccessor;

    private static ResourceMetricAccessor resourceMetricAccessor;

    private static TestRunAccessor testRunAccessor;

    private static ErrorDetailsAccessor errorDetailsAccessor;

    private static TestRunStatisticsAccessor testRunStatisticsAccessor;

    private static TestRunArtifactsAccessor testRunArtifactsAccessor;

    private static TestRunInputArtifactsAccessor testRunInputArtifactsAccessor;

    private static TestRunFileInfoAccessor testRunFileInfoAccessor;

    private static TestRunOutputArtifactsAccessor testRunOutputArtifactsAccessor;

    private static ArtifactsContainerInfoAccessor artifactsContainerInfoAccessor;

    private static TestRunAppComponentsAccessor testRunAppComponentsAccessor;

    private static TestRunServerMetricConfigAccessor testRunServerMetricConfigAccessor;

    public interface TestAccessor {
        Test prepareModelForJsonMergePatch(Test test, boolean jsonMergePatchEnabled);
    }

    public interface PassFailCriteriaAccessor {
        PassFailCriteria prepareModelForJsonMergePatch(PassFailCriteria passFailCriteria,
            boolean jsonMergePatchEnabled);
    }

    public interface PassFailMetricAccessor {
        PassFailMetric prepareModelForJsonMergePatch(PassFailMetric passFailMetric, boolean jsonMergePatchEnabled);
    }

    public interface AutoStopCriteriaAccessor {
        AutoStopCriteria prepareModelForJsonMergePatch(AutoStopCriteria autoStopCriteria,
            boolean jsonMergePatchEnabled);
    }

    public interface SecretAccessor {
        Secret prepareModelForJsonMergePatch(Secret secret, boolean jsonMergePatchEnabled);
    }

    public interface CertificateMetadataAccessor {
        CertificateMetadata prepareModelForJsonMergePatch(CertificateMetadata certificateMetadata,
            boolean jsonMergePatchEnabled);
    }

    public interface LoadTestConfigurationAccessor {
        LoadTestConfiguration prepareModelForJsonMergePatch(LoadTestConfiguration loadTestConfiguration,
            boolean jsonMergePatchEnabled);
    }

    public interface OptionalLoadTestConfigAccessor {
        OptionalLoadTestConfig prepareModelForJsonMergePatch(OptionalLoadTestConfig optionalLoadTestConfig,
            boolean jsonMergePatchEnabled);
    }

    public interface TestInputArtifactsAccessor {
        TestInputArtifacts prepareModelForJsonMergePatch(TestInputArtifacts testInputArtifacts,
            boolean jsonMergePatchEnabled);
    }

    public interface TestFileInfoAccessor {
        TestFileInfo prepareModelForJsonMergePatch(TestFileInfo testFileInfo, boolean jsonMergePatchEnabled);
    }

    public interface TestAppComponentsAccessor {
        TestAppComponents prepareModelForJsonMergePatch(TestAppComponents testAppComponents,
            boolean jsonMergePatchEnabled);
    }

    public interface AppComponentAccessor {
        AppComponent prepareModelForJsonMergePatch(AppComponent appComponent, boolean jsonMergePatchEnabled);
    }

    public interface TestServerMetricConfigAccessor {
        TestServerMetricConfig prepareModelForJsonMergePatch(TestServerMetricConfig testServerMetricConfig,
            boolean jsonMergePatchEnabled);
    }

    public interface ResourceMetricAccessor {
        ResourceMetric prepareModelForJsonMergePatch(ResourceMetric resourceMetric, boolean jsonMergePatchEnabled);
    }

    public interface TestRunAccessor {
        TestRun prepareModelForJsonMergePatch(TestRun testRun, boolean jsonMergePatchEnabled);
    }

    public interface ErrorDetailsAccessor {
        ErrorDetails prepareModelForJsonMergePatch(ErrorDetails errorDetails, boolean jsonMergePatchEnabled);
    }

    public interface TestRunStatisticsAccessor {
        TestRunStatistics prepareModelForJsonMergePatch(TestRunStatistics testRunStatistics,
            boolean jsonMergePatchEnabled);
    }

    public interface TestRunArtifactsAccessor {
        TestRunArtifacts prepareModelForJsonMergePatch(TestRunArtifacts testRunArtifacts,
            boolean jsonMergePatchEnabled);
    }

    public interface TestRunInputArtifactsAccessor {
        TestRunInputArtifacts prepareModelForJsonMergePatch(TestRunInputArtifacts testRunInputArtifacts,
            boolean jsonMergePatchEnabled);
    }

    public interface TestRunFileInfoAccessor {
        TestRunFileInfo prepareModelForJsonMergePatch(TestRunFileInfo testRunFileInfo, boolean jsonMergePatchEnabled);
    }

    public interface TestRunOutputArtifactsAccessor {
        TestRunOutputArtifacts prepareModelForJsonMergePatch(TestRunOutputArtifacts testRunOutputArtifacts,
            boolean jsonMergePatchEnabled);
    }

    public interface ArtifactsContainerInfoAccessor {
        ArtifactsContainerInfo prepareModelForJsonMergePatch(ArtifactsContainerInfo artifactsContainerInfo,
            boolean jsonMergePatchEnabled);
    }

    public interface TestRunAppComponentsAccessor {
        TestRunAppComponents prepareModelForJsonMergePatch(TestRunAppComponents testRunAppComponents,
            boolean jsonMergePatchEnabled);
    }

    public interface TestRunServerMetricConfigAccessor {
        TestRunServerMetricConfig prepareModelForJsonMergePatch(TestRunServerMetricConfig testRunServerMetricConfig,
            boolean jsonMergePatchEnabled);
    }

    public static void setTestAccessor(TestAccessor accessor) {
        testAccessor = accessor;
    }

    public static TestAccessor getTestAccessor() {
        return testAccessor;
    }

    public static void setPassFailCriteriaAccessor(PassFailCriteriaAccessor accessor) {
        passFailCriteriaAccessor = accessor;
    }

    public static PassFailCriteriaAccessor getPassFailCriteriaAccessor() {
        return passFailCriteriaAccessor;
    }

    public static void setPassFailMetricAccessor(PassFailMetricAccessor accessor) {
        passFailMetricAccessor = accessor;
    }

    public static PassFailMetricAccessor getPassFailMetricAccessor() {
        return passFailMetricAccessor;
    }

    public static void setAutoStopCriteriaAccessor(AutoStopCriteriaAccessor accessor) {
        autoStopCriteriaAccessor = accessor;
    }

    public static AutoStopCriteriaAccessor getAutoStopCriteriaAccessor() {
        return autoStopCriteriaAccessor;
    }

    public static void setSecretAccessor(SecretAccessor accessor) {
        secretAccessor = accessor;
    }

    public static SecretAccessor getSecretAccessor() {
        return secretAccessor;
    }

    public static void setCertificateMetadataAccessor(CertificateMetadataAccessor accessor) {
        certificateMetadataAccessor = accessor;
    }

    public static CertificateMetadataAccessor getCertificateMetadataAccessor() {
        return certificateMetadataAccessor;
    }

    public static void setLoadTestConfigurationAccessor(LoadTestConfigurationAccessor accessor) {
        loadTestConfigurationAccessor = accessor;
    }

    public static LoadTestConfigurationAccessor getLoadTestConfigurationAccessor() {
        return loadTestConfigurationAccessor;
    }

    public static void setOptionalLoadTestConfigAccessor(OptionalLoadTestConfigAccessor accessor) {
        optionalLoadTestConfigAccessor = accessor;
    }

    public static OptionalLoadTestConfigAccessor getOptionalLoadTestConfigAccessor() {
        return optionalLoadTestConfigAccessor;
    }

    public static void setTestInputArtifactsAccessor(TestInputArtifactsAccessor accessor) {
        testInputArtifactsAccessor = accessor;
    }

    public static TestInputArtifactsAccessor getTestInputArtifactsAccessor() {
        return testInputArtifactsAccessor;
    }

    public static void setTestFileInfoAccessor(TestFileInfoAccessor accessor) {
        testFileInfoAccessor = accessor;
    }

    public static TestFileInfoAccessor getTestFileInfoAccessor() {
        return testFileInfoAccessor;
    }

    public static void setTestAppComponentsAccessor(TestAppComponentsAccessor accessor) {
        testAppComponentsAccessor = accessor;
    }

    public static TestAppComponentsAccessor getTestAppComponentsAccessor() {
        return testAppComponentsAccessor;
    }

    public static void setAppComponentAccessor(AppComponentAccessor accessor) {
        appComponentAccessor = accessor;
    }

    public static AppComponentAccessor getAppComponentAccessor() {
        return appComponentAccessor;
    }

    public static void setTestServerMetricConfigAccessor(TestServerMetricConfigAccessor accessor) {
        testServerMetricConfigAccessor = accessor;
    }

    public static TestServerMetricConfigAccessor getTestServerMetricConfigAccessor() {
        return testServerMetricConfigAccessor;
    }

    public static void setResourceMetricAccessor(ResourceMetricAccessor accessor) {
        resourceMetricAccessor = accessor;
    }

    public static ResourceMetricAccessor getResourceMetricAccessor() {
        return resourceMetricAccessor;
    }

    public static void setTestRunAccessor(TestRunAccessor accessor) {
        testRunAccessor = accessor;
    }

    public static TestRunAccessor getTestRunAccessor() {
        return testRunAccessor;
    }

    public static void setErrorDetailsAccessor(ErrorDetailsAccessor accessor) {
        errorDetailsAccessor = accessor;
    }

    public static ErrorDetailsAccessor getErrorDetailsAccessor() {
        return errorDetailsAccessor;
    }

    public static void setTestRunStatisticsAccessor(TestRunStatisticsAccessor accessor) {
        testRunStatisticsAccessor = accessor;
    }

    public static TestRunStatisticsAccessor getTestRunStatisticsAccessor() {
        return testRunStatisticsAccessor;
    }

    public static void setTestRunArtifactsAccessor(TestRunArtifactsAccessor accessor) {
        testRunArtifactsAccessor = accessor;
    }

    public static TestRunArtifactsAccessor getTestRunArtifactsAccessor() {
        return testRunArtifactsAccessor;
    }

    public static void setTestRunInputArtifactsAccessor(TestRunInputArtifactsAccessor accessor) {
        testRunInputArtifactsAccessor = accessor;
    }

    public static TestRunInputArtifactsAccessor getTestRunInputArtifactsAccessor() {
        return testRunInputArtifactsAccessor;
    }

    public static void setTestRunFileInfoAccessor(TestRunFileInfoAccessor accessor) {
        testRunFileInfoAccessor = accessor;
    }

    public static TestRunFileInfoAccessor getTestRunFileInfoAccessor() {
        return testRunFileInfoAccessor;
    }

    public static void setTestRunOutputArtifactsAccessor(TestRunOutputArtifactsAccessor accessor) {
        testRunOutputArtifactsAccessor = accessor;
    }

    public static TestRunOutputArtifactsAccessor getTestRunOutputArtifactsAccessor() {
        return testRunOutputArtifactsAccessor;
    }

    public static void setArtifactsContainerInfoAccessor(ArtifactsContainerInfoAccessor accessor) {
        artifactsContainerInfoAccessor = accessor;
    }

    public static ArtifactsContainerInfoAccessor getArtifactsContainerInfoAccessor() {
        return artifactsContainerInfoAccessor;
    }

    public static void setTestRunAppComponentsAccessor(TestRunAppComponentsAccessor accessor) {
        testRunAppComponentsAccessor = accessor;
    }

    public static TestRunAppComponentsAccessor getTestRunAppComponentsAccessor() {
        return testRunAppComponentsAccessor;
    }

    public static void setTestRunServerMetricConfigAccessor(TestRunServerMetricConfigAccessor accessor) {
        testRunServerMetricConfigAccessor = accessor;
    }

    public static TestRunServerMetricConfigAccessor getTestRunServerMetricConfigAccessor() {
        return testRunServerMetricConfigAccessor;
    }
}

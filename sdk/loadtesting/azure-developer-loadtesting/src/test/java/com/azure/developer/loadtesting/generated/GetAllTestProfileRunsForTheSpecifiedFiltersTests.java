// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.developer.loadtesting.models.ResourceKind;
import com.azure.developer.loadtesting.models.TargetResourceConfigurations;
import com.azure.developer.loadtesting.models.TestProfileRun;
import com.azure.developer.loadtesting.models.TestProfileRunStatus;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class GetAllTestProfileRunsForTheSpecifiedFiltersTests extends LoadTestAdministrationClientTestBase {
    @Test
    @Disabled
    public void testGetAllTestProfileRunsForTheSpecifiedFiltersTests() {
        // method invocation
        PagedIterable<TestProfileRun> response = loadTestRunClient.listTestProfileRuns(
            OffsetDateTime.parse("2024-05-01T16:00:46.072Z"), OffsetDateTime.parse("2024-05-01T16:50:46.072Z"),
            OffsetDateTime.parse("2024-05-01T16:00:46.072Z"), OffsetDateTime.parse("2024-05-01T16:50:46.072Z"), null,
            null, null, Arrays.asList("12345678-1234-1234-1234-123456789012"), Arrays.asList("ACCEPTED"));

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        TestProfileRun firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "testProfileRunId"
        Assertions.assertEquals("12316678-1234-1234-1234-122451189012", firstItem.getTestProfileRunId());
        // verify property "displayName"
        Assertions.assertEquals("Performance_TestProfile_Run1", firstItem.getDisplayName());
        // verify property "description"
        Assertions.assertEquals("sample description", firstItem.getDescription());
        // verify property "testProfileId"
        Assertions.assertEquals("12345678-1234-1234-1234-123456789012", firstItem.getTestProfileId());
        // verify property "targetResourceId"
        Assertions.assertEquals(
            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/Microsoft.Web/sites/myfunctionapp",
            firstItem.getTargetResourceId());
        // verify property "targetResourceConfigurations"
        TargetResourceConfigurations firstItemTargetResourceConfigurations
            = firstItem.getTargetResourceConfigurations();
        Assertions.assertNotNull(firstItemTargetResourceConfigurations);
        Assertions.assertEquals(ResourceKind.FUNCTIONS_FLEX_CONSUMPTION,
            firstItemTargetResourceConfigurations.getKind());
        // verify property "status"
        Assertions.assertEquals(TestProfileRunStatus.ACCEPTED, firstItem.getStatus());
        // verify property "startDateTime"
        Assertions.assertNotNull(firstItem.getStartDateTime());
        // verify property "endDateTime"
        Assertions.assertNotNull(firstItem.getEndDateTime());
        // verify property "durationInSeconds"
        Assertions.assertEquals(400L, firstItem.getDurationInSeconds());
        // verify property "testRunDetails"
        Assertions.assertNotNull(firstItem.getTestRunDetails());
        // verify property "createdDateTime"
        Assertions.assertNotNull(firstItem.getCreatedDateTime());
        // verify property "createdBy"
        Assertions.assertEquals("user@contoso.com", firstItem.getCreatedBy());
        // verify property "lastModifiedDateTime"
        Assertions.assertNotNull(firstItem.getLastModifiedDateTime());
        // verify property "lastModifiedBy"
        Assertions.assertEquals("user@contoso.com", firstItem.getLastModifiedBy());
    }
}

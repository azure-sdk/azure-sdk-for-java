// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.utils.MockTokenCredential;
import com.azure.core.util.Configuration;
import com.azure.developer.loadtesting.LoadTestAdministrationClient;
import com.azure.developer.loadtesting.LoadTestAdministrationClientBuilder;
import com.azure.developer.loadtesting.LoadTestRunClient;
import com.azure.developer.loadtesting.LoadTestRunClientBuilder;
import com.azure.identity.DefaultAzureCredentialBuilder;

class LoadTestAdministrationClientTestBase extends TestProxyTestBase {
    protected LoadTestAdministrationClient loadTestAdministrationClient;

    protected LoadTestRunClient loadTestRunClient;

    @Override
    protected void beforeTest() {
        LoadTestAdministrationClientBuilder loadTestAdministrationClientbuilder
            = new LoadTestAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            loadTestAdministrationClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            loadTestAdministrationClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            loadTestAdministrationClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        loadTestAdministrationClient = loadTestAdministrationClientbuilder.buildClient();

        LoadTestRunClientBuilder loadTestRunClientbuilder = new LoadTestRunClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            loadTestRunClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            loadTestRunClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            loadTestRunClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        loadTestRunClient = loadTestRunClientbuilder.buildClient();

    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.developer.loadtesting.models.AggregationType;
import com.azure.developer.loadtesting.models.MetricAvailability;
import com.azure.developer.loadtesting.models.MetricDefinition;
import com.azure.developer.loadtesting.models.MetricDefinitions;
import com.azure.developer.loadtesting.models.MetricUnit;
import com.azure.developer.loadtesting.models.NameAndDescription;
import com.azure.developer.loadtesting.models.TimeGrain;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ListTheMetricDefinitionsForALoadTestRunTests extends LoadTestAdministrationClientTestBase {
    @Test
    @Disabled
    public void testListTheMetricDefinitionsForALoadTestRunTests() {
        // method invocation
        MetricDefinitions response
            = loadTestRunClient.getMetricDefinitions("12316678-1234-1234-1234-122451189012", "LoadTestRunMetrics");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "value"
        List<MetricDefinition> responseValue = response.getValue();
        MetricDefinition responseValueFirstItem = responseValue.iterator().next();
        Assertions.assertNotNull(responseValueFirstItem);
        List<NameAndDescription> responseValueFirstItemDimensions = responseValueFirstItem.getDimensions();
        NameAndDescription responseValueFirstItemDimensionsFirstItem
            = responseValueFirstItemDimensions.iterator().next();
        Assertions.assertNotNull(responseValueFirstItemDimensionsFirstItem);
        Assertions.assertEquals("Sampler Name", responseValueFirstItemDimensionsFirstItem.getDescription());
        Assertions.assertEquals("SamplerName", responseValueFirstItemDimensionsFirstItem.getName());
        Assertions.assertEquals("No of concurrent virtual users", responseValueFirstItem.getDescription());
        Assertions.assertEquals("VirtualUsers", responseValueFirstItem.getName());
        Assertions.assertEquals("LoadTestRunMetrics", responseValueFirstItem.getNamespace());
        Assertions.assertEquals(AggregationType.TOTAL, responseValueFirstItem.getPrimaryAggregationType());
        List<String> responseValueFirstItemSupportedAggregationTypes
            = responseValueFirstItem.getSupportedAggregationTypes();
        Assertions.assertEquals("Total", responseValueFirstItemSupportedAggregationTypes.iterator().next());
        Assertions.assertEquals(MetricUnit.COUNT, responseValueFirstItem.getUnit());
        List<MetricAvailability> responseValueFirstItemMetricAvailabilities
            = responseValueFirstItem.getMetricAvailabilities();
        MetricAvailability responseValueFirstItemMetricAvailabilitiesFirstItem
            = responseValueFirstItemMetricAvailabilities.iterator().next();
        Assertions.assertNotNull(responseValueFirstItemMetricAvailabilitiesFirstItem);
        Assertions.assertEquals(TimeGrain.FIVE_SECONDS,
            responseValueFirstItemMetricAvailabilitiesFirstItem.getTimeGrain());
    }
}

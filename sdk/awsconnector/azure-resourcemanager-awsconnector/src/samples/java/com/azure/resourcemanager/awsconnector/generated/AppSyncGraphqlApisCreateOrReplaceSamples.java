// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AdditionalAuthenticationProvider;
import com.azure.resourcemanager.awsconnector.models.AppSyncGraphqlApiProperties;
import com.azure.resourcemanager.awsconnector.models.AuthenticationType;
import com.azure.resourcemanager.awsconnector.models.AuthenticationTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.AwsAppSyncGraphqlApiProperties;
import com.azure.resourcemanager.awsconnector.models.CognitoUserPoolConfig;
import com.azure.resourcemanager.awsconnector.models.DataSourceLevelMetricsBehavior;
import com.azure.resourcemanager.awsconnector.models.DataSourceLevelMetricsBehaviorEnumValue;
import com.azure.resourcemanager.awsconnector.models.DefaultAction;
import com.azure.resourcemanager.awsconnector.models.DefaultActionEnumValue;
import com.azure.resourcemanager.awsconnector.models.EnhancedMetricsConfig;
import com.azure.resourcemanager.awsconnector.models.FieldLogLevel;
import com.azure.resourcemanager.awsconnector.models.FieldLogLevelEnumValue;
import com.azure.resourcemanager.awsconnector.models.GraphQLApiIntrospectionConfig;
import com.azure.resourcemanager.awsconnector.models.GraphQLApiIntrospectionConfigEnumValue;
import com.azure.resourcemanager.awsconnector.models.GraphQLApiType;
import com.azure.resourcemanager.awsconnector.models.GraphQLApiTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.GraphQLApiVisibility;
import com.azure.resourcemanager.awsconnector.models.GraphQLApiVisibilityEnumValue;
import com.azure.resourcemanager.awsconnector.models.LambdaAuthorizerConfig;
import com.azure.resourcemanager.awsconnector.models.LogConfig;
import com.azure.resourcemanager.awsconnector.models.OpenIdConnectConfig;
import com.azure.resourcemanager.awsconnector.models.OperationLevelMetricsConfig;
import com.azure.resourcemanager.awsconnector.models.OperationLevelMetricsConfigEnumValue;
import com.azure.resourcemanager.awsconnector.models.ResolverLevelMetricsBehavior;
import com.azure.resourcemanager.awsconnector.models.ResolverLevelMetricsBehaviorEnumValue;
import com.azure.resourcemanager.awsconnector.models.UserPoolConfig;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for AppSyncGraphqlApis CreateOrReplace.
 */
public final class AppSyncGraphqlApisCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * AppSyncGraphqlApis_CreateOrReplace.json
     */
    /**
     * Sample code: AppSyncGraphqlApis_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        appSyncGraphqlApisCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.appSyncGraphqlApis()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("fgdkdvbltlygm")
            .withExistingResourceGroup("rgappSyncGraphqlApi")
            .withTags(mapOf("key1836", "fakeTokenPlaceholder"))
            .withProperties(
                new AppSyncGraphqlApiProperties()
                    .withAwsProperties(new AwsAppSyncGraphqlApiProperties()
                        .withAdditionalAuthenticationProviders(Arrays.asList(new AdditionalAuthenticationProvider()
                            .withAuthenticationType(new AuthenticationTypeEnumValue()
                                .withValue(AuthenticationType.AMAZON_COGNITO_USER_POOLS))
                            .withLambdaAuthorizerConfig(
                                new LambdaAuthorizerConfig().withAuthorizerResultTtlInSeconds(30)
                                    .withAuthorizerUri("hupypfpuanzvftlniinspu")
                                    .withIdentityValidationExpression("hspldtc"))
                            .withOpenIdConnectConfig(new OpenIdConnectConfig().withAuthTtl(22L)
                                .withClientId("luiqpcaoupuxlkhifmjmssaujivibq")
                                .withIatTtl(12L)
                                .withIssuer("gxglhkdfnvrrtsalksedpcukpk"))
                            .withUserPoolConfig(new CognitoUserPoolConfig().withAppIdClientRegex("qpfpcfsunn")
                                .withAwsRegion("nmpxe")
                                .withUserPoolId("jelygyotigqdtvomkxwllisaodzpme"))))
                        .withApiId("czvdzpkqmu")
                        .withApiType(new GraphQLApiTypeEnumValue().withValue(GraphQLApiType.GRAPHQL))
                        .withArn("oasogwqjupaovgjaimqwyvcevu")
                        .withAuthenticationType(
                            new AuthenticationTypeEnumValue().withValue(AuthenticationType.AMAZON_COGNITO_USER_POOLS))
                        .withDns(mapOf("key7870", "fakeTokenPlaceholder"))
                        .withEnhancedMetricsConfig(new EnhancedMetricsConfig()
                            .withDataSourceLevelMetricsBehavior(new DataSourceLevelMetricsBehaviorEnumValue()
                                .withValue(DataSourceLevelMetricsBehavior.FULL_REQUEST_DATA_SOURCE_METRICS))
                            .withOperationLevelMetricsConfig(new OperationLevelMetricsConfigEnumValue()
                                .withValue(OperationLevelMetricsConfig.DISABLED))
                            .withResolverLevelMetricsBehavior(new ResolverLevelMetricsBehaviorEnumValue()
                                .withValue(ResolverLevelMetricsBehavior.FULL_REQUEST_RESOLVER_METRICS)))
                        .withIntrospectionConfig(new GraphQLApiIntrospectionConfigEnumValue()
                            .withValue(GraphQLApiIntrospectionConfig.DISABLED))
                        .withLambdaAuthorizerConfig(new LambdaAuthorizerConfig().withAuthorizerResultTtlInSeconds(30)
                            .withAuthorizerUri("hupypfpuanzvftlniinspu")
                            .withIdentityValidationExpression("hspldtc"))
                        .withLogConfig(new LogConfig().withCloudWatchLogsRoleArn("gsfpxvghd")
                            .withExcludeVerboseContent(true)
                            .withFieldLogLevel(new FieldLogLevelEnumValue().withValue(FieldLogLevel.ALL)))
                        .withMergedApiExecutionRoleArn("ehtdxecdhgxhmtqhpneaqzgdtivz")
                        .withName("ahvfu")
                        .withOpenIdConnectConfig(new OpenIdConnectConfig().withAuthTtl(22L)
                            .withClientId("luiqpcaoupuxlkhifmjmssaujivibq")
                            .withIatTtl(12L)
                            .withIssuer("gxglhkdfnvrrtsalksedpcukpk"))
                        .withOwner("pdudimkqozuoczxvlgmj")
                        .withOwnerContact("qkvw")
                        .withQueryDepthLimit(14)
                        .withResolverCountLimit(15)
                        .withTags(mapOf("key7170", "fakeTokenPlaceholder"))
                        .withUris(mapOf("key6507", "fakeTokenPlaceholder"))
                        .withUserPoolConfig(new UserPoolConfig().withAppIdClientRegex("kjfgmmyyzmsywex")
                            .withAwsRegion("knaq")
                            .withDefaultAction(new DefaultActionEnumValue().withValue(DefaultAction.ALLOW))
                            .withUserPoolId("tbbntrreowxutvnasgmcdupsaxoooz"))
                        .withVisibility(new GraphQLApiVisibilityEnumValue().withValue(GraphQLApiVisibility.GLOBAL))
                        .withWafWebAclArn("fpy")
                        .withXrayEnabled(true))
                    .withPublicCloudConnectorsResourceId("ljxfphaevwpkqtymdowsbhw")
                    .withAwsAccountId("cbznxz")
                    .withArn("yozrofizgppbrqqingfk")
                    .withPublicCloudResourceName("xqnxjggrhseymoklvqpreiucveuev")
                    .withAwsSourceSchema("hldvwyk")
                    .withAwsRegion("ponyxnfudopabngrux")
                    .withAwsTags(mapOf("key8377", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

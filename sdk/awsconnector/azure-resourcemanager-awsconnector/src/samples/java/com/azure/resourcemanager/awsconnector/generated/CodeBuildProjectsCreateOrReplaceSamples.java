// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.ArtifactNamespace;
import com.azure.resourcemanager.awsconnector.models.ArtifactNamespaceEnumValue;
import com.azure.resourcemanager.awsconnector.models.ArtifactPackaging;
import com.azure.resourcemanager.awsconnector.models.ArtifactPackagingEnumValue;
import com.azure.resourcemanager.awsconnector.models.ArtifactsType;
import com.azure.resourcemanager.awsconnector.models.ArtifactsTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.AwsCodeBuildProjectProperties;
import com.azure.resourcemanager.awsconnector.models.BatchReportModeType;
import com.azure.resourcemanager.awsconnector.models.BatchReportModeTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.BatchRestrictions;
import com.azure.resourcemanager.awsconnector.models.BucketOwnerAccess;
import com.azure.resourcemanager.awsconnector.models.BucketOwnerAccessEnumValue;
import com.azure.resourcemanager.awsconnector.models.BuildStatusConfig;
import com.azure.resourcemanager.awsconnector.models.CacheMode;
import com.azure.resourcemanager.awsconnector.models.CacheType;
import com.azure.resourcemanager.awsconnector.models.CacheTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.CloudWatchLogsConfig;
import com.azure.resourcemanager.awsconnector.models.CodeBuildProjectProperties;
import com.azure.resourcemanager.awsconnector.models.ComputeType;
import com.azure.resourcemanager.awsconnector.models.ComputeTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.CredentialProviderType;
import com.azure.resourcemanager.awsconnector.models.CredentialProviderTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.EnvironmentType;
import com.azure.resourcemanager.awsconnector.models.EnvironmentTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.EnvironmentVariable;
import com.azure.resourcemanager.awsconnector.models.EnvironmentVariableType;
import com.azure.resourcemanager.awsconnector.models.EnvironmentVariableTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.FileSystemType;
import com.azure.resourcemanager.awsconnector.models.FileSystemTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.FilterGroup;
import com.azure.resourcemanager.awsconnector.models.GitSubmodulesConfig;
import com.azure.resourcemanager.awsconnector.models.ImagePullCredentialsType;
import com.azure.resourcemanager.awsconnector.models.ImagePullCredentialsTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.LogsConfig;
import com.azure.resourcemanager.awsconnector.models.LogsConfigStatusType;
import com.azure.resourcemanager.awsconnector.models.LogsConfigStatusTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.ProjectArtifacts;
import com.azure.resourcemanager.awsconnector.models.ProjectBadge;
import com.azure.resourcemanager.awsconnector.models.ProjectBuildBatchConfig;
import com.azure.resourcemanager.awsconnector.models.ProjectCache;
import com.azure.resourcemanager.awsconnector.models.ProjectEnvironment;
import com.azure.resourcemanager.awsconnector.models.ProjectFileSystemLocation;
import com.azure.resourcemanager.awsconnector.models.ProjectFleet;
import com.azure.resourcemanager.awsconnector.models.ProjectSource;
import com.azure.resourcemanager.awsconnector.models.ProjectSourceVersion;
import com.azure.resourcemanager.awsconnector.models.ProjectVisibilityType;
import com.azure.resourcemanager.awsconnector.models.ProjectVisibilityTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.RegistryCredential;
import com.azure.resourcemanager.awsconnector.models.S3LogsConfig;
import com.azure.resourcemanager.awsconnector.models.SourceAuth;
import com.azure.resourcemanager.awsconnector.models.SourceAuthType;
import com.azure.resourcemanager.awsconnector.models.SourceAuthTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.SourceType;
import com.azure.resourcemanager.awsconnector.models.SourceTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated7;
import com.azure.resourcemanager.awsconnector.models.VpcConfig;
import com.azure.resourcemanager.awsconnector.models.Webhook;
import com.azure.resourcemanager.awsconnector.models.WebhookBuildType;
import com.azure.resourcemanager.awsconnector.models.WebhookBuildTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.WebhookFilter;
import com.azure.resourcemanager.awsconnector.models.WebhookFilterType;
import com.azure.resourcemanager.awsconnector.models.WebhookFilterTypeEnumValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for CodeBuildProjects CreateOrReplace.
 */
public final class CodeBuildProjectsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * CodeBuildProjects_CreateOrReplace.json
     */
    /**
     * Sample code: CodeBuildProjects_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        codeBuildProjectsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.codeBuildProjects()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("fpjpnhlms")
            .withExistingResourceGroup("rgcodeBuildProject")
            .withTags(mapOf("key4761", "fakeTokenPlaceholder"))
            .withProperties(new CodeBuildProjectProperties()
                .withAwsProperties(new AwsCodeBuildProjectProperties().withArn("wwhfeljvmnwnqcgxusgnvoq")
                    .withArtifacts(new ProjectArtifacts()
                        .withArtifactIdentifier("hcfdqzwleorpe")
                        .withBucketOwnerAccess(new BucketOwnerAccessEnumValue().withValue(BucketOwnerAccess.FULL))
                        .withEncryptionDisabled(true)
                        .withLocation("zvhsfl")
                        .withName("dsqyinskfvabyktgjbszny")
                        .withNamespaceType(new ArtifactNamespaceEnumValue().withValue(ArtifactNamespace.BUILD_ID))
                        .withOverrideArtifactName(true)
                        .withPackaging(new ArtifactPackagingEnumValue().withValue(ArtifactPackaging.NONE))
                        .withPath("zbsfhzkoet")
                        .withType(new ArtifactsTypeEnumValue().withValue(ArtifactsType.CODEPIPELINE)))
                    .withBadge(new ProjectBadge().withBadgeEnabled(true).withBadgeRequestUrl("ulpdsdbgtwm"))
                    .withBuildBatchConfig(new ProjectBuildBatchConfig()
                        .withBatchReportMode(
                            new BatchReportModeTypeEnumValue().withValue(BatchReportModeType.REPORT_AGGREGATED_BATCH))
                        .withCombineArtifacts(true)
                        .withRestrictions(
                            new BatchRestrictions().withComputeTypesAllowed(Arrays.asList("ievoltoldfrhkpv"))
                                .withMaximumBuildsAllowed(15))
                        .withServiceRole("lceqjutffrykpuzjxvijbzpames")
                        .withTimeoutInMins(3))
                    .withCache(new ProjectCache().withLocation("wgmqyjzlxsazecszvdkfr")
                        .withModes(Arrays.asList(CacheMode.LOCAL_CUSTOM_CACHE))
                        .withType(new CacheTypeEnumValue().withValue(CacheType.LOCAL)))
                    .withConcurrentBuildLimit(19)
                    .withCreated(OffsetDateTime.parse("2024-10-08T03:48:48.570Z"))
                    .withDescription("adnfxoh")
                    .withEncryptionKey("fakeTokenPlaceholder")
                    .withEnvironment(
                        new ProjectEnvironment().withCertificate("olzbdlydjqzkzlflzxcdjjjv")
                            .withComputeType(new ComputeTypeEnumValue().withValue(ComputeType.BUILD_GENERAL1_2XLARGE))
                            .withEnvironmentVariables(
                                Arrays.asList(new EnvironmentVariable().withName("bmzlnmjzuxrxeemxfutykrlvemt")
                                    .withType(new EnvironmentVariableTypeEnumValue()
                                        .withValue(EnvironmentVariableType.PARAMETER_STORE))
                                    .withValue("eakfsmirkkwnizotyqqgmgjthn")))
                            .withFleet(new ProjectFleet().withFleetArn("brslcsjgupcpeistg"))
                            .withImage("kkmioknmuhxurahmnjg")
                            .withImagePullCredentialsType(
                                new ImagePullCredentialsTypeEnumValue().withValue(ImagePullCredentialsType.CODEBUILD))
                            .withPrivilegedMode(true)
                            .withRegistryCredential(new RegistryCredential().withCredential("fakeTokenPlaceholder")
                                .withCredentialProvider(new CredentialProviderTypeEnumValue()
                                    .withValue(CredentialProviderType.SECRETS_MANAGER)))
                            .withType(new EnvironmentTypeEnumValue().withValue(EnvironmentType.ARM_CONTAINER)))
                    .withFileSystemLocations(Arrays.asList(new ProjectFileSystemLocation().withIdentifier("tdquc")
                        .withLocation("yeaotrzuhjtdtbfrlpvmlmaoqyioin")
                        .withMountOptions("tocdlorjekugjotphpxuyebjj")
                        .withMountPoint("fctmorvlmplsmeqvmavw")
                        .withType(new FileSystemTypeEnumValue().withValue(FileSystemType.EFS))))
                    .withLastModified(OffsetDateTime.parse("2024-10-08T03:48:48.571Z"))
                    .withLogsConfig(
                        new LogsConfig()
                            .withCloudWatchLogs(new CloudWatchLogsConfig().withGroupName("t")
                                .withStatus(
                                    new LogsConfigStatusTypeEnumValue().withValue(LogsConfigStatusType.DISABLED))
                                .withStreamName("rrqzbaaicbiblat"))
                            .withS3Logs(new S3LogsConfig()
                                .withBucketOwnerAccess(
                                    new BucketOwnerAccessEnumValue().withValue(BucketOwnerAccess.FULL))
                                .withEncryptionDisabled(true)
                                .withLocation("zuepwokmlymlvsvzjawzxe")
                                .withStatus(
                                    new LogsConfigStatusTypeEnumValue().withValue(LogsConfigStatusType.DISABLED))))
                    .withName("budzhvktdvhxxy")
                    .withProjectVisibility(new ProjectVisibilityTypeEnumValue().withValue(
                        ProjectVisibilityType.PRIVATE))
                    .withPublicProjectAlias("vstmzamjxtasdipcehcuwvfef")
                    .withQueuedTimeoutInMinutes(30)
                    .withResourceAccessRole("st")
                    .withSecondaryArtifacts(Arrays.asList(new ProjectArtifacts().withArtifactIdentifier("hcfdqzwleorpe")
                        .withBucketOwnerAccess(new BucketOwnerAccessEnumValue().withValue(BucketOwnerAccess.FULL))
                        .withEncryptionDisabled(true)
                        .withLocation("zvhsfl")
                        .withName("dsqyinskfvabyktgjbszny")
                        .withNamespaceType(new ArtifactNamespaceEnumValue().withValue(ArtifactNamespace.BUILD_ID))
                        .withOverrideArtifactName(true)
                        .withPackaging(new ArtifactPackagingEnumValue().withValue(ArtifactPackaging.NONE))
                        .withPath("zbsfhzkoet")
                        .withType(new ArtifactsTypeEnumValue().withValue(ArtifactsType.CODEPIPELINE))))
                    .withSecondarySourceVersions(Arrays.asList(
                        new ProjectSourceVersion()
                            .withSourceIdentifier("kiyezlaophakaslamcsxpkzggoj")
                            .withSourceVersion("zy")))
                    .withSecondarySources(
                        Arrays
                            .asList(
                                new ProjectSource()
                                    .withAuth(
                                        new SourceAuth().withResource("oyfwquyzyjklbxlyjyddpmhmjgsgk")
                                            .withType(new SourceAuthTypeEnumValue()
                                                .withValue(SourceAuthType.CODECONNECTIONS)))
                                    .withBuildStatusConfig(
                                        new BuildStatusConfig().withContext("zoghbponrxfhugrjzdheibkada")
                                            .withTargetUrl("ooonrchy"))
                                    .withBuildspec("xxcoigvstisdhlfkfiblrgqhbtoqd")
                                    .withGitCloneDepth(9)
                                    .withGitSubmodulesConfig(new GitSubmodulesConfig().withFetchSubmodules(true))
                                    .withInsecureSsl(true)
                                    .withLocation("owijjqkiwwegfcrynqcypho")
                                    .withReportBuildStatus(true)
                                    .withSourceIdentifier("lnhelescdeif")
                                    .withType(new SourceTypeEnumValue().withValue(SourceType.BITBUCKET))))
                    .withServiceRole("pydzdifzkz")
                    .withSource(new ProjectSource()
                        .withAuth(new SourceAuth().withResource("oyfwquyzyjklbxlyjyddpmhmjgsgk")
                            .withType(new SourceAuthTypeEnumValue().withValue(SourceAuthType.CODECONNECTIONS)))
                        .withBuildStatusConfig(
                            new BuildStatusConfig().withContext("zoghbponrxfhugrjzdheibkada").withTargetUrl("ooonrchy"))
                        .withBuildspec("xxcoigvstisdhlfkfiblrgqhbtoqd")
                        .withGitCloneDepth(9)
                        .withGitSubmodulesConfig(new GitSubmodulesConfig().withFetchSubmodules(true))
                        .withInsecureSsl(true)
                        .withLocation("owijjqkiwwegfcrynqcypho")
                        .withReportBuildStatus(true)
                        .withSourceIdentifier("lnhelescdeif")
                        .withType(new SourceTypeEnumValue().withValue(SourceType.BITBUCKET)))
                    .withSourceVersion("idpngofzedxghp")
                    .withTags(Arrays
                        .asList(new TagAutoGenerated7().withKey("fakeTokenPlaceholder").withValue("iqwximmqwgsjlwdgv")))
                    .withTimeoutInMinutes(7)
                    .withVpcConfig(new VpcConfig()
                        .withSecurityGroupIds(Arrays.asList("gcsqntkatjbigzj"))
                        .withSubnets(Arrays.asList("vxxzlquh"))
                        .withVpcId("dhjvrtrqgdb"))
                    .withWebhook(
                        new Webhook().withBranchFilter("fpfnqs")
                            .withBuildType(new WebhookBuildTypeEnumValue().withValue(WebhookBuildType.BUILD))
                            .withFilterGroups(Arrays.asList(
                                new FilterGroup().withWebhookFilter(new WebhookFilter().withExcludeMatchedPattern(true)
                                    .withPattern("ozqghxeblvksllu")
                                    .withType(new WebhookFilterTypeEnumValue()
                                        .withValue(WebhookFilterType.ACTOR_ACCOUNT_ID)))))
                            .withLastModifiedSecret(OffsetDateTime.parse("2024-10-08T03:48:48.574Z"))
                            .withPayloadUrl("wzalmmzopccsfbgwhxjneakxazu")
                            .withSecret("fakeTokenPlaceholder")
                            .withUrl("lwkywiwhmmdrirvajnxo")))
                .withPublicCloudConnectorsResourceId("azzcclgcodhtl")
                .withAwsAccountId("caiac")
                .withArn("ae")
                .withPublicCloudResourceName("tzylnhhjwtzngucgrkvklav")
                .withAwsSourceSchema("ujnztglujzqehsvvd")
                .withAwsRegion("rakioiwqsjhpjqekyjft")
                .withAwsTags(mapOf("key9822", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

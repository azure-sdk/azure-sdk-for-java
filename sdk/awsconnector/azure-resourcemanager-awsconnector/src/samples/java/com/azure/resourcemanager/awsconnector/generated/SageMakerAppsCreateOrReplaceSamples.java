// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AppType;
import com.azure.resourcemanager.awsconnector.models.AwsSageMakerAppProperties;
import com.azure.resourcemanager.awsconnector.models.ResourceSpec;
import com.azure.resourcemanager.awsconnector.models.ResourceSpecInstanceType;
import com.azure.resourcemanager.awsconnector.models.SageMakerAppProperties;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated51;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for SageMakerApps CreateOrReplace.
 */
public final class SageMakerAppsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * SageMakerApps_CreateOrReplace.json
     */
    /**
     * Sample code: SageMakerApps_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        sageMakerAppsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.sageMakerApps()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("wnlhgbkbelgwiwhnismoau")
            .withExistingResourceGroup("rgsageMakerApp")
            .withTags(mapOf("key3532", "fakeTokenPlaceholder"))
            .withProperties(new SageMakerAppProperties()
                .withAwsProperties(new AwsSageMakerAppProperties().withAppArn("gher")
                    .withAppName("evzkcyynebo")
                    .withAppType(AppType.CANVAS)
                    .withDomainId("dkqxukvimzaw")
                    .withResourceSpec(new ResourceSpec().withInstanceType(ResourceSpecInstanceType.ML_C5_12XLARGE)
                        .withSageMakerImageArn("pgukixbhpruaz")
                        .withSageMakerImageVersionArn("juqpu"))
                    .withTags(
                        Arrays.asList(new TagAutoGenerated51().withKey("fakeTokenPlaceholder").withValue("oiirwwaoqv")))
                    .withUserProfileName("hqjtakkgaetxvrmswgdzfbnna"))
                .withPublicCloudConnectorsResourceId("vaphifjjavrvy")
                .withAwsAccountId("lgqcehdauhqdqezactw")
                .withArn("jlzaozimvtjn")
                .withPublicCloudResourceName("ptlnykuziapscweekj")
                .withAwsSourceSchema("xshoewjusdxuy")
                .withAwsRegion("tnogtlqasqlenkt")
                .withAwsTags(mapOf("key2126", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

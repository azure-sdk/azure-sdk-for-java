// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AttributeDefinition;
import com.azure.resourcemanager.awsconnector.models.AwsDynamoDBTableProperties;
import com.azure.resourcemanager.awsconnector.models.ContributorInsightsSpecification;
import com.azure.resourcemanager.awsconnector.models.Csv;
import com.azure.resourcemanager.awsconnector.models.DynamoDBTableProperties;
import com.azure.resourcemanager.awsconnector.models.GlobalSecondaryIndex;
import com.azure.resourcemanager.awsconnector.models.ImportSourceSpecification;
import com.azure.resourcemanager.awsconnector.models.InputFormatOptions;
import com.azure.resourcemanager.awsconnector.models.KeySchema;
import com.azure.resourcemanager.awsconnector.models.KinesisStreamSpecification;
import com.azure.resourcemanager.awsconnector.models.KinesisStreamSpecificationApproximateCreationDateTimePrecision;
import com.azure.resourcemanager.awsconnector.models.LocalSecondaryIndex;
import com.azure.resourcemanager.awsconnector.models.PointInTimeRecoverySpecification;
import com.azure.resourcemanager.awsconnector.models.Projection;
import com.azure.resourcemanager.awsconnector.models.ProvisionedThroughput;
import com.azure.resourcemanager.awsconnector.models.ResourcePolicy;
import com.azure.resourcemanager.awsconnector.models.S3BucketSource;
import com.azure.resourcemanager.awsconnector.models.SseSpecification;
import com.azure.resourcemanager.awsconnector.models.StreamSpecification;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated8;
import com.azure.resourcemanager.awsconnector.models.TimeToLiveSpecification;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for DynamoDbTables CreateOrReplace.
 */
public final class DynamoDbTablesCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * DynamoDbTables_CreateOrReplace.json
     */
    /**
     * Sample code: DynamoDbTables_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        dynamoDbTablesCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.dynamoDbTables()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("fmkjilswdjyisfuwxuj")
            .withExistingResourceGroup("rgdynamoDBTable")
            .withTags(mapOf("key2178", "fakeTokenPlaceholder"))
            .withProperties(new DynamoDBTableProperties().withAwsProperties(new AwsDynamoDBTableProperties()
                .withArn("qbvqgymuxfzuwybdspdhcuvfouwnet")
                .withAttributeDefinitions(Arrays.asList(new AttributeDefinition().withAttributeName("caryhpofnkqtoc")
                    .withAttributeType("bcmjgzaljcemcrswr")))
                .withBillingMode("pwxrsjcybdcidejuhvrckvxyxad")
                .withContributorInsightsSpecification(new ContributorInsightsSpecification().withEnabled(true))
                .withDeletionProtectionEnabled(true)
                .withGlobalSecondaryIndexes(Arrays.asList(new GlobalSecondaryIndex()
                    .withContributorInsightsSpecification(new ContributorInsightsSpecification().withEnabled(true))
                    .withIndexName("uqlzacnvsvayrvirrwwttb")
                    .withKeySchema(Arrays.asList(
                        new KeySchema().withAttributeName("wisgqkyoouaxivtrtay").withKeyType("fakeTokenPlaceholder")))
                    .withProjection(new Projection().withNonKeyAttributes(Arrays.asList("loqmvohtjsscueegam"))
                        .withProjectionType("atbzepkydpgudoaqi"))
                    .withProvisionedThroughput(
                        new ProvisionedThroughput().withReadCapacityUnits(10).withWriteCapacityUnits(28))))
                .withImportSourceSpecification(
                    new ImportSourceSpecification().withInputCompressionType("bjswmnwxleqmcth")
                        .withInputFormat("grnhhysgejvbnecrqoynjomz")
                        .withInputFormatOptions(
                            new InputFormatOptions().withCsv(new Csv().withDelimiter("qzowvvpwwhptthlgvrtnpyjszetrt")
                                .withHeaderList(Arrays.asList("gminuylhgebpjx"))))
                        .withS3BucketSource(new S3BucketSource().withS3Bucket("exulhkspgmo")
                            .withS3BucketOwner("pyawhaxbwqhgarz")
                            .withS3KeyPrefix("fakeTokenPlaceholder")))
                .withKeySchema(Arrays.asList(
                    new KeySchema().withAttributeName("wisgqkyoouaxivtrtay").withKeyType("fakeTokenPlaceholder")))
                .withKinesisStreamSpecification(new KinesisStreamSpecification()
                    .withApproximateCreationDateTimePrecision(
                        KinesisStreamSpecificationApproximateCreationDateTimePrecision.MICROSECOND)
                    .withStreamArn("qldltl"))
                .withLocalSecondaryIndexes(Arrays.asList(new LocalSecondaryIndex().withIndexName("gintyosxvkjqpe")
                    .withKeySchema(Arrays.asList(
                        new KeySchema().withAttributeName("wisgqkyoouaxivtrtay").withKeyType("fakeTokenPlaceholder")))
                    .withProjection(new Projection().withNonKeyAttributes(Arrays.asList("loqmvohtjsscueegam"))
                        .withProjectionType("atbzepkydpgudoaqi"))))
                .withPointInTimeRecoverySpecification(
                    new PointInTimeRecoverySpecification().withPointInTimeRecoveryEnabled(true))
                .withProvisionedThroughput(
                    new ProvisionedThroughput().withReadCapacityUnits(10).withWriteCapacityUnits(28))
                .withResourcePolicy(new ResourcePolicy())
                .withSseSpecification(new SseSpecification().withKmsMasterKeyId("fakeTokenPlaceholder")
                    .withSseEnabled(true)
                    .withSseType("osjalywculjbrystezvjojxe"))
                .withStreamArn("xvkrzs")
                .withStreamSpecification(
                    new StreamSpecification().withResourcePolicy(new ResourcePolicy()).withStreamViewType("wemod"))
                .withTableClass("tmbfrfbppwhjpm")
                .withTableName("mqvlcdboopn")
                .withTags(Arrays.asList(new TagAutoGenerated8().withKey("fakeTokenPlaceholder").withValue("dkgweupnz")))
                .withTimeToLiveSpecification(
                    new TimeToLiveSpecification().withAttributeName("sxbfejubturdtyusqywguqni").withEnabled(true)))
                .withPublicCloudConnectorsResourceId("nugnoqcknmrrminwvfvloqsporjd")
                .withAwsAccountId("dejqcxb")
                .withArn("gimtbcfiznraniycjyalnwrfstm")
                .withPublicCloudResourceName("lkbwyvnzooydbnembmykhmw")
                .withAwsSourceSchema("sqkkuxwamzevkp")
                .withAwsRegion("rdzrhtbydhmaxzuwe")
                .withAwsTags(mapOf("key3791", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

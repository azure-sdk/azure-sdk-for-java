// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsMacieAllowListProperties;
import com.azure.resourcemanager.awsconnector.models.Criteria;
import com.azure.resourcemanager.awsconnector.models.MacieAllowListProperties;
import com.azure.resourcemanager.awsconnector.models.S3WordsList;
import com.azure.resourcemanager.awsconnector.models.Status;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated40;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for MacieAllowLists CreateOrReplace.
 */
public final class MacieAllowListsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * MacieAllowLists_CreateOrReplace.json
     */
    /**
     * Sample code: MacieAllowLists_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        macieAllowListsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.macieAllowLists()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("ljfzlbopfuubipqzi")
            .withExistingResourceGroup("rgmacieAllowList")
            .withTags(mapOf("key2466", "fakeTokenPlaceholder"))
            .withProperties(
                new MacieAllowListProperties()
                    .withAwsProperties(new AwsMacieAllowListProperties().withArn("xdvleyfipecptdivylwygmlsaua")
                        .withCriteria(new Criteria().withRegex("lixefi")
                            .withS3WordsList(new S3WordsList().withBucketName("nfztmnzebbxtnmqmrmyqnuho")
                                .withObjectKey("fakeTokenPlaceholder")))
                        .withDescription("wvwzsjgqyvyjbb")
                        .withId("ssesuxsvbo")
                        .withName("nkimocnjypmzr")
                        .withStatus(Status.OK)
                        .withTags(Arrays
                            .asList(new TagAutoGenerated40().withKey("fakeTokenPlaceholder").withValue("hipfzph"))))
                    .withPublicCloudConnectorsResourceId("rqoahjiblmrymixvgegzwfqdq")
                    .withAwsAccountId("jf")
                    .withArn("iuotvbrnfqcexaumxdelcobenu")
                    .withPublicCloudResourceName("ggubisvuvunhxrj")
                    .withAwsSourceSchema("vviqkggctwa")
                    .withAwsRegion("x")
                    .withAwsTags(mapOf("key6335", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

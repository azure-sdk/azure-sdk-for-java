// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.Action;
import com.azure.resourcemanager.awsconnector.models.ActionConditionModelProperties;
import com.azure.resourcemanager.awsconnector.models.AwsWafv2LoggingConfigurationProperties;
import com.azure.resourcemanager.awsconnector.models.Condition;
import com.azure.resourcemanager.awsconnector.models.DefaultBehavior;
import com.azure.resourcemanager.awsconnector.models.FieldToMatch;
import com.azure.resourcemanager.awsconnector.models.FilterAutoGenerated;
import com.azure.resourcemanager.awsconnector.models.FilterBehavior;
import com.azure.resourcemanager.awsconnector.models.FilterRequirement;
import com.azure.resourcemanager.awsconnector.models.LabelNameConditionModelProperties;
import com.azure.resourcemanager.awsconnector.models.LoggingFilterModelProperties;
import com.azure.resourcemanager.awsconnector.models.SingleHeaderModelProperties;
import com.azure.resourcemanager.awsconnector.models.Wafv2LoggingConfigurationProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Wafv2LoggingConfigurations CreateOrReplace.
 */
public final class Wafv2LoggingConfigurationsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * Wafv2LoggingConfigurations_CreateOrReplace.json
     */
    /**
     * Sample code: Wafv2LoggingConfigurations_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        wafv2LoggingConfigurationsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.wafv2LoggingConfigurations()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("miqjaa")
            .withExistingResourceGroup("rgwafv2LoggingConfiguration")
            .withTags(mapOf("key643", "fakeTokenPlaceholder"))
            .withProperties(
                new Wafv2LoggingConfigurationProperties()
                    .withAwsProperties(new AwsWafv2LoggingConfigurationProperties()
                        .withLogDestinationConfigs(Arrays.asList("lyxpldjogdqpffwthdto"))
                        .withLoggingFilter(new LoggingFilterModelProperties().withDefaultBehavior(DefaultBehavior.DROP)
                            .withFilters(Arrays.asList(new FilterAutoGenerated().withBehavior(FilterBehavior.DROP)
                                .withConditions(Arrays.asList(new Condition()
                                    .withActionCondition(new ActionConditionModelProperties().withAction(Action.ALLOW))
                                    .withLabelNameCondition(new LabelNameConditionModelProperties()
                                        .withLabelName("oypkvstyighnjavknhfon"))))
                                .withRequirement(FilterRequirement.MEETS_ALL))))
                        .withManagedByFirewallManager(true)
                        .withRedactedFields(Arrays.asList(
                            new FieldToMatch().withSingleHeader(new SingleHeaderModelProperties().withName("bfqodp"))))
                        .withResourceArn("bnozeamipjgc"))
                    .withPublicCloudConnectorsResourceId("towziecfnbhswtodyqkkqrtatogbl")
                    .withAwsAccountId("opcrasgtswrifmkonwy")
                    .withArn("vvamx")
                    .withPublicCloudResourceName("eniprewwy")
                    .withAwsSourceSchema("ywgazosjmcwothayguih")
                    .withAwsRegion("kkwxoqqqiadksrmfpvopq")
                    .withAwsTags(mapOf("key5392", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

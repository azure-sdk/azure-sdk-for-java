// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsElasticBeanstalkEnvironmentProperties;
import com.azure.resourcemanager.awsconnector.models.ElasticBeanstalkEnvironmentProperties;
import com.azure.resourcemanager.awsconnector.models.OptionSetting;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated28;
import com.azure.resourcemanager.awsconnector.models.TierAutoGenerated;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for ElasticBeanstalkEnvironments CreateOrReplace.
 */
public final class ElasticBeanstalkEnvironmentsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * ElasticBeanstalkEnvironments_CreateOrReplace.json
     */
    /**
     * Sample code: ElasticBeanstalkEnvironments_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void elasticBeanstalkEnvironmentsCreateOrReplace(
        com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.elasticBeanstalkEnvironments()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("rcicwrhnehybtulvvctkoqfjwtknlq")
            .withExistingResourceGroup("rgelasticBeanstalkEnvironment")
            .withTags(mapOf("key2096", "fakeTokenPlaceholder"))
            .withProperties(new ElasticBeanstalkEnvironmentProperties()
                .withAwsProperties(
                    new AwsElasticBeanstalkEnvironmentProperties().withApplicationName("zymlvasjtynhgbrykr")
                        .withCnamePrefix("evct")
                        .withDescription("uofhhpwsesygrtmyfvurdgtuncytpq")
                        .withEndpointUrl("thvydn")
                        .withEnvironmentName("kpogmhzunuicnzwhvcwybzmj")
                        .withOperationsRole("awulopnqdubztsjuoqwcebjgf")
                        .withOptionSettings(Arrays.asList(new OptionSetting().withNamespace("fvkbdiiopsoi")
                            .withOptionName("nmgnqhutdmmirjbbbhdrgba")
                            .withResourceName("qobeconagmalvwfyfrnx")
                            .withValue("ucdijfyhnuwhsuqo")))
                        .withPlatformArn("ectglmsyrgcycywivrpuxvm")
                        .withSolutionStackName("gctjcbflipsc")
                        .withTags(Arrays.asList(new TagAutoGenerated28().withKey("fakeTokenPlaceholder")
                            .withValue("hhfcrfaprtppmnzutomhlsnyoxalm")))
                        .withTemplateName("fnmdsebgrdkpatpiic")
                        .withTier(new TierAutoGenerated().withName("gxxmgofbfkkvxbrrxxuhnpqortbs")
                            .withType("qxjdncodnwucwrbgx")
                            .withVersion("viernervectbejorfdi"))
                        .withVersionLabel("xkovoldnwteogliidadchizalspob"))
                .withPublicCloudConnectorsResourceId("ms")
                .withAwsAccountId("ckcntjjdjmmpwsiaecavfwo")
                .withArn("zmjeppob")
                .withPublicCloudResourceName("dmmydqwtpsruhsd")
                .withAwsSourceSchema("jkxtmyhfrvbuoheuscaxhmlm")
                .withAwsRegion("mvc")
                .withAwsTags(mapOf("key2939", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

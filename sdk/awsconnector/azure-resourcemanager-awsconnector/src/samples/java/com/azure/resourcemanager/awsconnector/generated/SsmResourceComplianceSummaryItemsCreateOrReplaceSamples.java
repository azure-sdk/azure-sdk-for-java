// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsSsmResourceComplianceSummaryItemProperties;
import com.azure.resourcemanager.awsconnector.models.ComplianceExecutionSummary;
import com.azure.resourcemanager.awsconnector.models.ComplianceSeverity;
import com.azure.resourcemanager.awsconnector.models.ComplianceSeverityEnumValue;
import com.azure.resourcemanager.awsconnector.models.ComplianceStatus;
import com.azure.resourcemanager.awsconnector.models.ComplianceStatusEnumValue;
import com.azure.resourcemanager.awsconnector.models.CompliantSummary;
import com.azure.resourcemanager.awsconnector.models.NonCompliantSummary;
import com.azure.resourcemanager.awsconnector.models.SeveritySummary;
import com.azure.resourcemanager.awsconnector.models.SsmResourceComplianceSummaryItemProperties;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for SsmResourceComplianceSummaryItems CreateOrReplace.
 */
public final class SsmResourceComplianceSummaryItemsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * SsmResourceComplianceSummaryItems_CreateOrReplace.json
     */
    /**
     * Sample code: SsmResourceComplianceSummaryItems_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void ssmResourceComplianceSummaryItemsCreateOrReplace(
        com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.ssmResourceComplianceSummaryItems()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("kr")
            .withExistingResourceGroup("rgssmResourceComplianceSummaryItem")
            .withTags(mapOf("key3147", "fakeTokenPlaceholder"))
            .withProperties(new SsmResourceComplianceSummaryItemProperties()
                .withAwsProperties(new AwsSsmResourceComplianceSummaryItemProperties().withComplianceType("fblmjhswva")
                    .withCompliantSummary(new CompliantSummary().withCompliantCount(2)
                        .withSeveritySummary(new SeveritySummary().withCriticalCount(7)
                            .withHighCount(18)
                            .withInformationalCount(17)
                            .withLowCount(19)
                            .withMediumCount(20)
                            .withUnspecifiedCount(11)))
                    .withExecutionSummary(new ComplianceExecutionSummary().withExecutionId("ngwakxvtdysew")
                        .withExecutionTime(OffsetDateTime.parse("2024-10-08T03:48:53.913Z"))
                        .withExecutionType("wjneewwqlrtdntdsot"))
                    .withNonCompliantSummary(new NonCompliantSummary().withNonCompliantCount(18)
                        .withSeveritySummary(new SeveritySummary().withCriticalCount(7)
                            .withHighCount(18)
                            .withInformationalCount(17)
                            .withLowCount(19)
                            .withMediumCount(20)
                            .withUnspecifiedCount(11)))
                    .withOverallSeverity(new ComplianceSeverityEnumValue().withValue(ComplianceSeverity.CRITICAL))
                    .withResourceId("muhsukivzcqvnlxiyrudvdymmii")
                    .withResourceType("rphjdvzvwasngsqoozoivduj")
                    .withStatus(new ComplianceStatusEnumValue().withValue(ComplianceStatus.COMPLIANT)))
                .withPublicCloudConnectorsResourceId("lghqnauuu")
                .withAwsAccountId("taqkptjbkqarwksdmfumdyi")
                .withArn("s")
                .withPublicCloudResourceName("qvohsbyuajd")
                .withAwsSourceSchema("ppxlpfsm")
                .withAwsRegion("hkemdhobdaxfwcvdjohvqtwpmjezu")
                .withAwsTags(mapOf("key3567", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

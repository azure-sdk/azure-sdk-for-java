// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AliasTarget;
import com.azure.resourcemanager.awsconnector.models.AwsRoute53ResourceRecordSetProperties;
import com.azure.resourcemanager.awsconnector.models.CidrRoutingConfig;
import com.azure.resourcemanager.awsconnector.models.Coordinates;
import com.azure.resourcemanager.awsconnector.models.GeoLocation;
import com.azure.resourcemanager.awsconnector.models.GeoProximityLocation;
import com.azure.resourcemanager.awsconnector.models.RRType;
import com.azure.resourcemanager.awsconnector.models.RRTypeEnumValue;
import com.azure.resourcemanager.awsconnector.models.ResourceRecord;
import com.azure.resourcemanager.awsconnector.models.ResourceRecordSetFailover;
import com.azure.resourcemanager.awsconnector.models.ResourceRecordSetFailoverEnumValue;
import com.azure.resourcemanager.awsconnector.models.ResourceRecordSetRegion;
import com.azure.resourcemanager.awsconnector.models.ResourceRecordSetRegionEnumValue;
import com.azure.resourcemanager.awsconnector.models.Route53ResourceRecordSetProperties;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Route53ResourceRecordSets CreateOrReplace.
 */
public final class Route53ResourceRecordSetsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * Route53ResourceRecordSets_CreateOrReplace.json
     */
    /**
     * Sample code: Route53ResourceRecordSets_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        route53ResourceRecordSetsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.route53ResourceRecordSets()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("fjdvlwthtamvmempnqmew")
            .withExistingResourceGroup("rgroute53ResourceRecordSet")
            .withTags(mapOf("key3468", "fakeTokenPlaceholder"))
            .withProperties(new Route53ResourceRecordSetProperties()
                .withAwsProperties(new AwsRoute53ResourceRecordSetProperties()
                    .withAliasTarget(new AliasTarget().withDnsName("waeiyiiaifbfgjkifiehgpvdssxp")
                        .withEvaluateTargetHealth(true)
                        .withHostedZoneId("hyjpvho"))
                    .withCidrRoutingConfig(
                        new CidrRoutingConfig().withCollectionId("yzvizqbgbmivdawr").withLocationName("ajghwvabvx"))
                    .withFailover(new ResourceRecordSetFailoverEnumValue().withValue(ResourceRecordSetFailover.PRIMARY))
                    .withGeoLocation(new GeoLocation().withContinentCode("fakeTokenPlaceholder")
                        .withCountryCode("fakeTokenPlaceholder")
                        .withSubdivisionCode("fakeTokenPlaceholder"))
                    .withGeoProximityLocation(new GeoProximityLocation().withAwsRegion("ughqvzy")
                        .withBias(15)
                        .withCoordinates(new Coordinates().withLatitude("eijexao").withLongitude("krewjxmtnbo"))
                        .withLocalZoneGroup("ksejwbcwmouldiasoybmm"))
                    .withHealthCheckId("tz")
                    .withMultiValueAnswer(true)
                    .withName("tmjfllnntbaiyvbzzfivmhgyj")
                    .withRegion(new ResourceRecordSetRegionEnumValue().withValue(ResourceRecordSetRegion.AF_SOUTH_1))
                    .withResourceRecords(Arrays.asList(new ResourceRecord().withValue("joiqyrlrpntv")))
                    .withSetIdentifier("rmgriiqkzi")
                    .withTtl(18L)
                    .withTrafficPolicyInstanceId("nttbthvurnpsjgshknlxpamzymcgno")
                    .withType(new RRTypeEnumValue().withValue(RRType.A))
                    .withWeight(16L))
                .withPublicCloudConnectorsResourceId("xglniymkrzvonhdikhhxue")
                .withAwsAccountId("ktpknwetzcdkadwzokqsphnw")
                .withArn("bvuvtjvkmzr")
                .withPublicCloudResourceName("xctgrwojlyvrzlx")
                .withAwsSourceSchema("w")
                .withAwsRegion("bccacstjducrajieglqbivvq")
                .withAwsTags(mapOf("key1343", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

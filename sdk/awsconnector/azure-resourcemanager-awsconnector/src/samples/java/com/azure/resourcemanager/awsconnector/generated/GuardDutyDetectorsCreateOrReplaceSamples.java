// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsGuardDutyDetectorProperties;
import com.azure.resourcemanager.awsconnector.models.CfnDataSourceConfigurations;
import com.azure.resourcemanager.awsconnector.models.CfnFeatureAdditionalConfiguration;
import com.azure.resourcemanager.awsconnector.models.CfnFeatureConfiguration;
import com.azure.resourcemanager.awsconnector.models.CfnFeatureConfigurationStatus;
import com.azure.resourcemanager.awsconnector.models.CfnKubernetesAuditLogsConfiguration;
import com.azure.resourcemanager.awsconnector.models.CfnKubernetesConfiguration;
import com.azure.resourcemanager.awsconnector.models.CfnMalwareProtectionConfiguration;
import com.azure.resourcemanager.awsconnector.models.CfnScanEc2InstanceWithFindingsConfiguration;
import com.azure.resourcemanager.awsconnector.models.Cfns3LogsConfiguration;
import com.azure.resourcemanager.awsconnector.models.GuardDutyDetectorProperties;
import com.azure.resourcemanager.awsconnector.models.TagItem;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for GuardDutyDetectors CreateOrReplace.
 */
public final class GuardDutyDetectorsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * GuardDutyDetectors_CreateOrReplace.json
     */
    /**
     * Sample code: GuardDutyDetectors_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        guardDutyDetectorsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.guardDutyDetectors()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("sxpvpkjhhmcssseznufvqer")
            .withExistingResourceGroup("rgguardDutyDetector")
            .withTags(mapOf("key3628", "fakeTokenPlaceholder"))
            .withProperties(new GuardDutyDetectorProperties()
                .withAwsProperties(new AwsGuardDutyDetectorProperties()
                    .withDataSources(new CfnDataSourceConfigurations()
                        .withKubernetes(new CfnKubernetesConfiguration()
                            .withAuditLogs(new CfnKubernetesAuditLogsConfiguration().withEnable(true)))
                        .withMalwareProtection(new CfnMalwareProtectionConfiguration().withScanEc2InstanceWithFindings(
                            new CfnScanEc2InstanceWithFindingsConfiguration().withEbsVolumes(true)))
                        .withS3Logs(new Cfns3LogsConfiguration().withEnable(true)))
                    .withEnable(true)
                    .withFeatures(Arrays.asList(new CfnFeatureConfiguration()
                        .withAdditionalConfiguration(
                            Arrays.asList(new CfnFeatureAdditionalConfiguration().withName("lkkifsmqcaujhderxjzcmezjh")
                                .withStatus("wbjikrlaxrtwpwiexknat")))
                        .withName("aoocmexbklfmzmglxopv")
                        .withStatus(CfnFeatureConfigurationStatus.DISABLED)))
                    .withFindingPublishingFrequency("ed")
                    .withId("vakfpotktucclwwqxkczvzrw")
                    .withTags(Arrays.asList(new TagItem().withKey("fakeTokenPlaceholder").withValue("edlendjmyszkw"))))
                .withPublicCloudConnectorsResourceId("infmmygcbbjb")
                .withAwsAccountId("lgyellrapjphgbfhni")
                .withArn("bdql")
                .withPublicCloudResourceName("hkdypyaxoeszbx")
                .withAwsSourceSchema("coaitkvmjezenllwmaouhnwfmjjbxa")
                .withAwsRegion("wtiiifsewygmgbdcebhl")
                .withAwsTags(mapOf("key6130", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AcceleratorCountRequest;
import com.azure.resourcemanager.awsconnector.models.AcceleratorTotalMemoryMiBRequest;
import com.azure.resourcemanager.awsconnector.models.AutoScalingGroupProperties;
import com.azure.resourcemanager.awsconnector.models.AwsAutoScalingGroupProperties;
import com.azure.resourcemanager.awsconnector.models.BaselineEbsBandwidthMbpsRequest;
import com.azure.resourcemanager.awsconnector.models.InstanceMaintenancePolicy;
import com.azure.resourcemanager.awsconnector.models.InstanceRequirements;
import com.azure.resourcemanager.awsconnector.models.InstancesDistribution;
import com.azure.resourcemanager.awsconnector.models.LaunchTemplate;
import com.azure.resourcemanager.awsconnector.models.LaunchTemplateOverrides;
import com.azure.resourcemanager.awsconnector.models.LaunchTemplateSpecification;
import com.azure.resourcemanager.awsconnector.models.LifecycleHookSpecification;
import com.azure.resourcemanager.awsconnector.models.MemoryGiBPerVCpuRequest;
import com.azure.resourcemanager.awsconnector.models.MemoryMiBRequest;
import com.azure.resourcemanager.awsconnector.models.MetricsCollection;
import com.azure.resourcemanager.awsconnector.models.MixedInstancesPolicy;
import com.azure.resourcemanager.awsconnector.models.NetworkBandwidthGbpsRequest;
import com.azure.resourcemanager.awsconnector.models.NetworkInterfaceCountRequest;
import com.azure.resourcemanager.awsconnector.models.NotificationConfiguration;
import com.azure.resourcemanager.awsconnector.models.TagProperty;
import com.azure.resourcemanager.awsconnector.models.TotalLocalStorageGBRequest;
import com.azure.resourcemanager.awsconnector.models.VCpuCountRequest;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for AutoScalingAutoScalingGroups CreateOrReplace.
 */
public final class AutoScalingAutoScalingGroupsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * AutoScalingAutoScalingGroups_CreateOrReplace.json
     */
    /**
     * Sample code: AutoScalingAutoScalingGroups_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void autoScalingAutoScalingGroupsCreateOrReplace(
        com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.autoScalingAutoScalingGroups()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("vfitxfllzgknmbaqgpsv")
            .withExistingResourceGroup("rgautoScalingAutoScalingGroup")
            .withTags(mapOf("key2337", "fakeTokenPlaceholder"))
            .withProperties(new AutoScalingGroupProperties()
                .withAwsProperties(
                    new AwsAutoScalingGroupProperties().withAutoScalingGroupName("zvp")
                        .withAvailabilityZones(Arrays.asList("bvcnltgekeqrzklsnfieubhugr"))
                        .withCapacityRebalance(true)
                        .withContext("dnmovg")
                        .withCooldown("r")
                        .withDefaultInstanceWarmup(24)
                        .withDesiredCapacity("xtu")
                        .withDesiredCapacityType("wncmimbdveox")
                        .withHealthCheckGracePeriod(9)
                        .withHealthCheckType("ustkoarefpvnhxrtqua")
                        .withInstanceId("noghdbfliygsadtjosovasxq")
                        .withInstanceMaintenancePolicy(
                            new InstanceMaintenancePolicy().withMaxHealthyPercentage(23).withMinHealthyPercentage(6))
                        .withLaunchConfigurationName("rgadwyrtzaxbfkbsbjaygujtc")
                        .withLaunchTemplate(
                            new LaunchTemplateSpecification().withLaunchTemplateId("zpcgiqsftmwjzwqifodopjuvfoxed")
                                .withLaunchTemplateName("jq")
                                .withVersion("kdlpart"))
                        .withLifecycleHookSpecificationList(
                            Arrays.asList(new LifecycleHookSpecification().withDefaultResult("qbeojpqbpnhst")
                                .withHeartbeatTimeout(14)
                                .withLifecycleHookName("xeqfmdmthyzrdxjbmdkyy")
                                .withLifecycleTransition("xsufodhykhlutvc")
                                .withNotificationMetadata("bknbkafxdozjlnprrlkrqstgwchxl")
                                .withNotificationTargetArn("dkeqhlwuifyfamkufdryfiybxnle")
                                .withRoleArn("bhenujqtabiiryjgl")))
                        .withLoadBalancerNames(Arrays.asList("qsgaefmtltksmmwswpdfmnlwvovi"))
                        .withMaxInstanceLifetime(25)
                        .withMaxSize("vqxfpkdyusfijwc")
                        .withMetricsCollection(Arrays.asList(new MetricsCollection().withGranularity("ygxetadl")
                            .withMetrics(Arrays.asList("hwukwnkctznjelut"))))
                        .withMinSize("rfdwflldttnzph")
                        .withMixedInstancesPolicy(
                            new MixedInstancesPolicy()
                                .withInstancesDistribution(
                                    new InstancesDistribution().withOnDemandAllocationStrategy("s")
                                        .withOnDemandBaseCapacity(11)
                                        .withOnDemandPercentageAboveBaseCapacity(13)
                                        .withSpotAllocationStrategy("mdqoylvmdfgnktujkkgcargpzgejts")
                                        .withSpotInstancePools(21)
                                        .withSpotMaxPrice("civdjpljorkrvqganofneu"))
                                .withLaunchTemplate(
                                    new LaunchTemplate()
                                        .withLaunchTemplateSpecification(new LaunchTemplateSpecification()
                                            .withLaunchTemplateId("zpcgiqsftmwjzwqifodopjuvfoxed")
                                            .withLaunchTemplateName("jq")
                                            .withVersion("kdlpart"))
                                        .withOverrides(Arrays.asList(new LaunchTemplateOverrides()
                                            .withInstanceRequirements(new InstanceRequirements()
                                                .withAcceleratorCount(
                                                    new AcceleratorCountRequest().withMax(22).withMin(12))
                                                .withAcceleratorManufacturers(
                                                    Arrays.asList("yrnnynorjjxvzppzrgpahymhm"))
                                                .withAcceleratorNames(Arrays.asList("iqmentbrnypcxv"))
                                                .withAcceleratorTotalMemoryMiB(
                                                    new AcceleratorTotalMemoryMiBRequest().withMax(7).withMin(29))
                                                .withAcceleratorTypes(Arrays.asList("kmvwibkxxklqitqxqqlpvfifvo"))
                                                .withAllowedInstanceTypes(Arrays.asList("tzrxlaofwygbqglbwdxnqjy"))
                                                .withBareMetal("kugjpzsjreywlvvzkebv")
                                                .withBaselineEbsBandwidthMbps(
                                                    new BaselineEbsBandwidthMbpsRequest().withMax(2).withMin(19))
                                                .withBurstablePerformance("jpwudasuoonf")
                                                .withCpuManufacturers(Arrays.asList("scbxthzijnmur"))
                                                .withExcludedInstanceTypes(Arrays.asList("edadlo"))
                                                .withInstanceGenerations(Arrays.asList("f"))
                                                .withLocalStorage("wglfmvquwice")
                                                .withLocalStorageTypes(Arrays.asList("talnjrldmventgtzlwpaxfcenp"))
                                                .withMaxSpotPriceAsPercentageOfOptimalOnDemandPrice(15)
                                                .withMemoryGiBPerVCpu(
                                                    new MemoryGiBPerVCpuRequest().withMax(23).withMin(29))
                                                .withMemoryMiB(new MemoryMiBRequest().withMax(27).withMin(27))
                                                .withNetworkBandwidthGbps(
                                                    new NetworkBandwidthGbpsRequest().withMax(18).withMin(29))
                                                .withNetworkInterfaceCount(
                                                    new NetworkInterfaceCountRequest().withMax(14).withMin(26))
                                                .withOnDemandMaxPricePercentageOverLowestPrice(8)
                                                .withRequireHibernateSupport(true)
                                                .withSpotMaxPricePercentageOverLowestPrice(9)
                                                .withTotalLocalStorageGB(
                                                    new TotalLocalStorageGBRequest().withMax(19).withMin(7))
                                                .withVCpuCount(new VCpuCountRequest().withMax(9).withMin(26)))
                                            .withInstanceType("phudgcnbis")
                                            .withLaunchTemplateSpecification(new LaunchTemplateSpecification()
                                                .withLaunchTemplateId("zpcgiqsftmwjzwqifodopjuvfoxed")
                                                .withLaunchTemplateName("jq")
                                                .withVersion("kdlpart"))
                                            .withWeightedCapacity("iqa")))))
                        .withNewInstancesProtectedFromScaleIn(true)
                        .withNotificationConfiguration(
                            new NotificationConfiguration().withNotificationTypes(Arrays.asList("jzepnjbwtsw"))
                                .withTopicArn("hndjrwrlqssgciezop"))
                        .withNotificationConfigurations(Arrays
                            .asList(new NotificationConfiguration().withNotificationTypes(Arrays.asList("jzepnjbwtsw"))
                                .withTopicArn("hndjrwrlqssgciezop")))
                        .withPlacementGroup("pmanetwktlujhykhxtcekv")
                        .withServiceLinkedRoleArn("ffqtfkdv")
                        .withTags(Arrays.asList(new TagProperty().withKey("fakeTokenPlaceholder")
                            .withPropagateAtLaunch(true)
                            .withValue("xoncdkvjanxdfklvixodkyg")))
                        .withTargetGroupARNs(Arrays.asList("ttxjwgboopxrdiqxyqjdujw"))
                        .withTerminationPolicies(Arrays.asList("jvwpdujegrgjbdrxbvcjgs"))
                        .withVpcZoneIdentifier(Arrays.asList("fmqvstmohqtmjslrnsiuodevi")))
                .withPublicCloudConnectorsResourceId("q")
                .withAwsAccountId("eogdcteuaaazi")
                .withArn("gsso")
                .withPublicCloudResourceName("blomfowfltqwzdghycehvvdnr")
                .withAwsSourceSchema("koleijkwf")
                .withAwsRegion("cfqguizvjpckdsvetalwo")
                .withAwsTags(mapOf("key6990", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

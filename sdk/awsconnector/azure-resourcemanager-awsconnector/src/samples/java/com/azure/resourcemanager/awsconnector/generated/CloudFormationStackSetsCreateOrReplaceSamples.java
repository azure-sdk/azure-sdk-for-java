// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.ActiveModel;
import com.azure.resourcemanager.awsconnector.models.AutoDeployment;
import com.azure.resourcemanager.awsconnector.models.AwsCloudFormationStackSetProperties;
import com.azure.resourcemanager.awsconnector.models.CallAs;
import com.azure.resourcemanager.awsconnector.models.CloudFormationStackSetProperties;
import com.azure.resourcemanager.awsconnector.models.DeploymentTargets;
import com.azure.resourcemanager.awsconnector.models.DeploymentTargetsAccountFilterType;
import com.azure.resourcemanager.awsconnector.models.OperationPreferences;
import com.azure.resourcemanager.awsconnector.models.OperationPreferencesRegionConcurrencyType;
import com.azure.resourcemanager.awsconnector.models.Parameter;
import com.azure.resourcemanager.awsconnector.models.PermissionModel;
import com.azure.resourcemanager.awsconnector.models.StackInstances;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated4;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for CloudFormationStackSets CreateOrReplace.
 */
public final class CloudFormationStackSetsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * CloudFormationStackSets_CreateOrReplace.json
     */
    /**
     * Sample code: CloudFormationStackSets_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        cloudFormationStackSetsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.cloudFormationStackSets()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("oubo")
            .withExistingResourceGroup("rgcloudFormationStackSet")
            .withTags(mapOf("key307", "fakeTokenPlaceholder"))
            .withProperties(
                new CloudFormationStackSetProperties()
                    .withAwsProperties(new AwsCloudFormationStackSetProperties().withAdministrationRoleArn("ybtuoky")
                        .withAutoDeployment(
                            new AutoDeployment().withEnabled(true).withRetainStacksOnAccountRemoval(true))
                        .withCallAs(CallAs.DELEGATED_ADMIN)
                        .withCapabilities(Arrays.asList("begwecrhvitloplqjhhydjwhve"))
                        .withDescription("czkasvectlrpghrjojr")
                        .withExecutionRoleName("fclmt")
                        .withManagedExecution(new ActiveModel().withActive(true))
                        .withOperationPreferences(new OperationPreferences().withFailureToleranceCount(30)
                            .withFailureTolerancePercentage(16)
                            .withMaxConcurrentCount(11)
                            .withMaxConcurrentPercentage(15)
                            .withRegionConcurrencyType(OperationPreferencesRegionConcurrencyType.PARALLEL)
                            .withRegionOrder(Arrays.asList("gwaceriunclgehhoue")))
                        .withParameters(Arrays
                            .asList(new Parameter().withParameterKey("fakeTokenPlaceholder")
                                .withParameterValue("lldiqsjfqukysjecb")))
                        .withPermissionModel(PermissionModel.SELF_MANAGED)
                        .withStackInstancesGroup(Arrays.asList(new StackInstances()
                            .withDeploymentTargets(new DeploymentTargets()
                                .withAccountFilterType(DeploymentTargetsAccountFilterType.DIFFERENCE)
                                .withAccounts(Arrays.asList("xc"))
                                .withAccountsUrl("nvixaunvovhintyelj")
                                .withOrganizationalUnitIds(Arrays.asList("gnnzuj")))
                            .withParameterOverrides(
                                Arrays.asList(new Parameter().withParameterKey("fakeTokenPlaceholder")
                                    .withParameterValue("lldiqsjfqukysjecb")))
                            .withRegions(Arrays.asList("eyondljwt"))))
                        .withStackSetId("ypfkcclgbgzikkjqfeiq")
                        .withStackSetName("bkfqkuqedspfb")
                        .withTags(
                            Arrays.asList(new TagAutoGenerated4().withKey("fakeTokenPlaceholder").withValue("ntm")))
                        .withTemplateBody("no")
                        .withTemplateUrl("icoki"))
                    .withPublicCloudConnectorsResourceId("eqapackzslaofkx")
                    .withAwsAccountId("jtdycoxjyvqvrxyy")
                    .withArn("sldueqvlzdilykrozxapbb")
                    .withPublicCloudResourceName("dyaxkuzcwhqspayuipml")
                    .withAwsSourceSchema("wpvatxlrosokkyqsq")
                    .withAwsRegion("drpqdznyarlwjnjslcrmvm")
                    .withAwsTags(mapOf("key7598", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsSsmParameterProperties;
import com.azure.resourcemanager.awsconnector.models.DataType;
import com.azure.resourcemanager.awsconnector.models.SsmParameterProperties;
import com.azure.resourcemanager.awsconnector.models.Tier;
import com.azure.resourcemanager.awsconnector.models.Type;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for SsmParameters CreateOrReplace.
 */
public final class SsmParametersCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * SsmParameters_CreateOrReplace.json
     */
    /**
     * Sample code: SsmParameters_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        ssmParametersCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.ssmParameters()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("ymzdygzdzd")
            .withExistingResourceGroup("rgssmParameter")
            .withTags(mapOf("key8492", "fakeTokenPlaceholder"))
            .withProperties(new SsmParameterProperties()
                .withAwsProperties(new AwsSsmParameterProperties().withAllowedPattern("fzyaodp")
                    .withDataType(DataType.AWS_EC2_IMAGE)
                    .withDescription("aygihzeaxvodxejsnmnkp")
                    .withName("wvvx")
                    .withPolicies("ahuep")
                    .withTier(Tier.ADVANCED)
                    .withType(Type.fromString("String"))
                    .withValue("wecofehml"))
                .withPublicCloudConnectorsResourceId("mhesebimtvrlvvbkiswfalddqhilrp")
                .withAwsAccountId("kxxdlwjrdytmfznuxkd")
                .withArn("rzxpagnscd")
                .withPublicCloudResourceName("sdtc")
                .withAwsSourceSchema("yuexfxhmpunhdtxzdrkz")
                .withAwsRegion("ujrrnxtayjeezffngymhkfhtrgjvpz")
                .withAwsTags(mapOf("key8903", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsEfsFileSystemProperties;
import com.azure.resourcemanager.awsconnector.models.BackupPolicy;
import com.azure.resourcemanager.awsconnector.models.BackupPolicyStatus;
import com.azure.resourcemanager.awsconnector.models.EfsFileSystemProperties;
import com.azure.resourcemanager.awsconnector.models.ElasticFileSystemTag;
import com.azure.resourcemanager.awsconnector.models.FileSystemProtection;
import com.azure.resourcemanager.awsconnector.models.FileSystemProtectionReplicationOverwriteProtection;
import com.azure.resourcemanager.awsconnector.models.LifecyclePolicyAutoGenerated;
import com.azure.resourcemanager.awsconnector.models.ReplicationConfiguration;
import com.azure.resourcemanager.awsconnector.models.ReplicationDestination;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for EfsFileSystems CreateOrReplace.
 */
public final class EfsFileSystemsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * EfsFileSystems_CreateOrReplace.json
     */
    /**
     * Sample code: EfsFileSystems_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        efsFileSystemsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.efsFileSystems()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("phxoujlvsqavkckotussgpnjgexvq")
            .withExistingResourceGroup("rgefsFileSystem")
            .withTags(mapOf("key8058", "fakeTokenPlaceholder"))
            .withProperties(new EfsFileSystemProperties()
                .withAwsProperties(new AwsEfsFileSystemProperties().withArn("hptcgar")
                    .withAvailabilityZoneName("wnn")
                    .withBackupPolicy(new BackupPolicy().withStatus(BackupPolicyStatus.DISABLED))
                    .withBypassPolicyLockoutSafetyCheck(true)
                    .withEncrypted(true)
                    .withFileSystemId("kublwmniiobukjozju")
                    .withFileSystemProtection(new FileSystemProtection().withReplicationOverwriteProtection(
                        FileSystemProtectionReplicationOverwriteProtection.DISABLED))
                    .withFileSystemTags(
                        Arrays.asList(new ElasticFileSystemTag().withKey("fakeTokenPlaceholder").withValue("gcz")))
                    .withKmsKeyId("fakeTokenPlaceholder")
                    .withLifecyclePolicies(Arrays.asList(
                        new LifecyclePolicyAutoGenerated().withTransitionToArchive("xsnpjovpiazmhefijlflijjycbugv")
                            .withTransitionToIA("lslpvdwwgc")
                            .withTransitionToPrimaryStorageClass("migoeoowupavauvyrljegu")))
                    .withPerformanceMode("gtcuhloqhqjvztxoqvnzhwejwqg")
                    .withProvisionedThroughputInMibps(6)
                    .withReplicationConfiguration(new ReplicationConfiguration().withDestinations(
                        Arrays.asList(new ReplicationDestination().withAvailabilityZoneName("ymqufkisnklobowewikkugs")
                            .withFileSystemId("utzycscycyiunvfnsjwz")
                            .withKmsKeyId("fakeTokenPlaceholder")
                            .withRegion("bakyknetpfqoqpltuuxkauokslotb"))))
                    .withThroughputMode("qiroscdbdjqkhezgxhfjiqd"))
                .withPublicCloudConnectorsResourceId("mhovamuukkqswmro")
                .withAwsAccountId("jkixa")
                .withArn("pewusdrkpcuvxtmjhvzmakefatinq")
                .withPublicCloudResourceName("nhvnekfp")
                .withAwsSourceSchema("txcarqgbqzzvg")
                .withAwsRegion("quxdhbvdpdedfzbfp")
                .withAwsTags(mapOf("key3062", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

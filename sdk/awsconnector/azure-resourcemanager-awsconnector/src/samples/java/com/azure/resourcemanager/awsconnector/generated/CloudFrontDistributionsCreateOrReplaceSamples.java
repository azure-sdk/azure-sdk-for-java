// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsCloudFrontDistributionProperties;
import com.azure.resourcemanager.awsconnector.models.CacheBehavior;
import com.azure.resourcemanager.awsconnector.models.CloudFrontDistributionProperties;
import com.azure.resourcemanager.awsconnector.models.Cookies;
import com.azure.resourcemanager.awsconnector.models.CustomErrorResponse;
import com.azure.resourcemanager.awsconnector.models.CustomOriginConfig;
import com.azure.resourcemanager.awsconnector.models.DefaultCacheBehavior;
import com.azure.resourcemanager.awsconnector.models.DistributionConfig;
import com.azure.resourcemanager.awsconnector.models.ForwardedValues;
import com.azure.resourcemanager.awsconnector.models.FunctionAssociation;
import com.azure.resourcemanager.awsconnector.models.GeoRestriction;
import com.azure.resourcemanager.awsconnector.models.LambdaFunctionAssociation;
import com.azure.resourcemanager.awsconnector.models.LegacyCustomOrigin;
import com.azure.resourcemanager.awsconnector.models.LegacyS3Origin;
import com.azure.resourcemanager.awsconnector.models.Logging;
import com.azure.resourcemanager.awsconnector.models.OriginAutoGenerated;
import com.azure.resourcemanager.awsconnector.models.OriginCustomHeader;
import com.azure.resourcemanager.awsconnector.models.OriginGroup;
import com.azure.resourcemanager.awsconnector.models.OriginGroupFailoverCriteria;
import com.azure.resourcemanager.awsconnector.models.OriginGroupMember;
import com.azure.resourcemanager.awsconnector.models.OriginGroupMembers;
import com.azure.resourcemanager.awsconnector.models.OriginGroups;
import com.azure.resourcemanager.awsconnector.models.OriginShield;
import com.azure.resourcemanager.awsconnector.models.Restrictions;
import com.azure.resourcemanager.awsconnector.models.S3OriginConfig;
import com.azure.resourcemanager.awsconnector.models.StatusCodes;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated5;
import com.azure.resourcemanager.awsconnector.models.ViewerCertificate;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for CloudFrontDistributions CreateOrReplace.
 */
public final class CloudFrontDistributionsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * CloudFrontDistributions_CreateOrReplace.json
     */
    /**
     * Sample code: CloudFrontDistributions_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        cloudFrontDistributionsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.cloudFrontDistributions()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("nprgvufyhs")
            .withExistingResourceGroup("rgcloudFrontDistribution")
            .withTags(mapOf("key6544", "fakeTokenPlaceholder"))
            .withProperties(new CloudFrontDistributionProperties()
                .withAwsProperties(new AwsCloudFrontDistributionProperties()
                    .withDistributionConfig(
                        new DistributionConfig().withAliases(Arrays.asList("gibhsrynakjqasnexklzyr"))
                            .withCnamEs(Arrays.asList("qczbolddtyqh"))
                            .withCacheBehaviors(Arrays.asList(new CacheBehavior()
                                .withAllowedMethods(Arrays.asList("mgilninyxzl"))
                                .withCachePolicyId("jgthzlgddcq")
                                .withCachedMethods(Arrays.asList("mocyvkoubxnhxggwiguxclll"))
                                .withCompress(true)
                                .withDefaultTtl(12)
                                .withFieldLevelEncryptionId("egdaxlmmafenvmeeiyendhzfgb")
                                .withForwardedValues(new ForwardedValues()
                                    .withCookies(new Cookies().withForward("vgdw")
                                        .withWhitelistedNames(Arrays.asList("dyyppccyzusjttwxsvtauzikzpcic")))
                                    .withHeaders(Arrays.asList("wthyef"))
                                    .withQueryString(true)
                                    .withQueryStringCacheKeys(Arrays.asList("ovsbbyypovwzfd")))
                                .withFunctionAssociations(
                                    Arrays.asList(new FunctionAssociation().withEventType("rabilo")
                                        .withFunctionArn("xqjivwlwegwmcpxpbdxlxwfkkoy")))
                                .withLambdaFunctionAssociations(
                                    Arrays.asList(new LambdaFunctionAssociation().withEventType("adgevfqgfrqxotodrywqn")
                                        .withIncludeBody(true)
                                        .withLambdaFunctionArn("ofaqozmfhyrnzijzqjc")))
                                .withMaxTtl(22)
                                .withMinTtl(14)
                                .withOriginRequestPolicyId("mmggy")
                                .withPathPattern("dblpru")
                                .withRealtimeLogConfigArn("hlpmy")
                                .withResponseHeadersPolicyId("mexazovhbvttjpndsx")
                                .withSmoothStreaming(true)
                                .withTargetOriginId("muilt")
                                .withTrustedKeyGroups(Arrays.asList("rtoknopsknpyux"))
                                .withTrustedSigners(Arrays.asList("dqxymkhclbsojvcwgczgtw"))
                                .withViewerProtocolPolicy("tadcgla")))
                            .withComment("eqgjcikzog")
                            .withContinuousDeploymentPolicyId("jpzap")
                            .withCustomErrorResponses(Arrays.asList(new CustomErrorResponse().withErrorCachingMinTtl(16)
                                .withErrorCode(14)
                                .withResponseCode(26)
                                .withResponsePagePath("fgjymf")))
                            .withCustomOrigin(new LegacyCustomOrigin().withDnsName("dijgqalflftbtatmydfk")
                                .withHttpPort(3)
                                .withHttpsPort(26)
                                .withOriginProtocolPolicy("unrjgcwzebjixqsjmmzdwm")
                                .withOriginSslProtocols(Arrays.asList("clriolammhrzrrhmyovvmbxowayz")))
                            .withDefaultCacheBehavior(new DefaultCacheBehavior()
                                .withAllowedMethods(Arrays.asList("gtvgkaxaocaozvybswnfgud"))
                                .withCachePolicyId("txppezvfdbpaewlehepeycrdj")
                                .withCachedMethods(Arrays.asList("bpptfnqcsypifnydxpkjxaek"))
                                .withCompress(true)
                                .withDefaultTtl(16)
                                .withFieldLevelEncryptionId("adpzriyfhcj")
                                .withForwardedValues(new ForwardedValues()
                                    .withCookies(new Cookies().withForward("vgdw")
                                        .withWhitelistedNames(Arrays.asList("dyyppccyzusjttwxsvtauzikzpcic")))
                                    .withHeaders(Arrays.asList("wthyef"))
                                    .withQueryString(true)
                                    .withQueryStringCacheKeys(Arrays.asList("ovsbbyypovwzfd")))
                                .withFunctionAssociations(
                                    Arrays.asList(new FunctionAssociation().withEventType("rabilo")
                                        .withFunctionArn("xqjivwlwegwmcpxpbdxlxwfkkoy")))
                                .withLambdaFunctionAssociations(
                                    Arrays.asList(new LambdaFunctionAssociation().withEventType("adgevfqgfrqxotodrywqn")
                                        .withIncludeBody(true)
                                        .withLambdaFunctionArn("ofaqozmfhyrnzijzqjc")))
                                .withMaxTtl(11)
                                .withMinTtl(22)
                                .withOriginRequestPolicyId("vfi")
                                .withRealtimeLogConfigArn("gdfhajmumlspefunqlznktqzn")
                                .withResponseHeadersPolicyId("xnvjmk")
                                .withSmoothStreaming(true)
                                .withTargetOriginId("satcfgygtio")
                                .withTrustedKeyGroups(Arrays.asList("glzecp"))
                                .withTrustedSigners(Arrays.asList("yeheiezaavurjdn"))
                                .withViewerProtocolPolicy("vmvahgz"))
                            .withDefaultRootObject("qqacdjhmnrgxzg")
                            .withEnabled(true)
                            .withHttpVersion("jujxztvywwzj")
                            .withIpV6Enabled(true)
                            .withLogging(new Logging().withBucket("staluexfxdlonreqbr")
                                .withIncludeCookies(true)
                                .withPrefix("mzugdqzcjqfkxbyxwaho"))
                            .withOriginGroups(
                                new OriginGroups()
                                    .withItems(Arrays.asList(new OriginGroup()
                                        .withFailoverCriteria(new OriginGroupFailoverCriteria().withStatusCodes(
                                            new StatusCodes().withItems(Arrays.asList(24)).withQuantity(13)))
                                        .withId("cppcwh")
                                        .withMembers(new OriginGroupMembers()
                                            .withItems(Arrays.asList(new OriginGroupMember().withOriginId("ju")))
                                            .withQuantity(19))))
                                    .withQuantity(15))
                            .withOrigins(Arrays.asList(new OriginAutoGenerated().withConnectionAttempts(17)
                                .withConnectionTimeout(13)
                                .withCustomOriginConfig(new CustomOriginConfig().withHttpPort(6)
                                    .withHttpsPort(10)
                                    .withOriginKeepaliveTimeout(29)
                                    .withOriginProtocolPolicy("utekqcjzgxdogmvyfxxzehzpcbhgu")
                                    .withOriginReadTimeout(11)
                                    .withOriginSslProtocols(Arrays.asList("lplnjynxpyxbrbyq")))
                                .withDomainName("tdvwmcxajsiushniomugxjkroqih")
                                .withId("jsvocvlfluxmig")
                                .withOriginAccessControlId("uwoxzymxpzbiohjphusuywrbri")
                                .withOriginCustomHeaders(
                                    Arrays.asList(new OriginCustomHeader().withHeaderName("kdbkguzvgqpjinhenlsw")
                                        .withHeaderValue("glzvvmflrrab")))
                                .withOriginPath("qhkjzdzxipwguohspfmkqtmp")
                                .withOriginShield(new OriginShield().withEnabled(true).withOriginShieldRegion("ubhpk"))
                                .withS3OriginConfig(new S3OriginConfig().withOriginAccessIdentity("sexllpdop"))))
                            .withPriceClass("wltams")
                            .withRestrictions(new Restrictions().withGeoRestriction(
                                new GeoRestriction().withLocations(Arrays.asList("qfbhxln")).withRestrictionType("ry")))
                            .withS3Origin(new LegacyS3Origin().withDnsName("bgxohpxhcml")
                                .withOriginAccessIdentity("itatexxuwwvgnusaleemttplfhx"))
                            .withStaging(true)
                            .withViewerCertificate(new ViewerCertificate().withAcmCertificateArn("oooavlkhe")
                                .withCloudFrontDefaultCertificate(true)
                                .withIamCertificateId("orcqmznytymzmiqg")
                                .withMinimumProtocolVersion("fjodeffknxcdqfz")
                                .withSslSupportMethod("ceibl"))
                            .withWebAclId("oycfjrylckkuampmezlerj"))
                    .withDomainName("cwbirqnkovujza")
                    .withId("ud")
                    .withTags(Arrays.asList(
                        new TagAutoGenerated5().withKey("fakeTokenPlaceholder").withValue("eelgljsxedmzhdwwp"))))
                .withPublicCloudConnectorsResourceId("quzwvcijedi")
                .withAwsAccountId("npsedngekfchphqo")
                .withArn("mlluf")
                .withPublicCloudResourceName("uquecem")
                .withAwsSourceSchema("nuhdditribzbvzfnixuibhjwyo")
                .withAwsRegion("gumvgalmzjsgtlvv")
                .withAwsTags(mapOf("key3003", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

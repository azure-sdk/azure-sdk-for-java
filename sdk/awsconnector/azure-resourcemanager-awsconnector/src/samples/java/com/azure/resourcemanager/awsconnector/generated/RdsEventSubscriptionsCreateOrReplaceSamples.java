// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.generated;

import com.azure.resourcemanager.awsconnector.models.AwsRdsEventSubscriptionProperties;
import com.azure.resourcemanager.awsconnector.models.RdsEventSubscriptionProperties;
import com.azure.resourcemanager.awsconnector.models.TagAutoGenerated48;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for RdsEventSubscriptions CreateOrReplace.
 */
public final class RdsEventSubscriptionsCreateOrReplaceSamples {
    /*
     * x-ms-original-file:
     * specification/awsconnector/resource-manager/Microsoft.AwsConnector/stable/2024-12-01/examples/
     * RdsEventSubscriptions_CreateOrReplace.json
     */
    /**
     * Sample code: RdsEventSubscriptions_CreateOrReplace.
     * 
     * @param manager Entry point to AwsconnectorManager.
     */
    public static void
        rdsEventSubscriptionsCreateOrReplace(com.azure.resourcemanager.awsconnector.AwsconnectorManager manager) {
        manager.rdsEventSubscriptions()
            .define("Replace this value with a string matching RegExp ^(z=.{0,259}[^zs.]$)(z!.*[zzzzzzzz])")
            .withRegion("zw")
            .withExistingResourceGroup("rgrdsEventSubscription")
            .withTags(mapOf("key9661", "fakeTokenPlaceholder"))
            .withProperties(
                new RdsEventSubscriptionProperties()
                    .withAwsProperties(new AwsRdsEventSubscriptionProperties().withEnabled(true)
                        .withEventCategories(Arrays.asList("lvuizykyfm"))
                        .withSnsTopicArn("bztzoygofaokcwvheylcjtyhzumi")
                        .withSourceIds(Arrays.asList("yhyohxasdyzulieniumz"))
                        .withSourceType("tvb")
                        .withSubscriptionName("we")
                        .withTags(Arrays.asList(
                            new TagAutoGenerated48().withKey("fakeTokenPlaceholder").withValue("mfwztutpnzzxe"))))
                    .withPublicCloudConnectorsResourceId("iyeipvkxsknmro")
                    .withAwsAccountId("zfsrgkfzsvgfonnvm")
                    .withArn("thfrxqrzoqkdimx")
                    .withPublicCloudResourceName("shpjwd")
                    .withAwsSourceSchema("ymnxhmzxhihjztmgswvngnhiuzw")
                    .withAwsRegion("sxpprlqqhjuob")
                    .withAwsTags(mapOf("key3613", "fakeTokenPlaceholder")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

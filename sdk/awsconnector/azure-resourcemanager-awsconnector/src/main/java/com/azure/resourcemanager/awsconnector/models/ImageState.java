// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * ImageState enum.
 */
public final class ImageState extends ExpandableStringEnum<ImageState> {
    /**
     * Static value available for ImageState.
     */
    public static final ImageState AVAILABLE = fromString("available");

    /**
     * Static value deregistered for ImageState.
     */
    public static final ImageState DEREGISTERED = fromString("deregistered");

    /**
     * Static value disabled for ImageState.
     */
    public static final ImageState DISABLED = fromString("disabled");

    /**
     * Static value error for ImageState.
     */
    public static final ImageState ERROR = fromString("error");

    /**
     * Static value failed for ImageState.
     */
    public static final ImageState FAILED = fromString("failed");

    /**
     * Static value invalid for ImageState.
     */
    public static final ImageState INVALID = fromString("invalid");

    /**
     * Static value pending for ImageState.
     */
    public static final ImageState PENDING = fromString("pending");

    /**
     * Static value transient for ImageState.
     */
    public static final ImageState TRANSIENT = fromString("transient");

    /**
     * Creates a new instance of ImageState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ImageState() {
    }

    /**
     * Creates or finds a ImageState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ImageState.
     */
    public static ImageState fromString(String name) {
        return fromString(name, ImageState.class);
    }

    /**
     * Gets known ImageState values.
     * 
     * @return known ImageState values.
     */
    public static Collection<ImageState> values() {
        return values(ImageState.class);
    }
}

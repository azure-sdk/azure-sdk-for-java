// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of MixedInstancesPolicy.
 */
@Fluent
public final class MixedInstancesPolicy implements JsonSerializable<MixedInstancesPolicy> {
    /*
     * The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot
     * Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances
     * policy. For more information, see [Auto Scaling groups with multiple instance types and purchase
     * options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in
     * the *Amazon EC2 Auto Scaling User Guide*. ``InstancesDistribution`` is a property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-
     * autoscalinggroup-mixedinstancespolicy.html) property type.
     */
    private InstancesDistribution instancesDistribution;

    /*
     * One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill
     * On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides)
     * for a mixed instances policy. ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup
     * MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-
     * autoscalinggroup-mixedinstancespolicy.html) property type.
     */
    private LaunchTemplate launchTemplate;

    /**
     * Creates an instance of MixedInstancesPolicy class.
     */
    public MixedInstancesPolicy() {
    }

    /**
     * Get the instancesDistribution property: The instances distribution. Use this structure to specify the
     * distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand
     * and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple
     * instance types and purchase
     * options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in
     * the *Amazon EC2 Auto Scaling User Guide*. ``InstancesDistribution`` is a property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
     * property type.
     * 
     * @return the instancesDistribution value.
     */
    public InstancesDistribution instancesDistribution() {
        return this.instancesDistribution;
    }

    /**
     * Set the instancesDistribution property: The instances distribution. Use this structure to specify the
     * distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand
     * and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple
     * instance types and purchase
     * options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in
     * the *Amazon EC2 Auto Scaling User Guide*. ``InstancesDistribution`` is a property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
     * property type.
     * 
     * @param instancesDistribution the instancesDistribution value to set.
     * @return the MixedInstancesPolicy object itself.
     */
    public MixedInstancesPolicy withInstancesDistribution(InstancesDistribution instancesDistribution) {
        this.instancesDistribution = instancesDistribution;
        return this;
    }

    /**
     * Get the launchTemplate property: One or more launch templates and the instance types (overrides) that are used to
     * launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates
     * and instance types (overrides) for a mixed instances policy. ``LaunchTemplate`` is a property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
     * property type.
     * 
     * @return the launchTemplate value.
     */
    public LaunchTemplate launchTemplate() {
        return this.launchTemplate;
    }

    /**
     * Set the launchTemplate property: One or more launch templates and the instance types (overrides) that are used to
     * launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates
     * and instance types (overrides) for a mixed instances policy. ``LaunchTemplate`` is a property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
     * property type.
     * 
     * @param launchTemplate the launchTemplate value to set.
     * @return the MixedInstancesPolicy object itself.
     */
    public MixedInstancesPolicy withLaunchTemplate(LaunchTemplate launchTemplate) {
        this.launchTemplate = launchTemplate;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (instancesDistribution() != null) {
            instancesDistribution().validate();
        }
        if (launchTemplate() != null) {
            launchTemplate().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("instancesDistribution", this.instancesDistribution);
        jsonWriter.writeJsonField("launchTemplate", this.launchTemplate);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MixedInstancesPolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MixedInstancesPolicy if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MixedInstancesPolicy.
     */
    public static MixedInstancesPolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MixedInstancesPolicy deserializedMixedInstancesPolicy = new MixedInstancesPolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instancesDistribution".equals(fieldName)) {
                    deserializedMixedInstancesPolicy.instancesDistribution = InstancesDistribution.fromJson(reader);
                } else if ("launchTemplate".equals(fieldName)) {
                    deserializedMixedInstancesPolicy.launchTemplate = LaunchTemplate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMixedInstancesPolicy;
        });
    }
}

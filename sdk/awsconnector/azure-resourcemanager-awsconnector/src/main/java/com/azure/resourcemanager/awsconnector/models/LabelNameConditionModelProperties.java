// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of LabelNameConditionModelProperties.
 */
@Fluent
public final class LabelNameConditionModelProperties implements JsonSerializable<LabelNameConditionModelProperties> {
    /*
     * The label name that a log record must contain in order to meet the condition. This must be a fully qualified
     * label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the
     * rule group or web ACL context of the rule that added the label.
     */
    private String labelName;

    /**
     * Creates an instance of LabelNameConditionModelProperties class.
     */
    public LabelNameConditionModelProperties() {
    }

    /**
     * Get the labelName property: The label name that a log record must contain in order to meet the condition. This
     * must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name.
     * The prefix identifies the rule group or web ACL context of the rule that added the label.
     * 
     * @return the labelName value.
     */
    public String labelName() {
        return this.labelName;
    }

    /**
     * Set the labelName property: The label name that a log record must contain in order to meet the condition. This
     * must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name.
     * The prefix identifies the rule group or web ACL context of the rule that added the label.
     * 
     * @param labelName the labelName value to set.
     * @return the LabelNameConditionModelProperties object itself.
     */
    public LabelNameConditionModelProperties withLabelName(String labelName) {
        this.labelName = labelName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("labelName", this.labelName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LabelNameConditionModelProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LabelNameConditionModelProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the LabelNameConditionModelProperties.
     */
    public static LabelNameConditionModelProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LabelNameConditionModelProperties deserializedLabelNameConditionModelProperties
                = new LabelNameConditionModelProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("labelName".equals(fieldName)) {
                    deserializedLabelNameConditionModelProperties.labelName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLabelNameConditionModelProperties;
        });
    }
}

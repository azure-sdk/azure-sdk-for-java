// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of BuildStatusConfig.
 */
@Fluent
public final class BuildStatusConfig implements JsonSerializable<BuildStatusConfig> {
    /*
     * <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter
     * depends on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the
     * <code>name</code> parameter in the Bitbucket commit status. For more information, see <a
     * href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%
     * 7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a> in the Bitbucket API documentation.</p> </dd>
     * <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used for the <code>context</code> parameter in
     * the GitHub commit status. For more information, see <a
     * href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create a commit status</a> in the
     * GitHub developer guide.</p> </dd> </dl>
     */
    private String context;

    /*
     * <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this
     * parameter depends on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the
     * <code>url</code> parameter in the Bitbucket commit status. For more information, see <a
     * href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%
     * 7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a> in the Bitbucket API documentation.</p> </dd>
     * <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used for the <code>target_url</code> parameter
     * in the GitHub commit status. For more information, see <a
     * href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create a commit status</a> in the
     * GitHub developer guide.</p> </dd> </dl>
     */
    private String targetUrl;

    /**
     * Creates an instance of BuildStatusConfig class.
     */
    public BuildStatusConfig() {
    }

    /**
     * Get the context property: &lt;p&gt;Specifies the context of the build status CodeBuild sends to the source
     * provider. The usage of this parameter depends on the source provider.&lt;/p&gt; &lt;dl&gt;
     * &lt;dt&gt;Bitbucket&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;name&lt;/code&gt;
     * parameter in the Bitbucket commit status. For more information, see &lt;a
     * href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'&gt;build&lt;/a&gt;
     * in the Bitbucket API documentation.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;GitHub/GitHub Enterprise Server&lt;/dt&gt;
     * &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;context&lt;/code&gt; parameter in the GitHub
     * commit status. For more information, see &lt;a
     * href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'&gt;Create a commit status&lt;/a&gt;
     * in the GitHub developer guide.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;.
     * 
     * @return the context value.
     */
    public String context() {
        return this.context;
    }

    /**
     * Set the context property: &lt;p&gt;Specifies the context of the build status CodeBuild sends to the source
     * provider. The usage of this parameter depends on the source provider.&lt;/p&gt; &lt;dl&gt;
     * &lt;dt&gt;Bitbucket&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;name&lt;/code&gt;
     * parameter in the Bitbucket commit status. For more information, see &lt;a
     * href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'&gt;build&lt;/a&gt;
     * in the Bitbucket API documentation.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;GitHub/GitHub Enterprise Server&lt;/dt&gt;
     * &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;context&lt;/code&gt; parameter in the GitHub
     * commit status. For more information, see &lt;a
     * href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'&gt;Create a commit status&lt;/a&gt;
     * in the GitHub developer guide.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;.
     * 
     * @param context the context value to set.
     * @return the BuildStatusConfig object itself.
     */
    public BuildStatusConfig withContext(String context) {
        this.context = context;
        return this;
    }

    /**
     * Get the targetUrl property: &lt;p&gt;Specifies the target url of the build status CodeBuild sends to the source
     * provider. The usage of this parameter depends on the source provider.&lt;/p&gt; &lt;dl&gt;
     * &lt;dt&gt;Bitbucket&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;url&lt;/code&gt;
     * parameter in the Bitbucket commit status. For more information, see &lt;a
     * href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'&gt;build&lt;/a&gt;
     * in the Bitbucket API documentation.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;GitHub/GitHub Enterprise Server&lt;/dt&gt;
     * &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;target_url&lt;/code&gt; parameter in the GitHub
     * commit status. For more information, see &lt;a
     * href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'&gt;Create a commit status&lt;/a&gt;
     * in the GitHub developer guide.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;.
     * 
     * @return the targetUrl value.
     */
    public String targetUrl() {
        return this.targetUrl;
    }

    /**
     * Set the targetUrl property: &lt;p&gt;Specifies the target url of the build status CodeBuild sends to the source
     * provider. The usage of this parameter depends on the source provider.&lt;/p&gt; &lt;dl&gt;
     * &lt;dt&gt;Bitbucket&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;url&lt;/code&gt;
     * parameter in the Bitbucket commit status. For more information, see &lt;a
     * href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'&gt;build&lt;/a&gt;
     * in the Bitbucket API documentation.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;GitHub/GitHub Enterprise Server&lt;/dt&gt;
     * &lt;dd&gt; &lt;p&gt;This parameter is used for the &lt;code&gt;target_url&lt;/code&gt; parameter in the GitHub
     * commit status. For more information, see &lt;a
     * href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'&gt;Create a commit status&lt;/a&gt;
     * in the GitHub developer guide.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;.
     * 
     * @param targetUrl the targetUrl value to set.
     * @return the BuildStatusConfig object itself.
     */
    public BuildStatusConfig withTargetUrl(String targetUrl) {
        this.targetUrl = targetUrl;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("context", this.context);
        jsonWriter.writeStringField("targetUrl", this.targetUrl);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BuildStatusConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BuildStatusConfig if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BuildStatusConfig.
     */
    public static BuildStatusConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BuildStatusConfig deserializedBuildStatusConfig = new BuildStatusConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("context".equals(fieldName)) {
                    deserializedBuildStatusConfig.context = reader.getString();
                } else if ("targetUrl".equals(fieldName)) {
                    deserializedBuildStatusConfig.targetUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBuildStatusConfig;
        });
    }
}

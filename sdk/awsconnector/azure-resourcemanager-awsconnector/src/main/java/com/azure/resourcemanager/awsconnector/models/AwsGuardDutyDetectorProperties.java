// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsGuardDutyDetector.
 */
@Fluent
public final class AwsGuardDutyDetectorProperties implements JsonSerializable<AwsGuardDutyDetectorProperties> {
    /*
     * Property dataSources
     */
    private CfnDataSourceConfigurations dataSources;

    /*
     * Property enable
     */
    private Boolean enable;

    /*
     * Property features
     */
    private List<CfnFeatureConfiguration> features;

    /*
     * Property findingPublishingFrequency
     */
    private String findingPublishingFrequency;

    /*
     * Property id
     */
    private String id;

    /*
     * Property tags
     */
    private List<TagItem> tags;

    /**
     * Creates an instance of AwsGuardDutyDetectorProperties class.
     */
    public AwsGuardDutyDetectorProperties() {
    }

    /**
     * Get the dataSources property: Property dataSources.
     * 
     * @return the dataSources value.
     */
    public CfnDataSourceConfigurations dataSources() {
        return this.dataSources;
    }

    /**
     * Set the dataSources property: Property dataSources.
     * 
     * @param dataSources the dataSources value to set.
     * @return the AwsGuardDutyDetectorProperties object itself.
     */
    public AwsGuardDutyDetectorProperties withDataSources(CfnDataSourceConfigurations dataSources) {
        this.dataSources = dataSources;
        return this;
    }

    /**
     * Get the enable property: Property enable.
     * 
     * @return the enable value.
     */
    public Boolean enable() {
        return this.enable;
    }

    /**
     * Set the enable property: Property enable.
     * 
     * @param enable the enable value to set.
     * @return the AwsGuardDutyDetectorProperties object itself.
     */
    public AwsGuardDutyDetectorProperties withEnable(Boolean enable) {
        this.enable = enable;
        return this;
    }

    /**
     * Get the features property: Property features.
     * 
     * @return the features value.
     */
    public List<CfnFeatureConfiguration> features() {
        return this.features;
    }

    /**
     * Set the features property: Property features.
     * 
     * @param features the features value to set.
     * @return the AwsGuardDutyDetectorProperties object itself.
     */
    public AwsGuardDutyDetectorProperties withFeatures(List<CfnFeatureConfiguration> features) {
        this.features = features;
        return this;
    }

    /**
     * Get the findingPublishingFrequency property: Property findingPublishingFrequency.
     * 
     * @return the findingPublishingFrequency value.
     */
    public String findingPublishingFrequency() {
        return this.findingPublishingFrequency;
    }

    /**
     * Set the findingPublishingFrequency property: Property findingPublishingFrequency.
     * 
     * @param findingPublishingFrequency the findingPublishingFrequency value to set.
     * @return the AwsGuardDutyDetectorProperties object itself.
     */
    public AwsGuardDutyDetectorProperties withFindingPublishingFrequency(String findingPublishingFrequency) {
        this.findingPublishingFrequency = findingPublishingFrequency;
        return this;
    }

    /**
     * Get the id property: Property id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Property id.
     * 
     * @param id the id value to set.
     * @return the AwsGuardDutyDetectorProperties object itself.
     */
    public AwsGuardDutyDetectorProperties withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the tags property: Property tags.
     * 
     * @return the tags value.
     */
    public List<TagItem> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Property tags.
     * 
     * @param tags the tags value to set.
     * @return the AwsGuardDutyDetectorProperties object itself.
     */
    public AwsGuardDutyDetectorProperties withTags(List<TagItem> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dataSources() != null) {
            dataSources().validate();
        }
        if (features() != null) {
            features().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("dataSources", this.dataSources);
        jsonWriter.writeBooleanField("enable", this.enable);
        jsonWriter.writeArrayField("features", this.features, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("findingPublishingFrequency", this.findingPublishingFrequency);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsGuardDutyDetectorProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsGuardDutyDetectorProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsGuardDutyDetectorProperties.
     */
    public static AwsGuardDutyDetectorProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsGuardDutyDetectorProperties deserializedAwsGuardDutyDetectorProperties
                = new AwsGuardDutyDetectorProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dataSources".equals(fieldName)) {
                    deserializedAwsGuardDutyDetectorProperties.dataSources
                        = CfnDataSourceConfigurations.fromJson(reader);
                } else if ("enable".equals(fieldName)) {
                    deserializedAwsGuardDutyDetectorProperties.enable = reader.getNullable(JsonReader::getBoolean);
                } else if ("features".equals(fieldName)) {
                    List<CfnFeatureConfiguration> features
                        = reader.readArray(reader1 -> CfnFeatureConfiguration.fromJson(reader1));
                    deserializedAwsGuardDutyDetectorProperties.features = features;
                } else if ("findingPublishingFrequency".equals(fieldName)) {
                    deserializedAwsGuardDutyDetectorProperties.findingPublishingFrequency = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedAwsGuardDutyDetectorProperties.id = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<TagItem> tags = reader.readArray(reader1 -> TagItem.fromJson(reader1));
                    deserializedAwsGuardDutyDetectorProperties.tags = tags;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsGuardDutyDetectorProperties;
        });
    }
}

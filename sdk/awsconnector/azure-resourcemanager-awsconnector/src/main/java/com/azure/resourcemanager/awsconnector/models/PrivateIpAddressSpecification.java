// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of PrivateIpAddressSpecification.
 */
@Fluent
public final class PrivateIpAddressSpecification implements JsonSerializable<PrivateIpAddressSpecification> {
    /*
     * Property primary
     */
    private Boolean primary;

    /*
     * Property privateIpAddress
     */
    private String privateIpAddress;

    /**
     * Creates an instance of PrivateIpAddressSpecification class.
     */
    public PrivateIpAddressSpecification() {
    }

    /**
     * Get the primary property: Property primary.
     * 
     * @return the primary value.
     */
    public Boolean primary() {
        return this.primary;
    }

    /**
     * Set the primary property: Property primary.
     * 
     * @param primary the primary value to set.
     * @return the PrivateIpAddressSpecification object itself.
     */
    public PrivateIpAddressSpecification withPrimary(Boolean primary) {
        this.primary = primary;
        return this;
    }

    /**
     * Get the privateIpAddress property: Property privateIpAddress.
     * 
     * @return the privateIpAddress value.
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * Set the privateIpAddress property: Property privateIpAddress.
     * 
     * @param privateIpAddress the privateIpAddress value to set.
     * @return the PrivateIpAddressSpecification object itself.
     */
    public PrivateIpAddressSpecification withPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("primary", this.primary);
        jsonWriter.writeStringField("privateIpAddress", this.privateIpAddress);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrivateIpAddressSpecification from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrivateIpAddressSpecification if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PrivateIpAddressSpecification.
     */
    public static PrivateIpAddressSpecification fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrivateIpAddressSpecification deserializedPrivateIpAddressSpecification
                = new PrivateIpAddressSpecification();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("primary".equals(fieldName)) {
                    deserializedPrivateIpAddressSpecification.primary = reader.getNullable(JsonReader::getBoolean);
                } else if ("privateIpAddress".equals(fieldName)) {
                    deserializedPrivateIpAddressSpecification.privateIpAddress = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrivateIpAddressSpecification;
        });
    }
}

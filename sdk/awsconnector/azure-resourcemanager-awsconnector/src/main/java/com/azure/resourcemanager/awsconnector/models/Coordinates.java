// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of Coordinates.
 */
@Fluent
public final class Coordinates implements JsonSerializable<Coordinates> {
    /*
     * <p> Specifies a coordinate of the north–south position of a geographic point on the surface of the Earth (-90 -
     * 90). </p>
     */
    private String latitude;

    /*
     * <p> Specifies a coordinate of the east–west position of a geographic point on the surface of the Earth (-180 -
     * 180). </p>
     */
    private String longitude;

    /**
     * Creates an instance of Coordinates class.
     */
    public Coordinates() {
    }

    /**
     * Get the latitude property: &lt;p&gt; Specifies a coordinate of the north–south position of a geographic point on
     * the surface of the Earth (-90 - 90). &lt;/p&gt;.
     * 
     * @return the latitude value.
     */
    public String latitude() {
        return this.latitude;
    }

    /**
     * Set the latitude property: &lt;p&gt; Specifies a coordinate of the north–south position of a geographic point on
     * the surface of the Earth (-90 - 90). &lt;/p&gt;.
     * 
     * @param latitude the latitude value to set.
     * @return the Coordinates object itself.
     */
    public Coordinates withLatitude(String latitude) {
        this.latitude = latitude;
        return this;
    }

    /**
     * Get the longitude property: &lt;p&gt; Specifies a coordinate of the east–west position of a geographic point on
     * the surface of the Earth (-180 - 180). &lt;/p&gt;.
     * 
     * @return the longitude value.
     */
    public String longitude() {
        return this.longitude;
    }

    /**
     * Set the longitude property: &lt;p&gt; Specifies a coordinate of the east–west position of a geographic point on
     * the surface of the Earth (-180 - 180). &lt;/p&gt;.
     * 
     * @param longitude the longitude value to set.
     * @return the Coordinates object itself.
     */
    public Coordinates withLongitude(String longitude) {
        this.longitude = longitude;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("latitude", this.latitude);
        jsonWriter.writeStringField("longitude", this.longitude);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Coordinates from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Coordinates if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the Coordinates.
     */
    public static Coordinates fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Coordinates deserializedCoordinates = new Coordinates();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("latitude".equals(fieldName)) {
                    deserializedCoordinates.latitude = reader.getString();
                } else if ("longitude".equals(fieldName)) {
                    deserializedCoordinates.longitude = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCoordinates;
        });
    }
}

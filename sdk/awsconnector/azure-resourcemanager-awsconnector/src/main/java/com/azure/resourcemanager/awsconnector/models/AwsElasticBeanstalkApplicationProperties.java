// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsElasticBeanstalkApplication.
 */
@Fluent
public final class AwsElasticBeanstalkApplicationProperties
    implements JsonSerializable<AwsElasticBeanstalkApplicationProperties> {
    /*
     * A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique
     * physical ID and uses that ID for the application name.
     */
    private String applicationName;

    /*
     * Your description of the application.
     */
    private String description;

    /*
     * Specifies an application resource lifecycle configuration to prevent your application from accumulating too many
     * versions.
     */
    private ApplicationResourceLifecycleConfig resourceLifecycleConfig;

    /**
     * Creates an instance of AwsElasticBeanstalkApplicationProperties class.
     */
    public AwsElasticBeanstalkApplicationProperties() {
    }

    /**
     * Get the applicationName property: A name for the Elastic Beanstalk application. If you don't specify a name, AWS
     * CloudFormation generates a unique physical ID and uses that ID for the application name.
     * 
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the applicationName property: A name for the Elastic Beanstalk application. If you don't specify a name, AWS
     * CloudFormation generates a unique physical ID and uses that ID for the application name.
     * 
     * @param applicationName the applicationName value to set.
     * @return the AwsElasticBeanstalkApplicationProperties object itself.
     */
    public AwsElasticBeanstalkApplicationProperties withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the description property: Your description of the application.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Your description of the application.
     * 
     * @param description the description value to set.
     * @return the AwsElasticBeanstalkApplicationProperties object itself.
     */
    public AwsElasticBeanstalkApplicationProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the resourceLifecycleConfig property: Specifies an application resource lifecycle configuration to prevent
     * your application from accumulating too many versions.
     * 
     * @return the resourceLifecycleConfig value.
     */
    public ApplicationResourceLifecycleConfig resourceLifecycleConfig() {
        return this.resourceLifecycleConfig;
    }

    /**
     * Set the resourceLifecycleConfig property: Specifies an application resource lifecycle configuration to prevent
     * your application from accumulating too many versions.
     * 
     * @param resourceLifecycleConfig the resourceLifecycleConfig value to set.
     * @return the AwsElasticBeanstalkApplicationProperties object itself.
     */
    public AwsElasticBeanstalkApplicationProperties
        withResourceLifecycleConfig(ApplicationResourceLifecycleConfig resourceLifecycleConfig) {
        this.resourceLifecycleConfig = resourceLifecycleConfig;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceLifecycleConfig() != null) {
            resourceLifecycleConfig().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("applicationName", this.applicationName);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeJsonField("resourceLifecycleConfig", this.resourceLifecycleConfig);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsElasticBeanstalkApplicationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsElasticBeanstalkApplicationProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsElasticBeanstalkApplicationProperties.
     */
    public static AwsElasticBeanstalkApplicationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsElasticBeanstalkApplicationProperties deserializedAwsElasticBeanstalkApplicationProperties
                = new AwsElasticBeanstalkApplicationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("applicationName".equals(fieldName)) {
                    deserializedAwsElasticBeanstalkApplicationProperties.applicationName = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedAwsElasticBeanstalkApplicationProperties.description = reader.getString();
                } else if ("resourceLifecycleConfig".equals(fieldName)) {
                    deserializedAwsElasticBeanstalkApplicationProperties.resourceLifecycleConfig
                        = ApplicationResourceLifecycleConfig.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsElasticBeanstalkApplicationProperties;
        });
    }
}

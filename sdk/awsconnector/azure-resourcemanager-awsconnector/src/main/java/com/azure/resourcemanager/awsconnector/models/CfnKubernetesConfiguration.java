// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of CFNKubernetesConfiguration.
 */
@Fluent
public final class CfnKubernetesConfiguration implements JsonSerializable<CfnKubernetesConfiguration> {
    /*
     * Property auditLogs
     */
    private CfnKubernetesAuditLogsConfiguration auditLogs;

    /**
     * Creates an instance of CfnKubernetesConfiguration class.
     */
    public CfnKubernetesConfiguration() {
    }

    /**
     * Get the auditLogs property: Property auditLogs.
     * 
     * @return the auditLogs value.
     */
    public CfnKubernetesAuditLogsConfiguration auditLogs() {
        return this.auditLogs;
    }

    /**
     * Set the auditLogs property: Property auditLogs.
     * 
     * @param auditLogs the auditLogs value to set.
     * @return the CfnKubernetesConfiguration object itself.
     */
    public CfnKubernetesConfiguration withAuditLogs(CfnKubernetesAuditLogsConfiguration auditLogs) {
        this.auditLogs = auditLogs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (auditLogs() != null) {
            auditLogs().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("auditLogs", this.auditLogs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CfnKubernetesConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CfnKubernetesConfiguration if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CfnKubernetesConfiguration.
     */
    public static CfnKubernetesConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CfnKubernetesConfiguration deserializedCfnKubernetesConfiguration = new CfnKubernetesConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("auditLogs".equals(fieldName)) {
                    deserializedCfnKubernetesConfiguration.auditLogs
                        = CfnKubernetesAuditLogsConfiguration.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCfnKubernetesConfiguration;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ClusterConfiguration.
 */
@Fluent
public final class ClusterConfiguration implements JsonSerializable<ClusterConfiguration> {
    /*
     * The details of the execute command configuration. The details of the execute command configuration.
     */
    private ExecuteCommandConfiguration executeCommandConfiguration;

    /**
     * Creates an instance of ClusterConfiguration class.
     */
    public ClusterConfiguration() {
    }

    /**
     * Get the executeCommandConfiguration property: The details of the execute command configuration. The details of
     * the execute command configuration.
     * 
     * @return the executeCommandConfiguration value.
     */
    public ExecuteCommandConfiguration executeCommandConfiguration() {
        return this.executeCommandConfiguration;
    }

    /**
     * Set the executeCommandConfiguration property: The details of the execute command configuration. The details of
     * the execute command configuration.
     * 
     * @param executeCommandConfiguration the executeCommandConfiguration value to set.
     * @return the ClusterConfiguration object itself.
     */
    public ClusterConfiguration
        withExecuteCommandConfiguration(ExecuteCommandConfiguration executeCommandConfiguration) {
        this.executeCommandConfiguration = executeCommandConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (executeCommandConfiguration() != null) {
            executeCommandConfiguration().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("executeCommandConfiguration", this.executeCommandConfiguration);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterConfiguration.
     */
    public static ClusterConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterConfiguration deserializedClusterConfiguration = new ClusterConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("executeCommandConfiguration".equals(fieldName)) {
                    deserializedClusterConfiguration.executeCommandConfiguration
                        = ExecuteCommandConfiguration.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterConfiguration;
        });
    }
}

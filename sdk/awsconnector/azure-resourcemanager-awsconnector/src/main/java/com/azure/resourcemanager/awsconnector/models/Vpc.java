// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of VPC.
 */
@Fluent
public final class Vpc implements JsonSerializable<Vpc> {
    /*
     * *Private hosted zones only:* The ID of an Amazon VPC. For public hosted zones, omit ``VPCs``, ``VPCId``, and
     * ``VPCRegion``.
     */
    private String vpcId;

    /*
     * *Private hosted zones only:* The region that an Amazon VPC was created in. For public hosted zones, omit
     * ``VPCs``, ``VPCId``, and ``VPCRegion``.
     */
    private String vpcRegion;

    /**
     * Creates an instance of Vpc class.
     */
    public Vpc() {
    }

    /**
     * Get the vpcId property: *Private hosted zones only:* The ID of an Amazon VPC. For public hosted zones, omit
     * ``VPCs``, ``VPCId``, and ``VPCRegion``.
     * 
     * @return the vpcId value.
     */
    public String vpcId() {
        return this.vpcId;
    }

    /**
     * Set the vpcId property: *Private hosted zones only:* The ID of an Amazon VPC. For public hosted zones, omit
     * ``VPCs``, ``VPCId``, and ``VPCRegion``.
     * 
     * @param vpcId the vpcId value to set.
     * @return the Vpc object itself.
     */
    public Vpc withVpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }

    /**
     * Get the vpcRegion property: *Private hosted zones only:* The region that an Amazon VPC was created in. For public
     * hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
     * 
     * @return the vpcRegion value.
     */
    public String vpcRegion() {
        return this.vpcRegion;
    }

    /**
     * Set the vpcRegion property: *Private hosted zones only:* The region that an Amazon VPC was created in. For public
     * hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
     * 
     * @param vpcRegion the vpcRegion value to set.
     * @return the Vpc object itself.
     */
    public Vpc withVpcRegion(String vpcRegion) {
        this.vpcRegion = vpcRegion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("vpcId", this.vpcId);
        jsonWriter.writeStringField("vpcRegion", this.vpcRegion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Vpc from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Vpc if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Vpc.
     */
    public static Vpc fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Vpc deserializedVpc = new Vpc();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vpcId".equals(fieldName)) {
                    deserializedVpc.vpcId = reader.getString();
                } else if ("vpcRegion".equals(fieldName)) {
                    deserializedVpc.vpcRegion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVpc;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of RulesSourceList.
 */
@Fluent
public final class RulesSourceList implements JsonSerializable<RulesSourceList> {
    /*
     * Property generatedRulesType
     */
    private RulesSourceListGeneratedRulesType generatedRulesType;

    /*
     * Property targetTypes
     */
    private List<String> targetTypes;

    /*
     * Property targets
     */
    private List<String> targets;

    /**
     * Creates an instance of RulesSourceList class.
     */
    public RulesSourceList() {
    }

    /**
     * Get the generatedRulesType property: Property generatedRulesType.
     * 
     * @return the generatedRulesType value.
     */
    public RulesSourceListGeneratedRulesType generatedRulesType() {
        return this.generatedRulesType;
    }

    /**
     * Set the generatedRulesType property: Property generatedRulesType.
     * 
     * @param generatedRulesType the generatedRulesType value to set.
     * @return the RulesSourceList object itself.
     */
    public RulesSourceList withGeneratedRulesType(RulesSourceListGeneratedRulesType generatedRulesType) {
        this.generatedRulesType = generatedRulesType;
        return this;
    }

    /**
     * Get the targetTypes property: Property targetTypes.
     * 
     * @return the targetTypes value.
     */
    public List<String> targetTypes() {
        return this.targetTypes;
    }

    /**
     * Set the targetTypes property: Property targetTypes.
     * 
     * @param targetTypes the targetTypes value to set.
     * @return the RulesSourceList object itself.
     */
    public RulesSourceList withTargetTypes(List<String> targetTypes) {
        this.targetTypes = targetTypes;
        return this;
    }

    /**
     * Get the targets property: Property targets.
     * 
     * @return the targets value.
     */
    public List<String> targets() {
        return this.targets;
    }

    /**
     * Set the targets property: Property targets.
     * 
     * @param targets the targets value to set.
     * @return the RulesSourceList object itself.
     */
    public RulesSourceList withTargets(List<String> targets) {
        this.targets = targets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("generatedRulesType",
            this.generatedRulesType == null ? null : this.generatedRulesType.toString());
        jsonWriter.writeArrayField("targetTypes", this.targetTypes, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("targets", this.targets, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RulesSourceList from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RulesSourceList if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RulesSourceList.
     */
    public static RulesSourceList fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RulesSourceList deserializedRulesSourceList = new RulesSourceList();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("generatedRulesType".equals(fieldName)) {
                    deserializedRulesSourceList.generatedRulesType
                        = RulesSourceListGeneratedRulesType.fromString(reader.getString());
                } else if ("targetTypes".equals(fieldName)) {
                    List<String> targetTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedRulesSourceList.targetTypes = targetTypes;
                } else if ("targets".equals(fieldName)) {
                    List<String> targets = reader.readArray(reader1 -> reader1.getString());
                    deserializedRulesSourceList.targets = targets;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRulesSourceList;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of SnapshotOptions.
 */
@Fluent
public final class SnapshotOptions implements JsonSerializable<SnapshotOptions> {
    /*
     * <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain.
     * Default is <code>0</code> hours.</p>
     */
    private Integer automatedSnapshotStartHour;

    /**
     * Creates an instance of SnapshotOptions class.
     */
    public SnapshotOptions() {
    }

    /**
     * Get the automatedSnapshotStartHour property: &lt;p&gt;The time, in UTC format, when OpenSearch Service takes a
     * daily automated snapshot of the specified domain. Default is &lt;code&gt;0&lt;/code&gt; hours.&lt;/p&gt;.
     * 
     * @return the automatedSnapshotStartHour value.
     */
    public Integer automatedSnapshotStartHour() {
        return this.automatedSnapshotStartHour;
    }

    /**
     * Set the automatedSnapshotStartHour property: &lt;p&gt;The time, in UTC format, when OpenSearch Service takes a
     * daily automated snapshot of the specified domain. Default is &lt;code&gt;0&lt;/code&gt; hours.&lt;/p&gt;.
     * 
     * @param automatedSnapshotStartHour the automatedSnapshotStartHour value to set.
     * @return the SnapshotOptions object itself.
     */
    public SnapshotOptions withAutomatedSnapshotStartHour(Integer automatedSnapshotStartHour) {
        this.automatedSnapshotStartHour = automatedSnapshotStartHour;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("automatedSnapshotStartHour", this.automatedSnapshotStartHour);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SnapshotOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SnapshotOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SnapshotOptions.
     */
    public static SnapshotOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SnapshotOptions deserializedSnapshotOptions = new SnapshotOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("automatedSnapshotStartHour".equals(fieldName)) {
                    deserializedSnapshotOptions.automatedSnapshotStartHour = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSnapshotOptions;
        });
    }
}

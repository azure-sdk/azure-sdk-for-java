// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Determines the [cryptographic
 * operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which
 * you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric KMS keys
 * and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created. If you change the value of
 * the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the
 * [UpdateReplacePolicy
 * attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
 * This prevents you from accidentally deleting a KMS key by changing an immutable property value. Select only one valid
 * value. + For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``. + For asymmetric KMS
 * keys with RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``. + For asymmetric KMS keys with ECC key
 * material, specify ``SIGN_VERIFY``. + For asymmetric KMS keys with SM2 (China Regions only) key material, specify
 * ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``. + For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.
 */
public final class KeyUsage extends ExpandableStringEnum<KeyUsage> {
    /**
     * Static value ENCRYPT_DECRYPT for KeyUsage.
     */
    public static final KeyUsage ENCRYPT_DECRYPT = fromString("ENCRYPT_DECRYPT");

    /**
     * Static value GENERATE_VERIFY_MAC for KeyUsage.
     */
    public static final KeyUsage GENERATE_VERIFY_MAC = fromString("GENERATE_VERIFY_MAC");

    /**
     * Static value SIGN_VERIFY for KeyUsage.
     */
    public static final KeyUsage SIGN_VERIFY = fromString("SIGN_VERIFY");

    /**
     * Creates a new instance of KeyUsage value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public KeyUsage() {
    }

    /**
     * Creates or finds a KeyUsage from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding KeyUsage.
     */
    public static KeyUsage fromString(String name) {
        return fromString(name, KeyUsage.class);
    }

    /**
     * Gets known KeyUsage values.
     * 
     * @return known KeyUsage values.
     */
    public static Collection<KeyUsage> values() {
        return values(KeyUsage.class);
    }
}

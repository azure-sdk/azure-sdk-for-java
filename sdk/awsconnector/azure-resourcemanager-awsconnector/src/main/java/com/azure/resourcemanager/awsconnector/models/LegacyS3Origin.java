// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of LegacyS3Origin.
 */
@Fluent
public final class LegacyS3Origin implements JsonSerializable<LegacyS3Origin> {
    /*
     * Property dnsName
     */
    private String dnsName;

    /*
     * Property originAccessIdentity
     */
    private String originAccessIdentity;

    /**
     * Creates an instance of LegacyS3Origin class.
     */
    public LegacyS3Origin() {
    }

    /**
     * Get the dnsName property: Property dnsName.
     * 
     * @return the dnsName value.
     */
    public String dnsName() {
        return this.dnsName;
    }

    /**
     * Set the dnsName property: Property dnsName.
     * 
     * @param dnsName the dnsName value to set.
     * @return the LegacyS3Origin object itself.
     */
    public LegacyS3Origin withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }

    /**
     * Get the originAccessIdentity property: Property originAccessIdentity.
     * 
     * @return the originAccessIdentity value.
     */
    public String originAccessIdentity() {
        return this.originAccessIdentity;
    }

    /**
     * Set the originAccessIdentity property: Property originAccessIdentity.
     * 
     * @param originAccessIdentity the originAccessIdentity value to set.
     * @return the LegacyS3Origin object itself.
     */
    public LegacyS3Origin withOriginAccessIdentity(String originAccessIdentity) {
        this.originAccessIdentity = originAccessIdentity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("dnsName", this.dnsName);
        jsonWriter.writeStringField("originAccessIdentity", this.originAccessIdentity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of LegacyS3Origin from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of LegacyS3Origin if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the LegacyS3Origin.
     */
    public static LegacyS3Origin fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            LegacyS3Origin deserializedLegacyS3Origin = new LegacyS3Origin();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dnsName".equals(fieldName)) {
                    deserializedLegacyS3Origin.dnsName = reader.getString();
                } else if ("originAccessIdentity".equals(fieldName)) {
                    deserializedLegacyS3Origin.originAccessIdentity = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedLegacyS3Origin;
        });
    }
}

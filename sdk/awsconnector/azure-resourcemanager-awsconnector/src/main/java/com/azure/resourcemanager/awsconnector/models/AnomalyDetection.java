// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of AnomalyDetection.
 */
@Fluent
public final class AnomalyDetection implements JsonSerializable<AnomalyDetection> {
    /*
     * <p>Indicates whether anomaly mitigation is in progress.</p>
     */
    private MitigationInEffectEnumValue mitigationInEffect;

    /*
     * <p>The latest anomaly detection result.</p>
     */
    private AnomalyResultEnumValue result;

    /**
     * Creates an instance of AnomalyDetection class.
     */
    public AnomalyDetection() {
    }

    /**
     * Get the mitigationInEffect property: &lt;p&gt;Indicates whether anomaly mitigation is in progress.&lt;/p&gt;.
     * 
     * @return the mitigationInEffect value.
     */
    public MitigationInEffectEnumValue mitigationInEffect() {
        return this.mitigationInEffect;
    }

    /**
     * Set the mitigationInEffect property: &lt;p&gt;Indicates whether anomaly mitigation is in progress.&lt;/p&gt;.
     * 
     * @param mitigationInEffect the mitigationInEffect value to set.
     * @return the AnomalyDetection object itself.
     */
    public AnomalyDetection withMitigationInEffect(MitigationInEffectEnumValue mitigationInEffect) {
        this.mitigationInEffect = mitigationInEffect;
        return this;
    }

    /**
     * Get the result property: &lt;p&gt;The latest anomaly detection result.&lt;/p&gt;.
     * 
     * @return the result value.
     */
    public AnomalyResultEnumValue result() {
        return this.result;
    }

    /**
     * Set the result property: &lt;p&gt;The latest anomaly detection result.&lt;/p&gt;.
     * 
     * @param result the result value to set.
     * @return the AnomalyDetection object itself.
     */
    public AnomalyDetection withResult(AnomalyResultEnumValue result) {
        this.result = result;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (mitigationInEffect() != null) {
            mitigationInEffect().validate();
        }
        if (result() != null) {
            result().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("mitigationInEffect", this.mitigationInEffect);
        jsonWriter.writeJsonField("result", this.result);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnomalyDetection from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnomalyDetection if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AnomalyDetection.
     */
    public static AnomalyDetection fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AnomalyDetection deserializedAnomalyDetection = new AnomalyDetection();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mitigationInEffect".equals(fieldName)) {
                    deserializedAnomalyDetection.mitigationInEffect = MitigationInEffectEnumValue.fromJson(reader);
                } else if ("result".equals(fieldName)) {
                    deserializedAnomalyDetection.result = AnomalyResultEnumValue.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAnomalyDetection;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of S3BucketDefinitionForJob.
 */
@Fluent
public final class S3BucketDefinitionForJob implements JsonSerializable<S3BucketDefinitionForJob> {
    /*
     * <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
     */
    private String accountId;

    /*
     * <p>An array that lists the names of the buckets.</p>
     */
    private List<String> buckets;

    /**
     * Creates an instance of S3BucketDefinitionForJob class.
     */
    public S3BucketDefinitionForJob() {
    }

    /**
     * Get the accountId property: &lt;p&gt;The unique identifier for the Amazon Web Services account that owns the
     * buckets.&lt;/p&gt;.
     * 
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Set the accountId property: &lt;p&gt;The unique identifier for the Amazon Web Services account that owns the
     * buckets.&lt;/p&gt;.
     * 
     * @param accountId the accountId value to set.
     * @return the S3BucketDefinitionForJob object itself.
     */
    public S3BucketDefinitionForJob withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * Get the buckets property: &lt;p&gt;An array that lists the names of the buckets.&lt;/p&gt;.
     * 
     * @return the buckets value.
     */
    public List<String> buckets() {
        return this.buckets;
    }

    /**
     * Set the buckets property: &lt;p&gt;An array that lists the names of the buckets.&lt;/p&gt;.
     * 
     * @param buckets the buckets value to set.
     * @return the S3BucketDefinitionForJob object itself.
     */
    public S3BucketDefinitionForJob withBuckets(List<String> buckets) {
        this.buckets = buckets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountId", this.accountId);
        jsonWriter.writeArrayField("buckets", this.buckets, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of S3BucketDefinitionForJob from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of S3BucketDefinitionForJob if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the S3BucketDefinitionForJob.
     */
    public static S3BucketDefinitionForJob fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            S3BucketDefinitionForJob deserializedS3BucketDefinitionForJob = new S3BucketDefinitionForJob();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountId".equals(fieldName)) {
                    deserializedS3BucketDefinitionForJob.accountId = reader.getString();
                } else if ("buckets".equals(fieldName)) {
                    List<String> buckets = reader.readArray(reader1 -> reader1.getString());
                    deserializedS3BucketDefinitionForJob.buckets = buckets;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedS3BucketDefinitionForJob;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsConfigServiceConfigurationRecorder.
 */
@Fluent
public final class AwsConfigServiceConfigurationRecorderProperties
    implements JsonSerializable<AwsConfigServiceConfigurationRecorderProperties> {
    /*
     * <p>The name of the configuration recorder. Config automatically assigns the name of 'default' when creating the
     * configuration recorder.</p> <note> <p>You cannot change the name of the configuration recorder after it has been
     * created. To change the configuration recorder name, you must delete it and create a new configuration recorder
     * with a new name. </p> </note>
     */
    private String name;

    /*
     * <p>Specifies which resource types Config records for configuration changes.</p> <note> <p> <b> High Number of
     * Config Evaluations</b> </p> <p>You may notice increased activity in your account during your initial month
     * recording with Config when compared to subsequent months. During the initial bootstrapping process, Config runs
     * evaluations on all the resources in your account that you have selected for Config to record.</p> <p>If you are
     * running ephemeral workloads, you may see increased activity from Config as it records configuration changes
     * associated with creating and deleting these temporary resources. An <i>ephemeral workload</i> is a temporary use
     * of computing resources that are loaded and run when needed. Examples include Amazon Elastic Compute Cloud (Amazon
     * EC2) Spot Instances, Amazon EMR jobs, and Auto Scaling. If you want to avoid the increased activity from running
     * ephemeral workloads, you can run these types of workloads in a separate account with Config turned off to avoid
     * increased configuration recording and rule evaluations.</p> </note>
     */
    private RecordingGroup recordingGroup;

    /*
     * <p>Specifies the default recording frequency that Config uses to record configuration changes. Config supports
     * <i>Continuous recording</i> and <i>Daily recording</i>.</p> <ul> <li> <p>Continuous recording allows you to
     * record configuration changes continuously whenever a change occurs.</p> </li> <li> <p>Daily recording allows you
     * to receive a configuration item (CI) representing the most recent state of your resources over the last 24-hour
     * period, only if it’s different from the previous CI recorded. </p> </li> </ul> <note> <p>Firewall Manager depends
     * on continuous recording to monitor your resources. If you are using Firewall Manager, it is recommended that you
     * set the recording frequency to Continuous.</p> </note> <p>You can also override the recording frequency for
     * specific resource types.</p>
     */
    private RecordingMode recordingMode;

    /*
     * <p>Amazon Resource Name (ARN) of the IAM role assumed by Config and used by the configuration recorder.</p>
     * <note> <p>While the API model does not require this field, the server will reject a request without a defined
     * <code>roleARN</code> for the configuration recorder.</p> </note> <note> <p> <b>Pre-existing Config role</b> </p>
     * <p>If you have used an Amazon Web Services service that uses Config, such as Security Hub or Control Tower, and
     * an Config role has already been created, make sure that the IAM role that you use when setting up Config keeps
     * the same minimum permissions as the already created Config role. You must do this so that the other Amazon Web
     * Services service continues to run as expected. </p> <p>For example, if Control Tower has an IAM role that allows
     * Config to read Amazon Simple Storage Service (Amazon S3) objects, make sure that the same permissions are granted
     * within the IAM role you use when setting up Config. Otherwise, it may interfere with how Control Tower operates.
     * For more information about IAM roles for Config, see <a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/security-iam.html'> <b>Identity and Access
     * Management for Config</b> </a> in the <i>Config Developer Guide</i>. </p> </note>
     */
    private String roleArn;

    /**
     * Creates an instance of AwsConfigServiceConfigurationRecorderProperties class.
     */
    public AwsConfigServiceConfigurationRecorderProperties() {
    }

    /**
     * Get the name property: &lt;p&gt;The name of the configuration recorder. Config automatically assigns the name of
     * 'default' when creating the configuration recorder.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot change the name of
     * the configuration recorder after it has been created. To change the configuration recorder name, you must delete
     * it and create a new configuration recorder with a new name. &lt;/p&gt; &lt;/note&gt;.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: &lt;p&gt;The name of the configuration recorder. Config automatically assigns the name of
     * 'default' when creating the configuration recorder.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot change the name of
     * the configuration recorder after it has been created. To change the configuration recorder name, you must delete
     * it and create a new configuration recorder with a new name. &lt;/p&gt; &lt;/note&gt;.
     * 
     * @param name the name value to set.
     * @return the AwsConfigServiceConfigurationRecorderProperties object itself.
     */
    public AwsConfigServiceConfigurationRecorderProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the recordingGroup property: &lt;p&gt;Specifies which resource types Config records for configuration
     * changes.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;b&gt; High Number of Config Evaluations&lt;/b&gt; &lt;/p&gt;
     * &lt;p&gt;You may notice increased activity in your account during your initial month recording with Config when
     * compared to subsequent months. During the initial bootstrapping process, Config runs evaluations on all the
     * resources in your account that you have selected for Config to record.&lt;/p&gt; &lt;p&gt;If you are running
     * ephemeral workloads, you may see increased activity from Config as it records configuration changes associated
     * with creating and deleting these temporary resources. An &lt;i&gt;ephemeral workload&lt;/i&gt; is a temporary use
     * of computing resources that are loaded and run when needed. Examples include Amazon Elastic Compute Cloud (Amazon
     * EC2) Spot Instances, Amazon EMR jobs, and Auto Scaling. If you want to avoid the increased activity from running
     * ephemeral workloads, you can run these types of workloads in a separate account with Config turned off to avoid
     * increased configuration recording and rule evaluations.&lt;/p&gt; &lt;/note&gt;.
     * 
     * @return the recordingGroup value.
     */
    public RecordingGroup recordingGroup() {
        return this.recordingGroup;
    }

    /**
     * Set the recordingGroup property: &lt;p&gt;Specifies which resource types Config records for configuration
     * changes.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;b&gt; High Number of Config Evaluations&lt;/b&gt; &lt;/p&gt;
     * &lt;p&gt;You may notice increased activity in your account during your initial month recording with Config when
     * compared to subsequent months. During the initial bootstrapping process, Config runs evaluations on all the
     * resources in your account that you have selected for Config to record.&lt;/p&gt; &lt;p&gt;If you are running
     * ephemeral workloads, you may see increased activity from Config as it records configuration changes associated
     * with creating and deleting these temporary resources. An &lt;i&gt;ephemeral workload&lt;/i&gt; is a temporary use
     * of computing resources that are loaded and run when needed. Examples include Amazon Elastic Compute Cloud (Amazon
     * EC2) Spot Instances, Amazon EMR jobs, and Auto Scaling. If you want to avoid the increased activity from running
     * ephemeral workloads, you can run these types of workloads in a separate account with Config turned off to avoid
     * increased configuration recording and rule evaluations.&lt;/p&gt; &lt;/note&gt;.
     * 
     * @param recordingGroup the recordingGroup value to set.
     * @return the AwsConfigServiceConfigurationRecorderProperties object itself.
     */
    public AwsConfigServiceConfigurationRecorderProperties withRecordingGroup(RecordingGroup recordingGroup) {
        this.recordingGroup = recordingGroup;
        return this;
    }

    /**
     * Get the recordingMode property: &lt;p&gt;Specifies the default recording frequency that Config uses to record
     * configuration changes. Config supports &lt;i&gt;Continuous recording&lt;/i&gt; and &lt;i&gt;Daily
     * recording&lt;/i&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Continuous recording allows you to record
     * configuration changes continuously whenever a change occurs.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Daily
     * recording allows you to receive a configuration item (CI) representing the most recent state of your resources
     * over the last 24-hour period, only if it’s different from the previous CI recorded. &lt;/p&gt; &lt;/li&gt;
     * &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Firewall Manager depends on continuous recording to monitor your resources. If
     * you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.&lt;/p&gt;
     * &lt;/note&gt; &lt;p&gt;You can also override the recording frequency for specific resource types.&lt;/p&gt;.
     * 
     * @return the recordingMode value.
     */
    public RecordingMode recordingMode() {
        return this.recordingMode;
    }

    /**
     * Set the recordingMode property: &lt;p&gt;Specifies the default recording frequency that Config uses to record
     * configuration changes. Config supports &lt;i&gt;Continuous recording&lt;/i&gt; and &lt;i&gt;Daily
     * recording&lt;/i&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Continuous recording allows you to record
     * configuration changes continuously whenever a change occurs.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Daily
     * recording allows you to receive a configuration item (CI) representing the most recent state of your resources
     * over the last 24-hour period, only if it’s different from the previous CI recorded. &lt;/p&gt; &lt;/li&gt;
     * &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Firewall Manager depends on continuous recording to monitor your resources. If
     * you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.&lt;/p&gt;
     * &lt;/note&gt; &lt;p&gt;You can also override the recording frequency for specific resource types.&lt;/p&gt;.
     * 
     * @param recordingMode the recordingMode value to set.
     * @return the AwsConfigServiceConfigurationRecorderProperties object itself.
     */
    public AwsConfigServiceConfigurationRecorderProperties withRecordingMode(RecordingMode recordingMode) {
        this.recordingMode = recordingMode;
        return this;
    }

    /**
     * Get the roleArn property: &lt;p&gt;Amazon Resource Name (ARN) of the IAM role assumed by Config and used by the
     * configuration recorder.&lt;/p&gt; &lt;note&gt; &lt;p&gt;While the API model does not require this field, the
     * server will reject a request without a defined &lt;code&gt;roleARN&lt;/code&gt; for the configuration
     * recorder.&lt;/p&gt; &lt;/note&gt; &lt;note&gt; &lt;p&gt; &lt;b&gt;Pre-existing Config role&lt;/b&gt; &lt;/p&gt;
     * &lt;p&gt;If you have used an Amazon Web Services service that uses Config, such as Security Hub or Control Tower,
     * and an Config role has already been created, make sure that the IAM role that you use when setting up Config
     * keeps the same minimum permissions as the already created Config role. You must do this so that the other Amazon
     * Web Services service continues to run as expected. &lt;/p&gt; &lt;p&gt;For example, if Control Tower has an IAM
     * role that allows Config to read Amazon Simple Storage Service (Amazon S3) objects, make sure that the same
     * permissions are granted within the IAM role you use when setting up Config. Otherwise, it may interfere with how
     * Control Tower operates. For more information about IAM roles for Config, see &lt;a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/security-iam.html'&gt; &lt;b&gt;Identity and
     * Access Management for Config&lt;/b&gt; &lt;/a&gt; in the &lt;i&gt;Config Developer Guide&lt;/i&gt;. &lt;/p&gt;
     * &lt;/note&gt;.
     * 
     * @return the roleArn value.
     */
    public String roleArn() {
        return this.roleArn;
    }

    /**
     * Set the roleArn property: &lt;p&gt;Amazon Resource Name (ARN) of the IAM role assumed by Config and used by the
     * configuration recorder.&lt;/p&gt; &lt;note&gt; &lt;p&gt;While the API model does not require this field, the
     * server will reject a request without a defined &lt;code&gt;roleARN&lt;/code&gt; for the configuration
     * recorder.&lt;/p&gt; &lt;/note&gt; &lt;note&gt; &lt;p&gt; &lt;b&gt;Pre-existing Config role&lt;/b&gt; &lt;/p&gt;
     * &lt;p&gt;If you have used an Amazon Web Services service that uses Config, such as Security Hub or Control Tower,
     * and an Config role has already been created, make sure that the IAM role that you use when setting up Config
     * keeps the same minimum permissions as the already created Config role. You must do this so that the other Amazon
     * Web Services service continues to run as expected. &lt;/p&gt; &lt;p&gt;For example, if Control Tower has an IAM
     * role that allows Config to read Amazon Simple Storage Service (Amazon S3) objects, make sure that the same
     * permissions are granted within the IAM role you use when setting up Config. Otherwise, it may interfere with how
     * Control Tower operates. For more information about IAM roles for Config, see &lt;a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/security-iam.html'&gt; &lt;b&gt;Identity and
     * Access Management for Config&lt;/b&gt; &lt;/a&gt; in the &lt;i&gt;Config Developer Guide&lt;/i&gt;. &lt;/p&gt;
     * &lt;/note&gt;.
     * 
     * @param roleArn the roleArn value to set.
     * @return the AwsConfigServiceConfigurationRecorderProperties object itself.
     */
    public AwsConfigServiceConfigurationRecorderProperties withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (recordingGroup() != null) {
            recordingGroup().validate();
        }
        if (recordingMode() != null) {
            recordingMode().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeJsonField("recordingGroup", this.recordingGroup);
        jsonWriter.writeJsonField("recordingMode", this.recordingMode);
        jsonWriter.writeStringField("roleARN", this.roleArn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsConfigServiceConfigurationRecorderProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsConfigServiceConfigurationRecorderProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsConfigServiceConfigurationRecorderProperties.
     */
    public static AwsConfigServiceConfigurationRecorderProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsConfigServiceConfigurationRecorderProperties deserializedAwsConfigServiceConfigurationRecorderProperties
                = new AwsConfigServiceConfigurationRecorderProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAwsConfigServiceConfigurationRecorderProperties.name = reader.getString();
                } else if ("recordingGroup".equals(fieldName)) {
                    deserializedAwsConfigServiceConfigurationRecorderProperties.recordingGroup
                        = RecordingGroup.fromJson(reader);
                } else if ("recordingMode".equals(fieldName)) {
                    deserializedAwsConfigServiceConfigurationRecorderProperties.recordingMode
                        = RecordingMode.fromJson(reader);
                } else if ("roleARN".equals(fieldName)) {
                    deserializedAwsConfigServiceConfigurationRecorderProperties.roleArn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsConfigServiceConfigurationRecorderProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Definition of awsApiGatewayStage.
 */
@Fluent
public final class AwsApiGatewayStageProperties implements JsonSerializable<AwsApiGatewayStageProperties> {
    /*
     * Access log settings, including the access log format and access log destination ARN. The ``AccessLogSetting``
     * property type specifies settings for logging access in this stage. ``AccessLogSetting`` is a property of the
     * [AWS::ApiGateway::Stage](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-
     * stage.html) resource.
     */
    private AccessLogSetting accessLogSetting;

    /*
     * Specifies whether a cache cluster is enabled for the stage.
     */
    private Boolean cacheClusterEnabled;

    /*
     * The stage's cache capacity in GB. For more information about choosing a cache size, see [Enabling API caching to
     * enhance responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html).
     */
    private String cacheClusterSize;

    /*
     * Settings for the canary deployment in this stage. Configuration settings of a canary deployment.
     */
    private CanarySetting canarySetting;

    /*
     * The identifier of a client certificate for an API stage.
     */
    private String clientCertificateId;

    /*
     * The identifier of the Deployment that the stage points to.
     */
    private String deploymentId;

    /*
     * The stage's description.
     */
    private String description;

    /*
     * The version of the associated API documentation.
     */
    private String documentationVersion;

    /*
     * A map that defines the method settings for a Stage resource. Keys (designated as ``/{method_setting_key`` below)
     * are method paths defined as ``{resource_path}/{http_method}`` for an individual method override, or
     * ``/\*&#47;\*`` for overriding all methods in the stage.
     */
    private List<MethodSetting> methodSettings;

    /*
     * The string identifier of the associated RestApi.
     */
    private String restApiId;

    /*
     * The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API
     * Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128
     * characters.
     */
    private String stageName;

    /*
     * The collection of tags. Each tag element is associated with a given resource.
     */
    private List<TagAutoGenerated2> tags;

    /*
     * Specifies whether active tracing with X-ray is enabled for the Stage.
     */
    private Boolean tracingEnabled;

    /*
     * A map (string-to-string map) that defines the stage variables, where the variable name is the key and the
     * variable value is the value. Variable names are limited to alphanumeric characters. Values must match the
     * following regular expression: ``[A-Za-z0-9-._~:/?#&=,]+``.
     */
    private Map<String, String> variables;

    /**
     * Creates an instance of AwsApiGatewayStageProperties class.
     */
    public AwsApiGatewayStageProperties() {
    }

    /**
     * Get the accessLogSetting property: Access log settings, including the access log format and access log
     * destination ARN. The ``AccessLogSetting`` property type specifies settings for logging access in this stage.
     * ``AccessLogSetting`` is a property of the
     * [AWS::ApiGateway::Stage](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html)
     * resource.
     * 
     * @return the accessLogSetting value.
     */
    public AccessLogSetting accessLogSetting() {
        return this.accessLogSetting;
    }

    /**
     * Set the accessLogSetting property: Access log settings, including the access log format and access log
     * destination ARN. The ``AccessLogSetting`` property type specifies settings for logging access in this stage.
     * ``AccessLogSetting`` is a property of the
     * [AWS::ApiGateway::Stage](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html)
     * resource.
     * 
     * @param accessLogSetting the accessLogSetting value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withAccessLogSetting(AccessLogSetting accessLogSetting) {
        this.accessLogSetting = accessLogSetting;
        return this;
    }

    /**
     * Get the cacheClusterEnabled property: Specifies whether a cache cluster is enabled for the stage.
     * 
     * @return the cacheClusterEnabled value.
     */
    public Boolean cacheClusterEnabled() {
        return this.cacheClusterEnabled;
    }

    /**
     * Set the cacheClusterEnabled property: Specifies whether a cache cluster is enabled for the stage.
     * 
     * @param cacheClusterEnabled the cacheClusterEnabled value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withCacheClusterEnabled(Boolean cacheClusterEnabled) {
        this.cacheClusterEnabled = cacheClusterEnabled;
        return this;
    }

    /**
     * Get the cacheClusterSize property: The stage's cache capacity in GB. For more information about choosing a cache
     * size, see [Enabling API caching to enhance
     * responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html).
     * 
     * @return the cacheClusterSize value.
     */
    public String cacheClusterSize() {
        return this.cacheClusterSize;
    }

    /**
     * Set the cacheClusterSize property: The stage's cache capacity in GB. For more information about choosing a cache
     * size, see [Enabling API caching to enhance
     * responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html).
     * 
     * @param cacheClusterSize the cacheClusterSize value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withCacheClusterSize(String cacheClusterSize) {
        this.cacheClusterSize = cacheClusterSize;
        return this;
    }

    /**
     * Get the canarySetting property: Settings for the canary deployment in this stage. Configuration settings of a
     * canary deployment.
     * 
     * @return the canarySetting value.
     */
    public CanarySetting canarySetting() {
        return this.canarySetting;
    }

    /**
     * Set the canarySetting property: Settings for the canary deployment in this stage. Configuration settings of a
     * canary deployment.
     * 
     * @param canarySetting the canarySetting value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withCanarySetting(CanarySetting canarySetting) {
        this.canarySetting = canarySetting;
        return this;
    }

    /**
     * Get the clientCertificateId property: The identifier of a client certificate for an API stage.
     * 
     * @return the clientCertificateId value.
     */
    public String clientCertificateId() {
        return this.clientCertificateId;
    }

    /**
     * Set the clientCertificateId property: The identifier of a client certificate for an API stage.
     * 
     * @param clientCertificateId the clientCertificateId value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withClientCertificateId(String clientCertificateId) {
        this.clientCertificateId = clientCertificateId;
        return this;
    }

    /**
     * Get the deploymentId property: The identifier of the Deployment that the stage points to.
     * 
     * @return the deploymentId value.
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    /**
     * Set the deploymentId property: The identifier of the Deployment that the stage points to.
     * 
     * @param deploymentId the deploymentId value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withDeploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
        return this;
    }

    /**
     * Get the description property: The stage's description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The stage's description.
     * 
     * @param description the description value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the documentationVersion property: The version of the associated API documentation.
     * 
     * @return the documentationVersion value.
     */
    public String documentationVersion() {
        return this.documentationVersion;
    }

    /**
     * Set the documentationVersion property: The version of the associated API documentation.
     * 
     * @param documentationVersion the documentationVersion value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withDocumentationVersion(String documentationVersion) {
        this.documentationVersion = documentationVersion;
        return this;
    }

    /**
     * Get the methodSettings property: A map that defines the method settings for a Stage resource. Keys (designated as
     * ``/{method_setting_key`` below) are method paths defined as ``{resource_path}/{http_method}`` for an individual
     * method override, or ``/\*&#47;\*`` for overriding all methods in the stage.
     * 
     * @return the methodSettings value.
     */
    public List<MethodSetting> methodSettings() {
        return this.methodSettings;
    }

    /**
     * Set the methodSettings property: A map that defines the method settings for a Stage resource. Keys (designated as
     * ``/{method_setting_key`` below) are method paths defined as ``{resource_path}/{http_method}`` for an individual
     * method override, or ``/\*&#47;\*`` for overriding all methods in the stage.
     * 
     * @param methodSettings the methodSettings value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withMethodSettings(List<MethodSetting> methodSettings) {
        this.methodSettings = methodSettings;
        return this;
    }

    /**
     * Get the restApiId property: The string identifier of the associated RestApi.
     * 
     * @return the restApiId value.
     */
    public String restApiId() {
        return this.restApiId;
    }

    /**
     * Set the restApiId property: The string identifier of the associated RestApi.
     * 
     * @param restApiId the restApiId value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withRestApiId(String restApiId) {
        this.restApiId = restApiId;
        return this;
    }

    /**
     * Get the stageName property: The name of the stage is the first path segment in the Uniform Resource Identifier
     * (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores.
     * Maximum length is 128 characters.
     * 
     * @return the stageName value.
     */
    public String stageName() {
        return this.stageName;
    }

    /**
     * Set the stageName property: The name of the stage is the first path segment in the Uniform Resource Identifier
     * (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores.
     * Maximum length is 128 characters.
     * 
     * @param stageName the stageName value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withStageName(String stageName) {
        this.stageName = stageName;
        return this;
    }

    /**
     * Get the tags property: The collection of tags. Each tag element is associated with a given resource.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated2> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: The collection of tags. Each tag element is associated with a given resource.
     * 
     * @param tags the tags value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withTags(List<TagAutoGenerated2> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the tracingEnabled property: Specifies whether active tracing with X-ray is enabled for the Stage.
     * 
     * @return the tracingEnabled value.
     */
    public Boolean tracingEnabled() {
        return this.tracingEnabled;
    }

    /**
     * Set the tracingEnabled property: Specifies whether active tracing with X-ray is enabled for the Stage.
     * 
     * @param tracingEnabled the tracingEnabled value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withTracingEnabled(Boolean tracingEnabled) {
        this.tracingEnabled = tracingEnabled;
        return this;
    }

    /**
     * Get the variables property: A map (string-to-string map) that defines the stage variables, where the variable
     * name is the key and the variable value is the value. Variable names are limited to alphanumeric characters.
     * Values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&amp;=,]+``.
     * 
     * @return the variables value.
     */
    public Map<String, String> variables() {
        return this.variables;
    }

    /**
     * Set the variables property: A map (string-to-string map) that defines the stage variables, where the variable
     * name is the key and the variable value is the value. Variable names are limited to alphanumeric characters.
     * Values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&amp;=,]+``.
     * 
     * @param variables the variables value to set.
     * @return the AwsApiGatewayStageProperties object itself.
     */
    public AwsApiGatewayStageProperties withVariables(Map<String, String> variables) {
        this.variables = variables;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (accessLogSetting() != null) {
            accessLogSetting().validate();
        }
        if (canarySetting() != null) {
            canarySetting().validate();
        }
        if (methodSettings() != null) {
            methodSettings().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("accessLogSetting", this.accessLogSetting);
        jsonWriter.writeBooleanField("cacheClusterEnabled", this.cacheClusterEnabled);
        jsonWriter.writeStringField("cacheClusterSize", this.cacheClusterSize);
        jsonWriter.writeJsonField("canarySetting", this.canarySetting);
        jsonWriter.writeStringField("clientCertificateId", this.clientCertificateId);
        jsonWriter.writeStringField("deploymentId", this.deploymentId);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("documentationVersion", this.documentationVersion);
        jsonWriter.writeArrayField("methodSettings", this.methodSettings,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("restApiId", this.restApiId);
        jsonWriter.writeStringField("stageName", this.stageName);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeBooleanField("tracingEnabled", this.tracingEnabled);
        jsonWriter.writeMapField("variables", this.variables, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsApiGatewayStageProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsApiGatewayStageProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsApiGatewayStageProperties.
     */
    public static AwsApiGatewayStageProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsApiGatewayStageProperties deserializedAwsApiGatewayStageProperties = new AwsApiGatewayStageProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessLogSetting".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.accessLogSetting = AccessLogSetting.fromJson(reader);
                } else if ("cacheClusterEnabled".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.cacheClusterEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("cacheClusterSize".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.cacheClusterSize = reader.getString();
                } else if ("canarySetting".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.canarySetting = CanarySetting.fromJson(reader);
                } else if ("clientCertificateId".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.clientCertificateId = reader.getString();
                } else if ("deploymentId".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.deploymentId = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.description = reader.getString();
                } else if ("documentationVersion".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.documentationVersion = reader.getString();
                } else if ("methodSettings".equals(fieldName)) {
                    List<MethodSetting> methodSettings = reader.readArray(reader1 -> MethodSetting.fromJson(reader1));
                    deserializedAwsApiGatewayStageProperties.methodSettings = methodSettings;
                } else if ("restApiId".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.restApiId = reader.getString();
                } else if ("stageName".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.stageName = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated2> tags = reader.readArray(reader1 -> TagAutoGenerated2.fromJson(reader1));
                    deserializedAwsApiGatewayStageProperties.tags = tags;
                } else if ("tracingEnabled".equals(fieldName)) {
                    deserializedAwsApiGatewayStageProperties.tracingEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("variables".equals(fieldName)) {
                    Map<String, String> variables = reader.readMap(reader1 -> reader1.getString());
                    deserializedAwsApiGatewayStageProperties.variables = variables;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsApiGatewayStageProperties;
        });
    }
}

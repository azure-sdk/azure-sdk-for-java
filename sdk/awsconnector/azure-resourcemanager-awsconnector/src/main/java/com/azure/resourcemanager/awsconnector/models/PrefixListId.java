// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of PrefixListId.
 */
@Fluent
public final class PrefixListId implements JsonSerializable<PrefixListId> {
    /*
     * <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255
     * characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
     */
    private String description;

    /*
     * <p>The ID of the prefix.</p>
     */
    private String prefixListId;

    /**
     * Creates an instance of PrefixListId class.
     */
    public PrefixListId() {
    }

    /**
     * Get the description property: &lt;p&gt;A description for the security group rule that references this prefix list
     * ID.&lt;/p&gt; &lt;p&gt;Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces,
     * and ._-:/()#,&#064;[]+=;{}!$*&lt;/p&gt;.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: &lt;p&gt;A description for the security group rule that references this prefix list
     * ID.&lt;/p&gt; &lt;p&gt;Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces,
     * and ._-:/()#,&#064;[]+=;{}!$*&lt;/p&gt;.
     * 
     * @param description the description value to set.
     * @return the PrefixListId object itself.
     */
    public PrefixListId withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the prefixListId property: &lt;p&gt;The ID of the prefix.&lt;/p&gt;.
     * 
     * @return the prefixListId value.
     */
    public String prefixListId() {
        return this.prefixListId;
    }

    /**
     * Set the prefixListId property: &lt;p&gt;The ID of the prefix.&lt;/p&gt;.
     * 
     * @param prefixListId the prefixListId value to set.
     * @return the PrefixListId object itself.
     */
    public PrefixListId withPrefixListId(String prefixListId) {
        this.prefixListId = prefixListId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("prefixListId", this.prefixListId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrefixListId from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrefixListId if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PrefixListId.
     */
    public static PrefixListId fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrefixListId deserializedPrefixListId = new PrefixListId();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedPrefixListId.description = reader.getString();
                } else if ("prefixListId".equals(fieldName)) {
                    deserializedPrefixListId.prefixListId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrefixListId;
        });
    }
}

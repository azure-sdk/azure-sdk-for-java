// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of CFNFeatureConfiguration.
 */
@Fluent
public final class CfnFeatureConfiguration implements JsonSerializable<CfnFeatureConfiguration> {
    /*
     * Property additionalConfiguration
     */
    private List<CfnFeatureAdditionalConfiguration> additionalConfiguration;

    /*
     * Property name
     */
    private String name;

    /*
     * Property status
     */
    private CfnFeatureConfigurationStatus status;

    /**
     * Creates an instance of CfnFeatureConfiguration class.
     */
    public CfnFeatureConfiguration() {
    }

    /**
     * Get the additionalConfiguration property: Property additionalConfiguration.
     * 
     * @return the additionalConfiguration value.
     */
    public List<CfnFeatureAdditionalConfiguration> additionalConfiguration() {
        return this.additionalConfiguration;
    }

    /**
     * Set the additionalConfiguration property: Property additionalConfiguration.
     * 
     * @param additionalConfiguration the additionalConfiguration value to set.
     * @return the CfnFeatureConfiguration object itself.
     */
    public CfnFeatureConfiguration
        withAdditionalConfiguration(List<CfnFeatureAdditionalConfiguration> additionalConfiguration) {
        this.additionalConfiguration = additionalConfiguration;
        return this;
    }

    /**
     * Get the name property: Property name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Property name.
     * 
     * @param name the name value to set.
     * @return the CfnFeatureConfiguration object itself.
     */
    public CfnFeatureConfiguration withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the status property: Property status.
     * 
     * @return the status value.
     */
    public CfnFeatureConfigurationStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Property status.
     * 
     * @param status the status value to set.
     * @return the CfnFeatureConfiguration object itself.
     */
    public CfnFeatureConfiguration withStatus(CfnFeatureConfigurationStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (additionalConfiguration() != null) {
            additionalConfiguration().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("additionalConfiguration", this.additionalConfiguration,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CfnFeatureConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CfnFeatureConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CfnFeatureConfiguration.
     */
    public static CfnFeatureConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CfnFeatureConfiguration deserializedCfnFeatureConfiguration = new CfnFeatureConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("additionalConfiguration".equals(fieldName)) {
                    List<CfnFeatureAdditionalConfiguration> additionalConfiguration
                        = reader.readArray(reader1 -> CfnFeatureAdditionalConfiguration.fromJson(reader1));
                    deserializedCfnFeatureConfiguration.additionalConfiguration = additionalConfiguration;
                } else if ("name".equals(fieldName)) {
                    deserializedCfnFeatureConfiguration.name = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedCfnFeatureConfiguration.status
                        = CfnFeatureConfigurationStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCfnFeatureConfiguration;
        });
    }
}

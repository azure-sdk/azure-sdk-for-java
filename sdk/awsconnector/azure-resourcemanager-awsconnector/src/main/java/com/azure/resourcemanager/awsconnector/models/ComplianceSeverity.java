// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * ComplianceSeverity enum.
 */
public final class ComplianceSeverity extends ExpandableStringEnum<ComplianceSeverity> {
    /**
     * Static value CRITICAL for ComplianceSeverity.
     */
    public static final ComplianceSeverity CRITICAL = fromString("CRITICAL");

    /**
     * Static value HIGH for ComplianceSeverity.
     */
    public static final ComplianceSeverity HIGH = fromString("HIGH");

    /**
     * Static value INFORMATIONAL for ComplianceSeverity.
     */
    public static final ComplianceSeverity INFORMATIONAL = fromString("INFORMATIONAL");

    /**
     * Static value LOW for ComplianceSeverity.
     */
    public static final ComplianceSeverity LOW = fromString("LOW");

    /**
     * Static value MEDIUM for ComplianceSeverity.
     */
    public static final ComplianceSeverity MEDIUM = fromString("MEDIUM");

    /**
     * Static value UNSPECIFIED for ComplianceSeverity.
     */
    public static final ComplianceSeverity UNSPECIFIED = fromString("UNSPECIFIED");

    /**
     * Creates a new instance of ComplianceSeverity value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ComplianceSeverity() {
    }

    /**
     * Creates or finds a ComplianceSeverity from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ComplianceSeverity.
     */
    public static ComplianceSeverity fromString(String name) {
        return fromString(name, ComplianceSeverity.class);
    }

    /**
     * Gets known ComplianceSeverity values.
     * 
     * @return known ComplianceSeverity values.
     */
    public static Collection<ComplianceSeverity> values() {
        return values(ComplianceSeverity.class);
    }
}

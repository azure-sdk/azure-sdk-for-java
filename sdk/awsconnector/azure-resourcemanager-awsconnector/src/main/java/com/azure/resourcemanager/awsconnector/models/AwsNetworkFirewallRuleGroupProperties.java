// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsNetworkFirewallRuleGroup.
 */
@Fluent
public final class AwsNetworkFirewallRuleGroupProperties
    implements JsonSerializable<AwsNetworkFirewallRuleGroupProperties> {
    /*
     * Property capacity
     */
    private Integer capacity;

    /*
     * Property description
     */
    private String description;

    /*
     * Property ruleGroup
     */
    private RuleGroup ruleGroup;

    /*
     * A resource ARN.
     */
    private String ruleGroupArn;

    /*
     * Property ruleGroupId
     */
    private String ruleGroupId;

    /*
     * Property ruleGroupName
     */
    private String ruleGroupName;

    /*
     * Property tags
     */
    private List<TagAutoGenerated43> tags;

    /*
     * Property type
     */
    private Type type;

    /**
     * Creates an instance of AwsNetworkFirewallRuleGroupProperties class.
     */
    public AwsNetworkFirewallRuleGroupProperties() {
    }

    /**
     * Get the capacity property: Property capacity.
     * 
     * @return the capacity value.
     */
    public Integer capacity() {
        return this.capacity;
    }

    /**
     * Set the capacity property: Property capacity.
     * 
     * @param capacity the capacity value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withCapacity(Integer capacity) {
        this.capacity = capacity;
        return this;
    }

    /**
     * Get the description property: Property description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Property description.
     * 
     * @param description the description value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the ruleGroup property: Property ruleGroup.
     * 
     * @return the ruleGroup value.
     */
    public RuleGroup ruleGroup() {
        return this.ruleGroup;
    }

    /**
     * Set the ruleGroup property: Property ruleGroup.
     * 
     * @param ruleGroup the ruleGroup value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withRuleGroup(RuleGroup ruleGroup) {
        this.ruleGroup = ruleGroup;
        return this;
    }

    /**
     * Get the ruleGroupArn property: A resource ARN.
     * 
     * @return the ruleGroupArn value.
     */
    public String ruleGroupArn() {
        return this.ruleGroupArn;
    }

    /**
     * Set the ruleGroupArn property: A resource ARN.
     * 
     * @param ruleGroupArn the ruleGroupArn value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withRuleGroupArn(String ruleGroupArn) {
        this.ruleGroupArn = ruleGroupArn;
        return this;
    }

    /**
     * Get the ruleGroupId property: Property ruleGroupId.
     * 
     * @return the ruleGroupId value.
     */
    public String ruleGroupId() {
        return this.ruleGroupId;
    }

    /**
     * Set the ruleGroupId property: Property ruleGroupId.
     * 
     * @param ruleGroupId the ruleGroupId value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withRuleGroupId(String ruleGroupId) {
        this.ruleGroupId = ruleGroupId;
        return this;
    }

    /**
     * Get the ruleGroupName property: Property ruleGroupName.
     * 
     * @return the ruleGroupName value.
     */
    public String ruleGroupName() {
        return this.ruleGroupName;
    }

    /**
     * Set the ruleGroupName property: Property ruleGroupName.
     * 
     * @param ruleGroupName the ruleGroupName value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withRuleGroupName(String ruleGroupName) {
        this.ruleGroupName = ruleGroupName;
        return this;
    }

    /**
     * Get the tags property: Property tags.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated43> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Property tags.
     * 
     * @param tags the tags value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withTags(List<TagAutoGenerated43> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the type property: Property type.
     * 
     * @return the type value.
     */
    public Type type() {
        return this.type;
    }

    /**
     * Set the type property: Property type.
     * 
     * @param type the type value to set.
     * @return the AwsNetworkFirewallRuleGroupProperties object itself.
     */
    public AwsNetworkFirewallRuleGroupProperties withType(Type type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (ruleGroup() != null) {
            ruleGroup().validate();
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("capacity", this.capacity);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeJsonField("ruleGroup", this.ruleGroup);
        jsonWriter.writeStringField("ruleGroupArn", this.ruleGroupArn);
        jsonWriter.writeStringField("ruleGroupId", this.ruleGroupId);
        jsonWriter.writeStringField("ruleGroupName", this.ruleGroupName);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsNetworkFirewallRuleGroupProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsNetworkFirewallRuleGroupProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsNetworkFirewallRuleGroupProperties.
     */
    public static AwsNetworkFirewallRuleGroupProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsNetworkFirewallRuleGroupProperties deserializedAwsNetworkFirewallRuleGroupProperties
                = new AwsNetworkFirewallRuleGroupProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("capacity".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.capacity = reader.getNullable(JsonReader::getInt);
                } else if ("description".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.description = reader.getString();
                } else if ("ruleGroup".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.ruleGroup = RuleGroup.fromJson(reader);
                } else if ("ruleGroupArn".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.ruleGroupArn = reader.getString();
                } else if ("ruleGroupId".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.ruleGroupId = reader.getString();
                } else if ("ruleGroupName".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.ruleGroupName = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated43> tags = reader.readArray(reader1 -> TagAutoGenerated43.fromJson(reader1));
                    deserializedAwsNetworkFirewallRuleGroupProperties.tags = tags;
                } else if ("type".equals(fieldName)) {
                    deserializedAwsNetworkFirewallRuleGroupProperties.type = Type.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsNetworkFirewallRuleGroupProperties;
        });
    }
}

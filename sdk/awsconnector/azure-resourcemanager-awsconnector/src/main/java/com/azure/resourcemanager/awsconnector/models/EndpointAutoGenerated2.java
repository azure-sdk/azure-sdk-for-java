// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of Endpoint.
 */
@Fluent
public final class EndpointAutoGenerated2 implements JsonSerializable<EndpointAutoGenerated2> {
    /*
     * Specifies the DNS address of the DB instance.
     */
    private String address;

    /*
     * Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
     */
    private String hostedZoneId;

    /*
     * Specifies the port that the database engine is listening on.
     */
    private String port;

    /**
     * Creates an instance of EndpointAutoGenerated2 class.
     */
    public EndpointAutoGenerated2() {
    }

    /**
     * Get the address property: Specifies the DNS address of the DB instance.
     * 
     * @return the address value.
     */
    public String address() {
        return this.address;
    }

    /**
     * Set the address property: Specifies the DNS address of the DB instance.
     * 
     * @param address the address value to set.
     * @return the EndpointAutoGenerated2 object itself.
     */
    public EndpointAutoGenerated2 withAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get the hostedZoneId property: Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
     * 
     * @return the hostedZoneId value.
     */
    public String hostedZoneId() {
        return this.hostedZoneId;
    }

    /**
     * Set the hostedZoneId property: Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
     * 
     * @param hostedZoneId the hostedZoneId value to set.
     * @return the EndpointAutoGenerated2 object itself.
     */
    public EndpointAutoGenerated2 withHostedZoneId(String hostedZoneId) {
        this.hostedZoneId = hostedZoneId;
        return this;
    }

    /**
     * Get the port property: Specifies the port that the database engine is listening on.
     * 
     * @return the port value.
     */
    public String port() {
        return this.port;
    }

    /**
     * Set the port property: Specifies the port that the database engine is listening on.
     * 
     * @param port the port value to set.
     * @return the EndpointAutoGenerated2 object itself.
     */
    public EndpointAutoGenerated2 withPort(String port) {
        this.port = port;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("address", this.address);
        jsonWriter.writeStringField("hostedZoneId", this.hostedZoneId);
        jsonWriter.writeStringField("port", this.port);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EndpointAutoGenerated2 from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EndpointAutoGenerated2 if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EndpointAutoGenerated2.
     */
    public static EndpointAutoGenerated2 fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EndpointAutoGenerated2 deserializedEndpointAutoGenerated2 = new EndpointAutoGenerated2();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("address".equals(fieldName)) {
                    deserializedEndpointAutoGenerated2.address = reader.getString();
                } else if ("hostedZoneId".equals(fieldName)) {
                    deserializedEndpointAutoGenerated2.hostedZoneId = reader.getString();
                } else if ("port".equals(fieldName)) {
                    deserializedEndpointAutoGenerated2.port = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpointAutoGenerated2;
        });
    }
}

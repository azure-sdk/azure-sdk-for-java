// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * InstanceStateName enum.
 */
public final class InstanceStateName extends ExpandableStringEnum<InstanceStateName> {
    /**
     * Static value pending for InstanceStateName.
     */
    public static final InstanceStateName PENDING = fromString("pending");

    /**
     * Static value running for InstanceStateName.
     */
    public static final InstanceStateName RUNNING = fromString("running");

    /**
     * Static value shutting-down for InstanceStateName.
     */
    public static final InstanceStateName SHUTTING_DOWN = fromString("shutting-down");

    /**
     * Static value stopped for InstanceStateName.
     */
    public static final InstanceStateName STOPPED = fromString("stopped");

    /**
     * Static value stopping for InstanceStateName.
     */
    public static final InstanceStateName STOPPING = fromString("stopping");

    /**
     * Static value terminated for InstanceStateName.
     */
    public static final InstanceStateName TERMINATED = fromString("terminated");

    /**
     * Creates a new instance of InstanceStateName value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public InstanceStateName() {
    }

    /**
     * Creates or finds a InstanceStateName from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding InstanceStateName.
     */
    public static InstanceStateName fromString(String name) {
        return fromString(name, InstanceStateName.class);
    }

    /**
     * Gets known InstanceStateName values.
     * 
     * @return known InstanceStateName values.
     */
    public static Collection<InstanceStateName> values() {
        return values(InstanceStateName.class);
    }
}

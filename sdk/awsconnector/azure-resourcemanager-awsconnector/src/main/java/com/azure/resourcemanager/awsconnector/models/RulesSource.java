// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of RulesSource.
 */
@Fluent
public final class RulesSource implements JsonSerializable<RulesSource> {
    /*
     * Property rulesSourceList
     */
    private RulesSourceList rulesSourceList;

    /*
     * Property rulesString
     */
    private String rulesString;

    /*
     * Property statefulRules
     */
    private List<StatefulRule> statefulRules;

    /*
     * Property statelessRulesAndCustomActions
     */
    private StatelessRulesAndCustomActions statelessRulesAndCustomActions;

    /**
     * Creates an instance of RulesSource class.
     */
    public RulesSource() {
    }

    /**
     * Get the rulesSourceList property: Property rulesSourceList.
     * 
     * @return the rulesSourceList value.
     */
    public RulesSourceList rulesSourceList() {
        return this.rulesSourceList;
    }

    /**
     * Set the rulesSourceList property: Property rulesSourceList.
     * 
     * @param rulesSourceList the rulesSourceList value to set.
     * @return the RulesSource object itself.
     */
    public RulesSource withRulesSourceList(RulesSourceList rulesSourceList) {
        this.rulesSourceList = rulesSourceList;
        return this;
    }

    /**
     * Get the rulesString property: Property rulesString.
     * 
     * @return the rulesString value.
     */
    public String rulesString() {
        return this.rulesString;
    }

    /**
     * Set the rulesString property: Property rulesString.
     * 
     * @param rulesString the rulesString value to set.
     * @return the RulesSource object itself.
     */
    public RulesSource withRulesString(String rulesString) {
        this.rulesString = rulesString;
        return this;
    }

    /**
     * Get the statefulRules property: Property statefulRules.
     * 
     * @return the statefulRules value.
     */
    public List<StatefulRule> statefulRules() {
        return this.statefulRules;
    }

    /**
     * Set the statefulRules property: Property statefulRules.
     * 
     * @param statefulRules the statefulRules value to set.
     * @return the RulesSource object itself.
     */
    public RulesSource withStatefulRules(List<StatefulRule> statefulRules) {
        this.statefulRules = statefulRules;
        return this;
    }

    /**
     * Get the statelessRulesAndCustomActions property: Property statelessRulesAndCustomActions.
     * 
     * @return the statelessRulesAndCustomActions value.
     */
    public StatelessRulesAndCustomActions statelessRulesAndCustomActions() {
        return this.statelessRulesAndCustomActions;
    }

    /**
     * Set the statelessRulesAndCustomActions property: Property statelessRulesAndCustomActions.
     * 
     * @param statelessRulesAndCustomActions the statelessRulesAndCustomActions value to set.
     * @return the RulesSource object itself.
     */
    public RulesSource
        withStatelessRulesAndCustomActions(StatelessRulesAndCustomActions statelessRulesAndCustomActions) {
        this.statelessRulesAndCustomActions = statelessRulesAndCustomActions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (rulesSourceList() != null) {
            rulesSourceList().validate();
        }
        if (statefulRules() != null) {
            statefulRules().forEach(e -> e.validate());
        }
        if (statelessRulesAndCustomActions() != null) {
            statelessRulesAndCustomActions().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("rulesSourceList", this.rulesSourceList);
        jsonWriter.writeStringField("rulesString", this.rulesString);
        jsonWriter.writeArrayField("statefulRules", this.statefulRules, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("statelessRulesAndCustomActions", this.statelessRulesAndCustomActions);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RulesSource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RulesSource if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RulesSource.
     */
    public static RulesSource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RulesSource deserializedRulesSource = new RulesSource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("rulesSourceList".equals(fieldName)) {
                    deserializedRulesSource.rulesSourceList = RulesSourceList.fromJson(reader);
                } else if ("rulesString".equals(fieldName)) {
                    deserializedRulesSource.rulesString = reader.getString();
                } else if ("statefulRules".equals(fieldName)) {
                    List<StatefulRule> statefulRules = reader.readArray(reader1 -> StatefulRule.fromJson(reader1));
                    deserializedRulesSource.statefulRules = statefulRules;
                } else if ("statelessRulesAndCustomActions".equals(fieldName)) {
                    deserializedRulesSource.statelessRulesAndCustomActions
                        = StatelessRulesAndCustomActions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRulesSource;
        });
    }
}

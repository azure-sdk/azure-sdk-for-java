// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ServiceRegistry.
 */
@Fluent
public final class ServiceRegistry implements JsonSerializable<ServiceRegistry> {
    /*
     * The container name value to be used for your service discovery service. It's already specified in the task
     * definition. If the task definition that your service task specifies uses the ``bridge`` or ``host`` network mode,
     * you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task
     * definition that your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used,
     * you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you
     * can't specify both.
     */
    private String containerName;

    /*
     * The port value to be used for your service discovery service. It's already specified in the task definition. If
     * the task definition your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a
     * ``containerName`` and ``containerPort`` combination from the task definition. If the task definition your service
     * task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a
     * ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
     */
    private Integer containerPort;

    /*
     * The port value used if your service discovery service specified an SRV record. This field might be used if both
     * the ``awsvpc`` network mode and SRV records are used.
     */
    private Integer port;

    /*
     * The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is CMAP. For
     * more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
     */
    private String registryArn;

    /**
     * Creates an instance of ServiceRegistry class.
     */
    public ServiceRegistry() {
    }

    /**
     * Get the containerName property: The container name value to be used for your service discovery service. It's
     * already specified in the task definition. If the task definition that your service task specifies uses the
     * ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from
     * the task definition. If the task definition that your service task specifies uses the ``awsvpc`` network mode and
     * a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a
     * ``port`` value. However, you can't specify both.
     * 
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: The container name value to be used for your service discovery service. It's
     * already specified in the task definition. If the task definition that your service task specifies uses the
     * ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from
     * the task definition. If the task definition that your service task specifies uses the ``awsvpc`` network mode and
     * a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a
     * ``port`` value. However, you can't specify both.
     * 
     * @param containerName the containerName value to set.
     * @return the ServiceRegistry object itself.
     */
    public ServiceRegistry withContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the containerPort property: The port value to be used for your service discovery service. It's already
     * specified in the task definition. If the task definition your service task specifies uses the ``bridge`` or
     * ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task
     * definition. If the task definition your service task specifies uses the ``awsvpc`` network mode and a type SRV
     * DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port``
     * value. However, you can't specify both.
     * 
     * @return the containerPort value.
     */
    public Integer containerPort() {
        return this.containerPort;
    }

    /**
     * Set the containerPort property: The port value to be used for your service discovery service. It's already
     * specified in the task definition. If the task definition your service task specifies uses the ``bridge`` or
     * ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task
     * definition. If the task definition your service task specifies uses the ``awsvpc`` network mode and a type SRV
     * DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port``
     * value. However, you can't specify both.
     * 
     * @param containerPort the containerPort value to set.
     * @return the ServiceRegistry object itself.
     */
    public ServiceRegistry withContainerPort(Integer containerPort) {
        this.containerPort = containerPort;
        return this;
    }

    /**
     * Get the port property: The port value used if your service discovery service specified an SRV record. This field
     * might be used if both the ``awsvpc`` network mode and SRV records are used.
     * 
     * @return the port value.
     */
    public Integer port() {
        return this.port;
    }

    /**
     * Set the port property: The port value used if your service discovery service specified an SRV record. This field
     * might be used if both the ``awsvpc`` network mode and SRV records are used.
     * 
     * @param port the port value to set.
     * @return the ServiceRegistry object itself.
     */
    public ServiceRegistry withPort(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Get the registryArn property: The Amazon Resource Name (ARN) of the service registry. The currently supported
     * service registry is CMAP. For more information, see
     * [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
     * 
     * @return the registryArn value.
     */
    public String registryArn() {
        return this.registryArn;
    }

    /**
     * Set the registryArn property: The Amazon Resource Name (ARN) of the service registry. The currently supported
     * service registry is CMAP. For more information, see
     * [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
     * 
     * @param registryArn the registryArn value to set.
     * @return the ServiceRegistry object itself.
     */
    public ServiceRegistry withRegistryArn(String registryArn) {
        this.registryArn = registryArn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("containerName", this.containerName);
        jsonWriter.writeNumberField("containerPort", this.containerPort);
        jsonWriter.writeNumberField("port", this.port);
        jsonWriter.writeStringField("registryArn", this.registryArn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServiceRegistry from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServiceRegistry if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServiceRegistry.
     */
    public static ServiceRegistry fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServiceRegistry deserializedServiceRegistry = new ServiceRegistry();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("containerName".equals(fieldName)) {
                    deserializedServiceRegistry.containerName = reader.getString();
                } else if ("containerPort".equals(fieldName)) {
                    deserializedServiceRegistry.containerPort = reader.getNullable(JsonReader::getInt);
                } else if ("port".equals(fieldName)) {
                    deserializedServiceRegistry.port = reader.getNullable(JsonReader::getInt);
                } else if ("registryArn".equals(fieldName)) {
                    deserializedServiceRegistry.registryArn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServiceRegistry;
        });
    }
}

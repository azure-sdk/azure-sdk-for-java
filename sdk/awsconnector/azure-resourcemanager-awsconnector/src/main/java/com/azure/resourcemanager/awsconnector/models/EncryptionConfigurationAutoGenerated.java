// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of EncryptionConfiguration.
 */
@Fluent
public final class EncryptionConfigurationAutoGenerated
    implements JsonSerializable<EncryptionConfigurationAutoGenerated> {
    /*
     * Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service
     * (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports
     * symmetric encryption KMS keys. For more information, see [Asymmetric keys in
     * KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management
     * Service Developer Guide*.
     */
    private String replicaKmsKeyId;

    /**
     * Creates an instance of EncryptionConfigurationAutoGenerated class.
     */
    public EncryptionConfigurationAutoGenerated() {
    }

    /**
     * Get the replicaKmsKeyId property: Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key
     * stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica
     * objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in
     * KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management
     * Service Developer Guide*.
     * 
     * @return the replicaKmsKeyId value.
     */
    public String replicaKmsKeyId() {
        return this.replicaKmsKeyId;
    }

    /**
     * Set the replicaKmsKeyId property: Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key
     * stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica
     * objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in
     * KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management
     * Service Developer Guide*.
     * 
     * @param replicaKmsKeyId the replicaKmsKeyId value to set.
     * @return the EncryptionConfigurationAutoGenerated object itself.
     */
    public EncryptionConfigurationAutoGenerated withReplicaKmsKeyId(String replicaKmsKeyId) {
        this.replicaKmsKeyId = replicaKmsKeyId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("replicaKmsKeyID", this.replicaKmsKeyId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EncryptionConfigurationAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EncryptionConfigurationAutoGenerated if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EncryptionConfigurationAutoGenerated.
     */
    public static EncryptionConfigurationAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EncryptionConfigurationAutoGenerated deserializedEncryptionConfigurationAutoGenerated
                = new EncryptionConfigurationAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("replicaKmsKeyID".equals(fieldName)) {
                    deserializedEncryptionConfigurationAutoGenerated.replicaKmsKeyId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEncryptionConfigurationAutoGenerated;
        });
    }
}

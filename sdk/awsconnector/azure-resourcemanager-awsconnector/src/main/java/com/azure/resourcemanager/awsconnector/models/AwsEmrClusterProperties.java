// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsEmrCluster.
 */
@Fluent
public final class AwsEmrClusterProperties implements JsonSerializable<AwsEmrClusterProperties> {
    /*
     * <p>The applications installed on this cluster.</p>
     */
    private List<Application> applications;

    /*
     * <p>An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The
     * IAM role provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2
     * instances in an instance group.</p>
     */
    private String autoScalingRole;

    /*
     * <p>Specifies whether the cluster should terminate after completing all steps.</p>
     */
    private Boolean autoTerminate;

    /*
     * <p>The Amazon Resource Name of the cluster.</p>
     */
    private String clusterArn;

    /*
     * <p>Applies only to Amazon EMR releases 4.x and later. The list of configurations that are supplied to the Amazon
     * EMR cluster.</p>
     */
    private List<Configuration> configurations;

    /*
     * <p>Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the
     * cluster uses a custom AMI.</p>
     */
    private String customAmiId;

    /*
     * <p>The IOPS, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
     * Available in Amazon EMR releases 6.15.0 and later.</p>
     */
    private Integer ebsRootVolumeIops;

    /*
     * <p>The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2
     * instance. Available in Amazon EMR releases 4.x and later.</p>
     */
    private Integer ebsRootVolumeSize;

    /*
     * <p>The throughput, in MiB/s, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon
     * EC2 instance. Available in Amazon EMR releases 6.15.0 and later.</p>
     */
    private Integer ebsRootVolumeThroughput;

    /*
     * <p>Provides information about the Amazon EC2 instances in a cluster grouped by category. For example, key name,
     * subnet ID, IAM instance profile, and so on.</p>
     */
    private Ec2InstanceAttributes ec2InstanceAttributes;

    /*
     * <p>The unique identifier for the cluster.</p>
     */
    private String id;

    /*
     * <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding
     * 5.0.x versions.</p> </note> <p>The instance group configuration of the cluster. A value of
     * <code>INSTANCE_GROUP</code> indicates a uniform instance group configuration. A value of
     * <code>INSTANCE_FLEET</code> indicates an instance fleets configuration.</p>
     */
    private InstanceCollectionTypeEnumValue instanceCollectionType;

    /*
     * <p>Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration.
     * For more information see <a href='https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html'>Use
     * Kerberos Authentication</a> in the <i>Amazon EMR Management Guide</i>.</p>
     */
    private KerberosAttributes kerberosAttributes;

    /*
     * <p> The KMS key used for encrypting log files. This attribute is only available with Amazon EMR 5.30.0 and later,
     * excluding Amazon EMR 6.0.0. </p>
     */
    private String logEncryptionKmsKeyId;

    /*
     * <p>The path to the Amazon S3 location where logs for this cluster are stored.</p>
     */
    private String logUri;

    /*
     * <p>The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a
     * public subnet, this is the public DNS name.</p>
     */
    private String masterPublicDnsName;

    /*
     * <p>The name of the cluster. This parameter can't contain the characters &lt;, &gt;, $, |, or ` (backtick).</p>
     */
    private String name;

    /*
     * <p>An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time
     * for every hour an m1.small instance runs. Larger instances are weighted more, so an Amazon EC2 instance that is
     * roughly four times more expensive would result in the normalized instance hours being incremented by four. This
     * result is only an approximation and does not reflect the actual billing rate.</p>
     */
    private Integer normalizedInstanceHours;

    /*
     * <p>The Amazon Linux release specified in a cluster launch RunJobFlow request. If no Amazon Linux release was
     * specified, the default Amazon Linux release is shown in the response.</p>
     */
    private String osReleaseLabel;

    /*
     * <p> The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. </p>
     */
    private String outpostArn;

    /*
     * <p>Placement group configured for an Amazon EMR cluster.</p>
     */
    private List<PlacementGroupConfig> placementGroups;

    /*
     * <p>The Amazon EMR release label, which determines the version of open-source application packages installed on
     * the cluster. Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version
     * such as <code>emr-5.14.0</code>. For more information about Amazon EMR release versions and included application
     * versions and features, see <a
     * href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'>https://docs.aws.amazon.com/emr/latest/ReleaseGuide/<
     * /a>. The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use
     * <code>AmiVersion</code>.</p>
     */
    private String releaseLabel;

    /*
     * <p>Applies only when <code>CustomAmiID</code> is used. Specifies the type of updates that the Amazon Linux AMI
     * package repositories apply when an instance boots using the AMI.</p>
     */
    private RepoUpgradeOnBootEnumValue repoUpgradeOnBoot;

    /*
     * <p>The AMI version requested for this cluster.</p>
     */
    private String requestedAmiVersion;

    /*
     * <p>The AMI version running on this cluster.</p>
     */
    private String runningAmiVersion;

    /*
     * <p>The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an
     * instance group is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code> indicates that Amazon EMR terminates nodes at
     * the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option
     * is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version.
     * <code>TERMINATE_AT_TASK_COMPLETION</code> indicates that Amazon EMR adds nodes to a deny list and drains tasks
     * from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either
     * behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to
     * HDFS corruption. <code>TERMINATE_AT_TASK_COMPLETION</code> is available only in Amazon EMR releases 4.1.0 and
     * later, and is the default for versions of Amazon EMR earlier than 5.1.0.</p>
     */
    private ScaleDownBehaviorEnumValue scaleDownBehavior;

    /*
     * <p>The name of the security configuration applied to the cluster.</p>
     */
    private String securityConfiguration;

    /*
     * <p>The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.</p>
     */
    private String serviceRole;

    /*
     * <p>The current status details about the cluster.</p>
     */
    private ClusterStatusAutoGenerated status;

    /*
     * <p>Specifies the number of steps that can be executed concurrently.</p>
     */
    private Integer stepConcurrencyLevel;

    /*
     * <p>A list of tags associated with a cluster.</p>
     */
    private List<TagAutoGenerated31> tags;

    /*
     * <p>Indicates whether Amazon EMR will lock the cluster to prevent the Amazon EC2 instances from being terminated
     * by an API call or user intervention, or in the event of a cluster error.</p>
     */
    private Boolean terminationProtected;

    /*
     * <p>Indicates whether Amazon EMR should gracefully replace Amazon EC2 core instances that have degraded within the
     * cluster.</p>
     */
    private Boolean unhealthyNodeReplacement;

    /*
     * <p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with
     * the cluster. When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR
     * cluster actions on the cluster that their IAM policies allow. When <code>false</code>, only the IAM principal
     * that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions, regardless
     * of IAM permissions policies attached to other IAM principals.</p> <p>The default value is <code>true</code> if a
     * value is not provided when creating a cluster using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a
     * href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'>create-cluster</a> command, or
     * the Amazon Web Services Management Console.</p>
     */
    private Boolean visibleToAllUsers;

    /**
     * Creates an instance of AwsEmrClusterProperties class.
     */
    public AwsEmrClusterProperties() {
    }

    /**
     * Get the applications property: &lt;p&gt;The applications installed on this cluster.&lt;/p&gt;.
     * 
     * @return the applications value.
     */
    public List<Application> applications() {
        return this.applications;
    }

    /**
     * Set the applications property: &lt;p&gt;The applications installed on this cluster.&lt;/p&gt;.
     * 
     * @param applications the applications value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withApplications(List<Application> applications) {
        this.applications = applications;
        return this;
    }

    /**
     * Get the autoScalingRole property: &lt;p&gt;An IAM role for automatic scaling policies. The default role is
     * &lt;code&gt;EMR_AutoScaling_DefaultRole&lt;/code&gt;. The IAM role provides permissions that the automatic
     * scaling feature requires to launch and terminate Amazon EC2 instances in an instance group.&lt;/p&gt;.
     * 
     * @return the autoScalingRole value.
     */
    public String autoScalingRole() {
        return this.autoScalingRole;
    }

    /**
     * Set the autoScalingRole property: &lt;p&gt;An IAM role for automatic scaling policies. The default role is
     * &lt;code&gt;EMR_AutoScaling_DefaultRole&lt;/code&gt;. The IAM role provides permissions that the automatic
     * scaling feature requires to launch and terminate Amazon EC2 instances in an instance group.&lt;/p&gt;.
     * 
     * @param autoScalingRole the autoScalingRole value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withAutoScalingRole(String autoScalingRole) {
        this.autoScalingRole = autoScalingRole;
        return this;
    }

    /**
     * Get the autoTerminate property: &lt;p&gt;Specifies whether the cluster should terminate after completing all
     * steps.&lt;/p&gt;.
     * 
     * @return the autoTerminate value.
     */
    public Boolean autoTerminate() {
        return this.autoTerminate;
    }

    /**
     * Set the autoTerminate property: &lt;p&gt;Specifies whether the cluster should terminate after completing all
     * steps.&lt;/p&gt;.
     * 
     * @param autoTerminate the autoTerminate value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withAutoTerminate(Boolean autoTerminate) {
        this.autoTerminate = autoTerminate;
        return this;
    }

    /**
     * Get the clusterArn property: &lt;p&gt;The Amazon Resource Name of the cluster.&lt;/p&gt;.
     * 
     * @return the clusterArn value.
     */
    public String clusterArn() {
        return this.clusterArn;
    }

    /**
     * Set the clusterArn property: &lt;p&gt;The Amazon Resource Name of the cluster.&lt;/p&gt;.
     * 
     * @param clusterArn the clusterArn value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withClusterArn(String clusterArn) {
        this.clusterArn = clusterArn;
        return this;
    }

    /**
     * Get the configurations property: &lt;p&gt;Applies only to Amazon EMR releases 4.x and later. The list of
     * configurations that are supplied to the Amazon EMR cluster.&lt;/p&gt;.
     * 
     * @return the configurations value.
     */
    public List<Configuration> configurations() {
        return this.configurations;
    }

    /**
     * Set the configurations property: &lt;p&gt;Applies only to Amazon EMR releases 4.x and later. The list of
     * configurations that are supplied to the Amazon EMR cluster.&lt;/p&gt;.
     * 
     * @param configurations the configurations value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withConfigurations(List<Configuration> configurations) {
        this.configurations = configurations;
        return this;
    }

    /**
     * Get the customAmiId property: &lt;p&gt;Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom
     * Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.&lt;/p&gt;.
     * 
     * @return the customAmiId value.
     */
    public String customAmiId() {
        return this.customAmiId;
    }

    /**
     * Set the customAmiId property: &lt;p&gt;Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom
     * Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.&lt;/p&gt;.
     * 
     * @param customAmiId the customAmiId value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withCustomAmiId(String customAmiId) {
        this.customAmiId = customAmiId;
        return this;
    }

    /**
     * Get the ebsRootVolumeIops property: &lt;p&gt;The IOPS, of the Amazon EBS root device volume of the Linux AMI that
     * is used for each Amazon EC2 instance. Available in Amazon EMR releases 6.15.0 and later.&lt;/p&gt;.
     * 
     * @return the ebsRootVolumeIops value.
     */
    public Integer ebsRootVolumeIops() {
        return this.ebsRootVolumeIops;
    }

    /**
     * Set the ebsRootVolumeIops property: &lt;p&gt;The IOPS, of the Amazon EBS root device volume of the Linux AMI that
     * is used for each Amazon EC2 instance. Available in Amazon EMR releases 6.15.0 and later.&lt;/p&gt;.
     * 
     * @param ebsRootVolumeIops the ebsRootVolumeIops value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withEbsRootVolumeIops(Integer ebsRootVolumeIops) {
        this.ebsRootVolumeIops = ebsRootVolumeIops;
        return this;
    }

    /**
     * Get the ebsRootVolumeSize property: &lt;p&gt;The size, in GiB, of the Amazon EBS root device volume of the Linux
     * AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 4.x and later.&lt;/p&gt;.
     * 
     * @return the ebsRootVolumeSize value.
     */
    public Integer ebsRootVolumeSize() {
        return this.ebsRootVolumeSize;
    }

    /**
     * Set the ebsRootVolumeSize property: &lt;p&gt;The size, in GiB, of the Amazon EBS root device volume of the Linux
     * AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 4.x and later.&lt;/p&gt;.
     * 
     * @param ebsRootVolumeSize the ebsRootVolumeSize value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withEbsRootVolumeSize(Integer ebsRootVolumeSize) {
        this.ebsRootVolumeSize = ebsRootVolumeSize;
        return this;
    }

    /**
     * Get the ebsRootVolumeThroughput property: &lt;p&gt;The throughput, in MiB/s, of the Amazon EBS root device volume
     * of the Linux AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 6.15.0 and
     * later.&lt;/p&gt;.
     * 
     * @return the ebsRootVolumeThroughput value.
     */
    public Integer ebsRootVolumeThroughput() {
        return this.ebsRootVolumeThroughput;
    }

    /**
     * Set the ebsRootVolumeThroughput property: &lt;p&gt;The throughput, in MiB/s, of the Amazon EBS root device volume
     * of the Linux AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 6.15.0 and
     * later.&lt;/p&gt;.
     * 
     * @param ebsRootVolumeThroughput the ebsRootVolumeThroughput value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withEbsRootVolumeThroughput(Integer ebsRootVolumeThroughput) {
        this.ebsRootVolumeThroughput = ebsRootVolumeThroughput;
        return this;
    }

    /**
     * Get the ec2InstanceAttributes property: &lt;p&gt;Provides information about the Amazon EC2 instances in a cluster
     * grouped by category. For example, key name, subnet ID, IAM instance profile, and so on.&lt;/p&gt;.
     * 
     * @return the ec2InstanceAttributes value.
     */
    public Ec2InstanceAttributes ec2InstanceAttributes() {
        return this.ec2InstanceAttributes;
    }

    /**
     * Set the ec2InstanceAttributes property: &lt;p&gt;Provides information about the Amazon EC2 instances in a cluster
     * grouped by category. For example, key name, subnet ID, IAM instance profile, and so on.&lt;/p&gt;.
     * 
     * @param ec2InstanceAttributes the ec2InstanceAttributes value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withEc2InstanceAttributes(Ec2InstanceAttributes ec2InstanceAttributes) {
        this.ec2InstanceAttributes = ec2InstanceAttributes;
        return this;
    }

    /**
     * Get the id property: &lt;p&gt;The unique identifier for the cluster.&lt;/p&gt;.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: &lt;p&gt;The unique identifier for the cluster.&lt;/p&gt;.
     * 
     * @param id the id value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the instanceCollectionType property: &lt;note&gt; &lt;p&gt;The instance fleet configuration is available only
     * in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;The instance
     * group configuration of the cluster. A value of &lt;code&gt;INSTANCE_GROUP&lt;/code&gt; indicates a uniform
     * instance group configuration. A value of &lt;code&gt;INSTANCE_FLEET&lt;/code&gt; indicates an instance fleets
     * configuration.&lt;/p&gt;.
     * 
     * @return the instanceCollectionType value.
     */
    public InstanceCollectionTypeEnumValue instanceCollectionType() {
        return this.instanceCollectionType;
    }

    /**
     * Set the instanceCollectionType property: &lt;note&gt; &lt;p&gt;The instance fleet configuration is available only
     * in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;The instance
     * group configuration of the cluster. A value of &lt;code&gt;INSTANCE_GROUP&lt;/code&gt; indicates a uniform
     * instance group configuration. A value of &lt;code&gt;INSTANCE_FLEET&lt;/code&gt; indicates an instance fleets
     * configuration.&lt;/p&gt;.
     * 
     * @param instanceCollectionType the instanceCollectionType value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withInstanceCollectionType(InstanceCollectionTypeEnumValue instanceCollectionType) {
        this.instanceCollectionType = instanceCollectionType;
        return this;
    }

    /**
     * Get the kerberosAttributes property: &lt;p&gt;Attributes for Kerberos configuration when Kerberos authentication
     * is enabled using a security configuration. For more information see &lt;a
     * href='https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html'&gt;Use Kerberos
     * Authentication&lt;/a&gt; in the &lt;i&gt;Amazon EMR Management Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @return the kerberosAttributes value.
     */
    public KerberosAttributes kerberosAttributes() {
        return this.kerberosAttributes;
    }

    /**
     * Set the kerberosAttributes property: &lt;p&gt;Attributes for Kerberos configuration when Kerberos authentication
     * is enabled using a security configuration. For more information see &lt;a
     * href='https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html'&gt;Use Kerberos
     * Authentication&lt;/a&gt; in the &lt;i&gt;Amazon EMR Management Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @param kerberosAttributes the kerberosAttributes value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withKerberosAttributes(KerberosAttributes kerberosAttributes) {
        this.kerberosAttributes = kerberosAttributes;
        return this;
    }

    /**
     * Get the logEncryptionKmsKeyId property: &lt;p&gt; The KMS key used for encrypting log files. This attribute is
     * only available with Amazon EMR 5.30.0 and later, excluding Amazon EMR 6.0.0. &lt;/p&gt;.
     * 
     * @return the logEncryptionKmsKeyId value.
     */
    public String logEncryptionKmsKeyId() {
        return this.logEncryptionKmsKeyId;
    }

    /**
     * Set the logEncryptionKmsKeyId property: &lt;p&gt; The KMS key used for encrypting log files. This attribute is
     * only available with Amazon EMR 5.30.0 and later, excluding Amazon EMR 6.0.0. &lt;/p&gt;.
     * 
     * @param logEncryptionKmsKeyId the logEncryptionKmsKeyId value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withLogEncryptionKmsKeyId(String logEncryptionKmsKeyId) {
        this.logEncryptionKmsKeyId = logEncryptionKmsKeyId;
        return this;
    }

    /**
     * Get the logUri property: &lt;p&gt;The path to the Amazon S3 location where logs for this cluster are
     * stored.&lt;/p&gt;.
     * 
     * @return the logUri value.
     */
    public String logUri() {
        return this.logUri;
    }

    /**
     * Set the logUri property: &lt;p&gt;The path to the Amazon S3 location where logs for this cluster are
     * stored.&lt;/p&gt;.
     * 
     * @param logUri the logUri value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }

    /**
     * Get the masterPublicDnsName property: &lt;p&gt;The DNS name of the master node. If the cluster is on a private
     * subnet, this is the private DNS name. On a public subnet, this is the public DNS name.&lt;/p&gt;.
     * 
     * @return the masterPublicDnsName value.
     */
    public String masterPublicDnsName() {
        return this.masterPublicDnsName;
    }

    /**
     * Set the masterPublicDnsName property: &lt;p&gt;The DNS name of the master node. If the cluster is on a private
     * subnet, this is the private DNS name. On a public subnet, this is the public DNS name.&lt;/p&gt;.
     * 
     * @param masterPublicDnsName the masterPublicDnsName value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withMasterPublicDnsName(String masterPublicDnsName) {
        this.masterPublicDnsName = masterPublicDnsName;
        return this;
    }

    /**
     * Get the name property: &lt;p&gt;The name of the cluster. This parameter can't contain the characters &amp;lt;,
     * &amp;gt;, $, |, or ` (backtick).&lt;/p&gt;.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: &lt;p&gt;The name of the cluster. This parameter can't contain the characters &amp;lt;,
     * &amp;gt;, $, |, or ` (backtick).&lt;/p&gt;.
     * 
     * @param name the name value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the normalizedInstanceHours property: &lt;p&gt;An approximation of the cost of the cluster, represented in
     * m1.small/hours. This value is incremented one time for every hour an m1.small instance runs. Larger instances are
     * weighted more, so an Amazon EC2 instance that is roughly four times more expensive would result in the normalized
     * instance hours being incremented by four. This result is only an approximation and does not reflect the actual
     * billing rate.&lt;/p&gt;.
     * 
     * @return the normalizedInstanceHours value.
     */
    public Integer normalizedInstanceHours() {
        return this.normalizedInstanceHours;
    }

    /**
     * Set the normalizedInstanceHours property: &lt;p&gt;An approximation of the cost of the cluster, represented in
     * m1.small/hours. This value is incremented one time for every hour an m1.small instance runs. Larger instances are
     * weighted more, so an Amazon EC2 instance that is roughly four times more expensive would result in the normalized
     * instance hours being incremented by four. This result is only an approximation and does not reflect the actual
     * billing rate.&lt;/p&gt;.
     * 
     * @param normalizedInstanceHours the normalizedInstanceHours value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withNormalizedInstanceHours(Integer normalizedInstanceHours) {
        this.normalizedInstanceHours = normalizedInstanceHours;
        return this;
    }

    /**
     * Get the osReleaseLabel property: &lt;p&gt;The Amazon Linux release specified in a cluster launch RunJobFlow
     * request. If no Amazon Linux release was specified, the default Amazon Linux release is shown in the
     * response.&lt;/p&gt;.
     * 
     * @return the osReleaseLabel value.
     */
    public String osReleaseLabel() {
        return this.osReleaseLabel;
    }

    /**
     * Set the osReleaseLabel property: &lt;p&gt;The Amazon Linux release specified in a cluster launch RunJobFlow
     * request. If no Amazon Linux release was specified, the default Amazon Linux release is shown in the
     * response.&lt;/p&gt;.
     * 
     * @param osReleaseLabel the osReleaseLabel value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withOsReleaseLabel(String osReleaseLabel) {
        this.osReleaseLabel = osReleaseLabel;
        return this;
    }

    /**
     * Get the outpostArn property: &lt;p&gt; The Amazon Resource Name (ARN) of the Outpost where the cluster is
     * launched. &lt;/p&gt;.
     * 
     * @return the outpostArn value.
     */
    public String outpostArn() {
        return this.outpostArn;
    }

    /**
     * Set the outpostArn property: &lt;p&gt; The Amazon Resource Name (ARN) of the Outpost where the cluster is
     * launched. &lt;/p&gt;.
     * 
     * @param outpostArn the outpostArn value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withOutpostArn(String outpostArn) {
        this.outpostArn = outpostArn;
        return this;
    }

    /**
     * Get the placementGroups property: &lt;p&gt;Placement group configured for an Amazon EMR cluster.&lt;/p&gt;.
     * 
     * @return the placementGroups value.
     */
    public List<PlacementGroupConfig> placementGroups() {
        return this.placementGroups;
    }

    /**
     * Set the placementGroups property: &lt;p&gt;Placement group configured for an Amazon EMR cluster.&lt;/p&gt;.
     * 
     * @param placementGroups the placementGroups value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withPlacementGroups(List<PlacementGroupConfig> placementGroups) {
        this.placementGroups = placementGroups;
        return this;
    }

    /**
     * Get the releaseLabel property: &lt;p&gt;The Amazon EMR release label, which determines the version of open-source
     * application packages installed on the cluster. Release labels are in the form &lt;code&gt;emr-x.x.x&lt;/code&gt;,
     * where x.x.x is an Amazon EMR release version such as &lt;code&gt;emr-5.14.0&lt;/code&gt;. For more information
     * about Amazon EMR release versions and included application versions and features, see &lt;a
     * href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'&gt;https://docs.aws.amazon.com/emr/latest/ReleaseGuide/&lt;/a&gt;.
     * The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use
     * &lt;code&gt;AmiVersion&lt;/code&gt;.&lt;/p&gt;.
     * 
     * @return the releaseLabel value.
     */
    public String releaseLabel() {
        return this.releaseLabel;
    }

    /**
     * Set the releaseLabel property: &lt;p&gt;The Amazon EMR release label, which determines the version of open-source
     * application packages installed on the cluster. Release labels are in the form &lt;code&gt;emr-x.x.x&lt;/code&gt;,
     * where x.x.x is an Amazon EMR release version such as &lt;code&gt;emr-5.14.0&lt;/code&gt;. For more information
     * about Amazon EMR release versions and included application versions and features, see &lt;a
     * href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'&gt;https://docs.aws.amazon.com/emr/latest/ReleaseGuide/&lt;/a&gt;.
     * The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use
     * &lt;code&gt;AmiVersion&lt;/code&gt;.&lt;/p&gt;.
     * 
     * @param releaseLabel the releaseLabel value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withReleaseLabel(String releaseLabel) {
        this.releaseLabel = releaseLabel;
        return this;
    }

    /**
     * Get the repoUpgradeOnBoot property: &lt;p&gt;Applies only when &lt;code&gt;CustomAmiID&lt;/code&gt; is used.
     * Specifies the type of updates that the Amazon Linux AMI package repositories apply when an instance boots using
     * the AMI.&lt;/p&gt;.
     * 
     * @return the repoUpgradeOnBoot value.
     */
    public RepoUpgradeOnBootEnumValue repoUpgradeOnBoot() {
        return this.repoUpgradeOnBoot;
    }

    /**
     * Set the repoUpgradeOnBoot property: &lt;p&gt;Applies only when &lt;code&gt;CustomAmiID&lt;/code&gt; is used.
     * Specifies the type of updates that the Amazon Linux AMI package repositories apply when an instance boots using
     * the AMI.&lt;/p&gt;.
     * 
     * @param repoUpgradeOnBoot the repoUpgradeOnBoot value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withRepoUpgradeOnBoot(RepoUpgradeOnBootEnumValue repoUpgradeOnBoot) {
        this.repoUpgradeOnBoot = repoUpgradeOnBoot;
        return this;
    }

    /**
     * Get the requestedAmiVersion property: &lt;p&gt;The AMI version requested for this cluster.&lt;/p&gt;.
     * 
     * @return the requestedAmiVersion value.
     */
    public String requestedAmiVersion() {
        return this.requestedAmiVersion;
    }

    /**
     * Set the requestedAmiVersion property: &lt;p&gt;The AMI version requested for this cluster.&lt;/p&gt;.
     * 
     * @param requestedAmiVersion the requestedAmiVersion value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withRequestedAmiVersion(String requestedAmiVersion) {
        this.requestedAmiVersion = requestedAmiVersion;
        return this;
    }

    /**
     * Get the runningAmiVersion property: &lt;p&gt;The AMI version running on this cluster.&lt;/p&gt;.
     * 
     * @return the runningAmiVersion value.
     */
    public String runningAmiVersion() {
        return this.runningAmiVersion;
    }

    /**
     * Set the runningAmiVersion property: &lt;p&gt;The AMI version running on this cluster.&lt;/p&gt;.
     * 
     * @param runningAmiVersion the runningAmiVersion value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withRunningAmiVersion(String runningAmiVersion) {
        this.runningAmiVersion = runningAmiVersion;
        return this;
    }

    /**
     * Get the scaleDownBehavior property: &lt;p&gt;The way that individual Amazon EC2 instances terminate when an
     * automatic scale-in activity occurs or an instance group is resized.
     * &lt;code&gt;TERMINATE_AT_INSTANCE_HOUR&lt;/code&gt; indicates that Amazon EMR terminates nodes at the
     * instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is
     * only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version.
     * &lt;code&gt;TERMINATE_AT_TASK_COMPLETION&lt;/code&gt; indicates that Amazon EMR adds nodes to a deny list and
     * drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary.
     * With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could
     * lead to HDFS corruption. &lt;code&gt;TERMINATE_AT_TASK_COMPLETION&lt;/code&gt; is available only in Amazon EMR
     * releases 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.&lt;/p&gt;.
     * 
     * @return the scaleDownBehavior value.
     */
    public ScaleDownBehaviorEnumValue scaleDownBehavior() {
        return this.scaleDownBehavior;
    }

    /**
     * Set the scaleDownBehavior property: &lt;p&gt;The way that individual Amazon EC2 instances terminate when an
     * automatic scale-in activity occurs or an instance group is resized.
     * &lt;code&gt;TERMINATE_AT_INSTANCE_HOUR&lt;/code&gt; indicates that Amazon EMR terminates nodes at the
     * instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is
     * only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version.
     * &lt;code&gt;TERMINATE_AT_TASK_COMPLETION&lt;/code&gt; indicates that Amazon EMR adds nodes to a deny list and
     * drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary.
     * With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could
     * lead to HDFS corruption. &lt;code&gt;TERMINATE_AT_TASK_COMPLETION&lt;/code&gt; is available only in Amazon EMR
     * releases 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.&lt;/p&gt;.
     * 
     * @param scaleDownBehavior the scaleDownBehavior value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withScaleDownBehavior(ScaleDownBehaviorEnumValue scaleDownBehavior) {
        this.scaleDownBehavior = scaleDownBehavior;
        return this;
    }

    /**
     * Get the securityConfiguration property: &lt;p&gt;The name of the security configuration applied to the
     * cluster.&lt;/p&gt;.
     * 
     * @return the securityConfiguration value.
     */
    public String securityConfiguration() {
        return this.securityConfiguration;
    }

    /**
     * Set the securityConfiguration property: &lt;p&gt;The name of the security configuration applied to the
     * cluster.&lt;/p&gt;.
     * 
     * @param securityConfiguration the securityConfiguration value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withSecurityConfiguration(String securityConfiguration) {
        this.securityConfiguration = securityConfiguration;
        return this;
    }

    /**
     * Get the serviceRole property: &lt;p&gt;The IAM role that Amazon EMR assumes in order to access Amazon Web
     * Services resources on your behalf.&lt;/p&gt;.
     * 
     * @return the serviceRole value.
     */
    public String serviceRole() {
        return this.serviceRole;
    }

    /**
     * Set the serviceRole property: &lt;p&gt;The IAM role that Amazon EMR assumes in order to access Amazon Web
     * Services resources on your behalf.&lt;/p&gt;.
     * 
     * @param serviceRole the serviceRole value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withServiceRole(String serviceRole) {
        this.serviceRole = serviceRole;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The current status details about the cluster.&lt;/p&gt;.
     * 
     * @return the status value.
     */
    public ClusterStatusAutoGenerated status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The current status details about the cluster.&lt;/p&gt;.
     * 
     * @param status the status value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withStatus(ClusterStatusAutoGenerated status) {
        this.status = status;
        return this;
    }

    /**
     * Get the stepConcurrencyLevel property: &lt;p&gt;Specifies the number of steps that can be executed
     * concurrently.&lt;/p&gt;.
     * 
     * @return the stepConcurrencyLevel value.
     */
    public Integer stepConcurrencyLevel() {
        return this.stepConcurrencyLevel;
    }

    /**
     * Set the stepConcurrencyLevel property: &lt;p&gt;Specifies the number of steps that can be executed
     * concurrently.&lt;/p&gt;.
     * 
     * @param stepConcurrencyLevel the stepConcurrencyLevel value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withStepConcurrencyLevel(Integer stepConcurrencyLevel) {
        this.stepConcurrencyLevel = stepConcurrencyLevel;
        return this;
    }

    /**
     * Get the tags property: &lt;p&gt;A list of tags associated with a cluster.&lt;/p&gt;.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated31> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: &lt;p&gt;A list of tags associated with a cluster.&lt;/p&gt;.
     * 
     * @param tags the tags value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withTags(List<TagAutoGenerated31> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the terminationProtected property: &lt;p&gt;Indicates whether Amazon EMR will lock the cluster to prevent the
     * Amazon EC2 instances from being terminated by an API call or user intervention, or in the event of a cluster
     * error.&lt;/p&gt;.
     * 
     * @return the terminationProtected value.
     */
    public Boolean terminationProtected() {
        return this.terminationProtected;
    }

    /**
     * Set the terminationProtected property: &lt;p&gt;Indicates whether Amazon EMR will lock the cluster to prevent the
     * Amazon EC2 instances from being terminated by an API call or user intervention, or in the event of a cluster
     * error.&lt;/p&gt;.
     * 
     * @param terminationProtected the terminationProtected value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withTerminationProtected(Boolean terminationProtected) {
        this.terminationProtected = terminationProtected;
        return this;
    }

    /**
     * Get the unhealthyNodeReplacement property: &lt;p&gt;Indicates whether Amazon EMR should gracefully replace Amazon
     * EC2 core instances that have degraded within the cluster.&lt;/p&gt;.
     * 
     * @return the unhealthyNodeReplacement value.
     */
    public Boolean unhealthyNodeReplacement() {
        return this.unhealthyNodeReplacement;
    }

    /**
     * Set the unhealthyNodeReplacement property: &lt;p&gt;Indicates whether Amazon EMR should gracefully replace Amazon
     * EC2 core instances that have degraded within the cluster.&lt;/p&gt;.
     * 
     * @param unhealthyNodeReplacement the unhealthyNodeReplacement value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withUnhealthyNodeReplacement(Boolean unhealthyNodeReplacement) {
        this.unhealthyNodeReplacement = unhealthyNodeReplacement;
        return this;
    }

    /**
     * Get the visibleToAllUsers property: &lt;p&gt;Indicates whether the cluster is visible to IAM principals in the
     * Amazon Web Services account associated with the cluster. When &lt;code&gt;true&lt;/code&gt;, IAM principals in
     * the Amazon Web Services account can perform Amazon EMR cluster actions on the cluster that their IAM policies
     * allow. When &lt;code&gt;false&lt;/code&gt;, only the IAM principal that created the cluster and the Amazon Web
     * Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached to
     * other IAM principals.&lt;/p&gt; &lt;p&gt;The default value is &lt;code&gt;true&lt;/code&gt; if a value is not
     * provided when creating a cluster using the Amazon EMR API &lt;a&gt;RunJobFlow&lt;/a&gt; command, the CLI &lt;a
     * href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'&gt;create-cluster&lt;/a&gt;
     * command, or the Amazon Web Services Management Console.&lt;/p&gt;.
     * 
     * @return the visibleToAllUsers value.
     */
    public Boolean visibleToAllUsers() {
        return this.visibleToAllUsers;
    }

    /**
     * Set the visibleToAllUsers property: &lt;p&gt;Indicates whether the cluster is visible to IAM principals in the
     * Amazon Web Services account associated with the cluster. When &lt;code&gt;true&lt;/code&gt;, IAM principals in
     * the Amazon Web Services account can perform Amazon EMR cluster actions on the cluster that their IAM policies
     * allow. When &lt;code&gt;false&lt;/code&gt;, only the IAM principal that created the cluster and the Amazon Web
     * Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached to
     * other IAM principals.&lt;/p&gt; &lt;p&gt;The default value is &lt;code&gt;true&lt;/code&gt; if a value is not
     * provided when creating a cluster using the Amazon EMR API &lt;a&gt;RunJobFlow&lt;/a&gt; command, the CLI &lt;a
     * href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'&gt;create-cluster&lt;/a&gt;
     * command, or the Amazon Web Services Management Console.&lt;/p&gt;.
     * 
     * @param visibleToAllUsers the visibleToAllUsers value to set.
     * @return the AwsEmrClusterProperties object itself.
     */
    public AwsEmrClusterProperties withVisibleToAllUsers(Boolean visibleToAllUsers) {
        this.visibleToAllUsers = visibleToAllUsers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (applications() != null) {
            applications().forEach(e -> e.validate());
        }
        if (configurations() != null) {
            configurations().forEach(e -> e.validate());
        }
        if (ec2InstanceAttributes() != null) {
            ec2InstanceAttributes().validate();
        }
        if (instanceCollectionType() != null) {
            instanceCollectionType().validate();
        }
        if (kerberosAttributes() != null) {
            kerberosAttributes().validate();
        }
        if (placementGroups() != null) {
            placementGroups().forEach(e -> e.validate());
        }
        if (repoUpgradeOnBoot() != null) {
            repoUpgradeOnBoot().validate();
        }
        if (scaleDownBehavior() != null) {
            scaleDownBehavior().validate();
        }
        if (status() != null) {
            status().validate();
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("applications", this.applications, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("autoScalingRole", this.autoScalingRole);
        jsonWriter.writeBooleanField("autoTerminate", this.autoTerminate);
        jsonWriter.writeStringField("clusterArn", this.clusterArn);
        jsonWriter.writeArrayField("configurations", this.configurations,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("customAmiId", this.customAmiId);
        jsonWriter.writeNumberField("ebsRootVolumeIops", this.ebsRootVolumeIops);
        jsonWriter.writeNumberField("ebsRootVolumeSize", this.ebsRootVolumeSize);
        jsonWriter.writeNumberField("ebsRootVolumeThroughput", this.ebsRootVolumeThroughput);
        jsonWriter.writeJsonField("ec2InstanceAttributes", this.ec2InstanceAttributes);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("instanceCollectionType", this.instanceCollectionType);
        jsonWriter.writeJsonField("kerberosAttributes", this.kerberosAttributes);
        jsonWriter.writeStringField("logEncryptionKmsKeyId", this.logEncryptionKmsKeyId);
        jsonWriter.writeStringField("logUri", this.logUri);
        jsonWriter.writeStringField("masterPublicDnsName", this.masterPublicDnsName);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeNumberField("normalizedInstanceHours", this.normalizedInstanceHours);
        jsonWriter.writeStringField("osReleaseLabel", this.osReleaseLabel);
        jsonWriter.writeStringField("outpostArn", this.outpostArn);
        jsonWriter.writeArrayField("placementGroups", this.placementGroups,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("releaseLabel", this.releaseLabel);
        jsonWriter.writeJsonField("repoUpgradeOnBoot", this.repoUpgradeOnBoot);
        jsonWriter.writeStringField("requestedAmiVersion", this.requestedAmiVersion);
        jsonWriter.writeStringField("runningAmiVersion", this.runningAmiVersion);
        jsonWriter.writeJsonField("scaleDownBehavior", this.scaleDownBehavior);
        jsonWriter.writeStringField("securityConfiguration", this.securityConfiguration);
        jsonWriter.writeStringField("serviceRole", this.serviceRole);
        jsonWriter.writeJsonField("status", this.status);
        jsonWriter.writeNumberField("stepConcurrencyLevel", this.stepConcurrencyLevel);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeBooleanField("terminationProtected", this.terminationProtected);
        jsonWriter.writeBooleanField("unhealthyNodeReplacement", this.unhealthyNodeReplacement);
        jsonWriter.writeBooleanField("visibleToAllUsers", this.visibleToAllUsers);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsEmrClusterProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsEmrClusterProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsEmrClusterProperties.
     */
    public static AwsEmrClusterProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsEmrClusterProperties deserializedAwsEmrClusterProperties = new AwsEmrClusterProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("applications".equals(fieldName)) {
                    List<Application> applications = reader.readArray(reader1 -> Application.fromJson(reader1));
                    deserializedAwsEmrClusterProperties.applications = applications;
                } else if ("autoScalingRole".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.autoScalingRole = reader.getString();
                } else if ("autoTerminate".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.autoTerminate = reader.getNullable(JsonReader::getBoolean);
                } else if ("clusterArn".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.clusterArn = reader.getString();
                } else if ("configurations".equals(fieldName)) {
                    List<Configuration> configurations = reader.readArray(reader1 -> Configuration.fromJson(reader1));
                    deserializedAwsEmrClusterProperties.configurations = configurations;
                } else if ("customAmiId".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.customAmiId = reader.getString();
                } else if ("ebsRootVolumeIops".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.ebsRootVolumeIops = reader.getNullable(JsonReader::getInt);
                } else if ("ebsRootVolumeSize".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.ebsRootVolumeSize = reader.getNullable(JsonReader::getInt);
                } else if ("ebsRootVolumeThroughput".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.ebsRootVolumeThroughput
                        = reader.getNullable(JsonReader::getInt);
                } else if ("ec2InstanceAttributes".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.ec2InstanceAttributes = Ec2InstanceAttributes.fromJson(reader);
                } else if ("id".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.id = reader.getString();
                } else if ("instanceCollectionType".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.instanceCollectionType
                        = InstanceCollectionTypeEnumValue.fromJson(reader);
                } else if ("kerberosAttributes".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.kerberosAttributes = KerberosAttributes.fromJson(reader);
                } else if ("logEncryptionKmsKeyId".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.logEncryptionKmsKeyId = reader.getString();
                } else if ("logUri".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.logUri = reader.getString();
                } else if ("masterPublicDnsName".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.masterPublicDnsName = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.name = reader.getString();
                } else if ("normalizedInstanceHours".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.normalizedInstanceHours
                        = reader.getNullable(JsonReader::getInt);
                } else if ("osReleaseLabel".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.osReleaseLabel = reader.getString();
                } else if ("outpostArn".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.outpostArn = reader.getString();
                } else if ("placementGroups".equals(fieldName)) {
                    List<PlacementGroupConfig> placementGroups
                        = reader.readArray(reader1 -> PlacementGroupConfig.fromJson(reader1));
                    deserializedAwsEmrClusterProperties.placementGroups = placementGroups;
                } else if ("releaseLabel".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.releaseLabel = reader.getString();
                } else if ("repoUpgradeOnBoot".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.repoUpgradeOnBoot = RepoUpgradeOnBootEnumValue.fromJson(reader);
                } else if ("requestedAmiVersion".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.requestedAmiVersion = reader.getString();
                } else if ("runningAmiVersion".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.runningAmiVersion = reader.getString();
                } else if ("scaleDownBehavior".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.scaleDownBehavior = ScaleDownBehaviorEnumValue.fromJson(reader);
                } else if ("securityConfiguration".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.securityConfiguration = reader.getString();
                } else if ("serviceRole".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.serviceRole = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.status = ClusterStatusAutoGenerated.fromJson(reader);
                } else if ("stepConcurrencyLevel".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.stepConcurrencyLevel = reader.getNullable(JsonReader::getInt);
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated31> tags = reader.readArray(reader1 -> TagAutoGenerated31.fromJson(reader1));
                    deserializedAwsEmrClusterProperties.tags = tags;
                } else if ("terminationProtected".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.terminationProtected
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("unhealthyNodeReplacement".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.unhealthyNodeReplacement
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("visibleToAllUsers".equals(fieldName)) {
                    deserializedAwsEmrClusterProperties.visibleToAllUsers = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsEmrClusterProperties;
        });
    }
}

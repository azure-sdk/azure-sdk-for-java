// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsSsmResourceComplianceSummaryItem.
 */
@Fluent
public final class AwsSsmResourceComplianceSummaryItemProperties
    implements JsonSerializable<AwsSsmResourceComplianceSummaryItemProperties> {
    /*
     * <p>The compliance type.</p>
     */
    private String complianceType;

    /*
     * <p>A list of items that are compliant for the resource.</p>
     */
    private CompliantSummary compliantSummary;

    /*
     * <p>Information about the execution.</p>
     */
    private ComplianceExecutionSummary executionSummary;

    /*
     * <p>A list of items that aren't compliant for the resource.</p>
     */
    private NonCompliantSummary nonCompliantSummary;

    /*
     * <p>The highest severity item found for the resource. The resource is compliant for this item.</p>
     */
    private ComplianceSeverityEnumValue overallSeverity;

    /*
     * <p>The resource ID.</p>
     */
    private String resourceId;

    /*
     * <p>The resource type.</p>
     */
    private String resourceType;

    /*
     * <p>The compliance status for the resource.</p>
     */
    private ComplianceStatusEnumValue status;

    /**
     * Creates an instance of AwsSsmResourceComplianceSummaryItemProperties class.
     */
    public AwsSsmResourceComplianceSummaryItemProperties() {
    }

    /**
     * Get the complianceType property: &lt;p&gt;The compliance type.&lt;/p&gt;.
     * 
     * @return the complianceType value.
     */
    public String complianceType() {
        return this.complianceType;
    }

    /**
     * Set the complianceType property: &lt;p&gt;The compliance type.&lt;/p&gt;.
     * 
     * @param complianceType the complianceType value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties withComplianceType(String complianceType) {
        this.complianceType = complianceType;
        return this;
    }

    /**
     * Get the compliantSummary property: &lt;p&gt;A list of items that are compliant for the resource.&lt;/p&gt;.
     * 
     * @return the compliantSummary value.
     */
    public CompliantSummary compliantSummary() {
        return this.compliantSummary;
    }

    /**
     * Set the compliantSummary property: &lt;p&gt;A list of items that are compliant for the resource.&lt;/p&gt;.
     * 
     * @param compliantSummary the compliantSummary value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties withCompliantSummary(CompliantSummary compliantSummary) {
        this.compliantSummary = compliantSummary;
        return this;
    }

    /**
     * Get the executionSummary property: &lt;p&gt;Information about the execution.&lt;/p&gt;.
     * 
     * @return the executionSummary value.
     */
    public ComplianceExecutionSummary executionSummary() {
        return this.executionSummary;
    }

    /**
     * Set the executionSummary property: &lt;p&gt;Information about the execution.&lt;/p&gt;.
     * 
     * @param executionSummary the executionSummary value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties
        withExecutionSummary(ComplianceExecutionSummary executionSummary) {
        this.executionSummary = executionSummary;
        return this;
    }

    /**
     * Get the nonCompliantSummary property: &lt;p&gt;A list of items that aren't compliant for the resource.&lt;/p&gt;.
     * 
     * @return the nonCompliantSummary value.
     */
    public NonCompliantSummary nonCompliantSummary() {
        return this.nonCompliantSummary;
    }

    /**
     * Set the nonCompliantSummary property: &lt;p&gt;A list of items that aren't compliant for the resource.&lt;/p&gt;.
     * 
     * @param nonCompliantSummary the nonCompliantSummary value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties
        withNonCompliantSummary(NonCompliantSummary nonCompliantSummary) {
        this.nonCompliantSummary = nonCompliantSummary;
        return this;
    }

    /**
     * Get the overallSeverity property: &lt;p&gt;The highest severity item found for the resource. The resource is
     * compliant for this item.&lt;/p&gt;.
     * 
     * @return the overallSeverity value.
     */
    public ComplianceSeverityEnumValue overallSeverity() {
        return this.overallSeverity;
    }

    /**
     * Set the overallSeverity property: &lt;p&gt;The highest severity item found for the resource. The resource is
     * compliant for this item.&lt;/p&gt;.
     * 
     * @param overallSeverity the overallSeverity value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties
        withOverallSeverity(ComplianceSeverityEnumValue overallSeverity) {
        this.overallSeverity = overallSeverity;
        return this;
    }

    /**
     * Get the resourceId property: &lt;p&gt;The resource ID.&lt;/p&gt;.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: &lt;p&gt;The resource ID.&lt;/p&gt;.
     * 
     * @param resourceId the resourceId value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the resourceType property: &lt;p&gt;The resource type.&lt;/p&gt;.
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: &lt;p&gt;The resource type.&lt;/p&gt;.
     * 
     * @param resourceType the resourceType value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The compliance status for the resource.&lt;/p&gt;.
     * 
     * @return the status value.
     */
    public ComplianceStatusEnumValue status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The compliance status for the resource.&lt;/p&gt;.
     * 
     * @param status the status value to set.
     * @return the AwsSsmResourceComplianceSummaryItemProperties object itself.
     */
    public AwsSsmResourceComplianceSummaryItemProperties withStatus(ComplianceStatusEnumValue status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (compliantSummary() != null) {
            compliantSummary().validate();
        }
        if (executionSummary() != null) {
            executionSummary().validate();
        }
        if (nonCompliantSummary() != null) {
            nonCompliantSummary().validate();
        }
        if (overallSeverity() != null) {
            overallSeverity().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("complianceType", this.complianceType);
        jsonWriter.writeJsonField("compliantSummary", this.compliantSummary);
        jsonWriter.writeJsonField("executionSummary", this.executionSummary);
        jsonWriter.writeJsonField("nonCompliantSummary", this.nonCompliantSummary);
        jsonWriter.writeJsonField("overallSeverity", this.overallSeverity);
        jsonWriter.writeStringField("resourceId", this.resourceId);
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeJsonField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsSsmResourceComplianceSummaryItemProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsSsmResourceComplianceSummaryItemProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsSsmResourceComplianceSummaryItemProperties.
     */
    public static AwsSsmResourceComplianceSummaryItemProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsSsmResourceComplianceSummaryItemProperties deserializedAwsSsmResourceComplianceSummaryItemProperties
                = new AwsSsmResourceComplianceSummaryItemProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("complianceType".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.complianceType = reader.getString();
                } else if ("compliantSummary".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.compliantSummary
                        = CompliantSummary.fromJson(reader);
                } else if ("executionSummary".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.executionSummary
                        = ComplianceExecutionSummary.fromJson(reader);
                } else if ("nonCompliantSummary".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.nonCompliantSummary
                        = NonCompliantSummary.fromJson(reader);
                } else if ("overallSeverity".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.overallSeverity
                        = ComplianceSeverityEnumValue.fromJson(reader);
                } else if ("resourceId".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.resourceId = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.resourceType = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAwsSsmResourceComplianceSummaryItemProperties.status
                        = ComplianceStatusEnumValue.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsSsmResourceComplianceSummaryItemProperties;
        });
    }
}

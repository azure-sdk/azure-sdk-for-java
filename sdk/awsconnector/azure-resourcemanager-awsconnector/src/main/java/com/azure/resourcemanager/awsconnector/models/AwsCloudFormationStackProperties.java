// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Definition of awsCloudFormationStack.
 */
@Fluent
public final class AwsCloudFormationStackProperties implements JsonSerializable<AwsCloudFormationStackProperties> {
    /*
     * Property capabilities
     */
    private List<Capabilities> capabilities;

    /*
     * Property changeSetId
     */
    private String changeSetId;

    /*
     * Property creationTime
     */
    private String creationTime;

    /*
     * Property description
     */
    private String description;

    /*
     * Property disableRollback
     */
    private Boolean disableRollback;

    /*
     * Property enableTerminationProtection
     */
    private Boolean enableTerminationProtection;

    /*
     * Property lastUpdateTime
     */
    private String lastUpdateTime;

    /*
     * Property notificationARNs
     */
    private List<String> notificationARNs;

    /*
     * Property outputs
     */
    private List<Output> outputs;

    /*
     * Property parameters
     */
    private Map<String, String> parameters;

    /*
     * Property parentId
     */
    private String parentId;

    /*
     * Property roleARN
     */
    private String roleArn;

    /*
     * Property rootId
     */
    private String rootId;

    /*
     * Property stackId
     */
    private String stackId;

    /*
     * Property stackName
     */
    private String stackName;

    /*
     * Property stackPolicyBody
     */
    private Object stackPolicyBody;

    /*
     * Property stackPolicyURL
     */
    private String stackPolicyUrl;

    /*
     * Property stackStatus
     */
    private StackStatus stackStatus;

    /*
     * Property stackStatusReason
     */
    private String stackStatusReason;

    /*
     * Property tags
     */
    private List<TagAutoGenerated3> tags;

    /*
     * Property templateBody
     */
    private Object templateBody;

    /*
     * Property templateURL
     */
    private String templateUrl;

    /*
     * Property timeoutInMinutes
     */
    private Integer timeoutInMinutes;

    /**
     * Creates an instance of AwsCloudFormationStackProperties class.
     */
    public AwsCloudFormationStackProperties() {
    }

    /**
     * Get the capabilities property: Property capabilities.
     * 
     * @return the capabilities value.
     */
    public List<Capabilities> capabilities() {
        return this.capabilities;
    }

    /**
     * Set the capabilities property: Property capabilities.
     * 
     * @param capabilities the capabilities value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withCapabilities(List<Capabilities> capabilities) {
        this.capabilities = capabilities;
        return this;
    }

    /**
     * Get the changeSetId property: Property changeSetId.
     * 
     * @return the changeSetId value.
     */
    public String changeSetId() {
        return this.changeSetId;
    }

    /**
     * Set the changeSetId property: Property changeSetId.
     * 
     * @param changeSetId the changeSetId value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withChangeSetId(String changeSetId) {
        this.changeSetId = changeSetId;
        return this;
    }

    /**
     * Get the creationTime property: Property creationTime.
     * 
     * @return the creationTime value.
     */
    public String creationTime() {
        return this.creationTime;
    }

    /**
     * Set the creationTime property: Property creationTime.
     * 
     * @param creationTime the creationTime value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get the description property: Property description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Property description.
     * 
     * @param description the description value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the disableRollback property: Property disableRollback.
     * 
     * @return the disableRollback value.
     */
    public Boolean disableRollback() {
        return this.disableRollback;
    }

    /**
     * Set the disableRollback property: Property disableRollback.
     * 
     * @param disableRollback the disableRollback value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withDisableRollback(Boolean disableRollback) {
        this.disableRollback = disableRollback;
        return this;
    }

    /**
     * Get the enableTerminationProtection property: Property enableTerminationProtection.
     * 
     * @return the enableTerminationProtection value.
     */
    public Boolean enableTerminationProtection() {
        return this.enableTerminationProtection;
    }

    /**
     * Set the enableTerminationProtection property: Property enableTerminationProtection.
     * 
     * @param enableTerminationProtection the enableTerminationProtection value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withEnableTerminationProtection(Boolean enableTerminationProtection) {
        this.enableTerminationProtection = enableTerminationProtection;
        return this;
    }

    /**
     * Get the lastUpdateTime property: Property lastUpdateTime.
     * 
     * @return the lastUpdateTime value.
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Set the lastUpdateTime property: Property lastUpdateTime.
     * 
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withLastUpdateTime(String lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    /**
     * Get the notificationARNs property: Property notificationARNs.
     * 
     * @return the notificationARNs value.
     */
    public List<String> notificationARNs() {
        return this.notificationARNs;
    }

    /**
     * Set the notificationARNs property: Property notificationARNs.
     * 
     * @param notificationARNs the notificationARNs value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withNotificationARNs(List<String> notificationARNs) {
        this.notificationARNs = notificationARNs;
        return this;
    }

    /**
     * Get the outputs property: Property outputs.
     * 
     * @return the outputs value.
     */
    public List<Output> outputs() {
        return this.outputs;
    }

    /**
     * Set the outputs property: Property outputs.
     * 
     * @param outputs the outputs value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withOutputs(List<Output> outputs) {
        this.outputs = outputs;
        return this;
    }

    /**
     * Get the parameters property: Property parameters.
     * 
     * @return the parameters value.
     */
    public Map<String, String> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Property parameters.
     * 
     * @param parameters the parameters value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withParameters(Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the parentId property: Property parentId.
     * 
     * @return the parentId value.
     */
    public String parentId() {
        return this.parentId;
    }

    /**
     * Set the parentId property: Property parentId.
     * 
     * @param parentId the parentId value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }

    /**
     * Get the roleArn property: Property roleARN.
     * 
     * @return the roleArn value.
     */
    public String roleArn() {
        return this.roleArn;
    }

    /**
     * Set the roleArn property: Property roleARN.
     * 
     * @param roleArn the roleArn value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }

    /**
     * Get the rootId property: Property rootId.
     * 
     * @return the rootId value.
     */
    public String rootId() {
        return this.rootId;
    }

    /**
     * Set the rootId property: Property rootId.
     * 
     * @param rootId the rootId value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withRootId(String rootId) {
        this.rootId = rootId;
        return this;
    }

    /**
     * Get the stackId property: Property stackId.
     * 
     * @return the stackId value.
     */
    public String stackId() {
        return this.stackId;
    }

    /**
     * Set the stackId property: Property stackId.
     * 
     * @param stackId the stackId value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withStackId(String stackId) {
        this.stackId = stackId;
        return this;
    }

    /**
     * Get the stackName property: Property stackName.
     * 
     * @return the stackName value.
     */
    public String stackName() {
        return this.stackName;
    }

    /**
     * Set the stackName property: Property stackName.
     * 
     * @param stackName the stackName value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withStackName(String stackName) {
        this.stackName = stackName;
        return this;
    }

    /**
     * Get the stackPolicyBody property: Property stackPolicyBody.
     * 
     * @return the stackPolicyBody value.
     */
    public Object stackPolicyBody() {
        return this.stackPolicyBody;
    }

    /**
     * Set the stackPolicyBody property: Property stackPolicyBody.
     * 
     * @param stackPolicyBody the stackPolicyBody value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withStackPolicyBody(Object stackPolicyBody) {
        this.stackPolicyBody = stackPolicyBody;
        return this;
    }

    /**
     * Get the stackPolicyUrl property: Property stackPolicyURL.
     * 
     * @return the stackPolicyUrl value.
     */
    public String stackPolicyUrl() {
        return this.stackPolicyUrl;
    }

    /**
     * Set the stackPolicyUrl property: Property stackPolicyURL.
     * 
     * @param stackPolicyUrl the stackPolicyUrl value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withStackPolicyUrl(String stackPolicyUrl) {
        this.stackPolicyUrl = stackPolicyUrl;
        return this;
    }

    /**
     * Get the stackStatus property: Property stackStatus.
     * 
     * @return the stackStatus value.
     */
    public StackStatus stackStatus() {
        return this.stackStatus;
    }

    /**
     * Set the stackStatus property: Property stackStatus.
     * 
     * @param stackStatus the stackStatus value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withStackStatus(StackStatus stackStatus) {
        this.stackStatus = stackStatus;
        return this;
    }

    /**
     * Get the stackStatusReason property: Property stackStatusReason.
     * 
     * @return the stackStatusReason value.
     */
    public String stackStatusReason() {
        return this.stackStatusReason;
    }

    /**
     * Set the stackStatusReason property: Property stackStatusReason.
     * 
     * @param stackStatusReason the stackStatusReason value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withStackStatusReason(String stackStatusReason) {
        this.stackStatusReason = stackStatusReason;
        return this;
    }

    /**
     * Get the tags property: Property tags.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated3> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Property tags.
     * 
     * @param tags the tags value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withTags(List<TagAutoGenerated3> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the templateBody property: Property templateBody.
     * 
     * @return the templateBody value.
     */
    public Object templateBody() {
        return this.templateBody;
    }

    /**
     * Set the templateBody property: Property templateBody.
     * 
     * @param templateBody the templateBody value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withTemplateBody(Object templateBody) {
        this.templateBody = templateBody;
        return this;
    }

    /**
     * Get the templateUrl property: Property templateURL.
     * 
     * @return the templateUrl value.
     */
    public String templateUrl() {
        return this.templateUrl;
    }

    /**
     * Set the templateUrl property: Property templateURL.
     * 
     * @param templateUrl the templateUrl value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withTemplateUrl(String templateUrl) {
        this.templateUrl = templateUrl;
        return this;
    }

    /**
     * Get the timeoutInMinutes property: Property timeoutInMinutes.
     * 
     * @return the timeoutInMinutes value.
     */
    public Integer timeoutInMinutes() {
        return this.timeoutInMinutes;
    }

    /**
     * Set the timeoutInMinutes property: Property timeoutInMinutes.
     * 
     * @param timeoutInMinutes the timeoutInMinutes value to set.
     * @return the AwsCloudFormationStackProperties object itself.
     */
    public AwsCloudFormationStackProperties withTimeoutInMinutes(Integer timeoutInMinutes) {
        this.timeoutInMinutes = timeoutInMinutes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (outputs() != null) {
            outputs().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("capabilities", this.capabilities,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeStringField("changeSetId", this.changeSetId);
        jsonWriter.writeStringField("creationTime", this.creationTime);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeBooleanField("disableRollback", this.disableRollback);
        jsonWriter.writeBooleanField("enableTerminationProtection", this.enableTerminationProtection);
        jsonWriter.writeStringField("lastUpdateTime", this.lastUpdateTime);
        jsonWriter.writeArrayField("notificationARNs", this.notificationARNs,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("outputs", this.outputs, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeMapField("parameters", this.parameters, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("parentId", this.parentId);
        jsonWriter.writeStringField("roleARN", this.roleArn);
        jsonWriter.writeStringField("rootId", this.rootId);
        jsonWriter.writeStringField("stackId", this.stackId);
        jsonWriter.writeStringField("stackName", this.stackName);
        jsonWriter.writeUntypedField("stackPolicyBody", this.stackPolicyBody);
        jsonWriter.writeStringField("stackPolicyURL", this.stackPolicyUrl);
        jsonWriter.writeStringField("stackStatus", this.stackStatus == null ? null : this.stackStatus.toString());
        jsonWriter.writeStringField("stackStatusReason", this.stackStatusReason);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeUntypedField("templateBody", this.templateBody);
        jsonWriter.writeStringField("templateURL", this.templateUrl);
        jsonWriter.writeNumberField("timeoutInMinutes", this.timeoutInMinutes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsCloudFormationStackProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsCloudFormationStackProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsCloudFormationStackProperties.
     */
    public static AwsCloudFormationStackProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsCloudFormationStackProperties deserializedAwsCloudFormationStackProperties
                = new AwsCloudFormationStackProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("capabilities".equals(fieldName)) {
                    List<Capabilities> capabilities
                        = reader.readArray(reader1 -> Capabilities.fromString(reader1.getString()));
                    deserializedAwsCloudFormationStackProperties.capabilities = capabilities;
                } else if ("changeSetId".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.changeSetId = reader.getString();
                } else if ("creationTime".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.creationTime = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.description = reader.getString();
                } else if ("disableRollback".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.disableRollback
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableTerminationProtection".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.enableTerminationProtection
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("lastUpdateTime".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.lastUpdateTime = reader.getString();
                } else if ("notificationARNs".equals(fieldName)) {
                    List<String> notificationARNs = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsCloudFormationStackProperties.notificationARNs = notificationARNs;
                } else if ("outputs".equals(fieldName)) {
                    List<Output> outputs = reader.readArray(reader1 -> Output.fromJson(reader1));
                    deserializedAwsCloudFormationStackProperties.outputs = outputs;
                } else if ("parameters".equals(fieldName)) {
                    Map<String, String> parameters = reader.readMap(reader1 -> reader1.getString());
                    deserializedAwsCloudFormationStackProperties.parameters = parameters;
                } else if ("parentId".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.parentId = reader.getString();
                } else if ("roleARN".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.roleArn = reader.getString();
                } else if ("rootId".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.rootId = reader.getString();
                } else if ("stackId".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.stackId = reader.getString();
                } else if ("stackName".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.stackName = reader.getString();
                } else if ("stackPolicyBody".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.stackPolicyBody = reader.readUntyped();
                } else if ("stackPolicyURL".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.stackPolicyUrl = reader.getString();
                } else if ("stackStatus".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.stackStatus
                        = StackStatus.fromString(reader.getString());
                } else if ("stackStatusReason".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.stackStatusReason = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated3> tags = reader.readArray(reader1 -> TagAutoGenerated3.fromJson(reader1));
                    deserializedAwsCloudFormationStackProperties.tags = tags;
                } else if ("templateBody".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.templateBody = reader.readUntyped();
                } else if ("templateURL".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.templateUrl = reader.getString();
                } else if ("timeoutInMinutes".equals(fieldName)) {
                    deserializedAwsCloudFormationStackProperties.timeoutInMinutes
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsCloudFormationStackProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of InstanceRequirements.
 */
@Fluent
public final class InstanceRequirements implements JsonSerializable<InstanceRequirements> {
    /*
     * The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) for an instance type. To
     * exclude accelerator-enabled instance types, set ``Max`` to ``0``. Default: No minimum or maximum limits
     * ``AcceleratorCountRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * number of accelerators for an instance type.
     */
    private AcceleratorCountRequest acceleratorCount;

    /*
     * Indicates whether instance types must have accelerators by specific manufacturers. + For instance types with
     * NVIDIA devices, specify ``nvidia``. + For instance types with AMD devices, specify ``amd``. + For instance types
     * with AWS devices, specify ``amazon-web-services``. + For instance types with Xilinx devices, specify ``xilinx``.
     * Default: Any manufacturer
     */
    private List<String> acceleratorManufacturers;

    /*
     * Lists the accelerators that must be on an instance type. + For instance types with NVIDIA A100 GPUs, specify
     * ``a100``. + For instance types with NVIDIA V100 GPUs, specify ``v100``. + For instance types with NVIDIA K80
     * GPUs, specify ``k80``. + For instance types with NVIDIA T4 GPUs, specify ``t4``. + For instance types with NVIDIA
     * M60 GPUs, specify ``m60``. + For instance types with AMD Radeon Pro V520 GPUs, specify ``radeon-pro-v520``. + For
     * instance types with Xilinx VU9P FPGAs, specify ``vu9p``. Default: Any accelerator
     */
    private List<String> acceleratorNames;

    /*
     * The minimum and maximum total memory size for the accelerators on an instance type, in MiB. Default: No minimum
     * or maximum limits ``AcceleratorTotalMemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of
     * the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * total memory size for the accelerators for an instance type, in MiB.
     */
    private AcceleratorTotalMemoryMiBRequest acceleratorTotalMemoryMiB;

    /*
     * Lists the accelerator types that must be on an instance type. + For instance types with GPU accelerators, specify
     * ``gpu``. + For instance types with FPGA accelerators, specify ``fpga``. + For instance types with inference
     * accelerators, specify ``inference``. Default: Any accelerator type
     */
    private List<String> acceleratorTypes;

    /*
     * The instance types to apply your specified attributes against. All other instance types are ignored, even if they
     * match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk
     * (``*``), to allow an instance type, size, or generation. The following are examples: ``m5.8xlarge``, ``c5*.*``,
     * ``m5a.*``, ``r*``, ``*3*``. For example, if you specify ``c5*``, Amazon EC2 Auto Scaling will allow the entire C5
     * instance family, which includes all C5a and C5n instance types. If you specify ``m5a.*``, Amazon EC2 Auto Scaling
     * will allow all the M5a instance types, but not the M5n instance types. If you specify ``AllowedInstanceTypes``,
     * you can't specify ``ExcludedInstanceTypes``. Default: All instance types
     */
    private List<String> allowedInstanceTypes;

    /*
     * Indicates whether bare metal instance types are included, excluded, or required. Default: ``excluded``
     */
    private String bareMetal;

    /*
     * The minimum and maximum baseline bandwidth performance for an instance type, in Mbps. For more information, see
     * [Amazon EBSâ€“optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the
     * *Amazon EC2 User Guide for Linux Instances*. Default: No minimum or maximum limits
     * ``BaselineEbsBandwidthMbpsRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * baseline bandwidth performance for an instance type, in Mbps.
     */
    private BaselineEbsBandwidthMbpsRequest baselineEbsBandwidthMbps;

    /*
     * Indicates whether burstable performance instance types are included, excluded, or required. For more information,
     * see [Burstable performance
     * instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the
     * *Amazon EC2 User Guide for Linux Instances*. Default: ``excluded``
     */
    private String burstablePerformance;

    /*
     * Lists which specific CPU manufacturers to include. + For instance types with Intel CPUs, specify ``intel``. + For
     * instance types with AMD CPUs, specify ``amd``. + For instance types with AWS CPUs, specify
     * ``amazon-web-services``. Don't confuse the CPU hardware manufacturer with the CPU hardware architecture.
     * Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you
     * specify in your launch template. Default: Any manufacturer
     */
    private List<String> cpuManufacturers;

    /*
     * The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk
     * (``*``), to exclude an instance family, type, size, or generation. The following are examples: ``m5.8xlarge``,
     * ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. For example, if you specify ``c5*``, you are excluding the entire C5
     * instance family, which includes all C5a and C5n instance types. If you specify ``m5a.*``, Amazon EC2 Auto Scaling
     * will exclude all the M5a instance types, but not the M5n instance types. If you specify
     * ``ExcludedInstanceTypes``, you can't specify ``AllowedInstanceTypes``. Default: No excluded instance types
     */
    private List<String> excludedInstanceTypes;

    /*
     * Indicates whether current or previous generation instance types are included. + For current generation instance
     * types, specify ``current``. The current generation includes EC2 instance types currently recommended for use.
     * This typically includes the latest two to three generations in each instance family. For more information, see
     * [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User
     * Guide for Linux Instances*. + For previous generation instance types, specify ``previous``. Default: Any current
     * or previous generation
     */
    private List<String> instanceGenerations;

    /*
     * Indicates whether instance types with instance store volumes are included, excluded, or required. For more
     * information, see [Amazon EC2 instance
     * store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide
     * for Linux Instances*. Default: ``included``
     */
    private String localStorage;

    /*
     * Indicates the type of local storage that is required. + For instance types with hard disk drive (HDD) storage,
     * specify ``hdd``. + For instance types with solid state drive (SSD) storage, specify ``ssd``. Default: Any local
     * storage type
     */
    private List<String> localStorageTypes;

    /*
     * [Price protection] The price protection threshold for Spot Instances, as a percentage of an identified On-Demand
     * price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance
     * type with your specified attributes. If no current generation C, M, or R instance type matches your attributes,
     * then the identified price is from either the lowest priced current generation instance types or, failing that,
     * the lowest priced previous generation instance types that match your attributes. When Amazon EC2 Auto Scaling
     * selects instance types with your attributes, we will exclude instance types whose price exceeds your specified
     * threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To
     * indicate no price protection threshold, specify a high value, such as ``999999``. If you set
     * ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is based on the per-vCPU or
     * per-memory price instead of the per instance price. Only one of ``SpotMaxPricePercentageOverLowestPrice`` or
     * ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified. If you don't specify either, then
     * ``SpotMaxPricePercentageOverLowestPrice`` is used and the value for that parameter defaults to ``100``.
     */
    private Integer maxSpotPriceAsPercentageOfOptimalOnDemandPrice;

    /*
     * The minimum and maximum amount of memory per vCPU for an instance type, in GiB. Default: No minimum or maximum
     * limits ``MemoryGiBPerVCpuRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * amount of memory per vCPU for an instance type, in GiB.
     */
    private MemoryGiBPerVCpuRequest memoryGiBPerVCpu;

    /*
     * The minimum and maximum instance memory size for an instance type, in MiB. ``MemoryMiBRequest`` is a property of
     * the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * instance memory size for an instance type, in MiB.
     */
    private MemoryMiBRequest memoryMiB;

    /*
     * The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default: No minimum or
     * maximum limits ``NetworkBandwidthGbpsRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * network bandwidth for an instance type, in Gbps. Setting the minimum bandwidth does not guarantee that your
     * instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified
     * minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For
     * more information, see [Available instance
     * bandwidth](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-
     * instance-bandwidth) in the *Amazon EC2 User Guide for Linux Instances*.
     */
    private NetworkBandwidthGbpsRequest networkBandwidthGbps;

    /*
     * The minimum and maximum number of network interfaces for an instance type. Default: No minimum or maximum limits
     * ``NetworkInterfaceCountRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * number of network interfaces for an instance type.
     */
    private NetworkInterfaceCountRequest networkInterfaceCount;

    /*
     * [Price protection] The price protection threshold for On-Demand Instances, as a percentage higher than an
     * identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation
     * C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type
     * matches your attributes, then the identified price is from either the lowest priced current generation instance
     * types or, failing that, the lowest priced previous generation instance types that match your attributes. When
     * Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price
     * exceeds your specified threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a
     * percentage. To turn off price protection, specify a high value, such as ``999999``. If you set
     * ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is applied based on the
     * per-vCPU or per-memory price instead of the per instance price. Default: ``20``
     */
    private Integer onDemandMaxPricePercentageOverLowestPrice;

    /*
     * Indicates whether instance types must provide On-Demand Instance hibernation support. Default: ``false``
     */
    private Boolean requireHibernateSupport;

    /*
     * [Price protection] The price protection threshold for Spot Instances, as a percentage higher than an identified
     * Spot price. The identified Spot price is the price of the lowest priced current generation C, M, or R instance
     * type with your specified attributes. If no current generation C, M, or R instance type matches your attributes,
     * then the identified price is from either the lowest priced current generation instance types or, failing that,
     * the lowest priced previous generation instance types that match your attributes. When Amazon EC2 Auto Scaling
     * selects instance types with your attributes, we will exclude instance types whose price exceeds your specified
     * threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn
     * off price protection, specify a high value, such as ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or
     * ``memory-mib``, the price protection threshold is based on the per-vCPU or per-memory price instead of the per
     * instance price. Only one of ``SpotMaxPricePercentageOverLowestPrice`` or
     * ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified. Default: ``100``
     */
    private Integer spotMaxPricePercentageOverLowestPrice;

    /*
     * The minimum and maximum total local storage size for an instance type, in GB. Default: No minimum or maximum
     * limits ``TotalLocalStorageGBRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * total local storage size for an instance type, in GB.
     */
    private TotalLocalStorageGBRequest totalLocalStorageGB;

    /*
     * The minimum and maximum number of vCPUs for an instance type. ``VCpuCountRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-
     * autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum
     * number of vCPUs for an instance type.
     */
    private VCpuCountRequest vCpuCount;

    /**
     * Creates an instance of InstanceRequirements class.
     */
    public InstanceRequirements() {
    }

    /**
     * Get the acceleratorCount property: The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia
     * chips) for an instance type. To exclude accelerator-enabled instance types, set ``Max`` to ``0``. Default: No
     * minimum or maximum limits ``AcceleratorCountRequest`` is a property of the ``InstanceRequirements`` property of
     * the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum number of accelerators for an instance type.
     * 
     * @return the acceleratorCount value.
     */
    public AcceleratorCountRequest acceleratorCount() {
        return this.acceleratorCount;
    }

    /**
     * Set the acceleratorCount property: The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia
     * chips) for an instance type. To exclude accelerator-enabled instance types, set ``Max`` to ``0``. Default: No
     * minimum or maximum limits ``AcceleratorCountRequest`` is a property of the ``InstanceRequirements`` property of
     * the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum number of accelerators for an instance type.
     * 
     * @param acceleratorCount the acceleratorCount value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withAcceleratorCount(AcceleratorCountRequest acceleratorCount) {
        this.acceleratorCount = acceleratorCount;
        return this;
    }

    /**
     * Get the acceleratorManufacturers property: Indicates whether instance types must have accelerators by specific
     * manufacturers. + For instance types with NVIDIA devices, specify ``nvidia``. + For instance types with AMD
     * devices, specify ``amd``. + For instance types with AWS devices, specify ``amazon-web-services``. + For instance
     * types with Xilinx devices, specify ``xilinx``. Default: Any manufacturer.
     * 
     * @return the acceleratorManufacturers value.
     */
    public List<String> acceleratorManufacturers() {
        return this.acceleratorManufacturers;
    }

    /**
     * Set the acceleratorManufacturers property: Indicates whether instance types must have accelerators by specific
     * manufacturers. + For instance types with NVIDIA devices, specify ``nvidia``. + For instance types with AMD
     * devices, specify ``amd``. + For instance types with AWS devices, specify ``amazon-web-services``. + For instance
     * types with Xilinx devices, specify ``xilinx``. Default: Any manufacturer.
     * 
     * @param acceleratorManufacturers the acceleratorManufacturers value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withAcceleratorManufacturers(List<String> acceleratorManufacturers) {
        this.acceleratorManufacturers = acceleratorManufacturers;
        return this;
    }

    /**
     * Get the acceleratorNames property: Lists the accelerators that must be on an instance type. + For instance types
     * with NVIDIA A100 GPUs, specify ``a100``. + For instance types with NVIDIA V100 GPUs, specify ``v100``. + For
     * instance types with NVIDIA K80 GPUs, specify ``k80``. + For instance types with NVIDIA T4 GPUs, specify ``t4``. +
     * For instance types with NVIDIA M60 GPUs, specify ``m60``. + For instance types with AMD Radeon Pro V520 GPUs,
     * specify ``radeon-pro-v520``. + For instance types with Xilinx VU9P FPGAs, specify ``vu9p``. Default: Any
     * accelerator.
     * 
     * @return the acceleratorNames value.
     */
    public List<String> acceleratorNames() {
        return this.acceleratorNames;
    }

    /**
     * Set the acceleratorNames property: Lists the accelerators that must be on an instance type. + For instance types
     * with NVIDIA A100 GPUs, specify ``a100``. + For instance types with NVIDIA V100 GPUs, specify ``v100``. + For
     * instance types with NVIDIA K80 GPUs, specify ``k80``. + For instance types with NVIDIA T4 GPUs, specify ``t4``. +
     * For instance types with NVIDIA M60 GPUs, specify ``m60``. + For instance types with AMD Radeon Pro V520 GPUs,
     * specify ``radeon-pro-v520``. + For instance types with Xilinx VU9P FPGAs, specify ``vu9p``. Default: Any
     * accelerator.
     * 
     * @param acceleratorNames the acceleratorNames value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withAcceleratorNames(List<String> acceleratorNames) {
        this.acceleratorNames = acceleratorNames;
        return this;
    }

    /**
     * Get the acceleratorTotalMemoryMiB property: The minimum and maximum total memory size for the accelerators on an
     * instance type, in MiB. Default: No minimum or maximum limits ``AcceleratorTotalMemoryMiBRequest`` is a property
     * of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum total memory size for the accelerators for an instance type,
     * in MiB.
     * 
     * @return the acceleratorTotalMemoryMiB value.
     */
    public AcceleratorTotalMemoryMiBRequest acceleratorTotalMemoryMiB() {
        return this.acceleratorTotalMemoryMiB;
    }

    /**
     * Set the acceleratorTotalMemoryMiB property: The minimum and maximum total memory size for the accelerators on an
     * instance type, in MiB. Default: No minimum or maximum limits ``AcceleratorTotalMemoryMiBRequest`` is a property
     * of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum total memory size for the accelerators for an instance type,
     * in MiB.
     * 
     * @param acceleratorTotalMemoryMiB the acceleratorTotalMemoryMiB value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements
        withAcceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequest acceleratorTotalMemoryMiB) {
        this.acceleratorTotalMemoryMiB = acceleratorTotalMemoryMiB;
        return this;
    }

    /**
     * Get the acceleratorTypes property: Lists the accelerator types that must be on an instance type. + For instance
     * types with GPU accelerators, specify ``gpu``. + For instance types with FPGA accelerators, specify ``fpga``. +
     * For instance types with inference accelerators, specify ``inference``. Default: Any accelerator type.
     * 
     * @return the acceleratorTypes value.
     */
    public List<String> acceleratorTypes() {
        return this.acceleratorTypes;
    }

    /**
     * Set the acceleratorTypes property: Lists the accelerator types that must be on an instance type. + For instance
     * types with GPU accelerators, specify ``gpu``. + For instance types with FPGA accelerators, specify ``fpga``. +
     * For instance types with inference accelerators, specify ``inference``. Default: Any accelerator type.
     * 
     * @param acceleratorTypes the acceleratorTypes value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withAcceleratorTypes(List<String> acceleratorTypes) {
        this.acceleratorTypes = acceleratorTypes;
        return this;
    }

    /**
     * Get the allowedInstanceTypes property: The instance types to apply your specified attributes against. All other
     * instance types are ignored, even if they match your specified attributes. You can use strings with one or more
     * wild cards, represented by an asterisk (``*``), to allow an instance type, size, or generation. The following are
     * examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. For example, if you specify ``c5*``, Amazon EC2
     * Auto Scaling will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you
     * specify ``m5a.*``, Amazon EC2 Auto Scaling will allow all the M5a instance types, but not the M5n instance types.
     * If you specify ``AllowedInstanceTypes``, you can't specify ``ExcludedInstanceTypes``. Default: All instance
     * types.
     * 
     * @return the allowedInstanceTypes value.
     */
    public List<String> allowedInstanceTypes() {
        return this.allowedInstanceTypes;
    }

    /**
     * Set the allowedInstanceTypes property: The instance types to apply your specified attributes against. All other
     * instance types are ignored, even if they match your specified attributes. You can use strings with one or more
     * wild cards, represented by an asterisk (``*``), to allow an instance type, size, or generation. The following are
     * examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. For example, if you specify ``c5*``, Amazon EC2
     * Auto Scaling will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you
     * specify ``m5a.*``, Amazon EC2 Auto Scaling will allow all the M5a instance types, but not the M5n instance types.
     * If you specify ``AllowedInstanceTypes``, you can't specify ``ExcludedInstanceTypes``. Default: All instance
     * types.
     * 
     * @param allowedInstanceTypes the allowedInstanceTypes value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withAllowedInstanceTypes(List<String> allowedInstanceTypes) {
        this.allowedInstanceTypes = allowedInstanceTypes;
        return this;
    }

    /**
     * Get the bareMetal property: Indicates whether bare metal instance types are included, excluded, or required.
     * Default: ``excluded``.
     * 
     * @return the bareMetal value.
     */
    public String bareMetal() {
        return this.bareMetal;
    }

    /**
     * Set the bareMetal property: Indicates whether bare metal instance types are included, excluded, or required.
     * Default: ``excluded``.
     * 
     * @param bareMetal the bareMetal value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withBareMetal(String bareMetal) {
        this.bareMetal = bareMetal;
        return this;
    }

    /**
     * Get the baselineEbsBandwidthMbps property: The minimum and maximum baseline bandwidth performance for an instance
     * type, in Mbps. For more information, see [Amazon EBSâ€“optimized
     * instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide
     * for Linux Instances*. Default: No minimum or maximum limits ``BaselineEbsBandwidthMbpsRequest`` is a property of
     * the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum baseline bandwidth performance for an instance type, in
     * Mbps.
     * 
     * @return the baselineEbsBandwidthMbps value.
     */
    public BaselineEbsBandwidthMbpsRequest baselineEbsBandwidthMbps() {
        return this.baselineEbsBandwidthMbps;
    }

    /**
     * Set the baselineEbsBandwidthMbps property: The minimum and maximum baseline bandwidth performance for an instance
     * type, in Mbps. For more information, see [Amazon EBSâ€“optimized
     * instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide
     * for Linux Instances*. Default: No minimum or maximum limits ``BaselineEbsBandwidthMbpsRequest`` is a property of
     * the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum baseline bandwidth performance for an instance type, in
     * Mbps.
     * 
     * @param baselineEbsBandwidthMbps the baselineEbsBandwidthMbps value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withBaselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequest baselineEbsBandwidthMbps) {
        this.baselineEbsBandwidthMbps = baselineEbsBandwidthMbps;
        return this;
    }

    /**
     * Get the burstablePerformance property: Indicates whether burstable performance instance types are included,
     * excluded, or required. For more information, see [Burstable performance
     * instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the
     * *Amazon EC2 User Guide for Linux Instances*. Default: ``excluded``.
     * 
     * @return the burstablePerformance value.
     */
    public String burstablePerformance() {
        return this.burstablePerformance;
    }

    /**
     * Set the burstablePerformance property: Indicates whether burstable performance instance types are included,
     * excluded, or required. For more information, see [Burstable performance
     * instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the
     * *Amazon EC2 User Guide for Linux Instances*. Default: ``excluded``.
     * 
     * @param burstablePerformance the burstablePerformance value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withBurstablePerformance(String burstablePerformance) {
        this.burstablePerformance = burstablePerformance;
        return this;
    }

    /**
     * Get the cpuManufacturers property: Lists which specific CPU manufacturers to include. + For instance types with
     * Intel CPUs, specify ``intel``. + For instance types with AMD CPUs, specify ``amd``. + For instance types with AWS
     * CPUs, specify ``amazon-web-services``. Don't confuse the CPU hardware manufacturer with the CPU hardware
     * architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image
     * (AMI) that you specify in your launch template. Default: Any manufacturer.
     * 
     * @return the cpuManufacturers value.
     */
    public List<String> cpuManufacturers() {
        return this.cpuManufacturers;
    }

    /**
     * Set the cpuManufacturers property: Lists which specific CPU manufacturers to include. + For instance types with
     * Intel CPUs, specify ``intel``. + For instance types with AMD CPUs, specify ``amd``. + For instance types with AWS
     * CPUs, specify ``amazon-web-services``. Don't confuse the CPU hardware manufacturer with the CPU hardware
     * architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image
     * (AMI) that you specify in your launch template. Default: Any manufacturer.
     * 
     * @param cpuManufacturers the cpuManufacturers value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withCpuManufacturers(List<String> cpuManufacturers) {
        this.cpuManufacturers = cpuManufacturers;
        return this;
    }

    /**
     * Get the excludedInstanceTypes property: The instance types to exclude. You can use strings with one or more wild
     * cards, represented by an asterisk (``*``), to exclude an instance family, type, size, or generation. The
     * following are examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. For example, if you specify
     * ``c5*``, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you
     * specify ``m5a.*``, Amazon EC2 Auto Scaling will exclude all the M5a instance types, but not the M5n instance
     * types. If you specify ``ExcludedInstanceTypes``, you can't specify ``AllowedInstanceTypes``. Default: No excluded
     * instance types.
     * 
     * @return the excludedInstanceTypes value.
     */
    public List<String> excludedInstanceTypes() {
        return this.excludedInstanceTypes;
    }

    /**
     * Set the excludedInstanceTypes property: The instance types to exclude. You can use strings with one or more wild
     * cards, represented by an asterisk (``*``), to exclude an instance family, type, size, or generation. The
     * following are examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. For example, if you specify
     * ``c5*``, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you
     * specify ``m5a.*``, Amazon EC2 Auto Scaling will exclude all the M5a instance types, but not the M5n instance
     * types. If you specify ``ExcludedInstanceTypes``, you can't specify ``AllowedInstanceTypes``. Default: No excluded
     * instance types.
     * 
     * @param excludedInstanceTypes the excludedInstanceTypes value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withExcludedInstanceTypes(List<String> excludedInstanceTypes) {
        this.excludedInstanceTypes = excludedInstanceTypes;
        return this;
    }

    /**
     * Get the instanceGenerations property: Indicates whether current or previous generation instance types are
     * included. + For current generation instance types, specify ``current``. The current generation includes EC2
     * instance types currently recommended for use. This typically includes the latest two to three generations in each
     * instance family. For more information, see [Instance
     * types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide for
     * Linux Instances*. + For previous generation instance types, specify ``previous``. Default: Any current or
     * previous generation.
     * 
     * @return the instanceGenerations value.
     */
    public List<String> instanceGenerations() {
        return this.instanceGenerations;
    }

    /**
     * Set the instanceGenerations property: Indicates whether current or previous generation instance types are
     * included. + For current generation instance types, specify ``current``. The current generation includes EC2
     * instance types currently recommended for use. This typically includes the latest two to three generations in each
     * instance family. For more information, see [Instance
     * types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide for
     * Linux Instances*. + For previous generation instance types, specify ``previous``. Default: Any current or
     * previous generation.
     * 
     * @param instanceGenerations the instanceGenerations value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withInstanceGenerations(List<String> instanceGenerations) {
        this.instanceGenerations = instanceGenerations;
        return this;
    }

    /**
     * Get the localStorage property: Indicates whether instance types with instance store volumes are included,
     * excluded, or required. For more information, see [Amazon EC2 instance
     * store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide
     * for Linux Instances*. Default: ``included``.
     * 
     * @return the localStorage value.
     */
    public String localStorage() {
        return this.localStorage;
    }

    /**
     * Set the localStorage property: Indicates whether instance types with instance store volumes are included,
     * excluded, or required. For more information, see [Amazon EC2 instance
     * store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide
     * for Linux Instances*. Default: ``included``.
     * 
     * @param localStorage the localStorage value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withLocalStorage(String localStorage) {
        this.localStorage = localStorage;
        return this;
    }

    /**
     * Get the localStorageTypes property: Indicates the type of local storage that is required. + For instance types
     * with hard disk drive (HDD) storage, specify ``hdd``. + For instance types with solid state drive (SSD) storage,
     * specify ``ssd``. Default: Any local storage type.
     * 
     * @return the localStorageTypes value.
     */
    public List<String> localStorageTypes() {
        return this.localStorageTypes;
    }

    /**
     * Set the localStorageTypes property: Indicates the type of local storage that is required. + For instance types
     * with hard disk drive (HDD) storage, specify ``hdd``. + For instance types with solid state drive (SSD) storage,
     * specify ``ssd``. Default: Any local storage type.
     * 
     * @param localStorageTypes the localStorageTypes value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withLocalStorageTypes(List<String> localStorageTypes) {
        this.localStorageTypes = localStorageTypes;
        return this;
    }

    /**
     * Get the maxSpotPriceAsPercentageOfOptimalOnDemandPrice property: [Price protection] The price protection
     * threshold for Spot Instances, as a percentage of an identified On-Demand price. The identified On-Demand price is
     * the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no
     * current generation C, M, or R instance type matches your attributes, then the identified price is from either the
     * lowest priced current generation instance types or, failing that, the lowest priced previous generation instance
     * types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we
     * will exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which
     * Amazon EC2 Auto Scaling interprets as a percentage. To indicate no price protection threshold, specify a high
     * value, such as ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection
     * threshold is based on the per-vCPU or per-memory price instead of the per instance price. Only one of
     * ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified.
     * If you don't specify either, then ``SpotMaxPricePercentageOverLowestPrice`` is used and the value for that
     * parameter defaults to ``100``.
     * 
     * @return the maxSpotPriceAsPercentageOfOptimalOnDemandPrice value.
     */
    public Integer maxSpotPriceAsPercentageOfOptimalOnDemandPrice() {
        return this.maxSpotPriceAsPercentageOfOptimalOnDemandPrice;
    }

    /**
     * Set the maxSpotPriceAsPercentageOfOptimalOnDemandPrice property: [Price protection] The price protection
     * threshold for Spot Instances, as a percentage of an identified On-Demand price. The identified On-Demand price is
     * the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no
     * current generation C, M, or R instance type matches your attributes, then the identified price is from either the
     * lowest priced current generation instance types or, failing that, the lowest priced previous generation instance
     * types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we
     * will exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which
     * Amazon EC2 Auto Scaling interprets as a percentage. To indicate no price protection threshold, specify a high
     * value, such as ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection
     * threshold is based on the per-vCPU or per-memory price instead of the per instance price. Only one of
     * ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified.
     * If you don't specify either, then ``SpotMaxPricePercentageOverLowestPrice`` is used and the value for that
     * parameter defaults to ``100``.
     * 
     * @param maxSpotPriceAsPercentageOfOptimalOnDemandPrice the maxSpotPriceAsPercentageOfOptimalOnDemandPrice value to
     * set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements
        withMaxSpotPriceAsPercentageOfOptimalOnDemandPrice(Integer maxSpotPriceAsPercentageOfOptimalOnDemandPrice) {
        this.maxSpotPriceAsPercentageOfOptimalOnDemandPrice = maxSpotPriceAsPercentageOfOptimalOnDemandPrice;
        return this;
    }

    /**
     * Get the memoryGiBPerVCpu property: The minimum and maximum amount of memory per vCPU for an instance type, in
     * GiB. Default: No minimum or maximum limits ``MemoryGiBPerVCpuRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum amount of memory per vCPU for an instance type, in GiB.
     * 
     * @return the memoryGiBPerVCpu value.
     */
    public MemoryGiBPerVCpuRequest memoryGiBPerVCpu() {
        return this.memoryGiBPerVCpu;
    }

    /**
     * Set the memoryGiBPerVCpu property: The minimum and maximum amount of memory per vCPU for an instance type, in
     * GiB. Default: No minimum or maximum limits ``MemoryGiBPerVCpuRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum amount of memory per vCPU for an instance type, in GiB.
     * 
     * @param memoryGiBPerVCpu the memoryGiBPerVCpu value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withMemoryGiBPerVCpu(MemoryGiBPerVCpuRequest memoryGiBPerVCpu) {
        this.memoryGiBPerVCpu = memoryGiBPerVCpu;
        return this;
    }

    /**
     * Get the memoryMiB property: The minimum and maximum instance memory size for an instance type, in MiB.
     * ``MemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum instance memory size for an instance type, in MiB.
     * 
     * @return the memoryMiB value.
     */
    public MemoryMiBRequest memoryMiB() {
        return this.memoryMiB;
    }

    /**
     * Set the memoryMiB property: The minimum and maximum instance memory size for an instance type, in MiB.
     * ``MemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of the
     * [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum instance memory size for an instance type, in MiB.
     * 
     * @param memoryMiB the memoryMiB value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withMemoryMiB(MemoryMiBRequest memoryMiB) {
        this.memoryMiB = memoryMiB;
        return this;
    }

    /**
     * Get the networkBandwidthGbps property: The minimum and maximum amount of network bandwidth, in gigabits per
     * second (Gbps). Default: No minimum or maximum limits ``NetworkBandwidthGbpsRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum network bandwidth for an instance type, in Gbps. Setting the
     * minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will
     * identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance
     * might go below the specified minimum at times. For more information, see [Available instance
     * bandwidth](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth)
     * in the *Amazon EC2 User Guide for Linux Instances*.
     * 
     * @return the networkBandwidthGbps value.
     */
    public NetworkBandwidthGbpsRequest networkBandwidthGbps() {
        return this.networkBandwidthGbps;
    }

    /**
     * Set the networkBandwidthGbps property: The minimum and maximum amount of network bandwidth, in gigabits per
     * second (Gbps). Default: No minimum or maximum limits ``NetworkBandwidthGbpsRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum network bandwidth for an instance type, in Gbps. Setting the
     * minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will
     * identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance
     * might go below the specified minimum at times. For more information, see [Available instance
     * bandwidth](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth)
     * in the *Amazon EC2 User Guide for Linux Instances*.
     * 
     * @param networkBandwidthGbps the networkBandwidthGbps value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withNetworkBandwidthGbps(NetworkBandwidthGbpsRequest networkBandwidthGbps) {
        this.networkBandwidthGbps = networkBandwidthGbps;
        return this;
    }

    /**
     * Get the networkInterfaceCount property: The minimum and maximum number of network interfaces for an instance
     * type. Default: No minimum or maximum limits ``NetworkInterfaceCountRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum number of network interfaces for an instance type.
     * 
     * @return the networkInterfaceCount value.
     */
    public NetworkInterfaceCountRequest networkInterfaceCount() {
        return this.networkInterfaceCount;
    }

    /**
     * Set the networkInterfaceCount property: The minimum and maximum number of network interfaces for an instance
     * type. Default: No minimum or maximum limits ``NetworkInterfaceCountRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum number of network interfaces for an instance type.
     * 
     * @param networkInterfaceCount the networkInterfaceCount value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withNetworkInterfaceCount(NetworkInterfaceCountRequest networkInterfaceCount) {
        this.networkInterfaceCount = networkInterfaceCount;
        return this;
    }

    /**
     * Get the onDemandMaxPricePercentageOverLowestPrice property: [Price protection] The price protection threshold for
     * On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is
     * the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no
     * current generation C, M, or R instance type matches your attributes, then the identified price is from either the
     * lowest priced current generation instance types or, failing that, the lowest priced previous generation instance
     * types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we
     * will exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which
     * Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as
     * ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is
     * applied based on the per-vCPU or per-memory price instead of the per instance price. Default: ``20``.
     * 
     * @return the onDemandMaxPricePercentageOverLowestPrice value.
     */
    public Integer onDemandMaxPricePercentageOverLowestPrice() {
        return this.onDemandMaxPricePercentageOverLowestPrice;
    }

    /**
     * Set the onDemandMaxPricePercentageOverLowestPrice property: [Price protection] The price protection threshold for
     * On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is
     * the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no
     * current generation C, M, or R instance type matches your attributes, then the identified price is from either the
     * lowest priced current generation instance types or, failing that, the lowest priced previous generation instance
     * types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we
     * will exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which
     * Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as
     * ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is
     * applied based on the per-vCPU or per-memory price instead of the per instance price. Default: ``20``.
     * 
     * @param onDemandMaxPricePercentageOverLowestPrice the onDemandMaxPricePercentageOverLowestPrice value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements
        withOnDemandMaxPricePercentageOverLowestPrice(Integer onDemandMaxPricePercentageOverLowestPrice) {
        this.onDemandMaxPricePercentageOverLowestPrice = onDemandMaxPricePercentageOverLowestPrice;
        return this;
    }

    /**
     * Get the requireHibernateSupport property: Indicates whether instance types must provide On-Demand Instance
     * hibernation support. Default: ``false``.
     * 
     * @return the requireHibernateSupport value.
     */
    public Boolean requireHibernateSupport() {
        return this.requireHibernateSupport;
    }

    /**
     * Set the requireHibernateSupport property: Indicates whether instance types must provide On-Demand Instance
     * hibernation support. Default: ``false``.
     * 
     * @param requireHibernateSupport the requireHibernateSupport value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withRequireHibernateSupport(Boolean requireHibernateSupport) {
        this.requireHibernateSupport = requireHibernateSupport;
        return this;
    }

    /**
     * Get the spotMaxPricePercentageOverLowestPrice property: [Price protection] The price protection threshold for
     * Spot Instances, as a percentage higher than an identified Spot price. The identified Spot price is the price of
     * the lowest priced current generation C, M, or R instance type with your specified attributes. If no current
     * generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest
     * priced current generation instance types or, failing that, the lowest priced previous generation instance types
     * that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will
     * exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which
     * Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as
     * ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is
     * based on the per-vCPU or per-memory price instead of the per instance price. Only one of
     * ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified.
     * Default: ``100``.
     * 
     * @return the spotMaxPricePercentageOverLowestPrice value.
     */
    public Integer spotMaxPricePercentageOverLowestPrice() {
        return this.spotMaxPricePercentageOverLowestPrice;
    }

    /**
     * Set the spotMaxPricePercentageOverLowestPrice property: [Price protection] The price protection threshold for
     * Spot Instances, as a percentage higher than an identified Spot price. The identified Spot price is the price of
     * the lowest priced current generation C, M, or R instance type with your specified attributes. If no current
     * generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest
     * priced current generation instance types or, failing that, the lowest priced previous generation instance types
     * that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will
     * exclude instance types whose price exceeds your specified threshold. The parameter accepts an integer, which
     * Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as
     * ``999999``. If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is
     * based on the per-vCPU or per-memory price instead of the per instance price. Only one of
     * ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified.
     * Default: ``100``.
     * 
     * @param spotMaxPricePercentageOverLowestPrice the spotMaxPricePercentageOverLowestPrice value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements
        withSpotMaxPricePercentageOverLowestPrice(Integer spotMaxPricePercentageOverLowestPrice) {
        this.spotMaxPricePercentageOverLowestPrice = spotMaxPricePercentageOverLowestPrice;
        return this;
    }

    /**
     * Get the totalLocalStorageGB property: The minimum and maximum total local storage size for an instance type, in
     * GB. Default: No minimum or maximum limits ``TotalLocalStorageGBRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum total local storage size for an instance type, in GB.
     * 
     * @return the totalLocalStorageGB value.
     */
    public TotalLocalStorageGBRequest totalLocalStorageGB() {
        return this.totalLocalStorageGB;
    }

    /**
     * Set the totalLocalStorageGB property: The minimum and maximum total local storage size for an instance type, in
     * GB. Default: No minimum or maximum limits ``TotalLocalStorageGBRequest`` is a property of the
     * ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum total local storage size for an instance type, in GB.
     * 
     * @param totalLocalStorageGB the totalLocalStorageGB value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withTotalLocalStorageGB(TotalLocalStorageGBRequest totalLocalStorageGB) {
        this.totalLocalStorageGB = totalLocalStorageGB;
        return this;
    }

    /**
     * Get the vCpuCount property: The minimum and maximum number of vCPUs for an instance type. ``VCpuCountRequest`` is
     * a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum number of vCPUs for an instance type.
     * 
     * @return the vCpuCount value.
     */
    public VCpuCountRequest vCpuCount() {
        return this.vCpuCount;
    }

    /**
     * Set the vCpuCount property: The minimum and maximum number of vCPUs for an instance type. ``VCpuCountRequest`` is
     * a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup
     * LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
     * property type that describes the minimum and maximum number of vCPUs for an instance type.
     * 
     * @param vCpuCount the vCpuCount value to set.
     * @return the InstanceRequirements object itself.
     */
    public InstanceRequirements withVCpuCount(VCpuCountRequest vCpuCount) {
        this.vCpuCount = vCpuCount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (acceleratorCount() != null) {
            acceleratorCount().validate();
        }
        if (acceleratorTotalMemoryMiB() != null) {
            acceleratorTotalMemoryMiB().validate();
        }
        if (baselineEbsBandwidthMbps() != null) {
            baselineEbsBandwidthMbps().validate();
        }
        if (memoryGiBPerVCpu() != null) {
            memoryGiBPerVCpu().validate();
        }
        if (memoryMiB() != null) {
            memoryMiB().validate();
        }
        if (networkBandwidthGbps() != null) {
            networkBandwidthGbps().validate();
        }
        if (networkInterfaceCount() != null) {
            networkInterfaceCount().validate();
        }
        if (totalLocalStorageGB() != null) {
            totalLocalStorageGB().validate();
        }
        if (vCpuCount() != null) {
            vCpuCount().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("acceleratorCount", this.acceleratorCount);
        jsonWriter.writeArrayField("acceleratorManufacturers", this.acceleratorManufacturers,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("acceleratorNames", this.acceleratorNames,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("acceleratorTotalMemoryMiB", this.acceleratorTotalMemoryMiB);
        jsonWriter.writeArrayField("acceleratorTypes", this.acceleratorTypes,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("allowedInstanceTypes", this.allowedInstanceTypes,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("bareMetal", this.bareMetal);
        jsonWriter.writeJsonField("baselineEbsBandwidthMbps", this.baselineEbsBandwidthMbps);
        jsonWriter.writeStringField("burstablePerformance", this.burstablePerformance);
        jsonWriter.writeArrayField("cpuManufacturers", this.cpuManufacturers,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("excludedInstanceTypes", this.excludedInstanceTypes,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("instanceGenerations", this.instanceGenerations,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("localStorage", this.localStorage);
        jsonWriter.writeArrayField("localStorageTypes", this.localStorageTypes,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeNumberField("maxSpotPriceAsPercentageOfOptimalOnDemandPrice",
            this.maxSpotPriceAsPercentageOfOptimalOnDemandPrice);
        jsonWriter.writeJsonField("memoryGiBPerVCpu", this.memoryGiBPerVCpu);
        jsonWriter.writeJsonField("memoryMiB", this.memoryMiB);
        jsonWriter.writeJsonField("networkBandwidthGbps", this.networkBandwidthGbps);
        jsonWriter.writeJsonField("networkInterfaceCount", this.networkInterfaceCount);
        jsonWriter.writeNumberField("onDemandMaxPricePercentageOverLowestPrice",
            this.onDemandMaxPricePercentageOverLowestPrice);
        jsonWriter.writeBooleanField("requireHibernateSupport", this.requireHibernateSupport);
        jsonWriter.writeNumberField("spotMaxPricePercentageOverLowestPrice",
            this.spotMaxPricePercentageOverLowestPrice);
        jsonWriter.writeJsonField("totalLocalStorageGB", this.totalLocalStorageGB);
        jsonWriter.writeJsonField("vCpuCount", this.vCpuCount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InstanceRequirements from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InstanceRequirements if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InstanceRequirements.
     */
    public static InstanceRequirements fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InstanceRequirements deserializedInstanceRequirements = new InstanceRequirements();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("acceleratorCount".equals(fieldName)) {
                    deserializedInstanceRequirements.acceleratorCount = AcceleratorCountRequest.fromJson(reader);
                } else if ("acceleratorManufacturers".equals(fieldName)) {
                    List<String> acceleratorManufacturers = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.acceleratorManufacturers = acceleratorManufacturers;
                } else if ("acceleratorNames".equals(fieldName)) {
                    List<String> acceleratorNames = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.acceleratorNames = acceleratorNames;
                } else if ("acceleratorTotalMemoryMiB".equals(fieldName)) {
                    deserializedInstanceRequirements.acceleratorTotalMemoryMiB
                        = AcceleratorTotalMemoryMiBRequest.fromJson(reader);
                } else if ("acceleratorTypes".equals(fieldName)) {
                    List<String> acceleratorTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.acceleratorTypes = acceleratorTypes;
                } else if ("allowedInstanceTypes".equals(fieldName)) {
                    List<String> allowedInstanceTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.allowedInstanceTypes = allowedInstanceTypes;
                } else if ("bareMetal".equals(fieldName)) {
                    deserializedInstanceRequirements.bareMetal = reader.getString();
                } else if ("baselineEbsBandwidthMbps".equals(fieldName)) {
                    deserializedInstanceRequirements.baselineEbsBandwidthMbps
                        = BaselineEbsBandwidthMbpsRequest.fromJson(reader);
                } else if ("burstablePerformance".equals(fieldName)) {
                    deserializedInstanceRequirements.burstablePerformance = reader.getString();
                } else if ("cpuManufacturers".equals(fieldName)) {
                    List<String> cpuManufacturers = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.cpuManufacturers = cpuManufacturers;
                } else if ("excludedInstanceTypes".equals(fieldName)) {
                    List<String> excludedInstanceTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.excludedInstanceTypes = excludedInstanceTypes;
                } else if ("instanceGenerations".equals(fieldName)) {
                    List<String> instanceGenerations = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.instanceGenerations = instanceGenerations;
                } else if ("localStorage".equals(fieldName)) {
                    deserializedInstanceRequirements.localStorage = reader.getString();
                } else if ("localStorageTypes".equals(fieldName)) {
                    List<String> localStorageTypes = reader.readArray(reader1 -> reader1.getString());
                    deserializedInstanceRequirements.localStorageTypes = localStorageTypes;
                } else if ("maxSpotPriceAsPercentageOfOptimalOnDemandPrice".equals(fieldName)) {
                    deserializedInstanceRequirements.maxSpotPriceAsPercentageOfOptimalOnDemandPrice
                        = reader.getNullable(JsonReader::getInt);
                } else if ("memoryGiBPerVCpu".equals(fieldName)) {
                    deserializedInstanceRequirements.memoryGiBPerVCpu = MemoryGiBPerVCpuRequest.fromJson(reader);
                } else if ("memoryMiB".equals(fieldName)) {
                    deserializedInstanceRequirements.memoryMiB = MemoryMiBRequest.fromJson(reader);
                } else if ("networkBandwidthGbps".equals(fieldName)) {
                    deserializedInstanceRequirements.networkBandwidthGbps
                        = NetworkBandwidthGbpsRequest.fromJson(reader);
                } else if ("networkInterfaceCount".equals(fieldName)) {
                    deserializedInstanceRequirements.networkInterfaceCount
                        = NetworkInterfaceCountRequest.fromJson(reader);
                } else if ("onDemandMaxPricePercentageOverLowestPrice".equals(fieldName)) {
                    deserializedInstanceRequirements.onDemandMaxPricePercentageOverLowestPrice
                        = reader.getNullable(JsonReader::getInt);
                } else if ("requireHibernateSupport".equals(fieldName)) {
                    deserializedInstanceRequirements.requireHibernateSupport
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("spotMaxPricePercentageOverLowestPrice".equals(fieldName)) {
                    deserializedInstanceRequirements.spotMaxPricePercentageOverLowestPrice
                        = reader.getNullable(JsonReader::getInt);
                } else if ("totalLocalStorageGB".equals(fieldName)) {
                    deserializedInstanceRequirements.totalLocalStorageGB = TotalLocalStorageGBRequest.fromJson(reader);
                } else if ("vCpuCount".equals(fieldName)) {
                    deserializedInstanceRequirements.vCpuCount = VCpuCountRequest.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInstanceRequirements;
        });
    }
}

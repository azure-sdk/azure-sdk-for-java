// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of InstanceStatusSummary.
 */
@Fluent
public final class InstanceStatusSummary implements JsonSerializable<InstanceStatusSummary> {
    /*
     * <p>The system instance health or application instance health.</p>
     */
    private List<InstanceStatusDetails> details;

    /*
     * <p>The status.</p>
     */
    private SummaryStatusEnumValue status;

    /**
     * Creates an instance of InstanceStatusSummary class.
     */
    public InstanceStatusSummary() {
    }

    /**
     * Get the details property: &lt;p&gt;The system instance health or application instance health.&lt;/p&gt;.
     * 
     * @return the details value.
     */
    public List<InstanceStatusDetails> details() {
        return this.details;
    }

    /**
     * Set the details property: &lt;p&gt;The system instance health or application instance health.&lt;/p&gt;.
     * 
     * @param details the details value to set.
     * @return the InstanceStatusSummary object itself.
     */
    public InstanceStatusSummary withDetails(List<InstanceStatusDetails> details) {
        this.details = details;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The status.&lt;/p&gt;.
     * 
     * @return the status value.
     */
    public SummaryStatusEnumValue status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The status.&lt;/p&gt;.
     * 
     * @param status the status value to set.
     * @return the InstanceStatusSummary object itself.
     */
    public InstanceStatusSummary withStatus(SummaryStatusEnumValue status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (details() != null) {
            details().forEach(e -> e.validate());
        }
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("details", this.details, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InstanceStatusSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InstanceStatusSummary if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InstanceStatusSummary.
     */
    public static InstanceStatusSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InstanceStatusSummary deserializedInstanceStatusSummary = new InstanceStatusSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("details".equals(fieldName)) {
                    List<InstanceStatusDetails> details
                        = reader.readArray(reader1 -> InstanceStatusDetails.fromJson(reader1));
                    deserializedInstanceStatusSummary.details = details;
                } else if ("status".equals(fieldName)) {
                    deserializedInstanceStatusSummary.status = SummaryStatusEnumValue.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInstanceStatusSummary;
        });
    }
}

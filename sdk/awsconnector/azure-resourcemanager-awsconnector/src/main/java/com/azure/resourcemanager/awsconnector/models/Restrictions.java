// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of Restrictions.
 */
@Fluent
public final class Restrictions implements JsonSerializable<Restrictions> {
    /*
     * A complex type that controls the countries in which your content is distributed. CF determines the location of
     * your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the
     * [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-
     * distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from
     * your stack template. A complex type that controls the countries in which your content is distributed. CF
     * determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the
     * [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-
     * distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from
     * your stack template.
     */
    private GeoRestriction geoRestriction;

    /**
     * Creates an instance of Restrictions class.
     */
    public Restrictions() {
    }

    /**
     * Get the geoRestriction property: A complex type that controls the countries in which your content is distributed.
     * CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove
     * the
     * [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions)
     * property from your stack template. A complex type that controls the countries in which your content is
     * distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo
     * restriction, remove the
     * [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions)
     * property from your stack template.
     * 
     * @return the geoRestriction value.
     */
    public GeoRestriction geoRestriction() {
        return this.geoRestriction;
    }

    /**
     * Set the geoRestriction property: A complex type that controls the countries in which your content is distributed.
     * CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove
     * the
     * [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions)
     * property from your stack template. A complex type that controls the countries in which your content is
     * distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo
     * restriction, remove the
     * [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions)
     * property from your stack template.
     * 
     * @param geoRestriction the geoRestriction value to set.
     * @return the Restrictions object itself.
     */
    public Restrictions withGeoRestriction(GeoRestriction geoRestriction) {
        this.geoRestriction = geoRestriction;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (geoRestriction() != null) {
            geoRestriction().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("geoRestriction", this.geoRestriction);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Restrictions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Restrictions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the Restrictions.
     */
    public static Restrictions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Restrictions deserializedRestrictions = new Restrictions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("geoRestriction".equals(fieldName)) {
                    deserializedRestrictions.geoRestriction = GeoRestriction.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestrictions;
        });
    }
}

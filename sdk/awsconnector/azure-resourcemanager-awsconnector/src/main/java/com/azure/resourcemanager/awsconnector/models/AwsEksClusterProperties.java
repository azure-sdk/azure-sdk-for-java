// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Map;

/**
 * Definition of awsEksCluster.
 */
@Fluent
public final class AwsEksClusterProperties implements JsonSerializable<AwsEksClusterProperties> {
    /*
     * <p>The access configuration for the cluster.</p>
     */
    private AccessConfigResponse accessConfig;

    /*
     * <p>The Amazon Resource Name (ARN) of the cluster.</p>
     */
    private String arn;

    /*
     * <p>The <code>certificate-authority-data</code> for your cluster.</p>
     */
    private Certificate certificateAuthority;

    /*
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
     */
    private String clientRequestToken;

    /*
     * <p>The configuration used to connect to a cluster for registration.</p>
     */
    private ConnectorConfigResponse connectorConfig;

    /*
     * <p>The Unix epoch timestamp at object creation.</p>
     */
    private OffsetDateTime createdAt;

    /*
     * <p>The encryption configuration for the cluster.</p>
     */
    private List<EncryptionConfig> encryptionConfig;

    /*
     * <p>The endpoint for your Kubernetes API server.</p>
     */
    private String endpoint;

    /*
     * <p>An object representing the health of your local Amazon EKS cluster on an Amazon Web Services Outpost. This
     * object isn't available for clusters on the Amazon Web Services cloud.</p>
     */
    private ClusterHealth health;

    /*
     * <p>The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This property isn't available for
     * an Amazon EKS cluster on the Amazon Web Services cloud.</p>
     */
    private String id;

    /*
     * <p>The identity provider information for the cluster.</p>
     */
    private Identity identity;

    /*
     * <p>The Kubernetes network configuration for the cluster.</p>
     */
    private KubernetesNetworkConfigResponse kubernetesNetworkConfig;

    /*
     * <p>The logging configuration for your cluster.</p>
     */
    private LoggingAutoGenerated logging;

    /*
     * <p>The name of your cluster.</p>
     */
    private String name;

    /*
     * <p>An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost.
     * This object isn't available for clusters on the Amazon Web Services cloud.</p>
     */
    private OutpostConfigResponse outpostConfig;

    /*
     * <p>The platform version of your Amazon EKS cluster. For more information about clusters deployed on the Amazon
     * Web Services Cloud, see <a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'>Platform versions</a> in the <i>
     * <i>Amazon EKS User Guide</i> </i>. For more information about local clusters deployed on an Outpost, see <a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'>Amazon EKS local
     * cluster platform versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
     */
    private String platformVersion;

    /*
     * <p>The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements
     * to work properly with Kubernetes. For more information, see <a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html'>Cluster VPC considerations</a> and <a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html'>Cluster security group
     * considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
     */
    private VpcConfigResponse resourcesVpcConfig;

    /*
     * <p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to
     * make calls to Amazon Web Services API operations on your behalf.</p>
     */
    private String roleArn;

    /*
     * <p>The current status of the cluster.</p>
     */
    private ClusterStatusEnumValue status;

    /*
     * <p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value.
     * You define both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p>
     */
    private Map<String, String> tags;

    /*
     * <p>The Kubernetes server version for the cluster.</p>
     */
    private String version;

    /**
     * Creates an instance of AwsEksClusterProperties class.
     */
    public AwsEksClusterProperties() {
    }

    /**
     * Get the accessConfig property: &lt;p&gt;The access configuration for the cluster.&lt;/p&gt;.
     * 
     * @return the accessConfig value.
     */
    public AccessConfigResponse accessConfig() {
        return this.accessConfig;
    }

    /**
     * Set the accessConfig property: &lt;p&gt;The access configuration for the cluster.&lt;/p&gt;.
     * 
     * @param accessConfig the accessConfig value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withAccessConfig(AccessConfigResponse accessConfig) {
        this.accessConfig = accessConfig;
        return this;
    }

    /**
     * Get the arn property: &lt;p&gt;The Amazon Resource Name (ARN) of the cluster.&lt;/p&gt;.
     * 
     * @return the arn value.
     */
    public String arn() {
        return this.arn;
    }

    /**
     * Set the arn property: &lt;p&gt;The Amazon Resource Name (ARN) of the cluster.&lt;/p&gt;.
     * 
     * @param arn the arn value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withArn(String arn) {
        this.arn = arn;
        return this;
    }

    /**
     * Get the certificateAuthority property: &lt;p&gt;The &lt;code&gt;certificate-authority-data&lt;/code&gt; for your
     * cluster.&lt;/p&gt;.
     * 
     * @return the certificateAuthority value.
     */
    public Certificate certificateAuthority() {
        return this.certificateAuthority;
    }

    /**
     * Set the certificateAuthority property: &lt;p&gt;The &lt;code&gt;certificate-authority-data&lt;/code&gt; for your
     * cluster.&lt;/p&gt;.
     * 
     * @param certificateAuthority the certificateAuthority value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withCertificateAuthority(Certificate certificateAuthority) {
        this.certificateAuthority = certificateAuthority;
        return this;
    }

    /**
     * Get the clientRequestToken property: &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the
     * idempotency of the request.&lt;/p&gt;.
     * 
     * @return the clientRequestToken value.
     */
    public String clientRequestToken() {
        return this.clientRequestToken;
    }

    /**
     * Set the clientRequestToken property: &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the
     * idempotency of the request.&lt;/p&gt;.
     * 
     * @param clientRequestToken the clientRequestToken value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
        return this;
    }

    /**
     * Get the connectorConfig property: &lt;p&gt;The configuration used to connect to a cluster for
     * registration.&lt;/p&gt;.
     * 
     * @return the connectorConfig value.
     */
    public ConnectorConfigResponse connectorConfig() {
        return this.connectorConfig;
    }

    /**
     * Set the connectorConfig property: &lt;p&gt;The configuration used to connect to a cluster for
     * registration.&lt;/p&gt;.
     * 
     * @param connectorConfig the connectorConfig value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withConnectorConfig(ConnectorConfigResponse connectorConfig) {
        this.connectorConfig = connectorConfig;
        return this;
    }

    /**
     * Get the createdAt property: &lt;p&gt;The Unix epoch timestamp at object creation.&lt;/p&gt;.
     * 
     * @return the createdAt value.
     */
    public OffsetDateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Set the createdAt property: &lt;p&gt;The Unix epoch timestamp at object creation.&lt;/p&gt;.
     * 
     * @param createdAt the createdAt value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the encryptionConfig property: &lt;p&gt;The encryption configuration for the cluster.&lt;/p&gt;.
     * 
     * @return the encryptionConfig value.
     */
    public List<EncryptionConfig> encryptionConfig() {
        return this.encryptionConfig;
    }

    /**
     * Set the encryptionConfig property: &lt;p&gt;The encryption configuration for the cluster.&lt;/p&gt;.
     * 
     * @param encryptionConfig the encryptionConfig value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withEncryptionConfig(List<EncryptionConfig> encryptionConfig) {
        this.encryptionConfig = encryptionConfig;
        return this;
    }

    /**
     * Get the endpoint property: &lt;p&gt;The endpoint for your Kubernetes API server.&lt;/p&gt;.
     * 
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: &lt;p&gt;The endpoint for your Kubernetes API server.&lt;/p&gt;.
     * 
     * @param endpoint the endpoint value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the health property: &lt;p&gt;An object representing the health of your local Amazon EKS cluster on an Amazon
     * Web Services Outpost. This object isn't available for clusters on the Amazon Web Services cloud.&lt;/p&gt;.
     * 
     * @return the health value.
     */
    public ClusterHealth health() {
        return this.health;
    }

    /**
     * Set the health property: &lt;p&gt;An object representing the health of your local Amazon EKS cluster on an Amazon
     * Web Services Outpost. This object isn't available for clusters on the Amazon Web Services cloud.&lt;/p&gt;.
     * 
     * @param health the health value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withHealth(ClusterHealth health) {
        this.health = health;
        return this;
    }

    /**
     * Get the id property: &lt;p&gt;The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This
     * property isn't available for an Amazon EKS cluster on the Amazon Web Services cloud.&lt;/p&gt;.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: &lt;p&gt;The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This
     * property isn't available for an Amazon EKS cluster on the Amazon Web Services cloud.&lt;/p&gt;.
     * 
     * @param id the id value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the identity property: &lt;p&gt;The identity provider information for the cluster.&lt;/p&gt;.
     * 
     * @return the identity value.
     */
    public Identity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: &lt;p&gt;The identity provider information for the cluster.&lt;/p&gt;.
     * 
     * @param identity the identity value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withIdentity(Identity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the kubernetesNetworkConfig property: &lt;p&gt;The Kubernetes network configuration for the
     * cluster.&lt;/p&gt;.
     * 
     * @return the kubernetesNetworkConfig value.
     */
    public KubernetesNetworkConfigResponse kubernetesNetworkConfig() {
        return this.kubernetesNetworkConfig;
    }

    /**
     * Set the kubernetesNetworkConfig property: &lt;p&gt;The Kubernetes network configuration for the
     * cluster.&lt;/p&gt;.
     * 
     * @param kubernetesNetworkConfig the kubernetesNetworkConfig value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties
        withKubernetesNetworkConfig(KubernetesNetworkConfigResponse kubernetesNetworkConfig) {
        this.kubernetesNetworkConfig = kubernetesNetworkConfig;
        return this;
    }

    /**
     * Get the logging property: &lt;p&gt;The logging configuration for your cluster.&lt;/p&gt;.
     * 
     * @return the logging value.
     */
    public LoggingAutoGenerated logging() {
        return this.logging;
    }

    /**
     * Set the logging property: &lt;p&gt;The logging configuration for your cluster.&lt;/p&gt;.
     * 
     * @param logging the logging value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withLogging(LoggingAutoGenerated logging) {
        this.logging = logging;
        return this;
    }

    /**
     * Get the name property: &lt;p&gt;The name of your cluster.&lt;/p&gt;.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: &lt;p&gt;The name of your cluster.&lt;/p&gt;.
     * 
     * @param name the name value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the outpostConfig property: &lt;p&gt;An object representing the configuration of your local Amazon EKS
     * cluster on an Amazon Web Services Outpost. This object isn't available for clusters on the Amazon Web Services
     * cloud.&lt;/p&gt;.
     * 
     * @return the outpostConfig value.
     */
    public OutpostConfigResponse outpostConfig() {
        return this.outpostConfig;
    }

    /**
     * Set the outpostConfig property: &lt;p&gt;An object representing the configuration of your local Amazon EKS
     * cluster on an Amazon Web Services Outpost. This object isn't available for clusters on the Amazon Web Services
     * cloud.&lt;/p&gt;.
     * 
     * @param outpostConfig the outpostConfig value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withOutpostConfig(OutpostConfigResponse outpostConfig) {
        this.outpostConfig = outpostConfig;
        return this;
    }

    /**
     * Get the platformVersion property: &lt;p&gt;The platform version of your Amazon EKS cluster. For more information
     * about clusters deployed on the Amazon Web Services Cloud, see &lt;a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'&gt;Platform versions&lt;/a&gt; in
     * the &lt;i&gt; &lt;i&gt;Amazon EKS User Guide&lt;/i&gt; &lt;/i&gt;. For more information about local clusters
     * deployed on an Outpost, see &lt;a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'&gt;Amazon EKS local
     * cluster platform versions&lt;/a&gt; in the &lt;i&gt; &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;
     * &lt;/i&gt;.&lt;/p&gt;.
     * 
     * @return the platformVersion value.
     */
    public String platformVersion() {
        return this.platformVersion;
    }

    /**
     * Set the platformVersion property: &lt;p&gt;The platform version of your Amazon EKS cluster. For more information
     * about clusters deployed on the Amazon Web Services Cloud, see &lt;a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'&gt;Platform versions&lt;/a&gt; in
     * the &lt;i&gt; &lt;i&gt;Amazon EKS User Guide&lt;/i&gt; &lt;/i&gt;. For more information about local clusters
     * deployed on an Outpost, see &lt;a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'&gt;Amazon EKS local
     * cluster platform versions&lt;/a&gt; in the &lt;i&gt; &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;
     * &lt;/i&gt;.&lt;/p&gt;.
     * 
     * @param platformVersion the platformVersion value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withPlatformVersion(String platformVersion) {
        this.platformVersion = platformVersion;
        return this;
    }

    /**
     * Get the resourcesVpcConfig property: &lt;p&gt;The VPC configuration used by the cluster control plane. Amazon EKS
     * VPC resources have specific requirements to work properly with Kubernetes. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html'&gt;Cluster VPC considerations&lt;/a&gt;
     * and &lt;a href='https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html'&gt;Cluster security group
     * considerations&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @return the resourcesVpcConfig value.
     */
    public VpcConfigResponse resourcesVpcConfig() {
        return this.resourcesVpcConfig;
    }

    /**
     * Set the resourcesVpcConfig property: &lt;p&gt;The VPC configuration used by the cluster control plane. Amazon EKS
     * VPC resources have specific requirements to work properly with Kubernetes. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html'&gt;Cluster VPC considerations&lt;/a&gt;
     * and &lt;a href='https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html'&gt;Cluster security group
     * considerations&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @param resourcesVpcConfig the resourcesVpcConfig value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withResourcesVpcConfig(VpcConfigResponse resourcesVpcConfig) {
        this.resourcesVpcConfig = resourcesVpcConfig;
        return this;
    }

    /**
     * Get the roleArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the IAM role that provides permissions for
     * the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.&lt;/p&gt;.
     * 
     * @return the roleArn value.
     */
    public String roleArn() {
        return this.roleArn;
    }

    /**
     * Set the roleArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the IAM role that provides permissions for
     * the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.&lt;/p&gt;.
     * 
     * @param roleArn the roleArn value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The current status of the cluster.&lt;/p&gt;.
     * 
     * @return the status value.
     */
    public ClusterStatusEnumValue status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The current status of the cluster.&lt;/p&gt;.
     * 
     * @param status the status value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withStatus(ClusterStatusEnumValue status) {
        this.status = status;
        return this;
    }

    /**
     * Get the tags property: &lt;p&gt;Metadata that assists with categorization and organization. Each tag consists of
     * a key and an optional value. You define both. Tags don't propagate to any other cluster or Amazon Web Services
     * resources.&lt;/p&gt;.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: &lt;p&gt;Metadata that assists with categorization and organization. Each tag consists of
     * a key and an optional value. You define both. Tags don't propagate to any other cluster or Amazon Web Services
     * resources.&lt;/p&gt;.
     * 
     * @param tags the tags value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the version property: &lt;p&gt;The Kubernetes server version for the cluster.&lt;/p&gt;.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: &lt;p&gt;The Kubernetes server version for the cluster.&lt;/p&gt;.
     * 
     * @param version the version value to set.
     * @return the AwsEksClusterProperties object itself.
     */
    public AwsEksClusterProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (accessConfig() != null) {
            accessConfig().validate();
        }
        if (certificateAuthority() != null) {
            certificateAuthority().validate();
        }
        if (connectorConfig() != null) {
            connectorConfig().validate();
        }
        if (encryptionConfig() != null) {
            encryptionConfig().forEach(e -> e.validate());
        }
        if (health() != null) {
            health().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
        if (kubernetesNetworkConfig() != null) {
            kubernetesNetworkConfig().validate();
        }
        if (logging() != null) {
            logging().validate();
        }
        if (outpostConfig() != null) {
            outpostConfig().validate();
        }
        if (resourcesVpcConfig() != null) {
            resourcesVpcConfig().validate();
        }
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("accessConfig", this.accessConfig);
        jsonWriter.writeStringField("arn", this.arn);
        jsonWriter.writeJsonField("certificateAuthority", this.certificateAuthority);
        jsonWriter.writeStringField("clientRequestToken", this.clientRequestToken);
        jsonWriter.writeJsonField("connectorConfig", this.connectorConfig);
        jsonWriter.writeStringField("createdAt",
            this.createdAt == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.createdAt));
        jsonWriter.writeArrayField("encryptionConfig", this.encryptionConfig,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("endpoint", this.endpoint);
        jsonWriter.writeJsonField("health", this.health);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("identity", this.identity);
        jsonWriter.writeJsonField("kubernetesNetworkConfig", this.kubernetesNetworkConfig);
        jsonWriter.writeJsonField("logging", this.logging);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeJsonField("outpostConfig", this.outpostConfig);
        jsonWriter.writeStringField("platformVersion", this.platformVersion);
        jsonWriter.writeJsonField("resourcesVpcConfig", this.resourcesVpcConfig);
        jsonWriter.writeStringField("roleArn", this.roleArn);
        jsonWriter.writeJsonField("status", this.status);
        jsonWriter.writeMapField("tags", this.tags, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("version", this.version);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsEksClusterProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsEksClusterProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsEksClusterProperties.
     */
    public static AwsEksClusterProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsEksClusterProperties deserializedAwsEksClusterProperties = new AwsEksClusterProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessConfig".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.accessConfig = AccessConfigResponse.fromJson(reader);
                } else if ("arn".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.arn = reader.getString();
                } else if ("certificateAuthority".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.certificateAuthority = Certificate.fromJson(reader);
                } else if ("clientRequestToken".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.clientRequestToken = reader.getString();
                } else if ("connectorConfig".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.connectorConfig = ConnectorConfigResponse.fromJson(reader);
                } else if ("createdAt".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.createdAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("encryptionConfig".equals(fieldName)) {
                    List<EncryptionConfig> encryptionConfig
                        = reader.readArray(reader1 -> EncryptionConfig.fromJson(reader1));
                    deserializedAwsEksClusterProperties.encryptionConfig = encryptionConfig;
                } else if ("endpoint".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.endpoint = reader.getString();
                } else if ("health".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.health = ClusterHealth.fromJson(reader);
                } else if ("id".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.id = reader.getString();
                } else if ("identity".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.identity = Identity.fromJson(reader);
                } else if ("kubernetesNetworkConfig".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.kubernetesNetworkConfig
                        = KubernetesNetworkConfigResponse.fromJson(reader);
                } else if ("logging".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.logging = LoggingAutoGenerated.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.name = reader.getString();
                } else if ("outpostConfig".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.outpostConfig = OutpostConfigResponse.fromJson(reader);
                } else if ("platformVersion".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.platformVersion = reader.getString();
                } else if ("resourcesVpcConfig".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.resourcesVpcConfig = VpcConfigResponse.fromJson(reader);
                } else if ("roleArn".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.roleArn = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.status = ClusterStatusEnumValue.fromJson(reader);
                } else if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedAwsEksClusterProperties.tags = tags;
                } else if ("version".equals(fieldName)) {
                    deserializedAwsEksClusterProperties.version = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsEksClusterProperties;
        });
    }
}

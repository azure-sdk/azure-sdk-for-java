// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ReplicationDestination.
 */
@Fluent
public final class ReplicationDestinationAutoGenerated
    implements JsonSerializable<ReplicationDestinationAutoGenerated> {
    /*
     * Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and
     * you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not
     * specified in the replication configuration, the replicas are owned by same AWS-account that owns the source
     * object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the
     * same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is
     * not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source
     * object.
     */
    private AccessControlTranslation accessControlTranslation;

    /*
     * Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica
     * ownership to the AWS-account that owns the destination bucket by specifying the ``AccessControlTranslation``
     * property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region
     * Replication Additional Configuration: Change Replica
     * Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If
     * you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
     */
    private String account;

    /*
     * The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
     */
    private String bucket;

    /*
     * Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that
     * is a destination for replicated objects.
     */
    private EncryptionConfigurationAutoGenerated encryptionConfiguration;

    /*
     * A container specifying replication metrics-related settings enabling replication metrics and events. A container
     * specifying replication metrics-related settings enabling replication metrics and events.
     */
    private Metrics metrics;

    /*
     * A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time
     * when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics``
     * block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC
     * is enabled and the time when all objects and operations on objects must be replicated. Must be specified together
     * with a ``Metrics`` block.
     */
    private ReplicationTime replicationTime;

    /*
     * The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon
     * S3 uses the storage class of the source object to create the object replica. For valid values, see the
     * ``StorageClass`` element of the [PUT Bucket
     * replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon
     * S3 API Reference*.
     */
    private ReplicationDestinationStorageClass storageClass;

    /**
     * Creates an instance of ReplicationDestinationAutoGenerated class.
     */
    public ReplicationDestinationAutoGenerated() {
    }

    /**
     * Get the accessControlTranslation property: Specify this only in a cross-account scenario (where source and
     * destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that
     * owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by
     * same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and
     * destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that
     * owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by
     * same AWS-account that owns the source object.
     * 
     * @return the accessControlTranslation value.
     */
    public AccessControlTranslation accessControlTranslation() {
        return this.accessControlTranslation;
    }

    /**
     * Set the accessControlTranslation property: Specify this only in a cross-account scenario (where source and
     * destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that
     * owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by
     * same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and
     * destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that
     * owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by
     * same AWS-account that owns the source object.
     * 
     * @param accessControlTranslation the accessControlTranslation value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated
        withAccessControlTranslation(AccessControlTranslation accessControlTranslation) {
        this.accessControlTranslation = accessControlTranslation;
        return this;
    }

    /**
     * Get the account property: Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon
     * S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the
     * ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more
     * information, see [Cross-Region Replication Additional Configuration: Change Replica
     * Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If
     * you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
     * 
     * @return the account value.
     */
    public String account() {
        return this.account;
    }

    /**
     * Set the account property: Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon
     * S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the
     * ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more
     * information, see [Cross-Region Replication Additional Configuration: Change Replica
     * Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If
     * you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
     * 
     * @param account the account value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated withAccount(String account) {
        this.account = account;
        return this;
    }

    /**
     * Get the bucket property: The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the
     * results.
     * 
     * @return the bucket value.
     */
    public String bucket() {
        return this.bucket;
    }

    /**
     * Set the bucket property: The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the
     * results.
     * 
     * @param bucket the bucket value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated withBucket(String bucket) {
        this.bucket = bucket;
        return this;
    }

    /**
     * Get the encryptionConfiguration property: Specifies encryption-related information. Specifies encryption-related
     * information for an Amazon S3 bucket that is a destination for replicated objects.
     * 
     * @return the encryptionConfiguration value.
     */
    public EncryptionConfigurationAutoGenerated encryptionConfiguration() {
        return this.encryptionConfiguration;
    }

    /**
     * Set the encryptionConfiguration property: Specifies encryption-related information. Specifies encryption-related
     * information for an Amazon S3 bucket that is a destination for replicated objects.
     * 
     * @param encryptionConfiguration the encryptionConfiguration value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated
        withEncryptionConfiguration(EncryptionConfigurationAutoGenerated encryptionConfiguration) {
        this.encryptionConfiguration = encryptionConfiguration;
        return this;
    }

    /**
     * Get the metrics property: A container specifying replication metrics-related settings enabling replication
     * metrics and events. A container specifying replication metrics-related settings enabling replication metrics and
     * events.
     * 
     * @return the metrics value.
     */
    public Metrics metrics() {
        return this.metrics;
    }

    /**
     * Set the metrics property: A container specifying replication metrics-related settings enabling replication
     * metrics and events. A container specifying replication metrics-related settings enabling replication metrics and
     * events.
     * 
     * @param metrics the metrics value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated withMetrics(Metrics metrics) {
        this.metrics = metrics;
        return this;
    }

    /**
     * Get the replicationTime property: A container specifying S3 Replication Time Control (S3 RTC), including whether
     * S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified
     * together with a ``Metrics`` block. A container specifying S3 Replication Time Control (S3 RTC) related
     * information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be
     * replicated. Must be specified together with a ``Metrics`` block.
     * 
     * @return the replicationTime value.
     */
    public ReplicationTime replicationTime() {
        return this.replicationTime;
    }

    /**
     * Set the replicationTime property: A container specifying S3 Replication Time Control (S3 RTC), including whether
     * S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified
     * together with a ``Metrics`` block. A container specifying S3 Replication Time Control (S3 RTC) related
     * information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be
     * replicated. Must be specified together with a ``Metrics`` block.
     * 
     * @param replicationTime the replicationTime value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated withReplicationTime(ReplicationTime replicationTime) {
        this.replicationTime = replicationTime;
        return this;
    }

    /**
     * Get the storageClass property: The storage class to use when replicating objects, such as S3 Standard or reduced
     * redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. For
     * valid values, see the ``StorageClass`` element of the [PUT Bucket
     * replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon
     * S3 API Reference*.
     * 
     * @return the storageClass value.
     */
    public ReplicationDestinationStorageClass storageClass() {
        return this.storageClass;
    }

    /**
     * Set the storageClass property: The storage class to use when replicating objects, such as S3 Standard or reduced
     * redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. For
     * valid values, see the ``StorageClass`` element of the [PUT Bucket
     * replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon
     * S3 API Reference*.
     * 
     * @param storageClass the storageClass value to set.
     * @return the ReplicationDestinationAutoGenerated object itself.
     */
    public ReplicationDestinationAutoGenerated withStorageClass(ReplicationDestinationStorageClass storageClass) {
        this.storageClass = storageClass;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (accessControlTranslation() != null) {
            accessControlTranslation().validate();
        }
        if (encryptionConfiguration() != null) {
            encryptionConfiguration().validate();
        }
        if (metrics() != null) {
            metrics().validate();
        }
        if (replicationTime() != null) {
            replicationTime().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("accessControlTranslation", this.accessControlTranslation);
        jsonWriter.writeStringField("account", this.account);
        jsonWriter.writeStringField("bucket", this.bucket);
        jsonWriter.writeJsonField("encryptionConfiguration", this.encryptionConfiguration);
        jsonWriter.writeJsonField("metrics", this.metrics);
        jsonWriter.writeJsonField("replicationTime", this.replicationTime);
        jsonWriter.writeStringField("storageClass", this.storageClass == null ? null : this.storageClass.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReplicationDestinationAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReplicationDestinationAutoGenerated if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReplicationDestinationAutoGenerated.
     */
    public static ReplicationDestinationAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReplicationDestinationAutoGenerated deserializedReplicationDestinationAutoGenerated
                = new ReplicationDestinationAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accessControlTranslation".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.accessControlTranslation
                        = AccessControlTranslation.fromJson(reader);
                } else if ("account".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.account = reader.getString();
                } else if ("bucket".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.bucket = reader.getString();
                } else if ("encryptionConfiguration".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.encryptionConfiguration
                        = EncryptionConfigurationAutoGenerated.fromJson(reader);
                } else if ("metrics".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.metrics = Metrics.fromJson(reader);
                } else if ("replicationTime".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.replicationTime = ReplicationTime.fromJson(reader);
                } else if ("storageClass".equals(fieldName)) {
                    deserializedReplicationDestinationAutoGenerated.storageClass
                        = ReplicationDestinationStorageClass.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReplicationDestinationAutoGenerated;
        });
    }
}

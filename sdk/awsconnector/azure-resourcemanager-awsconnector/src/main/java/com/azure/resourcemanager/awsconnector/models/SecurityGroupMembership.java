// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of SecurityGroupMembership.
 */
@Fluent
public final class SecurityGroupMembership implements JsonSerializable<SecurityGroupMembership> {
    /*
     * <p>The unique ID for this security group.</p>
     */
    private String securityGroupIdentifier;

    /*
     * <p>The status of this security group.</p>
     */
    private String status;

    /**
     * Creates an instance of SecurityGroupMembership class.
     */
    public SecurityGroupMembership() {
    }

    /**
     * Get the securityGroupIdentifier property: &lt;p&gt;The unique ID for this security group.&lt;/p&gt;.
     * 
     * @return the securityGroupIdentifier value.
     */
    public String securityGroupIdentifier() {
        return this.securityGroupIdentifier;
    }

    /**
     * Set the securityGroupIdentifier property: &lt;p&gt;The unique ID for this security group.&lt;/p&gt;.
     * 
     * @param securityGroupIdentifier the securityGroupIdentifier value to set.
     * @return the SecurityGroupMembership object itself.
     */
    public SecurityGroupMembership withSecurityGroupIdentifier(String securityGroupIdentifier) {
        this.securityGroupIdentifier = securityGroupIdentifier;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The status of this security group.&lt;/p&gt;.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The status of this security group.&lt;/p&gt;.
     * 
     * @param status the status value to set.
     * @return the SecurityGroupMembership object itself.
     */
    public SecurityGroupMembership withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("securityGroupIdentifier", this.securityGroupIdentifier);
        jsonWriter.writeStringField("status", this.status);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SecurityGroupMembership from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SecurityGroupMembership if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SecurityGroupMembership.
     */
    public static SecurityGroupMembership fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SecurityGroupMembership deserializedSecurityGroupMembership = new SecurityGroupMembership();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("securityGroupIdentifier".equals(fieldName)) {
                    deserializedSecurityGroupMembership.securityGroupIdentifier = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedSecurityGroupMembership.status = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSecurityGroupMembership;
        });
    }
}

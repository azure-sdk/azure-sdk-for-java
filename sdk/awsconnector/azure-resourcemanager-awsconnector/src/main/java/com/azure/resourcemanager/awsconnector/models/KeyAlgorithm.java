// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * KeyAlgorithm enum.
 */
public final class KeyAlgorithm extends ExpandableStringEnum<KeyAlgorithm> {
    /**
     * Static value EC_prime256v1 for KeyAlgorithm.
     */
    public static final KeyAlgorithm EC_PRIME256V1 = fromString("EC_prime256v1");

    /**
     * Static value EC_secp384r1 for KeyAlgorithm.
     */
    public static final KeyAlgorithm EC_SECP384R1 = fromString("EC_secp384r1");

    /**
     * Static value EC_secp521r1 for KeyAlgorithm.
     */
    public static final KeyAlgorithm EC_SECP521R1 = fromString("EC_secp521r1");

    /**
     * Static value RSA_1024 for KeyAlgorithm.
     */
    public static final KeyAlgorithm RSA_1024 = fromString("RSA_1024");

    /**
     * Static value RSA_2048 for KeyAlgorithm.
     */
    public static final KeyAlgorithm RSA_2048 = fromString("RSA_2048");

    /**
     * Static value RSA_3072 for KeyAlgorithm.
     */
    public static final KeyAlgorithm RSA_3072 = fromString("RSA_3072");

    /**
     * Static value RSA_4096 for KeyAlgorithm.
     */
    public static final KeyAlgorithm RSA_4096 = fromString("RSA_4096");

    /**
     * Creates a new instance of KeyAlgorithm value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public KeyAlgorithm() {
    }

    /**
     * Creates or finds a KeyAlgorithm from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding KeyAlgorithm.
     */
    public static KeyAlgorithm fromString(String name) {
        return fromString(name, KeyAlgorithm.class);
    }

    /**
     * Gets known KeyAlgorithm values.
     * 
     * @return known KeyAlgorithm values.
     */
    public static Collection<KeyAlgorithm> values() {
        return values(KeyAlgorithm.class);
    }
}

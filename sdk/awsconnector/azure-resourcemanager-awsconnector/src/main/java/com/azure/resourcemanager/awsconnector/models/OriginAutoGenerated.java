// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of Origin.
 */
@Fluent
public final class OriginAutoGenerated implements JsonSerializable<OriginAutoGenerated> {
    /*
     * The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3,
     * and the default (if you don't specify otherwise) is 3. For a custom origin (including an Amazon S3 bucket that's
     * configured with static website hosting), this value also specifies the number of times that CloudFront attempts
     * to get a response from the origin, in the case of an [Origin Response
     * Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#
     * DownloadDistValuesOriginResponseTimeout). For more information, see [Origin Connection
     * Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html
     * #origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
     */
    private Integer connectionAttempts;

    /*
     * The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum
     * timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds.
     * For more information, see [Origin Connection
     * Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#
     * origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
     */
    private Integer connectionTimeout;

    /*
     * Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket
     * is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static
     * website hosting, use the ``S3OriginConfig`` type instead. A custom origin. A custom origin is any origin that is
     * *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website
     * hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
     */
    private CustomOriginConfig customOriginConfig;

    /*
     * The domain name for the origin. For more information, see [Origin Domain
     * Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#
     * DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
     */
    private String domainName;

    /*
     * A unique identifier for the origin. This value must be unique within the distribution. Use this value to specify
     * the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
     */
    private String id;

    /*
     * The unique identifier of an origin access control for this origin. For more information, see [Restricting access
     * to an Amazon S3
     * origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-
     * s3.html) in the *Amazon CloudFront Developer Guide*.
     */
    private String originAccessControlId;

    /*
     * A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin. For more
     * information, see [Adding Custom Headers to Origin
     * Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in
     * the *Amazon CloudFront Developer Guide*.
     */
    private List<OriginCustomHeader> originCustomHeaders;

    /*
     * An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the
     * origin. For more information, see [Origin
     * Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#
     * DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
     */
    private String originPath;

    /*
     * CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin. For more information, see
     * [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in
     * the *Amazon CloudFront Developer Guide*. CloudFront Origin Shield. Using Origin Shield can help reduce the load
     * on your origin. For more information, see [Using Origin
     * Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon
     * CloudFront Developer Guide*.
     */
    private OriginShield originShield;

    /*
     * Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website
     * hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static
     * website hosting, use the ``CustomOriginConfig`` type instead. A complex type that contains information about the
     * Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use
     * the ``CustomOriginConfig`` element instead.
     */
    private S3OriginConfig s3OriginConfig;

    /**
     * Creates an instance of OriginAutoGenerated class.
     */
    public OriginAutoGenerated() {
    }

    /**
     * Get the connectionAttempts property: The number of times that CloudFront attempts to connect to the origin. The
     * minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3. For a custom origin
     * (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the
     * number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response
     * Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout).
     * For more information, see [Origin Connection
     * Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @return the connectionAttempts value.
     */
    public Integer connectionAttempts() {
        return this.connectionAttempts;
    }

    /**
     * Set the connectionAttempts property: The number of times that CloudFront attempts to connect to the origin. The
     * minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3. For a custom origin
     * (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the
     * number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response
     * Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout).
     * For more information, see [Origin Connection
     * Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @param connectionAttempts the connectionAttempts value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withConnectionAttempts(Integer connectionAttempts) {
        this.connectionAttempts = connectionAttempts;
        return this;
    }

    /**
     * Get the connectionTimeout property: The number of seconds that CloudFront waits when trying to establish a
     * connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you
     * don't specify otherwise) is 10 seconds. For more information, see [Origin Connection
     * Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @return the connectionTimeout value.
     */
    public Integer connectionTimeout() {
        return this.connectionTimeout;
    }

    /**
     * Set the connectionTimeout property: The number of seconds that CloudFront waits when trying to establish a
     * connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you
     * don't specify otherwise) is 10 seconds. For more information, see [Origin Connection
     * Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @param connectionTimeout the connectionTimeout value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withConnectionTimeout(Integer connectionTimeout) {
        this.connectionTimeout = connectionTimeout;
        return this;
    }

    /**
     * Get the customOriginConfig property: Use this type to specify an origin that is not an Amazon S3 bucket, with one
     * exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3
     * bucket is not configured with static website hosting, use the ``S3OriginConfig`` type instead. A custom origin. A
     * custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is
     * [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html)
     * *is* a custom origin.
     * 
     * @return the customOriginConfig value.
     */
    public CustomOriginConfig customOriginConfig() {
        return this.customOriginConfig;
    }

    /**
     * Set the customOriginConfig property: Use this type to specify an origin that is not an Amazon S3 bucket, with one
     * exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3
     * bucket is not configured with static website hosting, use the ``S3OriginConfig`` type instead. A custom origin. A
     * custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is
     * [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html)
     * *is* a custom origin.
     * 
     * @param customOriginConfig the customOriginConfig value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withCustomOriginConfig(CustomOriginConfig customOriginConfig) {
        this.customOriginConfig = customOriginConfig;
        return this;
    }

    /**
     * Get the domainName property: The domain name for the origin. For more information, see [Origin Domain
     * Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: The domain name for the origin. For more information, see [Origin Domain
     * Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @param domainName the domainName value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Get the id property: A unique identifier for the origin. This value must be unique within the distribution. Use
     * this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: A unique identifier for the origin. This value must be unique within the distribution. Use
     * this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
     * 
     * @param id the id value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the originAccessControlId property: The unique identifier of an origin access control for this origin. For
     * more information, see [Restricting access to an Amazon S3
     * origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @return the originAccessControlId value.
     */
    public String originAccessControlId() {
        return this.originAccessControlId;
    }

    /**
     * Set the originAccessControlId property: The unique identifier of an origin access control for this origin. For
     * more information, see [Restricting access to an Amazon S3
     * origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @param originAccessControlId the originAccessControlId value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withOriginAccessControlId(String originAccessControlId) {
        this.originAccessControlId = originAccessControlId;
        return this;
    }

    /**
     * Get the originCustomHeaders property: A list of HTTP header names and values that CloudFront adds to the requests
     * that it sends to the origin. For more information, see [Adding Custom Headers to Origin
     * Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in
     * the *Amazon CloudFront Developer Guide*.
     * 
     * @return the originCustomHeaders value.
     */
    public List<OriginCustomHeader> originCustomHeaders() {
        return this.originCustomHeaders;
    }

    /**
     * Set the originCustomHeaders property: A list of HTTP header names and values that CloudFront adds to the requests
     * that it sends to the origin. For more information, see [Adding Custom Headers to Origin
     * Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in
     * the *Amazon CloudFront Developer Guide*.
     * 
     * @param originCustomHeaders the originCustomHeaders value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withOriginCustomHeaders(List<OriginCustomHeader> originCustomHeaders) {
        this.originCustomHeaders = originCustomHeaders;
        return this;
    }

    /**
     * Get the originPath property: An optional path that CloudFront appends to the origin domain name when CloudFront
     * requests content from the origin. For more information, see [Origin
     * Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @return the originPath value.
     */
    public String originPath() {
        return this.originPath;
    }

    /**
     * Set the originPath property: An optional path that CloudFront appends to the origin domain name when CloudFront
     * requests content from the origin. For more information, see [Origin
     * Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath)
     * in the *Amazon CloudFront Developer Guide*.
     * 
     * @param originPath the originPath value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withOriginPath(String originPath) {
        this.originPath = originPath;
        return this;
    }

    /**
     * Get the originShield property: CloudFront Origin Shield. Using Origin Shield can help reduce the load on your
     * origin. For more information, see [Using Origin
     * Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon
     * CloudFront Developer Guide*. CloudFront Origin Shield. Using Origin Shield can help reduce the load on your
     * origin. For more information, see [Using Origin
     * Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon
     * CloudFront Developer Guide*.
     * 
     * @return the originShield value.
     */
    public OriginShield originShield() {
        return this.originShield;
    }

    /**
     * Set the originShield property: CloudFront Origin Shield. Using Origin Shield can help reduce the load on your
     * origin. For more information, see [Using Origin
     * Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon
     * CloudFront Developer Guide*. CloudFront Origin Shield. Using Origin Shield can help reduce the load on your
     * origin. For more information, see [Using Origin
     * Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon
     * CloudFront Developer Guide*.
     * 
     * @param originShield the originShield value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withOriginShield(OriginShield originShield) {
        this.originShield = originShield;
        return this;
    }

    /**
     * Get the s3OriginConfig property: Use this type to specify an origin that is an Amazon S3 bucket that is not
     * configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that
     * is configured with static website hosting, use the ``CustomOriginConfig`` type instead. A complex type that
     * contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is
     * configured as a website endpoint, use the ``CustomOriginConfig`` element instead.
     * 
     * @return the s3OriginConfig value.
     */
    public S3OriginConfig s3OriginConfig() {
        return this.s3OriginConfig;
    }

    /**
     * Set the s3OriginConfig property: Use this type to specify an origin that is an Amazon S3 bucket that is not
     * configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that
     * is configured with static website hosting, use the ``CustomOriginConfig`` type instead. A complex type that
     * contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is
     * configured as a website endpoint, use the ``CustomOriginConfig`` element instead.
     * 
     * @param s3OriginConfig the s3OriginConfig value to set.
     * @return the OriginAutoGenerated object itself.
     */
    public OriginAutoGenerated withS3OriginConfig(S3OriginConfig s3OriginConfig) {
        this.s3OriginConfig = s3OriginConfig;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customOriginConfig() != null) {
            customOriginConfig().validate();
        }
        if (originCustomHeaders() != null) {
            originCustomHeaders().forEach(e -> e.validate());
        }
        if (originShield() != null) {
            originShield().validate();
        }
        if (s3OriginConfig() != null) {
            s3OriginConfig().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("connectionAttempts", this.connectionAttempts);
        jsonWriter.writeNumberField("connectionTimeout", this.connectionTimeout);
        jsonWriter.writeJsonField("customOriginConfig", this.customOriginConfig);
        jsonWriter.writeStringField("domainName", this.domainName);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("originAccessControlId", this.originAccessControlId);
        jsonWriter.writeArrayField("originCustomHeaders", this.originCustomHeaders,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("originPath", this.originPath);
        jsonWriter.writeJsonField("originShield", this.originShield);
        jsonWriter.writeJsonField("s3OriginConfig", this.s3OriginConfig);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OriginAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OriginAutoGenerated if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the OriginAutoGenerated.
     */
    public static OriginAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OriginAutoGenerated deserializedOriginAutoGenerated = new OriginAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("connectionAttempts".equals(fieldName)) {
                    deserializedOriginAutoGenerated.connectionAttempts = reader.getNullable(JsonReader::getInt);
                } else if ("connectionTimeout".equals(fieldName)) {
                    deserializedOriginAutoGenerated.connectionTimeout = reader.getNullable(JsonReader::getInt);
                } else if ("customOriginConfig".equals(fieldName)) {
                    deserializedOriginAutoGenerated.customOriginConfig = CustomOriginConfig.fromJson(reader);
                } else if ("domainName".equals(fieldName)) {
                    deserializedOriginAutoGenerated.domainName = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedOriginAutoGenerated.id = reader.getString();
                } else if ("originAccessControlId".equals(fieldName)) {
                    deserializedOriginAutoGenerated.originAccessControlId = reader.getString();
                } else if ("originCustomHeaders".equals(fieldName)) {
                    List<OriginCustomHeader> originCustomHeaders
                        = reader.readArray(reader1 -> OriginCustomHeader.fromJson(reader1));
                    deserializedOriginAutoGenerated.originCustomHeaders = originCustomHeaders;
                } else if ("originPath".equals(fieldName)) {
                    deserializedOriginAutoGenerated.originPath = reader.getString();
                } else if ("originShield".equals(fieldName)) {
                    deserializedOriginAutoGenerated.originShield = OriginShield.fromJson(reader);
                } else if ("s3OriginConfig".equals(fieldName)) {
                    deserializedOriginAutoGenerated.s3OriginConfig = S3OriginConfig.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOriginAutoGenerated;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of VpcConfig.
 */
@Fluent
public final class VpcConfigAutoGenerated implements JsonSerializable<VpcConfigAutoGenerated> {
    /*
     * Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
     */
    private Boolean ipv6AllowedForDualStack;

    /*
     * A list of VPC security group IDs.
     */
    private List<String> securityGroupIds;

    /*
     * A list of VPC subnet IDs.
     */
    private List<String> subnetIds;

    /**
     * Creates an instance of VpcConfigAutoGenerated class.
     */
    public VpcConfigAutoGenerated() {
    }

    /**
     * Get the ipv6AllowedForDualStack property: Allows outbound IPv6 traffic on VPC functions that are connected to
     * dual-stack subnets.
     * 
     * @return the ipv6AllowedForDualStack value.
     */
    public Boolean ipv6AllowedForDualStack() {
        return this.ipv6AllowedForDualStack;
    }

    /**
     * Set the ipv6AllowedForDualStack property: Allows outbound IPv6 traffic on VPC functions that are connected to
     * dual-stack subnets.
     * 
     * @param ipv6AllowedForDualStack the ipv6AllowedForDualStack value to set.
     * @return the VpcConfigAutoGenerated object itself.
     */
    public VpcConfigAutoGenerated withIpv6AllowedForDualStack(Boolean ipv6AllowedForDualStack) {
        this.ipv6AllowedForDualStack = ipv6AllowedForDualStack;
        return this;
    }

    /**
     * Get the securityGroupIds property: A list of VPC security group IDs.
     * 
     * @return the securityGroupIds value.
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }

    /**
     * Set the securityGroupIds property: A list of VPC security group IDs.
     * 
     * @param securityGroupIds the securityGroupIds value to set.
     * @return the VpcConfigAutoGenerated object itself.
     */
    public VpcConfigAutoGenerated withSecurityGroupIds(List<String> securityGroupIds) {
        this.securityGroupIds = securityGroupIds;
        return this;
    }

    /**
     * Get the subnetIds property: A list of VPC subnet IDs.
     * 
     * @return the subnetIds value.
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }

    /**
     * Set the subnetIds property: A list of VPC subnet IDs.
     * 
     * @param subnetIds the subnetIds value to set.
     * @return the VpcConfigAutoGenerated object itself.
     */
    public VpcConfigAutoGenerated withSubnetIds(List<String> subnetIds) {
        this.subnetIds = subnetIds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("ipv6AllowedForDualStack", this.ipv6AllowedForDualStack);
        jsonWriter.writeArrayField("securityGroupIds", this.securityGroupIds,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("subnetIds", this.subnetIds, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VpcConfigAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VpcConfigAutoGenerated if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VpcConfigAutoGenerated.
     */
    public static VpcConfigAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VpcConfigAutoGenerated deserializedVpcConfigAutoGenerated = new VpcConfigAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ipv6AllowedForDualStack".equals(fieldName)) {
                    deserializedVpcConfigAutoGenerated.ipv6AllowedForDualStack
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("securityGroupIds".equals(fieldName)) {
                    List<String> securityGroupIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedVpcConfigAutoGenerated.securityGroupIds = securityGroupIds;
                } else if ("subnetIds".equals(fieldName)) {
                    List<String> subnetIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedVpcConfigAutoGenerated.subnetIds = subnetIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVpcConfigAutoGenerated;
        });
    }
}

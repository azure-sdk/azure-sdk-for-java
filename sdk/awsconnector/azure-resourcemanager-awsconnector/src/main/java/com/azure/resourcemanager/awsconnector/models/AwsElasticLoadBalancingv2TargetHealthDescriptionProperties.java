// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsElasticLoadBalancingv2TargetHealthDescription.
 */
@Fluent
public final class AwsElasticLoadBalancingv2TargetHealthDescriptionProperties
    implements JsonSerializable<AwsElasticLoadBalancingv2TargetHealthDescriptionProperties> {
    /*
     * <p>The anomaly detection result for the target.</p> <p>If no anomalies were detected, the result is
     * <code>normal</code>.</p> <p>If anomalies were detected, the result is <code>anomalous</code>.</p>
     */
    private AnomalyDetection anomalyDetection;

    /*
     * <p>The port to use to connect with the target.</p>
     */
    private String healthCheckPort;

    /*
     * <p>The description of the target.</p>
     */
    private TargetDescriptionAutoGenerated target;

    /*
     * <p>The health information for the target.</p>
     */
    private TargetHealth targetHealth;

    /**
     * Creates an instance of AwsElasticLoadBalancingv2TargetHealthDescriptionProperties class.
     */
    public AwsElasticLoadBalancingv2TargetHealthDescriptionProperties() {
    }

    /**
     * Get the anomalyDetection property: &lt;p&gt;The anomaly detection result for the target.&lt;/p&gt; &lt;p&gt;If no
     * anomalies were detected, the result is &lt;code&gt;normal&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If anomalies were
     * detected, the result is &lt;code&gt;anomalous&lt;/code&gt;.&lt;/p&gt;.
     * 
     * @return the anomalyDetection value.
     */
    public AnomalyDetection anomalyDetection() {
        return this.anomalyDetection;
    }

    /**
     * Set the anomalyDetection property: &lt;p&gt;The anomaly detection result for the target.&lt;/p&gt; &lt;p&gt;If no
     * anomalies were detected, the result is &lt;code&gt;normal&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If anomalies were
     * detected, the result is &lt;code&gt;anomalous&lt;/code&gt;.&lt;/p&gt;.
     * 
     * @param anomalyDetection the anomalyDetection value to set.
     * @return the AwsElasticLoadBalancingv2TargetHealthDescriptionProperties object itself.
     */
    public AwsElasticLoadBalancingv2TargetHealthDescriptionProperties
        withAnomalyDetection(AnomalyDetection anomalyDetection) {
        this.anomalyDetection = anomalyDetection;
        return this;
    }

    /**
     * Get the healthCheckPort property: &lt;p&gt;The port to use to connect with the target.&lt;/p&gt;.
     * 
     * @return the healthCheckPort value.
     */
    public String healthCheckPort() {
        return this.healthCheckPort;
    }

    /**
     * Set the healthCheckPort property: &lt;p&gt;The port to use to connect with the target.&lt;/p&gt;.
     * 
     * @param healthCheckPort the healthCheckPort value to set.
     * @return the AwsElasticLoadBalancingv2TargetHealthDescriptionProperties object itself.
     */
    public AwsElasticLoadBalancingv2TargetHealthDescriptionProperties withHealthCheckPort(String healthCheckPort) {
        this.healthCheckPort = healthCheckPort;
        return this;
    }

    /**
     * Get the target property: &lt;p&gt;The description of the target.&lt;/p&gt;.
     * 
     * @return the target value.
     */
    public TargetDescriptionAutoGenerated target() {
        return this.target;
    }

    /**
     * Set the target property: &lt;p&gt;The description of the target.&lt;/p&gt;.
     * 
     * @param target the target value to set.
     * @return the AwsElasticLoadBalancingv2TargetHealthDescriptionProperties object itself.
     */
    public AwsElasticLoadBalancingv2TargetHealthDescriptionProperties
        withTarget(TargetDescriptionAutoGenerated target) {
        this.target = target;
        return this;
    }

    /**
     * Get the targetHealth property: &lt;p&gt;The health information for the target.&lt;/p&gt;.
     * 
     * @return the targetHealth value.
     */
    public TargetHealth targetHealth() {
        return this.targetHealth;
    }

    /**
     * Set the targetHealth property: &lt;p&gt;The health information for the target.&lt;/p&gt;.
     * 
     * @param targetHealth the targetHealth value to set.
     * @return the AwsElasticLoadBalancingv2TargetHealthDescriptionProperties object itself.
     */
    public AwsElasticLoadBalancingv2TargetHealthDescriptionProperties withTargetHealth(TargetHealth targetHealth) {
        this.targetHealth = targetHealth;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (anomalyDetection() != null) {
            anomalyDetection().validate();
        }
        if (target() != null) {
            target().validate();
        }
        if (targetHealth() != null) {
            targetHealth().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("anomalyDetection", this.anomalyDetection);
        jsonWriter.writeStringField("healthCheckPort", this.healthCheckPort);
        jsonWriter.writeJsonField("target", this.target);
        jsonWriter.writeJsonField("targetHealth", this.targetHealth);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsElasticLoadBalancingv2TargetHealthDescriptionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsElasticLoadBalancingv2TargetHealthDescriptionProperties if the JsonReader was pointing
     * to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AwsElasticLoadBalancingv2TargetHealthDescriptionProperties.
     */
    public static AwsElasticLoadBalancingv2TargetHealthDescriptionProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AwsElasticLoadBalancingv2TargetHealthDescriptionProperties deserializedAwsElasticLoadBalancingv2TargetHealthDescriptionProperties
                = new AwsElasticLoadBalancingv2TargetHealthDescriptionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("anomalyDetection".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingv2TargetHealthDescriptionProperties.anomalyDetection
                        = AnomalyDetection.fromJson(reader);
                } else if ("healthCheckPort".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingv2TargetHealthDescriptionProperties.healthCheckPort
                        = reader.getString();
                } else if ("target".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingv2TargetHealthDescriptionProperties.target
                        = TargetDescriptionAutoGenerated.fromJson(reader);
                } else if ("targetHealth".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingv2TargetHealthDescriptionProperties.targetHealth
                        = TargetHealth.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsElasticLoadBalancingv2TargetHealthDescriptionProperties;
        });
    }
}

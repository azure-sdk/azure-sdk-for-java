// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of TargetGroupStickinessConfig.
 */
@Fluent
public final class TargetGroupStickinessConfig implements JsonSerializable<TargetGroupStickinessConfig> {
    /*
     * The time period, in seconds, during which requests from a client should be routed to the same target group. The
     * range is 1-604800 seconds (7 days).
     */
    private Integer durationSeconds;

    /*
     * Indicates whether target group stickiness is enabled.
     */
    private Boolean enabled;

    /**
     * Creates an instance of TargetGroupStickinessConfig class.
     */
    public TargetGroupStickinessConfig() {
    }

    /**
     * Get the durationSeconds property: The time period, in seconds, during which requests from a client should be
     * routed to the same target group. The range is 1-604800 seconds (7 days).
     * 
     * @return the durationSeconds value.
     */
    public Integer durationSeconds() {
        return this.durationSeconds;
    }

    /**
     * Set the durationSeconds property: The time period, in seconds, during which requests from a client should be
     * routed to the same target group. The range is 1-604800 seconds (7 days).
     * 
     * @param durationSeconds the durationSeconds value to set.
     * @return the TargetGroupStickinessConfig object itself.
     */
    public TargetGroupStickinessConfig withDurationSeconds(Integer durationSeconds) {
        this.durationSeconds = durationSeconds;
        return this;
    }

    /**
     * Get the enabled property: Indicates whether target group stickiness is enabled.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Indicates whether target group stickiness is enabled.
     * 
     * @param enabled the enabled value to set.
     * @return the TargetGroupStickinessConfig object itself.
     */
    public TargetGroupStickinessConfig withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("durationSeconds", this.durationSeconds);
        jsonWriter.writeBooleanField("enabled", this.enabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TargetGroupStickinessConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TargetGroupStickinessConfig if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TargetGroupStickinessConfig.
     */
    public static TargetGroupStickinessConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TargetGroupStickinessConfig deserializedTargetGroupStickinessConfig = new TargetGroupStickinessConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("durationSeconds".equals(fieldName)) {
                    deserializedTargetGroupStickinessConfig.durationSeconds = reader.getNullable(JsonReader::getInt);
                } else if ("enabled".equals(fieldName)) {
                    deserializedTargetGroupStickinessConfig.enabled = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTargetGroupStickinessConfig;
        });
    }
}

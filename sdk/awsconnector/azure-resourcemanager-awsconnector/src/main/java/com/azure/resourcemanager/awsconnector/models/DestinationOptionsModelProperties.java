// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of DestinationOptionsModelProperties.
 */
@Fluent
public final class DestinationOptionsModelProperties implements JsonSerializable<DestinationOptionsModelProperties> {
    /*
     * Property fileFormat
     */
    private FileFormat fileFormat;

    /*
     * Property hiveCompatiblePartitions
     */
    private Boolean hiveCompatiblePartitions;

    /*
     * Property perHourPartition
     */
    private Boolean perHourPartition;

    /**
     * Creates an instance of DestinationOptionsModelProperties class.
     */
    public DestinationOptionsModelProperties() {
    }

    /**
     * Get the fileFormat property: Property fileFormat.
     * 
     * @return the fileFormat value.
     */
    public FileFormat fileFormat() {
        return this.fileFormat;
    }

    /**
     * Set the fileFormat property: Property fileFormat.
     * 
     * @param fileFormat the fileFormat value to set.
     * @return the DestinationOptionsModelProperties object itself.
     */
    public DestinationOptionsModelProperties withFileFormat(FileFormat fileFormat) {
        this.fileFormat = fileFormat;
        return this;
    }

    /**
     * Get the hiveCompatiblePartitions property: Property hiveCompatiblePartitions.
     * 
     * @return the hiveCompatiblePartitions value.
     */
    public Boolean hiveCompatiblePartitions() {
        return this.hiveCompatiblePartitions;
    }

    /**
     * Set the hiveCompatiblePartitions property: Property hiveCompatiblePartitions.
     * 
     * @param hiveCompatiblePartitions the hiveCompatiblePartitions value to set.
     * @return the DestinationOptionsModelProperties object itself.
     */
    public DestinationOptionsModelProperties withHiveCompatiblePartitions(Boolean hiveCompatiblePartitions) {
        this.hiveCompatiblePartitions = hiveCompatiblePartitions;
        return this;
    }

    /**
     * Get the perHourPartition property: Property perHourPartition.
     * 
     * @return the perHourPartition value.
     */
    public Boolean perHourPartition() {
        return this.perHourPartition;
    }

    /**
     * Set the perHourPartition property: Property perHourPartition.
     * 
     * @param perHourPartition the perHourPartition value to set.
     * @return the DestinationOptionsModelProperties object itself.
     */
    public DestinationOptionsModelProperties withPerHourPartition(Boolean perHourPartition) {
        this.perHourPartition = perHourPartition;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("fileFormat", this.fileFormat == null ? null : this.fileFormat.toString());
        jsonWriter.writeBooleanField("hiveCompatiblePartitions", this.hiveCompatiblePartitions);
        jsonWriter.writeBooleanField("perHourPartition", this.perHourPartition);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DestinationOptionsModelProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DestinationOptionsModelProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DestinationOptionsModelProperties.
     */
    public static DestinationOptionsModelProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DestinationOptionsModelProperties deserializedDestinationOptionsModelProperties
                = new DestinationOptionsModelProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fileFormat".equals(fieldName)) {
                    deserializedDestinationOptionsModelProperties.fileFormat
                        = FileFormat.fromString(reader.getString());
                } else if ("hiveCompatiblePartitions".equals(fieldName)) {
                    deserializedDestinationOptionsModelProperties.hiveCompatiblePartitions
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("perHourPartition".equals(fieldName)) {
                    deserializedDestinationOptionsModelProperties.perHourPartition
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDestinationOptionsModelProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsConfigServiceDeliveryChannel.
 */
@Fluent
public final class AwsConfigServiceDeliveryChannelProperties
    implements JsonSerializable<AwsConfigServiceDeliveryChannelProperties> {
    /*
     * <p>The options for how often Config delivers configuration snapshots to the Amazon S3 bucket.</p>
     */
    private ConfigSnapshotDeliveryProperties configSnapshotDeliveryProperties;

    /*
     * <p>The name of the delivery channel. By default, Config assigns the name 'default' when creating the delivery
     * channel. To change the delivery channel name, you must use the DeleteDeliveryChannel action to delete your
     * current delivery channel, and then you must use the PutDeliveryChannel command to create a delivery channel that
     * has the desired name.</p>
     */
    private String name;

    /*
     * <p>The name of the Amazon S3 bucket to which Config delivers configuration snapshots and configuration history
     * files.</p> <p>If you specify a bucket that belongs to another Amazon Web Services account, that bucket must have
     * policies that grant access permissions to Config. For more information, see <a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html'>Permissions for the Amazon
     * S3 Bucket</a> in the <i>Config Developer Guide</i>.</p>
     */
    private String s3BucketName;

    /*
     * <p>The prefix for the specified Amazon S3 bucket.</p>
     */
    private String s3KeyPrefix;

    /*
     * <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS ) KMS key (KMS key) used to encrypt objects
     * delivered by Config. Must belong to the same Region as the destination S3 bucket.</p>
     */
    private String s3KmsKeyArn;

    /*
     * <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config sends notifications about configuration
     * changes.</p> <p>If you choose a topic from another account, the topic must have policies that grant access
     * permissions to Config. For more information, see <a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/sns-topic-policy.html'>Permissions for the Amazon
     * SNS Topic</a> in the <i>Config Developer Guide</i>.</p>
     */
    private String snsTopicArn;

    /**
     * Creates an instance of AwsConfigServiceDeliveryChannelProperties class.
     */
    public AwsConfigServiceDeliveryChannelProperties() {
    }

    /**
     * Get the configSnapshotDeliveryProperties property: &lt;p&gt;The options for how often Config delivers
     * configuration snapshots to the Amazon S3 bucket.&lt;/p&gt;.
     * 
     * @return the configSnapshotDeliveryProperties value.
     */
    public ConfigSnapshotDeliveryProperties configSnapshotDeliveryProperties() {
        return this.configSnapshotDeliveryProperties;
    }

    /**
     * Set the configSnapshotDeliveryProperties property: &lt;p&gt;The options for how often Config delivers
     * configuration snapshots to the Amazon S3 bucket.&lt;/p&gt;.
     * 
     * @param configSnapshotDeliveryProperties the configSnapshotDeliveryProperties value to set.
     * @return the AwsConfigServiceDeliveryChannelProperties object itself.
     */
    public AwsConfigServiceDeliveryChannelProperties
        withConfigSnapshotDeliveryProperties(ConfigSnapshotDeliveryProperties configSnapshotDeliveryProperties) {
        this.configSnapshotDeliveryProperties = configSnapshotDeliveryProperties;
        return this;
    }

    /**
     * Get the name property: &lt;p&gt;The name of the delivery channel. By default, Config assigns the name 'default'
     * when creating the delivery channel. To change the delivery channel name, you must use the DeleteDeliveryChannel
     * action to delete your current delivery channel, and then you must use the PutDeliveryChannel command to create a
     * delivery channel that has the desired name.&lt;/p&gt;.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: &lt;p&gt;The name of the delivery channel. By default, Config assigns the name 'default'
     * when creating the delivery channel. To change the delivery channel name, you must use the DeleteDeliveryChannel
     * action to delete your current delivery channel, and then you must use the PutDeliveryChannel command to create a
     * delivery channel that has the desired name.&lt;/p&gt;.
     * 
     * @param name the name value to set.
     * @return the AwsConfigServiceDeliveryChannelProperties object itself.
     */
    public AwsConfigServiceDeliveryChannelProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the s3BucketName property: &lt;p&gt;The name of the Amazon S3 bucket to which Config delivers configuration
     * snapshots and configuration history files.&lt;/p&gt; &lt;p&gt;If you specify a bucket that belongs to another
     * Amazon Web Services account, that bucket must have policies that grant access permissions to Config. For more
     * information, see &lt;a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html'&gt;Permissions for the
     * Amazon S3 Bucket&lt;/a&gt; in the &lt;i&gt;Config Developer Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @return the s3BucketName value.
     */
    public String s3BucketName() {
        return this.s3BucketName;
    }

    /**
     * Set the s3BucketName property: &lt;p&gt;The name of the Amazon S3 bucket to which Config delivers configuration
     * snapshots and configuration history files.&lt;/p&gt; &lt;p&gt;If you specify a bucket that belongs to another
     * Amazon Web Services account, that bucket must have policies that grant access permissions to Config. For more
     * information, see &lt;a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html'&gt;Permissions for the
     * Amazon S3 Bucket&lt;/a&gt; in the &lt;i&gt;Config Developer Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @param s3BucketName the s3BucketName value to set.
     * @return the AwsConfigServiceDeliveryChannelProperties object itself.
     */
    public AwsConfigServiceDeliveryChannelProperties withS3BucketName(String s3BucketName) {
        this.s3BucketName = s3BucketName;
        return this;
    }

    /**
     * Get the s3KeyPrefix property: &lt;p&gt;The prefix for the specified Amazon S3 bucket.&lt;/p&gt;.
     * 
     * @return the s3KeyPrefix value.
     */
    public String s3KeyPrefix() {
        return this.s3KeyPrefix;
    }

    /**
     * Set the s3KeyPrefix property: &lt;p&gt;The prefix for the specified Amazon S3 bucket.&lt;/p&gt;.
     * 
     * @param s3KeyPrefix the s3KeyPrefix value to set.
     * @return the AwsConfigServiceDeliveryChannelProperties object itself.
     */
    public AwsConfigServiceDeliveryChannelProperties withS3KeyPrefix(String s3KeyPrefix) {
        this.s3KeyPrefix = s3KeyPrefix;
        return this;
    }

    /**
     * Get the s3KmsKeyArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the Key Management Service (KMS ) KMS
     * key (KMS key) used to encrypt objects delivered by Config. Must belong to the same Region as the destination S3
     * bucket.&lt;/p&gt;.
     * 
     * @return the s3KmsKeyArn value.
     */
    public String s3KmsKeyArn() {
        return this.s3KmsKeyArn;
    }

    /**
     * Set the s3KmsKeyArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the Key Management Service (KMS ) KMS
     * key (KMS key) used to encrypt objects delivered by Config. Must belong to the same Region as the destination S3
     * bucket.&lt;/p&gt;.
     * 
     * @param s3KmsKeyArn the s3KmsKeyArn value to set.
     * @return the AwsConfigServiceDeliveryChannelProperties object itself.
     */
    public AwsConfigServiceDeliveryChannelProperties withS3KmsKeyArn(String s3KmsKeyArn) {
        this.s3KmsKeyArn = s3KmsKeyArn;
        return this;
    }

    /**
     * Get the snsTopicArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
     * sends notifications about configuration changes.&lt;/p&gt; &lt;p&gt;If you choose a topic from another account,
     * the topic must have policies that grant access permissions to Config. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/sns-topic-policy.html'&gt;Permissions for the
     * Amazon SNS Topic&lt;/a&gt; in the &lt;i&gt;Config Developer Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @return the snsTopicArn value.
     */
    public String snsTopicArn() {
        return this.snsTopicArn;
    }

    /**
     * Set the snsTopicArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
     * sends notifications about configuration changes.&lt;/p&gt; &lt;p&gt;If you choose a topic from another account,
     * the topic must have policies that grant access permissions to Config. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/config/latest/developerguide/sns-topic-policy.html'&gt;Permissions for the
     * Amazon SNS Topic&lt;/a&gt; in the &lt;i&gt;Config Developer Guide&lt;/i&gt;.&lt;/p&gt;.
     * 
     * @param snsTopicArn the snsTopicArn value to set.
     * @return the AwsConfigServiceDeliveryChannelProperties object itself.
     */
    public AwsConfigServiceDeliveryChannelProperties withSnsTopicArn(String snsTopicArn) {
        this.snsTopicArn = snsTopicArn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (configSnapshotDeliveryProperties() != null) {
            configSnapshotDeliveryProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("configSnapshotDeliveryProperties", this.configSnapshotDeliveryProperties);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("s3BucketName", this.s3BucketName);
        jsonWriter.writeStringField("s3KeyPrefix", this.s3KeyPrefix);
        jsonWriter.writeStringField("s3KmsKeyArn", this.s3KmsKeyArn);
        jsonWriter.writeStringField("snsTopicARN", this.snsTopicArn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsConfigServiceDeliveryChannelProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsConfigServiceDeliveryChannelProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsConfigServiceDeliveryChannelProperties.
     */
    public static AwsConfigServiceDeliveryChannelProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsConfigServiceDeliveryChannelProperties deserializedAwsConfigServiceDeliveryChannelProperties
                = new AwsConfigServiceDeliveryChannelProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("configSnapshotDeliveryProperties".equals(fieldName)) {
                    deserializedAwsConfigServiceDeliveryChannelProperties.configSnapshotDeliveryProperties
                        = ConfigSnapshotDeliveryProperties.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedAwsConfigServiceDeliveryChannelProperties.name = reader.getString();
                } else if ("s3BucketName".equals(fieldName)) {
                    deserializedAwsConfigServiceDeliveryChannelProperties.s3BucketName = reader.getString();
                } else if ("s3KeyPrefix".equals(fieldName)) {
                    deserializedAwsConfigServiceDeliveryChannelProperties.s3KeyPrefix = reader.getString();
                } else if ("s3KmsKeyArn".equals(fieldName)) {
                    deserializedAwsConfigServiceDeliveryChannelProperties.s3KmsKeyArn = reader.getString();
                } else if ("snsTopicARN".equals(fieldName)) {
                    deserializedAwsConfigServiceDeliveryChannelProperties.snsTopicArn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsConfigServiceDeliveryChannelProperties;
        });
    }
}

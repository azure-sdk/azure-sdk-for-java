// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of OriginGroup.
 */
@Fluent
public final class OriginGroup implements JsonSerializable<OriginGroup> {
    /*
     * A complex type that contains information about the failover criteria for an origin group. A complex data type
     * that includes information about the failover criteria for an origin group, including the status codes for which
     * CloudFront will failover from the primary origin to the second origin.
     */
    private OriginGroupFailoverCriteria failoverCriteria;

    /*
     * The origin group's ID.
     */
    private String id;

    /*
     * A complex type that contains information about the origins in an origin group. A complex data type for the
     * origins included in an origin group.
     */
    private OriginGroupMembers members;

    /**
     * Creates an instance of OriginGroup class.
     */
    public OriginGroup() {
    }

    /**
     * Get the failoverCriteria property: A complex type that contains information about the failover criteria for an
     * origin group. A complex data type that includes information about the failover criteria for an origin group,
     * including the status codes for which CloudFront will failover from the primary origin to the second origin.
     * 
     * @return the failoverCriteria value.
     */
    public OriginGroupFailoverCriteria failoverCriteria() {
        return this.failoverCriteria;
    }

    /**
     * Set the failoverCriteria property: A complex type that contains information about the failover criteria for an
     * origin group. A complex data type that includes information about the failover criteria for an origin group,
     * including the status codes for which CloudFront will failover from the primary origin to the second origin.
     * 
     * @param failoverCriteria the failoverCriteria value to set.
     * @return the OriginGroup object itself.
     */
    public OriginGroup withFailoverCriteria(OriginGroupFailoverCriteria failoverCriteria) {
        this.failoverCriteria = failoverCriteria;
        return this;
    }

    /**
     * Get the id property: The origin group's ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The origin group's ID.
     * 
     * @param id the id value to set.
     * @return the OriginGroup object itself.
     */
    public OriginGroup withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the members property: A complex type that contains information about the origins in an origin group. A
     * complex data type for the origins included in an origin group.
     * 
     * @return the members value.
     */
    public OriginGroupMembers members() {
        return this.members;
    }

    /**
     * Set the members property: A complex type that contains information about the origins in an origin group. A
     * complex data type for the origins included in an origin group.
     * 
     * @param members the members value to set.
     * @return the OriginGroup object itself.
     */
    public OriginGroup withMembers(OriginGroupMembers members) {
        this.members = members;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (failoverCriteria() != null) {
            failoverCriteria().validate();
        }
        if (members() != null) {
            members().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("failoverCriteria", this.failoverCriteria);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("members", this.members);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OriginGroup from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OriginGroup if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the OriginGroup.
     */
    public static OriginGroup fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OriginGroup deserializedOriginGroup = new OriginGroup();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("failoverCriteria".equals(fieldName)) {
                    deserializedOriginGroup.failoverCriteria = OriginGroupFailoverCriteria.fromJson(reader);
                } else if ("id".equals(fieldName)) {
                    deserializedOriginGroup.id = reader.getString();
                } else if ("members".equals(fieldName)) {
                    deserializedOriginGroup.members = OriginGroupMembers.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOriginGroup;
        });
    }
}

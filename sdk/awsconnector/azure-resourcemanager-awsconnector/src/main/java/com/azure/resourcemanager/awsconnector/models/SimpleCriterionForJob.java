// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of SimpleCriterionForJob.
 */
@Fluent
public final class SimpleCriterionForJob implements JsonSerializable<SimpleCriterionForJob> {
    /*
     * <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
     */
    private JobComparatorEnumValue comparator;

    /*
     * <p>The property to use in the condition.</p>
     */
    private SimpleCriterionKeyForJobEnumValue key;

    /*
     * <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie
     * uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID -
     * A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li>
     * <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the
     * <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-
     * bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li>
     * <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS -
     * A string that represents an enumerated value that Macie defines for the <a
     * href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-
     * bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are
     * case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
     */
    private List<String> values;

    /**
     * Creates an instance of SimpleCriterionForJob class.
     */
    public SimpleCriterionForJob() {
    }

    /**
     * Get the comparator property: &lt;p&gt;The operator to use in the condition. Valid values are EQ (equals) and NE
     * (not equals).&lt;/p&gt;.
     * 
     * @return the comparator value.
     */
    public JobComparatorEnumValue comparator() {
        return this.comparator;
    }

    /**
     * Set the comparator property: &lt;p&gt;The operator to use in the condition. Valid values are EQ (equals) and NE
     * (not equals).&lt;/p&gt;.
     * 
     * @param comparator the comparator value to set.
     * @return the SimpleCriterionForJob object itself.
     */
    public SimpleCriterionForJob withComparator(JobComparatorEnumValue comparator) {
        this.comparator = comparator;
        return this;
    }

    /**
     * Get the key property: &lt;p&gt;The property to use in the condition.&lt;/p&gt;.
     * 
     * @return the key value.
     */
    public SimpleCriterionKeyForJobEnumValue key() {
        return this.key;
    }

    /**
     * Set the key property: &lt;p&gt;The property to use in the condition.&lt;/p&gt;.
     * 
     * @param key the key value to set.
     * @return the SimpleCriterionForJob object itself.
     */
    public SimpleCriterionForJob withKey(SimpleCriterionKeyForJobEnumValue key) {
        this.key = key;
        return this;
    }

    /**
     * Get the values property: &lt;p&gt;An array that lists one or more values to use in the condition. If you specify
     * multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key)
     * are:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;p&gt;ACCOUNT_ID - A string that represents the unique identifier for the
     * Amazon Web Services account that owns the bucket.&lt;/p&gt;&lt;/li&gt;
     * &lt;li&gt;&lt;p&gt;S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie
     * defines for the &lt;a
     * href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'&gt;BucketPublicAccess.effectivePermission&lt;/a&gt;
     * property of a bucket.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;S3_BUCKET_NAME - A string that represents the name
     * of a bucket.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;S3_BUCKET_SHARED_ACCESS - A string that represents an
     * enumerated value that Macie defines for the &lt;a
     * href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'&gt;BucketMetadata.sharedAccess&lt;/a&gt;
     * property of a bucket.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Values are case sensitive. Also, Macie doesn't
     * support use of partial values or wildcard characters in these values.&lt;/p&gt;.
     * 
     * @return the values value.
     */
    public List<String> values() {
        return this.values;
    }

    /**
     * Set the values property: &lt;p&gt;An array that lists one or more values to use in the condition. If you specify
     * multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key)
     * are:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;p&gt;ACCOUNT_ID - A string that represents the unique identifier for the
     * Amazon Web Services account that owns the bucket.&lt;/p&gt;&lt;/li&gt;
     * &lt;li&gt;&lt;p&gt;S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie
     * defines for the &lt;a
     * href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'&gt;BucketPublicAccess.effectivePermission&lt;/a&gt;
     * property of a bucket.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;S3_BUCKET_NAME - A string that represents the name
     * of a bucket.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;S3_BUCKET_SHARED_ACCESS - A string that represents an
     * enumerated value that Macie defines for the &lt;a
     * href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'&gt;BucketMetadata.sharedAccess&lt;/a&gt;
     * property of a bucket.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Values are case sensitive. Also, Macie doesn't
     * support use of partial values or wildcard characters in these values.&lt;/p&gt;.
     * 
     * @param values the values value to set.
     * @return the SimpleCriterionForJob object itself.
     */
    public SimpleCriterionForJob withValues(List<String> values) {
        this.values = values;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (comparator() != null) {
            comparator().validate();
        }
        if (key() != null) {
            key().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("comparator", this.comparator);
        jsonWriter.writeJsonField("key", this.key);
        jsonWriter.writeArrayField("values", this.values, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SimpleCriterionForJob from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SimpleCriterionForJob if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SimpleCriterionForJob.
     */
    public static SimpleCriterionForJob fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SimpleCriterionForJob deserializedSimpleCriterionForJob = new SimpleCriterionForJob();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("comparator".equals(fieldName)) {
                    deserializedSimpleCriterionForJob.comparator = JobComparatorEnumValue.fromJson(reader);
                } else if ("key".equals(fieldName)) {
                    deserializedSimpleCriterionForJob.key = SimpleCriterionKeyForJobEnumValue.fromJson(reader);
                } else if ("values".equals(fieldName)) {
                    List<String> values = reader.readArray(reader1 -> reader1.getString());
                    deserializedSimpleCriterionForJob.values = values;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSimpleCriterionForJob;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of FileSystemConfig.
 */
@Fluent
public final class FileSystemConfig implements JsonSerializable<FileSystemConfig> {
    /*
     * The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.
     */
    private String arn;

    /*
     * The path where the function can access the file system, starting with ``/mnt/``.
     */
    private String localMountPath;

    /**
     * Creates an instance of FileSystemConfig class.
     */
    public FileSystemConfig() {
    }

    /**
     * Get the arn property: The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the
     * file system.
     * 
     * @return the arn value.
     */
    public String arn() {
        return this.arn;
    }

    /**
     * Set the arn property: The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the
     * file system.
     * 
     * @param arn the arn value to set.
     * @return the FileSystemConfig object itself.
     */
    public FileSystemConfig withArn(String arn) {
        this.arn = arn;
        return this;
    }

    /**
     * Get the localMountPath property: The path where the function can access the file system, starting with ``/mnt/``.
     * 
     * @return the localMountPath value.
     */
    public String localMountPath() {
        return this.localMountPath;
    }

    /**
     * Set the localMountPath property: The path where the function can access the file system, starting with ``/mnt/``.
     * 
     * @param localMountPath the localMountPath value to set.
     * @return the FileSystemConfig object itself.
     */
    public FileSystemConfig withLocalMountPath(String localMountPath) {
        this.localMountPath = localMountPath;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("arn", this.arn);
        jsonWriter.writeStringField("localMountPath", this.localMountPath);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FileSystemConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FileSystemConfig if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the FileSystemConfig.
     */
    public static FileSystemConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FileSystemConfig deserializedFileSystemConfig = new FileSystemConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("arn".equals(fieldName)) {
                    deserializedFileSystemConfig.arn = reader.getString();
                } else if ("localMountPath".equals(fieldName)) {
                    deserializedFileSystemConfig.localMountPath = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFileSystemConfig;
        });
    }
}

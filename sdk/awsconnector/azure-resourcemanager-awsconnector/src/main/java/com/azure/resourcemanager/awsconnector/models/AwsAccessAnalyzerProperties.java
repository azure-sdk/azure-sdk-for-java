// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsAccessAnalyzerAnalyzer.
 */
@Fluent
public final class AwsAccessAnalyzerProperties implements JsonSerializable<AwsAccessAnalyzerProperties> {
    /*
     * The configuration for the analyzer
     */
    private UnusedAccessConfiguration analyzerConfiguration;

    /*
     * Analyzer name
     */
    private String analyzerName;

    /*
     * Property archiveRules
     */
    private List<ArchiveRule> archiveRules;

    /*
     * Amazon Resource Name (ARN) of the analyzer
     */
    private String arn;

    /*
     * An array of key-value pairs to apply to this resource.
     */
    private List<Tag> tags;

    /*
     * The type of the analyzer, must be one of ACCOUNT, ORGANIZATION, ACCOUNT_UNUSED_ACCESS or
     * ORGANIZATION_UNUSED_ACCESS
     */
    private String type;

    /**
     * Creates an instance of AwsAccessAnalyzerProperties class.
     */
    public AwsAccessAnalyzerProperties() {
    }

    /**
     * Get the analyzerConfiguration property: The configuration for the analyzer.
     * 
     * @return the analyzerConfiguration value.
     */
    public UnusedAccessConfiguration analyzerConfiguration() {
        return this.analyzerConfiguration;
    }

    /**
     * Set the analyzerConfiguration property: The configuration for the analyzer.
     * 
     * @param analyzerConfiguration the analyzerConfiguration value to set.
     * @return the AwsAccessAnalyzerProperties object itself.
     */
    public AwsAccessAnalyzerProperties withAnalyzerConfiguration(UnusedAccessConfiguration analyzerConfiguration) {
        this.analyzerConfiguration = analyzerConfiguration;
        return this;
    }

    /**
     * Get the analyzerName property: Analyzer name.
     * 
     * @return the analyzerName value.
     */
    public String analyzerName() {
        return this.analyzerName;
    }

    /**
     * Set the analyzerName property: Analyzer name.
     * 
     * @param analyzerName the analyzerName value to set.
     * @return the AwsAccessAnalyzerProperties object itself.
     */
    public AwsAccessAnalyzerProperties withAnalyzerName(String analyzerName) {
        this.analyzerName = analyzerName;
        return this;
    }

    /**
     * Get the archiveRules property: Property archiveRules.
     * 
     * @return the archiveRules value.
     */
    public List<ArchiveRule> archiveRules() {
        return this.archiveRules;
    }

    /**
     * Set the archiveRules property: Property archiveRules.
     * 
     * @param archiveRules the archiveRules value to set.
     * @return the AwsAccessAnalyzerProperties object itself.
     */
    public AwsAccessAnalyzerProperties withArchiveRules(List<ArchiveRule> archiveRules) {
        this.archiveRules = archiveRules;
        return this;
    }

    /**
     * Get the arn property: Amazon Resource Name (ARN) of the analyzer.
     * 
     * @return the arn value.
     */
    public String arn() {
        return this.arn;
    }

    /**
     * Set the arn property: Amazon Resource Name (ARN) of the analyzer.
     * 
     * @param arn the arn value to set.
     * @return the AwsAccessAnalyzerProperties object itself.
     */
    public AwsAccessAnalyzerProperties withArn(String arn) {
        this.arn = arn;
        return this;
    }

    /**
     * Get the tags property: An array of key-value pairs to apply to this resource.
     * 
     * @return the tags value.
     */
    public List<Tag> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: An array of key-value pairs to apply to this resource.
     * 
     * @param tags the tags value to set.
     * @return the AwsAccessAnalyzerProperties object itself.
     */
    public AwsAccessAnalyzerProperties withTags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the type property: The type of the analyzer, must be one of ACCOUNT, ORGANIZATION, ACCOUNT_UNUSED_ACCESS or
     * ORGANIZATION_UNUSED_ACCESS.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The type of the analyzer, must be one of ACCOUNT, ORGANIZATION, ACCOUNT_UNUSED_ACCESS or
     * ORGANIZATION_UNUSED_ACCESS.
     * 
     * @param type the type value to set.
     * @return the AwsAccessAnalyzerProperties object itself.
     */
    public AwsAccessAnalyzerProperties withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (analyzerConfiguration() != null) {
            analyzerConfiguration().validate();
        }
        if (archiveRules() != null) {
            archiveRules().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("analyzerConfiguration", this.analyzerConfiguration);
        jsonWriter.writeStringField("analyzerName", this.analyzerName);
        jsonWriter.writeArrayField("archiveRules", this.archiveRules, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("arn", this.arn);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsAccessAnalyzerProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsAccessAnalyzerProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsAccessAnalyzerProperties.
     */
    public static AwsAccessAnalyzerProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsAccessAnalyzerProperties deserializedAwsAccessAnalyzerProperties = new AwsAccessAnalyzerProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("analyzerConfiguration".equals(fieldName)) {
                    deserializedAwsAccessAnalyzerProperties.analyzerConfiguration
                        = UnusedAccessConfiguration.fromJson(reader);
                } else if ("analyzerName".equals(fieldName)) {
                    deserializedAwsAccessAnalyzerProperties.analyzerName = reader.getString();
                } else if ("archiveRules".equals(fieldName)) {
                    List<ArchiveRule> archiveRules = reader.readArray(reader1 -> ArchiveRule.fromJson(reader1));
                    deserializedAwsAccessAnalyzerProperties.archiveRules = archiveRules;
                } else if ("arn".equals(fieldName)) {
                    deserializedAwsAccessAnalyzerProperties.arn = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<Tag> tags = reader.readArray(reader1 -> Tag.fromJson(reader1));
                    deserializedAwsAccessAnalyzerProperties.tags = tags;
                } else if ("type".equals(fieldName)) {
                    deserializedAwsAccessAnalyzerProperties.type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsAccessAnalyzerProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of InstanceNetworkInterfaceAssociation.
 */
@Fluent
public final class InstanceNetworkInterfaceAssociation
    implements JsonSerializable<InstanceNetworkInterfaceAssociation> {
    /*
     * <p>The carrier IP address associated with the network interface.</p>
     */
    private String carrierIp;

    /*
     * <p>The customer-owned IP address associated with the network interface.</p>
     */
    private String customerOwnedIp;

    /*
     * <p>The ID of the owner of the Elastic IP address.</p>
     */
    private String ipOwnerId;

    /*
     * <p>The public DNS name.</p>
     */
    private String publicDnsName;

    /*
     * <p>The public IP address or Elastic IP address bound to the network interface.</p>
     */
    private String publicIp;

    /**
     * Creates an instance of InstanceNetworkInterfaceAssociation class.
     */
    public InstanceNetworkInterfaceAssociation() {
    }

    /**
     * Get the carrierIp property: &lt;p&gt;The carrier IP address associated with the network interface.&lt;/p&gt;.
     * 
     * @return the carrierIp value.
     */
    public String carrierIp() {
        return this.carrierIp;
    }

    /**
     * Set the carrierIp property: &lt;p&gt;The carrier IP address associated with the network interface.&lt;/p&gt;.
     * 
     * @param carrierIp the carrierIp value to set.
     * @return the InstanceNetworkInterfaceAssociation object itself.
     */
    public InstanceNetworkInterfaceAssociation withCarrierIp(String carrierIp) {
        this.carrierIp = carrierIp;
        return this;
    }

    /**
     * Get the customerOwnedIp property: &lt;p&gt;The customer-owned IP address associated with the network
     * interface.&lt;/p&gt;.
     * 
     * @return the customerOwnedIp value.
     */
    public String customerOwnedIp() {
        return this.customerOwnedIp;
    }

    /**
     * Set the customerOwnedIp property: &lt;p&gt;The customer-owned IP address associated with the network
     * interface.&lt;/p&gt;.
     * 
     * @param customerOwnedIp the customerOwnedIp value to set.
     * @return the InstanceNetworkInterfaceAssociation object itself.
     */
    public InstanceNetworkInterfaceAssociation withCustomerOwnedIp(String customerOwnedIp) {
        this.customerOwnedIp = customerOwnedIp;
        return this;
    }

    /**
     * Get the ipOwnerId property: &lt;p&gt;The ID of the owner of the Elastic IP address.&lt;/p&gt;.
     * 
     * @return the ipOwnerId value.
     */
    public String ipOwnerId() {
        return this.ipOwnerId;
    }

    /**
     * Set the ipOwnerId property: &lt;p&gt;The ID of the owner of the Elastic IP address.&lt;/p&gt;.
     * 
     * @param ipOwnerId the ipOwnerId value to set.
     * @return the InstanceNetworkInterfaceAssociation object itself.
     */
    public InstanceNetworkInterfaceAssociation withIpOwnerId(String ipOwnerId) {
        this.ipOwnerId = ipOwnerId;
        return this;
    }

    /**
     * Get the publicDnsName property: &lt;p&gt;The public DNS name.&lt;/p&gt;.
     * 
     * @return the publicDnsName value.
     */
    public String publicDnsName() {
        return this.publicDnsName;
    }

    /**
     * Set the publicDnsName property: &lt;p&gt;The public DNS name.&lt;/p&gt;.
     * 
     * @param publicDnsName the publicDnsName value to set.
     * @return the InstanceNetworkInterfaceAssociation object itself.
     */
    public InstanceNetworkInterfaceAssociation withPublicDnsName(String publicDnsName) {
        this.publicDnsName = publicDnsName;
        return this;
    }

    /**
     * Get the publicIp property: &lt;p&gt;The public IP address or Elastic IP address bound to the network
     * interface.&lt;/p&gt;.
     * 
     * @return the publicIp value.
     */
    public String publicIp() {
        return this.publicIp;
    }

    /**
     * Set the publicIp property: &lt;p&gt;The public IP address or Elastic IP address bound to the network
     * interface.&lt;/p&gt;.
     * 
     * @param publicIp the publicIp value to set.
     * @return the InstanceNetworkInterfaceAssociation object itself.
     */
    public InstanceNetworkInterfaceAssociation withPublicIp(String publicIp) {
        this.publicIp = publicIp;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("carrierIp", this.carrierIp);
        jsonWriter.writeStringField("customerOwnedIp", this.customerOwnedIp);
        jsonWriter.writeStringField("ipOwnerId", this.ipOwnerId);
        jsonWriter.writeStringField("publicDnsName", this.publicDnsName);
        jsonWriter.writeStringField("publicIp", this.publicIp);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InstanceNetworkInterfaceAssociation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InstanceNetworkInterfaceAssociation if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InstanceNetworkInterfaceAssociation.
     */
    public static InstanceNetworkInterfaceAssociation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InstanceNetworkInterfaceAssociation deserializedInstanceNetworkInterfaceAssociation
                = new InstanceNetworkInterfaceAssociation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("carrierIp".equals(fieldName)) {
                    deserializedInstanceNetworkInterfaceAssociation.carrierIp = reader.getString();
                } else if ("customerOwnedIp".equals(fieldName)) {
                    deserializedInstanceNetworkInterfaceAssociation.customerOwnedIp = reader.getString();
                } else if ("ipOwnerId".equals(fieldName)) {
                    deserializedInstanceNetworkInterfaceAssociation.ipOwnerId = reader.getString();
                } else if ("publicDnsName".equals(fieldName)) {
                    deserializedInstanceNetworkInterfaceAssociation.publicDnsName = reader.getString();
                } else if ("publicIp".equals(fieldName)) {
                    deserializedInstanceNetworkInterfaceAssociation.publicIp = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInstanceNetworkInterfaceAssociation;
        });
    }
}

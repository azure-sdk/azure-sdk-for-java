// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of SAMLOptionsOutput.
 */
@Fluent
public final class SamlOptionsOutput implements JsonSerializable<SamlOptionsOutput> {
    /*
     * <p>True if SAML is enabled.</p>
     */
    private Boolean enabled;

    /*
     * <p>Describes the SAML identity provider's information.</p>
     */
    private SamlIdp idp;

    /*
     * <p>The key used for matching the SAML roles attribute.</p>
     */
    private String rolesKey;

    /*
     * <p>The duration, in minutes, after which a user session becomes inactive.</p>
     */
    private Integer sessionTimeoutMinutes;

    /*
     * <p>The key used for matching the SAML subject attribute.</p>
     */
    private String subjectKey;

    /**
     * Creates an instance of SamlOptionsOutput class.
     */
    public SamlOptionsOutput() {
    }

    /**
     * Get the enabled property: &lt;p&gt;True if SAML is enabled.&lt;/p&gt;.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: &lt;p&gt;True if SAML is enabled.&lt;/p&gt;.
     * 
     * @param enabled the enabled value to set.
     * @return the SamlOptionsOutput object itself.
     */
    public SamlOptionsOutput withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the idp property: &lt;p&gt;Describes the SAML identity provider's information.&lt;/p&gt;.
     * 
     * @return the idp value.
     */
    public SamlIdp idp() {
        return this.idp;
    }

    /**
     * Set the idp property: &lt;p&gt;Describes the SAML identity provider's information.&lt;/p&gt;.
     * 
     * @param idp the idp value to set.
     * @return the SamlOptionsOutput object itself.
     */
    public SamlOptionsOutput withIdp(SamlIdp idp) {
        this.idp = idp;
        return this;
    }

    /**
     * Get the rolesKey property: &lt;p&gt;The key used for matching the SAML roles attribute.&lt;/p&gt;.
     * 
     * @return the rolesKey value.
     */
    public String rolesKey() {
        return this.rolesKey;
    }

    /**
     * Set the rolesKey property: &lt;p&gt;The key used for matching the SAML roles attribute.&lt;/p&gt;.
     * 
     * @param rolesKey the rolesKey value to set.
     * @return the SamlOptionsOutput object itself.
     */
    public SamlOptionsOutput withRolesKey(String rolesKey) {
        this.rolesKey = rolesKey;
        return this;
    }

    /**
     * Get the sessionTimeoutMinutes property: &lt;p&gt;The duration, in minutes, after which a user session becomes
     * inactive.&lt;/p&gt;.
     * 
     * @return the sessionTimeoutMinutes value.
     */
    public Integer sessionTimeoutMinutes() {
        return this.sessionTimeoutMinutes;
    }

    /**
     * Set the sessionTimeoutMinutes property: &lt;p&gt;The duration, in minutes, after which a user session becomes
     * inactive.&lt;/p&gt;.
     * 
     * @param sessionTimeoutMinutes the sessionTimeoutMinutes value to set.
     * @return the SamlOptionsOutput object itself.
     */
    public SamlOptionsOutput withSessionTimeoutMinutes(Integer sessionTimeoutMinutes) {
        this.sessionTimeoutMinutes = sessionTimeoutMinutes;
        return this;
    }

    /**
     * Get the subjectKey property: &lt;p&gt;The key used for matching the SAML subject attribute.&lt;/p&gt;.
     * 
     * @return the subjectKey value.
     */
    public String subjectKey() {
        return this.subjectKey;
    }

    /**
     * Set the subjectKey property: &lt;p&gt;The key used for matching the SAML subject attribute.&lt;/p&gt;.
     * 
     * @param subjectKey the subjectKey value to set.
     * @return the SamlOptionsOutput object itself.
     */
    public SamlOptionsOutput withSubjectKey(String subjectKey) {
        this.subjectKey = subjectKey;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (idp() != null) {
            idp().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeJsonField("idp", this.idp);
        jsonWriter.writeStringField("rolesKey", this.rolesKey);
        jsonWriter.writeNumberField("sessionTimeoutMinutes", this.sessionTimeoutMinutes);
        jsonWriter.writeStringField("subjectKey", this.subjectKey);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SamlOptionsOutput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SamlOptionsOutput if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SamlOptionsOutput.
     */
    public static SamlOptionsOutput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SamlOptionsOutput deserializedSamlOptionsOutput = new SamlOptionsOutput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enabled".equals(fieldName)) {
                    deserializedSamlOptionsOutput.enabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("idp".equals(fieldName)) {
                    deserializedSamlOptionsOutput.idp = SamlIdp.fromJson(reader);
                } else if ("rolesKey".equals(fieldName)) {
                    deserializedSamlOptionsOutput.rolesKey = reader.getString();
                } else if ("sessionTimeoutMinutes".equals(fieldName)) {
                    deserializedSamlOptionsOutput.sessionTimeoutMinutes = reader.getNullable(JsonReader::getInt);
                } else if ("subjectKey".equals(fieldName)) {
                    deserializedSamlOptionsOutput.subjectKey = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSamlOptionsOutput;
        });
    }
}

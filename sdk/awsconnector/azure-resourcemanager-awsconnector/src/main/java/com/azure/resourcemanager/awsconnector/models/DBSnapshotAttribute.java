// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of DBSnapshotAttribute.
 */
@Fluent
public final class DBSnapshotAttribute implements JsonSerializable<DBSnapshotAttribute> {
    /*
     * <p>The name of the manual DB snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the
     * list of Amazon Web Services accounts that have permission to copy or restore the manual DB cluster snapshot. For
     * more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
     */
    private String attributeName;

    /*
     * <p>The value or values for the manual DB snapshot attribute.</p> <p>If the <code>AttributeName</code> field is
     * set to <code>restore</code>, then this element returns a list of IDs of the Amazon Web Services accounts that are
     * authorized to copy or restore the manual DB snapshot. If a value of <code>all</code> is in the list, then the
     * manual DB snapshot is public and available for any Amazon Web Services account to copy or restore.</p>
     */
    private List<String> attributeValues;

    /**
     * Creates an instance of DBSnapshotAttribute class.
     */
    public DBSnapshotAttribute() {
    }

    /**
     * Get the attributeName property: &lt;p&gt;The name of the manual DB snapshot attribute.&lt;/p&gt; &lt;p&gt;The
     * attribute named &lt;code&gt;restore&lt;/code&gt; refers to the list of Amazon Web Services accounts that have
     * permission to copy or restore the manual DB cluster snapshot. For more information, see the
     * &lt;code&gt;ModifyDBSnapshotAttribute&lt;/code&gt; API action.&lt;/p&gt;.
     * 
     * @return the attributeName value.
     */
    public String attributeName() {
        return this.attributeName;
    }

    /**
     * Set the attributeName property: &lt;p&gt;The name of the manual DB snapshot attribute.&lt;/p&gt; &lt;p&gt;The
     * attribute named &lt;code&gt;restore&lt;/code&gt; refers to the list of Amazon Web Services accounts that have
     * permission to copy or restore the manual DB cluster snapshot. For more information, see the
     * &lt;code&gt;ModifyDBSnapshotAttribute&lt;/code&gt; API action.&lt;/p&gt;.
     * 
     * @param attributeName the attributeName value to set.
     * @return the DBSnapshotAttribute object itself.
     */
    public DBSnapshotAttribute withAttributeName(String attributeName) {
        this.attributeName = attributeName;
        return this;
    }

    /**
     * Get the attributeValues property: &lt;p&gt;The value or values for the manual DB snapshot attribute.&lt;/p&gt;
     * &lt;p&gt;If the &lt;code&gt;AttributeName&lt;/code&gt; field is set to &lt;code&gt;restore&lt;/code&gt;, then
     * this element returns a list of IDs of the Amazon Web Services accounts that are authorized to copy or restore the
     * manual DB snapshot. If a value of &lt;code&gt;all&lt;/code&gt; is in the list, then the manual DB snapshot is
     * public and available for any Amazon Web Services account to copy or restore.&lt;/p&gt;.
     * 
     * @return the attributeValues value.
     */
    public List<String> attributeValues() {
        return this.attributeValues;
    }

    /**
     * Set the attributeValues property: &lt;p&gt;The value or values for the manual DB snapshot attribute.&lt;/p&gt;
     * &lt;p&gt;If the &lt;code&gt;AttributeName&lt;/code&gt; field is set to &lt;code&gt;restore&lt;/code&gt;, then
     * this element returns a list of IDs of the Amazon Web Services accounts that are authorized to copy or restore the
     * manual DB snapshot. If a value of &lt;code&gt;all&lt;/code&gt; is in the list, then the manual DB snapshot is
     * public and available for any Amazon Web Services account to copy or restore.&lt;/p&gt;.
     * 
     * @param attributeValues the attributeValues value to set.
     * @return the DBSnapshotAttribute object itself.
     */
    public DBSnapshotAttribute withAttributeValues(List<String> attributeValues) {
        this.attributeValues = attributeValues;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("attributeName", this.attributeName);
        jsonWriter.writeArrayField("attributeValues", this.attributeValues,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DBSnapshotAttribute from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DBSnapshotAttribute if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DBSnapshotAttribute.
     */
    public static DBSnapshotAttribute fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DBSnapshotAttribute deserializedDBSnapshotAttribute = new DBSnapshotAttribute();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("attributeName".equals(fieldName)) {
                    deserializedDBSnapshotAttribute.attributeName = reader.getString();
                } else if ("attributeValues".equals(fieldName)) {
                    List<String> attributeValues = reader.readArray(reader1 -> reader1.getString());
                    deserializedDBSnapshotAttribute.attributeValues = attributeValues;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDBSnapshotAttribute;
        });
    }
}

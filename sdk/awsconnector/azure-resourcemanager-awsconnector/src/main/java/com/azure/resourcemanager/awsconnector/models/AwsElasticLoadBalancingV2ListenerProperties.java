// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsElasticLoadBalancingV2Listener.
 */
@Fluent
public final class AwsElasticLoadBalancingV2ListenerProperties
    implements JsonSerializable<AwsElasticLoadBalancingV2ListenerProperties> {
    /*
     * [TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.
     */
    private List<String> alpnPolicy;

    /*
     * The default SSL server certificate for a secure listener. You must provide exactly one certificate if the
     * listener protocol is HTTPS or TLS. To create a certificate list for a secure listener, use
     * [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide
     * /aws-resource-elasticloadbalancingv2-listenercertificate.html).
     */
    private List<CertificateAutoGenerated> certificates;

    /*
     * The actions for the default rule. You cannot define a condition for a default rule. To create additional rules
     * for an Application Load Balancer, use
     * [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-
     * resource-elasticloadbalancingv2-listenerrule.html).
     */
    private List<ActionAutoGenerated> defaultActions;

    /*
     * Property listenerArn
     */
    private String listenerArn;

    /*
     * The Amazon Resource Name (ARN) of the load balancer.
     */
    private String loadBalancerArn;

    /*
     * The mutual authentication configuration information. Specifies the configuration information for mutual
     * authentication.
     */
    private MutualAuthentication mutualAuthentication;

    /*
     * The port on which the load balancer is listening. You cannot specify a port for a Gateway Load Balancer.
     */
    private Integer port;

    /*
     * The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported
     * protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP.
     * You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a
     * Gateway Load Balancer.
     */
    private String protocol;

    /*
     * [HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. Updating
     * the security policy can result in interruptions if the load balancer is handling a high volume of traffic. For
     * more information, see [Security
     * policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe
     * -ssl-policies) in the *Application Load Balancers Guide* and [Security
     * policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-
     * policies) in the *Network Load Balancers Guide*.
     */
    private String sslPolicy;

    /**
     * Creates an instance of AwsElasticLoadBalancingV2ListenerProperties class.
     */
    public AwsElasticLoadBalancingV2ListenerProperties() {
    }

    /**
     * Get the alpnPolicy property: [TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.
     * 
     * @return the alpnPolicy value.
     */
    public List<String> alpnPolicy() {
        return this.alpnPolicy;
    }

    /**
     * Set the alpnPolicy property: [TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.
     * 
     * @param alpnPolicy the alpnPolicy value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withAlpnPolicy(List<String> alpnPolicy) {
        this.alpnPolicy = alpnPolicy;
        return this;
    }

    /**
     * Get the certificates property: The default SSL server certificate for a secure listener. You must provide exactly
     * one certificate if the listener protocol is HTTPS or TLS. To create a certificate list for a secure listener, use
     * [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).
     * 
     * @return the certificates value.
     */
    public List<CertificateAutoGenerated> certificates() {
        return this.certificates;
    }

    /**
     * Set the certificates property: The default SSL server certificate for a secure listener. You must provide exactly
     * one certificate if the listener protocol is HTTPS or TLS. To create a certificate list for a secure listener, use
     * [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).
     * 
     * @param certificates the certificates value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withCertificates(List<CertificateAutoGenerated> certificates) {
        this.certificates = certificates;
        return this;
    }

    /**
     * Get the defaultActions property: The actions for the default rule. You cannot define a condition for a default
     * rule. To create additional rules for an Application Load Balancer, use
     * [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).
     * 
     * @return the defaultActions value.
     */
    public List<ActionAutoGenerated> defaultActions() {
        return this.defaultActions;
    }

    /**
     * Set the defaultActions property: The actions for the default rule. You cannot define a condition for a default
     * rule. To create additional rules for an Application Load Balancer, use
     * [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).
     * 
     * @param defaultActions the defaultActions value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withDefaultActions(List<ActionAutoGenerated> defaultActions) {
        this.defaultActions = defaultActions;
        return this;
    }

    /**
     * Get the listenerArn property: Property listenerArn.
     * 
     * @return the listenerArn value.
     */
    public String listenerArn() {
        return this.listenerArn;
    }

    /**
     * Set the listenerArn property: Property listenerArn.
     * 
     * @param listenerArn the listenerArn value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withListenerArn(String listenerArn) {
        this.listenerArn = listenerArn;
        return this;
    }

    /**
     * Get the loadBalancerArn property: The Amazon Resource Name (ARN) of the load balancer.
     * 
     * @return the loadBalancerArn value.
     */
    public String loadBalancerArn() {
        return this.loadBalancerArn;
    }

    /**
     * Set the loadBalancerArn property: The Amazon Resource Name (ARN) of the load balancer.
     * 
     * @param loadBalancerArn the loadBalancerArn value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withLoadBalancerArn(String loadBalancerArn) {
        this.loadBalancerArn = loadBalancerArn;
        return this;
    }

    /**
     * Get the mutualAuthentication property: The mutual authentication configuration information. Specifies the
     * configuration information for mutual authentication.
     * 
     * @return the mutualAuthentication value.
     */
    public MutualAuthentication mutualAuthentication() {
        return this.mutualAuthentication;
    }

    /**
     * Set the mutualAuthentication property: The mutual authentication configuration information. Specifies the
     * configuration information for mutual authentication.
     * 
     * @param mutualAuthentication the mutualAuthentication value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties
        withMutualAuthentication(MutualAuthentication mutualAuthentication) {
        this.mutualAuthentication = mutualAuthentication;
        return this;
    }

    /**
     * Get the port property: The port on which the load balancer is listening. You cannot specify a port for a Gateway
     * Load Balancer.
     * 
     * @return the port value.
     */
    public Integer port() {
        return this.port;
    }

    /**
     * Set the port property: The port on which the load balancer is listening. You cannot specify a port for a Gateway
     * Load Balancer.
     * 
     * @param port the port value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withPort(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Get the protocol property: The protocol for connections from clients to the load balancer. For Application Load
     * Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are
     * TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You
     * cannot specify a protocol for a Gateway Load Balancer.
     * 
     * @return the protocol value.
     */
    public String protocol() {
        return this.protocol;
    }

    /**
     * Set the protocol property: The protocol for connections from clients to the load balancer. For Application Load
     * Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are
     * TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You
     * cannot specify a protocol for a Gateway Load Balancer.
     * 
     * @param protocol the protocol value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Get the sslPolicy property: [HTTPS and TLS listeners] The security policy that defines which protocols and
     * ciphers are supported. Updating the security policy can result in interruptions if the load balancer is handling
     * a high volume of traffic. For more information, see [Security
     * policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies)
     * in the *Application Load Balancers Guide* and [Security
     * policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies)
     * in the *Network Load Balancers Guide*.
     * 
     * @return the sslPolicy value.
     */
    public String sslPolicy() {
        return this.sslPolicy;
    }

    /**
     * Set the sslPolicy property: [HTTPS and TLS listeners] The security policy that defines which protocols and
     * ciphers are supported. Updating the security policy can result in interruptions if the load balancer is handling
     * a high volume of traffic. For more information, see [Security
     * policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies)
     * in the *Application Load Balancers Guide* and [Security
     * policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies)
     * in the *Network Load Balancers Guide*.
     * 
     * @param sslPolicy the sslPolicy value to set.
     * @return the AwsElasticLoadBalancingV2ListenerProperties object itself.
     */
    public AwsElasticLoadBalancingV2ListenerProperties withSslPolicy(String sslPolicy) {
        this.sslPolicy = sslPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certificates() != null) {
            certificates().forEach(e -> e.validate());
        }
        if (defaultActions() != null) {
            defaultActions().forEach(e -> e.validate());
        }
        if (mutualAuthentication() != null) {
            mutualAuthentication().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("alpnPolicy", this.alpnPolicy, (writer, element) -> writer.writeString(element));
        jsonWriter.writeArrayField("certificates", this.certificates, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("defaultActions", this.defaultActions,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("listenerArn", this.listenerArn);
        jsonWriter.writeStringField("loadBalancerArn", this.loadBalancerArn);
        jsonWriter.writeJsonField("mutualAuthentication", this.mutualAuthentication);
        jsonWriter.writeNumberField("port", this.port);
        jsonWriter.writeStringField("protocol", this.protocol);
        jsonWriter.writeStringField("sslPolicy", this.sslPolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsElasticLoadBalancingV2ListenerProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsElasticLoadBalancingV2ListenerProperties if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsElasticLoadBalancingV2ListenerProperties.
     */
    public static AwsElasticLoadBalancingV2ListenerProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsElasticLoadBalancingV2ListenerProperties deserializedAwsElasticLoadBalancingV2ListenerProperties
                = new AwsElasticLoadBalancingV2ListenerProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("alpnPolicy".equals(fieldName)) {
                    List<String> alpnPolicy = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.alpnPolicy = alpnPolicy;
                } else if ("certificates".equals(fieldName)) {
                    List<CertificateAutoGenerated> certificates
                        = reader.readArray(reader1 -> CertificateAutoGenerated.fromJson(reader1));
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.certificates = certificates;
                } else if ("defaultActions".equals(fieldName)) {
                    List<ActionAutoGenerated> defaultActions
                        = reader.readArray(reader1 -> ActionAutoGenerated.fromJson(reader1));
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.defaultActions = defaultActions;
                } else if ("listenerArn".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.listenerArn = reader.getString();
                } else if ("loadBalancerArn".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.loadBalancerArn = reader.getString();
                } else if ("mutualAuthentication".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.mutualAuthentication
                        = MutualAuthentication.fromJson(reader);
                } else if ("port".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.port
                        = reader.getNullable(JsonReader::getInt);
                } else if ("protocol".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.protocol = reader.getString();
                } else if ("sslPolicy".equals(fieldName)) {
                    deserializedAwsElasticLoadBalancingV2ListenerProperties.sslPolicy = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsElasticLoadBalancingV2ListenerProperties;
        });
    }
}

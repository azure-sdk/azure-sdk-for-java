// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsOrganizationsOrganization.
 */
@Fluent
public final class AwsOrganizationsOrganizationProperties
    implements JsonSerializable<AwsOrganizationsOrganizationProperties> {
    /*
     * The Amazon Resource Name (ARN) of an organization.
     */
    private String arn;

    /*
     * Specifies the feature set supported by the new organization. Each feature set supports different levels of
     * functionality.
     */
    private FeatureSet featureSet;

    /*
     * The unique identifier (ID) of an organization.
     */
    private String id;

    /*
     * The Amazon Resource Name (ARN) of the account that is designated as the management account for the organization.
     */
    private String managementAccountArn;

    /*
     * The email address that is associated with the AWS account that is designated as the management account for the
     * organization.
     */
    private String managementAccountEmail;

    /*
     * The unique identifier (ID) of the management account of an organization.
     */
    private String managementAccountId;

    /*
     * The unique identifier (ID) for the root.
     */
    private String rootId;

    /**
     * Creates an instance of AwsOrganizationsOrganizationProperties class.
     */
    public AwsOrganizationsOrganizationProperties() {
    }

    /**
     * Get the arn property: The Amazon Resource Name (ARN) of an organization.
     * 
     * @return the arn value.
     */
    public String arn() {
        return this.arn;
    }

    /**
     * Set the arn property: The Amazon Resource Name (ARN) of an organization.
     * 
     * @param arn the arn value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withArn(String arn) {
        this.arn = arn;
        return this;
    }

    /**
     * Get the featureSet property: Specifies the feature set supported by the new organization. Each feature set
     * supports different levels of functionality.
     * 
     * @return the featureSet value.
     */
    public FeatureSet featureSet() {
        return this.featureSet;
    }

    /**
     * Set the featureSet property: Specifies the feature set supported by the new organization. Each feature set
     * supports different levels of functionality.
     * 
     * @param featureSet the featureSet value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withFeatureSet(FeatureSet featureSet) {
        this.featureSet = featureSet;
        return this;
    }

    /**
     * Get the id property: The unique identifier (ID) of an organization.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The unique identifier (ID) of an organization.
     * 
     * @param id the id value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the managementAccountArn property: The Amazon Resource Name (ARN) of the account that is designated as the
     * management account for the organization.
     * 
     * @return the managementAccountArn value.
     */
    public String managementAccountArn() {
        return this.managementAccountArn;
    }

    /**
     * Set the managementAccountArn property: The Amazon Resource Name (ARN) of the account that is designated as the
     * management account for the organization.
     * 
     * @param managementAccountArn the managementAccountArn value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withManagementAccountArn(String managementAccountArn) {
        this.managementAccountArn = managementAccountArn;
        return this;
    }

    /**
     * Get the managementAccountEmail property: The email address that is associated with the AWS account that is
     * designated as the management account for the organization.
     * 
     * @return the managementAccountEmail value.
     */
    public String managementAccountEmail() {
        return this.managementAccountEmail;
    }

    /**
     * Set the managementAccountEmail property: The email address that is associated with the AWS account that is
     * designated as the management account for the organization.
     * 
     * @param managementAccountEmail the managementAccountEmail value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withManagementAccountEmail(String managementAccountEmail) {
        this.managementAccountEmail = managementAccountEmail;
        return this;
    }

    /**
     * Get the managementAccountId property: The unique identifier (ID) of the management account of an organization.
     * 
     * @return the managementAccountId value.
     */
    public String managementAccountId() {
        return this.managementAccountId;
    }

    /**
     * Set the managementAccountId property: The unique identifier (ID) of the management account of an organization.
     * 
     * @param managementAccountId the managementAccountId value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withManagementAccountId(String managementAccountId) {
        this.managementAccountId = managementAccountId;
        return this;
    }

    /**
     * Get the rootId property: The unique identifier (ID) for the root.
     * 
     * @return the rootId value.
     */
    public String rootId() {
        return this.rootId;
    }

    /**
     * Set the rootId property: The unique identifier (ID) for the root.
     * 
     * @param rootId the rootId value to set.
     * @return the AwsOrganizationsOrganizationProperties object itself.
     */
    public AwsOrganizationsOrganizationProperties withRootId(String rootId) {
        this.rootId = rootId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("arn", this.arn);
        jsonWriter.writeStringField("featureSet", this.featureSet == null ? null : this.featureSet.toString());
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("managementAccountArn", this.managementAccountArn);
        jsonWriter.writeStringField("managementAccountEmail", this.managementAccountEmail);
        jsonWriter.writeStringField("managementAccountId", this.managementAccountId);
        jsonWriter.writeStringField("rootId", this.rootId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsOrganizationsOrganizationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsOrganizationsOrganizationProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsOrganizationsOrganizationProperties.
     */
    public static AwsOrganizationsOrganizationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsOrganizationsOrganizationProperties deserializedAwsOrganizationsOrganizationProperties
                = new AwsOrganizationsOrganizationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("arn".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.arn = reader.getString();
                } else if ("featureSet".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.featureSet
                        = FeatureSet.fromString(reader.getString());
                } else if ("id".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.id = reader.getString();
                } else if ("managementAccountArn".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.managementAccountArn = reader.getString();
                } else if ("managementAccountEmail".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.managementAccountEmail = reader.getString();
                } else if ("managementAccountId".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.managementAccountId = reader.getString();
                } else if ("rootId".equals(fieldName)) {
                    deserializedAwsOrganizationsOrganizationProperties.rootId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsOrganizationsOrganizationProperties;
        });
    }
}

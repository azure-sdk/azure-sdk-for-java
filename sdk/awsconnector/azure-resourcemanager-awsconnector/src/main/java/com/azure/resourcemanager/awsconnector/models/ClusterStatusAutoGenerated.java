// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of ClusterStatus.
 */
@Fluent
public final class ClusterStatusAutoGenerated implements JsonSerializable<ClusterStatusAutoGenerated> {
    /*
     * <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure
     * can contain up to 10 different <code>ErrorDetail</code> tuples.</p>
     */
    private List<ErrorDetailAutoGenerated> errorDetails;

    /*
     * <p>The current state of the cluster.</p>
     */
    private ClusterStateEnumValue state;

    /*
     * <p>The reason for the cluster status change.</p>
     */
    private ClusterStateChangeReason stateChangeReason;

    /*
     * <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
     */
    private ClusterTimeline timeline;

    /**
     * Creates an instance of ClusterStatusAutoGenerated class.
     */
    public ClusterStatusAutoGenerated() {
    }

    /**
     * Get the errorDetails property: &lt;p&gt;A list of tuples that provides information about the errors that caused a
     * cluster to terminate. This structure can contain up to 10 different &lt;code&gt;ErrorDetail&lt;/code&gt;
     * tuples.&lt;/p&gt;.
     * 
     * @return the errorDetails value.
     */
    public List<ErrorDetailAutoGenerated> errorDetails() {
        return this.errorDetails;
    }

    /**
     * Set the errorDetails property: &lt;p&gt;A list of tuples that provides information about the errors that caused a
     * cluster to terminate. This structure can contain up to 10 different &lt;code&gt;ErrorDetail&lt;/code&gt;
     * tuples.&lt;/p&gt;.
     * 
     * @param errorDetails the errorDetails value to set.
     * @return the ClusterStatusAutoGenerated object itself.
     */
    public ClusterStatusAutoGenerated withErrorDetails(List<ErrorDetailAutoGenerated> errorDetails) {
        this.errorDetails = errorDetails;
        return this;
    }

    /**
     * Get the state property: &lt;p&gt;The current state of the cluster.&lt;/p&gt;.
     * 
     * @return the state value.
     */
    public ClusterStateEnumValue state() {
        return this.state;
    }

    /**
     * Set the state property: &lt;p&gt;The current state of the cluster.&lt;/p&gt;.
     * 
     * @param state the state value to set.
     * @return the ClusterStatusAutoGenerated object itself.
     */
    public ClusterStatusAutoGenerated withState(ClusterStateEnumValue state) {
        this.state = state;
        return this;
    }

    /**
     * Get the stateChangeReason property: &lt;p&gt;The reason for the cluster status change.&lt;/p&gt;.
     * 
     * @return the stateChangeReason value.
     */
    public ClusterStateChangeReason stateChangeReason() {
        return this.stateChangeReason;
    }

    /**
     * Set the stateChangeReason property: &lt;p&gt;The reason for the cluster status change.&lt;/p&gt;.
     * 
     * @param stateChangeReason the stateChangeReason value to set.
     * @return the ClusterStatusAutoGenerated object itself.
     */
    public ClusterStatusAutoGenerated withStateChangeReason(ClusterStateChangeReason stateChangeReason) {
        this.stateChangeReason = stateChangeReason;
        return this;
    }

    /**
     * Get the timeline property: &lt;p&gt;A timeline that represents the status of a cluster over the lifetime of the
     * cluster.&lt;/p&gt;.
     * 
     * @return the timeline value.
     */
    public ClusterTimeline timeline() {
        return this.timeline;
    }

    /**
     * Set the timeline property: &lt;p&gt;A timeline that represents the status of a cluster over the lifetime of the
     * cluster.&lt;/p&gt;.
     * 
     * @param timeline the timeline value to set.
     * @return the ClusterStatusAutoGenerated object itself.
     */
    public ClusterStatusAutoGenerated withTimeline(ClusterTimeline timeline) {
        this.timeline = timeline;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errorDetails() != null) {
            errorDetails().forEach(e -> e.validate());
        }
        if (state() != null) {
            state().validate();
        }
        if (stateChangeReason() != null) {
            stateChangeReason().validate();
        }
        if (timeline() != null) {
            timeline().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("errorDetails", this.errorDetails, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("state", this.state);
        jsonWriter.writeJsonField("stateChangeReason", this.stateChangeReason);
        jsonWriter.writeJsonField("timeline", this.timeline);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ClusterStatusAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ClusterStatusAutoGenerated if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ClusterStatusAutoGenerated.
     */
    public static ClusterStatusAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ClusterStatusAutoGenerated deserializedClusterStatusAutoGenerated = new ClusterStatusAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("errorDetails".equals(fieldName)) {
                    List<ErrorDetailAutoGenerated> errorDetails
                        = reader.readArray(reader1 -> ErrorDetailAutoGenerated.fromJson(reader1));
                    deserializedClusterStatusAutoGenerated.errorDetails = errorDetails;
                } else if ("state".equals(fieldName)) {
                    deserializedClusterStatusAutoGenerated.state = ClusterStateEnumValue.fromJson(reader);
                } else if ("stateChangeReason".equals(fieldName)) {
                    deserializedClusterStatusAutoGenerated.stateChangeReason
                        = ClusterStateChangeReason.fromJson(reader);
                } else if ("timeline".equals(fieldName)) {
                    deserializedClusterStatusAutoGenerated.timeline = ClusterTimeline.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedClusterStatusAutoGenerated;
        });
    }
}

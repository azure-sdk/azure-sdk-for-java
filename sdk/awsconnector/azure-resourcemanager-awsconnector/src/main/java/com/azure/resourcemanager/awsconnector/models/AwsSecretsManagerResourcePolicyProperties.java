// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsSecretsManagerResourcePolicy.
 */
@Fluent
public final class AwsSecretsManagerResourcePolicyProperties
    implements JsonSerializable<AwsSecretsManagerResourcePolicyProperties> {
    /*
     * Property blockPublicPolicy
     */
    private Boolean blockPublicPolicy;

    /*
     * Property id
     */
    private String id;

    /*
     * Property resourcePolicy
     */
    private Object resourcePolicy;

    /*
     * Property secretId
     */
    private String secretId;

    /**
     * Creates an instance of AwsSecretsManagerResourcePolicyProperties class.
     */
    public AwsSecretsManagerResourcePolicyProperties() {
    }

    /**
     * Get the blockPublicPolicy property: Property blockPublicPolicy.
     * 
     * @return the blockPublicPolicy value.
     */
    public Boolean blockPublicPolicy() {
        return this.blockPublicPolicy;
    }

    /**
     * Set the blockPublicPolicy property: Property blockPublicPolicy.
     * 
     * @param blockPublicPolicy the blockPublicPolicy value to set.
     * @return the AwsSecretsManagerResourcePolicyProperties object itself.
     */
    public AwsSecretsManagerResourcePolicyProperties withBlockPublicPolicy(Boolean blockPublicPolicy) {
        this.blockPublicPolicy = blockPublicPolicy;
        return this;
    }

    /**
     * Get the id property: Property id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Property id.
     * 
     * @param id the id value to set.
     * @return the AwsSecretsManagerResourcePolicyProperties object itself.
     */
    public AwsSecretsManagerResourcePolicyProperties withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the resourcePolicy property: Property resourcePolicy.
     * 
     * @return the resourcePolicy value.
     */
    public Object resourcePolicy() {
        return this.resourcePolicy;
    }

    /**
     * Set the resourcePolicy property: Property resourcePolicy.
     * 
     * @param resourcePolicy the resourcePolicy value to set.
     * @return the AwsSecretsManagerResourcePolicyProperties object itself.
     */
    public AwsSecretsManagerResourcePolicyProperties withResourcePolicy(Object resourcePolicy) {
        this.resourcePolicy = resourcePolicy;
        return this;
    }

    /**
     * Get the secretId property: Property secretId.
     * 
     * @return the secretId value.
     */
    public String secretId() {
        return this.secretId;
    }

    /**
     * Set the secretId property: Property secretId.
     * 
     * @param secretId the secretId value to set.
     * @return the AwsSecretsManagerResourcePolicyProperties object itself.
     */
    public AwsSecretsManagerResourcePolicyProperties withSecretId(String secretId) {
        this.secretId = secretId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("blockPublicPolicy", this.blockPublicPolicy);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeUntypedField("resourcePolicy", this.resourcePolicy);
        jsonWriter.writeStringField("secretId", this.secretId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsSecretsManagerResourcePolicyProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsSecretsManagerResourcePolicyProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsSecretsManagerResourcePolicyProperties.
     */
    public static AwsSecretsManagerResourcePolicyProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsSecretsManagerResourcePolicyProperties deserializedAwsSecretsManagerResourcePolicyProperties
                = new AwsSecretsManagerResourcePolicyProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("blockPublicPolicy".equals(fieldName)) {
                    deserializedAwsSecretsManagerResourcePolicyProperties.blockPublicPolicy
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("id".equals(fieldName)) {
                    deserializedAwsSecretsManagerResourcePolicyProperties.id = reader.getString();
                } else if ("resourcePolicy".equals(fieldName)) {
                    deserializedAwsSecretsManagerResourcePolicyProperties.resourcePolicy = reader.readUntyped();
                } else if ("secretId".equals(fieldName)) {
                    deserializedAwsSecretsManagerResourcePolicyProperties.secretId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsSecretsManagerResourcePolicyProperties;
        });
    }
}

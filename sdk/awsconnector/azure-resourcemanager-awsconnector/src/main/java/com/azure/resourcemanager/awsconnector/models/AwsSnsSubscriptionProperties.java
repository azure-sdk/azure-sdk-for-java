// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsSnsSubscription.
 */
@Fluent
public final class AwsSnsSubscriptionProperties implements JsonSerializable<AwsSnsSubscriptionProperties> {
    /*
     * <p>The subscription's endpoint (format depends on the protocol).</p>
     */
    private String endpoint;

    /*
     * <p>The subscription's owner.</p>
     */
    private String owner;

    /*
     * <p>The subscription's protocol.</p>
     */
    private String protocol;

    /*
     * <p>The subscription's ARN.</p>
     */
    private String subscriptionArn;

    /*
     * <p>The ARN of the subscription's topic.</p>
     */
    private String topicArn;

    /**
     * Creates an instance of AwsSnsSubscriptionProperties class.
     */
    public AwsSnsSubscriptionProperties() {
    }

    /**
     * Get the endpoint property: &lt;p&gt;The subscription's endpoint (format depends on the protocol).&lt;/p&gt;.
     * 
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: &lt;p&gt;The subscription's endpoint (format depends on the protocol).&lt;/p&gt;.
     * 
     * @param endpoint the endpoint value to set.
     * @return the AwsSnsSubscriptionProperties object itself.
     */
    public AwsSnsSubscriptionProperties withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the owner property: &lt;p&gt;The subscription's owner.&lt;/p&gt;.
     * 
     * @return the owner value.
     */
    public String owner() {
        return this.owner;
    }

    /**
     * Set the owner property: &lt;p&gt;The subscription's owner.&lt;/p&gt;.
     * 
     * @param owner the owner value to set.
     * @return the AwsSnsSubscriptionProperties object itself.
     */
    public AwsSnsSubscriptionProperties withOwner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Get the protocol property: &lt;p&gt;The subscription's protocol.&lt;/p&gt;.
     * 
     * @return the protocol value.
     */
    public String protocol() {
        return this.protocol;
    }

    /**
     * Set the protocol property: &lt;p&gt;The subscription's protocol.&lt;/p&gt;.
     * 
     * @param protocol the protocol value to set.
     * @return the AwsSnsSubscriptionProperties object itself.
     */
    public AwsSnsSubscriptionProperties withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Get the subscriptionArn property: &lt;p&gt;The subscription's ARN.&lt;/p&gt;.
     * 
     * @return the subscriptionArn value.
     */
    public String subscriptionArn() {
        return this.subscriptionArn;
    }

    /**
     * Set the subscriptionArn property: &lt;p&gt;The subscription's ARN.&lt;/p&gt;.
     * 
     * @param subscriptionArn the subscriptionArn value to set.
     * @return the AwsSnsSubscriptionProperties object itself.
     */
    public AwsSnsSubscriptionProperties withSubscriptionArn(String subscriptionArn) {
        this.subscriptionArn = subscriptionArn;
        return this;
    }

    /**
     * Get the topicArn property: &lt;p&gt;The ARN of the subscription's topic.&lt;/p&gt;.
     * 
     * @return the topicArn value.
     */
    public String topicArn() {
        return this.topicArn;
    }

    /**
     * Set the topicArn property: &lt;p&gt;The ARN of the subscription's topic.&lt;/p&gt;.
     * 
     * @param topicArn the topicArn value to set.
     * @return the AwsSnsSubscriptionProperties object itself.
     */
    public AwsSnsSubscriptionProperties withTopicArn(String topicArn) {
        this.topicArn = topicArn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpoint", this.endpoint);
        jsonWriter.writeStringField("owner", this.owner);
        jsonWriter.writeStringField("protocol", this.protocol);
        jsonWriter.writeStringField("subscriptionArn", this.subscriptionArn);
        jsonWriter.writeStringField("topicArn", this.topicArn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsSnsSubscriptionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsSnsSubscriptionProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsSnsSubscriptionProperties.
     */
    public static AwsSnsSubscriptionProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsSnsSubscriptionProperties deserializedAwsSnsSubscriptionProperties = new AwsSnsSubscriptionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpoint".equals(fieldName)) {
                    deserializedAwsSnsSubscriptionProperties.endpoint = reader.getString();
                } else if ("owner".equals(fieldName)) {
                    deserializedAwsSnsSubscriptionProperties.owner = reader.getString();
                } else if ("protocol".equals(fieldName)) {
                    deserializedAwsSnsSubscriptionProperties.protocol = reader.getString();
                } else if ("subscriptionArn".equals(fieldName)) {
                    deserializedAwsSnsSubscriptionProperties.subscriptionArn = reader.getString();
                } else if ("topicArn".equals(fieldName)) {
                    deserializedAwsSnsSubscriptionProperties.topicArn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsSnsSubscriptionProperties;
        });
    }
}

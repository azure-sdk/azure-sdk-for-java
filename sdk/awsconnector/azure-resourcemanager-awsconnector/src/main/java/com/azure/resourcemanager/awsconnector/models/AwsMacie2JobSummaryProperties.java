// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 * Definition of awsMacie2JobSummary.
 */
@Fluent
public final class AwsMacie2JobSummaryProperties implements JsonSerializable<AwsMacie2JobSummaryProperties> {
    /*
     * <p>The property- and tag-based conditions that determine which S3 buckets are included or excluded from the job's
     * analysis. Each time the job runs, the job uses these criteria to determine which buckets to analyze. A job's
     * definition can contain a bucketCriteria object or a bucketDefinitions array, not both.</p>
     */
    private S3BucketCriteriaForJob bucketCriteria;

    /*
     * <p>An array of objects, one for each Amazon Web Services account that owns specific S3 buckets for the job to
     * analyze. Each object specifies the account ID for an account and one or more buckets to analyze for that account.
     * A job's definition can contain a bucketDefinitions array or a bucketCriteria object, not both.</p>
     */
    private List<S3BucketDefinitionForJob> bucketDefinitions;

    /*
     * <p>The date and time, in UTC and extended ISO 8601 format, when the job was created.</p>
     */
    private OffsetDateTime createdAt;

    /*
     * <p>The unique identifier for the job.</p>
     */
    private String jobId;

    /*
     * <p>The current status of the job. Possible values are:</p> <ul><li><p>CANCELLED - You cancelled the job or, if
     * it's a one-time job, you paused the job and didn't resume it within 30 days.</p></li> <li><p>COMPLETE - For a
     * one-time job, Amazon Macie finished processing the data specified for the job. This value doesn't apply to
     * recurring jobs.</p></li> <li><p>IDLE - For a recurring job, the previous scheduled run is complete and the next
     * scheduled run is pending. This value doesn't apply to one-time jobs.</p></li> <li><p>PAUSED - Macie started
     * running the job but additional processing would exceed the monthly sensitive data discovery quota for your
     * account or one or more member accounts that the job analyzes data for.</p></li> <li><p>RUNNING - For a one-time
     * job, the job is in progress. For a recurring job, a scheduled run is in progress.</p></li> <li><p>USER_PAUSED -
     * You paused the job. If you paused the job while it had a status of RUNNING and you don't resume it within 30 days
     * of pausing it, the job or job run will expire and be cancelled, depending on the job's type. To check the
     * expiration date, refer to the UserPausedDetails.jobExpiresAt property.</p></li></ul>
     */
    private JobStatusEnumValue jobStatus;

    /*
     * <p>The schedule for running the job. Possible values are:</p> <ul><li><p>ONE_TIME - The job runs only
     * once.</p></li> <li><p>SCHEDULED - The job runs on a daily, weekly, or monthly basis.</p></li></ul>
     */
    private JobTypeEnumValue jobType;

    /*
     * <p>Specifies whether any account- or bucket-level access errors occurred when the job ran. For a recurring job,
     * this value indicates the error status of the job's most recent run.</p>
     */
    private LastRunErrorStatus lastRunErrorStatus;

    /*
     * <p>The custom name of the job.</p>
     */
    private String name;

    /*
     * <p>If the current status of the job is USER_PAUSED, specifies when the job was paused and when the job or job run
     * will expire and be cancelled if it isn't resumed. This value is present only if the value for jobStatus is
     * USER_PAUSED.</p>
     */
    private UserPausedDetails userPausedDetails;

    /**
     * Creates an instance of AwsMacie2JobSummaryProperties class.
     */
    public AwsMacie2JobSummaryProperties() {
    }

    /**
     * Get the bucketCriteria property: &lt;p&gt;The property- and tag-based conditions that determine which S3 buckets
     * are included or excluded from the job's analysis. Each time the job runs, the job uses these criteria to
     * determine which buckets to analyze. A job's definition can contain a bucketCriteria object or a bucketDefinitions
     * array, not both.&lt;/p&gt;.
     * 
     * @return the bucketCriteria value.
     */
    public S3BucketCriteriaForJob bucketCriteria() {
        return this.bucketCriteria;
    }

    /**
     * Set the bucketCriteria property: &lt;p&gt;The property- and tag-based conditions that determine which S3 buckets
     * are included or excluded from the job's analysis. Each time the job runs, the job uses these criteria to
     * determine which buckets to analyze. A job's definition can contain a bucketCriteria object or a bucketDefinitions
     * array, not both.&lt;/p&gt;.
     * 
     * @param bucketCriteria the bucketCriteria value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withBucketCriteria(S3BucketCriteriaForJob bucketCriteria) {
        this.bucketCriteria = bucketCriteria;
        return this;
    }

    /**
     * Get the bucketDefinitions property: &lt;p&gt;An array of objects, one for each Amazon Web Services account that
     * owns specific S3 buckets for the job to analyze. Each object specifies the account ID for an account and one or
     * more buckets to analyze for that account. A job's definition can contain a bucketDefinitions array or a
     * bucketCriteria object, not both.&lt;/p&gt;.
     * 
     * @return the bucketDefinitions value.
     */
    public List<S3BucketDefinitionForJob> bucketDefinitions() {
        return this.bucketDefinitions;
    }

    /**
     * Set the bucketDefinitions property: &lt;p&gt;An array of objects, one for each Amazon Web Services account that
     * owns specific S3 buckets for the job to analyze. Each object specifies the account ID for an account and one or
     * more buckets to analyze for that account. A job's definition can contain a bucketDefinitions array or a
     * bucketCriteria object, not both.&lt;/p&gt;.
     * 
     * @param bucketDefinitions the bucketDefinitions value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withBucketDefinitions(List<S3BucketDefinitionForJob> bucketDefinitions) {
        this.bucketDefinitions = bucketDefinitions;
        return this;
    }

    /**
     * Get the createdAt property: &lt;p&gt;The date and time, in UTC and extended ISO 8601 format, when the job was
     * created.&lt;/p&gt;.
     * 
     * @return the createdAt value.
     */
    public OffsetDateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Set the createdAt property: &lt;p&gt;The date and time, in UTC and extended ISO 8601 format, when the job was
     * created.&lt;/p&gt;.
     * 
     * @param createdAt the createdAt value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the jobId property: &lt;p&gt;The unique identifier for the job.&lt;/p&gt;.
     * 
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Set the jobId property: &lt;p&gt;The unique identifier for the job.&lt;/p&gt;.
     * 
     * @param jobId the jobId value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Get the jobStatus property: &lt;p&gt;The current status of the job. Possible values are:&lt;/p&gt;
     * &lt;ul&gt;&lt;li&gt;&lt;p&gt;CANCELLED - You cancelled the job or, if it's a one-time job, you paused the job and
     * didn't resume it within 30 days.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;COMPLETE - For a one-time job, Amazon
     * Macie finished processing the data specified for the job. This value doesn't apply to recurring
     * jobs.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;IDLE - For a recurring job, the previous scheduled run is complete
     * and the next scheduled run is pending. This value doesn't apply to one-time jobs.&lt;/p&gt;&lt;/li&gt;
     * &lt;li&gt;&lt;p&gt;PAUSED - Macie started running the job but additional processing would exceed the monthly
     * sensitive data discovery quota for your account or one or more member accounts that the job analyzes data
     * for.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;RUNNING - For a one-time job, the job is in progress. For a
     * recurring job, a scheduled run is in progress.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;USER_PAUSED - You paused
     * the job. If you paused the job while it had a status of RUNNING and you don't resume it within 30 days of pausing
     * it, the job or job run will expire and be cancelled, depending on the job's type. To check the expiration date,
     * refer to the UserPausedDetails.jobExpiresAt property.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;.
     * 
     * @return the jobStatus value.
     */
    public JobStatusEnumValue jobStatus() {
        return this.jobStatus;
    }

    /**
     * Set the jobStatus property: &lt;p&gt;The current status of the job. Possible values are:&lt;/p&gt;
     * &lt;ul&gt;&lt;li&gt;&lt;p&gt;CANCELLED - You cancelled the job or, if it's a one-time job, you paused the job and
     * didn't resume it within 30 days.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;COMPLETE - For a one-time job, Amazon
     * Macie finished processing the data specified for the job. This value doesn't apply to recurring
     * jobs.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;IDLE - For a recurring job, the previous scheduled run is complete
     * and the next scheduled run is pending. This value doesn't apply to one-time jobs.&lt;/p&gt;&lt;/li&gt;
     * &lt;li&gt;&lt;p&gt;PAUSED - Macie started running the job but additional processing would exceed the monthly
     * sensitive data discovery quota for your account or one or more member accounts that the job analyzes data
     * for.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;RUNNING - For a one-time job, the job is in progress. For a
     * recurring job, a scheduled run is in progress.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;USER_PAUSED - You paused
     * the job. If you paused the job while it had a status of RUNNING and you don't resume it within 30 days of pausing
     * it, the job or job run will expire and be cancelled, depending on the job's type. To check the expiration date,
     * refer to the UserPausedDetails.jobExpiresAt property.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;.
     * 
     * @param jobStatus the jobStatus value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withJobStatus(JobStatusEnumValue jobStatus) {
        this.jobStatus = jobStatus;
        return this;
    }

    /**
     * Get the jobType property: &lt;p&gt;The schedule for running the job. Possible values are:&lt;/p&gt;
     * &lt;ul&gt;&lt;li&gt;&lt;p&gt;ONE_TIME - The job runs only once.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;SCHEDULED
     * - The job runs on a daily, weekly, or monthly basis.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;.
     * 
     * @return the jobType value.
     */
    public JobTypeEnumValue jobType() {
        return this.jobType;
    }

    /**
     * Set the jobType property: &lt;p&gt;The schedule for running the job. Possible values are:&lt;/p&gt;
     * &lt;ul&gt;&lt;li&gt;&lt;p&gt;ONE_TIME - The job runs only once.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;SCHEDULED
     * - The job runs on a daily, weekly, or monthly basis.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;.
     * 
     * @param jobType the jobType value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withJobType(JobTypeEnumValue jobType) {
        this.jobType = jobType;
        return this;
    }

    /**
     * Get the lastRunErrorStatus property: &lt;p&gt;Specifies whether any account- or bucket-level access errors
     * occurred when the job ran. For a recurring job, this value indicates the error status of the job's most recent
     * run.&lt;/p&gt;.
     * 
     * @return the lastRunErrorStatus value.
     */
    public LastRunErrorStatus lastRunErrorStatus() {
        return this.lastRunErrorStatus;
    }

    /**
     * Set the lastRunErrorStatus property: &lt;p&gt;Specifies whether any account- or bucket-level access errors
     * occurred when the job ran. For a recurring job, this value indicates the error status of the job's most recent
     * run.&lt;/p&gt;.
     * 
     * @param lastRunErrorStatus the lastRunErrorStatus value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withLastRunErrorStatus(LastRunErrorStatus lastRunErrorStatus) {
        this.lastRunErrorStatus = lastRunErrorStatus;
        return this;
    }

    /**
     * Get the name property: &lt;p&gt;The custom name of the job.&lt;/p&gt;.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: &lt;p&gt;The custom name of the job.&lt;/p&gt;.
     * 
     * @param name the name value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the userPausedDetails property: &lt;p&gt;If the current status of the job is USER_PAUSED, specifies when the
     * job was paused and when the job or job run will expire and be cancelled if it isn't resumed. This value is
     * present only if the value for jobStatus is USER_PAUSED.&lt;/p&gt;.
     * 
     * @return the userPausedDetails value.
     */
    public UserPausedDetails userPausedDetails() {
        return this.userPausedDetails;
    }

    /**
     * Set the userPausedDetails property: &lt;p&gt;If the current status of the job is USER_PAUSED, specifies when the
     * job was paused and when the job or job run will expire and be cancelled if it isn't resumed. This value is
     * present only if the value for jobStatus is USER_PAUSED.&lt;/p&gt;.
     * 
     * @param userPausedDetails the userPausedDetails value to set.
     * @return the AwsMacie2JobSummaryProperties object itself.
     */
    public AwsMacie2JobSummaryProperties withUserPausedDetails(UserPausedDetails userPausedDetails) {
        this.userPausedDetails = userPausedDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (bucketCriteria() != null) {
            bucketCriteria().validate();
        }
        if (bucketDefinitions() != null) {
            bucketDefinitions().forEach(e -> e.validate());
        }
        if (jobStatus() != null) {
            jobStatus().validate();
        }
        if (jobType() != null) {
            jobType().validate();
        }
        if (lastRunErrorStatus() != null) {
            lastRunErrorStatus().validate();
        }
        if (userPausedDetails() != null) {
            userPausedDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("bucketCriteria", this.bucketCriteria);
        jsonWriter.writeArrayField("bucketDefinitions", this.bucketDefinitions,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("createdAt",
            this.createdAt == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.createdAt));
        jsonWriter.writeStringField("jobId", this.jobId);
        jsonWriter.writeJsonField("jobStatus", this.jobStatus);
        jsonWriter.writeJsonField("jobType", this.jobType);
        jsonWriter.writeJsonField("lastRunErrorStatus", this.lastRunErrorStatus);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeJsonField("userPausedDetails", this.userPausedDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsMacie2JobSummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsMacie2JobSummaryProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsMacie2JobSummaryProperties.
     */
    public static AwsMacie2JobSummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsMacie2JobSummaryProperties deserializedAwsMacie2JobSummaryProperties
                = new AwsMacie2JobSummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("bucketCriteria".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.bucketCriteria = S3BucketCriteriaForJob.fromJson(reader);
                } else if ("bucketDefinitions".equals(fieldName)) {
                    List<S3BucketDefinitionForJob> bucketDefinitions
                        = reader.readArray(reader1 -> S3BucketDefinitionForJob.fromJson(reader1));
                    deserializedAwsMacie2JobSummaryProperties.bucketDefinitions = bucketDefinitions;
                } else if ("createdAt".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.createdAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("jobId".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.jobId = reader.getString();
                } else if ("jobStatus".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.jobStatus = JobStatusEnumValue.fromJson(reader);
                } else if ("jobType".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.jobType = JobTypeEnumValue.fromJson(reader);
                } else if ("lastRunErrorStatus".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.lastRunErrorStatus = LastRunErrorStatus.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.name = reader.getString();
                } else if ("userPausedDetails".equals(fieldName)) {
                    deserializedAwsMacie2JobSummaryProperties.userPausedDetails = UserPausedDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsMacie2JobSummaryProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of awsLambdaFunctionCodeLocation.
 */
@Fluent
public final class AwsLambdaFunctionCodeLocationProperties
    implements JsonSerializable<AwsLambdaFunctionCodeLocationProperties> {
    /*
     * <p>URI of a container image in the Amazon ECR registry.</p>
     */
    private String imageUri;

    /*
     * <p>A presigned URL that you can use to download the deployment package.</p>
     */
    private String location;

    /*
     * <p>The service that's hosting the file.</p>
     */
    private String repositoryType;

    /*
     * <p>The resolved URI for the image.</p>
     */
    private String resolvedImageUri;

    /**
     * Creates an instance of AwsLambdaFunctionCodeLocationProperties class.
     */
    public AwsLambdaFunctionCodeLocationProperties() {
    }

    /**
     * Get the imageUri property: &lt;p&gt;URI of a container image in the Amazon ECR registry.&lt;/p&gt;.
     * 
     * @return the imageUri value.
     */
    public String imageUri() {
        return this.imageUri;
    }

    /**
     * Set the imageUri property: &lt;p&gt;URI of a container image in the Amazon ECR registry.&lt;/p&gt;.
     * 
     * @param imageUri the imageUri value to set.
     * @return the AwsLambdaFunctionCodeLocationProperties object itself.
     */
    public AwsLambdaFunctionCodeLocationProperties withImageUri(String imageUri) {
        this.imageUri = imageUri;
        return this;
    }

    /**
     * Get the location property: &lt;p&gt;A presigned URL that you can use to download the deployment
     * package.&lt;/p&gt;.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: &lt;p&gt;A presigned URL that you can use to download the deployment
     * package.&lt;/p&gt;.
     * 
     * @param location the location value to set.
     * @return the AwsLambdaFunctionCodeLocationProperties object itself.
     */
    public AwsLambdaFunctionCodeLocationProperties withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the repositoryType property: &lt;p&gt;The service that's hosting the file.&lt;/p&gt;.
     * 
     * @return the repositoryType value.
     */
    public String repositoryType() {
        return this.repositoryType;
    }

    /**
     * Set the repositoryType property: &lt;p&gt;The service that's hosting the file.&lt;/p&gt;.
     * 
     * @param repositoryType the repositoryType value to set.
     * @return the AwsLambdaFunctionCodeLocationProperties object itself.
     */
    public AwsLambdaFunctionCodeLocationProperties withRepositoryType(String repositoryType) {
        this.repositoryType = repositoryType;
        return this;
    }

    /**
     * Get the resolvedImageUri property: &lt;p&gt;The resolved URI for the image.&lt;/p&gt;.
     * 
     * @return the resolvedImageUri value.
     */
    public String resolvedImageUri() {
        return this.resolvedImageUri;
    }

    /**
     * Set the resolvedImageUri property: &lt;p&gt;The resolved URI for the image.&lt;/p&gt;.
     * 
     * @param resolvedImageUri the resolvedImageUri value to set.
     * @return the AwsLambdaFunctionCodeLocationProperties object itself.
     */
    public AwsLambdaFunctionCodeLocationProperties withResolvedImageUri(String resolvedImageUri) {
        this.resolvedImageUri = resolvedImageUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("imageUri", this.imageUri);
        jsonWriter.writeStringField("location", this.location);
        jsonWriter.writeStringField("repositoryType", this.repositoryType);
        jsonWriter.writeStringField("resolvedImageUri", this.resolvedImageUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsLambdaFunctionCodeLocationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsLambdaFunctionCodeLocationProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsLambdaFunctionCodeLocationProperties.
     */
    public static AwsLambdaFunctionCodeLocationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsLambdaFunctionCodeLocationProperties deserializedAwsLambdaFunctionCodeLocationProperties
                = new AwsLambdaFunctionCodeLocationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("imageUri".equals(fieldName)) {
                    deserializedAwsLambdaFunctionCodeLocationProperties.imageUri = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedAwsLambdaFunctionCodeLocationProperties.location = reader.getString();
                } else if ("repositoryType".equals(fieldName)) {
                    deserializedAwsLambdaFunctionCodeLocationProperties.repositoryType = reader.getString();
                } else if ("resolvedImageUri".equals(fieldName)) {
                    deserializedAwsLambdaFunctionCodeLocationProperties.resolvedImageUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsLambdaFunctionCodeLocationProperties;
        });
    }
}

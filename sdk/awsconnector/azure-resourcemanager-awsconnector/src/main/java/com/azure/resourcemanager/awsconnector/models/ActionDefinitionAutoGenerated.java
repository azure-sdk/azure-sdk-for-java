// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ActionDefinition.
 */
@Fluent
public final class ActionDefinitionAutoGenerated implements JsonSerializable<ActionDefinitionAutoGenerated> {
    /*
     * Property publishMetricAction
     */
    private PublishMetricActionAutoGenerated publishMetricAction;

    /**
     * Creates an instance of ActionDefinitionAutoGenerated class.
     */
    public ActionDefinitionAutoGenerated() {
    }

    /**
     * Get the publishMetricAction property: Property publishMetricAction.
     * 
     * @return the publishMetricAction value.
     */
    public PublishMetricActionAutoGenerated publishMetricAction() {
        return this.publishMetricAction;
    }

    /**
     * Set the publishMetricAction property: Property publishMetricAction.
     * 
     * @param publishMetricAction the publishMetricAction value to set.
     * @return the ActionDefinitionAutoGenerated object itself.
     */
    public ActionDefinitionAutoGenerated withPublishMetricAction(PublishMetricActionAutoGenerated publishMetricAction) {
        this.publishMetricAction = publishMetricAction;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (publishMetricAction() != null) {
            publishMetricAction().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("publishMetricAction", this.publishMetricAction);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ActionDefinitionAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ActionDefinitionAutoGenerated if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ActionDefinitionAutoGenerated.
     */
    public static ActionDefinitionAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ActionDefinitionAutoGenerated deserializedActionDefinitionAutoGenerated
                = new ActionDefinitionAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("publishMetricAction".equals(fieldName)) {
                    deserializedActionDefinitionAutoGenerated.publishMetricAction
                        = PublishMetricActionAutoGenerated.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedActionDefinitionAutoGenerated;
        });
    }
}

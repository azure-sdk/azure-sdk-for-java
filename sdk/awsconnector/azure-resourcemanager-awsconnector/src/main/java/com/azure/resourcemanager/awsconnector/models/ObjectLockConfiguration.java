// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ObjectLockConfiguration.
 */
@Fluent
public final class ObjectLockConfiguration implements JsonSerializable<ObjectLockConfiguration> {
    /*
     * Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you
     * apply ``ObjectLockConfiguration`` to a bucket.
     */
    private String objectLockEnabled;

    /*
     * Specifies the Object Lock rule for the specified object. Enable this rule when you apply
     * ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a
     * period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more
     * information, see
     * [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-
     * objectlockrule.html) and
     * [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-
     * defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you
     * apply ``ObjectLockConfiguration`` to a bucket.
     */
    private ObjectLockRule rule;

    /**
     * Creates an instance of ObjectLockConfiguration class.
     */
    public ObjectLockConfiguration() {
    }

    /**
     * Get the objectLockEnabled property: Indicates whether this bucket has an Object Lock configuration enabled.
     * Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
     * 
     * @return the objectLockEnabled value.
     */
    public String objectLockEnabled() {
        return this.objectLockEnabled;
    }

    /**
     * Set the objectLockEnabled property: Indicates whether this bucket has an Object Lock configuration enabled.
     * Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
     * 
     * @param objectLockEnabled the objectLockEnabled value to set.
     * @return the ObjectLockConfiguration object itself.
     */
    public ObjectLockConfiguration withObjectLockEnabled(String objectLockEnabled) {
        this.objectLockEnabled = objectLockEnabled;
        return this;
    }

    /**
     * Get the rule property: Specifies the Object Lock rule for the specified object. Enable this rule when you apply
     * ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a
     * period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more
     * information, see
     * [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html)
     * and
     * [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
     * Specifies the Object Lock rule for the specified object. Enable the this rule when you apply
     * ``ObjectLockConfiguration`` to a bucket.
     * 
     * @return the rule value.
     */
    public ObjectLockRule rule() {
        return this.rule;
    }

    /**
     * Set the rule property: Specifies the Object Lock rule for the specified object. Enable this rule when you apply
     * ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a
     * period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more
     * information, see
     * [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html)
     * and
     * [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
     * Specifies the Object Lock rule for the specified object. Enable the this rule when you apply
     * ``ObjectLockConfiguration`` to a bucket.
     * 
     * @param rule the rule value to set.
     * @return the ObjectLockConfiguration object itself.
     */
    public ObjectLockConfiguration withRule(ObjectLockRule rule) {
        this.rule = rule;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (rule() != null) {
            rule().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectLockEnabled", this.objectLockEnabled);
        jsonWriter.writeJsonField("rule", this.rule);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ObjectLockConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ObjectLockConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ObjectLockConfiguration.
     */
    public static ObjectLockConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ObjectLockConfiguration deserializedObjectLockConfiguration = new ObjectLockConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectLockEnabled".equals(fieldName)) {
                    deserializedObjectLockConfiguration.objectLockEnabled = reader.getString();
                } else if ("rule".equals(fieldName)) {
                    deserializedObjectLockConfiguration.rule = ObjectLockRule.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedObjectLockConfiguration;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of InstanceAttachmentEnaSrdSpecification.
 */
@Fluent
public final class InstanceAttachmentEnaSrdSpecification
    implements JsonSerializable<InstanceAttachmentEnaSrdSpecification> {
    /*
     * <p>Indicates whether ENA Express is enabled for the network interface.</p>
     */
    private Boolean enaSrdEnabled;

    /*
     * <p>Configures ENA Express for UDP network traffic.</p>
     */
    private InstanceAttachmentEnaSrdUdpSpecification enaSrdUdpSpecification;

    /**
     * Creates an instance of InstanceAttachmentEnaSrdSpecification class.
     */
    public InstanceAttachmentEnaSrdSpecification() {
    }

    /**
     * Get the enaSrdEnabled property: &lt;p&gt;Indicates whether ENA Express is enabled for the network
     * interface.&lt;/p&gt;.
     * 
     * @return the enaSrdEnabled value.
     */
    public Boolean enaSrdEnabled() {
        return this.enaSrdEnabled;
    }

    /**
     * Set the enaSrdEnabled property: &lt;p&gt;Indicates whether ENA Express is enabled for the network
     * interface.&lt;/p&gt;.
     * 
     * @param enaSrdEnabled the enaSrdEnabled value to set.
     * @return the InstanceAttachmentEnaSrdSpecification object itself.
     */
    public InstanceAttachmentEnaSrdSpecification withEnaSrdEnabled(Boolean enaSrdEnabled) {
        this.enaSrdEnabled = enaSrdEnabled;
        return this;
    }

    /**
     * Get the enaSrdUdpSpecification property: &lt;p&gt;Configures ENA Express for UDP network traffic.&lt;/p&gt;.
     * 
     * @return the enaSrdUdpSpecification value.
     */
    public InstanceAttachmentEnaSrdUdpSpecification enaSrdUdpSpecification() {
        return this.enaSrdUdpSpecification;
    }

    /**
     * Set the enaSrdUdpSpecification property: &lt;p&gt;Configures ENA Express for UDP network traffic.&lt;/p&gt;.
     * 
     * @param enaSrdUdpSpecification the enaSrdUdpSpecification value to set.
     * @return the InstanceAttachmentEnaSrdSpecification object itself.
     */
    public InstanceAttachmentEnaSrdSpecification
        withEnaSrdUdpSpecification(InstanceAttachmentEnaSrdUdpSpecification enaSrdUdpSpecification) {
        this.enaSrdUdpSpecification = enaSrdUdpSpecification;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (enaSrdUdpSpecification() != null) {
            enaSrdUdpSpecification().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enaSrdEnabled", this.enaSrdEnabled);
        jsonWriter.writeJsonField("enaSrdUdpSpecification", this.enaSrdUdpSpecification);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InstanceAttachmentEnaSrdSpecification from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InstanceAttachmentEnaSrdSpecification if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InstanceAttachmentEnaSrdSpecification.
     */
    public static InstanceAttachmentEnaSrdSpecification fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InstanceAttachmentEnaSrdSpecification deserializedInstanceAttachmentEnaSrdSpecification
                = new InstanceAttachmentEnaSrdSpecification();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enaSrdEnabled".equals(fieldName)) {
                    deserializedInstanceAttachmentEnaSrdSpecification.enaSrdEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enaSrdUdpSpecification".equals(fieldName)) {
                    deserializedInstanceAttachmentEnaSrdSpecification.enaSrdUdpSpecification
                        = InstanceAttachmentEnaSrdUdpSpecification.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInstanceAttachmentEnaSrdSpecification;
        });
    }
}

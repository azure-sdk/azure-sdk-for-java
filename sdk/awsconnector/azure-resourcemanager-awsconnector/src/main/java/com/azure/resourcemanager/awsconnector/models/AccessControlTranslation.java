// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of AccessControlTranslation.
 */
@Fluent
public final class AccessControlTranslation implements JsonSerializable<AccessControlTranslation> {
    /*
     * Specifies the replica ownership. For default and valid values, see [PUT bucket
     * replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API
     * Reference*.
     */
    private String owner;

    /**
     * Creates an instance of AccessControlTranslation class.
     */
    public AccessControlTranslation() {
    }

    /**
     * Get the owner property: Specifies the replica ownership. For default and valid values, see [PUT bucket
     * replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API
     * Reference*.
     * 
     * @return the owner value.
     */
    public String owner() {
        return this.owner;
    }

    /**
     * Set the owner property: Specifies the replica ownership. For default and valid values, see [PUT bucket
     * replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API
     * Reference*.
     * 
     * @param owner the owner value to set.
     * @return the AccessControlTranslation object itself.
     */
    public AccessControlTranslation withOwner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("owner", this.owner);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccessControlTranslation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccessControlTranslation if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccessControlTranslation.
     */
    public static AccessControlTranslation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccessControlTranslation deserializedAccessControlTranslation = new AccessControlTranslation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("owner".equals(fieldName)) {
                    deserializedAccessControlTranslation.owner = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccessControlTranslation;
        });
    }
}

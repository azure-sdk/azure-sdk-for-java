// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsSageMakerApp.
 */
@Fluent
public final class AwsSageMakerAppProperties implements JsonSerializable<AwsSageMakerAppProperties> {
    /*
     * The Amazon Resource Name (ARN) of the app.
     */
    private String appArn;

    /*
     * The name of the app.
     */
    private String appName;

    /*
     * The type of app.
     */
    private AppType appType;

    /*
     * The domain ID.
     */
    private String domainId;

    /*
     * The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
     */
    private ResourceSpec resourceSpec;

    /*
     * A list of tags to apply to the app.
     */
    private List<TagAutoGenerated51> tags;

    /*
     * The user profile name.
     */
    private String userProfileName;

    /**
     * Creates an instance of AwsSageMakerAppProperties class.
     */
    public AwsSageMakerAppProperties() {
    }

    /**
     * Get the appArn property: The Amazon Resource Name (ARN) of the app.
     * 
     * @return the appArn value.
     */
    public String appArn() {
        return this.appArn;
    }

    /**
     * Set the appArn property: The Amazon Resource Name (ARN) of the app.
     * 
     * @param appArn the appArn value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withAppArn(String appArn) {
        this.appArn = appArn;
        return this;
    }

    /**
     * Get the appName property: The name of the app.
     * 
     * @return the appName value.
     */
    public String appName() {
        return this.appName;
    }

    /**
     * Set the appName property: The name of the app.
     * 
     * @param appName the appName value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withAppName(String appName) {
        this.appName = appName;
        return this;
    }

    /**
     * Get the appType property: The type of app.
     * 
     * @return the appType value.
     */
    public AppType appType() {
        return this.appType;
    }

    /**
     * Set the appType property: The type of app.
     * 
     * @param appType the appType value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withAppType(AppType appType) {
        this.appType = appType;
        return this;
    }

    /**
     * Get the domainId property: The domain ID.
     * 
     * @return the domainId value.
     */
    public String domainId() {
        return this.domainId;
    }

    /**
     * Set the domainId property: The domain ID.
     * 
     * @param domainId the domainId value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withDomainId(String domainId) {
        this.domainId = domainId;
        return this;
    }

    /**
     * Get the resourceSpec property: The instance type and the Amazon Resource Name (ARN) of the SageMaker image
     * created on the instance.
     * 
     * @return the resourceSpec value.
     */
    public ResourceSpec resourceSpec() {
        return this.resourceSpec;
    }

    /**
     * Set the resourceSpec property: The instance type and the Amazon Resource Name (ARN) of the SageMaker image
     * created on the instance.
     * 
     * @param resourceSpec the resourceSpec value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withResourceSpec(ResourceSpec resourceSpec) {
        this.resourceSpec = resourceSpec;
        return this;
    }

    /**
     * Get the tags property: A list of tags to apply to the app.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated51> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: A list of tags to apply to the app.
     * 
     * @param tags the tags value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withTags(List<TagAutoGenerated51> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the userProfileName property: The user profile name.
     * 
     * @return the userProfileName value.
     */
    public String userProfileName() {
        return this.userProfileName;
    }

    /**
     * Set the userProfileName property: The user profile name.
     * 
     * @param userProfileName the userProfileName value to set.
     * @return the AwsSageMakerAppProperties object itself.
     */
    public AwsSageMakerAppProperties withUserProfileName(String userProfileName) {
        this.userProfileName = userProfileName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceSpec() != null) {
            resourceSpec().validate();
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("appArn", this.appArn);
        jsonWriter.writeStringField("appName", this.appName);
        jsonWriter.writeStringField("appType", this.appType == null ? null : this.appType.toString());
        jsonWriter.writeStringField("domainId", this.domainId);
        jsonWriter.writeJsonField("resourceSpec", this.resourceSpec);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("userProfileName", this.userProfileName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsSageMakerAppProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsSageMakerAppProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsSageMakerAppProperties.
     */
    public static AwsSageMakerAppProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsSageMakerAppProperties deserializedAwsSageMakerAppProperties = new AwsSageMakerAppProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("appArn".equals(fieldName)) {
                    deserializedAwsSageMakerAppProperties.appArn = reader.getString();
                } else if ("appName".equals(fieldName)) {
                    deserializedAwsSageMakerAppProperties.appName = reader.getString();
                } else if ("appType".equals(fieldName)) {
                    deserializedAwsSageMakerAppProperties.appType = AppType.fromString(reader.getString());
                } else if ("domainId".equals(fieldName)) {
                    deserializedAwsSageMakerAppProperties.domainId = reader.getString();
                } else if ("resourceSpec".equals(fieldName)) {
                    deserializedAwsSageMakerAppProperties.resourceSpec = ResourceSpec.fromJson(reader);
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated51> tags = reader.readArray(reader1 -> TagAutoGenerated51.fromJson(reader1));
                    deserializedAwsSageMakerAppProperties.tags = tags;
                } else if ("userProfileName".equals(fieldName)) {
                    deserializedAwsSageMakerAppProperties.userProfileName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsSageMakerAppProperties;
        });
    }
}

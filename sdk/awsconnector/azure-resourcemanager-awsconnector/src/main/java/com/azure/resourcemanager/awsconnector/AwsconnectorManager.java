// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.awsconnector.fluent.MicrosoftAwsConnector;
import com.azure.resourcemanager.awsconnector.implementation.AccessAnalyzerAnalyzersImpl;
import com.azure.resourcemanager.awsconnector.implementation.AcmCertificateSummariesImpl;
import com.azure.resourcemanager.awsconnector.implementation.ApiGatewayRestApisImpl;
import com.azure.resourcemanager.awsconnector.implementation.ApiGatewayStagesImpl;
import com.azure.resourcemanager.awsconnector.implementation.AppSyncGraphqlApisImpl;
import com.azure.resourcemanager.awsconnector.implementation.AutoScalingAutoScalingGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.CloudFormationStackSetsImpl;
import com.azure.resourcemanager.awsconnector.implementation.CloudFormationStacksImpl;
import com.azure.resourcemanager.awsconnector.implementation.CloudFrontDistributionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.CloudTrailTrailsImpl;
import com.azure.resourcemanager.awsconnector.implementation.CloudWatchAlarmsImpl;
import com.azure.resourcemanager.awsconnector.implementation.CodeBuildProjectsImpl;
import com.azure.resourcemanager.awsconnector.implementation.CodeBuildSourceCredentialsInfosImpl;
import com.azure.resourcemanager.awsconnector.implementation.ConfigServiceConfigurationRecorderStatusesImpl;
import com.azure.resourcemanager.awsconnector.implementation.ConfigServiceConfigurationRecordersImpl;
import com.azure.resourcemanager.awsconnector.implementation.ConfigServiceDeliveryChannelsImpl;
import com.azure.resourcemanager.awsconnector.implementation.DatabaseMigrationServiceReplicationInstancesImpl;
import com.azure.resourcemanager.awsconnector.implementation.DaxClustersImpl;
import com.azure.resourcemanager.awsconnector.implementation.DynamoDbContinuousBackupsDescriptionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.DynamoDbTablesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2AccountAttributesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2AddressesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2FlowLogsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2ImagesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2InstanceStatusesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2InstancesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2IpamsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2KeyPairsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2NetworkAclsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2NetworkInterfacesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2RouteTablesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2SecurityGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2SnapshotsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2SubnetsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2VolumesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2VpcEndpointsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2VpcPeeringConnectionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.Ec2VpcsImpl;
import com.azure.resourcemanager.awsconnector.implementation.EcrImageDetailsImpl;
import com.azure.resourcemanager.awsconnector.implementation.EcrRepositoriesImpl;
import com.azure.resourcemanager.awsconnector.implementation.EcsClustersImpl;
import com.azure.resourcemanager.awsconnector.implementation.EcsServicesImpl;
import com.azure.resourcemanager.awsconnector.implementation.EcsTaskDefinitionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.EfsFileSystemsImpl;
import com.azure.resourcemanager.awsconnector.implementation.EfsMountTargetsImpl;
import com.azure.resourcemanager.awsconnector.implementation.EksClustersImpl;
import com.azure.resourcemanager.awsconnector.implementation.EksNodegroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticBeanstalkApplicationsImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticBeanstalkConfigurationTemplatesImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticBeanstalkEnvironmentsImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticLoadBalancingV2ListenersImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticLoadBalancingV2LoadBalancersImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticLoadBalancingV2TargetGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.ElasticLoadBalancingv2TargetHealthDescriptionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.EmrClustersImpl;
import com.azure.resourcemanager.awsconnector.implementation.GuardDutyDetectorsImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamAccessKeyLastUsedsImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamAccessKeyMetadataInfoesImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamInstanceProfilesImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamMfaDevicesImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamPasswordPoliciesImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamPolicyVersionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamRolesImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamServerCertificatesImpl;
import com.azure.resourcemanager.awsconnector.implementation.IamVirtualMfaDevicesImpl;
import com.azure.resourcemanager.awsconnector.implementation.KmsAliasesImpl;
import com.azure.resourcemanager.awsconnector.implementation.KmsKeysImpl;
import com.azure.resourcemanager.awsconnector.implementation.LambdaFunctionCodeLocationsImpl;
import com.azure.resourcemanager.awsconnector.implementation.LambdaFunctionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.LightsailBucketsImpl;
import com.azure.resourcemanager.awsconnector.implementation.LightsailInstancesImpl;
import com.azure.resourcemanager.awsconnector.implementation.LogsLogGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.LogsLogStreamsImpl;
import com.azure.resourcemanager.awsconnector.implementation.LogsMetricFiltersImpl;
import com.azure.resourcemanager.awsconnector.implementation.LogsSubscriptionFiltersImpl;
import com.azure.resourcemanager.awsconnector.implementation.Macie2JobSummariesImpl;
import com.azure.resourcemanager.awsconnector.implementation.MacieAllowListsImpl;
import com.azure.resourcemanager.awsconnector.implementation.MicrosoftAwsConnectorBuilder;
import com.azure.resourcemanager.awsconnector.implementation.NetworkFirewallFirewallPoliciesImpl;
import com.azure.resourcemanager.awsconnector.implementation.NetworkFirewallFirewallsImpl;
import com.azure.resourcemanager.awsconnector.implementation.NetworkFirewallRuleGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.OpenSearchDomainStatusesImpl;
import com.azure.resourcemanager.awsconnector.implementation.OperationsImpl;
import com.azure.resourcemanager.awsconnector.implementation.OrganizationsAccountsImpl;
import com.azure.resourcemanager.awsconnector.implementation.OrganizationsOrganizationsImpl;
import com.azure.resourcemanager.awsconnector.implementation.RdsDbClustersImpl;
import com.azure.resourcemanager.awsconnector.implementation.RdsDbInstancesImpl;
import com.azure.resourcemanager.awsconnector.implementation.RdsDbSnapshotAttributesResultsImpl;
import com.azure.resourcemanager.awsconnector.implementation.RdsDbSnapshotsImpl;
import com.azure.resourcemanager.awsconnector.implementation.RdsEventSubscriptionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.RdsExportTasksImpl;
import com.azure.resourcemanager.awsconnector.implementation.RedshiftClusterParameterGroupsImpl;
import com.azure.resourcemanager.awsconnector.implementation.RedshiftClustersImpl;
import com.azure.resourcemanager.awsconnector.implementation.Route53DomainsDomainSummariesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Route53HostedZonesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Route53ResourceRecordSetsImpl;
import com.azure.resourcemanager.awsconnector.implementation.S3AccessControlPoliciesImpl;
import com.azure.resourcemanager.awsconnector.implementation.S3AccessPointsImpl;
import com.azure.resourcemanager.awsconnector.implementation.S3BucketPoliciesImpl;
import com.azure.resourcemanager.awsconnector.implementation.S3BucketsImpl;
import com.azure.resourcemanager.awsconnector.implementation.S3ControlMultiRegionAccessPointPolicyDocumentsImpl;
import com.azure.resourcemanager.awsconnector.implementation.SageMakerAppsImpl;
import com.azure.resourcemanager.awsconnector.implementation.SageMakerNotebookInstanceSummariesImpl;
import com.azure.resourcemanager.awsconnector.implementation.SecretsManagerResourcePoliciesImpl;
import com.azure.resourcemanager.awsconnector.implementation.SecretsManagerSecretsImpl;
import com.azure.resourcemanager.awsconnector.implementation.SnsSubscriptionsImpl;
import com.azure.resourcemanager.awsconnector.implementation.SnsTopicsImpl;
import com.azure.resourcemanager.awsconnector.implementation.SqsQueuesImpl;
import com.azure.resourcemanager.awsconnector.implementation.SsmInstanceInformationsImpl;
import com.azure.resourcemanager.awsconnector.implementation.SsmParametersImpl;
import com.azure.resourcemanager.awsconnector.implementation.SsmResourceComplianceSummaryItemsImpl;
import com.azure.resourcemanager.awsconnector.implementation.WafWebAclSummariesImpl;
import com.azure.resourcemanager.awsconnector.implementation.Wafv2LoggingConfigurationsImpl;
import com.azure.resourcemanager.awsconnector.models.AccessAnalyzerAnalyzers;
import com.azure.resourcemanager.awsconnector.models.AcmCertificateSummaries;
import com.azure.resourcemanager.awsconnector.models.ApiGatewayRestApis;
import com.azure.resourcemanager.awsconnector.models.ApiGatewayStages;
import com.azure.resourcemanager.awsconnector.models.AppSyncGraphqlApis;
import com.azure.resourcemanager.awsconnector.models.AutoScalingAutoScalingGroups;
import com.azure.resourcemanager.awsconnector.models.CloudFormationStackSets;
import com.azure.resourcemanager.awsconnector.models.CloudFormationStacks;
import com.azure.resourcemanager.awsconnector.models.CloudFrontDistributions;
import com.azure.resourcemanager.awsconnector.models.CloudTrailTrails;
import com.azure.resourcemanager.awsconnector.models.CloudWatchAlarms;
import com.azure.resourcemanager.awsconnector.models.CodeBuildProjects;
import com.azure.resourcemanager.awsconnector.models.CodeBuildSourceCredentialsInfos;
import com.azure.resourcemanager.awsconnector.models.ConfigServiceConfigurationRecorderStatuses;
import com.azure.resourcemanager.awsconnector.models.ConfigServiceConfigurationRecorders;
import com.azure.resourcemanager.awsconnector.models.ConfigServiceDeliveryChannels;
import com.azure.resourcemanager.awsconnector.models.DatabaseMigrationServiceReplicationInstances;
import com.azure.resourcemanager.awsconnector.models.DaxClusters;
import com.azure.resourcemanager.awsconnector.models.DynamoDbContinuousBackupsDescriptions;
import com.azure.resourcemanager.awsconnector.models.DynamoDbTables;
import com.azure.resourcemanager.awsconnector.models.Ec2AccountAttributes;
import com.azure.resourcemanager.awsconnector.models.Ec2Addresses;
import com.azure.resourcemanager.awsconnector.models.Ec2FlowLogs;
import com.azure.resourcemanager.awsconnector.models.Ec2Images;
import com.azure.resourcemanager.awsconnector.models.Ec2InstanceStatuses;
import com.azure.resourcemanager.awsconnector.models.Ec2Instances;
import com.azure.resourcemanager.awsconnector.models.Ec2Ipams;
import com.azure.resourcemanager.awsconnector.models.Ec2KeyPairs;
import com.azure.resourcemanager.awsconnector.models.Ec2NetworkAcls;
import com.azure.resourcemanager.awsconnector.models.Ec2NetworkInterfaces;
import com.azure.resourcemanager.awsconnector.models.Ec2RouteTables;
import com.azure.resourcemanager.awsconnector.models.Ec2SecurityGroups;
import com.azure.resourcemanager.awsconnector.models.Ec2Snapshots;
import com.azure.resourcemanager.awsconnector.models.Ec2Subnets;
import com.azure.resourcemanager.awsconnector.models.Ec2Volumes;
import com.azure.resourcemanager.awsconnector.models.Ec2VpcEndpoints;
import com.azure.resourcemanager.awsconnector.models.Ec2VpcPeeringConnections;
import com.azure.resourcemanager.awsconnector.models.Ec2Vpcs;
import com.azure.resourcemanager.awsconnector.models.EcrImageDetails;
import com.azure.resourcemanager.awsconnector.models.EcrRepositories;
import com.azure.resourcemanager.awsconnector.models.EcsClusters;
import com.azure.resourcemanager.awsconnector.models.EcsServices;
import com.azure.resourcemanager.awsconnector.models.EcsTaskDefinitions;
import com.azure.resourcemanager.awsconnector.models.EfsFileSystems;
import com.azure.resourcemanager.awsconnector.models.EfsMountTargets;
import com.azure.resourcemanager.awsconnector.models.EksClusters;
import com.azure.resourcemanager.awsconnector.models.EksNodegroups;
import com.azure.resourcemanager.awsconnector.models.ElasticBeanstalkApplications;
import com.azure.resourcemanager.awsconnector.models.ElasticBeanstalkConfigurationTemplates;
import com.azure.resourcemanager.awsconnector.models.ElasticBeanstalkEnvironments;
import com.azure.resourcemanager.awsconnector.models.ElasticLoadBalancingV2Listeners;
import com.azure.resourcemanager.awsconnector.models.ElasticLoadBalancingV2LoadBalancers;
import com.azure.resourcemanager.awsconnector.models.ElasticLoadBalancingV2TargetGroups;
import com.azure.resourcemanager.awsconnector.models.ElasticLoadBalancingv2TargetHealthDescriptions;
import com.azure.resourcemanager.awsconnector.models.EmrClusters;
import com.azure.resourcemanager.awsconnector.models.GuardDutyDetectors;
import com.azure.resourcemanager.awsconnector.models.IamAccessKeyLastUseds;
import com.azure.resourcemanager.awsconnector.models.IamAccessKeyMetadataInfoes;
import com.azure.resourcemanager.awsconnector.models.IamGroups;
import com.azure.resourcemanager.awsconnector.models.IamInstanceProfiles;
import com.azure.resourcemanager.awsconnector.models.IamMfaDevices;
import com.azure.resourcemanager.awsconnector.models.IamPasswordPolicies;
import com.azure.resourcemanager.awsconnector.models.IamPolicyVersions;
import com.azure.resourcemanager.awsconnector.models.IamRoles;
import com.azure.resourcemanager.awsconnector.models.IamServerCertificates;
import com.azure.resourcemanager.awsconnector.models.IamVirtualMfaDevices;
import com.azure.resourcemanager.awsconnector.models.KmsAliases;
import com.azure.resourcemanager.awsconnector.models.KmsKeys;
import com.azure.resourcemanager.awsconnector.models.LambdaFunctionCodeLocations;
import com.azure.resourcemanager.awsconnector.models.LambdaFunctions;
import com.azure.resourcemanager.awsconnector.models.LightsailBuckets;
import com.azure.resourcemanager.awsconnector.models.LightsailInstances;
import com.azure.resourcemanager.awsconnector.models.LogsLogGroups;
import com.azure.resourcemanager.awsconnector.models.LogsLogStreams;
import com.azure.resourcemanager.awsconnector.models.LogsMetricFilters;
import com.azure.resourcemanager.awsconnector.models.LogsSubscriptionFilters;
import com.azure.resourcemanager.awsconnector.models.Macie2JobSummaries;
import com.azure.resourcemanager.awsconnector.models.MacieAllowLists;
import com.azure.resourcemanager.awsconnector.models.NetworkFirewallFirewallPolicies;
import com.azure.resourcemanager.awsconnector.models.NetworkFirewallFirewalls;
import com.azure.resourcemanager.awsconnector.models.NetworkFirewallRuleGroups;
import com.azure.resourcemanager.awsconnector.models.OpenSearchDomainStatuses;
import com.azure.resourcemanager.awsconnector.models.Operations;
import com.azure.resourcemanager.awsconnector.models.OrganizationsAccounts;
import com.azure.resourcemanager.awsconnector.models.OrganizationsOrganizations;
import com.azure.resourcemanager.awsconnector.models.RdsDbClusters;
import com.azure.resourcemanager.awsconnector.models.RdsDbInstances;
import com.azure.resourcemanager.awsconnector.models.RdsDbSnapshotAttributesResults;
import com.azure.resourcemanager.awsconnector.models.RdsDbSnapshots;
import com.azure.resourcemanager.awsconnector.models.RdsEventSubscriptions;
import com.azure.resourcemanager.awsconnector.models.RdsExportTasks;
import com.azure.resourcemanager.awsconnector.models.RedshiftClusterParameterGroups;
import com.azure.resourcemanager.awsconnector.models.RedshiftClusters;
import com.azure.resourcemanager.awsconnector.models.Route53DomainsDomainSummaries;
import com.azure.resourcemanager.awsconnector.models.Route53HostedZones;
import com.azure.resourcemanager.awsconnector.models.Route53ResourceRecordSets;
import com.azure.resourcemanager.awsconnector.models.S3AccessControlPolicies;
import com.azure.resourcemanager.awsconnector.models.S3AccessPoints;
import com.azure.resourcemanager.awsconnector.models.S3BucketPolicies;
import com.azure.resourcemanager.awsconnector.models.S3Buckets;
import com.azure.resourcemanager.awsconnector.models.S3ControlMultiRegionAccessPointPolicyDocuments;
import com.azure.resourcemanager.awsconnector.models.SageMakerApps;
import com.azure.resourcemanager.awsconnector.models.SageMakerNotebookInstanceSummaries;
import com.azure.resourcemanager.awsconnector.models.SecretsManagerResourcePolicies;
import com.azure.resourcemanager.awsconnector.models.SecretsManagerSecrets;
import com.azure.resourcemanager.awsconnector.models.SnsSubscriptions;
import com.azure.resourcemanager.awsconnector.models.SnsTopics;
import com.azure.resourcemanager.awsconnector.models.SqsQueues;
import com.azure.resourcemanager.awsconnector.models.SsmInstanceInformations;
import com.azure.resourcemanager.awsconnector.models.SsmParameters;
import com.azure.resourcemanager.awsconnector.models.SsmResourceComplianceSummaryItems;
import com.azure.resourcemanager.awsconnector.models.WafWebAclSummaries;
import com.azure.resourcemanager.awsconnector.models.Wafv2LoggingConfigurations;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Entry point to AwsconnectorManager.
 * Microsoft.AwsConnector Resource Provider management API.
 */
public final class AwsconnectorManager {
    private AccessAnalyzerAnalyzers accessAnalyzerAnalyzers;

    private AcmCertificateSummaries acmCertificateSummaries;

    private ApiGatewayRestApis apiGatewayRestApis;

    private ApiGatewayStages apiGatewayStages;

    private AppSyncGraphqlApis appSyncGraphqlApis;

    private AutoScalingAutoScalingGroups autoScalingAutoScalingGroups;

    private CloudFormationStacks cloudFormationStacks;

    private CloudFormationStackSets cloudFormationStackSets;

    private CloudFrontDistributions cloudFrontDistributions;

    private CloudTrailTrails cloudTrailTrails;

    private CloudWatchAlarms cloudWatchAlarms;

    private CodeBuildProjects codeBuildProjects;

    private CodeBuildSourceCredentialsInfos codeBuildSourceCredentialsInfos;

    private ConfigServiceConfigurationRecorders configServiceConfigurationRecorders;

    private ConfigServiceConfigurationRecorderStatuses configServiceConfigurationRecorderStatuses;

    private ConfigServiceDeliveryChannels configServiceDeliveryChannels;

    private DatabaseMigrationServiceReplicationInstances databaseMigrationServiceReplicationInstances;

    private DaxClusters daxClusters;

    private DynamoDbContinuousBackupsDescriptions dynamoDbContinuousBackupsDescriptions;

    private DynamoDbTables dynamoDbTables;

    private Ec2AccountAttributes ec2AccountAttributes;

    private Ec2Addresses ec2Addresses;

    private Ec2FlowLogs ec2FlowLogs;

    private Ec2Images ec2Images;

    private Ec2Instances ec2Instances;

    private Ec2InstanceStatuses ec2InstanceStatuses;

    private Ec2Ipams ec2Ipams;

    private Ec2KeyPairs ec2KeyPairs;

    private Ec2NetworkAcls ec2NetworkAcls;

    private Ec2NetworkInterfaces ec2NetworkInterfaces;

    private Ec2RouteTables ec2RouteTables;

    private Ec2SecurityGroups ec2SecurityGroups;

    private Ec2Snapshots ec2Snapshots;

    private Ec2Subnets ec2Subnets;

    private Ec2Volumes ec2Volumes;

    private Ec2Vpcs ec2Vpcs;

    private Ec2VpcEndpoints ec2VpcEndpoints;

    private Ec2VpcPeeringConnections ec2VpcPeeringConnections;

    private EcrImageDetails ecrImageDetails;

    private EcrRepositories ecrRepositories;

    private EcsClusters ecsClusters;

    private EcsServices ecsServices;

    private EcsTaskDefinitions ecsTaskDefinitions;

    private EfsFileSystems efsFileSystems;

    private EfsMountTargets efsMountTargets;

    private EksClusters eksClusters;

    private EksNodegroups eksNodegroups;

    private ElasticBeanstalkApplications elasticBeanstalkApplications;

    private ElasticBeanstalkConfigurationTemplates elasticBeanstalkConfigurationTemplates;

    private ElasticBeanstalkEnvironments elasticBeanstalkEnvironments;

    private ElasticLoadBalancingV2Listeners elasticLoadBalancingV2Listeners;

    private ElasticLoadBalancingV2LoadBalancers elasticLoadBalancingV2LoadBalancers;

    private ElasticLoadBalancingV2TargetGroups elasticLoadBalancingV2TargetGroups;

    private ElasticLoadBalancingv2TargetHealthDescriptions elasticLoadBalancingv2TargetHealthDescriptions;

    private EmrClusters emrClusters;

    private GuardDutyDetectors guardDutyDetectors;

    private IamAccessKeyLastUseds iamAccessKeyLastUseds;

    private IamAccessKeyMetadataInfoes iamAccessKeyMetadataInfoes;

    private IamGroups iamGroups;

    private IamInstanceProfiles iamInstanceProfiles;

    private IamMfaDevices iamMfaDevices;

    private IamPasswordPolicies iamPasswordPolicies;

    private IamPolicyVersions iamPolicyVersions;

    private IamRoles iamRoles;

    private IamServerCertificates iamServerCertificates;

    private IamVirtualMfaDevices iamVirtualMfaDevices;

    private KmsAliases kmsAliases;

    private KmsKeys kmsKeys;

    private LambdaFunctions lambdaFunctions;

    private LambdaFunctionCodeLocations lambdaFunctionCodeLocations;

    private LightsailBuckets lightsailBuckets;

    private LightsailInstances lightsailInstances;

    private LogsLogGroups logsLogGroups;

    private LogsLogStreams logsLogStreams;

    private LogsMetricFilters logsMetricFilters;

    private LogsSubscriptionFilters logsSubscriptionFilters;

    private Macie2JobSummaries macie2JobSummaries;

    private MacieAllowLists macieAllowLists;

    private NetworkFirewallFirewalls networkFirewallFirewalls;

    private NetworkFirewallFirewallPolicies networkFirewallFirewallPolicies;

    private NetworkFirewallRuleGroups networkFirewallRuleGroups;

    private OpenSearchDomainStatuses openSearchDomainStatuses;

    private Operations operations;

    private OrganizationsAccounts organizationsAccounts;

    private OrganizationsOrganizations organizationsOrganizations;

    private RdsDbClusters rdsDbClusters;

    private RdsDbInstances rdsDbInstances;

    private RdsDbSnapshots rdsDbSnapshots;

    private RdsDbSnapshotAttributesResults rdsDbSnapshotAttributesResults;

    private RdsEventSubscriptions rdsEventSubscriptions;

    private RdsExportTasks rdsExportTasks;

    private RedshiftClusters redshiftClusters;

    private RedshiftClusterParameterGroups redshiftClusterParameterGroups;

    private Route53DomainsDomainSummaries route53DomainsDomainSummaries;

    private Route53HostedZones route53HostedZones;

    private Route53ResourceRecordSets route53ResourceRecordSets;

    private S3AccessControlPolicies s3AccessControlPolicies;

    private S3AccessPoints s3AccessPoints;

    private S3Buckets s3Buckets;

    private S3BucketPolicies s3BucketPolicies;

    private S3ControlMultiRegionAccessPointPolicyDocuments s3ControlMultiRegionAccessPointPolicyDocuments;

    private SageMakerApps sageMakerApps;

    private SageMakerNotebookInstanceSummaries sageMakerNotebookInstanceSummaries;

    private SecretsManagerResourcePolicies secretsManagerResourcePolicies;

    private SecretsManagerSecrets secretsManagerSecrets;

    private SnsSubscriptions snsSubscriptions;

    private SnsTopics snsTopics;

    private SqsQueues sqsQueues;

    private SsmInstanceInformations ssmInstanceInformations;

    private SsmParameters ssmParameters;

    private SsmResourceComplianceSummaryItems ssmResourceComplianceSummaryItems;

    private Wafv2LoggingConfigurations wafv2LoggingConfigurations;

    private WafWebAclSummaries wafWebAclSummaries;

    private final MicrosoftAwsConnector clientObject;

    private AwsconnectorManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new MicrosoftAwsConnectorBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of awsconnector service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the awsconnector service API instance.
     */
    public static AwsconnectorManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of awsconnector service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the awsconnector service API instance.
     */
    public static AwsconnectorManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new AwsconnectorManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create AwsconnectorManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new AwsconnectorManager.Configurable();
    }

    /**
     * The Configurable allowing configurations to be set.
     */
    public static final class Configurable {
        private static final ClientLogger LOGGER = new ClientLogger(Configurable.class);

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private RetryOptions retryOptions;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the retry options for the HTTP pipeline retry policy.
         * <p>
         * This setting has no effect, if retry policy is set via {@link #withRetryPolicy(RetryPolicy)}.
         *
         * @param retryOptions the retry options for the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryOptions(RetryOptions retryOptions) {
            this.retryOptions = Objects.requireNonNull(retryOptions, "'retryOptions' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval
                = Objects.requireNonNull(defaultPollInterval, "'defaultPollInterval' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw LOGGER
                    .logExceptionAsError(new IllegalArgumentException("'defaultPollInterval' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of awsconnector service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the awsconnector service API instance.
         */
        public AwsconnectorManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder.append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.awsconnector")
                .append("/")
                .append("1.0.0-beta.1");
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder.append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                if (retryOptions != null) {
                    retryPolicy = new RetryPolicy(retryOptions);
                } else {
                    retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
                }
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new AddHeadersFromContextPolicy());
            policies.add(new RequestIdPolicy());
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new ArmChallengeAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(httpClient)
                .policies(policies.toArray(new HttpPipelinePolicy[0]))
                .build();
            return new AwsconnectorManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /**
     * Gets the resource collection API of AccessAnalyzerAnalyzers. It manages AccessAnalyzer.
     * 
     * @return Resource collection API of AccessAnalyzerAnalyzers.
     */
    public AccessAnalyzerAnalyzers accessAnalyzerAnalyzers() {
        if (this.accessAnalyzerAnalyzers == null) {
            this.accessAnalyzerAnalyzers
                = new AccessAnalyzerAnalyzersImpl(clientObject.getAccessAnalyzerAnalyzers(), this);
        }
        return accessAnalyzerAnalyzers;
    }

    /**
     * Gets the resource collection API of AcmCertificateSummaries. It manages AcmCertificateSummary.
     * 
     * @return Resource collection API of AcmCertificateSummaries.
     */
    public AcmCertificateSummaries acmCertificateSummaries() {
        if (this.acmCertificateSummaries == null) {
            this.acmCertificateSummaries
                = new AcmCertificateSummariesImpl(clientObject.getAcmCertificateSummaries(), this);
        }
        return acmCertificateSummaries;
    }

    /**
     * Gets the resource collection API of ApiGatewayRestApis. It manages ApiGatewayRestApi.
     * 
     * @return Resource collection API of ApiGatewayRestApis.
     */
    public ApiGatewayRestApis apiGatewayRestApis() {
        if (this.apiGatewayRestApis == null) {
            this.apiGatewayRestApis = new ApiGatewayRestApisImpl(clientObject.getApiGatewayRestApis(), this);
        }
        return apiGatewayRestApis;
    }

    /**
     * Gets the resource collection API of ApiGatewayStages. It manages ApiGatewayStage.
     * 
     * @return Resource collection API of ApiGatewayStages.
     */
    public ApiGatewayStages apiGatewayStages() {
        if (this.apiGatewayStages == null) {
            this.apiGatewayStages = new ApiGatewayStagesImpl(clientObject.getApiGatewayStages(), this);
        }
        return apiGatewayStages;
    }

    /**
     * Gets the resource collection API of AppSyncGraphqlApis. It manages AppSyncGraphqlApi.
     * 
     * @return Resource collection API of AppSyncGraphqlApis.
     */
    public AppSyncGraphqlApis appSyncGraphqlApis() {
        if (this.appSyncGraphqlApis == null) {
            this.appSyncGraphqlApis = new AppSyncGraphqlApisImpl(clientObject.getAppSyncGraphqlApis(), this);
        }
        return appSyncGraphqlApis;
    }

    /**
     * Gets the resource collection API of AutoScalingAutoScalingGroups. It manages AutoScalingGroup.
     * 
     * @return Resource collection API of AutoScalingAutoScalingGroups.
     */
    public AutoScalingAutoScalingGroups autoScalingAutoScalingGroups() {
        if (this.autoScalingAutoScalingGroups == null) {
            this.autoScalingAutoScalingGroups
                = new AutoScalingAutoScalingGroupsImpl(clientObject.getAutoScalingAutoScalingGroups(), this);
        }
        return autoScalingAutoScalingGroups;
    }

    /**
     * Gets the resource collection API of CloudFormationStacks. It manages CloudFormationStack.
     * 
     * @return Resource collection API of CloudFormationStacks.
     */
    public CloudFormationStacks cloudFormationStacks() {
        if (this.cloudFormationStacks == null) {
            this.cloudFormationStacks = new CloudFormationStacksImpl(clientObject.getCloudFormationStacks(), this);
        }
        return cloudFormationStacks;
    }

    /**
     * Gets the resource collection API of CloudFormationStackSets. It manages CloudFormationStackSet.
     * 
     * @return Resource collection API of CloudFormationStackSets.
     */
    public CloudFormationStackSets cloudFormationStackSets() {
        if (this.cloudFormationStackSets == null) {
            this.cloudFormationStackSets
                = new CloudFormationStackSetsImpl(clientObject.getCloudFormationStackSets(), this);
        }
        return cloudFormationStackSets;
    }

    /**
     * Gets the resource collection API of CloudFrontDistributions. It manages CloudFrontDistribution.
     * 
     * @return Resource collection API of CloudFrontDistributions.
     */
    public CloudFrontDistributions cloudFrontDistributions() {
        if (this.cloudFrontDistributions == null) {
            this.cloudFrontDistributions
                = new CloudFrontDistributionsImpl(clientObject.getCloudFrontDistributions(), this);
        }
        return cloudFrontDistributions;
    }

    /**
     * Gets the resource collection API of CloudTrailTrails. It manages CloudTrail.
     * 
     * @return Resource collection API of CloudTrailTrails.
     */
    public CloudTrailTrails cloudTrailTrails() {
        if (this.cloudTrailTrails == null) {
            this.cloudTrailTrails = new CloudTrailTrailsImpl(clientObject.getCloudTrailTrails(), this);
        }
        return cloudTrailTrails;
    }

    /**
     * Gets the resource collection API of CloudWatchAlarms. It manages CloudWatchAlarm.
     * 
     * @return Resource collection API of CloudWatchAlarms.
     */
    public CloudWatchAlarms cloudWatchAlarms() {
        if (this.cloudWatchAlarms == null) {
            this.cloudWatchAlarms = new CloudWatchAlarmsImpl(clientObject.getCloudWatchAlarms(), this);
        }
        return cloudWatchAlarms;
    }

    /**
     * Gets the resource collection API of CodeBuildProjects. It manages CodeBuildProject.
     * 
     * @return Resource collection API of CodeBuildProjects.
     */
    public CodeBuildProjects codeBuildProjects() {
        if (this.codeBuildProjects == null) {
            this.codeBuildProjects = new CodeBuildProjectsImpl(clientObject.getCodeBuildProjects(), this);
        }
        return codeBuildProjects;
    }

    /**
     * Gets the resource collection API of CodeBuildSourceCredentialsInfos. It manages CodeBuildSourceCredentialsInfo.
     * 
     * @return Resource collection API of CodeBuildSourceCredentialsInfos.
     */
    public CodeBuildSourceCredentialsInfos codeBuildSourceCredentialsInfos() {
        if (this.codeBuildSourceCredentialsInfos == null) {
            this.codeBuildSourceCredentialsInfos
                = new CodeBuildSourceCredentialsInfosImpl(clientObject.getCodeBuildSourceCredentialsInfos(), this);
        }
        return codeBuildSourceCredentialsInfos;
    }

    /**
     * Gets the resource collection API of ConfigServiceConfigurationRecorders. It manages
     * ConfigServiceConfigurationRecorder.
     * 
     * @return Resource collection API of ConfigServiceConfigurationRecorders.
     */
    public ConfigServiceConfigurationRecorders configServiceConfigurationRecorders() {
        if (this.configServiceConfigurationRecorders == null) {
            this.configServiceConfigurationRecorders = new ConfigServiceConfigurationRecordersImpl(
                clientObject.getConfigServiceConfigurationRecorders(), this);
        }
        return configServiceConfigurationRecorders;
    }

    /**
     * Gets the resource collection API of ConfigServiceConfigurationRecorderStatuses. It manages
     * ConfigServiceConfigurationRecorderStatus.
     * 
     * @return Resource collection API of ConfigServiceConfigurationRecorderStatuses.
     */
    public ConfigServiceConfigurationRecorderStatuses configServiceConfigurationRecorderStatuses() {
        if (this.configServiceConfigurationRecorderStatuses == null) {
            this.configServiceConfigurationRecorderStatuses = new ConfigServiceConfigurationRecorderStatusesImpl(
                clientObject.getConfigServiceConfigurationRecorderStatuses(), this);
        }
        return configServiceConfigurationRecorderStatuses;
    }

    /**
     * Gets the resource collection API of ConfigServiceDeliveryChannels. It manages ConfigServiceDeliveryChannel.
     * 
     * @return Resource collection API of ConfigServiceDeliveryChannels.
     */
    public ConfigServiceDeliveryChannels configServiceDeliveryChannels() {
        if (this.configServiceDeliveryChannels == null) {
            this.configServiceDeliveryChannels
                = new ConfigServiceDeliveryChannelsImpl(clientObject.getConfigServiceDeliveryChannels(), this);
        }
        return configServiceDeliveryChannels;
    }

    /**
     * Gets the resource collection API of DatabaseMigrationServiceReplicationInstances. It manages
     * DatabaseMigrationServiceReplicationInstance.
     * 
     * @return Resource collection API of DatabaseMigrationServiceReplicationInstances.
     */
    public DatabaseMigrationServiceReplicationInstances databaseMigrationServiceReplicationInstances() {
        if (this.databaseMigrationServiceReplicationInstances == null) {
            this.databaseMigrationServiceReplicationInstances = new DatabaseMigrationServiceReplicationInstancesImpl(
                clientObject.getDatabaseMigrationServiceReplicationInstances(), this);
        }
        return databaseMigrationServiceReplicationInstances;
    }

    /**
     * Gets the resource collection API of DaxClusters. It manages DaxCluster.
     * 
     * @return Resource collection API of DaxClusters.
     */
    public DaxClusters daxClusters() {
        if (this.daxClusters == null) {
            this.daxClusters = new DaxClustersImpl(clientObject.getDaxClusters(), this);
        }
        return daxClusters;
    }

    /**
     * Gets the resource collection API of DynamoDbContinuousBackupsDescriptions. It manages
     * DynamoDBContinuousBackupsDescription.
     * 
     * @return Resource collection API of DynamoDbContinuousBackupsDescriptions.
     */
    public DynamoDbContinuousBackupsDescriptions dynamoDbContinuousBackupsDescriptions() {
        if (this.dynamoDbContinuousBackupsDescriptions == null) {
            this.dynamoDbContinuousBackupsDescriptions = new DynamoDbContinuousBackupsDescriptionsImpl(
                clientObject.getDynamoDbContinuousBackupsDescriptions(), this);
        }
        return dynamoDbContinuousBackupsDescriptions;
    }

    /**
     * Gets the resource collection API of DynamoDbTables. It manages DynamoDBTable.
     * 
     * @return Resource collection API of DynamoDbTables.
     */
    public DynamoDbTables dynamoDbTables() {
        if (this.dynamoDbTables == null) {
            this.dynamoDbTables = new DynamoDbTablesImpl(clientObject.getDynamoDbTables(), this);
        }
        return dynamoDbTables;
    }

    /**
     * Gets the resource collection API of Ec2AccountAttributes. It manages Ec2AccountAttribute.
     * 
     * @return Resource collection API of Ec2AccountAttributes.
     */
    public Ec2AccountAttributes ec2AccountAttributes() {
        if (this.ec2AccountAttributes == null) {
            this.ec2AccountAttributes = new Ec2AccountAttributesImpl(clientObject.getEc2AccountAttributes(), this);
        }
        return ec2AccountAttributes;
    }

    /**
     * Gets the resource collection API of Ec2Addresses. It manages Ec2Address.
     * 
     * @return Resource collection API of Ec2Addresses.
     */
    public Ec2Addresses ec2Addresses() {
        if (this.ec2Addresses == null) {
            this.ec2Addresses = new Ec2AddressesImpl(clientObject.getEc2Addresses(), this);
        }
        return ec2Addresses;
    }

    /**
     * Gets the resource collection API of Ec2FlowLogs. It manages Ec2FlowLog.
     * 
     * @return Resource collection API of Ec2FlowLogs.
     */
    public Ec2FlowLogs ec2FlowLogs() {
        if (this.ec2FlowLogs == null) {
            this.ec2FlowLogs = new Ec2FlowLogsImpl(clientObject.getEc2FlowLogs(), this);
        }
        return ec2FlowLogs;
    }

    /**
     * Gets the resource collection API of Ec2Images. It manages Ec2Image.
     * 
     * @return Resource collection API of Ec2Images.
     */
    public Ec2Images ec2Images() {
        if (this.ec2Images == null) {
            this.ec2Images = new Ec2ImagesImpl(clientObject.getEc2Images(), this);
        }
        return ec2Images;
    }

    /**
     * Gets the resource collection API of Ec2Instances.
     * 
     * @return Resource collection API of Ec2Instances.
     */
    public Ec2Instances ec2Instances() {
        if (this.ec2Instances == null) {
            this.ec2Instances = new Ec2InstancesImpl(clientObject.getEc2Instances(), this);
        }
        return ec2Instances;
    }

    /**
     * Gets the resource collection API of Ec2InstanceStatuses. It manages Ec2InstanceStatus.
     * 
     * @return Resource collection API of Ec2InstanceStatuses.
     */
    public Ec2InstanceStatuses ec2InstanceStatuses() {
        if (this.ec2InstanceStatuses == null) {
            this.ec2InstanceStatuses = new Ec2InstanceStatusesImpl(clientObject.getEc2InstanceStatuses(), this);
        }
        return ec2InstanceStatuses;
    }

    /**
     * Gets the resource collection API of Ec2Ipams. It manages Ec2Ipam.
     * 
     * @return Resource collection API of Ec2Ipams.
     */
    public Ec2Ipams ec2Ipams() {
        if (this.ec2Ipams == null) {
            this.ec2Ipams = new Ec2IpamsImpl(clientObject.getEc2Ipams(), this);
        }
        return ec2Ipams;
    }

    /**
     * Gets the resource collection API of Ec2KeyPairs. It manages Ec2KeyPair.
     * 
     * @return Resource collection API of Ec2KeyPairs.
     */
    public Ec2KeyPairs ec2KeyPairs() {
        if (this.ec2KeyPairs == null) {
            this.ec2KeyPairs = new Ec2KeyPairsImpl(clientObject.getEc2KeyPairs(), this);
        }
        return ec2KeyPairs;
    }

    /**
     * Gets the resource collection API of Ec2NetworkAcls. It manages Ec2NetworkAcl.
     * 
     * @return Resource collection API of Ec2NetworkAcls.
     */
    public Ec2NetworkAcls ec2NetworkAcls() {
        if (this.ec2NetworkAcls == null) {
            this.ec2NetworkAcls = new Ec2NetworkAclsImpl(clientObject.getEc2NetworkAcls(), this);
        }
        return ec2NetworkAcls;
    }

    /**
     * Gets the resource collection API of Ec2NetworkInterfaces. It manages Ec2NetworkInterface.
     * 
     * @return Resource collection API of Ec2NetworkInterfaces.
     */
    public Ec2NetworkInterfaces ec2NetworkInterfaces() {
        if (this.ec2NetworkInterfaces == null) {
            this.ec2NetworkInterfaces = new Ec2NetworkInterfacesImpl(clientObject.getEc2NetworkInterfaces(), this);
        }
        return ec2NetworkInterfaces;
    }

    /**
     * Gets the resource collection API of Ec2RouteTables. It manages Ec2RouteTable.
     * 
     * @return Resource collection API of Ec2RouteTables.
     */
    public Ec2RouteTables ec2RouteTables() {
        if (this.ec2RouteTables == null) {
            this.ec2RouteTables = new Ec2RouteTablesImpl(clientObject.getEc2RouteTables(), this);
        }
        return ec2RouteTables;
    }

    /**
     * Gets the resource collection API of Ec2SecurityGroups. It manages Ec2SecurityGroup.
     * 
     * @return Resource collection API of Ec2SecurityGroups.
     */
    public Ec2SecurityGroups ec2SecurityGroups() {
        if (this.ec2SecurityGroups == null) {
            this.ec2SecurityGroups = new Ec2SecurityGroupsImpl(clientObject.getEc2SecurityGroups(), this);
        }
        return ec2SecurityGroups;
    }

    /**
     * Gets the resource collection API of Ec2Snapshots. It manages Ec2Snapshot.
     * 
     * @return Resource collection API of Ec2Snapshots.
     */
    public Ec2Snapshots ec2Snapshots() {
        if (this.ec2Snapshots == null) {
            this.ec2Snapshots = new Ec2SnapshotsImpl(clientObject.getEc2Snapshots(), this);
        }
        return ec2Snapshots;
    }

    /**
     * Gets the resource collection API of Ec2Subnets. It manages Ec2Subnet.
     * 
     * @return Resource collection API of Ec2Subnets.
     */
    public Ec2Subnets ec2Subnets() {
        if (this.ec2Subnets == null) {
            this.ec2Subnets = new Ec2SubnetsImpl(clientObject.getEc2Subnets(), this);
        }
        return ec2Subnets;
    }

    /**
     * Gets the resource collection API of Ec2Volumes. It manages Ec2Volume.
     * 
     * @return Resource collection API of Ec2Volumes.
     */
    public Ec2Volumes ec2Volumes() {
        if (this.ec2Volumes == null) {
            this.ec2Volumes = new Ec2VolumesImpl(clientObject.getEc2Volumes(), this);
        }
        return ec2Volumes;
    }

    /**
     * Gets the resource collection API of Ec2Vpcs. It manages Ec2Vpc.
     * 
     * @return Resource collection API of Ec2Vpcs.
     */
    public Ec2Vpcs ec2Vpcs() {
        if (this.ec2Vpcs == null) {
            this.ec2Vpcs = new Ec2VpcsImpl(clientObject.getEc2Vpcs(), this);
        }
        return ec2Vpcs;
    }

    /**
     * Gets the resource collection API of Ec2VpcEndpoints. It manages Ec2VpcEndpoint.
     * 
     * @return Resource collection API of Ec2VpcEndpoints.
     */
    public Ec2VpcEndpoints ec2VpcEndpoints() {
        if (this.ec2VpcEndpoints == null) {
            this.ec2VpcEndpoints = new Ec2VpcEndpointsImpl(clientObject.getEc2VpcEndpoints(), this);
        }
        return ec2VpcEndpoints;
    }

    /**
     * Gets the resource collection API of Ec2VpcPeeringConnections. It manages Ec2VpcPeeringConnection.
     * 
     * @return Resource collection API of Ec2VpcPeeringConnections.
     */
    public Ec2VpcPeeringConnections ec2VpcPeeringConnections() {
        if (this.ec2VpcPeeringConnections == null) {
            this.ec2VpcPeeringConnections
                = new Ec2VpcPeeringConnectionsImpl(clientObject.getEc2VpcPeeringConnections(), this);
        }
        return ec2VpcPeeringConnections;
    }

    /**
     * Gets the resource collection API of EcrImageDetails. It manages EcrImageDetail.
     * 
     * @return Resource collection API of EcrImageDetails.
     */
    public EcrImageDetails ecrImageDetails() {
        if (this.ecrImageDetails == null) {
            this.ecrImageDetails = new EcrImageDetailsImpl(clientObject.getEcrImageDetails(), this);
        }
        return ecrImageDetails;
    }

    /**
     * Gets the resource collection API of EcrRepositories. It manages EcrRepository.
     * 
     * @return Resource collection API of EcrRepositories.
     */
    public EcrRepositories ecrRepositories() {
        if (this.ecrRepositories == null) {
            this.ecrRepositories = new EcrRepositoriesImpl(clientObject.getEcrRepositories(), this);
        }
        return ecrRepositories;
    }

    /**
     * Gets the resource collection API of EcsClusters. It manages EcsCluster.
     * 
     * @return Resource collection API of EcsClusters.
     */
    public EcsClusters ecsClusters() {
        if (this.ecsClusters == null) {
            this.ecsClusters = new EcsClustersImpl(clientObject.getEcsClusters(), this);
        }
        return ecsClusters;
    }

    /**
     * Gets the resource collection API of EcsServices. It manages EcsService.
     * 
     * @return Resource collection API of EcsServices.
     */
    public EcsServices ecsServices() {
        if (this.ecsServices == null) {
            this.ecsServices = new EcsServicesImpl(clientObject.getEcsServices(), this);
        }
        return ecsServices;
    }

    /**
     * Gets the resource collection API of EcsTaskDefinitions. It manages EcsTaskDefinition.
     * 
     * @return Resource collection API of EcsTaskDefinitions.
     */
    public EcsTaskDefinitions ecsTaskDefinitions() {
        if (this.ecsTaskDefinitions == null) {
            this.ecsTaskDefinitions = new EcsTaskDefinitionsImpl(clientObject.getEcsTaskDefinitions(), this);
        }
        return ecsTaskDefinitions;
    }

    /**
     * Gets the resource collection API of EfsFileSystems. It manages EfsFileSystem.
     * 
     * @return Resource collection API of EfsFileSystems.
     */
    public EfsFileSystems efsFileSystems() {
        if (this.efsFileSystems == null) {
            this.efsFileSystems = new EfsFileSystemsImpl(clientObject.getEfsFileSystems(), this);
        }
        return efsFileSystems;
    }

    /**
     * Gets the resource collection API of EfsMountTargets. It manages EfsMountTarget.
     * 
     * @return Resource collection API of EfsMountTargets.
     */
    public EfsMountTargets efsMountTargets() {
        if (this.efsMountTargets == null) {
            this.efsMountTargets = new EfsMountTargetsImpl(clientObject.getEfsMountTargets(), this);
        }
        return efsMountTargets;
    }

    /**
     * Gets the resource collection API of EksClusters.
     * 
     * @return Resource collection API of EksClusters.
     */
    public EksClusters eksClusters() {
        if (this.eksClusters == null) {
            this.eksClusters = new EksClustersImpl(clientObject.getEksClusters(), this);
        }
        return eksClusters;
    }

    /**
     * Gets the resource collection API of EksNodegroups. It manages EksNodegroup.
     * 
     * @return Resource collection API of EksNodegroups.
     */
    public EksNodegroups eksNodegroups() {
        if (this.eksNodegroups == null) {
            this.eksNodegroups = new EksNodegroupsImpl(clientObject.getEksNodegroups(), this);
        }
        return eksNodegroups;
    }

    /**
     * Gets the resource collection API of ElasticBeanstalkApplications. It manages ElasticBeanstalkApplication.
     * 
     * @return Resource collection API of ElasticBeanstalkApplications.
     */
    public ElasticBeanstalkApplications elasticBeanstalkApplications() {
        if (this.elasticBeanstalkApplications == null) {
            this.elasticBeanstalkApplications
                = new ElasticBeanstalkApplicationsImpl(clientObject.getElasticBeanstalkApplications(), this);
        }
        return elasticBeanstalkApplications;
    }

    /**
     * Gets the resource collection API of ElasticBeanstalkConfigurationTemplates. It manages
     * ElasticBeanstalkConfigurationTemplate.
     * 
     * @return Resource collection API of ElasticBeanstalkConfigurationTemplates.
     */
    public ElasticBeanstalkConfigurationTemplates elasticBeanstalkConfigurationTemplates() {
        if (this.elasticBeanstalkConfigurationTemplates == null) {
            this.elasticBeanstalkConfigurationTemplates = new ElasticBeanstalkConfigurationTemplatesImpl(
                clientObject.getElasticBeanstalkConfigurationTemplates(), this);
        }
        return elasticBeanstalkConfigurationTemplates;
    }

    /**
     * Gets the resource collection API of ElasticBeanstalkEnvironments. It manages ElasticBeanstalkEnvironment.
     * 
     * @return Resource collection API of ElasticBeanstalkEnvironments.
     */
    public ElasticBeanstalkEnvironments elasticBeanstalkEnvironments() {
        if (this.elasticBeanstalkEnvironments == null) {
            this.elasticBeanstalkEnvironments
                = new ElasticBeanstalkEnvironmentsImpl(clientObject.getElasticBeanstalkEnvironments(), this);
        }
        return elasticBeanstalkEnvironments;
    }

    /**
     * Gets the resource collection API of ElasticLoadBalancingV2Listeners. It manages ElasticLoadBalancingV2Listener.
     * 
     * @return Resource collection API of ElasticLoadBalancingV2Listeners.
     */
    public ElasticLoadBalancingV2Listeners elasticLoadBalancingV2Listeners() {
        if (this.elasticLoadBalancingV2Listeners == null) {
            this.elasticLoadBalancingV2Listeners
                = new ElasticLoadBalancingV2ListenersImpl(clientObject.getElasticLoadBalancingV2Listeners(), this);
        }
        return elasticLoadBalancingV2Listeners;
    }

    /**
     * Gets the resource collection API of ElasticLoadBalancingV2LoadBalancers. It manages
     * ElasticLoadBalancingV2LoadBalancer.
     * 
     * @return Resource collection API of ElasticLoadBalancingV2LoadBalancers.
     */
    public ElasticLoadBalancingV2LoadBalancers elasticLoadBalancingV2LoadBalancers() {
        if (this.elasticLoadBalancingV2LoadBalancers == null) {
            this.elasticLoadBalancingV2LoadBalancers = new ElasticLoadBalancingV2LoadBalancersImpl(
                clientObject.getElasticLoadBalancingV2LoadBalancers(), this);
        }
        return elasticLoadBalancingV2LoadBalancers;
    }

    /**
     * Gets the resource collection API of ElasticLoadBalancingV2TargetGroups. It manages
     * ElasticLoadBalancingV2TargetGroup.
     * 
     * @return Resource collection API of ElasticLoadBalancingV2TargetGroups.
     */
    public ElasticLoadBalancingV2TargetGroups elasticLoadBalancingV2TargetGroups() {
        if (this.elasticLoadBalancingV2TargetGroups == null) {
            this.elasticLoadBalancingV2TargetGroups = new ElasticLoadBalancingV2TargetGroupsImpl(
                clientObject.getElasticLoadBalancingV2TargetGroups(), this);
        }
        return elasticLoadBalancingV2TargetGroups;
    }

    /**
     * Gets the resource collection API of ElasticLoadBalancingv2TargetHealthDescriptions. It manages
     * ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @return Resource collection API of ElasticLoadBalancingv2TargetHealthDescriptions.
     */
    public ElasticLoadBalancingv2TargetHealthDescriptions elasticLoadBalancingv2TargetHealthDescriptions() {
        if (this.elasticLoadBalancingv2TargetHealthDescriptions == null) {
            this.elasticLoadBalancingv2TargetHealthDescriptions
                = new ElasticLoadBalancingv2TargetHealthDescriptionsImpl(
                    clientObject.getElasticLoadBalancingv2TargetHealthDescriptions(), this);
        }
        return elasticLoadBalancingv2TargetHealthDescriptions;
    }

    /**
     * Gets the resource collection API of EmrClusters. It manages EmrCluster.
     * 
     * @return Resource collection API of EmrClusters.
     */
    public EmrClusters emrClusters() {
        if (this.emrClusters == null) {
            this.emrClusters = new EmrClustersImpl(clientObject.getEmrClusters(), this);
        }
        return emrClusters;
    }

    /**
     * Gets the resource collection API of GuardDutyDetectors. It manages GuardDutyDetector.
     * 
     * @return Resource collection API of GuardDutyDetectors.
     */
    public GuardDutyDetectors guardDutyDetectors() {
        if (this.guardDutyDetectors == null) {
            this.guardDutyDetectors = new GuardDutyDetectorsImpl(clientObject.getGuardDutyDetectors(), this);
        }
        return guardDutyDetectors;
    }

    /**
     * Gets the resource collection API of IamAccessKeyLastUseds. It manages IamAccessKeyLastUsed.
     * 
     * @return Resource collection API of IamAccessKeyLastUseds.
     */
    public IamAccessKeyLastUseds iamAccessKeyLastUseds() {
        if (this.iamAccessKeyLastUseds == null) {
            this.iamAccessKeyLastUseds = new IamAccessKeyLastUsedsImpl(clientObject.getIamAccessKeyLastUseds(), this);
        }
        return iamAccessKeyLastUseds;
    }

    /**
     * Gets the resource collection API of IamAccessKeyMetadataInfoes. It manages IamAccessKeyMetadata.
     * 
     * @return Resource collection API of IamAccessKeyMetadataInfoes.
     */
    public IamAccessKeyMetadataInfoes iamAccessKeyMetadataInfoes() {
        if (this.iamAccessKeyMetadataInfoes == null) {
            this.iamAccessKeyMetadataInfoes
                = new IamAccessKeyMetadataInfoesImpl(clientObject.getIamAccessKeyMetadataInfoes(), this);
        }
        return iamAccessKeyMetadataInfoes;
    }

    /**
     * Gets the resource collection API of IamGroups. It manages IamGroup.
     * 
     * @return Resource collection API of IamGroups.
     */
    public IamGroups iamGroups() {
        if (this.iamGroups == null) {
            this.iamGroups = new IamGroupsImpl(clientObject.getIamGroups(), this);
        }
        return iamGroups;
    }

    /**
     * Gets the resource collection API of IamInstanceProfiles. It manages IamInstanceProfileAutoGenerated.
     * 
     * @return Resource collection API of IamInstanceProfiles.
     */
    public IamInstanceProfiles iamInstanceProfiles() {
        if (this.iamInstanceProfiles == null) {
            this.iamInstanceProfiles = new IamInstanceProfilesImpl(clientObject.getIamInstanceProfiles(), this);
        }
        return iamInstanceProfiles;
    }

    /**
     * Gets the resource collection API of IamMfaDevices. It manages IamMfaDevice.
     * 
     * @return Resource collection API of IamMfaDevices.
     */
    public IamMfaDevices iamMfaDevices() {
        if (this.iamMfaDevices == null) {
            this.iamMfaDevices = new IamMfaDevicesImpl(clientObject.getIamMfaDevices(), this);
        }
        return iamMfaDevices;
    }

    /**
     * Gets the resource collection API of IamPasswordPolicies. It manages IamPasswordPolicy.
     * 
     * @return Resource collection API of IamPasswordPolicies.
     */
    public IamPasswordPolicies iamPasswordPolicies() {
        if (this.iamPasswordPolicies == null) {
            this.iamPasswordPolicies = new IamPasswordPoliciesImpl(clientObject.getIamPasswordPolicies(), this);
        }
        return iamPasswordPolicies;
    }

    /**
     * Gets the resource collection API of IamPolicyVersions. It manages IamPolicyVersion.
     * 
     * @return Resource collection API of IamPolicyVersions.
     */
    public IamPolicyVersions iamPolicyVersions() {
        if (this.iamPolicyVersions == null) {
            this.iamPolicyVersions = new IamPolicyVersionsImpl(clientObject.getIamPolicyVersions(), this);
        }
        return iamPolicyVersions;
    }

    /**
     * Gets the resource collection API of IamRoles. It manages IamRole.
     * 
     * @return Resource collection API of IamRoles.
     */
    public IamRoles iamRoles() {
        if (this.iamRoles == null) {
            this.iamRoles = new IamRolesImpl(clientObject.getIamRoles(), this);
        }
        return iamRoles;
    }

    /**
     * Gets the resource collection API of IamServerCertificates. It manages IamServerCertificate.
     * 
     * @return Resource collection API of IamServerCertificates.
     */
    public IamServerCertificates iamServerCertificates() {
        if (this.iamServerCertificates == null) {
            this.iamServerCertificates = new IamServerCertificatesImpl(clientObject.getIamServerCertificates(), this);
        }
        return iamServerCertificates;
    }

    /**
     * Gets the resource collection API of IamVirtualMfaDevices. It manages IamVirtualMfaDevice.
     * 
     * @return Resource collection API of IamVirtualMfaDevices.
     */
    public IamVirtualMfaDevices iamVirtualMfaDevices() {
        if (this.iamVirtualMfaDevices == null) {
            this.iamVirtualMfaDevices = new IamVirtualMfaDevicesImpl(clientObject.getIamVirtualMfaDevices(), this);
        }
        return iamVirtualMfaDevices;
    }

    /**
     * Gets the resource collection API of KmsAliases. It manages KmsAlias.
     * 
     * @return Resource collection API of KmsAliases.
     */
    public KmsAliases kmsAliases() {
        if (this.kmsAliases == null) {
            this.kmsAliases = new KmsAliasesImpl(clientObject.getKmsAliases(), this);
        }
        return kmsAliases;
    }

    /**
     * Gets the resource collection API of KmsKeys. It manages KmsKey.
     * 
     * @return Resource collection API of KmsKeys.
     */
    public KmsKeys kmsKeys() {
        if (this.kmsKeys == null) {
            this.kmsKeys = new KmsKeysImpl(clientObject.getKmsKeys(), this);
        }
        return kmsKeys;
    }

    /**
     * Gets the resource collection API of LambdaFunctions. It manages LambdaFunction.
     * 
     * @return Resource collection API of LambdaFunctions.
     */
    public LambdaFunctions lambdaFunctions() {
        if (this.lambdaFunctions == null) {
            this.lambdaFunctions = new LambdaFunctionsImpl(clientObject.getLambdaFunctions(), this);
        }
        return lambdaFunctions;
    }

    /**
     * Gets the resource collection API of LambdaFunctionCodeLocations. It manages LambdaFunctionCodeLocation.
     * 
     * @return Resource collection API of LambdaFunctionCodeLocations.
     */
    public LambdaFunctionCodeLocations lambdaFunctionCodeLocations() {
        if (this.lambdaFunctionCodeLocations == null) {
            this.lambdaFunctionCodeLocations
                = new LambdaFunctionCodeLocationsImpl(clientObject.getLambdaFunctionCodeLocations(), this);
        }
        return lambdaFunctionCodeLocations;
    }

    /**
     * Gets the resource collection API of LightsailBuckets. It manages LightsailBucket.
     * 
     * @return Resource collection API of LightsailBuckets.
     */
    public LightsailBuckets lightsailBuckets() {
        if (this.lightsailBuckets == null) {
            this.lightsailBuckets = new LightsailBucketsImpl(clientObject.getLightsailBuckets(), this);
        }
        return lightsailBuckets;
    }

    /**
     * Gets the resource collection API of LightsailInstances. It manages LightsailInstance.
     * 
     * @return Resource collection API of LightsailInstances.
     */
    public LightsailInstances lightsailInstances() {
        if (this.lightsailInstances == null) {
            this.lightsailInstances = new LightsailInstancesImpl(clientObject.getLightsailInstances(), this);
        }
        return lightsailInstances;
    }

    /**
     * Gets the resource collection API of LogsLogGroups. It manages LogsLogGroup.
     * 
     * @return Resource collection API of LogsLogGroups.
     */
    public LogsLogGroups logsLogGroups() {
        if (this.logsLogGroups == null) {
            this.logsLogGroups = new LogsLogGroupsImpl(clientObject.getLogsLogGroups(), this);
        }
        return logsLogGroups;
    }

    /**
     * Gets the resource collection API of LogsLogStreams. It manages LogsLogStream.
     * 
     * @return Resource collection API of LogsLogStreams.
     */
    public LogsLogStreams logsLogStreams() {
        if (this.logsLogStreams == null) {
            this.logsLogStreams = new LogsLogStreamsImpl(clientObject.getLogsLogStreams(), this);
        }
        return logsLogStreams;
    }

    /**
     * Gets the resource collection API of LogsMetricFilters. It manages LogsMetricFilter.
     * 
     * @return Resource collection API of LogsMetricFilters.
     */
    public LogsMetricFilters logsMetricFilters() {
        if (this.logsMetricFilters == null) {
            this.logsMetricFilters = new LogsMetricFiltersImpl(clientObject.getLogsMetricFilters(), this);
        }
        return logsMetricFilters;
    }

    /**
     * Gets the resource collection API of LogsSubscriptionFilters. It manages LogsSubscriptionFilter.
     * 
     * @return Resource collection API of LogsSubscriptionFilters.
     */
    public LogsSubscriptionFilters logsSubscriptionFilters() {
        if (this.logsSubscriptionFilters == null) {
            this.logsSubscriptionFilters
                = new LogsSubscriptionFiltersImpl(clientObject.getLogsSubscriptionFilters(), this);
        }
        return logsSubscriptionFilters;
    }

    /**
     * Gets the resource collection API of Macie2JobSummaries. It manages Macie2JobSummary.
     * 
     * @return Resource collection API of Macie2JobSummaries.
     */
    public Macie2JobSummaries macie2JobSummaries() {
        if (this.macie2JobSummaries == null) {
            this.macie2JobSummaries = new Macie2JobSummariesImpl(clientObject.getMacie2JobSummaries(), this);
        }
        return macie2JobSummaries;
    }

    /**
     * Gets the resource collection API of MacieAllowLists. It manages MacieAllowList.
     * 
     * @return Resource collection API of MacieAllowLists.
     */
    public MacieAllowLists macieAllowLists() {
        if (this.macieAllowLists == null) {
            this.macieAllowLists = new MacieAllowListsImpl(clientObject.getMacieAllowLists(), this);
        }
        return macieAllowLists;
    }

    /**
     * Gets the resource collection API of NetworkFirewallFirewalls. It manages NetworkFirewall.
     * 
     * @return Resource collection API of NetworkFirewallFirewalls.
     */
    public NetworkFirewallFirewalls networkFirewallFirewalls() {
        if (this.networkFirewallFirewalls == null) {
            this.networkFirewallFirewalls
                = new NetworkFirewallFirewallsImpl(clientObject.getNetworkFirewallFirewalls(), this);
        }
        return networkFirewallFirewalls;
    }

    /**
     * Gets the resource collection API of NetworkFirewallFirewallPolicies. It manages NetworkFirewallPolicy.
     * 
     * @return Resource collection API of NetworkFirewallFirewallPolicies.
     */
    public NetworkFirewallFirewallPolicies networkFirewallFirewallPolicies() {
        if (this.networkFirewallFirewallPolicies == null) {
            this.networkFirewallFirewallPolicies
                = new NetworkFirewallFirewallPoliciesImpl(clientObject.getNetworkFirewallFirewallPolicies(), this);
        }
        return networkFirewallFirewallPolicies;
    }

    /**
     * Gets the resource collection API of NetworkFirewallRuleGroups. It manages NetworkFirewallRuleGroup.
     * 
     * @return Resource collection API of NetworkFirewallRuleGroups.
     */
    public NetworkFirewallRuleGroups networkFirewallRuleGroups() {
        if (this.networkFirewallRuleGroups == null) {
            this.networkFirewallRuleGroups
                = new NetworkFirewallRuleGroupsImpl(clientObject.getNetworkFirewallRuleGroups(), this);
        }
        return networkFirewallRuleGroups;
    }

    /**
     * Gets the resource collection API of OpenSearchDomainStatuses. It manages OpenSearchDomainStatus.
     * 
     * @return Resource collection API of OpenSearchDomainStatuses.
     */
    public OpenSearchDomainStatuses openSearchDomainStatuses() {
        if (this.openSearchDomainStatuses == null) {
            this.openSearchDomainStatuses
                = new OpenSearchDomainStatusesImpl(clientObject.getOpenSearchDomainStatuses(), this);
        }
        return openSearchDomainStatuses;
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of OrganizationsAccounts. It manages OrganizationsAccount.
     * 
     * @return Resource collection API of OrganizationsAccounts.
     */
    public OrganizationsAccounts organizationsAccounts() {
        if (this.organizationsAccounts == null) {
            this.organizationsAccounts = new OrganizationsAccountsImpl(clientObject.getOrganizationsAccounts(), this);
        }
        return organizationsAccounts;
    }

    /**
     * Gets the resource collection API of OrganizationsOrganizations. It manages OrganizationsOrganization.
     * 
     * @return Resource collection API of OrganizationsOrganizations.
     */
    public OrganizationsOrganizations organizationsOrganizations() {
        if (this.organizationsOrganizations == null) {
            this.organizationsOrganizations
                = new OrganizationsOrganizationsImpl(clientObject.getOrganizationsOrganizations(), this);
        }
        return organizationsOrganizations;
    }

    /**
     * Gets the resource collection API of RdsDbClusters. It manages RdsDBCluster.
     * 
     * @return Resource collection API of RdsDbClusters.
     */
    public RdsDbClusters rdsDbClusters() {
        if (this.rdsDbClusters == null) {
            this.rdsDbClusters = new RdsDbClustersImpl(clientObject.getRdsDbClusters(), this);
        }
        return rdsDbClusters;
    }

    /**
     * Gets the resource collection API of RdsDbInstances. It manages RdsDBInstance.
     * 
     * @return Resource collection API of RdsDbInstances.
     */
    public RdsDbInstances rdsDbInstances() {
        if (this.rdsDbInstances == null) {
            this.rdsDbInstances = new RdsDbInstancesImpl(clientObject.getRdsDbInstances(), this);
        }
        return rdsDbInstances;
    }

    /**
     * Gets the resource collection API of RdsDbSnapshots. It manages RdsDBSnapshot.
     * 
     * @return Resource collection API of RdsDbSnapshots.
     */
    public RdsDbSnapshots rdsDbSnapshots() {
        if (this.rdsDbSnapshots == null) {
            this.rdsDbSnapshots = new RdsDbSnapshotsImpl(clientObject.getRdsDbSnapshots(), this);
        }
        return rdsDbSnapshots;
    }

    /**
     * Gets the resource collection API of RdsDbSnapshotAttributesResults. It manages RdsDBSnapshotAttributesResult.
     * 
     * @return Resource collection API of RdsDbSnapshotAttributesResults.
     */
    public RdsDbSnapshotAttributesResults rdsDbSnapshotAttributesResults() {
        if (this.rdsDbSnapshotAttributesResults == null) {
            this.rdsDbSnapshotAttributesResults
                = new RdsDbSnapshotAttributesResultsImpl(clientObject.getRdsDbSnapshotAttributesResults(), this);
        }
        return rdsDbSnapshotAttributesResults;
    }

    /**
     * Gets the resource collection API of RdsEventSubscriptions. It manages RdsEventSubscription.
     * 
     * @return Resource collection API of RdsEventSubscriptions.
     */
    public RdsEventSubscriptions rdsEventSubscriptions() {
        if (this.rdsEventSubscriptions == null) {
            this.rdsEventSubscriptions = new RdsEventSubscriptionsImpl(clientObject.getRdsEventSubscriptions(), this);
        }
        return rdsEventSubscriptions;
    }

    /**
     * Gets the resource collection API of RdsExportTasks. It manages RdsExportTask.
     * 
     * @return Resource collection API of RdsExportTasks.
     */
    public RdsExportTasks rdsExportTasks() {
        if (this.rdsExportTasks == null) {
            this.rdsExportTasks = new RdsExportTasksImpl(clientObject.getRdsExportTasks(), this);
        }
        return rdsExportTasks;
    }

    /**
     * Gets the resource collection API of RedshiftClusters. It manages RedshiftCluster.
     * 
     * @return Resource collection API of RedshiftClusters.
     */
    public RedshiftClusters redshiftClusters() {
        if (this.redshiftClusters == null) {
            this.redshiftClusters = new RedshiftClustersImpl(clientObject.getRedshiftClusters(), this);
        }
        return redshiftClusters;
    }

    /**
     * Gets the resource collection API of RedshiftClusterParameterGroups. It manages RedshiftClusterParameterGroup.
     * 
     * @return Resource collection API of RedshiftClusterParameterGroups.
     */
    public RedshiftClusterParameterGroups redshiftClusterParameterGroups() {
        if (this.redshiftClusterParameterGroups == null) {
            this.redshiftClusterParameterGroups
                = new RedshiftClusterParameterGroupsImpl(clientObject.getRedshiftClusterParameterGroups(), this);
        }
        return redshiftClusterParameterGroups;
    }

    /**
     * Gets the resource collection API of Route53DomainsDomainSummaries. It manages Route53DomainsDomainSummary.
     * 
     * @return Resource collection API of Route53DomainsDomainSummaries.
     */
    public Route53DomainsDomainSummaries route53DomainsDomainSummaries() {
        if (this.route53DomainsDomainSummaries == null) {
            this.route53DomainsDomainSummaries
                = new Route53DomainsDomainSummariesImpl(clientObject.getRoute53DomainsDomainSummaries(), this);
        }
        return route53DomainsDomainSummaries;
    }

    /**
     * Gets the resource collection API of Route53HostedZones. It manages Route53HostedZone.
     * 
     * @return Resource collection API of Route53HostedZones.
     */
    public Route53HostedZones route53HostedZones() {
        if (this.route53HostedZones == null) {
            this.route53HostedZones = new Route53HostedZonesImpl(clientObject.getRoute53HostedZones(), this);
        }
        return route53HostedZones;
    }

    /**
     * Gets the resource collection API of Route53ResourceRecordSets. It manages Route53ResourceRecordSet.
     * 
     * @return Resource collection API of Route53ResourceRecordSets.
     */
    public Route53ResourceRecordSets route53ResourceRecordSets() {
        if (this.route53ResourceRecordSets == null) {
            this.route53ResourceRecordSets
                = new Route53ResourceRecordSetsImpl(clientObject.getRoute53ResourceRecordSets(), this);
        }
        return route53ResourceRecordSets;
    }

    /**
     * Gets the resource collection API of S3AccessControlPolicies. It manages S3AccessControlPolicy.
     * 
     * @return Resource collection API of S3AccessControlPolicies.
     */
    public S3AccessControlPolicies s3AccessControlPolicies() {
        if (this.s3AccessControlPolicies == null) {
            this.s3AccessControlPolicies
                = new S3AccessControlPoliciesImpl(clientObject.getS3AccessControlPolicies(), this);
        }
        return s3AccessControlPolicies;
    }

    /**
     * Gets the resource collection API of S3AccessPoints. It manages S3AccessPoint.
     * 
     * @return Resource collection API of S3AccessPoints.
     */
    public S3AccessPoints s3AccessPoints() {
        if (this.s3AccessPoints == null) {
            this.s3AccessPoints = new S3AccessPointsImpl(clientObject.getS3AccessPoints(), this);
        }
        return s3AccessPoints;
    }

    /**
     * Gets the resource collection API of S3Buckets. It manages S3Bucket.
     * 
     * @return Resource collection API of S3Buckets.
     */
    public S3Buckets s3Buckets() {
        if (this.s3Buckets == null) {
            this.s3Buckets = new S3BucketsImpl(clientObject.getS3Buckets(), this);
        }
        return s3Buckets;
    }

    /**
     * Gets the resource collection API of S3BucketPolicies. It manages S3BucketPolicy.
     * 
     * @return Resource collection API of S3BucketPolicies.
     */
    public S3BucketPolicies s3BucketPolicies() {
        if (this.s3BucketPolicies == null) {
            this.s3BucketPolicies = new S3BucketPoliciesImpl(clientObject.getS3BucketPolicies(), this);
        }
        return s3BucketPolicies;
    }

    /**
     * Gets the resource collection API of S3ControlMultiRegionAccessPointPolicyDocuments. It manages
     * S3ControlMultiRegionAccessPointPolicyDocument.
     * 
     * @return Resource collection API of S3ControlMultiRegionAccessPointPolicyDocuments.
     */
    public S3ControlMultiRegionAccessPointPolicyDocuments s3ControlMultiRegionAccessPointPolicyDocuments() {
        if (this.s3ControlMultiRegionAccessPointPolicyDocuments == null) {
            this.s3ControlMultiRegionAccessPointPolicyDocuments
                = new S3ControlMultiRegionAccessPointPolicyDocumentsImpl(
                    clientObject.getS3ControlMultiRegionAccessPointPolicyDocuments(), this);
        }
        return s3ControlMultiRegionAccessPointPolicyDocuments;
    }

    /**
     * Gets the resource collection API of SageMakerApps. It manages SageMakerApp.
     * 
     * @return Resource collection API of SageMakerApps.
     */
    public SageMakerApps sageMakerApps() {
        if (this.sageMakerApps == null) {
            this.sageMakerApps = new SageMakerAppsImpl(clientObject.getSageMakerApps(), this);
        }
        return sageMakerApps;
    }

    /**
     * Gets the resource collection API of SageMakerNotebookInstanceSummaries. It manages
     * SageMakerNotebookInstanceSummary.
     * 
     * @return Resource collection API of SageMakerNotebookInstanceSummaries.
     */
    public SageMakerNotebookInstanceSummaries sageMakerNotebookInstanceSummaries() {
        if (this.sageMakerNotebookInstanceSummaries == null) {
            this.sageMakerNotebookInstanceSummaries = new SageMakerNotebookInstanceSummariesImpl(
                clientObject.getSageMakerNotebookInstanceSummaries(), this);
        }
        return sageMakerNotebookInstanceSummaries;
    }

    /**
     * Gets the resource collection API of SecretsManagerResourcePolicies. It manages SecretsManagerResourcePolicy.
     * 
     * @return Resource collection API of SecretsManagerResourcePolicies.
     */
    public SecretsManagerResourcePolicies secretsManagerResourcePolicies() {
        if (this.secretsManagerResourcePolicies == null) {
            this.secretsManagerResourcePolicies
                = new SecretsManagerResourcePoliciesImpl(clientObject.getSecretsManagerResourcePolicies(), this);
        }
        return secretsManagerResourcePolicies;
    }

    /**
     * Gets the resource collection API of SecretsManagerSecrets. It manages SecretsManagerSecret.
     * 
     * @return Resource collection API of SecretsManagerSecrets.
     */
    public SecretsManagerSecrets secretsManagerSecrets() {
        if (this.secretsManagerSecrets == null) {
            this.secretsManagerSecrets = new SecretsManagerSecretsImpl(clientObject.getSecretsManagerSecrets(), this);
        }
        return secretsManagerSecrets;
    }

    /**
     * Gets the resource collection API of SnsSubscriptions. It manages SnsSubscription.
     * 
     * @return Resource collection API of SnsSubscriptions.
     */
    public SnsSubscriptions snsSubscriptions() {
        if (this.snsSubscriptions == null) {
            this.snsSubscriptions = new SnsSubscriptionsImpl(clientObject.getSnsSubscriptions(), this);
        }
        return snsSubscriptions;
    }

    /**
     * Gets the resource collection API of SnsTopics. It manages SnsTopic.
     * 
     * @return Resource collection API of SnsTopics.
     */
    public SnsTopics snsTopics() {
        if (this.snsTopics == null) {
            this.snsTopics = new SnsTopicsImpl(clientObject.getSnsTopics(), this);
        }
        return snsTopics;
    }

    /**
     * Gets the resource collection API of SqsQueues. It manages SqsQueue.
     * 
     * @return Resource collection API of SqsQueues.
     */
    public SqsQueues sqsQueues() {
        if (this.sqsQueues == null) {
            this.sqsQueues = new SqsQueuesImpl(clientObject.getSqsQueues(), this);
        }
        return sqsQueues;
    }

    /**
     * Gets the resource collection API of SsmInstanceInformations. It manages SsmInstanceInformation.
     * 
     * @return Resource collection API of SsmInstanceInformations.
     */
    public SsmInstanceInformations ssmInstanceInformations() {
        if (this.ssmInstanceInformations == null) {
            this.ssmInstanceInformations
                = new SsmInstanceInformationsImpl(clientObject.getSsmInstanceInformations(), this);
        }
        return ssmInstanceInformations;
    }

    /**
     * Gets the resource collection API of SsmParameters. It manages SsmParameter.
     * 
     * @return Resource collection API of SsmParameters.
     */
    public SsmParameters ssmParameters() {
        if (this.ssmParameters == null) {
            this.ssmParameters = new SsmParametersImpl(clientObject.getSsmParameters(), this);
        }
        return ssmParameters;
    }

    /**
     * Gets the resource collection API of SsmResourceComplianceSummaryItems. It manages
     * SsmResourceComplianceSummaryItem.
     * 
     * @return Resource collection API of SsmResourceComplianceSummaryItems.
     */
    public SsmResourceComplianceSummaryItems ssmResourceComplianceSummaryItems() {
        if (this.ssmResourceComplianceSummaryItems == null) {
            this.ssmResourceComplianceSummaryItems
                = new SsmResourceComplianceSummaryItemsImpl(clientObject.getSsmResourceComplianceSummaryItems(), this);
        }
        return ssmResourceComplianceSummaryItems;
    }

    /**
     * Gets the resource collection API of Wafv2LoggingConfigurations. It manages Wafv2LoggingConfiguration.
     * 
     * @return Resource collection API of Wafv2LoggingConfigurations.
     */
    public Wafv2LoggingConfigurations wafv2LoggingConfigurations() {
        if (this.wafv2LoggingConfigurations == null) {
            this.wafv2LoggingConfigurations
                = new Wafv2LoggingConfigurationsImpl(clientObject.getWafv2LoggingConfigurations(), this);
        }
        return wafv2LoggingConfigurations;
    }

    /**
     * Gets the resource collection API of WafWebAclSummaries. It manages WafWebAclSummary.
     * 
     * @return Resource collection API of WafWebAclSummaries.
     */
    public WafWebAclSummaries wafWebAclSummaries() {
        if (this.wafWebAclSummaries == null) {
            this.wafWebAclSummaries = new WafWebAclSummariesImpl(clientObject.getWafWebAclSummaries(), this);
        }
        return wafWebAclSummaries;
    }

    /**
     * Gets wrapped service client MicrosoftAwsConnector providing direct access to the underlying auto-generated API
     * implementation, based on Azure REST API.
     * 
     * @return Wrapped service client MicrosoftAwsConnector.
     */
    public MicrosoftAwsConnector serviceClient() {
        return this.clientObject;
    }
}

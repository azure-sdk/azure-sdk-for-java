// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 * Definition of awsRdsExportTask.
 */
@Fluent
public final class AwsRdsExportTaskProperties implements JsonSerializable<AwsRdsExportTaskProperties> {
    /*
     * <p>The data exported from the snapshot or cluster.</p> <p>Valid Values:</p> <ul> <li> <p> <code>database</code> -
     * Export all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> -
     * Export a table of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and
     * Aurora MySQL.</p> </li> <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of
     * the snapshot or cluster. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li>
     * <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is
     * valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> </ul>
     */
    private List<String> exportOnly;

    /*
     * <p>A unique identifier for the snapshot or cluster export task. This ID isn't an identifier for the Amazon S3
     * bucket where the data is exported.</p>
     */
    private String exportTaskIdentifier;

    /*
     * <p>The reason the export failed, if it failed.</p>
     */
    private String failureCause;

    /*
     * <p>The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot or cluster.</p>
     */
    private String iamRoleArn;

    /*
     * <p>The key identifier of the Amazon Web Services KMS key that is used to encrypt the data when it's exported to
     * Amazon S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias name. The IAM role used for the
     * export must have encryption and decryption permissions to use this KMS key.</p>
     */
    private String kmsKeyId;

    /*
     * <p>The progress of the snapshot or cluster export task as a percentage.</p>
     */
    private Integer percentProgress;

    /*
     * <p>The Amazon S3 bucket where the snapshot or cluster is exported to.</p>
     */
    private String s3Bucket;

    /*
     * <p>The Amazon S3 bucket prefix that is the file name and path of the exported data.</p>
     */
    private String s3Prefix;

    /*
     * <p>The time when the snapshot was created.</p>
     */
    private OffsetDateTime snapshotTime;

    /*
     * <p>The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p>
     */
    private String sourceArn;

    /*
     * <p>The type of source for the export.</p>
     */
    private ExportSourceTypeEnumValue sourceType;

    /*
     * <p>The progress status of the export task. The status can be one of the following:</p> <ul> <li> <p>
     * <code>CANCELED</code> </p> </li> <li> <p> <code>CANCELING</code> </p> </li> <li> <p> <code>COMPLETE</code> </p>
     * </li> <li> <p> <code>FAILED</code> </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p>
     * <code>STARTING</code> </p> </li> </ul>
     */
    private String status;

    /*
     * <p>The time when the snapshot or cluster export task ended.</p>
     */
    private OffsetDateTime taskEndTime;

    /*
     * <p>The time when the snapshot or cluster export task started.</p>
     */
    private OffsetDateTime taskStartTime;

    /*
     * <p>The total amount of data exported, in gigabytes.</p>
     */
    private Integer totalExtractedDataInGB;

    /*
     * <p>A warning about the snapshot or cluster export task.</p>
     */
    private String warningMessage;

    /**
     * Creates an instance of AwsRdsExportTaskProperties class.
     */
    public AwsRdsExportTaskProperties() {
    }

    /**
     * Get the exportOnly property: &lt;p&gt;The data exported from the snapshot or cluster.&lt;/p&gt; &lt;p&gt;Valid
     * Values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;database&lt;/code&gt; - Export all the data from a
     * specified database.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;database.table&lt;/code&gt;
     * &lt;i&gt;table-name&lt;/i&gt; - Export a table of the snapshot or cluster. This format is valid only for RDS for
     * MySQL, RDS for MariaDB, and Aurora MySQL.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;database.schema&lt;/code&gt; &lt;i&gt;schema-name&lt;/i&gt; - Export a database schema of the
     * snapshot or cluster. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.&lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;database.schema.table&lt;/code&gt; &lt;i&gt;table-name&lt;/i&gt; -
     * Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora
     * PostgreSQL.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @return the exportOnly value.
     */
    public List<String> exportOnly() {
        return this.exportOnly;
    }

    /**
     * Set the exportOnly property: &lt;p&gt;The data exported from the snapshot or cluster.&lt;/p&gt; &lt;p&gt;Valid
     * Values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;database&lt;/code&gt; - Export all the data from a
     * specified database.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;database.table&lt;/code&gt;
     * &lt;i&gt;table-name&lt;/i&gt; - Export a table of the snapshot or cluster. This format is valid only for RDS for
     * MySQL, RDS for MariaDB, and Aurora MySQL.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;database.schema&lt;/code&gt; &lt;i&gt;schema-name&lt;/i&gt; - Export a database schema of the
     * snapshot or cluster. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.&lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;database.schema.table&lt;/code&gt; &lt;i&gt;table-name&lt;/i&gt; -
     * Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora
     * PostgreSQL.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @param exportOnly the exportOnly value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withExportOnly(List<String> exportOnly) {
        this.exportOnly = exportOnly;
        return this;
    }

    /**
     * Get the exportTaskIdentifier property: &lt;p&gt;A unique identifier for the snapshot or cluster export task. This
     * ID isn't an identifier for the Amazon S3 bucket where the data is exported.&lt;/p&gt;.
     * 
     * @return the exportTaskIdentifier value.
     */
    public String exportTaskIdentifier() {
        return this.exportTaskIdentifier;
    }

    /**
     * Set the exportTaskIdentifier property: &lt;p&gt;A unique identifier for the snapshot or cluster export task. This
     * ID isn't an identifier for the Amazon S3 bucket where the data is exported.&lt;/p&gt;.
     * 
     * @param exportTaskIdentifier the exportTaskIdentifier value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withExportTaskIdentifier(String exportTaskIdentifier) {
        this.exportTaskIdentifier = exportTaskIdentifier;
        return this;
    }

    /**
     * Get the failureCause property: &lt;p&gt;The reason the export failed, if it failed.&lt;/p&gt;.
     * 
     * @return the failureCause value.
     */
    public String failureCause() {
        return this.failureCause;
    }

    /**
     * Set the failureCause property: &lt;p&gt;The reason the export failed, if it failed.&lt;/p&gt;.
     * 
     * @param failureCause the failureCause value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withFailureCause(String failureCause) {
        this.failureCause = failureCause;
        return this;
    }

    /**
     * Get the iamRoleArn property: &lt;p&gt;The name of the IAM role that is used to write to Amazon S3 when exporting
     * a snapshot or cluster.&lt;/p&gt;.
     * 
     * @return the iamRoleArn value.
     */
    public String iamRoleArn() {
        return this.iamRoleArn;
    }

    /**
     * Set the iamRoleArn property: &lt;p&gt;The name of the IAM role that is used to write to Amazon S3 when exporting
     * a snapshot or cluster.&lt;/p&gt;.
     * 
     * @param iamRoleArn the iamRoleArn value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withIamRoleArn(String iamRoleArn) {
        this.iamRoleArn = iamRoleArn;
        return this;
    }

    /**
     * Get the kmsKeyId property: &lt;p&gt;The key identifier of the Amazon Web Services KMS key that is used to encrypt
     * the data when it's exported to Amazon S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias
     * name. The IAM role used for the export must have encryption and decryption permissions to use this KMS
     * key.&lt;/p&gt;.
     * 
     * @return the kmsKeyId value.
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Set the kmsKeyId property: &lt;p&gt;The key identifier of the Amazon Web Services KMS key that is used to encrypt
     * the data when it's exported to Amazon S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias
     * name. The IAM role used for the export must have encryption and decryption permissions to use this KMS
     * key.&lt;/p&gt;.
     * 
     * @param kmsKeyId the kmsKeyId value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }

    /**
     * Get the percentProgress property: &lt;p&gt;The progress of the snapshot or cluster export task as a
     * percentage.&lt;/p&gt;.
     * 
     * @return the percentProgress value.
     */
    public Integer percentProgress() {
        return this.percentProgress;
    }

    /**
     * Set the percentProgress property: &lt;p&gt;The progress of the snapshot or cluster export task as a
     * percentage.&lt;/p&gt;.
     * 
     * @param percentProgress the percentProgress value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withPercentProgress(Integer percentProgress) {
        this.percentProgress = percentProgress;
        return this;
    }

    /**
     * Get the s3Bucket property: &lt;p&gt;The Amazon S3 bucket where the snapshot or cluster is exported to.&lt;/p&gt;.
     * 
     * @return the s3Bucket value.
     */
    public String s3Bucket() {
        return this.s3Bucket;
    }

    /**
     * Set the s3Bucket property: &lt;p&gt;The Amazon S3 bucket where the snapshot or cluster is exported to.&lt;/p&gt;.
     * 
     * @param s3Bucket the s3Bucket value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withS3Bucket(String s3Bucket) {
        this.s3Bucket = s3Bucket;
        return this;
    }

    /**
     * Get the s3Prefix property: &lt;p&gt;The Amazon S3 bucket prefix that is the file name and path of the exported
     * data.&lt;/p&gt;.
     * 
     * @return the s3Prefix value.
     */
    public String s3Prefix() {
        return this.s3Prefix;
    }

    /**
     * Set the s3Prefix property: &lt;p&gt;The Amazon S3 bucket prefix that is the file name and path of the exported
     * data.&lt;/p&gt;.
     * 
     * @param s3Prefix the s3Prefix value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withS3Prefix(String s3Prefix) {
        this.s3Prefix = s3Prefix;
        return this;
    }

    /**
     * Get the snapshotTime property: &lt;p&gt;The time when the snapshot was created.&lt;/p&gt;.
     * 
     * @return the snapshotTime value.
     */
    public OffsetDateTime snapshotTime() {
        return this.snapshotTime;
    }

    /**
     * Set the snapshotTime property: &lt;p&gt;The time when the snapshot was created.&lt;/p&gt;.
     * 
     * @param snapshotTime the snapshotTime value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withSnapshotTime(OffsetDateTime snapshotTime) {
        this.snapshotTime = snapshotTime;
        return this;
    }

    /**
     * Get the sourceArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon
     * S3.&lt;/p&gt;.
     * 
     * @return the sourceArn value.
     */
    public String sourceArn() {
        return this.sourceArn;
    }

    /**
     * Set the sourceArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon
     * S3.&lt;/p&gt;.
     * 
     * @param sourceArn the sourceArn value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withSourceArn(String sourceArn) {
        this.sourceArn = sourceArn;
        return this;
    }

    /**
     * Get the sourceType property: &lt;p&gt;The type of source for the export.&lt;/p&gt;.
     * 
     * @return the sourceType value.
     */
    public ExportSourceTypeEnumValue sourceType() {
        return this.sourceType;
    }

    /**
     * Set the sourceType property: &lt;p&gt;The type of source for the export.&lt;/p&gt;.
     * 
     * @param sourceType the sourceType value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withSourceType(ExportSourceTypeEnumValue sourceType) {
        this.sourceType = sourceType;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The progress status of the export task. The status can be one of the
     * following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CANCELED&lt;/code&gt; &lt;/p&gt; &lt;/li&gt;
     * &lt;li&gt; &lt;p&gt; &lt;code&gt;CANCELING&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FAILED&lt;/code&gt;
     * &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IN_PROGRESS&lt;/code&gt; &lt;/p&gt; &lt;/li&gt;
     * &lt;li&gt; &lt;p&gt; &lt;code&gt;STARTING&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The progress status of the export task. The status can be one of the
     * following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CANCELED&lt;/code&gt; &lt;/p&gt; &lt;/li&gt;
     * &lt;li&gt; &lt;p&gt; &lt;code&gt;CANCELING&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FAILED&lt;/code&gt;
     * &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IN_PROGRESS&lt;/code&gt; &lt;/p&gt; &lt;/li&gt;
     * &lt;li&gt; &lt;p&gt; &lt;code&gt;STARTING&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @param status the status value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the taskEndTime property: &lt;p&gt;The time when the snapshot or cluster export task ended.&lt;/p&gt;.
     * 
     * @return the taskEndTime value.
     */
    public OffsetDateTime taskEndTime() {
        return this.taskEndTime;
    }

    /**
     * Set the taskEndTime property: &lt;p&gt;The time when the snapshot or cluster export task ended.&lt;/p&gt;.
     * 
     * @param taskEndTime the taskEndTime value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withTaskEndTime(OffsetDateTime taskEndTime) {
        this.taskEndTime = taskEndTime;
        return this;
    }

    /**
     * Get the taskStartTime property: &lt;p&gt;The time when the snapshot or cluster export task started.&lt;/p&gt;.
     * 
     * @return the taskStartTime value.
     */
    public OffsetDateTime taskStartTime() {
        return this.taskStartTime;
    }

    /**
     * Set the taskStartTime property: &lt;p&gt;The time when the snapshot or cluster export task started.&lt;/p&gt;.
     * 
     * @param taskStartTime the taskStartTime value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withTaskStartTime(OffsetDateTime taskStartTime) {
        this.taskStartTime = taskStartTime;
        return this;
    }

    /**
     * Get the totalExtractedDataInGB property: &lt;p&gt;The total amount of data exported, in gigabytes.&lt;/p&gt;.
     * 
     * @return the totalExtractedDataInGB value.
     */
    public Integer totalExtractedDataInGB() {
        return this.totalExtractedDataInGB;
    }

    /**
     * Set the totalExtractedDataInGB property: &lt;p&gt;The total amount of data exported, in gigabytes.&lt;/p&gt;.
     * 
     * @param totalExtractedDataInGB the totalExtractedDataInGB value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withTotalExtractedDataInGB(Integer totalExtractedDataInGB) {
        this.totalExtractedDataInGB = totalExtractedDataInGB;
        return this;
    }

    /**
     * Get the warningMessage property: &lt;p&gt;A warning about the snapshot or cluster export task.&lt;/p&gt;.
     * 
     * @return the warningMessage value.
     */
    public String warningMessage() {
        return this.warningMessage;
    }

    /**
     * Set the warningMessage property: &lt;p&gt;A warning about the snapshot or cluster export task.&lt;/p&gt;.
     * 
     * @param warningMessage the warningMessage value to set.
     * @return the AwsRdsExportTaskProperties object itself.
     */
    public AwsRdsExportTaskProperties withWarningMessage(String warningMessage) {
        this.warningMessage = warningMessage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceType() != null) {
            sourceType().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("exportOnly", this.exportOnly, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("exportTaskIdentifier", this.exportTaskIdentifier);
        jsonWriter.writeStringField("failureCause", this.failureCause);
        jsonWriter.writeStringField("iamRoleArn", this.iamRoleArn);
        jsonWriter.writeStringField("kmsKeyId", this.kmsKeyId);
        jsonWriter.writeNumberField("percentProgress", this.percentProgress);
        jsonWriter.writeStringField("s3Bucket", this.s3Bucket);
        jsonWriter.writeStringField("s3Prefix", this.s3Prefix);
        jsonWriter.writeStringField("snapshotTime",
            this.snapshotTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.snapshotTime));
        jsonWriter.writeStringField("sourceArn", this.sourceArn);
        jsonWriter.writeJsonField("sourceType", this.sourceType);
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("taskEndTime",
            this.taskEndTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.taskEndTime));
        jsonWriter.writeStringField("taskStartTime",
            this.taskStartTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.taskStartTime));
        jsonWriter.writeNumberField("totalExtractedDataInGB", this.totalExtractedDataInGB);
        jsonWriter.writeStringField("warningMessage", this.warningMessage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsRdsExportTaskProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsRdsExportTaskProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsRdsExportTaskProperties.
     */
    public static AwsRdsExportTaskProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsRdsExportTaskProperties deserializedAwsRdsExportTaskProperties = new AwsRdsExportTaskProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("exportOnly".equals(fieldName)) {
                    List<String> exportOnly = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsRdsExportTaskProperties.exportOnly = exportOnly;
                } else if ("exportTaskIdentifier".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.exportTaskIdentifier = reader.getString();
                } else if ("failureCause".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.failureCause = reader.getString();
                } else if ("iamRoleArn".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.iamRoleArn = reader.getString();
                } else if ("kmsKeyId".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.kmsKeyId = reader.getString();
                } else if ("percentProgress".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.percentProgress = reader.getNullable(JsonReader::getInt);
                } else if ("s3Bucket".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.s3Bucket = reader.getString();
                } else if ("s3Prefix".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.s3Prefix = reader.getString();
                } else if ("snapshotTime".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.snapshotTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("sourceArn".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.sourceArn = reader.getString();
                } else if ("sourceType".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.sourceType = ExportSourceTypeEnumValue.fromJson(reader);
                } else if ("status".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.status = reader.getString();
                } else if ("taskEndTime".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.taskEndTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("taskStartTime".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.taskStartTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("totalExtractedDataInGB".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.totalExtractedDataInGB
                        = reader.getNullable(JsonReader::getInt);
                } else if ("warningMessage".equals(fieldName)) {
                    deserializedAwsRdsExportTaskProperties.warningMessage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsRdsExportTaskProperties;
        });
    }
}

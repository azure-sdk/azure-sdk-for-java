// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ElasticLoadBalancingV2TargetGroups.
 */
public interface ElasticLoadBalancingV2TargetGroups {
    /**
     * List ElasticLoadBalancingV2TargetGroup resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingV2TargetGroup list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingV2TargetGroup> list();

    /**
     * List ElasticLoadBalancingV2TargetGroup resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingV2TargetGroup list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingV2TargetGroup> list(Context context);

    /**
     * List ElasticLoadBalancingV2TargetGroup resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingV2TargetGroup list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingV2TargetGroup> listByResourceGroup(String resourceGroupName);

    /**
     * List ElasticLoadBalancingV2TargetGroup resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingV2TargetGroup list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingV2TargetGroup> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingV2TargetGroup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingV2TargetGroup along with {@link Response}.
     */
    Response<ElasticLoadBalancingV2TargetGroup> getByResourceGroupWithResponse(String resourceGroupName, String name,
        Context context);

    /**
     * Get a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingV2TargetGroup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingV2TargetGroup.
     */
    ElasticLoadBalancingV2TargetGroup getByResourceGroup(String resourceGroupName, String name);

    /**
     * Delete a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingV2TargetGroup.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String name);

    /**
     * Delete a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingV2TargetGroup.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String name, Context context);

    /**
     * Get a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingV2TargetGroup along with {@link Response}.
     */
    ElasticLoadBalancingV2TargetGroup getById(String id);

    /**
     * Get a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingV2TargetGroup along with {@link Response}.
     */
    Response<ElasticLoadBalancingV2TargetGroup> getByIdWithResponse(String id, Context context);

    /**
     * Delete a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a ElasticLoadBalancingV2TargetGroup.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ElasticLoadBalancingV2TargetGroup resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ElasticLoadBalancingV2TargetGroup definition.
     */
    ElasticLoadBalancingV2TargetGroup.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 * Definition of awsSageMakerNotebookInstanceSummary.
 */
@Fluent
public final class AwsSageMakerNotebookInstanceSummaryProperties
    implements JsonSerializable<AwsSageMakerNotebookInstanceSummaryProperties> {
    /*
     * <p>An array of up to three Git repositories associated with the notebook instance. These can be either the names
     * of Git repositories stored as resources in your account, or the URL of Git repositories in <a
     * href='https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html'>Amazon Web Services CodeCommit</a> or
     * in any other Git repository. These repositories are cloned at the same level as the default repository of your
     * notebook instance. For more information, see <a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html'>Associating Git Repositories with
     * SageMaker Notebook Instances</a>.</p>
     */
    private List<String> additionalCodeRepositories;

    /*
     * <p>A timestamp that shows when the notebook instance was created.</p>
     */
    private OffsetDateTime creationTime;

    /*
     * <p>The Git repository associated with the notebook instance as its default code repository. This can be either
     * the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a
     * href='https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html'>Amazon Web Services CodeCommit</a> or
     * in any other Git repository. When you open a notebook instance, it opens in the directory that contains this
     * repository. For more information, see <a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html'>Associating Git Repositories with
     * SageMaker Notebook Instances</a>.</p>
     */
    private String defaultCodeRepository;

    /*
     * <p>The type of ML compute instance that the notebook instance is running on.</p>
     */
    private InstanceTypeEnumValue instanceType;

    /*
     * <p>A timestamp that shows when the notebook instance was last modified.</p>
     */
    private OffsetDateTime lastModifiedTime;

    /*
     * <p>The Amazon Resource Name (ARN) of the notebook instance.</p>
     */
    private String notebookInstanceArn;

    /*
     * <p>The name of a notebook instance lifecycle configuration associated with this notebook instance.</p> <p>For
     * information about notebook instance lifestyle configurations, see <a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html'>Step 2.1: (Optional)
     * Customize a Notebook Instance</a>.</p>
     */
    private String notebookInstanceLifecycleConfigName;

    /*
     * <p>The name of the notebook instance that you want a summary for.</p>
     */
    private String notebookInstanceName;

    /*
     * <p>The status of the notebook instance.</p>
     */
    private NotebookInstanceStatusEnumValue notebookInstanceStatus;

    /*
     * <p>The URL that you use to connect to the Jupyter notebook running in your notebook instance. </p>
     */
    private String url;

    /**
     * Creates an instance of AwsSageMakerNotebookInstanceSummaryProperties class.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties() {
    }

    /**
     * Get the additionalCodeRepositories property: &lt;p&gt;An array of up to three Git repositories associated with
     * the notebook instance. These can be either the names of Git repositories stored as resources in your account, or
     * the URL of Git repositories in &lt;a
     * href='https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html'&gt;Amazon Web Services
     * CodeCommit&lt;/a&gt; or in any other Git repository. These repositories are cloned at the same level as the
     * default repository of your notebook instance. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html'&gt;Associating Git Repositories with
     * SageMaker Notebook Instances&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @return the additionalCodeRepositories value.
     */
    public List<String> additionalCodeRepositories() {
        return this.additionalCodeRepositories;
    }

    /**
     * Set the additionalCodeRepositories property: &lt;p&gt;An array of up to three Git repositories associated with
     * the notebook instance. These can be either the names of Git repositories stored as resources in your account, or
     * the URL of Git repositories in &lt;a
     * href='https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html'&gt;Amazon Web Services
     * CodeCommit&lt;/a&gt; or in any other Git repository. These repositories are cloned at the same level as the
     * default repository of your notebook instance. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html'&gt;Associating Git Repositories with
     * SageMaker Notebook Instances&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @param additionalCodeRepositories the additionalCodeRepositories value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties
        withAdditionalCodeRepositories(List<String> additionalCodeRepositories) {
        this.additionalCodeRepositories = additionalCodeRepositories;
        return this;
    }

    /**
     * Get the creationTime property: &lt;p&gt;A timestamp that shows when the notebook instance was created.&lt;/p&gt;.
     * 
     * @return the creationTime value.
     */
    public OffsetDateTime creationTime() {
        return this.creationTime;
    }

    /**
     * Set the creationTime property: &lt;p&gt;A timestamp that shows when the notebook instance was created.&lt;/p&gt;.
     * 
     * @param creationTime the creationTime value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get the defaultCodeRepository property: &lt;p&gt;The Git repository associated with the notebook instance as its
     * default code repository. This can be either the name of a Git repository stored as a resource in your account, or
     * the URL of a Git repository in &lt;a
     * href='https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html'&gt;Amazon Web Services
     * CodeCommit&lt;/a&gt; or in any other Git repository. When you open a notebook instance, it opens in the directory
     * that contains this repository. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html'&gt;Associating Git Repositories with
     * SageMaker Notebook Instances&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @return the defaultCodeRepository value.
     */
    public String defaultCodeRepository() {
        return this.defaultCodeRepository;
    }

    /**
     * Set the defaultCodeRepository property: &lt;p&gt;The Git repository associated with the notebook instance as its
     * default code repository. This can be either the name of a Git repository stored as a resource in your account, or
     * the URL of a Git repository in &lt;a
     * href='https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html'&gt;Amazon Web Services
     * CodeCommit&lt;/a&gt; or in any other Git repository. When you open a notebook instance, it opens in the directory
     * that contains this repository. For more information, see &lt;a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html'&gt;Associating Git Repositories with
     * SageMaker Notebook Instances&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @param defaultCodeRepository the defaultCodeRepository value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withDefaultCodeRepository(String defaultCodeRepository) {
        this.defaultCodeRepository = defaultCodeRepository;
        return this;
    }

    /**
     * Get the instanceType property: &lt;p&gt;The type of ML compute instance that the notebook instance is running
     * on.&lt;/p&gt;.
     * 
     * @return the instanceType value.
     */
    public InstanceTypeEnumValue instanceType() {
        return this.instanceType;
    }

    /**
     * Set the instanceType property: &lt;p&gt;The type of ML compute instance that the notebook instance is running
     * on.&lt;/p&gt;.
     * 
     * @param instanceType the instanceType value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withInstanceType(InstanceTypeEnumValue instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * Get the lastModifiedTime property: &lt;p&gt;A timestamp that shows when the notebook instance was last
     * modified.&lt;/p&gt;.
     * 
     * @return the lastModifiedTime value.
     */
    public OffsetDateTime lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * Set the lastModifiedTime property: &lt;p&gt;A timestamp that shows when the notebook instance was last
     * modified.&lt;/p&gt;.
     * 
     * @param lastModifiedTime the lastModifiedTime value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }

    /**
     * Get the notebookInstanceArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the notebook
     * instance.&lt;/p&gt;.
     * 
     * @return the notebookInstanceArn value.
     */
    public String notebookInstanceArn() {
        return this.notebookInstanceArn;
    }

    /**
     * Set the notebookInstanceArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the notebook
     * instance.&lt;/p&gt;.
     * 
     * @param notebookInstanceArn the notebookInstanceArn value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withNotebookInstanceArn(String notebookInstanceArn) {
        this.notebookInstanceArn = notebookInstanceArn;
        return this;
    }

    /**
     * Get the notebookInstanceLifecycleConfigName property: &lt;p&gt;The name of a notebook instance lifecycle
     * configuration associated with this notebook instance.&lt;/p&gt; &lt;p&gt;For information about notebook instance
     * lifestyle configurations, see &lt;a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html'&gt;Step 2.1: (Optional)
     * Customize a Notebook Instance&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @return the notebookInstanceLifecycleConfigName value.
     */
    public String notebookInstanceLifecycleConfigName() {
        return this.notebookInstanceLifecycleConfigName;
    }

    /**
     * Set the notebookInstanceLifecycleConfigName property: &lt;p&gt;The name of a notebook instance lifecycle
     * configuration associated with this notebook instance.&lt;/p&gt; &lt;p&gt;For information about notebook instance
     * lifestyle configurations, see &lt;a
     * href='https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html'&gt;Step 2.1: (Optional)
     * Customize a Notebook Instance&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @param notebookInstanceLifecycleConfigName the notebookInstanceLifecycleConfigName value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties
        withNotebookInstanceLifecycleConfigName(String notebookInstanceLifecycleConfigName) {
        this.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName;
        return this;
    }

    /**
     * Get the notebookInstanceName property: &lt;p&gt;The name of the notebook instance that you want a summary
     * for.&lt;/p&gt;.
     * 
     * @return the notebookInstanceName value.
     */
    public String notebookInstanceName() {
        return this.notebookInstanceName;
    }

    /**
     * Set the notebookInstanceName property: &lt;p&gt;The name of the notebook instance that you want a summary
     * for.&lt;/p&gt;.
     * 
     * @param notebookInstanceName the notebookInstanceName value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withNotebookInstanceName(String notebookInstanceName) {
        this.notebookInstanceName = notebookInstanceName;
        return this;
    }

    /**
     * Get the notebookInstanceStatus property: &lt;p&gt;The status of the notebook instance.&lt;/p&gt;.
     * 
     * @return the notebookInstanceStatus value.
     */
    public NotebookInstanceStatusEnumValue notebookInstanceStatus() {
        return this.notebookInstanceStatus;
    }

    /**
     * Set the notebookInstanceStatus property: &lt;p&gt;The status of the notebook instance.&lt;/p&gt;.
     * 
     * @param notebookInstanceStatus the notebookInstanceStatus value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties
        withNotebookInstanceStatus(NotebookInstanceStatusEnumValue notebookInstanceStatus) {
        this.notebookInstanceStatus = notebookInstanceStatus;
        return this;
    }

    /**
     * Get the url property: &lt;p&gt;The URL that you use to connect to the Jupyter notebook running in your notebook
     * instance. &lt;/p&gt;.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: &lt;p&gt;The URL that you use to connect to the Jupyter notebook running in your notebook
     * instance. &lt;/p&gt;.
     * 
     * @param url the url value to set.
     * @return the AwsSageMakerNotebookInstanceSummaryProperties object itself.
     */
    public AwsSageMakerNotebookInstanceSummaryProperties withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (instanceType() != null) {
            instanceType().validate();
        }
        if (notebookInstanceStatus() != null) {
            notebookInstanceStatus().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("additionalCodeRepositories", this.additionalCodeRepositories,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("creationTime",
            this.creationTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.creationTime));
        jsonWriter.writeStringField("defaultCodeRepository", this.defaultCodeRepository);
        jsonWriter.writeJsonField("instanceType", this.instanceType);
        jsonWriter.writeStringField("lastModifiedTime",
            this.lastModifiedTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastModifiedTime));
        jsonWriter.writeStringField("notebookInstanceArn", this.notebookInstanceArn);
        jsonWriter.writeStringField("notebookInstanceLifecycleConfigName", this.notebookInstanceLifecycleConfigName);
        jsonWriter.writeStringField("notebookInstanceName", this.notebookInstanceName);
        jsonWriter.writeJsonField("notebookInstanceStatus", this.notebookInstanceStatus);
        jsonWriter.writeStringField("url", this.url);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsSageMakerNotebookInstanceSummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsSageMakerNotebookInstanceSummaryProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsSageMakerNotebookInstanceSummaryProperties.
     */
    public static AwsSageMakerNotebookInstanceSummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsSageMakerNotebookInstanceSummaryProperties deserializedAwsSageMakerNotebookInstanceSummaryProperties
                = new AwsSageMakerNotebookInstanceSummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("additionalCodeRepositories".equals(fieldName)) {
                    List<String> additionalCodeRepositories = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.additionalCodeRepositories
                        = additionalCodeRepositories;
                } else if ("creationTime".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.creationTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("defaultCodeRepository".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.defaultCodeRepository
                        = reader.getString();
                } else if ("instanceType".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.instanceType
                        = InstanceTypeEnumValue.fromJson(reader);
                } else if ("lastModifiedTime".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.lastModifiedTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("notebookInstanceArn".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.notebookInstanceArn = reader.getString();
                } else if ("notebookInstanceLifecycleConfigName".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.notebookInstanceLifecycleConfigName
                        = reader.getString();
                } else if ("notebookInstanceName".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.notebookInstanceName = reader.getString();
                } else if ("notebookInstanceStatus".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.notebookInstanceStatus
                        = NotebookInstanceStatusEnumValue.fromJson(reader);
                } else if ("url".equals(fieldName)) {
                    deserializedAwsSageMakerNotebookInstanceSummaryProperties.url = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsSageMakerNotebookInstanceSummaryProperties;
        });
    }
}

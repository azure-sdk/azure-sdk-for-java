// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ServiceVolumeConfiguration.
 */
@Fluent
public final class ServiceVolumeConfiguration implements JsonSerializable<ServiceVolumeConfiguration> {
    /*
     * The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings
     * are used to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS
     * volumes are visible in your account in the Amazon EC2 console once they are created. The configuration for the
     * Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each
     * Amazon EBS volume, with one volume created for each task in the service. Many of these parameters map 1:1 with
     * the Amazon EBS ``CreateVolume`` API request parameters.
     */
    private ServiceManagedEbsVolumeConfiguration managedEbsVolume;

    /*
     * The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
     */
    private String name;

    /**
     * Creates an instance of ServiceVolumeConfiguration class.
     */
    public ServiceVolumeConfiguration() {
    }

    /**
     * Get the managedEbsVolume property: The configuration for the Amazon EBS volume that Amazon ECS creates and
     * manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for
     * each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they
     * are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf.
     * These settings are used to create each Amazon EBS volume, with one volume created for each task in the service.
     * Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
     * 
     * @return the managedEbsVolume value.
     */
    public ServiceManagedEbsVolumeConfiguration managedEbsVolume() {
        return this.managedEbsVolume;
    }

    /**
     * Set the managedEbsVolume property: The configuration for the Amazon EBS volume that Amazon ECS creates and
     * manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for
     * each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they
     * are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf.
     * These settings are used to create each Amazon EBS volume, with one volume created for each task in the service.
     * Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
     * 
     * @param managedEbsVolume the managedEbsVolume value to set.
     * @return the ServiceVolumeConfiguration object itself.
     */
    public ServiceVolumeConfiguration withManagedEbsVolume(ServiceManagedEbsVolumeConfiguration managedEbsVolume) {
        this.managedEbsVolume = managedEbsVolume;
        return this;
    }

    /**
     * Get the name property: The name of the volume. This value must match the volume name from the ``Volume`` object
     * in the task definition.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the volume. This value must match the volume name from the ``Volume`` object
     * in the task definition.
     * 
     * @param name the name value to set.
     * @return the ServiceVolumeConfiguration object itself.
     */
    public ServiceVolumeConfiguration withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (managedEbsVolume() != null) {
            managedEbsVolume().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("managedEBSVolume", this.managedEbsVolume);
        jsonWriter.writeStringField("name", this.name);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServiceVolumeConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServiceVolumeConfiguration if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServiceVolumeConfiguration.
     */
    public static ServiceVolumeConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServiceVolumeConfiguration deserializedServiceVolumeConfiguration = new ServiceVolumeConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("managedEBSVolume".equals(fieldName)) {
                    deserializedServiceVolumeConfiguration.managedEbsVolume
                        = ServiceManagedEbsVolumeConfiguration.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedServiceVolumeConfiguration.name = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServiceVolumeConfiguration;
        });
    }
}

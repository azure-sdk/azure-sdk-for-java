// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Definition of ComplianceExecutionSummary.
 */
@Fluent
public final class ComplianceExecutionSummary implements JsonSerializable<ComplianceExecutionSummary> {
    /*
     * <p>An ID created by the system when <code>PutComplianceItems</code> was called. For example,
     * <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.</p>
     */
    private String executionId;

    /*
     * <p>The time the execution ran as a datetime object that is saved in the following format:
     * <code>yyyy-MM-dd'T'HH:mm:ss'Z'</code> </p>
     */
    private OffsetDateTime executionTime;

    /*
     * <p>The type of execution. For example, <code>Command</code> is a valid execution type.</p>
     */
    private String executionType;

    /**
     * Creates an instance of ComplianceExecutionSummary class.
     */
    public ComplianceExecutionSummary() {
    }

    /**
     * Get the executionId property: &lt;p&gt;An ID created by the system when
     * &lt;code&gt;PutComplianceItems&lt;/code&gt; was called. For example, &lt;code&gt;CommandID&lt;/code&gt; is a
     * valid execution ID. You can use this ID in subsequent calls.&lt;/p&gt;.
     * 
     * @return the executionId value.
     */
    public String executionId() {
        return this.executionId;
    }

    /**
     * Set the executionId property: &lt;p&gt;An ID created by the system when
     * &lt;code&gt;PutComplianceItems&lt;/code&gt; was called. For example, &lt;code&gt;CommandID&lt;/code&gt; is a
     * valid execution ID. You can use this ID in subsequent calls.&lt;/p&gt;.
     * 
     * @param executionId the executionId value to set.
     * @return the ComplianceExecutionSummary object itself.
     */
    public ComplianceExecutionSummary withExecutionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * Get the executionTime property: &lt;p&gt;The time the execution ran as a datetime object that is saved in the
     * following format: &lt;code&gt;yyyy-MM-dd'T'HH:mm:ss'Z'&lt;/code&gt; &lt;/p&gt;.
     * 
     * @return the executionTime value.
     */
    public OffsetDateTime executionTime() {
        return this.executionTime;
    }

    /**
     * Set the executionTime property: &lt;p&gt;The time the execution ran as a datetime object that is saved in the
     * following format: &lt;code&gt;yyyy-MM-dd'T'HH:mm:ss'Z'&lt;/code&gt; &lt;/p&gt;.
     * 
     * @param executionTime the executionTime value to set.
     * @return the ComplianceExecutionSummary object itself.
     */
    public ComplianceExecutionSummary withExecutionTime(OffsetDateTime executionTime) {
        this.executionTime = executionTime;
        return this;
    }

    /**
     * Get the executionType property: &lt;p&gt;The type of execution. For example, &lt;code&gt;Command&lt;/code&gt; is
     * a valid execution type.&lt;/p&gt;.
     * 
     * @return the executionType value.
     */
    public String executionType() {
        return this.executionType;
    }

    /**
     * Set the executionType property: &lt;p&gt;The type of execution. For example, &lt;code&gt;Command&lt;/code&gt; is
     * a valid execution type.&lt;/p&gt;.
     * 
     * @param executionType the executionType value to set.
     * @return the ComplianceExecutionSummary object itself.
     */
    public ComplianceExecutionSummary withExecutionType(String executionType) {
        this.executionType = executionType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("executionId", this.executionId);
        jsonWriter.writeStringField("executionTime",
            this.executionTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.executionTime));
        jsonWriter.writeStringField("executionType", this.executionType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComplianceExecutionSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComplianceExecutionSummary if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComplianceExecutionSummary.
     */
    public static ComplianceExecutionSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComplianceExecutionSummary deserializedComplianceExecutionSummary = new ComplianceExecutionSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("executionId".equals(fieldName)) {
                    deserializedComplianceExecutionSummary.executionId = reader.getString();
                } else if ("executionTime".equals(fieldName)) {
                    deserializedComplianceExecutionSummary.executionTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("executionType".equals(fieldName)) {
                    deserializedComplianceExecutionSummary.executionType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComplianceExecutionSummary;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ReplicationDestination.
 */
@Fluent
public final class ReplicationDestination implements JsonSerializable<ReplicationDestination> {
    /*
     * The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the
     * destination file system is located. Use the format ``us-east-1a`` to specify the Availability Zone. For more
     * information about One Zone file systems, see [EFS file system
     * types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*. One Zone
     * file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
     */
    private String availabilityZoneName;

    /*
     * The ID of the destination Amazon EFS file system.
     */
    private String fileSystemId;

    /*
     * The ID of an kms-key-long used to protect the encrypted file system.
     */
    private String kmsKeyId;

    /*
     * The AWS-Region in which the destination file system is located. For One Zone file systems, the replication
     * configuration must specify the AWS-Region in which the destination file system is located.
     */
    private String region;

    /**
     * Creates an instance of ReplicationDestination class.
     */
    public ReplicationDestination() {
    }

    /**
     * Get the availabilityZoneName property: The AWS For One Zone file systems, the replication configuration must
     * specify the Availability Zone in which the destination file system is located. Use the format ``us-east-1a`` to
     * specify the Availability Zone. For more information about One Zone file systems, see [EFS file system
     * types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*. One Zone
     * file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
     * 
     * @return the availabilityZoneName value.
     */
    public String availabilityZoneName() {
        return this.availabilityZoneName;
    }

    /**
     * Set the availabilityZoneName property: The AWS For One Zone file systems, the replication configuration must
     * specify the Availability Zone in which the destination file system is located. Use the format ``us-east-1a`` to
     * specify the Availability Zone. For more information about One Zone file systems, see [EFS file system
     * types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*. One Zone
     * file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
     * 
     * @param availabilityZoneName the availabilityZoneName value to set.
     * @return the ReplicationDestination object itself.
     */
    public ReplicationDestination withAvailabilityZoneName(String availabilityZoneName) {
        this.availabilityZoneName = availabilityZoneName;
        return this;
    }

    /**
     * Get the fileSystemId property: The ID of the destination Amazon EFS file system.
     * 
     * @return the fileSystemId value.
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }

    /**
     * Set the fileSystemId property: The ID of the destination Amazon EFS file system.
     * 
     * @param fileSystemId the fileSystemId value to set.
     * @return the ReplicationDestination object itself.
     */
    public ReplicationDestination withFileSystemId(String fileSystemId) {
        this.fileSystemId = fileSystemId;
        return this;
    }

    /**
     * Get the kmsKeyId property: The ID of an kms-key-long used to protect the encrypted file system.
     * 
     * @return the kmsKeyId value.
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Set the kmsKeyId property: The ID of an kms-key-long used to protect the encrypted file system.
     * 
     * @param kmsKeyId the kmsKeyId value to set.
     * @return the ReplicationDestination object itself.
     */
    public ReplicationDestination withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }

    /**
     * Get the region property: The AWS-Region in which the destination file system is located. For One Zone file
     * systems, the replication configuration must specify the AWS-Region in which the destination file system is
     * located.
     * 
     * @return the region value.
     */
    public String region() {
        return this.region;
    }

    /**
     * Set the region property: The AWS-Region in which the destination file system is located. For One Zone file
     * systems, the replication configuration must specify the AWS-Region in which the destination file system is
     * located.
     * 
     * @param region the region value to set.
     * @return the ReplicationDestination object itself.
     */
    public ReplicationDestination withRegion(String region) {
        this.region = region;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("availabilityZoneName", this.availabilityZoneName);
        jsonWriter.writeStringField("fileSystemId", this.fileSystemId);
        jsonWriter.writeStringField("kmsKeyId", this.kmsKeyId);
        jsonWriter.writeStringField("region", this.region);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReplicationDestination from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReplicationDestination if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReplicationDestination.
     */
    public static ReplicationDestination fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReplicationDestination deserializedReplicationDestination = new ReplicationDestination();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availabilityZoneName".equals(fieldName)) {
                    deserializedReplicationDestination.availabilityZoneName = reader.getString();
                } else if ("fileSystemId".equals(fieldName)) {
                    deserializedReplicationDestination.fileSystemId = reader.getString();
                } else if ("kmsKeyId".equals(fieldName)) {
                    deserializedReplicationDestination.kmsKeyId = reader.getString();
                } else if ("region".equals(fieldName)) {
                    deserializedReplicationDestination.region = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReplicationDestination;
        });
    }
}

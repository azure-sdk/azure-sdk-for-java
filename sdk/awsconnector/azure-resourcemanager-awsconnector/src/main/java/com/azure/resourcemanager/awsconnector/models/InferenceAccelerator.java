// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of InferenceAccelerator.
 */
@Fluent
public final class InferenceAccelerator implements JsonSerializable<InferenceAccelerator> {
    /*
     * The Elastic Inference accelerator device name. The ``deviceName`` must also be referenced in a container
     * definition as a
     * [ResourceRequirement](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ResourceRequirement.html).
     */
    private String deviceName;

    /*
     * The Elastic Inference accelerator type to use.
     */
    private String deviceType;

    /**
     * Creates an instance of InferenceAccelerator class.
     */
    public InferenceAccelerator() {
    }

    /**
     * Get the deviceName property: The Elastic Inference accelerator device name. The ``deviceName`` must also be
     * referenced in a container definition as a
     * [ResourceRequirement](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ResourceRequirement.html).
     * 
     * @return the deviceName value.
     */
    public String deviceName() {
        return this.deviceName;
    }

    /**
     * Set the deviceName property: The Elastic Inference accelerator device name. The ``deviceName`` must also be
     * referenced in a container definition as a
     * [ResourceRequirement](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ResourceRequirement.html).
     * 
     * @param deviceName the deviceName value to set.
     * @return the InferenceAccelerator object itself.
     */
    public InferenceAccelerator withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }

    /**
     * Get the deviceType property: The Elastic Inference accelerator type to use.
     * 
     * @return the deviceType value.
     */
    public String deviceType() {
        return this.deviceType;
    }

    /**
     * Set the deviceType property: The Elastic Inference accelerator type to use.
     * 
     * @param deviceType the deviceType value to set.
     * @return the InferenceAccelerator object itself.
     */
    public InferenceAccelerator withDeviceType(String deviceType) {
        this.deviceType = deviceType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("deviceName", this.deviceName);
        jsonWriter.writeStringField("deviceType", this.deviceType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InferenceAccelerator from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InferenceAccelerator if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the InferenceAccelerator.
     */
    public static InferenceAccelerator fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InferenceAccelerator deserializedInferenceAccelerator = new InferenceAccelerator();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("deviceName".equals(fieldName)) {
                    deserializedInferenceAccelerator.deviceName = reader.getString();
                } else if ("deviceType".equals(fieldName)) {
                    deserializedInferenceAccelerator.deviceType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInferenceAccelerator;
        });
    }
}

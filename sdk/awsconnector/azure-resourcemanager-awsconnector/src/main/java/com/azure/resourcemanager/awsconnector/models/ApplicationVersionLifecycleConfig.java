// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ApplicationVersionLifecycleConfig.
 */
@Fluent
public final class ApplicationVersionLifecycleConfig implements JsonSerializable<ApplicationVersionLifecycleConfig> {
    /*
     * Specify a max age rule to restrict the length of time that application versions are retained for an application.
     */
    private MaxAgeRule maxAgeRule;

    /*
     * Specify a max count rule to restrict the number of application versions that are retained for an application.
     */
    private MaxCountRule maxCountRule;

    /**
     * Creates an instance of ApplicationVersionLifecycleConfig class.
     */
    public ApplicationVersionLifecycleConfig() {
    }

    /**
     * Get the maxAgeRule property: Specify a max age rule to restrict the length of time that application versions are
     * retained for an application.
     * 
     * @return the maxAgeRule value.
     */
    public MaxAgeRule maxAgeRule() {
        return this.maxAgeRule;
    }

    /**
     * Set the maxAgeRule property: Specify a max age rule to restrict the length of time that application versions are
     * retained for an application.
     * 
     * @param maxAgeRule the maxAgeRule value to set.
     * @return the ApplicationVersionLifecycleConfig object itself.
     */
    public ApplicationVersionLifecycleConfig withMaxAgeRule(MaxAgeRule maxAgeRule) {
        this.maxAgeRule = maxAgeRule;
        return this;
    }

    /**
     * Get the maxCountRule property: Specify a max count rule to restrict the number of application versions that are
     * retained for an application.
     * 
     * @return the maxCountRule value.
     */
    public MaxCountRule maxCountRule() {
        return this.maxCountRule;
    }

    /**
     * Set the maxCountRule property: Specify a max count rule to restrict the number of application versions that are
     * retained for an application.
     * 
     * @param maxCountRule the maxCountRule value to set.
     * @return the ApplicationVersionLifecycleConfig object itself.
     */
    public ApplicationVersionLifecycleConfig withMaxCountRule(MaxCountRule maxCountRule) {
        this.maxCountRule = maxCountRule;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (maxAgeRule() != null) {
            maxAgeRule().validate();
        }
        if (maxCountRule() != null) {
            maxCountRule().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("maxAgeRule", this.maxAgeRule);
        jsonWriter.writeJsonField("maxCountRule", this.maxCountRule);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApplicationVersionLifecycleConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApplicationVersionLifecycleConfig if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApplicationVersionLifecycleConfig.
     */
    public static ApplicationVersionLifecycleConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApplicationVersionLifecycleConfig deserializedApplicationVersionLifecycleConfig
                = new ApplicationVersionLifecycleConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("maxAgeRule".equals(fieldName)) {
                    deserializedApplicationVersionLifecycleConfig.maxAgeRule = MaxAgeRule.fromJson(reader);
                } else if ("maxCountRule".equals(fieldName)) {
                    deserializedApplicationVersionLifecycleConfig.maxCountRule = MaxCountRule.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApplicationVersionLifecycleConfig;
        });
    }
}

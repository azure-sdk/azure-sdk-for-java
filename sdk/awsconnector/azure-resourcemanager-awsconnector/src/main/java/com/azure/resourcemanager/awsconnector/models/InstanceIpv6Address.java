// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of InstanceIpv6Address.
 */
@Fluent
public final class InstanceIpv6Address implements JsonSerializable<InstanceIpv6Address> {
    /*
     * <p>The IPv6 address.</p>
     */
    private String ipv6Address;

    /*
     * <p>Determines if an IPv6 address associated with a network interface is the primary IPv6 address. When you enable
     * an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the
     * instance is terminated or the network interface is detached. For more information, see <a
     * href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'>RunInstances</a>.</p>
     */
    private Boolean isPrimaryIpv6;

    /**
     * Creates an instance of InstanceIpv6Address class.
     */
    public InstanceIpv6Address() {
    }

    /**
     * Get the ipv6Address property: &lt;p&gt;The IPv6 address.&lt;/p&gt;.
     * 
     * @return the ipv6Address value.
     */
    public String ipv6Address() {
        return this.ipv6Address;
    }

    /**
     * Set the ipv6Address property: &lt;p&gt;The IPv6 address.&lt;/p&gt;.
     * 
     * @param ipv6Address the ipv6Address value to set.
     * @return the InstanceIpv6Address object itself.
     */
    public InstanceIpv6Address withIpv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
        return this;
    }

    /**
     * Get the isPrimaryIpv6 property: &lt;p&gt;Determines if an IPv6 address associated with a network interface is the
     * primary IPv6 address. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made
     * the primary IPv6 address until the instance is terminated or the network interface is detached. For more
     * information, see &lt;a
     * href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'&gt;RunInstances&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @return the isPrimaryIpv6 value.
     */
    public Boolean isPrimaryIpv6() {
        return this.isPrimaryIpv6;
    }

    /**
     * Set the isPrimaryIpv6 property: &lt;p&gt;Determines if an IPv6 address associated with a network interface is the
     * primary IPv6 address. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made
     * the primary IPv6 address until the instance is terminated or the network interface is detached. For more
     * information, see &lt;a
     * href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'&gt;RunInstances&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @param isPrimaryIpv6 the isPrimaryIpv6 value to set.
     * @return the InstanceIpv6Address object itself.
     */
    public InstanceIpv6Address withIsPrimaryIpv6(Boolean isPrimaryIpv6) {
        this.isPrimaryIpv6 = isPrimaryIpv6;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("ipv6Address", this.ipv6Address);
        jsonWriter.writeBooleanField("isPrimaryIpv6", this.isPrimaryIpv6);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InstanceIpv6Address from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InstanceIpv6Address if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the InstanceIpv6Address.
     */
    public static InstanceIpv6Address fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InstanceIpv6Address deserializedInstanceIpv6Address = new InstanceIpv6Address();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("ipv6Address".equals(fieldName)) {
                    deserializedInstanceIpv6Address.ipv6Address = reader.getString();
                } else if ("isPrimaryIpv6".equals(fieldName)) {
                    deserializedInstanceIpv6Address.isPrimaryIpv6 = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedInstanceIpv6Address;
        });
    }
}

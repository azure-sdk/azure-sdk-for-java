// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of AttributeDefinition.
 */
@Fluent
public final class AttributeDefinition implements JsonSerializable<AttributeDefinition> {
    /*
     * A name for the attribute.
     */
    private String attributeName;

    /*
     * The data type for the attribute, where: + ``S`` - the attribute is of type String + ``N`` - the attribute is of
     * type Number + ``B`` - the attribute is of type Binary
     */
    private String attributeType;

    /**
     * Creates an instance of AttributeDefinition class.
     */
    public AttributeDefinition() {
    }

    /**
     * Get the attributeName property: A name for the attribute.
     * 
     * @return the attributeName value.
     */
    public String attributeName() {
        return this.attributeName;
    }

    /**
     * Set the attributeName property: A name for the attribute.
     * 
     * @param attributeName the attributeName value to set.
     * @return the AttributeDefinition object itself.
     */
    public AttributeDefinition withAttributeName(String attributeName) {
        this.attributeName = attributeName;
        return this;
    }

    /**
     * Get the attributeType property: The data type for the attribute, where: + ``S`` - the attribute is of type String
     * + ``N`` - the attribute is of type Number + ``B`` - the attribute is of type Binary.
     * 
     * @return the attributeType value.
     */
    public String attributeType() {
        return this.attributeType;
    }

    /**
     * Set the attributeType property: The data type for the attribute, where: + ``S`` - the attribute is of type String
     * + ``N`` - the attribute is of type Number + ``B`` - the attribute is of type Binary.
     * 
     * @param attributeType the attributeType value to set.
     * @return the AttributeDefinition object itself.
     */
    public AttributeDefinition withAttributeType(String attributeType) {
        this.attributeType = attributeType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("attributeName", this.attributeName);
        jsonWriter.writeStringField("attributeType", this.attributeType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AttributeDefinition from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AttributeDefinition if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AttributeDefinition.
     */
    public static AttributeDefinition fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AttributeDefinition deserializedAttributeDefinition = new AttributeDefinition();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("attributeName".equals(fieldName)) {
                    deserializedAttributeDefinition.attributeName = reader.getString();
                } else if ("attributeType".equals(fieldName)) {
                    deserializedAttributeDefinition.attributeType = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAttributeDefinition;
        });
    }
}

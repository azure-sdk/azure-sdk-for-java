// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of StatelessRulesAndCustomActions.
 */
@Fluent
public final class StatelessRulesAndCustomActions implements JsonSerializable<StatelessRulesAndCustomActions> {
    /*
     * Property customActions
     */
    private List<CustomActionAutoGenerated> customActions;

    /*
     * Property statelessRules
     */
    private List<StatelessRule> statelessRules;

    /**
     * Creates an instance of StatelessRulesAndCustomActions class.
     */
    public StatelessRulesAndCustomActions() {
    }

    /**
     * Get the customActions property: Property customActions.
     * 
     * @return the customActions value.
     */
    public List<CustomActionAutoGenerated> customActions() {
        return this.customActions;
    }

    /**
     * Set the customActions property: Property customActions.
     * 
     * @param customActions the customActions value to set.
     * @return the StatelessRulesAndCustomActions object itself.
     */
    public StatelessRulesAndCustomActions withCustomActions(List<CustomActionAutoGenerated> customActions) {
        this.customActions = customActions;
        return this;
    }

    /**
     * Get the statelessRules property: Property statelessRules.
     * 
     * @return the statelessRules value.
     */
    public List<StatelessRule> statelessRules() {
        return this.statelessRules;
    }

    /**
     * Set the statelessRules property: Property statelessRules.
     * 
     * @param statelessRules the statelessRules value to set.
     * @return the StatelessRulesAndCustomActions object itself.
     */
    public StatelessRulesAndCustomActions withStatelessRules(List<StatelessRule> statelessRules) {
        this.statelessRules = statelessRules;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customActions() != null) {
            customActions().forEach(e -> e.validate());
        }
        if (statelessRules() != null) {
            statelessRules().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("customActions", this.customActions, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("statelessRules", this.statelessRules,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StatelessRulesAndCustomActions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StatelessRulesAndCustomActions if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StatelessRulesAndCustomActions.
     */
    public static StatelessRulesAndCustomActions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StatelessRulesAndCustomActions deserializedStatelessRulesAndCustomActions
                = new StatelessRulesAndCustomActions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("customActions".equals(fieldName)) {
                    List<CustomActionAutoGenerated> customActions
                        = reader.readArray(reader1 -> CustomActionAutoGenerated.fromJson(reader1));
                    deserializedStatelessRulesAndCustomActions.customActions = customActions;
                } else if ("statelessRules".equals(fieldName)) {
                    List<StatelessRule> statelessRules = reader.readArray(reader1 -> StatelessRule.fromJson(reader1));
                    deserializedStatelessRulesAndCustomActions.statelessRules = statelessRules;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStatelessRulesAndCustomActions;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of CloudWatchLogsConfig.
 */
@Fluent
public final class CloudWatchLogsConfig implements JsonSerializable<CloudWatchLogsConfig> {
    /*
     * <p> The group name of the logs in CloudWatch Logs. For more information, see <a
     * href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
     * with Log Groups and Log Streams</a>. </p>
     */
    private String groupName;

    /*
     * <p>The current status of the logs in CloudWatch Logs for a build project. Valid values are:</p> <ul> <li> <p>
     * <code>ENABLED</code>: CloudWatch Logs are enabled for this build project.</p> </li> <li> <p>
     * <code>DISABLED</code>: CloudWatch Logs are not enabled for this build project.</p> </li> </ul>
     */
    private LogsConfigStatusTypeEnumValue status;

    /*
     * <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a
     * href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
     * with Log Groups and Log Streams</a>. </p>
     */
    private String streamName;

    /**
     * Creates an instance of CloudWatchLogsConfig class.
     */
    public CloudWatchLogsConfig() {
    }

    /**
     * Get the groupName property: &lt;p&gt; The group name of the logs in CloudWatch Logs. For more information, see
     * &lt;a
     * href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'&gt;Working
     * with Log Groups and Log Streams&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @return the groupName value.
     */
    public String groupName() {
        return this.groupName;
    }

    /**
     * Set the groupName property: &lt;p&gt; The group name of the logs in CloudWatch Logs. For more information, see
     * &lt;a
     * href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'&gt;Working
     * with Log Groups and Log Streams&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @param groupName the groupName value to set.
     * @return the CloudWatchLogsConfig object itself.
     */
    public CloudWatchLogsConfig withGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }

    /**
     * Get the status property: &lt;p&gt;The current status of the logs in CloudWatch Logs for a build project. Valid
     * values are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ENABLED&lt;/code&gt;: CloudWatch Logs are
     * enabled for this build project.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DISABLED&lt;/code&gt;:
     * CloudWatch Logs are not enabled for this build project.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @return the status value.
     */
    public LogsConfigStatusTypeEnumValue status() {
        return this.status;
    }

    /**
     * Set the status property: &lt;p&gt;The current status of the logs in CloudWatch Logs for a build project. Valid
     * values are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ENABLED&lt;/code&gt;: CloudWatch Logs are
     * enabled for this build project.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DISABLED&lt;/code&gt;:
     * CloudWatch Logs are not enabled for this build project.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @param status the status value to set.
     * @return the CloudWatchLogsConfig object itself.
     */
    public CloudWatchLogsConfig withStatus(LogsConfigStatusTypeEnumValue status) {
        this.status = status;
        return this;
    }

    /**
     * Get the streamName property: &lt;p&gt; The prefix of the stream name of the CloudWatch Logs. For more
     * information, see &lt;a
     * href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'&gt;Working
     * with Log Groups and Log Streams&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @return the streamName value.
     */
    public String streamName() {
        return this.streamName;
    }

    /**
     * Set the streamName property: &lt;p&gt; The prefix of the stream name of the CloudWatch Logs. For more
     * information, see &lt;a
     * href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'&gt;Working
     * with Log Groups and Log Streams&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @param streamName the streamName value to set.
     * @return the CloudWatchLogsConfig object itself.
     */
    public CloudWatchLogsConfig withStreamName(String streamName) {
        this.streamName = streamName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("groupName", this.groupName);
        jsonWriter.writeJsonField("status", this.status);
        jsonWriter.writeStringField("streamName", this.streamName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CloudWatchLogsConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CloudWatchLogsConfig if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CloudWatchLogsConfig.
     */
    public static CloudWatchLogsConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CloudWatchLogsConfig deserializedCloudWatchLogsConfig = new CloudWatchLogsConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("groupName".equals(fieldName)) {
                    deserializedCloudWatchLogsConfig.groupName = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedCloudWatchLogsConfig.status = LogsConfigStatusTypeEnumValue.fromJson(reader);
                } else if ("streamName".equals(fieldName)) {
                    deserializedCloudWatchLogsConfig.streamName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCloudWatchLogsConfig;
        });
    }
}

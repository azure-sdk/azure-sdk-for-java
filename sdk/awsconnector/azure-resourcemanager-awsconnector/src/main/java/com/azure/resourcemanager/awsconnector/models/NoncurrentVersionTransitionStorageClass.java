// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * NoncurrentVersionTransitionStorageClass enum.
 */
public final class NoncurrentVersionTransitionStorageClass
    extends ExpandableStringEnum<NoncurrentVersionTransitionStorageClass> {
    /**
     * Static value DEEP_ARCHIVE for NoncurrentVersionTransitionStorageClass.
     */
    public static final NoncurrentVersionTransitionStorageClass DEEP_ARCHIVE = fromString("DEEP_ARCHIVE");

    /**
     * Static value GLACIER for NoncurrentVersionTransitionStorageClass.
     */
    public static final NoncurrentVersionTransitionStorageClass GLACIER = fromString("GLACIER");

    /**
     * Static value GLACIER_IR for NoncurrentVersionTransitionStorageClass.
     */
    public static final NoncurrentVersionTransitionStorageClass GLACIER_IR = fromString("GLACIER_IR");

    /**
     * Static value INTELLIGENT_TIERING for NoncurrentVersionTransitionStorageClass.
     */
    public static final NoncurrentVersionTransitionStorageClass INTELLIGENT_TIERING = fromString("INTELLIGENT_TIERING");

    /**
     * Static value ONEZONE_IA for NoncurrentVersionTransitionStorageClass.
     */
    public static final NoncurrentVersionTransitionStorageClass ONEZONE_IA = fromString("ONEZONE_IA");

    /**
     * Static value STANDARD_IA for NoncurrentVersionTransitionStorageClass.
     */
    public static final NoncurrentVersionTransitionStorageClass STANDARD_IA = fromString("STANDARD_IA");

    /**
     * Creates a new instance of NoncurrentVersionTransitionStorageClass value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public NoncurrentVersionTransitionStorageClass() {
    }

    /**
     * Creates or finds a NoncurrentVersionTransitionStorageClass from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding NoncurrentVersionTransitionStorageClass.
     */
    public static NoncurrentVersionTransitionStorageClass fromString(String name) {
        return fromString(name, NoncurrentVersionTransitionStorageClass.class);
    }

    /**
     * Gets known NoncurrentVersionTransitionStorageClass values.
     * 
     * @return known NoncurrentVersionTransitionStorageClass values.
     */
    public static Collection<NoncurrentVersionTransitionStorageClass> values() {
        return values(NoncurrentVersionTransitionStorageClass.class);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsSnsTopic.
 */
@Fluent
public final class AwsSnsTopicProperties implements JsonSerializable<AwsSnsTopicProperties> {
    /*
     * The archive policy determines the number of days SNS retains messages. You can set a retention period from 1 to
     * 365 days.
     */
    private Object archivePolicy;

    /*
     * Enables content-based deduplication for FIFO topics. + By default, ``ContentBasedDeduplication`` is set to
     * ``false``. If you create a FIFO topic and this attribute is ``false``, you must specify a value for the
     * ``MessageDeduplicationId`` parameter for the
     * [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) action. + When you set
     * ``ContentBasedDeduplication`` to ``true``, SNS uses a SHA-256 hash to generate the ``MessageDeduplicationId``
     * using the body of the message (but not the attributes of the message). (Optional) To override the generated
     * value, you can specify a value for the the ``MessageDeduplicationId`` parameter for the ``Publish`` action.
     */
    private Boolean contentBasedDeduplication;

    /*
     * The body of the policy document you want to use for this topic. You can only add one policy per topic. The policy
     * must be in JSON string format. Length Constraints: Maximum length of 30,720.
     */
    private Object dataProtectionPolicy;

    /*
     * Property deliveryStatusLogging
     */
    private List<LoggingConfigAutoGenerated> deliveryStatusLogging;

    /*
     * The display name to use for an SNS topic with SMS subscriptions. The display name must be maximum 100 characters
     * long, including hyphens (-), underscores (_), spaces, and tabs.
     */
    private String displayName;

    /*
     * Set to true to create a FIFO topic.
     */
    private Boolean fifoTopic;

    /*
     * The ID of an AWS managed customer master key (CMK) for SNS or a custom CMK. For more information, see [Key
     * terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms). For more
     * examples, see ``KeyId`` in the *API Reference*. This property applies only to
     * [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
     */
    private String kmsMasterKeyId;

    /*
     * The signature version corresponds to the hashing algorithm used while creating the signature of the
     * notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS. By default,
     * ``SignatureVersion`` is set to ``1``.
     */
    private String signatureVersion;

    /*
     * The SNS subscriptions (endpoints) for this topic. If you specify the ``Subscription`` property in the
     * ``AWS::SNS::Topic`` resource and it creates an associated subscription resource, the associated subscription is
     * not deleted when the ``AWS::SNS::Topic`` resource is deleted.
     */
    private List<Subscription> subscription;

    /*
     * The list of tags to add to a new topic. To be able to tag a topic on creation, you must have the
     * ``sns:CreateTopic`` and ``sns:TagResource`` permissions.
     */
    private List<TagAutoGenerated53> tags;

    /*
     * Property topicArn
     */
    private String topicArn;

    /*
     * The name of the topic you want to create. Topic names must include only uppercase and lowercase ASCII letters,
     * numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO topic names must end with
     * ``.fifo``. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the topic name.
     * For more information, see [Name
     * type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). If you specify a
     * name, you can't perform updates that require replacement of this resource. You can perform updates that require
     * no or some interruption. If you must replace the resource, specify a new name.
     */
    private String topicName;

    /*
     * Tracing mode of an SNS topic. By default ``TracingConfig`` is set to ``PassThrough``, and the topic passes
     * through the tracing header it receives from an SNS publisher to its subscriptions. If set to ``Active``, SNS will
     * vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true.
     */
    private String tracingConfig;

    /**
     * Creates an instance of AwsSnsTopicProperties class.
     */
    public AwsSnsTopicProperties() {
    }

    /**
     * Get the archivePolicy property: The archive policy determines the number of days SNS retains messages. You can
     * set a retention period from 1 to 365 days.
     * 
     * @return the archivePolicy value.
     */
    public Object archivePolicy() {
        return this.archivePolicy;
    }

    /**
     * Set the archivePolicy property: The archive policy determines the number of days SNS retains messages. You can
     * set a retention period from 1 to 365 days.
     * 
     * @param archivePolicy the archivePolicy value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withArchivePolicy(Object archivePolicy) {
        this.archivePolicy = archivePolicy;
        return this;
    }

    /**
     * Get the contentBasedDeduplication property: Enables content-based deduplication for FIFO topics. + By default,
     * ``ContentBasedDeduplication`` is set to ``false``. If you create a FIFO topic and this attribute is ``false``,
     * you must specify a value for the ``MessageDeduplicationId`` parameter for the
     * [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) action. + When you set
     * ``ContentBasedDeduplication`` to ``true``, SNS uses a SHA-256 hash to generate the ``MessageDeduplicationId``
     * using the body of the message (but not the attributes of the message). (Optional) To override the generated
     * value, you can specify a value for the the ``MessageDeduplicationId`` parameter for the ``Publish`` action.
     * 
     * @return the contentBasedDeduplication value.
     */
    public Boolean contentBasedDeduplication() {
        return this.contentBasedDeduplication;
    }

    /**
     * Set the contentBasedDeduplication property: Enables content-based deduplication for FIFO topics. + By default,
     * ``ContentBasedDeduplication`` is set to ``false``. If you create a FIFO topic and this attribute is ``false``,
     * you must specify a value for the ``MessageDeduplicationId`` parameter for the
     * [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) action. + When you set
     * ``ContentBasedDeduplication`` to ``true``, SNS uses a SHA-256 hash to generate the ``MessageDeduplicationId``
     * using the body of the message (but not the attributes of the message). (Optional) To override the generated
     * value, you can specify a value for the the ``MessageDeduplicationId`` parameter for the ``Publish`` action.
     * 
     * @param contentBasedDeduplication the contentBasedDeduplication value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withContentBasedDeduplication(Boolean contentBasedDeduplication) {
        this.contentBasedDeduplication = contentBasedDeduplication;
        return this;
    }

    /**
     * Get the dataProtectionPolicy property: The body of the policy document you want to use for this topic. You can
     * only add one policy per topic. The policy must be in JSON string format. Length Constraints: Maximum length of
     * 30,720.
     * 
     * @return the dataProtectionPolicy value.
     */
    public Object dataProtectionPolicy() {
        return this.dataProtectionPolicy;
    }

    /**
     * Set the dataProtectionPolicy property: The body of the policy document you want to use for this topic. You can
     * only add one policy per topic. The policy must be in JSON string format. Length Constraints: Maximum length of
     * 30,720.
     * 
     * @param dataProtectionPolicy the dataProtectionPolicy value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withDataProtectionPolicy(Object dataProtectionPolicy) {
        this.dataProtectionPolicy = dataProtectionPolicy;
        return this;
    }

    /**
     * Get the deliveryStatusLogging property: Property deliveryStatusLogging.
     * 
     * @return the deliveryStatusLogging value.
     */
    public List<LoggingConfigAutoGenerated> deliveryStatusLogging() {
        return this.deliveryStatusLogging;
    }

    /**
     * Set the deliveryStatusLogging property: Property deliveryStatusLogging.
     * 
     * @param deliveryStatusLogging the deliveryStatusLogging value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withDeliveryStatusLogging(List<LoggingConfigAutoGenerated> deliveryStatusLogging) {
        this.deliveryStatusLogging = deliveryStatusLogging;
        return this;
    }

    /**
     * Get the displayName property: The display name to use for an SNS topic with SMS subscriptions. The display name
     * must be maximum 100 characters long, including hyphens (-), underscores (_), spaces, and tabs.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name to use for an SNS topic with SMS subscriptions. The display name
     * must be maximum 100 characters long, including hyphens (-), underscores (_), spaces, and tabs.
     * 
     * @param displayName the displayName value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the fifoTopic property: Set to true to create a FIFO topic.
     * 
     * @return the fifoTopic value.
     */
    public Boolean fifoTopic() {
        return this.fifoTopic;
    }

    /**
     * Set the fifoTopic property: Set to true to create a FIFO topic.
     * 
     * @param fifoTopic the fifoTopic value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withFifoTopic(Boolean fifoTopic) {
        this.fifoTopic = fifoTopic;
        return this;
    }

    /**
     * Get the kmsMasterKeyId property: The ID of an AWS managed customer master key (CMK) for SNS or a custom CMK. For
     * more information, see [Key
     * terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms). For more
     * examples, see ``KeyId`` in the *API Reference*. This property applies only to
     * [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
     * 
     * @return the kmsMasterKeyId value.
     */
    public String kmsMasterKeyId() {
        return this.kmsMasterKeyId;
    }

    /**
     * Set the kmsMasterKeyId property: The ID of an AWS managed customer master key (CMK) for SNS or a custom CMK. For
     * more information, see [Key
     * terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms). For more
     * examples, see ``KeyId`` in the *API Reference*. This property applies only to
     * [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
     * 
     * @param kmsMasterKeyId the kmsMasterKeyId value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withKmsMasterKeyId(String kmsMasterKeyId) {
        this.kmsMasterKeyId = kmsMasterKeyId;
        return this;
    }

    /**
     * Get the signatureVersion property: The signature version corresponds to the hashing algorithm used while creating
     * the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by
     * Amazon SNS. By default, ``SignatureVersion`` is set to ``1``.
     * 
     * @return the signatureVersion value.
     */
    public String signatureVersion() {
        return this.signatureVersion;
    }

    /**
     * Set the signatureVersion property: The signature version corresponds to the hashing algorithm used while creating
     * the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by
     * Amazon SNS. By default, ``SignatureVersion`` is set to ``1``.
     * 
     * @param signatureVersion the signatureVersion value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withSignatureVersion(String signatureVersion) {
        this.signatureVersion = signatureVersion;
        return this;
    }

    /**
     * Get the subscription property: The SNS subscriptions (endpoints) for this topic. If you specify the
     * ``Subscription`` property in the ``AWS::SNS::Topic`` resource and it creates an associated subscription resource,
     * the associated subscription is not deleted when the ``AWS::SNS::Topic`` resource is deleted.
     * 
     * @return the subscription value.
     */
    public List<Subscription> subscription() {
        return this.subscription;
    }

    /**
     * Set the subscription property: The SNS subscriptions (endpoints) for this topic. If you specify the
     * ``Subscription`` property in the ``AWS::SNS::Topic`` resource and it creates an associated subscription resource,
     * the associated subscription is not deleted when the ``AWS::SNS::Topic`` resource is deleted.
     * 
     * @param subscription the subscription value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withSubscription(List<Subscription> subscription) {
        this.subscription = subscription;
        return this;
    }

    /**
     * Get the tags property: The list of tags to add to a new topic. To be able to tag a topic on creation, you must
     * have the ``sns:CreateTopic`` and ``sns:TagResource`` permissions.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated53> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: The list of tags to add to a new topic. To be able to tag a topic on creation, you must
     * have the ``sns:CreateTopic`` and ``sns:TagResource`` permissions.
     * 
     * @param tags the tags value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withTags(List<TagAutoGenerated53> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the topicArn property: Property topicArn.
     * 
     * @return the topicArn value.
     */
    public String topicArn() {
        return this.topicArn;
    }

    /**
     * Set the topicArn property: Property topicArn.
     * 
     * @param topicArn the topicArn value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withTopicArn(String topicArn) {
        this.topicArn = topicArn;
        return this;
    }

    /**
     * Get the topicName property: The name of the topic you want to create. Topic names must include only uppercase and
     * lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO
     * topic names must end with ``.fifo``. If you don't specify a name, CFN generates a unique physical ID and uses
     * that ID for the topic name. For more information, see [Name
     * type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). If you specify a
     * name, you can't perform updates that require replacement of this resource. You can perform updates that require
     * no or some interruption. If you must replace the resource, specify a new name.
     * 
     * @return the topicName value.
     */
    public String topicName() {
        return this.topicName;
    }

    /**
     * Set the topicName property: The name of the topic you want to create. Topic names must include only uppercase and
     * lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO
     * topic names must end with ``.fifo``. If you don't specify a name, CFN generates a unique physical ID and uses
     * that ID for the topic name. For more information, see [Name
     * type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). If you specify a
     * name, you can't perform updates that require replacement of this resource. You can perform updates that require
     * no or some interruption. If you must replace the resource, specify a new name.
     * 
     * @param topicName the topicName value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withTopicName(String topicName) {
        this.topicName = topicName;
        return this;
    }

    /**
     * Get the tracingConfig property: Tracing mode of an SNS topic. By default ``TracingConfig`` is set to
     * ``PassThrough``, and the topic passes through the tracing header it receives from an SNS publisher to its
     * subscriptions. If set to ``Active``, SNS will vend X-Ray segment data to topic owner account if the sampled flag
     * in the tracing header is true.
     * 
     * @return the tracingConfig value.
     */
    public String tracingConfig() {
        return this.tracingConfig;
    }

    /**
     * Set the tracingConfig property: Tracing mode of an SNS topic. By default ``TracingConfig`` is set to
     * ``PassThrough``, and the topic passes through the tracing header it receives from an SNS publisher to its
     * subscriptions. If set to ``Active``, SNS will vend X-Ray segment data to topic owner account if the sampled flag
     * in the tracing header is true.
     * 
     * @param tracingConfig the tracingConfig value to set.
     * @return the AwsSnsTopicProperties object itself.
     */
    public AwsSnsTopicProperties withTracingConfig(String tracingConfig) {
        this.tracingConfig = tracingConfig;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deliveryStatusLogging() != null) {
            deliveryStatusLogging().forEach(e -> e.validate());
        }
        if (subscription() != null) {
            subscription().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("archivePolicy", this.archivePolicy);
        jsonWriter.writeBooleanField("contentBasedDeduplication", this.contentBasedDeduplication);
        jsonWriter.writeUntypedField("dataProtectionPolicy", this.dataProtectionPolicy);
        jsonWriter.writeArrayField("deliveryStatusLogging", this.deliveryStatusLogging,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeBooleanField("fifoTopic", this.fifoTopic);
        jsonWriter.writeStringField("kmsMasterKeyId", this.kmsMasterKeyId);
        jsonWriter.writeStringField("signatureVersion", this.signatureVersion);
        jsonWriter.writeArrayField("subscription", this.subscription, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("topicArn", this.topicArn);
        jsonWriter.writeStringField("topicName", this.topicName);
        jsonWriter.writeStringField("tracingConfig", this.tracingConfig);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsSnsTopicProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsSnsTopicProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsSnsTopicProperties.
     */
    public static AwsSnsTopicProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsSnsTopicProperties deserializedAwsSnsTopicProperties = new AwsSnsTopicProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("archivePolicy".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.archivePolicy = reader.readUntyped();
                } else if ("contentBasedDeduplication".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.contentBasedDeduplication
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("dataProtectionPolicy".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.dataProtectionPolicy = reader.readUntyped();
                } else if ("deliveryStatusLogging".equals(fieldName)) {
                    List<LoggingConfigAutoGenerated> deliveryStatusLogging
                        = reader.readArray(reader1 -> LoggingConfigAutoGenerated.fromJson(reader1));
                    deserializedAwsSnsTopicProperties.deliveryStatusLogging = deliveryStatusLogging;
                } else if ("displayName".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.displayName = reader.getString();
                } else if ("fifoTopic".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.fifoTopic = reader.getNullable(JsonReader::getBoolean);
                } else if ("kmsMasterKeyId".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.kmsMasterKeyId = reader.getString();
                } else if ("signatureVersion".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.signatureVersion = reader.getString();
                } else if ("subscription".equals(fieldName)) {
                    List<Subscription> subscription = reader.readArray(reader1 -> Subscription.fromJson(reader1));
                    deserializedAwsSnsTopicProperties.subscription = subscription;
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated53> tags = reader.readArray(reader1 -> TagAutoGenerated53.fromJson(reader1));
                    deserializedAwsSnsTopicProperties.tags = tags;
                } else if ("topicArn".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.topicArn = reader.getString();
                } else if ("topicName".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.topicName = reader.getString();
                } else if ("tracingConfig".equals(fieldName)) {
                    deserializedAwsSnsTopicProperties.tracingConfig = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsSnsTopicProperties;
        });
    }
}

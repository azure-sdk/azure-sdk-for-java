// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of SourceSelectionCriteria.
 */
@Fluent
public final class SourceSelectionCriteria implements JsonSerializable<SourceSelectionCriteria> {
    /*
     * A filter that you can specify for selection for modifications on replicas. A filter that you can specify for
     * selection for modifications on replicas.
     */
    private ReplicaModifications replicaModifications;

    /*
     * A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for
     * filter information for the selection of S3 objects encrypted with AWS KMS.
     */
    private SseKmsEncryptedObjects sseKmsEncryptedObjects;

    /**
     * Creates an instance of SourceSelectionCriteria class.
     */
    public SourceSelectionCriteria() {
    }

    /**
     * Get the replicaModifications property: A filter that you can specify for selection for modifications on replicas.
     * A filter that you can specify for selection for modifications on replicas.
     * 
     * @return the replicaModifications value.
     */
    public ReplicaModifications replicaModifications() {
        return this.replicaModifications;
    }

    /**
     * Set the replicaModifications property: A filter that you can specify for selection for modifications on replicas.
     * A filter that you can specify for selection for modifications on replicas.
     * 
     * @param replicaModifications the replicaModifications value to set.
     * @return the SourceSelectionCriteria object itself.
     */
    public SourceSelectionCriteria withReplicaModifications(ReplicaModifications replicaModifications) {
        this.replicaModifications = replicaModifications;
        return this;
    }

    /**
     * Get the sseKmsEncryptedObjects property: A container for filter information for the selection of Amazon S3
     * objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with
     * AWS KMS.
     * 
     * @return the sseKmsEncryptedObjects value.
     */
    public SseKmsEncryptedObjects sseKmsEncryptedObjects() {
        return this.sseKmsEncryptedObjects;
    }

    /**
     * Set the sseKmsEncryptedObjects property: A container for filter information for the selection of Amazon S3
     * objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with
     * AWS KMS.
     * 
     * @param sseKmsEncryptedObjects the sseKmsEncryptedObjects value to set.
     * @return the SourceSelectionCriteria object itself.
     */
    public SourceSelectionCriteria withSseKmsEncryptedObjects(SseKmsEncryptedObjects sseKmsEncryptedObjects) {
        this.sseKmsEncryptedObjects = sseKmsEncryptedObjects;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (replicaModifications() != null) {
            replicaModifications().validate();
        }
        if (sseKmsEncryptedObjects() != null) {
            sseKmsEncryptedObjects().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("replicaModifications", this.replicaModifications);
        jsonWriter.writeJsonField("sseKmsEncryptedObjects", this.sseKmsEncryptedObjects);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SourceSelectionCriteria from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SourceSelectionCriteria if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SourceSelectionCriteria.
     */
    public static SourceSelectionCriteria fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SourceSelectionCriteria deserializedSourceSelectionCriteria = new SourceSelectionCriteria();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("replicaModifications".equals(fieldName)) {
                    deserializedSourceSelectionCriteria.replicaModifications = ReplicaModifications.fromJson(reader);
                } else if ("sseKmsEncryptedObjects".equals(fieldName)) {
                    deserializedSourceSelectionCriteria.sseKmsEncryptedObjects
                        = SseKmsEncryptedObjects.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSourceSelectionCriteria;
        });
    }
}

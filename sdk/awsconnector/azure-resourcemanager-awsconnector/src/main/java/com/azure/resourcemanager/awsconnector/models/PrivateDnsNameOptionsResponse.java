// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of PrivateDnsNameOptionsResponse.
 */
@Fluent
public final class PrivateDnsNameOptionsResponse implements JsonSerializable<PrivateDnsNameOptionsResponse> {
    /*
     * <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
     */
    private Boolean enableResourceNameDnsAaaaRecord;

    /*
     * <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
     */
    private Boolean enableResourceNameDnsARecord;

    /*
     * <p>The type of hostname to assign to an instance.</p>
     */
    private HostnameTypeEnumValue hostnameType;

    /**
     * Creates an instance of PrivateDnsNameOptionsResponse class.
     */
    public PrivateDnsNameOptionsResponse() {
    }

    /**
     * Get the enableResourceNameDnsAaaaRecord property: &lt;p&gt;Indicates whether to respond to DNS queries for
     * instance hostnames with DNS AAAA records.&lt;/p&gt;.
     * 
     * @return the enableResourceNameDnsAaaaRecord value.
     */
    public Boolean enableResourceNameDnsAaaaRecord() {
        return this.enableResourceNameDnsAaaaRecord;
    }

    /**
     * Set the enableResourceNameDnsAaaaRecord property: &lt;p&gt;Indicates whether to respond to DNS queries for
     * instance hostnames with DNS AAAA records.&lt;/p&gt;.
     * 
     * @param enableResourceNameDnsAaaaRecord the enableResourceNameDnsAaaaRecord value to set.
     * @return the PrivateDnsNameOptionsResponse object itself.
     */
    public PrivateDnsNameOptionsResponse withEnableResourceNameDnsAaaaRecord(Boolean enableResourceNameDnsAaaaRecord) {
        this.enableResourceNameDnsAaaaRecord = enableResourceNameDnsAaaaRecord;
        return this;
    }

    /**
     * Get the enableResourceNameDnsARecord property: &lt;p&gt;Indicates whether to respond to DNS queries for instance
     * hostnames with DNS A records.&lt;/p&gt;.
     * 
     * @return the enableResourceNameDnsARecord value.
     */
    public Boolean enableResourceNameDnsARecord() {
        return this.enableResourceNameDnsARecord;
    }

    /**
     * Set the enableResourceNameDnsARecord property: &lt;p&gt;Indicates whether to respond to DNS queries for instance
     * hostnames with DNS A records.&lt;/p&gt;.
     * 
     * @param enableResourceNameDnsARecord the enableResourceNameDnsARecord value to set.
     * @return the PrivateDnsNameOptionsResponse object itself.
     */
    public PrivateDnsNameOptionsResponse withEnableResourceNameDnsARecord(Boolean enableResourceNameDnsARecord) {
        this.enableResourceNameDnsARecord = enableResourceNameDnsARecord;
        return this;
    }

    /**
     * Get the hostnameType property: &lt;p&gt;The type of hostname to assign to an instance.&lt;/p&gt;.
     * 
     * @return the hostnameType value.
     */
    public HostnameTypeEnumValue hostnameType() {
        return this.hostnameType;
    }

    /**
     * Set the hostnameType property: &lt;p&gt;The type of hostname to assign to an instance.&lt;/p&gt;.
     * 
     * @param hostnameType the hostnameType value to set.
     * @return the PrivateDnsNameOptionsResponse object itself.
     */
    public PrivateDnsNameOptionsResponse withHostnameType(HostnameTypeEnumValue hostnameType) {
        this.hostnameType = hostnameType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hostnameType() != null) {
            hostnameType().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enableResourceNameDnsAAAARecord", this.enableResourceNameDnsAaaaRecord);
        jsonWriter.writeBooleanField("enableResourceNameDnsARecord", this.enableResourceNameDnsARecord);
        jsonWriter.writeJsonField("hostnameType", this.hostnameType);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PrivateDnsNameOptionsResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PrivateDnsNameOptionsResponse if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PrivateDnsNameOptionsResponse.
     */
    public static PrivateDnsNameOptionsResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PrivateDnsNameOptionsResponse deserializedPrivateDnsNameOptionsResponse
                = new PrivateDnsNameOptionsResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableResourceNameDnsAAAARecord".equals(fieldName)) {
                    deserializedPrivateDnsNameOptionsResponse.enableResourceNameDnsAaaaRecord
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableResourceNameDnsARecord".equals(fieldName)) {
                    deserializedPrivateDnsNameOptionsResponse.enableResourceNameDnsARecord
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("hostnameType".equals(fieldName)) {
                    deserializedPrivateDnsNameOptionsResponse.hostnameType = HostnameTypeEnumValue.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPrivateDnsNameOptionsResponse;
        });
    }
}

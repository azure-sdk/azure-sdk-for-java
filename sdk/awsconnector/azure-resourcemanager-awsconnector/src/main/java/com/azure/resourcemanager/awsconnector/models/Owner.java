// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of Owner.
 */
@Fluent
public final class Owner implements JsonSerializable<Owner> {
    /*
     * <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services
     * Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US
     * West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li>
     * <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li>
     * </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
     */
    private String displayName;

    /*
     * <p>Container for the ID of the owner.</p>
     */
    private String id;

    /**
     * Creates an instance of Owner class.
     */
    public Owner() {
    }

    /**
     * Get the displayName property: &lt;p&gt;Container for the display name of the owner. This value is only supported
     * in the following Amazon Web Services Regions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;US East (N.
     * Virginia)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;US West (N. California)&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt;US West (Oregon)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Singapore)&lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Sydney)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific
     * (Tokyo)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Europe (Ireland)&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt;South America (São Paulo)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;This functionality is
     * not supported for directory buckets.&lt;/p&gt; &lt;/note&gt;.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: &lt;p&gt;Container for the display name of the owner. This value is only supported
     * in the following Amazon Web Services Regions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;US East (N.
     * Virginia)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;US West (N. California)&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt;US West (Oregon)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Singapore)&lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Sydney)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific
     * (Tokyo)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Europe (Ireland)&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt;South America (São Paulo)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;This functionality is
     * not supported for directory buckets.&lt;/p&gt; &lt;/note&gt;.
     * 
     * @param displayName the displayName value to set.
     * @return the Owner object itself.
     */
    public Owner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the id property: &lt;p&gt;Container for the ID of the owner.&lt;/p&gt;.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: &lt;p&gt;Container for the ID of the owner.&lt;/p&gt;.
     * 
     * @param id the id value to set.
     * @return the Owner object itself.
     */
    public Owner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("id", this.id);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Owner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Owner if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Owner.
     */
    public static Owner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Owner deserializedOwner = new Owner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedOwner.displayName = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedOwner.id = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOwner;
        });
    }
}

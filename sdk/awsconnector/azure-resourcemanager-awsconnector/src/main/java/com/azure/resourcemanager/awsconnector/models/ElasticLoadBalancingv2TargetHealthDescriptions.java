// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ElasticLoadBalancingv2TargetHealthDescriptions.
 */
public interface ElasticLoadBalancingv2TargetHealthDescriptions {
    /**
     * List ElasticLoadBalancingv2TargetHealthDescription resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingv2TargetHealthDescription list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingv2TargetHealthDescription> list();

    /**
     * List ElasticLoadBalancingv2TargetHealthDescription resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingv2TargetHealthDescription list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingv2TargetHealthDescription> list(Context context);

    /**
     * List ElasticLoadBalancingv2TargetHealthDescription resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingv2TargetHealthDescription list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingv2TargetHealthDescription> listByResourceGroup(String resourceGroupName);

    /**
     * List ElasticLoadBalancingv2TargetHealthDescription resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ElasticLoadBalancingv2TargetHealthDescription list operation as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ElasticLoadBalancingv2TargetHealthDescription> listByResourceGroup(String resourceGroupName,
        Context context);

    /**
     * Get a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingv2TargetHealthDescription.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingv2TargetHealthDescription along with {@link Response}.
     */
    Response<ElasticLoadBalancingv2TargetHealthDescription> getByResourceGroupWithResponse(String resourceGroupName,
        String name, Context context);

    /**
     * Get a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingv2TargetHealthDescription.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingv2TargetHealthDescription.
     */
    ElasticLoadBalancingv2TargetHealthDescription getByResourceGroup(String resourceGroupName, String name);

    /**
     * Delete a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingv2TargetHealthDescription.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String name);

    /**
     * Delete a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of ElasticLoadBalancingv2TargetHealthDescription.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String name, Context context);

    /**
     * Get a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingv2TargetHealthDescription along with {@link Response}.
     */
    ElasticLoadBalancingv2TargetHealthDescription getById(String id);

    /**
     * Get a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ElasticLoadBalancingv2TargetHealthDescription along with {@link Response}.
     */
    Response<ElasticLoadBalancingv2TargetHealthDescription> getByIdWithResponse(String id, Context context);

    /**
     * Delete a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a ElasticLoadBalancingv2TargetHealthDescription.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ElasticLoadBalancingv2TargetHealthDescription resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ElasticLoadBalancingv2TargetHealthDescription definition.
     */
    ElasticLoadBalancingv2TargetHealthDescription.DefinitionStages.Blank define(String name);
}

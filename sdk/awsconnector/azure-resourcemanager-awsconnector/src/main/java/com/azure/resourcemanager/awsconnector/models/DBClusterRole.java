// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of DBClusterRole.
 */
@Fluent
public final class DBClusterRole implements JsonSerializable<DBClusterRole> {
    /*
     * The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of
     * supported feature names, see DBEngineVersion in the Amazon RDS API Reference.
     */
    private String featureName;

    /*
     * The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
     */
    private String roleArn;

    /**
     * Creates an instance of DBClusterRole class.
     */
    public DBClusterRole() {
    }

    /**
     * Get the featureName property: The name of the feature associated with the AWS Identity and Access Management
     * (IAM) role. For the list of supported feature names, see DBEngineVersion in the Amazon RDS API Reference.
     * 
     * @return the featureName value.
     */
    public String featureName() {
        return this.featureName;
    }

    /**
     * Set the featureName property: The name of the feature associated with the AWS Identity and Access Management
     * (IAM) role. For the list of supported feature names, see DBEngineVersion in the Amazon RDS API Reference.
     * 
     * @param featureName the featureName value to set.
     * @return the DBClusterRole object itself.
     */
    public DBClusterRole withFeatureName(String featureName) {
        this.featureName = featureName;
        return this;
    }

    /**
     * Get the roleArn property: The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
     * 
     * @return the roleArn value.
     */
    public String roleArn() {
        return this.roleArn;
    }

    /**
     * Set the roleArn property: The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
     * 
     * @param roleArn the roleArn value to set.
     * @return the DBClusterRole object itself.
     */
    public DBClusterRole withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("featureName", this.featureName);
        jsonWriter.writeStringField("roleArn", this.roleArn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DBClusterRole from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DBClusterRole if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the DBClusterRole.
     */
    public static DBClusterRole fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DBClusterRole deserializedDBClusterRole = new DBClusterRole();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("featureName".equals(fieldName)) {
                    deserializedDBClusterRole.featureName = reader.getString();
                } else if ("roleArn".equals(fieldName)) {
                    deserializedDBClusterRole.roleArn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDBClusterRole;
        });
    }
}

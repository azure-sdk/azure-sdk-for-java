// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Definition of AdvancedSecurityOptions.
 */
@Fluent
public final class AdvancedSecurityOptions implements JsonSerializable<AdvancedSecurityOptions> {
    /*
     * <p>Date and time when the migration period will be disabled. Only necessary when <a
     * href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>
     * enabling fine-grained access control on an existing domain</a>.</p>
     */
    private OffsetDateTime anonymousAuthDisableDate;

    /*
     * <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only
     * necessary when <a
     * href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>
     * enabling fine-grained access control on an existing domain</a>.</p>
     */
    private Boolean anonymousAuthEnabled;

    /*
     * <p>True if fine-grained access control is enabled.</p>
     */
    private Boolean enabled;

    /*
     * <p>True if the internal user database is enabled.</p>
     */
    private Boolean internalUserDatabaseEnabled;

    /*
     * <p>Container for information about the SAML configuration for OpenSearch Dashboards.</p>
     */
    private SamlOptionsOutput samlOptions;

    /**
     * Creates an instance of AdvancedSecurityOptions class.
     */
    public AdvancedSecurityOptions() {
    }

    /**
     * Get the anonymousAuthDisableDate property: &lt;p&gt;Date and time when the migration period will be disabled.
     * Only necessary when &lt;a
     * href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'&gt;enabling
     * fine-grained access control on an existing domain&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @return the anonymousAuthDisableDate value.
     */
    public OffsetDateTime anonymousAuthDisableDate() {
        return this.anonymousAuthDisableDate;
    }

    /**
     * Set the anonymousAuthDisableDate property: &lt;p&gt;Date and time when the migration period will be disabled.
     * Only necessary when &lt;a
     * href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'&gt;enabling
     * fine-grained access control on an existing domain&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @param anonymousAuthDisableDate the anonymousAuthDisableDate value to set.
     * @return the AdvancedSecurityOptions object itself.
     */
    public AdvancedSecurityOptions withAnonymousAuthDisableDate(OffsetDateTime anonymousAuthDisableDate) {
        this.anonymousAuthDisableDate = anonymousAuthDisableDate;
        return this;
    }

    /**
     * Get the anonymousAuthEnabled property: &lt;p&gt;True if a 30-day migration period is enabled, during which
     * administrators can create role mappings. Only necessary when &lt;a
     * href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'&gt;enabling
     * fine-grained access control on an existing domain&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @return the anonymousAuthEnabled value.
     */
    public Boolean anonymousAuthEnabled() {
        return this.anonymousAuthEnabled;
    }

    /**
     * Set the anonymousAuthEnabled property: &lt;p&gt;True if a 30-day migration period is enabled, during which
     * administrators can create role mappings. Only necessary when &lt;a
     * href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'&gt;enabling
     * fine-grained access control on an existing domain&lt;/a&gt;.&lt;/p&gt;.
     * 
     * @param anonymousAuthEnabled the anonymousAuthEnabled value to set.
     * @return the AdvancedSecurityOptions object itself.
     */
    public AdvancedSecurityOptions withAnonymousAuthEnabled(Boolean anonymousAuthEnabled) {
        this.anonymousAuthEnabled = anonymousAuthEnabled;
        return this;
    }

    /**
     * Get the enabled property: &lt;p&gt;True if fine-grained access control is enabled.&lt;/p&gt;.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: &lt;p&gt;True if fine-grained access control is enabled.&lt;/p&gt;.
     * 
     * @param enabled the enabled value to set.
     * @return the AdvancedSecurityOptions object itself.
     */
    public AdvancedSecurityOptions withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the internalUserDatabaseEnabled property: &lt;p&gt;True if the internal user database is enabled.&lt;/p&gt;.
     * 
     * @return the internalUserDatabaseEnabled value.
     */
    public Boolean internalUserDatabaseEnabled() {
        return this.internalUserDatabaseEnabled;
    }

    /**
     * Set the internalUserDatabaseEnabled property: &lt;p&gt;True if the internal user database is enabled.&lt;/p&gt;.
     * 
     * @param internalUserDatabaseEnabled the internalUserDatabaseEnabled value to set.
     * @return the AdvancedSecurityOptions object itself.
     */
    public AdvancedSecurityOptions withInternalUserDatabaseEnabled(Boolean internalUserDatabaseEnabled) {
        this.internalUserDatabaseEnabled = internalUserDatabaseEnabled;
        return this;
    }

    /**
     * Get the samlOptions property: &lt;p&gt;Container for information about the SAML configuration for OpenSearch
     * Dashboards.&lt;/p&gt;.
     * 
     * @return the samlOptions value.
     */
    public SamlOptionsOutput samlOptions() {
        return this.samlOptions;
    }

    /**
     * Set the samlOptions property: &lt;p&gt;Container for information about the SAML configuration for OpenSearch
     * Dashboards.&lt;/p&gt;.
     * 
     * @param samlOptions the samlOptions value to set.
     * @return the AdvancedSecurityOptions object itself.
     */
    public AdvancedSecurityOptions withSamlOptions(SamlOptionsOutput samlOptions) {
        this.samlOptions = samlOptions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (samlOptions() != null) {
            samlOptions().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("anonymousAuthDisableDate",
            this.anonymousAuthDisableDate == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.anonymousAuthDisableDate));
        jsonWriter.writeBooleanField("anonymousAuthEnabled", this.anonymousAuthEnabled);
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeBooleanField("internalUserDatabaseEnabled", this.internalUserDatabaseEnabled);
        jsonWriter.writeJsonField("samlOptions", this.samlOptions);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdvancedSecurityOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdvancedSecurityOptions if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdvancedSecurityOptions.
     */
    public static AdvancedSecurityOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdvancedSecurityOptions deserializedAdvancedSecurityOptions = new AdvancedSecurityOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("anonymousAuthDisableDate".equals(fieldName)) {
                    deserializedAdvancedSecurityOptions.anonymousAuthDisableDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("anonymousAuthEnabled".equals(fieldName)) {
                    deserializedAdvancedSecurityOptions.anonymousAuthEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enabled".equals(fieldName)) {
                    deserializedAdvancedSecurityOptions.enabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("internalUserDatabaseEnabled".equals(fieldName)) {
                    deserializedAdvancedSecurityOptions.internalUserDatabaseEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("samlOptions".equals(fieldName)) {
                    deserializedAdvancedSecurityOptions.samlOptions = SamlOptionsOutput.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdvancedSecurityOptions;
        });
    }
}

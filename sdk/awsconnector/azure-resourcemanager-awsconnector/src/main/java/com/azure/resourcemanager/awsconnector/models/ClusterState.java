// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * ClusterState enum.
 */
public final class ClusterState extends ExpandableStringEnum<ClusterState> {
    /**
     * Static value BOOTSTRAPPING for ClusterState.
     */
    public static final ClusterState BOOTSTRAPPING = fromString("BOOTSTRAPPING");

    /**
     * Static value RUNNING for ClusterState.
     */
    public static final ClusterState RUNNING = fromString("RUNNING");

    /**
     * Static value STARTING for ClusterState.
     */
    public static final ClusterState STARTING = fromString("STARTING");

    /**
     * Static value TERMINATED for ClusterState.
     */
    public static final ClusterState TERMINATED = fromString("TERMINATED");

    /**
     * Static value TERMINATED_WITH_ERRORS for ClusterState.
     */
    public static final ClusterState TERMINATED_WITH_ERRORS = fromString("TERMINATED_WITH_ERRORS");

    /**
     * Static value TERMINATING for ClusterState.
     */
    public static final ClusterState TERMINATING = fromString("TERMINATING");

    /**
     * Static value WAITING for ClusterState.
     */
    public static final ClusterState WAITING = fromString("WAITING");

    /**
     * Creates a new instance of ClusterState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ClusterState() {
    }

    /**
     * Creates or finds a ClusterState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ClusterState.
     */
    public static ClusterState fromString(String name) {
        return fromString(name, ClusterState.class);
    }

    /**
     * Gets known ClusterState values.
     * 
     * @return known ClusterState values.
     */
    public static Collection<ClusterState> values() {
        return values(ClusterState.class);
    }
}

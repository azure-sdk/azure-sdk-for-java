// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of S3OriginConfig.
 */
@Fluent
public final class S3OriginConfig implements JsonSerializable<S3OriginConfig> {
    /*
     * The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure
     * the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the
     * value is: origin-access-identity/cloudfront/*ID-of-origin-access-identity* where ``ID-of-origin-access-identity``
     * is the value that CloudFront returned in the ``ID`` element when you created the origin access identity. If you
     * want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty
     * ``OriginAccessIdentity`` element. To delete the origin access identity from an existing distribution, update the
     * distribution configuration and include an empty ``OriginAccessIdentity`` element. To replace the origin access
     * identity, update the distribution configuration and specify the new origin access identity. For more information
     * about the origin access identity, see [Serving Private Content through
     * CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the
     * *Amazon CloudFront Developer Guide*.
     */
    private String originAccessIdentity;

    /**
     * Creates an instance of S3OriginConfig class.
     */
    public S3OriginConfig() {
    }

    /**
     * Get the originAccessIdentity property: The CloudFront origin access identity to associate with the origin. Use an
     * origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket
     * through CloudFront. The format of the value is: origin-access-identity/cloudfront/*ID-of-origin-access-identity*
     * where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you
     * created the origin access identity. If you want viewers to be able to access objects using either the CloudFront
     * URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element. To delete the origin access identity
     * from an existing distribution, update the distribution configuration and include an empty
     * ``OriginAccessIdentity`` element. To replace the origin access identity, update the distribution configuration
     * and specify the new origin access identity. For more information about the origin access identity, see [Serving
     * Private Content through
     * CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the
     * *Amazon CloudFront Developer Guide*.
     * 
     * @return the originAccessIdentity value.
     */
    public String originAccessIdentity() {
        return this.originAccessIdentity;
    }

    /**
     * Set the originAccessIdentity property: The CloudFront origin access identity to associate with the origin. Use an
     * origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket
     * through CloudFront. The format of the value is: origin-access-identity/cloudfront/*ID-of-origin-access-identity*
     * where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you
     * created the origin access identity. If you want viewers to be able to access objects using either the CloudFront
     * URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element. To delete the origin access identity
     * from an existing distribution, update the distribution configuration and include an empty
     * ``OriginAccessIdentity`` element. To replace the origin access identity, update the distribution configuration
     * and specify the new origin access identity. For more information about the origin access identity, see [Serving
     * Private Content through
     * CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the
     * *Amazon CloudFront Developer Guide*.
     * 
     * @param originAccessIdentity the originAccessIdentity value to set.
     * @return the S3OriginConfig object itself.
     */
    public S3OriginConfig withOriginAccessIdentity(String originAccessIdentity) {
        this.originAccessIdentity = originAccessIdentity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("originAccessIdentity", this.originAccessIdentity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of S3OriginConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of S3OriginConfig if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the S3OriginConfig.
     */
    public static S3OriginConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            S3OriginConfig deserializedS3OriginConfig = new S3OriginConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("originAccessIdentity".equals(fieldName)) {
                    deserializedS3OriginConfig.originAccessIdentity = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedS3OriginConfig;
        });
    }
}

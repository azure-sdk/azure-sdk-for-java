// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ServiceConnectClientAlias.
 */
@Fluent
public final class ServiceConnectClientAlias implements JsonSerializable<ServiceConnectClientAlias> {
    /*
     * The ``dnsName`` is the name that you use in the applications of client tasks to connect to this service. The name
     * must be a valid DNS name but doesn't need to be fully-qualified. The name can include up to 127 characters. The
     * name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start
     * with a hyphen. If this parameter isn't specified, the default value of ``discoveryName.namespace`` is used. If
     * the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in
     * ``portName.namespace``. To avoid changing your applications in client Amazon ECS services, set this to the same
     * name that the client application uses by default. For example, a few common names are ``database``, ``db``, or
     * the lowercase name of a database, such as ``mysql`` or ``redis``. For more information, see [Service
     * Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic
     * Container Service Developer Guide*.
     */
    private String dnsName;

    /*
     * The listening port number for the Service Connect proxy. This port is available inside of all of the tasks within
     * the same namespace. To avoid changing your applications in client Amazon ECS services, set this to the same port
     * that the client application uses by default. For more information, see [Service
     * Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic
     * Container Service Developer Guide*.
     */
    private Integer port;

    /**
     * Creates an instance of ServiceConnectClientAlias class.
     */
    public ServiceConnectClientAlias() {
    }

    /**
     * Get the dnsName property: The ``dnsName`` is the name that you use in the applications of client tasks to connect
     * to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include
     * up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods
     * (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of
     * ``discoveryName.namespace`` is used. If the ``discoveryName`` isn't specified, the port mapping name from the
     * task definition is used in ``portName.namespace``. To avoid changing your applications in client Amazon ECS
     * services, set this to the same name that the client application uses by default. For example, a few common names
     * are ``database``, ``db``, or the lowercase name of a database, such as ``mysql`` or ``redis``. For more
     * information, see [Service
     * Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic
     * Container Service Developer Guide*.
     * 
     * @return the dnsName value.
     */
    public String dnsName() {
        return this.dnsName;
    }

    /**
     * Set the dnsName property: The ``dnsName`` is the name that you use in the applications of client tasks to connect
     * to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include
     * up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods
     * (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of
     * ``discoveryName.namespace`` is used. If the ``discoveryName`` isn't specified, the port mapping name from the
     * task definition is used in ``portName.namespace``. To avoid changing your applications in client Amazon ECS
     * services, set this to the same name that the client application uses by default. For example, a few common names
     * are ``database``, ``db``, or the lowercase name of a database, such as ``mysql`` or ``redis``. For more
     * information, see [Service
     * Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic
     * Container Service Developer Guide*.
     * 
     * @param dnsName the dnsName value to set.
     * @return the ServiceConnectClientAlias object itself.
     */
    public ServiceConnectClientAlias withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }

    /**
     * Get the port property: The listening port number for the Service Connect proxy. This port is available inside of
     * all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services,
     * set this to the same port that the client application uses by default. For more information, see [Service
     * Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic
     * Container Service Developer Guide*.
     * 
     * @return the port value.
     */
    public Integer port() {
        return this.port;
    }

    /**
     * Set the port property: The listening port number for the Service Connect proxy. This port is available inside of
     * all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services,
     * set this to the same port that the client application uses by default. For more information, see [Service
     * Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic
     * Container Service Developer Guide*.
     * 
     * @param port the port value to set.
     * @return the ServiceConnectClientAlias object itself.
     */
    public ServiceConnectClientAlias withPort(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("dnsName", this.dnsName);
        jsonWriter.writeNumberField("port", this.port);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServiceConnectClientAlias from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServiceConnectClientAlias if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServiceConnectClientAlias.
     */
    public static ServiceConnectClientAlias fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServiceConnectClientAlias deserializedServiceConnectClientAlias = new ServiceConnectClientAlias();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dnsName".equals(fieldName)) {
                    deserializedServiceConnectClientAlias.dnsName = reader.getString();
                } else if ("port".equals(fieldName)) {
                    deserializedServiceConnectClientAlias.port = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServiceConnectClientAlias;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of AccelerateConfiguration.
 */
@Fluent
public final class AccelerateConfiguration implements JsonSerializable<AccelerateConfiguration> {
    /*
     * Specifies the transfer acceleration status of the bucket.
     */
    private AccelerateConfigurationAccelerationStatus accelerationStatus;

    /**
     * Creates an instance of AccelerateConfiguration class.
     */
    public AccelerateConfiguration() {
    }

    /**
     * Get the accelerationStatus property: Specifies the transfer acceleration status of the bucket.
     * 
     * @return the accelerationStatus value.
     */
    public AccelerateConfigurationAccelerationStatus accelerationStatus() {
        return this.accelerationStatus;
    }

    /**
     * Set the accelerationStatus property: Specifies the transfer acceleration status of the bucket.
     * 
     * @param accelerationStatus the accelerationStatus value to set.
     * @return the AccelerateConfiguration object itself.
     */
    public AccelerateConfiguration
        withAccelerationStatus(AccelerateConfigurationAccelerationStatus accelerationStatus) {
        this.accelerationStatus = accelerationStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accelerationStatus",
            this.accelerationStatus == null ? null : this.accelerationStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccelerateConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccelerateConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccelerateConfiguration.
     */
    public static AccelerateConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccelerateConfiguration deserializedAccelerateConfiguration = new AccelerateConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accelerationStatus".equals(fieldName)) {
                    deserializedAccelerateConfiguration.accelerationStatus
                        = AccelerateConfigurationAccelerationStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccelerateConfiguration;
        });
    }
}

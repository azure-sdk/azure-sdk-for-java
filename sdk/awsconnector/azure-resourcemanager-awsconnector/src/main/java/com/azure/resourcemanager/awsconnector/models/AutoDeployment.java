// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of AutoDeployment.
 */
@Fluent
public final class AutoDeployment implements JsonSerializable<AutoDeployment> {
    /*
     * If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are
     * added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed
     * from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
     */
    private Boolean enabled;

    /*
     * If set to true, stack resources are retained when an account is removed from a target organization or OU. If set
     * to false, stack resources are deleted. Specify only if Enabled is set to True.
     */
    private Boolean retainStacksOnAccountRemoval;

    /**
     * Creates an instance of AutoDeployment class.
     */
    public AutoDeployment() {
    }

    /**
     * Get the enabled property: If set to true, StackSets automatically deploys additional stack instances to AWS
     * Organizations accounts that are added to a target organization or organizational unit (OU) in the specified
     * Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the
     * account in the specified Regions.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: If set to true, StackSets automatically deploys additional stack instances to AWS
     * Organizations accounts that are added to a target organization or organizational unit (OU) in the specified
     * Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the
     * account in the specified Regions.
     * 
     * @param enabled the enabled value to set.
     * @return the AutoDeployment object itself.
     */
    public AutoDeployment withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the retainStacksOnAccountRemoval property: If set to true, stack resources are retained when an account is
     * removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled
     * is set to True.
     * 
     * @return the retainStacksOnAccountRemoval value.
     */
    public Boolean retainStacksOnAccountRemoval() {
        return this.retainStacksOnAccountRemoval;
    }

    /**
     * Set the retainStacksOnAccountRemoval property: If set to true, stack resources are retained when an account is
     * removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled
     * is set to True.
     * 
     * @param retainStacksOnAccountRemoval the retainStacksOnAccountRemoval value to set.
     * @return the AutoDeployment object itself.
     */
    public AutoDeployment withRetainStacksOnAccountRemoval(Boolean retainStacksOnAccountRemoval) {
        this.retainStacksOnAccountRemoval = retainStacksOnAccountRemoval;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enabled", this.enabled);
        jsonWriter.writeBooleanField("retainStacksOnAccountRemoval", this.retainStacksOnAccountRemoval);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoDeployment from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoDeployment if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoDeployment.
     */
    public static AutoDeployment fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoDeployment deserializedAutoDeployment = new AutoDeployment();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enabled".equals(fieldName)) {
                    deserializedAutoDeployment.enabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("retainStacksOnAccountRemoval".equals(fieldName)) {
                    deserializedAutoDeployment.retainStacksOnAccountRemoval
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoDeployment;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsRedshiftClusterParameterGroup.
 */
@Fluent
public final class AwsRedshiftClusterParameterGroupProperties
    implements JsonSerializable<AwsRedshiftClusterParameterGroupProperties> {
    /*
     * A description of the parameter group.
     */
    private String description;

    /*
     * The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version
     * determines the set of parameters.
     */
    private String parameterGroupFamily;

    /*
     * The name of the cluster parameter group.
     */
    private String parameterGroupName;

    /*
     * An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.
     */
    private List<ParameterAutoGenerated> parameters;

    /*
     * An array of key-value pairs to apply to this resource.
     */
    private List<TagAutoGenerated49> tags;

    /**
     * Creates an instance of AwsRedshiftClusterParameterGroupProperties class.
     */
    public AwsRedshiftClusterParameterGroupProperties() {
    }

    /**
     * Get the description property: A description of the parameter group.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: A description of the parameter group.
     * 
     * @param description the description value to set.
     * @return the AwsRedshiftClusterParameterGroupProperties object itself.
     */
    public AwsRedshiftClusterParameterGroupProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the parameterGroupFamily property: The Amazon Redshift engine version to which the cluster parameter group
     * applies. The cluster engine version determines the set of parameters.
     * 
     * @return the parameterGroupFamily value.
     */
    public String parameterGroupFamily() {
        return this.parameterGroupFamily;
    }

    /**
     * Set the parameterGroupFamily property: The Amazon Redshift engine version to which the cluster parameter group
     * applies. The cluster engine version determines the set of parameters.
     * 
     * @param parameterGroupFamily the parameterGroupFamily value to set.
     * @return the AwsRedshiftClusterParameterGroupProperties object itself.
     */
    public AwsRedshiftClusterParameterGroupProperties withParameterGroupFamily(String parameterGroupFamily) {
        this.parameterGroupFamily = parameterGroupFamily;
        return this;
    }

    /**
     * Get the parameterGroupName property: The name of the cluster parameter group.
     * 
     * @return the parameterGroupName value.
     */
    public String parameterGroupName() {
        return this.parameterGroupName;
    }

    /**
     * Set the parameterGroupName property: The name of the cluster parameter group.
     * 
     * @param parameterGroupName the parameterGroupName value to set.
     * @return the AwsRedshiftClusterParameterGroupProperties object itself.
     */
    public AwsRedshiftClusterParameterGroupProperties withParameterGroupName(String parameterGroupName) {
        this.parameterGroupName = parameterGroupName;
        return this;
    }

    /**
     * Get the parameters property: An array of parameters to be modified. A maximum of 20 parameters can be modified in
     * a single request.
     * 
     * @return the parameters value.
     */
    public List<ParameterAutoGenerated> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: An array of parameters to be modified. A maximum of 20 parameters can be modified in
     * a single request.
     * 
     * @param parameters the parameters value to set.
     * @return the AwsRedshiftClusterParameterGroupProperties object itself.
     */
    public AwsRedshiftClusterParameterGroupProperties withParameters(List<ParameterAutoGenerated> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the tags property: An array of key-value pairs to apply to this resource.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated49> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: An array of key-value pairs to apply to this resource.
     * 
     * @param tags the tags value to set.
     * @return the AwsRedshiftClusterParameterGroupProperties object itself.
     */
    public AwsRedshiftClusterParameterGroupProperties withTags(List<TagAutoGenerated49> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parameters() != null) {
            parameters().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("parameterGroupFamily", this.parameterGroupFamily);
        jsonWriter.writeStringField("parameterGroupName", this.parameterGroupName);
        jsonWriter.writeArrayField("parameters", this.parameters, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsRedshiftClusterParameterGroupProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsRedshiftClusterParameterGroupProperties if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsRedshiftClusterParameterGroupProperties.
     */
    public static AwsRedshiftClusterParameterGroupProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsRedshiftClusterParameterGroupProperties deserializedAwsRedshiftClusterParameterGroupProperties
                = new AwsRedshiftClusterParameterGroupProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedAwsRedshiftClusterParameterGroupProperties.description = reader.getString();
                } else if ("parameterGroupFamily".equals(fieldName)) {
                    deserializedAwsRedshiftClusterParameterGroupProperties.parameterGroupFamily = reader.getString();
                } else if ("parameterGroupName".equals(fieldName)) {
                    deserializedAwsRedshiftClusterParameterGroupProperties.parameterGroupName = reader.getString();
                } else if ("parameters".equals(fieldName)) {
                    List<ParameterAutoGenerated> parameters
                        = reader.readArray(reader1 -> ParameterAutoGenerated.fromJson(reader1));
                    deserializedAwsRedshiftClusterParameterGroupProperties.parameters = parameters;
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated49> tags = reader.readArray(reader1 -> TagAutoGenerated49.fromJson(reader1));
                    deserializedAwsRedshiftClusterParameterGroupProperties.tags = tags;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsRedshiftClusterParameterGroupProperties;
        });
    }
}

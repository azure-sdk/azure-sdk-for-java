// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of awsRdsDBInstance.
 */
@Fluent
public final class AwsRdsDBInstanceProperties implements JsonSerializable<AwsRdsDBInstanceProperties> {
    /*
     * The amount of storage in gibibytes (GiB) to be initially allocated for the database instance. If any value is set
     * in the ``Iops`` parameter, ``AllocatedStorage`` must be at least 100 GiB, which corresponds to the minimum Iops
     * value of 1,000. If you increase the ``Iops`` value (in 1,000 IOPS increments), then you must also increase the
     * ``AllocatedStorage`` value (in 100-GiB increments). *Amazon Aurora* Not applicable. Aurora cluster volumes
     * automatically grow as the amount of data in your database increases, though you are only charged for the space
     * that you use in an Aurora cluster volume. *Db2* Constraints to the amount of storage for each storage type are
     * the following: + General Purpose (SSD) storage (gp3): Must be an integer from 20 to 64000. + Provisioned IOPS
     * storage (io1): Must be an integer from 100 to 64000. *MySQL* Constraints to the amount of storage for each
     * storage type are the following: + General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. +
     * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. + Magnetic storage (standard): Must be an
     * integer from 5 to 3072. *MariaDB* Constraints to the amount of storage for each storage type are the following: +
     * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. + Provisioned IOPS storage (io1): Must
     * be an integer from 100 to 65536. + Magnetic storage (standard): Must be an integer from 5 to 3072. *PostgreSQL*
     * Constraints to the amount of storage for each storage type are the following: + General Purpose (SSD) storage
     * (gp2): Must be an integer from 20 to 65536. + Provisioned IOPS storage (io1): Must be an integer from 100 to
     * 65536. + Magnetic storage (standard): Must be an integer from 5 to 3072. *Oracle* Constraints to the amount of
     * storage for each storage type are the following: + General Purpose (SSD) storage (gp2): Must be an integer from
     * 20 to 65536. + Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. + Magnetic storage
     * (standard): Must be an integer from 10 to 3072. *SQL Server* Constraints to the amount of storage for each
     * storage type are the following: + General Purpose (SSD) storage (gp2): + Enterprise and Standard editions: Must
     * be an integer from 20 to 16384. + Web and Express editions: Must be an integer from 20 to 16384. + Provisioned
     * IOPS storage (io1): + Enterprise and Standard editions: Must be an integer from 20 to 16384. + Web and Express
     * editions: Must be an integer from 20 to 16384. + Magnetic storage (standard): + Enterprise and Standard editions:
     * Must be an integer from 20 to 1024. + Web and Express editions: Must be an integer from 20 to 1024.
     */
    private String allocatedStorage;

    /*
     * A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an
     * outage and the change is asynchronously applied as soon as possible. Constraints: Major version upgrades must be
     * allowed when specifying a value for the ``EngineVersion`` parameter that is a different major version than the DB
     * instance's current version.
     */
    private Boolean allowMajorVersionUpgrade;

    /*
     * The IAMlong (IAM) roles associated with the DB instance. *Amazon Aurora* Not applicable. The associated roles are
     * managed by the DB cluster.
     */
    private List<DBInstanceRole> associatedRoles;

    /*
     * A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the
     * maintenance window. By default, minor engine upgrades are applied automatically.
     */
    private Boolean autoMinorVersionUpgrade;

    /*
     * Property automaticBackupReplicationKmsKeyId
     */
    private String automaticBackupReplicationKmsKeyId;

    /*
     * The destination region for the backup replication of the DB instance. For more info, see [Replicating automated
     * backups to another Region](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html) in
     * the *Amazon RDS User Guide*.
     */
    private String automaticBackupReplicationRegion;

    /*
     * The Availability Zone (AZ) where the database will be created. For information on AWS-Regions and Availability
     * Zones, see [Regions and Availability
     * Zones](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html). For
     * Amazon Aurora, each Aurora DB cluster hosts copies of its storage in three separate Availability Zones. Specify
     * one of these Availability Zones. Aurora automatically chooses an appropriate Availability Zone if you don't
     * specify one. Default: A random, system-chosen Availability Zone in the endpoint's AWS-Region. Constraints: + The
     * ``AvailabilityZone`` parameter can't be specified if the DB instance is a Multi-AZ deployment. + The specified
     * Availability Zone must be in the same AWS-Region as the current endpoint. Example: ``us-east-1d``
     */
    private String availabilityZone;

    /*
     * The number of days for which automated backups are retained. Setting this parameter to a positive number enables
     * backups. Setting this parameter to 0 disables automated backups. *Amazon Aurora* Not applicable. The retention
     * period for automated backups is managed by the DB cluster. Default: 1 Constraints: + Must be a value from 0 to 35
     * + Can't be set to 0 if the DB instance is a source to read replicas
     */
    private Integer backupRetentionPeriod;

    /*
     * The identifier of the CA certificate for this DB instance. For more information, see [Using SSL/TLS to encrypt a
     * connection to a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the
     * *Amazon RDS User Guide* and [Using SSL/TLS to encrypt a connection to a DB
     * cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon
     * Aurora User Guide*.
     */
    private String caCertificateIdentifier;

    /*
     * The details of the DB instance's server certificate. Returns the details of the DB instanceâ€™s server certificate.
     * For more information, see [Using SSL/TLS to encrypt a connection to a DB
     * instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User
     * Guide* and [Using SSL/TLS to encrypt a connection to a DB
     * cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon
     * Aurora User Guide*.
     */
    private CertificateDetails certificateDetails;

    /*
     * Specifies whether the DB instance is restarted when you rotate your SSL/TLS certificate. By default, the DB
     * instance is restarted when you rotate your SSL/TLS certificate. The certificate is not updated until the DB
     * instance is restarted. Set this parameter only if you are *not* using SSL/TLS to connect to the DB instance. If
     * you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions for your DB engine to
     * rotate your SSL/TLS certificate: + For more information about rotating your SSL/TLS certificate for RDS DB
     * engines, see [Rotating Your SSL/TLS
     * Certificate.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html)
     * in the *Amazon RDS User Guide.* + For more information about rotating your SSL/TLS certificate for Aurora DB
     * engines, see [Rotating Your SSL/TLS
     * Certificate](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.
     * html) in the *Amazon Aurora User Guide*. This setting doesn't apply to RDS Custom DB instances.
     */
    private Boolean certificateRotationRestart;

    /*
     * For supported engines, indicates that the DB instance should be associated with the specified character set.
     * *Amazon Aurora* Not applicable. The character set is managed by the DB cluster. For more information, see
     * [AWS::RDS::DBCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.
     * html).
     */
    private String characterSetName;

    /*
     * Specifies whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not
     * copied. This setting doesn't apply to Amazon Aurora DB instances. Copying tags to snapshots is managed by the DB
     * cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting.
     */
    private Boolean copyTagsToSnapshot;

    /*
     * The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. This
     * setting is required for RDS Custom. Constraints: + The profile must exist in your account. + The profile must
     * have an IAM role that Amazon EC2 has permissions to assume. + The instance profile name and the associated IAM
     * role name must start with the prefix ``AWSRDSCustom``. For the list of permissions required for the IAM role, see
     * [Configure IAM and your
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc) in
     * the *Amazon RDS User Guide*.
     */
    private String customIamInstanceProfile;

    /*
     * The identifier of the DB cluster that the instance will belong to.
     */
    private String dbClusterIdentifier;

    /*
     * The identifier for the Multi-AZ DB cluster snapshot to restore from. For more information on Multi-AZ DB
     * clusters, see [Multi-AZ DB cluster
     * deployments](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html) in the
     * *Amazon RDS User Guide*. Constraints: + Must match the identifier of an existing Multi-AZ DB cluster snapshot. +
     * Can't be specified when ``DBSnapshotIdentifier`` is specified. + Must be specified when ``DBSnapshotIdentifier``
     * isn't specified. + If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the
     * ``DBClusterSnapshotIdentifier`` must be the ARN of the shared snapshot. + Can't be the identifier of an Aurora DB
     * cluster snapshot.
     */
    private String dbClusterSnapshotIdentifier;

    /*
     * Property dbInstanceArn
     */
    private String dbInstanceArn;

    /*
     * The compute and memory capacity of the DB instance, for example ``db.m5.large``. Not all DB instance classes are
     * available in all AWS-Regions, or for all database engines. For the full list of DB instance classes, and
     * availability for your engine, see [DB instance
     * classes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS
     * User Guide* or [Aurora DB instance
     * classes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html) in the
     * *Amazon Aurora User Guide*.
     */
    private String dbInstanceClass;

    /*
     * A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't
     * specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance. For more
     * information, see [Name
     * Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). For information
     * about constraints that apply to DB instance identifiers, see [Naming constraints in Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the
     * *Amazon RDS User Guide*. If you specify a name, you can't perform updates that require replacement of this
     * resource. You can perform updates that require no or some interruption. If you must replace the resource, specify
     * a new name.
     */
    private String dbInstanceIdentifier;

    /*
     * The meaning of this parameter differs according to the database engine you use. If you specify the
     * ``DBSnapshotIdentifier`` property, this property only applies to RDS for Oracle. *Amazon Aurora* Not applicable.
     * The database name is managed by the DB cluster. *Db2* The name of the database to create when the DB instance is
     * created. If this parameter isn't specified, no database is created in the DB instance. Constraints: + Must
     * contain 1 to 64 letters or numbers. + Must begin with a letter. Subsequent characters can be letters,
     * underscores, or digits (0-9). + Can't be a word reserved by the specified database engine. *MySQL* The name of
     * the database to create when the DB instance is created. If this parameter is not specified, no database is
     * created in the DB instance. Constraints: + Must contain 1 to 64 letters or numbers. + Can't be a word reserved by
     * the specified database engine *MariaDB* The name of the database to create when the DB instance is created. If
     * this parameter is not specified, no database is created in the DB instance. Constraints: + Must contain 1 to 64
     * letters or numbers. + Can't be a word reserved by the specified database engine *PostgreSQL* The name of the
     * database to create when the DB instance is created. If this parameter is not specified, the default ``postgres``
     * database is created in the DB instance. Constraints: + Must begin with a letter. Subsequent characters can be
     * letters, underscores, or digits (0-9). + Must contain 1 to 63 characters. + Can't be a word reserved by the
     * specified database engine *Oracle* The Oracle System ID (SID) of the created DB instance. If you specify
     * ``null``, the default value ``ORCL`` is used. You can't specify the string NULL, or any other reserved word, for
     * ``DBName``. Default: ``ORCL`` Constraints: + Can't be longer than 8 characters *SQL Server* Not applicable. Must
     * be null.
     */
    private String dbName;

    /*
     * The name of an existing DB parameter group or a reference to an
     * [AWS::RDS::DBParameterGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-
     * dbparametergroup.html) resource created in the template. To list all of the available DB parameter group names,
     * use the following command: ``aws rds describe-db-parameter-groups --query
     * 'DBParameterGroups[].DBParameterGroupName' --output text`` If any of the data members of the referenced parameter
     * group are changed during an update, the DB instance might need to be restarted, which causes some interruption.
     * If the parameter group contains static parameters, whether they were changed or not, an update triggers a reboot.
     * If you don't specify a value for ``DBParameterGroupName`` property, the default DB parameter group for the
     * specified engine and engine version is used.
     */
    private String dbParameterGroupName;

    /*
     * A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB
     * security groups or references to AWS::RDS::DBSecurityGroup resources created in the template. If you set
     * DBSecurityGroups, you must not set VPCSecurityGroups, and vice versa. Also, note that the DBSecurityGroups
     * property exists only for backwards compatibility with older regions and is no longer recommended for providing
     * security information to an RDS DB instance. Instead, use VPCSecurityGroups. If you specify this property, AWS
     * CloudFormation sends only the following properties (if specified) to Amazon RDS during create operations: +
     * ``AllocatedStorage`` + ``AutoMinorVersionUpgrade`` + ``AvailabilityZone`` + ``BackupRetentionPeriod`` +
     * ``CharacterSetName`` + ``DBInstanceClass`` + ``DBName`` + ``DBParameterGroupName`` + ``DBSecurityGroups`` +
     * ``DBSubnetGroupName`` + ``Engine`` + ``EngineVersion`` + ``Iops`` + ``LicenseModel`` + ``MasterUsername`` +
     * ``MasterUserPassword`` + ``MultiAZ`` + ``OptionGroupName`` + ``PreferredBackupWindow`` +
     * ``PreferredMaintenanceWindow`` All other properties are ignored. Specify a virtual private cloud (VPC) security
     * group if you want to submit other properties, such as ``StorageType``, ``StorageEncrypted``, or ``KmsKeyId``. If
     * you're already using the ``DBSecurityGroups`` property, you can't use these other properties by updating your DB
     * instance to use a VPC security group. You must recreate the DB instance.
     */
    private List<String> dbSecurityGroups;

    /*
     * The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're
     * restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot. By specifying this
     * property, you can create a DB instance from the specified DB snapshot. If the ``DBSnapshotIdentifier`` property
     * is an empty string or the ``AWS::RDS::DBInstance`` declaration has no ``DBSnapshotIdentifier`` property, AWS
     * CloudFormation creates a new database. If the property contains a value (other than an empty string), AWS
     * CloudFormation creates a database from the specified snapshot. If a snapshot with the specified name doesn't
     * exist, AWS CloudFormation can't create the database and it rolls back the stack. Some DB instance properties
     * aren't valid when you restore from a snapshot, such as the ``MasterUsername`` and ``MasterUserPassword``
     * properties. For information about the properties that you can specify, see the
     * ``RestoreDBInstanceFromDBSnapshot`` action in the *Amazon RDS API Reference*. After you restore a DB instance
     * with a ``DBSnapshotIdentifier`` property, you must specify the same ``DBSnapshotIdentifier`` property for any
     * future updates to the DB instance. When you specify this property for an update, the DB instance is not restored
     * from the DB snapshot again, and the data in the database is not changed. However, if you don't specify the
     * ``DBSnapshotIdentifier`` property, an empty DB instance is created, and the original DB instance is deleted. If
     * you specify a property that is different from the previous snapshot restore property, a new DB instance is
     * restored from the specified ``DBSnapshotIdentifier`` property, and the original DB instance is deleted. If you
     * specify the ``DBSnapshotIdentifier`` property to restore a DB instance (as opposed to specifying it for DB
     * instance updates), then don't specify the following properties: + ``CharacterSetName`` + ``DBClusterIdentifier``
     * + ``DBName`` + ``DeleteAutomatedBackups`` + ``EnablePerformanceInsights`` + ``KmsKeyId`` + ``MasterUsername`` +
     * ``MasterUserPassword`` + ``PerformanceInsightsKMSKeyId`` + ``PerformanceInsightsRetentionPeriod`` +
     * ``PromotionTier`` + ``SourceDBInstanceIdentifier`` + ``SourceRegion`` + ``StorageEncrypted`` (for an encrypted
     * snapshot) + ``Timezone`` *Amazon Aurora* Not applicable. Snapshot restore is managed by the DB cluster.
     */
    private String dbSnapshotIdentifier;

    /*
     * A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a
     * subnet group in a new VPC. If there's no DB subnet group, then the DB instance isn't a VPC DB instance. For more
     * information about using Amazon RDS in a VPC, see [Using Amazon RDS with Amazon Virtual Private Cloud
     * (VPC)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in the *Amazon RDS User Guide*.
     * *Amazon Aurora* Not applicable. The DB subnet group is managed by the DB cluster. If specified, the setting must
     * match the DB cluster setting.
     */
    private String dbSubnetGroupName;

    /*
     * The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database
     * files. In this context, the term 'Oracle database instance' refers exclusively to the system global area (SGA)
     * and Oracle background processes. If you don't specify a SID, the value defaults to ``RDSCDB``. The Oracle SID is
     * also the name of your CDB.
     */
    private String dbSystemId;

    /*
     * Property dbiResourceId
     */
    private String dbiResourceId;

    /*
     * Indicates whether the DB instance has a dedicated log volume (DLV) enabled.
     */
    private Boolean dedicatedLogVolume;

    /*
     * A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This
     * parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is
     * deleted. *Amazon Aurora* Not applicable. When you delete a DB cluster, all automated backups for that DB cluster
     * are deleted and can't be recovered. Manual DB cluster snapshots of the DB cluster are not deleted.
     */
    private Boolean deleteAutomatedBackups;

    /*
     * A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted
     * when deletion protection is enabled. By default, deletion protection is disabled. For more information, see
     * [Deleting a DB Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
     * *Amazon Aurora* Not applicable. You can enable or disable deletion protection for the DB cluster. For more
     * information, see ``CreateDBCluster``. DB instances in a DB cluster can be deleted even when deletion protection
     * is enabled for the DB cluster.
     */
    private Boolean deletionProtection;

    /*
     * The Active Directory directory ID to create the DB instance in. Currently, only Db2, MySQL, Microsoft SQL Server,
     * Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain. For more information, see
     * [Kerberos Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html) in
     * the *Amazon RDS User Guide*.
     */
    private String domain;

    /*
     * The ARN for the Secrets Manager secret with the credentials for the user joining the domain. Example:
     * ``arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456``
     */
    private String domainAuthSecretArn;

    /*
     * The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers. Constraints: + Two
     * IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary
     * domain controller for both entries in the list. Example: ``123.124.125.126,234.235.236.237``
     */
    private List<String> domainDnsIps;

    /*
     * The fully qualified domain name (FQDN) of an Active Directory domain. Constraints: + Can't be longer than 64
     * characters. Example: ``mymanagedADtest.mymanagedAD.mydomain``
     */
    private String domainFqdn;

    /*
     * The name of the IAM role to use when making API calls to the Directory Service. This setting doesn't apply to the
     * following DB instances: + Amazon Aurora (The domain is managed by the DB cluster.) + RDS Custom
     */
    private String domainIamRoleName;

    /*
     * The Active Directory organizational unit for your DB instance to join. Constraints: + Must be in the
     * distinguished name format. + Can't be longer than 64 characters. Example:
     * ``OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain``
     */
    private String domainOu;

    /*
     * The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on
     * the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch
     * Logs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.
     * UploadtoCloudWatch) in the *Amazon Relational Database Service User Guide*. *Amazon Aurora* Not applicable.
     * CloudWatch Logs exports are managed by the DB cluster. *Db2* Valid values: ``diag.log``, ``notify.log`` *MariaDB*
     * Valid values: ``audit``, ``error``, ``general``, ``slowquery`` *Microsoft SQL Server* Valid values: ``agent``,
     * ``error`` *MySQL* Valid values: ``audit``, ``error``, ``general``, ``slowquery`` *Oracle* Valid values:
     * ``alert``, ``audit``, ``listener``, ``trace``, ``oemagent`` *PostgreSQL* Valid values: ``postgresql``,
     * ``upgrade``
     */
    private List<String> enableCloudwatchLogsExports;

    /*
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database
     * accounts. By default, mapping is disabled. This property is supported for RDS for MariaDB, RDS for MySQL, and RDS
     * for PostgreSQL. For more information, see [IAM Database Authentication for MariaDB, MySQL, and
     * PostgreSQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon
     * RDS User Guide.* *Amazon Aurora* Not applicable. Mapping AWS IAM accounts to database accounts is managed by the
     * DB cluster.
     */
    private Boolean enableIamDatabaseAuthentication;

    /*
     * Specifies whether to enable Performance Insights for the DB instance. For more information, see [Using Amazon
     * Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the
     * *Amazon RDS User Guide*. This setting doesn't apply to RDS Custom DB instances.
     */
    private Boolean enablePerformanceInsights;

    /*
     * The connection endpoint for the DB instance. The endpoint might not be shown for instances with the status of
     * ``creating``. This data type represents the information you need to connect to an Amazon RDS DB instance. This
     * data type is used as a response element in the following actions: + ``CreateDBInstance`` +
     * ``DescribeDBInstances`` + ``DeleteDBInstance`` For the data structure that represents Amazon Aurora DB cluster
     * endpoints, see ``DBClusterEndpoint``.
     */
    private EndpointAutoGenerated2 endpoint;

    /*
     * The name of the database engine to use for this DB instance. Not every database engine is available in every AWS
     * Region. This property is required when creating a DB instance. You can change the architecture of an Oracle
     * database from the non-container database (CDB) architecture to the CDB architecture by updating the ``Engine``
     * value in your templates from ``oracle-ee`` or ``oracle-ee-cdb`` to ``oracle-se2-cdb``. Converting to the CDB
     * architecture requires an interruption. Valid Values: + ``aurora-mysql`` (for Aurora MySQL DB instances) +
     * ``aurora-postgresql`` (for Aurora PostgreSQL DB instances) + ``custom-oracle-ee`` (for RDS Custom for Oracle DB
     * instances) + ``custom-oracle-ee-cdb`` (for RDS Custom for Oracle DB instances) + ``custom-sqlserver-ee`` (for RDS
     * Custom for SQL Server DB instances) + ``custom-sqlserver-se`` (for RDS Custom for SQL Server DB instances) +
     * ``custom-sqlserver-web`` (for RDS Custom for SQL Server DB instances) + ``db2-ae`` + ``db2-se`` + ``mariadb`` +
     * ``mysql`` + ``oracle-ee`` + ``oracle-ee-cdb`` + ``oracle-se2`` + ``oracle-se2-cdb`` + ``postgres`` +
     * ``sqlserver-ee`` + ``sqlserver-se`` + ``sqlserver-ex`` + ``sqlserver-web``
     */
    private String engine;

    /*
     * The version number of the database engine to use. For a list of valid engine versions, use the
     * ``DescribeDBEngineVersions`` action. The following are the database engines and links to information about the
     * major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS
     * Region. *Amazon Aurora* Not applicable. The version number of the database engine to be used by the DB instance
     * is managed by the DB cluster. *Db2* See [Amazon RDS for
     * Db2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt) in the
     * *Amazon RDS User Guide.* *MariaDB* See [MariaDB on Amazon RDS
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
     * in the *Amazon RDS User Guide.* *Microsoft SQL Server* See [Microsoft SQL Server Versions on Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.
     * VersionSupport) in the *Amazon RDS User Guide.* *MySQL* See [MySQL on Amazon RDS
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in
     * the *Amazon RDS User Guide.* *Oracle* See [Oracle Database Engine Release
     * Notes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html) in the
     * *Amazon RDS User Guide.* *PostgreSQL* See [Supported PostgreSQL Database
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General
     * .DBVersions) in the *Amazon RDS User Guide.*
     */
    private String engineVersion;

    /*
     * The number of I/O operations per second (IOPS) that the database provisions. The value must be equal to or
     * greater than 1000. If you specify this property, you must follow the range of allowed ratios of your requested
     * IOPS rate to the amount of storage that you allocate (IOPS to allocated storage). For example, you can provision
     * an Oracle database instance with 1000 IOPS and 200 GiB of storage (a ratio of 5:1), or specify 2000 IOPS with 200
     * GiB of storage (a ratio of 10:1). For more information, see [Amazon RDS Provisioned IOPS Storage to Improve
     * Performance](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/CHAP_Storage.html#USER_PIOPS) in the
     * *Amazon RDS User Guide*. If you specify ``io1`` for the ``StorageType`` property, then you must also specify the
     * ``Iops`` property. Constraints: + For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple
     * between .5 and 50 of the storage amount for the DB instance. + For RDS for SQL Server - Must be a multiple
     * between 1 and 50 of the storage amount for the DB instance.
     */
    private Integer iops;

    /*
     * The ARN of the AWS KMS key that's used to encrypt the DB instance, such as
     * ``arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef``. If you enable the
     * StorageEncrypted property but don't specify this property, AWS CloudFormation uses the default KMS key. If you
     * specify this property, you must set the StorageEncrypted property to true. If you specify the
     * ``SourceDBInstanceIdentifier`` property, the value is inherited from the source DB instance if the read replica
     * is created in the same region. If you create an encrypted read replica in a different AWS Region, then you must
     * specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the region that they're
     * created in, and you can't use encryption keys from one region in another region. If you specify the
     * ``SnapshotIdentifier`` property, the ``StorageEncrypted`` property value is inherited from the snapshot, and if
     * the DB instance is encrypted, the specified ``KmsKeyId`` property is used. If you specify ``DBSecurityGroups``,
     * AWS CloudFormation ignores this property. To specify both a security group and this property, you must use a VPC
     * security group. For more information about Amazon RDS and VPC, see [Using Amazon RDS with Amazon
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in the *Amazon RDS User Guide*.
     * *Amazon Aurora* Not applicable. The KMS key identifier is managed by the DB cluster.
     */
    private String kmsKeyId;

    /*
     * License model information for this DB instance. Valid Values: + Aurora MySQL - ``general-public-license`` +
     * Aurora PostgreSQL - ``postgresql-license`` + RDS for Db2 - ``bring-your-own-license``. For more information about
     * RDS for Db2 licensing, see [](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html) in the
     * *Amazon RDS User Guide.* + RDS for MariaDB - ``general-public-license`` + RDS for Microsoft SQL Server -
     * ``license-included`` + RDS for MySQL - ``general-public-license`` + RDS for Oracle - ``bring-your-own-license``
     * or ``license-included`` + RDS for PostgreSQL - ``postgresql-license`` If you've specified ``DBSecurityGroups``
     * and then you update the license model, AWS CloudFormation replaces the underlying DB instance. This will incur
     * some interruptions to database availability.
     */
    private String licenseModel;

    /*
     * Specifies whether to manage the master user password with AWS Secrets Manager. For more information, see
     * [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide.* Constraints: + Can't manage the master user password with AWS Secrets Manager if ``MasterUserPassword``
     * is specified.
     */
    private Boolean manageMasterUserPassword;

    /*
     * The password for the master user. The password can include any printable ASCII character except '/', ''', or '@'.
     * *Amazon Aurora* Not applicable. The password for the master user is managed by the DB cluster. *RDS for Db2* Must
     * contain from 8 to 255 characters. *RDS for MariaDB* Constraints: Must contain from 8 to 41 characters. *RDS for
     * Microsoft SQL Server* Constraints: Must contain from 8 to 128 characters. *RDS for MySQL* Constraints: Must
     * contain from 8 to 41 characters. *RDS for Oracle* Constraints: Must contain from 8 to 30 characters. *RDS for
     * PostgreSQL* Constraints: Must contain from 8 to 128 characters.
     */
    private String masterUserPassword;

    /*
     * The secret managed by RDS in AWS Secrets Manager for the master user password. For more information, see
     * [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide.* The ``MasterUserSecret`` return value specifies the secret managed by RDS in AWS Secrets Manager for the
     * master user password. For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide* and [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon
     * Aurora User Guide.*
     */
    private MasterUserSecret masterUserSecret;

    /*
     * The master user name for the DB instance. If you specify the ``SourceDBInstanceIdentifier`` or
     * ``DBSnapshotIdentifier`` property, don't specify this property. The value is inherited from the source DB
     * instance or snapshot. When migrating a self-managed Db2 database, we recommend that you use the same master
     * username as your self-managed Db2 instance name. *Amazon Aurora* Not applicable. The name for the master user is
     * managed by the DB cluster. *RDS for Db2* Constraints: + Must be 1 to 16 letters or numbers. + First character
     * must be a letter. + Can't be a reserved word for the chosen database engine. *RDS for MariaDB* Constraints: +
     * Must be 1 to 16 letters or numbers. + Can't be a reserved word for the chosen database engine. *RDS for Microsoft
     * SQL Server* Constraints: + Must be 1 to 128 letters or numbers. + First character must be a letter. + Can't be a
     * reserved word for the chosen database engine. *RDS for MySQL* Constraints: + Must be 1 to 16 letters or numbers.
     * + First character must be a letter. + Can't be a reserved word for the chosen database engine. *RDS for Oracle*
     * Constraints: + Must be 1 to 30 letters or numbers. + First character must be a letter. + Can't be a reserved word
     * for the chosen database engine. *RDS for PostgreSQL* Constraints: + Must be 1 to 63 letters or numbers. + First
     * character must be a letter. + Can't be a reserved word for the chosen database engine.
     */
    private String masterUsername;

    /*
     * The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.
     * For more information about this setting, including limitations that apply to it, see [Managing capacity
     * automatically with Amazon RDS storage
     * autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.
     * Autoscaling) in the *Amazon RDS User Guide*. This setting doesn't apply to the following DB instances: + Amazon
     * Aurora (Storage is managed by the DB cluster.) + RDS Custom
     */
    private Integer maxAllocatedStorage;

    /*
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To
     * disable collection of Enhanced Monitoring metrics, specify 0. The default is 0. If ``MonitoringRoleArn`` is
     * specified, then you must set ``MonitoringInterval`` to a value other than 0. This setting doesn't apply to RDS
     * Custom. Valid Values: ``0, 1, 5, 10, 15, 30, 60``
     */
    private Integer monitoringInterval;

    /*
     * The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For
     * example, ``arn:aws:iam:123456789012:role/emaccess``. For information on creating a monitoring role, see [Setting
     * Up and Enabling Enhanced
     * Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.
     * Enabling) in the *Amazon RDS User Guide*. If ``MonitoringInterval`` is set to a value other than ``0``, then you
     * must supply a ``MonitoringRoleArn`` value. This setting doesn't apply to RDS Custom DB instances.
     */
    private String monitoringRoleArn;

    /*
     * Specifies whether the database instance is a Multi-AZ DB instance deployment. You can't set the
     * ``AvailabilityZone`` parameter if the ``MultiAZ`` parameter is set to true. For more information, see [Multi-AZ
     * deployments for high availability](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html)
     * in the *Amazon RDS User Guide*. *Amazon Aurora* Not applicable. Amazon Aurora storage is replicated across all of
     * the Availability Zones and doesn't require the ``MultiAZ`` option to be set.
     */
    private Boolean multiAZ;

    /*
     * The name of the NCHAR character set for the Oracle DB instance. This setting doesn't apply to RDS Custom DB
     * instances.
     */
    private String ncharCharacterSetName;

    /*
     * The network type of the DB instance. Valid values: + ``IPV4`` + ``DUAL`` The network type is determined by the
     * ``DBSubnetGroup`` specified for the DB instance. A ``DBSubnetGroup`` can support only the IPv4 protocol or the
     * IPv4 and IPv6 protocols (``DUAL``). For more information, see [Working with a DB instance in a
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the
     * *Amazon RDS User Guide.*
     */
    private String networkType;

    /*
     * Indicates that the DB instance should be associated with the specified option group. Permanent options, such as
     * the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group
     * can't be removed from a DB instance once it is associated with a DB instance.
     */
    private String optionGroupName;

    /*
     * The AWS KMS key identifier for encryption of Performance Insights data. The KMS key identifier is the key ARN,
     * key ID, alias ARN, or alias name for the KMS key. If you do not specify a value for
     * ``PerformanceInsightsKMSKeyId``, then Amazon RDS uses your default KMS key. There is a default KMS key for your
     * AWS account. Your AWS account has a different default KMS key for each AWS Region. For information about enabling
     * Performance Insights, see
     * [EnablePerformanceInsights](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-
     * database-instance.html#cfn-rds-dbinstance-enableperformanceinsights).
     */
    private String performanceInsightsKmsKeyId;

    /*
     * The number of days to retain Performance Insights data. This setting doesn't apply to RDS Custom DB instances.
     * Valid Values: + ``7`` + *month* * 31, where *month* is a number of months from 1-23. Examples: ``93`` (3 months *
     * 31), ``341`` (11 months * 31), ``589`` (19 months * 31) + ``731`` Default: ``7`` days If you specify a retention
     * period that isn't valid, such as ``94``, Amazon RDS returns an error.
     */
    private Integer performanceInsightsRetentionPeriod;

    /*
     * The port number on which the database accepts connections. *Amazon Aurora* Not applicable. The port number is
     * managed by the DB cluster. *Db2* Default value: ``50000``
     */
    private String port;

    /*
     * The daily time range during which automated backups are created if automated backups are enabled, using the
     * ``BackupRetentionPeriod`` parameter. For more information, see [Backup
     * Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#
     * USER_WorkingWithAutomatedBackups.BackupWindow) in the *Amazon RDS User Guide.* Constraints: + Must be in the
     * format ``hh24:mi-hh24:mi``. + Must be in Universal Coordinated Time (UTC). + Must not conflict with the preferred
     * maintenance window. + Must be at least 30 minutes. *Amazon Aurora* Not applicable. The daily time range for
     * creating automated backups is managed by the DB cluster.
     */
    private String preferredBackupWindow;

    /*
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). Format:
     * ``ddd:hh24:mi-ddd:hh24:mi`` The default is a 30-minute window selected at random from an 8-hour block of time for
     * each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the
     * Preferred DB Instance Maintenance
     * Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#
     * AdjustingTheMaintenanceWindow) in the *Amazon RDS User Guide.* This property applies when AWS CloudFormation
     * initially creates the DB instance. If you use AWS CloudFormation to update the DB instance, those updates are
     * applied immediately. Constraints: Minimum 30-minute window.
     */
    private String preferredMaintenanceWindow;

    /*
     * The number of CPU cores and the number of threads per core for the DB instance class of the DB instance. This
     * setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
     */
    private List<ProcessorFeature> processorFeatures;

    /*
     * The order of priority in which an Aurora Replica is promoted to the primary instance after a failure of the
     * existing primary instance. For more information, see [Fault Tolerance for an Aurora DB
     * Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora
     * .Managing.FaultTolerance) in the *Amazon Aurora User Guide*. This setting doesn't apply to RDS Custom DB
     * instances. Default: ``1`` Valid Values: ``0 - 15``
     */
    private Integer promotionTier;

    /*
     * Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates
     * an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS
     * CloudFormation creates an internal instance with a DNS name that resolves to a private IP address. The default
     * behavior value depends on your VPC setup and the database subnet group. For more information, see the
     * ``PubliclyAccessible`` parameter in the
     * [CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) in the
     * *Amazon RDS API Reference*.
     */
    private Boolean publiclyAccessible;

    /*
     * The open mode of an Oracle read replica. For more information, see [Working with Oracle Read Replicas for Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the *Amazon RDS User
     * Guide*. This setting is only supported in RDS for Oracle. Default: ``open-read-only`` Valid Values:
     * ``open-read-only`` or ``mounted``
     */
    private String replicaMode;

    /*
     * The date and time to restore from. Constraints: + Must be a time in Universal Coordinated Time (UTC) format. +
     * Must be before the latest restorable time for the DB instance. + Can't be specified if the
     * ``UseLatestRestorableTime`` parameter is enabled. Example: ``2009-09-07T23:45:00Z``
     */
    private String restoreTime;

    /*
     * The identifier of the Multi-AZ DB cluster that will act as the source for the read replica. Each DB cluster can
     * have up to 15 read replicas. Constraints: + Must be the identifier of an existing Multi-AZ DB cluster. + Can't be
     * specified if the ``SourceDBInstanceIdentifier`` parameter is also specified. + The specified DB cluster must have
     * automatic backups enabled, that is, its backup retention period must be greater than 0. + The source DB cluster
     * must be in the same AWS-Region as the read replica. Cross-Region replication isn't supported.
     */
    private String sourceDBClusterIdentifier;

    /*
     * The Amazon Resource Name (ARN) of the replicated automated backups from which to restore, for example,
     * ``arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE``. This setting doesn't apply to
     * RDS Custom.
     */
    private String sourceDBInstanceAutomatedBackupsArn;

    /*
     * If you want to create a read replica DB instance, specify the ID of the source DB instance. Each DB instance can
     * have a limited number of read replicas. For more information, see [Working with Read
     * Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/USER_ReadRepl.html) in the *Amazon RDS User
     * Guide*. For information about constraints that apply to DB instance identifiers, see [Naming constraints in
     * Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in
     * the *Amazon RDS User Guide*. The ``SourceDBInstanceIdentifier`` property determines whether a DB instance is a
     * read replica. If you remove the ``SourceDBInstanceIdentifier`` property from your template and then update your
     * stack, AWS CloudFormation promotes the Read Replica to a standalone DB instance. + If you specify a source DB
     * instance that uses VPC security groups, we recommend that you specify the ``VPCSecurityGroups`` property. If you
     * don't specify the property, the read replica inherits the value of the ``VPCSecurityGroups`` property from the
     * source DB when you create the replica. However, if you update the stack, AWS CloudFormation reverts the replica's
     * ``VPCSecurityGroups`` property to the default value because it's not defined in the stack's template. This change
     * might cause unexpected issues. + Read replicas don't support deletion policies. AWS CloudFormation ignores any
     * deletion policy that's associated with a read replica. + If you specify ``SourceDBInstanceIdentifier``, don't
     * specify the ``DBSnapshotIdentifier`` property. You can't create a read replica from a snapshot. + Don't set the
     * ``BackupRetentionPeriod``, ``DBName``, ``MasterUsername``, ``MasterUserPassword``, and ``PreferredBackupWindow``
     * properties. The database attributes are inherited from the source DB instance, and backups are disabled for read
     * replicas. + If the source DB instance is in a different region than the read replica, specify the source region
     * in ``SourceRegion``, and specify an ARN for a valid DB instance in ``SourceDBInstanceIdentifier``. For more
     * information, see [Constructing a Amazon RDS Amazon Resource Name
     * (ARN)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN) in the *Amazon
     * RDS User Guide*. + For DB instances in Amazon Aurora clusters, don't specify this property. Amazon RDS
     * automatically assigns writer and reader DB instances.
     */
    private String sourceDBInstanceIdentifier;

    /*
     * The resource ID of the source DB instance from which to restore.
     */
    private String sourceDbiResourceId;

    /*
     * The ID of the region that contains the source DB instance for the read replica.
     */
    private String sourceRegion;

    /*
     * A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted. If you specify the
     * ``KmsKeyId`` property, then you must enable encryption. If you specify the ``SourceDBInstanceIdentifier``
     * property, don't specify this property. The value is inherited from the source DB instance, and if the DB instance
     * is encrypted, the specified ``KmsKeyId`` property is used. If you specify the ``DBSnapshotIdentifier`` and the
     * specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the
     * specified ``KmsKeyId`` property is used. If you specify the ``DBSnapshotIdentifier`` and the specified snapshot
     * isn't encrypted, you can use this property to specify that the restored DB instance is encrypted. Specify the
     * ``KmsKeyId`` property for the KMS key to use for encryption. If you don't want the restored DB instance to be
     * encrypted, then don't set this property or set it to ``false``. *Amazon Aurora* Not applicable. The encryption
     * for DB instances is managed by the DB cluster.
     */
    private Boolean storageEncrypted;

    /*
     * Specifies the storage throughput value for the DB instance. This setting applies only to the ``gp3`` storage
     * type. This setting doesn't apply to RDS Custom or Amazon Aurora.
     */
    private Integer storageThroughput;

    /*
     * The storage type to associate with the DB instance. If you specify ``io1``, ``io2``, or ``gp3``, you must also
     * include a value for the ``Iops`` parameter. This setting doesn't apply to Amazon Aurora DB instances. Storage is
     * managed by the DB cluster. Valid Values: ``gp2 | gp3 | io1 | io2 | standard`` Default: ``io1``, if the ``Iops``
     * parameter is specified. Otherwise, ``gp2``.
     */
    private String storageType;

    /*
     * An optional array of key-value pairs to apply to this DB instance.
     */
    private List<TagAutoGenerated46> tags;

    /*
     * Property tdeCredentialArn
     */
    private String tdeCredentialArn;

    /*
     * Property tdeCredentialPassword
     */
    private String tdeCredentialPassword;

    /*
     * The time zone of the DB instance. The time zone parameter is currently supported only by [Microsoft SQL
     * Server](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.
     * TimeZone).
     */
    private String timezone;

    /*
     * Specifies whether the DB instance class of the DB instance uses its default processor features. This setting
     * doesn't apply to RDS Custom DB instances.
     */
    private Boolean useDefaultProcessorFeatures;

    /*
     * Specifies whether the DB instance is restored from the latest backup time. By default, the DB instance isn't
     * restored from the latest backup time. Constraints: + Can't be specified if the ``RestoreTime`` parameter is
     * provided.
     */
    private Boolean useLatestRestorableTime;

    /*
     * A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of
     * existing VPC security groups and references to
     * [AWS::EC2::SecurityGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-
     * security-group.html) resources created in the template. If you plan to update the resource, don't specify VPC
     * security groups in a shared VPC. If you set ``VPCSecurityGroups``, you must not set
     * [DBSecurityGroups](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-
     * instance.html#cfn-rds-dbinstance-dbsecuritygroups), and vice versa. You can migrate a DB instance in your stack
     * from an RDS DB security group to a VPC security group, but keep the following in mind: + You can't revert to
     * using an RDS security group after you establish a VPC security group membership. + When you migrate your DB
     * instance to VPC security groups, if your stack update rolls back because the DB instance update fails or because
     * an update fails in another AWS CloudFormation resource, the rollback fails because it can't revert to an RDS
     * security group. + To use the properties that are available when you use a VPC security group, you must recreate
     * the DB instance. If you don't, AWS CloudFormation submits only the property values that are listed in the
     * [DBSecurityGroups](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-
     * instance.html#cfn-rds-dbinstance-dbsecuritygroups) property. To avoid this situation, migrate your DB instance to
     * using VPC security groups only when that is the only change in your stack template. *Amazon Aurora* Not
     * applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. If specified, the
     * setting must match the DB cluster setting.
     */
    private List<String> vpcSecurityGroups;

    /**
     * Creates an instance of AwsRdsDBInstanceProperties class.
     */
    public AwsRdsDBInstanceProperties() {
    }

    /**
     * Get the allocatedStorage property: The amount of storage in gibibytes (GiB) to be initially allocated for the
     * database instance. If any value is set in the ``Iops`` parameter, ``AllocatedStorage`` must be at least 100 GiB,
     * which corresponds to the minimum Iops value of 1,000. If you increase the ``Iops`` value (in 1,000 IOPS
     * increments), then you must also increase the ``AllocatedStorage`` value (in 100-GiB increments). *Amazon Aurora*
     * Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases,
     * though you are only charged for the space that you use in an Aurora cluster volume. *Db2* Constraints to the
     * amount of storage for each storage type are the following: + General Purpose (SSD) storage (gp3): Must be an
     * integer from 20 to 64000. + Provisioned IOPS storage (io1): Must be an integer from 100 to 64000. *MySQL*
     * Constraints to the amount of storage for each storage type are the following: + General Purpose (SSD) storage
     * (gp2): Must be an integer from 20 to 65536. + Provisioned IOPS storage (io1): Must be an integer from 100 to
     * 65536. + Magnetic storage (standard): Must be an integer from 5 to 3072. *MariaDB* Constraints to the amount of
     * storage for each storage type are the following: + General Purpose (SSD) storage (gp2): Must be an integer from
     * 20 to 65536. + Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. + Magnetic storage
     * (standard): Must be an integer from 5 to 3072. *PostgreSQL* Constraints to the amount of storage for each storage
     * type are the following: + General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. + Provisioned
     * IOPS storage (io1): Must be an integer from 100 to 65536. + Magnetic storage (standard): Must be an integer from
     * 5 to 3072. *Oracle* Constraints to the amount of storage for each storage type are the following: + General
     * Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. + Provisioned IOPS storage (io1): Must be an
     * integer from 100 to 65536. + Magnetic storage (standard): Must be an integer from 10 to 3072. *SQL Server*
     * Constraints to the amount of storage for each storage type are the following: + General Purpose (SSD) storage
     * (gp2): + Enterprise and Standard editions: Must be an integer from 20 to 16384. + Web and Express editions: Must
     * be an integer from 20 to 16384. + Provisioned IOPS storage (io1): + Enterprise and Standard editions: Must be an
     * integer from 20 to 16384. + Web and Express editions: Must be an integer from 20 to 16384. + Magnetic storage
     * (standard): + Enterprise and Standard editions: Must be an integer from 20 to 1024. + Web and Express editions:
     * Must be an integer from 20 to 1024.
     * 
     * @return the allocatedStorage value.
     */
    public String allocatedStorage() {
        return this.allocatedStorage;
    }

    /**
     * Set the allocatedStorage property: The amount of storage in gibibytes (GiB) to be initially allocated for the
     * database instance. If any value is set in the ``Iops`` parameter, ``AllocatedStorage`` must be at least 100 GiB,
     * which corresponds to the minimum Iops value of 1,000. If you increase the ``Iops`` value (in 1,000 IOPS
     * increments), then you must also increase the ``AllocatedStorage`` value (in 100-GiB increments). *Amazon Aurora*
     * Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases,
     * though you are only charged for the space that you use in an Aurora cluster volume. *Db2* Constraints to the
     * amount of storage for each storage type are the following: + General Purpose (SSD) storage (gp3): Must be an
     * integer from 20 to 64000. + Provisioned IOPS storage (io1): Must be an integer from 100 to 64000. *MySQL*
     * Constraints to the amount of storage for each storage type are the following: + General Purpose (SSD) storage
     * (gp2): Must be an integer from 20 to 65536. + Provisioned IOPS storage (io1): Must be an integer from 100 to
     * 65536. + Magnetic storage (standard): Must be an integer from 5 to 3072. *MariaDB* Constraints to the amount of
     * storage for each storage type are the following: + General Purpose (SSD) storage (gp2): Must be an integer from
     * 20 to 65536. + Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. + Magnetic storage
     * (standard): Must be an integer from 5 to 3072. *PostgreSQL* Constraints to the amount of storage for each storage
     * type are the following: + General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. + Provisioned
     * IOPS storage (io1): Must be an integer from 100 to 65536. + Magnetic storage (standard): Must be an integer from
     * 5 to 3072. *Oracle* Constraints to the amount of storage for each storage type are the following: + General
     * Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. + Provisioned IOPS storage (io1): Must be an
     * integer from 100 to 65536. + Magnetic storage (standard): Must be an integer from 10 to 3072. *SQL Server*
     * Constraints to the amount of storage for each storage type are the following: + General Purpose (SSD) storage
     * (gp2): + Enterprise and Standard editions: Must be an integer from 20 to 16384. + Web and Express editions: Must
     * be an integer from 20 to 16384. + Provisioned IOPS storage (io1): + Enterprise and Standard editions: Must be an
     * integer from 20 to 16384. + Web and Express editions: Must be an integer from 20 to 16384. + Magnetic storage
     * (standard): + Enterprise and Standard editions: Must be an integer from 20 to 1024. + Web and Express editions:
     * Must be an integer from 20 to 1024.
     * 
     * @param allocatedStorage the allocatedStorage value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withAllocatedStorage(String allocatedStorage) {
        this.allocatedStorage = allocatedStorage;
        return this;
    }

    /**
     * Get the allowMajorVersionUpgrade property: A value that indicates whether major version upgrades are allowed.
     * Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.
     * Constraints: Major version upgrades must be allowed when specifying a value for the ``EngineVersion`` parameter
     * that is a different major version than the DB instance's current version.
     * 
     * @return the allowMajorVersionUpgrade value.
     */
    public Boolean allowMajorVersionUpgrade() {
        return this.allowMajorVersionUpgrade;
    }

    /**
     * Set the allowMajorVersionUpgrade property: A value that indicates whether major version upgrades are allowed.
     * Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.
     * Constraints: Major version upgrades must be allowed when specifying a value for the ``EngineVersion`` parameter
     * that is a different major version than the DB instance's current version.
     * 
     * @param allowMajorVersionUpgrade the allowMajorVersionUpgrade value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withAllowMajorVersionUpgrade(Boolean allowMajorVersionUpgrade) {
        this.allowMajorVersionUpgrade = allowMajorVersionUpgrade;
        return this;
    }

    /**
     * Get the associatedRoles property: The IAMlong (IAM) roles associated with the DB instance. *Amazon Aurora* Not
     * applicable. The associated roles are managed by the DB cluster.
     * 
     * @return the associatedRoles value.
     */
    public List<DBInstanceRole> associatedRoles() {
        return this.associatedRoles;
    }

    /**
     * Set the associatedRoles property: The IAMlong (IAM) roles associated with the DB instance. *Amazon Aurora* Not
     * applicable. The associated roles are managed by the DB cluster.
     * 
     * @param associatedRoles the associatedRoles value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withAssociatedRoles(List<DBInstanceRole> associatedRoles) {
        this.associatedRoles = associatedRoles;
        return this;
    }

    /**
     * Get the autoMinorVersionUpgrade property: A value that indicates whether minor engine upgrades are applied
     * automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied
     * automatically.
     * 
     * @return the autoMinorVersionUpgrade value.
     */
    public Boolean autoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade;
    }

    /**
     * Set the autoMinorVersionUpgrade property: A value that indicates whether minor engine upgrades are applied
     * automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied
     * automatically.
     * 
     * @param autoMinorVersionUpgrade the autoMinorVersionUpgrade value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
        this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
        return this;
    }

    /**
     * Get the automaticBackupReplicationKmsKeyId property: Property automaticBackupReplicationKmsKeyId.
     * 
     * @return the automaticBackupReplicationKmsKeyId value.
     */
    public String automaticBackupReplicationKmsKeyId() {
        return this.automaticBackupReplicationKmsKeyId;
    }

    /**
     * Set the automaticBackupReplicationKmsKeyId property: Property automaticBackupReplicationKmsKeyId.
     * 
     * @param automaticBackupReplicationKmsKeyId the automaticBackupReplicationKmsKeyId value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties
        withAutomaticBackupReplicationKmsKeyId(String automaticBackupReplicationKmsKeyId) {
        this.automaticBackupReplicationKmsKeyId = automaticBackupReplicationKmsKeyId;
        return this;
    }

    /**
     * Get the automaticBackupReplicationRegion property: The destination region for the backup replication of the DB
     * instance. For more info, see [Replicating automated backups to another
     * Region](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html) in the *Amazon RDS
     * User Guide*.
     * 
     * @return the automaticBackupReplicationRegion value.
     */
    public String automaticBackupReplicationRegion() {
        return this.automaticBackupReplicationRegion;
    }

    /**
     * Set the automaticBackupReplicationRegion property: The destination region for the backup replication of the DB
     * instance. For more info, see [Replicating automated backups to another
     * Region](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html) in the *Amazon RDS
     * User Guide*.
     * 
     * @param automaticBackupReplicationRegion the automaticBackupReplicationRegion value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withAutomaticBackupReplicationRegion(String automaticBackupReplicationRegion) {
        this.automaticBackupReplicationRegion = automaticBackupReplicationRegion;
        return this;
    }

    /**
     * Get the availabilityZone property: The Availability Zone (AZ) where the database will be created. For information
     * on AWS-Regions and Availability Zones, see [Regions and Availability
     * Zones](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html). For
     * Amazon Aurora, each Aurora DB cluster hosts copies of its storage in three separate Availability Zones. Specify
     * one of these Availability Zones. Aurora automatically chooses an appropriate Availability Zone if you don't
     * specify one. Default: A random, system-chosen Availability Zone in the endpoint's AWS-Region. Constraints: + The
     * ``AvailabilityZone`` parameter can't be specified if the DB instance is a Multi-AZ deployment. + The specified
     * Availability Zone must be in the same AWS-Region as the current endpoint. Example: ``us-east-1d``.
     * 
     * @return the availabilityZone value.
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }

    /**
     * Set the availabilityZone property: The Availability Zone (AZ) where the database will be created. For information
     * on AWS-Regions and Availability Zones, see [Regions and Availability
     * Zones](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html). For
     * Amazon Aurora, each Aurora DB cluster hosts copies of its storage in three separate Availability Zones. Specify
     * one of these Availability Zones. Aurora automatically chooses an appropriate Availability Zone if you don't
     * specify one. Default: A random, system-chosen Availability Zone in the endpoint's AWS-Region. Constraints: + The
     * ``AvailabilityZone`` parameter can't be specified if the DB instance is a Multi-AZ deployment. + The specified
     * Availability Zone must be in the same AWS-Region as the current endpoint. Example: ``us-east-1d``.
     * 
     * @param availabilityZone the availabilityZone value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }

    /**
     * Get the backupRetentionPeriod property: The number of days for which automated backups are retained. Setting this
     * parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. *Amazon
     * Aurora* Not applicable. The retention period for automated backups is managed by the DB cluster. Default: 1
     * Constraints: + Must be a value from 0 to 35 + Can't be set to 0 if the DB instance is a source to read replicas.
     * 
     * @return the backupRetentionPeriod value.
     */
    public Integer backupRetentionPeriod() {
        return this.backupRetentionPeriod;
    }

    /**
     * Set the backupRetentionPeriod property: The number of days for which automated backups are retained. Setting this
     * parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. *Amazon
     * Aurora* Not applicable. The retention period for automated backups is managed by the DB cluster. Default: 1
     * Constraints: + Must be a value from 0 to 35 + Can't be set to 0 if the DB instance is a source to read replicas.
     * 
     * @param backupRetentionPeriod the backupRetentionPeriod value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withBackupRetentionPeriod(Integer backupRetentionPeriod) {
        this.backupRetentionPeriod = backupRetentionPeriod;
        return this;
    }

    /**
     * Get the caCertificateIdentifier property: The identifier of the CA certificate for this DB instance. For more
     * information, see [Using SSL/TLS to encrypt a connection to a DB
     * instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User
     * Guide* and [Using SSL/TLS to encrypt a connection to a DB
     * cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon
     * Aurora User Guide*.
     * 
     * @return the caCertificateIdentifier value.
     */
    public String caCertificateIdentifier() {
        return this.caCertificateIdentifier;
    }

    /**
     * Set the caCertificateIdentifier property: The identifier of the CA certificate for this DB instance. For more
     * information, see [Using SSL/TLS to encrypt a connection to a DB
     * instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User
     * Guide* and [Using SSL/TLS to encrypt a connection to a DB
     * cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon
     * Aurora User Guide*.
     * 
     * @param caCertificateIdentifier the caCertificateIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withCaCertificateIdentifier(String caCertificateIdentifier) {
        this.caCertificateIdentifier = caCertificateIdentifier;
        return this;
    }

    /**
     * Get the certificateDetails property: The details of the DB instance's server certificate. Returns the details of
     * the DB instanceâ€™s server certificate. For more information, see [Using SSL/TLS to encrypt a connection to a DB
     * instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User
     * Guide* and [Using SSL/TLS to encrypt a connection to a DB
     * cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon
     * Aurora User Guide*.
     * 
     * @return the certificateDetails value.
     */
    public CertificateDetails certificateDetails() {
        return this.certificateDetails;
    }

    /**
     * Set the certificateDetails property: The details of the DB instance's server certificate. Returns the details of
     * the DB instanceâ€™s server certificate. For more information, see [Using SSL/TLS to encrypt a connection to a DB
     * instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User
     * Guide* and [Using SSL/TLS to encrypt a connection to a DB
     * cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon
     * Aurora User Guide*.
     * 
     * @param certificateDetails the certificateDetails value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withCertificateDetails(CertificateDetails certificateDetails) {
        this.certificateDetails = certificateDetails;
        return this;
    }

    /**
     * Get the certificateRotationRestart property: Specifies whether the DB instance is restarted when you rotate your
     * SSL/TLS certificate. By default, the DB instance is restarted when you rotate your SSL/TLS certificate. The
     * certificate is not updated until the DB instance is restarted. Set this parameter only if you are *not* using
     * SSL/TLS to connect to the DB instance. If you are using SSL/TLS to connect to the DB instance, follow the
     * appropriate instructions for your DB engine to rotate your SSL/TLS certificate: + For more information about
     * rotating your SSL/TLS certificate for RDS DB engines, see [Rotating Your SSL/TLS
     * Certificate.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html)
     * in the *Amazon RDS User Guide.* + For more information about rotating your SSL/TLS certificate for Aurora DB
     * engines, see [Rotating Your SSL/TLS
     * Certificate](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html)
     * in the *Amazon Aurora User Guide*. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @return the certificateRotationRestart value.
     */
    public Boolean certificateRotationRestart() {
        return this.certificateRotationRestart;
    }

    /**
     * Set the certificateRotationRestart property: Specifies whether the DB instance is restarted when you rotate your
     * SSL/TLS certificate. By default, the DB instance is restarted when you rotate your SSL/TLS certificate. The
     * certificate is not updated until the DB instance is restarted. Set this parameter only if you are *not* using
     * SSL/TLS to connect to the DB instance. If you are using SSL/TLS to connect to the DB instance, follow the
     * appropriate instructions for your DB engine to rotate your SSL/TLS certificate: + For more information about
     * rotating your SSL/TLS certificate for RDS DB engines, see [Rotating Your SSL/TLS
     * Certificate.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html)
     * in the *Amazon RDS User Guide.* + For more information about rotating your SSL/TLS certificate for Aurora DB
     * engines, see [Rotating Your SSL/TLS
     * Certificate](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html)
     * in the *Amazon Aurora User Guide*. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @param certificateRotationRestart the certificateRotationRestart value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withCertificateRotationRestart(Boolean certificateRotationRestart) {
        this.certificateRotationRestart = certificateRotationRestart;
        return this;
    }

    /**
     * Get the characterSetName property: For supported engines, indicates that the DB instance should be associated
     * with the specified character set. *Amazon Aurora* Not applicable. The character set is managed by the DB cluster.
     * For more information, see
     * [AWS::RDS::DBCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html).
     * 
     * @return the characterSetName value.
     */
    public String characterSetName() {
        return this.characterSetName;
    }

    /**
     * Set the characterSetName property: For supported engines, indicates that the DB instance should be associated
     * with the specified character set. *Amazon Aurora* Not applicable. The character set is managed by the DB cluster.
     * For more information, see
     * [AWS::RDS::DBCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html).
     * 
     * @param characterSetName the characterSetName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withCharacterSetName(String characterSetName) {
        this.characterSetName = characterSetName;
        return this;
    }

    /**
     * Get the copyTagsToSnapshot property: Specifies whether to copy tags from the DB instance to snapshots of the DB
     * instance. By default, tags are not copied. This setting doesn't apply to Amazon Aurora DB instances. Copying tags
     * to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB
     * cluster setting.
     * 
     * @return the copyTagsToSnapshot value.
     */
    public Boolean copyTagsToSnapshot() {
        return this.copyTagsToSnapshot;
    }

    /**
     * Set the copyTagsToSnapshot property: Specifies whether to copy tags from the DB instance to snapshots of the DB
     * instance. By default, tags are not copied. This setting doesn't apply to Amazon Aurora DB instances. Copying tags
     * to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB
     * cluster setting.
     * 
     * @param copyTagsToSnapshot the copyTagsToSnapshot value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withCopyTagsToSnapshot(Boolean copyTagsToSnapshot) {
        this.copyTagsToSnapshot = copyTagsToSnapshot;
        return this;
    }

    /**
     * Get the customIamInstanceProfile property: The instance profile associated with the underlying Amazon EC2
     * instance of an RDS Custom DB instance. This setting is required for RDS Custom. Constraints: + The profile must
     * exist in your account. + The profile must have an IAM role that Amazon EC2 has permissions to assume. + The
     * instance profile name and the associated IAM role name must start with the prefix ``AWSRDSCustom``. For the list
     * of permissions required for the IAM role, see [Configure IAM and your
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc) in
     * the *Amazon RDS User Guide*.
     * 
     * @return the customIamInstanceProfile value.
     */
    public String customIamInstanceProfile() {
        return this.customIamInstanceProfile;
    }

    /**
     * Set the customIamInstanceProfile property: The instance profile associated with the underlying Amazon EC2
     * instance of an RDS Custom DB instance. This setting is required for RDS Custom. Constraints: + The profile must
     * exist in your account. + The profile must have an IAM role that Amazon EC2 has permissions to assume. + The
     * instance profile name and the associated IAM role name must start with the prefix ``AWSRDSCustom``. For the list
     * of permissions required for the IAM role, see [Configure IAM and your
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc) in
     * the *Amazon RDS User Guide*.
     * 
     * @param customIamInstanceProfile the customIamInstanceProfile value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withCustomIamInstanceProfile(String customIamInstanceProfile) {
        this.customIamInstanceProfile = customIamInstanceProfile;
        return this;
    }

    /**
     * Get the dbClusterIdentifier property: The identifier of the DB cluster that the instance will belong to.
     * 
     * @return the dbClusterIdentifier value.
     */
    public String dbClusterIdentifier() {
        return this.dbClusterIdentifier;
    }

    /**
     * Set the dbClusterIdentifier property: The identifier of the DB cluster that the instance will belong to.
     * 
     * @param dbClusterIdentifier the dbClusterIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbClusterIdentifier(String dbClusterIdentifier) {
        this.dbClusterIdentifier = dbClusterIdentifier;
        return this;
    }

    /**
     * Get the dbClusterSnapshotIdentifier property: The identifier for the Multi-AZ DB cluster snapshot to restore
     * from. For more information on Multi-AZ DB clusters, see [Multi-AZ DB cluster
     * deployments](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html) in the
     * *Amazon RDS User Guide*. Constraints: + Must match the identifier of an existing Multi-AZ DB cluster snapshot. +
     * Can't be specified when ``DBSnapshotIdentifier`` is specified. + Must be specified when ``DBSnapshotIdentifier``
     * isn't specified. + If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the
     * ``DBClusterSnapshotIdentifier`` must be the ARN of the shared snapshot. + Can't be the identifier of an Aurora DB
     * cluster snapshot.
     * 
     * @return the dbClusterSnapshotIdentifier value.
     */
    public String dbClusterSnapshotIdentifier() {
        return this.dbClusterSnapshotIdentifier;
    }

    /**
     * Set the dbClusterSnapshotIdentifier property: The identifier for the Multi-AZ DB cluster snapshot to restore
     * from. For more information on Multi-AZ DB clusters, see [Multi-AZ DB cluster
     * deployments](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html) in the
     * *Amazon RDS User Guide*. Constraints: + Must match the identifier of an existing Multi-AZ DB cluster snapshot. +
     * Can't be specified when ``DBSnapshotIdentifier`` is specified. + Must be specified when ``DBSnapshotIdentifier``
     * isn't specified. + If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the
     * ``DBClusterSnapshotIdentifier`` must be the ARN of the shared snapshot. + Can't be the identifier of an Aurora DB
     * cluster snapshot.
     * 
     * @param dbClusterSnapshotIdentifier the dbClusterSnapshotIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbClusterSnapshotIdentifier(String dbClusterSnapshotIdentifier) {
        this.dbClusterSnapshotIdentifier = dbClusterSnapshotIdentifier;
        return this;
    }

    /**
     * Get the dbInstanceArn property: Property dbInstanceArn.
     * 
     * @return the dbInstanceArn value.
     */
    public String dbInstanceArn() {
        return this.dbInstanceArn;
    }

    /**
     * Set the dbInstanceArn property: Property dbInstanceArn.
     * 
     * @param dbInstanceArn the dbInstanceArn value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbInstanceArn(String dbInstanceArn) {
        this.dbInstanceArn = dbInstanceArn;
        return this;
    }

    /**
     * Get the dbInstanceClass property: The compute and memory capacity of the DB instance, for example
     * ``db.m5.large``. Not all DB instance classes are available in all AWS-Regions, or for all database engines. For
     * the full list of DB instance classes, and availability for your engine, see [DB instance
     * classes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS
     * User Guide* or [Aurora DB instance
     * classes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html) in the
     * *Amazon Aurora User Guide*.
     * 
     * @return the dbInstanceClass value.
     */
    public String dbInstanceClass() {
        return this.dbInstanceClass;
    }

    /**
     * Set the dbInstanceClass property: The compute and memory capacity of the DB instance, for example
     * ``db.m5.large``. Not all DB instance classes are available in all AWS-Regions, or for all database engines. For
     * the full list of DB instance classes, and availability for your engine, see [DB instance
     * classes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS
     * User Guide* or [Aurora DB instance
     * classes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html) in the
     * *Amazon Aurora User Guide*.
     * 
     * @param dbInstanceClass the dbInstanceClass value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbInstanceClass(String dbInstanceClass) {
        this.dbInstanceClass = dbInstanceClass;
        return this;
    }

    /**
     * Get the dbInstanceIdentifier property: A name for the DB instance. If you specify a name, AWS CloudFormation
     * converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses
     * that ID for the DB instance. For more information, see [Name
     * Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). For information
     * about constraints that apply to DB instance identifiers, see [Naming constraints in Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the
     * *Amazon RDS User Guide*. If you specify a name, you can't perform updates that require replacement of this
     * resource. You can perform updates that require no or some interruption. If you must replace the resource, specify
     * a new name.
     * 
     * @return the dbInstanceIdentifier value.
     */
    public String dbInstanceIdentifier() {
        return this.dbInstanceIdentifier;
    }

    /**
     * Set the dbInstanceIdentifier property: A name for the DB instance. If you specify a name, AWS CloudFormation
     * converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses
     * that ID for the DB instance. For more information, see [Name
     * Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). For information
     * about constraints that apply to DB instance identifiers, see [Naming constraints in Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the
     * *Amazon RDS User Guide*. If you specify a name, you can't perform updates that require replacement of this
     * resource. You can perform updates that require no or some interruption. If you must replace the resource, specify
     * a new name.
     * 
     * @param dbInstanceIdentifier the dbInstanceIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbInstanceIdentifier(String dbInstanceIdentifier) {
        this.dbInstanceIdentifier = dbInstanceIdentifier;
        return this;
    }

    /**
     * Get the dbName property: The meaning of this parameter differs according to the database engine you use. If you
     * specify the ``DBSnapshotIdentifier`` property, this property only applies to RDS for Oracle. *Amazon Aurora* Not
     * applicable. The database name is managed by the DB cluster. *Db2* The name of the database to create when the DB
     * instance is created. If this parameter isn't specified, no database is created in the DB instance. Constraints: +
     * Must contain 1 to 64 letters or numbers. + Must begin with a letter. Subsequent characters can be letters,
     * underscores, or digits (0-9). + Can't be a word reserved by the specified database engine. *MySQL* The name of
     * the database to create when the DB instance is created. If this parameter is not specified, no database is
     * created in the DB instance. Constraints: + Must contain 1 to 64 letters or numbers. + Can't be a word reserved by
     * the specified database engine *MariaDB* The name of the database to create when the DB instance is created. If
     * this parameter is not specified, no database is created in the DB instance. Constraints: + Must contain 1 to 64
     * letters or numbers. + Can't be a word reserved by the specified database engine *PostgreSQL* The name of the
     * database to create when the DB instance is created. If this parameter is not specified, the default ``postgres``
     * database is created in the DB instance. Constraints: + Must begin with a letter. Subsequent characters can be
     * letters, underscores, or digits (0-9). + Must contain 1 to 63 characters. + Can't be a word reserved by the
     * specified database engine *Oracle* The Oracle System ID (SID) of the created DB instance. If you specify
     * ``null``, the default value ``ORCL`` is used. You can't specify the string NULL, or any other reserved word, for
     * ``DBName``. Default: ``ORCL`` Constraints: + Can't be longer than 8 characters *SQL Server* Not applicable. Must
     * be null.
     * 
     * @return the dbName value.
     */
    public String dbName() {
        return this.dbName;
    }

    /**
     * Set the dbName property: The meaning of this parameter differs according to the database engine you use. If you
     * specify the ``DBSnapshotIdentifier`` property, this property only applies to RDS for Oracle. *Amazon Aurora* Not
     * applicable. The database name is managed by the DB cluster. *Db2* The name of the database to create when the DB
     * instance is created. If this parameter isn't specified, no database is created in the DB instance. Constraints: +
     * Must contain 1 to 64 letters or numbers. + Must begin with a letter. Subsequent characters can be letters,
     * underscores, or digits (0-9). + Can't be a word reserved by the specified database engine. *MySQL* The name of
     * the database to create when the DB instance is created. If this parameter is not specified, no database is
     * created in the DB instance. Constraints: + Must contain 1 to 64 letters or numbers. + Can't be a word reserved by
     * the specified database engine *MariaDB* The name of the database to create when the DB instance is created. If
     * this parameter is not specified, no database is created in the DB instance. Constraints: + Must contain 1 to 64
     * letters or numbers. + Can't be a word reserved by the specified database engine *PostgreSQL* The name of the
     * database to create when the DB instance is created. If this parameter is not specified, the default ``postgres``
     * database is created in the DB instance. Constraints: + Must begin with a letter. Subsequent characters can be
     * letters, underscores, or digits (0-9). + Must contain 1 to 63 characters. + Can't be a word reserved by the
     * specified database engine *Oracle* The Oracle System ID (SID) of the created DB instance. If you specify
     * ``null``, the default value ``ORCL`` is used. You can't specify the string NULL, or any other reserved word, for
     * ``DBName``. Default: ``ORCL`` Constraints: + Can't be longer than 8 characters *SQL Server* Not applicable. Must
     * be null.
     * 
     * @param dbName the dbName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbName(String dbName) {
        this.dbName = dbName;
        return this;
    }

    /**
     * Get the dbParameterGroupName property: The name of an existing DB parameter group or a reference to an
     * [AWS::RDS::DBParameterGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html)
     * resource created in the template. To list all of the available DB parameter group names, use the following
     * command: ``aws rds describe-db-parameter-groups --query 'DBParameterGroups[].DBParameterGroupName' --output
     * text`` If any of the data members of the referenced parameter group are changed during an update, the DB instance
     * might need to be restarted, which causes some interruption. If the parameter group contains static parameters,
     * whether they were changed or not, an update triggers a reboot. If you don't specify a value for
     * ``DBParameterGroupName`` property, the default DB parameter group for the specified engine and engine version is
     * used.
     * 
     * @return the dbParameterGroupName value.
     */
    public String dbParameterGroupName() {
        return this.dbParameterGroupName;
    }

    /**
     * Set the dbParameterGroupName property: The name of an existing DB parameter group or a reference to an
     * [AWS::RDS::DBParameterGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html)
     * resource created in the template. To list all of the available DB parameter group names, use the following
     * command: ``aws rds describe-db-parameter-groups --query 'DBParameterGroups[].DBParameterGroupName' --output
     * text`` If any of the data members of the referenced parameter group are changed during an update, the DB instance
     * might need to be restarted, which causes some interruption. If the parameter group contains static parameters,
     * whether they were changed or not, an update triggers a reboot. If you don't specify a value for
     * ``DBParameterGroupName`` property, the default DB parameter group for the specified engine and engine version is
     * used.
     * 
     * @param dbParameterGroupName the dbParameterGroupName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbParameterGroupName(String dbParameterGroupName) {
        this.dbParameterGroupName = dbParameterGroupName;
        return this;
    }

    /**
     * Get the dbSecurityGroups property: A list of the DB security groups to assign to the DB instance. The list can
     * include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created
     * in the template. If you set DBSecurityGroups, you must not set VPCSecurityGroups, and vice versa. Also, note that
     * the DBSecurityGroups property exists only for backwards compatibility with older regions and is no longer
     * recommended for providing security information to an RDS DB instance. Instead, use VPCSecurityGroups. If you
     * specify this property, AWS CloudFormation sends only the following properties (if specified) to Amazon RDS during
     * create operations: + ``AllocatedStorage`` + ``AutoMinorVersionUpgrade`` + ``AvailabilityZone`` +
     * ``BackupRetentionPeriod`` + ``CharacterSetName`` + ``DBInstanceClass`` + ``DBName`` + ``DBParameterGroupName`` +
     * ``DBSecurityGroups`` + ``DBSubnetGroupName`` + ``Engine`` + ``EngineVersion`` + ``Iops`` + ``LicenseModel`` +
     * ``MasterUsername`` + ``MasterUserPassword`` + ``MultiAZ`` + ``OptionGroupName`` + ``PreferredBackupWindow`` +
     * ``PreferredMaintenanceWindow`` All other properties are ignored. Specify a virtual private cloud (VPC) security
     * group if you want to submit other properties, such as ``StorageType``, ``StorageEncrypted``, or ``KmsKeyId``. If
     * you're already using the ``DBSecurityGroups`` property, you can't use these other properties by updating your DB
     * instance to use a VPC security group. You must recreate the DB instance.
     * 
     * @return the dbSecurityGroups value.
     */
    public List<String> dbSecurityGroups() {
        return this.dbSecurityGroups;
    }

    /**
     * Set the dbSecurityGroups property: A list of the DB security groups to assign to the DB instance. The list can
     * include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created
     * in the template. If you set DBSecurityGroups, you must not set VPCSecurityGroups, and vice versa. Also, note that
     * the DBSecurityGroups property exists only for backwards compatibility with older regions and is no longer
     * recommended for providing security information to an RDS DB instance. Instead, use VPCSecurityGroups. If you
     * specify this property, AWS CloudFormation sends only the following properties (if specified) to Amazon RDS during
     * create operations: + ``AllocatedStorage`` + ``AutoMinorVersionUpgrade`` + ``AvailabilityZone`` +
     * ``BackupRetentionPeriod`` + ``CharacterSetName`` + ``DBInstanceClass`` + ``DBName`` + ``DBParameterGroupName`` +
     * ``DBSecurityGroups`` + ``DBSubnetGroupName`` + ``Engine`` + ``EngineVersion`` + ``Iops`` + ``LicenseModel`` +
     * ``MasterUsername`` + ``MasterUserPassword`` + ``MultiAZ`` + ``OptionGroupName`` + ``PreferredBackupWindow`` +
     * ``PreferredMaintenanceWindow`` All other properties are ignored. Specify a virtual private cloud (VPC) security
     * group if you want to submit other properties, such as ``StorageType``, ``StorageEncrypted``, or ``KmsKeyId``. If
     * you're already using the ``DBSecurityGroups`` property, you can't use these other properties by updating your DB
     * instance to use a VPC security group. You must recreate the DB instance.
     * 
     * @param dbSecurityGroups the dbSecurityGroups value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbSecurityGroups(List<String> dbSecurityGroups) {
        this.dbSecurityGroups = dbSecurityGroups;
        return this;
    }

    /**
     * Get the dbSnapshotIdentifier property: The name or Amazon Resource Name (ARN) of the DB snapshot that's used to
     * restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the
     * snapshot. By specifying this property, you can create a DB instance from the specified DB snapshot. If the
     * ``DBSnapshotIdentifier`` property is an empty string or the ``AWS::RDS::DBInstance`` declaration has no
     * ``DBSnapshotIdentifier`` property, AWS CloudFormation creates a new database. If the property contains a value
     * (other than an empty string), AWS CloudFormation creates a database from the specified snapshot. If a snapshot
     * with the specified name doesn't exist, AWS CloudFormation can't create the database and it rolls back the stack.
     * Some DB instance properties aren't valid when you restore from a snapshot, such as the ``MasterUsername`` and
     * ``MasterUserPassword`` properties. For information about the properties that you can specify, see the
     * ``RestoreDBInstanceFromDBSnapshot`` action in the *Amazon RDS API Reference*. After you restore a DB instance
     * with a ``DBSnapshotIdentifier`` property, you must specify the same ``DBSnapshotIdentifier`` property for any
     * future updates to the DB instance. When you specify this property for an update, the DB instance is not restored
     * from the DB snapshot again, and the data in the database is not changed. However, if you don't specify the
     * ``DBSnapshotIdentifier`` property, an empty DB instance is created, and the original DB instance is deleted. If
     * you specify a property that is different from the previous snapshot restore property, a new DB instance is
     * restored from the specified ``DBSnapshotIdentifier`` property, and the original DB instance is deleted. If you
     * specify the ``DBSnapshotIdentifier`` property to restore a DB instance (as opposed to specifying it for DB
     * instance updates), then don't specify the following properties: + ``CharacterSetName`` + ``DBClusterIdentifier``
     * + ``DBName`` + ``DeleteAutomatedBackups`` + ``EnablePerformanceInsights`` + ``KmsKeyId`` + ``MasterUsername`` +
     * ``MasterUserPassword`` + ``PerformanceInsightsKMSKeyId`` + ``PerformanceInsightsRetentionPeriod`` +
     * ``PromotionTier`` + ``SourceDBInstanceIdentifier`` + ``SourceRegion`` + ``StorageEncrypted`` (for an encrypted
     * snapshot) + ``Timezone`` *Amazon Aurora* Not applicable. Snapshot restore is managed by the DB cluster.
     * 
     * @return the dbSnapshotIdentifier value.
     */
    public String dbSnapshotIdentifier() {
        return this.dbSnapshotIdentifier;
    }

    /**
     * Set the dbSnapshotIdentifier property: The name or Amazon Resource Name (ARN) of the DB snapshot that's used to
     * restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the
     * snapshot. By specifying this property, you can create a DB instance from the specified DB snapshot. If the
     * ``DBSnapshotIdentifier`` property is an empty string or the ``AWS::RDS::DBInstance`` declaration has no
     * ``DBSnapshotIdentifier`` property, AWS CloudFormation creates a new database. If the property contains a value
     * (other than an empty string), AWS CloudFormation creates a database from the specified snapshot. If a snapshot
     * with the specified name doesn't exist, AWS CloudFormation can't create the database and it rolls back the stack.
     * Some DB instance properties aren't valid when you restore from a snapshot, such as the ``MasterUsername`` and
     * ``MasterUserPassword`` properties. For information about the properties that you can specify, see the
     * ``RestoreDBInstanceFromDBSnapshot`` action in the *Amazon RDS API Reference*. After you restore a DB instance
     * with a ``DBSnapshotIdentifier`` property, you must specify the same ``DBSnapshotIdentifier`` property for any
     * future updates to the DB instance. When you specify this property for an update, the DB instance is not restored
     * from the DB snapshot again, and the data in the database is not changed. However, if you don't specify the
     * ``DBSnapshotIdentifier`` property, an empty DB instance is created, and the original DB instance is deleted. If
     * you specify a property that is different from the previous snapshot restore property, a new DB instance is
     * restored from the specified ``DBSnapshotIdentifier`` property, and the original DB instance is deleted. If you
     * specify the ``DBSnapshotIdentifier`` property to restore a DB instance (as opposed to specifying it for DB
     * instance updates), then don't specify the following properties: + ``CharacterSetName`` + ``DBClusterIdentifier``
     * + ``DBName`` + ``DeleteAutomatedBackups`` + ``EnablePerformanceInsights`` + ``KmsKeyId`` + ``MasterUsername`` +
     * ``MasterUserPassword`` + ``PerformanceInsightsKMSKeyId`` + ``PerformanceInsightsRetentionPeriod`` +
     * ``PromotionTier`` + ``SourceDBInstanceIdentifier`` + ``SourceRegion`` + ``StorageEncrypted`` (for an encrypted
     * snapshot) + ``Timezone`` *Amazon Aurora* Not applicable. Snapshot restore is managed by the DB cluster.
     * 
     * @param dbSnapshotIdentifier the dbSnapshotIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbSnapshotIdentifier(String dbSnapshotIdentifier) {
        this.dbSnapshotIdentifier = dbSnapshotIdentifier;
        return this;
    }

    /**
     * Get the dbSubnetGroupName property: A DB subnet group to associate with the DB instance. If you update this
     * value, the new subnet group must be a subnet group in a new VPC. If there's no DB subnet group, then the DB
     * instance isn't a VPC DB instance. For more information about using Amazon RDS in a VPC, see [Using Amazon RDS
     * with Amazon Virtual Private Cloud (VPC)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in
     * the *Amazon RDS User Guide*. *Amazon Aurora* Not applicable. The DB subnet group is managed by the DB cluster. If
     * specified, the setting must match the DB cluster setting.
     * 
     * @return the dbSubnetGroupName value.
     */
    public String dbSubnetGroupName() {
        return this.dbSubnetGroupName;
    }

    /**
     * Set the dbSubnetGroupName property: A DB subnet group to associate with the DB instance. If you update this
     * value, the new subnet group must be a subnet group in a new VPC. If there's no DB subnet group, then the DB
     * instance isn't a VPC DB instance. For more information about using Amazon RDS in a VPC, see [Using Amazon RDS
     * with Amazon Virtual Private Cloud (VPC)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in
     * the *Amazon RDS User Guide*. *Amazon Aurora* Not applicable. The DB subnet group is managed by the DB cluster. If
     * specified, the setting must match the DB cluster setting.
     * 
     * @param dbSubnetGroupName the dbSubnetGroupName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbSubnetGroupName(String dbSubnetGroupName) {
        this.dbSubnetGroupName = dbSubnetGroupName;
        return this;
    }

    /**
     * Get the dbSystemId property: The Oracle system identifier (SID), which is the name of the Oracle database
     * instance that manages your database files. In this context, the term 'Oracle database instance' refers
     * exclusively to the system global area (SGA) and Oracle background processes. If you don't specify a SID, the
     * value defaults to ``RDSCDB``. The Oracle SID is also the name of your CDB.
     * 
     * @return the dbSystemId value.
     */
    public String dbSystemId() {
        return this.dbSystemId;
    }

    /**
     * Set the dbSystemId property: The Oracle system identifier (SID), which is the name of the Oracle database
     * instance that manages your database files. In this context, the term 'Oracle database instance' refers
     * exclusively to the system global area (SGA) and Oracle background processes. If you don't specify a SID, the
     * value defaults to ``RDSCDB``. The Oracle SID is also the name of your CDB.
     * 
     * @param dbSystemId the dbSystemId value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbSystemId(String dbSystemId) {
        this.dbSystemId = dbSystemId;
        return this;
    }

    /**
     * Get the dbiResourceId property: Property dbiResourceId.
     * 
     * @return the dbiResourceId value.
     */
    public String dbiResourceId() {
        return this.dbiResourceId;
    }

    /**
     * Set the dbiResourceId property: Property dbiResourceId.
     * 
     * @param dbiResourceId the dbiResourceId value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDbiResourceId(String dbiResourceId) {
        this.dbiResourceId = dbiResourceId;
        return this;
    }

    /**
     * Get the dedicatedLogVolume property: Indicates whether the DB instance has a dedicated log volume (DLV) enabled.
     * 
     * @return the dedicatedLogVolume value.
     */
    public Boolean dedicatedLogVolume() {
        return this.dedicatedLogVolume;
    }

    /**
     * Set the dedicatedLogVolume property: Indicates whether the DB instance has a dedicated log volume (DLV) enabled.
     * 
     * @param dedicatedLogVolume the dedicatedLogVolume value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDedicatedLogVolume(Boolean dedicatedLogVolume) {
        this.dedicatedLogVolume = dedicatedLogVolume;
        return this;
    }

    /**
     * Get the deleteAutomatedBackups property: A value that indicates whether to remove automated backups immediately
     * after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups
     * immediately after the DB instance is deleted. *Amazon Aurora* Not applicable. When you delete a DB cluster, all
     * automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the DB
     * cluster are not deleted.
     * 
     * @return the deleteAutomatedBackups value.
     */
    public Boolean deleteAutomatedBackups() {
        return this.deleteAutomatedBackups;
    }

    /**
     * Set the deleteAutomatedBackups property: A value that indicates whether to remove automated backups immediately
     * after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups
     * immediately after the DB instance is deleted. *Amazon Aurora* Not applicable. When you delete a DB cluster, all
     * automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the DB
     * cluster are not deleted.
     * 
     * @param deleteAutomatedBackups the deleteAutomatedBackups value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDeleteAutomatedBackups(Boolean deleteAutomatedBackups) {
        this.deleteAutomatedBackups = deleteAutomatedBackups;
        return this;
    }

    /**
     * Get the deletionProtection property: A value that indicates whether the DB instance has deletion protection
     * enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is
     * disabled. For more information, see [Deleting a DB
     * Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html). *Amazon Aurora* Not
     * applicable. You can enable or disable deletion protection for the DB cluster. For more information, see
     * ``CreateDBCluster``. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the
     * DB cluster.
     * 
     * @return the deletionProtection value.
     */
    public Boolean deletionProtection() {
        return this.deletionProtection;
    }

    /**
     * Set the deletionProtection property: A value that indicates whether the DB instance has deletion protection
     * enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is
     * disabled. For more information, see [Deleting a DB
     * Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html). *Amazon Aurora* Not
     * applicable. You can enable or disable deletion protection for the DB cluster. For more information, see
     * ``CreateDBCluster``. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the
     * DB cluster.
     * 
     * @param deletionProtection the deletionProtection value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDeletionProtection(Boolean deletionProtection) {
        this.deletionProtection = deletionProtection;
        return this;
    }

    /**
     * Get the domain property: The Active Directory directory ID to create the DB instance in. Currently, only Db2,
     * MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.
     * For more information, see [Kerberos
     * Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html) in the
     * *Amazon RDS User Guide*.
     * 
     * @return the domain value.
     */
    public String domain() {
        return this.domain;
    }

    /**
     * Set the domain property: The Active Directory directory ID to create the DB instance in. Currently, only Db2,
     * MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.
     * For more information, see [Kerberos
     * Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html) in the
     * *Amazon RDS User Guide*.
     * 
     * @param domain the domain value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDomain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * Get the domainAuthSecretArn property: The ARN for the Secrets Manager secret with the credentials for the user
     * joining the domain. Example:
     * ``arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456``.
     * 
     * @return the domainAuthSecretArn value.
     */
    public String domainAuthSecretArn() {
        return this.domainAuthSecretArn;
    }

    /**
     * Set the domainAuthSecretArn property: The ARN for the Secrets Manager secret with the credentials for the user
     * joining the domain. Example:
     * ``arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456``.
     * 
     * @param domainAuthSecretArn the domainAuthSecretArn value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDomainAuthSecretArn(String domainAuthSecretArn) {
        this.domainAuthSecretArn = domainAuthSecretArn;
        return this;
    }

    /**
     * Get the domainDnsIps property: The IPv4 DNS IP addresses of your primary and secondary Active Directory domain
     * controllers. Constraints: + Two IP addresses must be provided. If there isn't a secondary domain controller, use
     * the IP address of the primary domain controller for both entries in the list. Example:
     * ``123.124.125.126,234.235.236.237``.
     * 
     * @return the domainDnsIps value.
     */
    public List<String> domainDnsIps() {
        return this.domainDnsIps;
    }

    /**
     * Set the domainDnsIps property: The IPv4 DNS IP addresses of your primary and secondary Active Directory domain
     * controllers. Constraints: + Two IP addresses must be provided. If there isn't a secondary domain controller, use
     * the IP address of the primary domain controller for both entries in the list. Example:
     * ``123.124.125.126,234.235.236.237``.
     * 
     * @param domainDnsIps the domainDnsIps value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDomainDnsIps(List<String> domainDnsIps) {
        this.domainDnsIps = domainDnsIps;
        return this;
    }

    /**
     * Get the domainFqdn property: The fully qualified domain name (FQDN) of an Active Directory domain. Constraints: +
     * Can't be longer than 64 characters. Example: ``mymanagedADtest.mymanagedAD.mydomain``.
     * 
     * @return the domainFqdn value.
     */
    public String domainFqdn() {
        return this.domainFqdn;
    }

    /**
     * Set the domainFqdn property: The fully qualified domain name (FQDN) of an Active Directory domain. Constraints: +
     * Can't be longer than 64 characters. Example: ``mymanagedADtest.mymanagedAD.mydomain``.
     * 
     * @param domainFqdn the domainFqdn value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDomainFqdn(String domainFqdn) {
        this.domainFqdn = domainFqdn;
        return this;
    }

    /**
     * Get the domainIamRoleName property: The name of the IAM role to use when making API calls to the Directory
     * Service. This setting doesn't apply to the following DB instances: + Amazon Aurora (The domain is managed by the
     * DB cluster.) + RDS Custom.
     * 
     * @return the domainIamRoleName value.
     */
    public String domainIamRoleName() {
        return this.domainIamRoleName;
    }

    /**
     * Set the domainIamRoleName property: The name of the IAM role to use when making API calls to the Directory
     * Service. This setting doesn't apply to the following DB instances: + Amazon Aurora (The domain is managed by the
     * DB cluster.) + RDS Custom.
     * 
     * @param domainIamRoleName the domainIamRoleName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDomainIamRoleName(String domainIamRoleName) {
        this.domainIamRoleName = domainIamRoleName;
        return this;
    }

    /**
     * Get the domainOu property: The Active Directory organizational unit for your DB instance to join. Constraints: +
     * Must be in the distinguished name format. + Can't be longer than 64 characters. Example:
     * ``OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain``.
     * 
     * @return the domainOu value.
     */
    public String domainOu() {
        return this.domainOu;
    }

    /**
     * Set the domainOu property: The Active Directory organizational unit for your DB instance to join. Constraints: +
     * Must be in the distinguished name format. + Can't be longer than 64 characters. Example:
     * ``OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain``.
     * 
     * @param domainOu the domainOu value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withDomainOu(String domainOu) {
        this.domainOu = domainOu;
        return this;
    }

    /**
     * Get the enableCloudwatchLogsExports property: The list of log types that need to be enabled for exporting to
     * CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see [Publishing
     * Database Logs to Amazon CloudWatch
     * Logs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
     * in the *Amazon Relational Database Service User Guide*. *Amazon Aurora* Not applicable. CloudWatch Logs exports
     * are managed by the DB cluster. *Db2* Valid values: ``diag.log``, ``notify.log`` *MariaDB* Valid values:
     * ``audit``, ``error``, ``general``, ``slowquery`` *Microsoft SQL Server* Valid values: ``agent``, ``error``
     * *MySQL* Valid values: ``audit``, ``error``, ``general``, ``slowquery`` *Oracle* Valid values: ``alert``,
     * ``audit``, ``listener``, ``trace``, ``oemagent`` *PostgreSQL* Valid values: ``postgresql``, ``upgrade``.
     * 
     * @return the enableCloudwatchLogsExports value.
     */
    public List<String> enableCloudwatchLogsExports() {
        return this.enableCloudwatchLogsExports;
    }

    /**
     * Set the enableCloudwatchLogsExports property: The list of log types that need to be enabled for exporting to
     * CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see [Publishing
     * Database Logs to Amazon CloudWatch
     * Logs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
     * in the *Amazon Relational Database Service User Guide*. *Amazon Aurora* Not applicable. CloudWatch Logs exports
     * are managed by the DB cluster. *Db2* Valid values: ``diag.log``, ``notify.log`` *MariaDB* Valid values:
     * ``audit``, ``error``, ``general``, ``slowquery`` *Microsoft SQL Server* Valid values: ``agent``, ``error``
     * *MySQL* Valid values: ``audit``, ``error``, ``general``, ``slowquery`` *Oracle* Valid values: ``alert``,
     * ``audit``, ``listener``, ``trace``, ``oemagent`` *PostgreSQL* Valid values: ``postgresql``, ``upgrade``.
     * 
     * @param enableCloudwatchLogsExports the enableCloudwatchLogsExports value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withEnableCloudwatchLogsExports(List<String> enableCloudwatchLogsExports) {
        this.enableCloudwatchLogsExports = enableCloudwatchLogsExports;
        return this;
    }

    /**
     * Get the enableIamDatabaseAuthentication property: A value that indicates whether to enable mapping of AWS
     * Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. This
     * property is supported for RDS for MariaDB, RDS for MySQL, and RDS for PostgreSQL. For more information, see [IAM
     * Database Authentication for MariaDB, MySQL, and
     * PostgreSQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon
     * RDS User Guide.* *Amazon Aurora* Not applicable. Mapping AWS IAM accounts to database accounts is managed by the
     * DB cluster.
     * 
     * @return the enableIamDatabaseAuthentication value.
     */
    public Boolean enableIamDatabaseAuthentication() {
        return this.enableIamDatabaseAuthentication;
    }

    /**
     * Set the enableIamDatabaseAuthentication property: A value that indicates whether to enable mapping of AWS
     * Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. This
     * property is supported for RDS for MariaDB, RDS for MySQL, and RDS for PostgreSQL. For more information, see [IAM
     * Database Authentication for MariaDB, MySQL, and
     * PostgreSQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon
     * RDS User Guide.* *Amazon Aurora* Not applicable. Mapping AWS IAM accounts to database accounts is managed by the
     * DB cluster.
     * 
     * @param enableIamDatabaseAuthentication the enableIamDatabaseAuthentication value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withEnableIamDatabaseAuthentication(Boolean enableIamDatabaseAuthentication) {
        this.enableIamDatabaseAuthentication = enableIamDatabaseAuthentication;
        return this;
    }

    /**
     * Get the enablePerformanceInsights property: Specifies whether to enable Performance Insights for the DB instance.
     * For more information, see [Using Amazon Performance
     * Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User
     * Guide*. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @return the enablePerformanceInsights value.
     */
    public Boolean enablePerformanceInsights() {
        return this.enablePerformanceInsights;
    }

    /**
     * Set the enablePerformanceInsights property: Specifies whether to enable Performance Insights for the DB instance.
     * For more information, see [Using Amazon Performance
     * Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User
     * Guide*. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @param enablePerformanceInsights the enablePerformanceInsights value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withEnablePerformanceInsights(Boolean enablePerformanceInsights) {
        this.enablePerformanceInsights = enablePerformanceInsights;
        return this;
    }

    /**
     * Get the endpoint property: The connection endpoint for the DB instance. The endpoint might not be shown for
     * instances with the status of ``creating``. This data type represents the information you need to connect to an
     * Amazon RDS DB instance. This data type is used as a response element in the following actions: +
     * ``CreateDBInstance`` + ``DescribeDBInstances`` + ``DeleteDBInstance`` For the data structure that represents
     * Amazon Aurora DB cluster endpoints, see ``DBClusterEndpoint``.
     * 
     * @return the endpoint value.
     */
    public EndpointAutoGenerated2 endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: The connection endpoint for the DB instance. The endpoint might not be shown for
     * instances with the status of ``creating``. This data type represents the information you need to connect to an
     * Amazon RDS DB instance. This data type is used as a response element in the following actions: +
     * ``CreateDBInstance`` + ``DescribeDBInstances`` + ``DeleteDBInstance`` For the data structure that represents
     * Amazon Aurora DB cluster endpoints, see ``DBClusterEndpoint``.
     * 
     * @param endpoint the endpoint value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withEndpoint(EndpointAutoGenerated2 endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the engine property: The name of the database engine to use for this DB instance. Not every database engine
     * is available in every AWS Region. This property is required when creating a DB instance. You can change the
     * architecture of an Oracle database from the non-container database (CDB) architecture to the CDB architecture by
     * updating the ``Engine`` value in your templates from ``oracle-ee`` or ``oracle-ee-cdb`` to ``oracle-se2-cdb``.
     * Converting to the CDB architecture requires an interruption. Valid Values: + ``aurora-mysql`` (for Aurora MySQL
     * DB instances) + ``aurora-postgresql`` (for Aurora PostgreSQL DB instances) + ``custom-oracle-ee`` (for RDS Custom
     * for Oracle DB instances) + ``custom-oracle-ee-cdb`` (for RDS Custom for Oracle DB instances) +
     * ``custom-sqlserver-ee`` (for RDS Custom for SQL Server DB instances) + ``custom-sqlserver-se`` (for RDS Custom
     * for SQL Server DB instances) + ``custom-sqlserver-web`` (for RDS Custom for SQL Server DB instances) + ``db2-ae``
     * + ``db2-se`` + ``mariadb`` + ``mysql`` + ``oracle-ee`` + ``oracle-ee-cdb`` + ``oracle-se2`` + ``oracle-se2-cdb``
     * + ``postgres`` + ``sqlserver-ee`` + ``sqlserver-se`` + ``sqlserver-ex`` + ``sqlserver-web``.
     * 
     * @return the engine value.
     */
    public String engine() {
        return this.engine;
    }

    /**
     * Set the engine property: The name of the database engine to use for this DB instance. Not every database engine
     * is available in every AWS Region. This property is required when creating a DB instance. You can change the
     * architecture of an Oracle database from the non-container database (CDB) architecture to the CDB architecture by
     * updating the ``Engine`` value in your templates from ``oracle-ee`` or ``oracle-ee-cdb`` to ``oracle-se2-cdb``.
     * Converting to the CDB architecture requires an interruption. Valid Values: + ``aurora-mysql`` (for Aurora MySQL
     * DB instances) + ``aurora-postgresql`` (for Aurora PostgreSQL DB instances) + ``custom-oracle-ee`` (for RDS Custom
     * for Oracle DB instances) + ``custom-oracle-ee-cdb`` (for RDS Custom for Oracle DB instances) +
     * ``custom-sqlserver-ee`` (for RDS Custom for SQL Server DB instances) + ``custom-sqlserver-se`` (for RDS Custom
     * for SQL Server DB instances) + ``custom-sqlserver-web`` (for RDS Custom for SQL Server DB instances) + ``db2-ae``
     * + ``db2-se`` + ``mariadb`` + ``mysql`` + ``oracle-ee`` + ``oracle-ee-cdb`` + ``oracle-se2`` + ``oracle-se2-cdb``
     * + ``postgres`` + ``sqlserver-ee`` + ``sqlserver-se`` + ``sqlserver-ex`` + ``sqlserver-web``.
     * 
     * @param engine the engine value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withEngine(String engine) {
        this.engine = engine;
        return this;
    }

    /**
     * Get the engineVersion property: The version number of the database engine to use. For a list of valid engine
     * versions, use the ``DescribeDBEngineVersions`` action. The following are the database engines and links to
     * information about the major and minor versions that are available with Amazon RDS. Not every database engine is
     * available for every AWS Region. *Amazon Aurora* Not applicable. The version number of the database engine to be
     * used by the DB instance is managed by the DB cluster. *Db2* See [Amazon RDS for
     * Db2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt) in the
     * *Amazon RDS User Guide.* *MariaDB* See [MariaDB on Amazon RDS
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
     * in the *Amazon RDS User Guide.* *Microsoft SQL Server* See [Microsoft SQL Server Versions on Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport)
     * in the *Amazon RDS User Guide.* *MySQL* See [MySQL on Amazon RDS
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in
     * the *Amazon RDS User Guide.* *Oracle* See [Oracle Database Engine Release
     * Notes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html) in the
     * *Amazon RDS User Guide.* *PostgreSQL* See [Supported PostgreSQL Database
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions)
     * in the *Amazon RDS User Guide.*.
     * 
     * @return the engineVersion value.
     */
    public String engineVersion() {
        return this.engineVersion;
    }

    /**
     * Set the engineVersion property: The version number of the database engine to use. For a list of valid engine
     * versions, use the ``DescribeDBEngineVersions`` action. The following are the database engines and links to
     * information about the major and minor versions that are available with Amazon RDS. Not every database engine is
     * available for every AWS Region. *Amazon Aurora* Not applicable. The version number of the database engine to be
     * used by the DB instance is managed by the DB cluster. *Db2* See [Amazon RDS for
     * Db2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt) in the
     * *Amazon RDS User Guide.* *MariaDB* See [MariaDB on Amazon RDS
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
     * in the *Amazon RDS User Guide.* *Microsoft SQL Server* See [Microsoft SQL Server Versions on Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport)
     * in the *Amazon RDS User Guide.* *MySQL* See [MySQL on Amazon RDS
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in
     * the *Amazon RDS User Guide.* *Oracle* See [Oracle Database Engine Release
     * Notes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html) in the
     * *Amazon RDS User Guide.* *PostgreSQL* See [Supported PostgreSQL Database
     * Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions)
     * in the *Amazon RDS User Guide.*.
     * 
     * @param engineVersion the engineVersion value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }

    /**
     * Get the iops property: The number of I/O operations per second (IOPS) that the database provisions. The value
     * must be equal to or greater than 1000. If you specify this property, you must follow the range of allowed ratios
     * of your requested IOPS rate to the amount of storage that you allocate (IOPS to allocated storage). For example,
     * you can provision an Oracle database instance with 1000 IOPS and 200 GiB of storage (a ratio of 5:1), or specify
     * 2000 IOPS with 200 GiB of storage (a ratio of 10:1). For more information, see [Amazon RDS Provisioned IOPS
     * Storage to Improve
     * Performance](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/CHAP_Storage.html#USER_PIOPS) in the
     * *Amazon RDS User Guide*. If you specify ``io1`` for the ``StorageType`` property, then you must also specify the
     * ``Iops`` property. Constraints: + For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple
     * between .5 and 50 of the storage amount for the DB instance. + For RDS for SQL Server - Must be a multiple
     * between 1 and 50 of the storage amount for the DB instance.
     * 
     * @return the iops value.
     */
    public Integer iops() {
        return this.iops;
    }

    /**
     * Set the iops property: The number of I/O operations per second (IOPS) that the database provisions. The value
     * must be equal to or greater than 1000. If you specify this property, you must follow the range of allowed ratios
     * of your requested IOPS rate to the amount of storage that you allocate (IOPS to allocated storage). For example,
     * you can provision an Oracle database instance with 1000 IOPS and 200 GiB of storage (a ratio of 5:1), or specify
     * 2000 IOPS with 200 GiB of storage (a ratio of 10:1). For more information, see [Amazon RDS Provisioned IOPS
     * Storage to Improve
     * Performance](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/CHAP_Storage.html#USER_PIOPS) in the
     * *Amazon RDS User Guide*. If you specify ``io1`` for the ``StorageType`` property, then you must also specify the
     * ``Iops`` property. Constraints: + For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple
     * between .5 and 50 of the storage amount for the DB instance. + For RDS for SQL Server - Must be a multiple
     * between 1 and 50 of the storage amount for the DB instance.
     * 
     * @param iops the iops value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withIops(Integer iops) {
        this.iops = iops;
        return this;
    }

    /**
     * Get the kmsKeyId property: The ARN of the AWS KMS key that's used to encrypt the DB instance, such as
     * ``arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef``. If you enable the
     * StorageEncrypted property but don't specify this property, AWS CloudFormation uses the default KMS key. If you
     * specify this property, you must set the StorageEncrypted property to true. If you specify the
     * ``SourceDBInstanceIdentifier`` property, the value is inherited from the source DB instance if the read replica
     * is created in the same region. If you create an encrypted read replica in a different AWS Region, then you must
     * specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the region that they're
     * created in, and you can't use encryption keys from one region in another region. If you specify the
     * ``SnapshotIdentifier`` property, the ``StorageEncrypted`` property value is inherited from the snapshot, and if
     * the DB instance is encrypted, the specified ``KmsKeyId`` property is used. If you specify ``DBSecurityGroups``,
     * AWS CloudFormation ignores this property. To specify both a security group and this property, you must use a VPC
     * security group. For more information about Amazon RDS and VPC, see [Using Amazon RDS with Amazon
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in the *Amazon RDS User Guide*.
     * *Amazon Aurora* Not applicable. The KMS key identifier is managed by the DB cluster.
     * 
     * @return the kmsKeyId value.
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Set the kmsKeyId property: The ARN of the AWS KMS key that's used to encrypt the DB instance, such as
     * ``arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef``. If you enable the
     * StorageEncrypted property but don't specify this property, AWS CloudFormation uses the default KMS key. If you
     * specify this property, you must set the StorageEncrypted property to true. If you specify the
     * ``SourceDBInstanceIdentifier`` property, the value is inherited from the source DB instance if the read replica
     * is created in the same region. If you create an encrypted read replica in a different AWS Region, then you must
     * specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the region that they're
     * created in, and you can't use encryption keys from one region in another region. If you specify the
     * ``SnapshotIdentifier`` property, the ``StorageEncrypted`` property value is inherited from the snapshot, and if
     * the DB instance is encrypted, the specified ``KmsKeyId`` property is used. If you specify ``DBSecurityGroups``,
     * AWS CloudFormation ignores this property. To specify both a security group and this property, you must use a VPC
     * security group. For more information about Amazon RDS and VPC, see [Using Amazon RDS with Amazon
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in the *Amazon RDS User Guide*.
     * *Amazon Aurora* Not applicable. The KMS key identifier is managed by the DB cluster.
     * 
     * @param kmsKeyId the kmsKeyId value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }

    /**
     * Get the licenseModel property: License model information for this DB instance. Valid Values: + Aurora MySQL -
     * ``general-public-license`` + Aurora PostgreSQL - ``postgresql-license`` + RDS for Db2 -
     * ``bring-your-own-license``. For more information about RDS for Db2 licensing, see
     * [](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html) in the *Amazon RDS User Guide.* +
     * RDS for MariaDB - ``general-public-license`` + RDS for Microsoft SQL Server - ``license-included`` + RDS for
     * MySQL - ``general-public-license`` + RDS for Oracle - ``bring-your-own-license`` or ``license-included`` + RDS
     * for PostgreSQL - ``postgresql-license`` If you've specified ``DBSecurityGroups`` and then you update the license
     * model, AWS CloudFormation replaces the underlying DB instance. This will incur some interruptions to database
     * availability.
     * 
     * @return the licenseModel value.
     */
    public String licenseModel() {
        return this.licenseModel;
    }

    /**
     * Set the licenseModel property: License model information for this DB instance. Valid Values: + Aurora MySQL -
     * ``general-public-license`` + Aurora PostgreSQL - ``postgresql-license`` + RDS for Db2 -
     * ``bring-your-own-license``. For more information about RDS for Db2 licensing, see
     * [](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html) in the *Amazon RDS User Guide.* +
     * RDS for MariaDB - ``general-public-license`` + RDS for Microsoft SQL Server - ``license-included`` + RDS for
     * MySQL - ``general-public-license`` + RDS for Oracle - ``bring-your-own-license`` or ``license-included`` + RDS
     * for PostgreSQL - ``postgresql-license`` If you've specified ``DBSecurityGroups`` and then you update the license
     * model, AWS CloudFormation replaces the underlying DB instance. This will incur some interruptions to database
     * availability.
     * 
     * @param licenseModel the licenseModel value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withLicenseModel(String licenseModel) {
        this.licenseModel = licenseModel;
        return this;
    }

    /**
     * Get the manageMasterUserPassword property: Specifies whether to manage the master user password with AWS Secrets
     * Manager. For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide.* Constraints: + Can't manage the master user password with AWS Secrets Manager if ``MasterUserPassword``
     * is specified.
     * 
     * @return the manageMasterUserPassword value.
     */
    public Boolean manageMasterUserPassword() {
        return this.manageMasterUserPassword;
    }

    /**
     * Set the manageMasterUserPassword property: Specifies whether to manage the master user password with AWS Secrets
     * Manager. For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide.* Constraints: + Can't manage the master user password with AWS Secrets Manager if ``MasterUserPassword``
     * is specified.
     * 
     * @param manageMasterUserPassword the manageMasterUserPassword value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withManageMasterUserPassword(Boolean manageMasterUserPassword) {
        this.manageMasterUserPassword = manageMasterUserPassword;
        return this;
    }

    /**
     * Get the masterUserPassword property: The password for the master user. The password can include any printable
     * ASCII character except '/', ''', or '&#064;'. *Amazon Aurora* Not applicable. The password for the master user is
     * managed by the DB cluster. *RDS for Db2* Must contain from 8 to 255 characters. *RDS for MariaDB* Constraints:
     * Must contain from 8 to 41 characters. *RDS for Microsoft SQL Server* Constraints: Must contain from 8 to 128
     * characters. *RDS for MySQL* Constraints: Must contain from 8 to 41 characters. *RDS for Oracle* Constraints: Must
     * contain from 8 to 30 characters. *RDS for PostgreSQL* Constraints: Must contain from 8 to 128 characters.
     * 
     * @return the masterUserPassword value.
     */
    public String masterUserPassword() {
        return this.masterUserPassword;
    }

    /**
     * Set the masterUserPassword property: The password for the master user. The password can include any printable
     * ASCII character except '/', ''', or '&#064;'. *Amazon Aurora* Not applicable. The password for the master user is
     * managed by the DB cluster. *RDS for Db2* Must contain from 8 to 255 characters. *RDS for MariaDB* Constraints:
     * Must contain from 8 to 41 characters. *RDS for Microsoft SQL Server* Constraints: Must contain from 8 to 128
     * characters. *RDS for MySQL* Constraints: Must contain from 8 to 41 characters. *RDS for Oracle* Constraints: Must
     * contain from 8 to 30 characters. *RDS for PostgreSQL* Constraints: Must contain from 8 to 128 characters.
     * 
     * @param masterUserPassword the masterUserPassword value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMasterUserPassword(String masterUserPassword) {
        this.masterUserPassword = masterUserPassword;
        return this;
    }

    /**
     * Get the masterUserSecret property: The secret managed by RDS in AWS Secrets Manager for the master user password.
     * For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide.* The ``MasterUserSecret`` return value specifies the secret managed by RDS in AWS Secrets Manager for the
     * master user password. For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide* and [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon
     * Aurora User Guide.*.
     * 
     * @return the masterUserSecret value.
     */
    public MasterUserSecret masterUserSecret() {
        return this.masterUserSecret;
    }

    /**
     * Set the masterUserSecret property: The secret managed by RDS in AWS Secrets Manager for the master user password.
     * For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide.* The ``MasterUserSecret`` return value specifies the secret managed by RDS in AWS Secrets Manager for the
     * master user password. For more information, see [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User
     * Guide* and [Password management with Secrets
     * Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon
     * Aurora User Guide.*.
     * 
     * @param masterUserSecret the masterUserSecret value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMasterUserSecret(MasterUserSecret masterUserSecret) {
        this.masterUserSecret = masterUserSecret;
        return this;
    }

    /**
     * Get the masterUsername property: The master user name for the DB instance. If you specify the
     * ``SourceDBInstanceIdentifier`` or ``DBSnapshotIdentifier`` property, don't specify this property. The value is
     * inherited from the source DB instance or snapshot. When migrating a self-managed Db2 database, we recommend that
     * you use the same master username as your self-managed Db2 instance name. *Amazon Aurora* Not applicable. The name
     * for the master user is managed by the DB cluster. *RDS for Db2* Constraints: + Must be 1 to 16 letters or
     * numbers. + First character must be a letter. + Can't be a reserved word for the chosen database engine. *RDS for
     * MariaDB* Constraints: + Must be 1 to 16 letters or numbers. + Can't be a reserved word for the chosen database
     * engine. *RDS for Microsoft SQL Server* Constraints: + Must be 1 to 128 letters or numbers. + First character must
     * be a letter. + Can't be a reserved word for the chosen database engine. *RDS for MySQL* Constraints: + Must be 1
     * to 16 letters or numbers. + First character must be a letter. + Can't be a reserved word for the chosen database
     * engine. *RDS for Oracle* Constraints: + Must be 1 to 30 letters or numbers. + First character must be a letter. +
     * Can't be a reserved word for the chosen database engine. *RDS for PostgreSQL* Constraints: + Must be 1 to 63
     * letters or numbers. + First character must be a letter. + Can't be a reserved word for the chosen database
     * engine.
     * 
     * @return the masterUsername value.
     */
    public String masterUsername() {
        return this.masterUsername;
    }

    /**
     * Set the masterUsername property: The master user name for the DB instance. If you specify the
     * ``SourceDBInstanceIdentifier`` or ``DBSnapshotIdentifier`` property, don't specify this property. The value is
     * inherited from the source DB instance or snapshot. When migrating a self-managed Db2 database, we recommend that
     * you use the same master username as your self-managed Db2 instance name. *Amazon Aurora* Not applicable. The name
     * for the master user is managed by the DB cluster. *RDS for Db2* Constraints: + Must be 1 to 16 letters or
     * numbers. + First character must be a letter. + Can't be a reserved word for the chosen database engine. *RDS for
     * MariaDB* Constraints: + Must be 1 to 16 letters or numbers. + Can't be a reserved word for the chosen database
     * engine. *RDS for Microsoft SQL Server* Constraints: + Must be 1 to 128 letters or numbers. + First character must
     * be a letter. + Can't be a reserved word for the chosen database engine. *RDS for MySQL* Constraints: + Must be 1
     * to 16 letters or numbers. + First character must be a letter. + Can't be a reserved word for the chosen database
     * engine. *RDS for Oracle* Constraints: + Must be 1 to 30 letters or numbers. + First character must be a letter. +
     * Can't be a reserved word for the chosen database engine. *RDS for PostgreSQL* Constraints: + Must be 1 to 63
     * letters or numbers. + First character must be a letter. + Can't be a reserved word for the chosen database
     * engine.
     * 
     * @param masterUsername the masterUsername value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMasterUsername(String masterUsername) {
        this.masterUsername = masterUsername;
        return this;
    }

    /**
     * Get the maxAllocatedStorage property: The upper limit in gibibytes (GiB) to which Amazon RDS can automatically
     * scale the storage of the DB instance. For more information about this setting, including limitations that apply
     * to it, see [Managing capacity automatically with Amazon RDS storage
     * autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
     * in the *Amazon RDS User Guide*. This setting doesn't apply to the following DB instances: + Amazon Aurora
     * (Storage is managed by the DB cluster.) + RDS Custom.
     * 
     * @return the maxAllocatedStorage value.
     */
    public Integer maxAllocatedStorage() {
        return this.maxAllocatedStorage;
    }

    /**
     * Set the maxAllocatedStorage property: The upper limit in gibibytes (GiB) to which Amazon RDS can automatically
     * scale the storage of the DB instance. For more information about this setting, including limitations that apply
     * to it, see [Managing capacity automatically with Amazon RDS storage
     * autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
     * in the *Amazon RDS User Guide*. This setting doesn't apply to the following DB instances: + Amazon Aurora
     * (Storage is managed by the DB cluster.) + RDS Custom.
     * 
     * @param maxAllocatedStorage the maxAllocatedStorage value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMaxAllocatedStorage(Integer maxAllocatedStorage) {
        this.maxAllocatedStorage = maxAllocatedStorage;
        return this;
    }

    /**
     * Get the monitoringInterval property: The interval, in seconds, between points when Enhanced Monitoring metrics
     * are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify 0. The default
     * is 0. If ``MonitoringRoleArn`` is specified, then you must set ``MonitoringInterval`` to a value other than 0.
     * This setting doesn't apply to RDS Custom. Valid Values: ``0, 1, 5, 10, 15, 30, 60``.
     * 
     * @return the monitoringInterval value.
     */
    public Integer monitoringInterval() {
        return this.monitoringInterval;
    }

    /**
     * Set the monitoringInterval property: The interval, in seconds, between points when Enhanced Monitoring metrics
     * are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify 0. The default
     * is 0. If ``MonitoringRoleArn`` is specified, then you must set ``MonitoringInterval`` to a value other than 0.
     * This setting doesn't apply to RDS Custom. Valid Values: ``0, 1, 5, 10, 15, 30, 60``.
     * 
     * @param monitoringInterval the monitoringInterval value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMonitoringInterval(Integer monitoringInterval) {
        this.monitoringInterval = monitoringInterval;
        return this;
    }

    /**
     * Get the monitoringRoleArn property: The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
     * to Amazon CloudWatch Logs. For example, ``arn:aws:iam:123456789012:role/emaccess``. For information on creating a
     * monitoring role, see [Setting Up and Enabling Enhanced
     * Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
     * in the *Amazon RDS User Guide*. If ``MonitoringInterval`` is set to a value other than ``0``, then you must
     * supply a ``MonitoringRoleArn`` value. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @return the monitoringRoleArn value.
     */
    public String monitoringRoleArn() {
        return this.monitoringRoleArn;
    }

    /**
     * Set the monitoringRoleArn property: The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
     * to Amazon CloudWatch Logs. For example, ``arn:aws:iam:123456789012:role/emaccess``. For information on creating a
     * monitoring role, see [Setting Up and Enabling Enhanced
     * Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
     * in the *Amazon RDS User Guide*. If ``MonitoringInterval`` is set to a value other than ``0``, then you must
     * supply a ``MonitoringRoleArn`` value. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @param monitoringRoleArn the monitoringRoleArn value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMonitoringRoleArn(String monitoringRoleArn) {
        this.monitoringRoleArn = monitoringRoleArn;
        return this;
    }

    /**
     * Get the multiAZ property: Specifies whether the database instance is a Multi-AZ DB instance deployment. You can't
     * set the ``AvailabilityZone`` parameter if the ``MultiAZ`` parameter is set to true. For more information, see
     * [Multi-AZ deployments for high
     * availability](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html) in the *Amazon RDS
     * User Guide*. *Amazon Aurora* Not applicable. Amazon Aurora storage is replicated across all of the Availability
     * Zones and doesn't require the ``MultiAZ`` option to be set.
     * 
     * @return the multiAZ value.
     */
    public Boolean multiAZ() {
        return this.multiAZ;
    }

    /**
     * Set the multiAZ property: Specifies whether the database instance is a Multi-AZ DB instance deployment. You can't
     * set the ``AvailabilityZone`` parameter if the ``MultiAZ`` parameter is set to true. For more information, see
     * [Multi-AZ deployments for high
     * availability](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html) in the *Amazon RDS
     * User Guide*. *Amazon Aurora* Not applicable. Amazon Aurora storage is replicated across all of the Availability
     * Zones and doesn't require the ``MultiAZ`` option to be set.
     * 
     * @param multiAZ the multiAZ value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withMultiAZ(Boolean multiAZ) {
        this.multiAZ = multiAZ;
        return this;
    }

    /**
     * Get the ncharCharacterSetName property: The name of the NCHAR character set for the Oracle DB instance. This
     * setting doesn't apply to RDS Custom DB instances.
     * 
     * @return the ncharCharacterSetName value.
     */
    public String ncharCharacterSetName() {
        return this.ncharCharacterSetName;
    }

    /**
     * Set the ncharCharacterSetName property: The name of the NCHAR character set for the Oracle DB instance. This
     * setting doesn't apply to RDS Custom DB instances.
     * 
     * @param ncharCharacterSetName the ncharCharacterSetName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withNcharCharacterSetName(String ncharCharacterSetName) {
        this.ncharCharacterSetName = ncharCharacterSetName;
        return this;
    }

    /**
     * Get the networkType property: The network type of the DB instance. Valid values: + ``IPV4`` + ``DUAL`` The
     * network type is determined by the ``DBSubnetGroup`` specified for the DB instance. A ``DBSubnetGroup`` can
     * support only the IPv4 protocol or the IPv4 and IPv6 protocols (``DUAL``). For more information, see [Working with
     * a DB instance in a
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the
     * *Amazon RDS User Guide.*.
     * 
     * @return the networkType value.
     */
    public String networkType() {
        return this.networkType;
    }

    /**
     * Set the networkType property: The network type of the DB instance. Valid values: + ``IPV4`` + ``DUAL`` The
     * network type is determined by the ``DBSubnetGroup`` specified for the DB instance. A ``DBSubnetGroup`` can
     * support only the IPv4 protocol or the IPv4 and IPv6 protocols (``DUAL``). For more information, see [Working with
     * a DB instance in a
     * VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the
     * *Amazon RDS User Guide.*.
     * 
     * @param networkType the networkType value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withNetworkType(String networkType) {
        this.networkType = networkType;
        return this;
    }

    /**
     * Get the optionGroupName property: Indicates that the DB instance should be associated with the specified option
     * group. Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an
     * option group. Also, that option group can't be removed from a DB instance once it is associated with a DB
     * instance.
     * 
     * @return the optionGroupName value.
     */
    public String optionGroupName() {
        return this.optionGroupName;
    }

    /**
     * Set the optionGroupName property: Indicates that the DB instance should be associated with the specified option
     * group. Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an
     * option group. Also, that option group can't be removed from a DB instance once it is associated with a DB
     * instance.
     * 
     * @param optionGroupName the optionGroupName value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withOptionGroupName(String optionGroupName) {
        this.optionGroupName = optionGroupName;
        return this;
    }

    /**
     * Get the performanceInsightsKmsKeyId property: The AWS KMS key identifier for encryption of Performance Insights
     * data. The KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. If you do not
     * specify a value for ``PerformanceInsightsKMSKeyId``, then Amazon RDS uses your default KMS key. There is a
     * default KMS key for your AWS account. Your AWS account has a different default KMS key for each AWS Region. For
     * information about enabling Performance Insights, see
     * [EnablePerformanceInsights](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-enableperformanceinsights).
     * 
     * @return the performanceInsightsKmsKeyId value.
     */
    public String performanceInsightsKmsKeyId() {
        return this.performanceInsightsKmsKeyId;
    }

    /**
     * Set the performanceInsightsKmsKeyId property: The AWS KMS key identifier for encryption of Performance Insights
     * data. The KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. If you do not
     * specify a value for ``PerformanceInsightsKMSKeyId``, then Amazon RDS uses your default KMS key. There is a
     * default KMS key for your AWS account. Your AWS account has a different default KMS key for each AWS Region. For
     * information about enabling Performance Insights, see
     * [EnablePerformanceInsights](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-enableperformanceinsights).
     * 
     * @param performanceInsightsKmsKeyId the performanceInsightsKmsKeyId value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withPerformanceInsightsKmsKeyId(String performanceInsightsKmsKeyId) {
        this.performanceInsightsKmsKeyId = performanceInsightsKmsKeyId;
        return this;
    }

    /**
     * Get the performanceInsightsRetentionPeriod property: The number of days to retain Performance Insights data. This
     * setting doesn't apply to RDS Custom DB instances. Valid Values: + ``7`` + *month* * 31, where *month* is a number
     * of months from 1-23. Examples: ``93`` (3 months * 31), ``341`` (11 months * 31), ``589`` (19 months * 31) +
     * ``731`` Default: ``7`` days If you specify a retention period that isn't valid, such as ``94``, Amazon RDS
     * returns an error.
     * 
     * @return the performanceInsightsRetentionPeriod value.
     */
    public Integer performanceInsightsRetentionPeriod() {
        return this.performanceInsightsRetentionPeriod;
    }

    /**
     * Set the performanceInsightsRetentionPeriod property: The number of days to retain Performance Insights data. This
     * setting doesn't apply to RDS Custom DB instances. Valid Values: + ``7`` + *month* * 31, where *month* is a number
     * of months from 1-23. Examples: ``93`` (3 months * 31), ``341`` (11 months * 31), ``589`` (19 months * 31) +
     * ``731`` Default: ``7`` days If you specify a retention period that isn't valid, such as ``94``, Amazon RDS
     * returns an error.
     * 
     * @param performanceInsightsRetentionPeriod the performanceInsightsRetentionPeriod value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties
        withPerformanceInsightsRetentionPeriod(Integer performanceInsightsRetentionPeriod) {
        this.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod;
        return this;
    }

    /**
     * Get the port property: The port number on which the database accepts connections. *Amazon Aurora* Not applicable.
     * The port number is managed by the DB cluster. *Db2* Default value: ``50000``.
     * 
     * @return the port value.
     */
    public String port() {
        return this.port;
    }

    /**
     * Set the port property: The port number on which the database accepts connections. *Amazon Aurora* Not applicable.
     * The port number is managed by the DB cluster. *Db2* Default value: ``50000``.
     * 
     * @param port the port value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withPort(String port) {
        this.port = port;
        return this;
    }

    /**
     * Get the preferredBackupWindow property: The daily time range during which automated backups are created if
     * automated backups are enabled, using the ``BackupRetentionPeriod`` parameter. For more information, see [Backup
     * Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
     * in the *Amazon RDS User Guide.* Constraints: + Must be in the format ``hh24:mi-hh24:mi``. + Must be in Universal
     * Coordinated Time (UTC). + Must not conflict with the preferred maintenance window. + Must be at least 30 minutes.
     * *Amazon Aurora* Not applicable. The daily time range for creating automated backups is managed by the DB cluster.
     * 
     * @return the preferredBackupWindow value.
     */
    public String preferredBackupWindow() {
        return this.preferredBackupWindow;
    }

    /**
     * Set the preferredBackupWindow property: The daily time range during which automated backups are created if
     * automated backups are enabled, using the ``BackupRetentionPeriod`` parameter. For more information, see [Backup
     * Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
     * in the *Amazon RDS User Guide.* Constraints: + Must be in the format ``hh24:mi-hh24:mi``. + Must be in Universal
     * Coordinated Time (UTC). + Must not conflict with the preferred maintenance window. + Must be at least 30 minutes.
     * *Amazon Aurora* Not applicable. The daily time range for creating automated backups is managed by the DB cluster.
     * 
     * @param preferredBackupWindow the preferredBackupWindow value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withPreferredBackupWindow(String preferredBackupWindow) {
        this.preferredBackupWindow = preferredBackupWindow;
        return this;
    }

    /**
     * Get the preferredMaintenanceWindow property: The weekly time range during which system maintenance can occur, in
     * Universal Coordinated Time (UTC). Format: ``ddd:hh24:mi-ddd:hh24:mi`` The default is a 30-minute window selected
     * at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the
     * time blocks available, see [Adjusting the Preferred DB Instance Maintenance
     * Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
     * in the *Amazon RDS User Guide.* This property applies when AWS CloudFormation initially creates the DB instance.
     * If you use AWS CloudFormation to update the DB instance, those updates are applied immediately. Constraints:
     * Minimum 30-minute window.
     * 
     * @return the preferredMaintenanceWindow value.
     */
    public String preferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow;
    }

    /**
     * Set the preferredMaintenanceWindow property: The weekly time range during which system maintenance can occur, in
     * Universal Coordinated Time (UTC). Format: ``ddd:hh24:mi-ddd:hh24:mi`` The default is a 30-minute window selected
     * at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the
     * time blocks available, see [Adjusting the Preferred DB Instance Maintenance
     * Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
     * in the *Amazon RDS User Guide.* This property applies when AWS CloudFormation initially creates the DB instance.
     * If you use AWS CloudFormation to update the DB instance, those updates are applied immediately. Constraints:
     * Minimum 30-minute window.
     * 
     * @param preferredMaintenanceWindow the preferredMaintenanceWindow value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }

    /**
     * Get the processorFeatures property: The number of CPU cores and the number of threads per core for the DB
     * instance class of the DB instance. This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
     * 
     * @return the processorFeatures value.
     */
    public List<ProcessorFeature> processorFeatures() {
        return this.processorFeatures;
    }

    /**
     * Set the processorFeatures property: The number of CPU cores and the number of threads per core for the DB
     * instance class of the DB instance. This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
     * 
     * @param processorFeatures the processorFeatures value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withProcessorFeatures(List<ProcessorFeature> processorFeatures) {
        this.processorFeatures = processorFeatures;
        return this;
    }

    /**
     * Get the promotionTier property: The order of priority in which an Aurora Replica is promoted to the primary
     * instance after a failure of the existing primary instance. For more information, see [Fault Tolerance for an
     * Aurora DB
     * Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance)
     * in the *Amazon Aurora User Guide*. This setting doesn't apply to RDS Custom DB instances. Default: ``1`` Valid
     * Values: ``0 - 15``.
     * 
     * @return the promotionTier value.
     */
    public Integer promotionTier() {
        return this.promotionTier;
    }

    /**
     * Set the promotionTier property: The order of priority in which an Aurora Replica is promoted to the primary
     * instance after a failure of the existing primary instance. For more information, see [Fault Tolerance for an
     * Aurora DB
     * Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance)
     * in the *Amazon Aurora User Guide*. This setting doesn't apply to RDS Custom DB instances. Default: ``1`` Valid
     * Values: ``0 - 15``.
     * 
     * @param promotionTier the promotionTier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withPromotionTier(Integer promotionTier) {
        this.promotionTier = promotionTier;
        return this;
    }

    /**
     * Get the publiclyAccessible property: Indicates whether the DB instance is an internet-facing instance. If you
     * specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a
     * public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that
     * resolves to a private IP address. The default behavior value depends on your VPC setup and the database subnet
     * group. For more information, see the ``PubliclyAccessible`` parameter in the
     * [CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) in the
     * *Amazon RDS API Reference*.
     * 
     * @return the publiclyAccessible value.
     */
    public Boolean publiclyAccessible() {
        return this.publiclyAccessible;
    }

    /**
     * Set the publiclyAccessible property: Indicates whether the DB instance is an internet-facing instance. If you
     * specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a
     * public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that
     * resolves to a private IP address. The default behavior value depends on your VPC setup and the database subnet
     * group. For more information, see the ``PubliclyAccessible`` parameter in the
     * [CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) in the
     * *Amazon RDS API Reference*.
     * 
     * @param publiclyAccessible the publiclyAccessible value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withPubliclyAccessible(Boolean publiclyAccessible) {
        this.publiclyAccessible = publiclyAccessible;
        return this;
    }

    /**
     * Get the replicaMode property: The open mode of an Oracle read replica. For more information, see [Working with
     * Oracle Read Replicas for Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the *Amazon RDS User
     * Guide*. This setting is only supported in RDS for Oracle. Default: ``open-read-only`` Valid Values:
     * ``open-read-only`` or ``mounted``.
     * 
     * @return the replicaMode value.
     */
    public String replicaMode() {
        return this.replicaMode;
    }

    /**
     * Set the replicaMode property: The open mode of an Oracle read replica. For more information, see [Working with
     * Oracle Read Replicas for Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the *Amazon RDS User
     * Guide*. This setting is only supported in RDS for Oracle. Default: ``open-read-only`` Valid Values:
     * ``open-read-only`` or ``mounted``.
     * 
     * @param replicaMode the replicaMode value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withReplicaMode(String replicaMode) {
        this.replicaMode = replicaMode;
        return this;
    }

    /**
     * Get the restoreTime property: The date and time to restore from. Constraints: + Must be a time in Universal
     * Coordinated Time (UTC) format. + Must be before the latest restorable time for the DB instance. + Can't be
     * specified if the ``UseLatestRestorableTime`` parameter is enabled. Example: ``2009-09-07T23:45:00Z``.
     * 
     * @return the restoreTime value.
     */
    public String restoreTime() {
        return this.restoreTime;
    }

    /**
     * Set the restoreTime property: The date and time to restore from. Constraints: + Must be a time in Universal
     * Coordinated Time (UTC) format. + Must be before the latest restorable time for the DB instance. + Can't be
     * specified if the ``UseLatestRestorableTime`` parameter is enabled. Example: ``2009-09-07T23:45:00Z``.
     * 
     * @param restoreTime the restoreTime value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withRestoreTime(String restoreTime) {
        this.restoreTime = restoreTime;
        return this;
    }

    /**
     * Get the sourceDBClusterIdentifier property: The identifier of the Multi-AZ DB cluster that will act as the source
     * for the read replica. Each DB cluster can have up to 15 read replicas. Constraints: + Must be the identifier of
     * an existing Multi-AZ DB cluster. + Can't be specified if the ``SourceDBInstanceIdentifier`` parameter is also
     * specified. + The specified DB cluster must have automatic backups enabled, that is, its backup retention period
     * must be greater than 0. + The source DB cluster must be in the same AWS-Region as the read replica. Cross-Region
     * replication isn't supported.
     * 
     * @return the sourceDBClusterIdentifier value.
     */
    public String sourceDBClusterIdentifier() {
        return this.sourceDBClusterIdentifier;
    }

    /**
     * Set the sourceDBClusterIdentifier property: The identifier of the Multi-AZ DB cluster that will act as the source
     * for the read replica. Each DB cluster can have up to 15 read replicas. Constraints: + Must be the identifier of
     * an existing Multi-AZ DB cluster. + Can't be specified if the ``SourceDBInstanceIdentifier`` parameter is also
     * specified. + The specified DB cluster must have automatic backups enabled, that is, its backup retention period
     * must be greater than 0. + The source DB cluster must be in the same AWS-Region as the read replica. Cross-Region
     * replication isn't supported.
     * 
     * @param sourceDBClusterIdentifier the sourceDBClusterIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withSourceDBClusterIdentifier(String sourceDBClusterIdentifier) {
        this.sourceDBClusterIdentifier = sourceDBClusterIdentifier;
        return this;
    }

    /**
     * Get the sourceDBInstanceAutomatedBackupsArn property: The Amazon Resource Name (ARN) of the replicated automated
     * backups from which to restore, for example,
     * ``arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE``. This setting doesn't apply to
     * RDS Custom.
     * 
     * @return the sourceDBInstanceAutomatedBackupsArn value.
     */
    public String sourceDBInstanceAutomatedBackupsArn() {
        return this.sourceDBInstanceAutomatedBackupsArn;
    }

    /**
     * Set the sourceDBInstanceAutomatedBackupsArn property: The Amazon Resource Name (ARN) of the replicated automated
     * backups from which to restore, for example,
     * ``arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE``. This setting doesn't apply to
     * RDS Custom.
     * 
     * @param sourceDBInstanceAutomatedBackupsArn the sourceDBInstanceAutomatedBackupsArn value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties
        withSourceDBInstanceAutomatedBackupsArn(String sourceDBInstanceAutomatedBackupsArn) {
        this.sourceDBInstanceAutomatedBackupsArn = sourceDBInstanceAutomatedBackupsArn;
        return this;
    }

    /**
     * Get the sourceDBInstanceIdentifier property: If you want to create a read replica DB instance, specify the ID of
     * the source DB instance. Each DB instance can have a limited number of read replicas. For more information, see
     * [Working with Read Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/USER_ReadRepl.html) in
     * the *Amazon RDS User Guide*. For information about constraints that apply to DB instance identifiers, see [Naming
     * constraints in Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the
     * *Amazon RDS User Guide*. The ``SourceDBInstanceIdentifier`` property determines whether a DB instance is a read
     * replica. If you remove the ``SourceDBInstanceIdentifier`` property from your template and then update your stack,
     * AWS CloudFormation promotes the Read Replica to a standalone DB instance. + If you specify a source DB instance
     * that uses VPC security groups, we recommend that you specify the ``VPCSecurityGroups`` property. If you don't
     * specify the property, the read replica inherits the value of the ``VPCSecurityGroups`` property from the source
     * DB when you create the replica. However, if you update the stack, AWS CloudFormation reverts the replica's
     * ``VPCSecurityGroups`` property to the default value because it's not defined in the stack's template. This change
     * might cause unexpected issues. + Read replicas don't support deletion policies. AWS CloudFormation ignores any
     * deletion policy that's associated with a read replica. + If you specify ``SourceDBInstanceIdentifier``, don't
     * specify the ``DBSnapshotIdentifier`` property. You can't create a read replica from a snapshot. + Don't set the
     * ``BackupRetentionPeriod``, ``DBName``, ``MasterUsername``, ``MasterUserPassword``, and ``PreferredBackupWindow``
     * properties. The database attributes are inherited from the source DB instance, and backups are disabled for read
     * replicas. + If the source DB instance is in a different region than the read replica, specify the source region
     * in ``SourceRegion``, and specify an ARN for a valid DB instance in ``SourceDBInstanceIdentifier``. For more
     * information, see [Constructing a Amazon RDS Amazon Resource Name
     * (ARN)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN) in the *Amazon
     * RDS User Guide*. + For DB instances in Amazon Aurora clusters, don't specify this property. Amazon RDS
     * automatically assigns writer and reader DB instances.
     * 
     * @return the sourceDBInstanceIdentifier value.
     */
    public String sourceDBInstanceIdentifier() {
        return this.sourceDBInstanceIdentifier;
    }

    /**
     * Set the sourceDBInstanceIdentifier property: If you want to create a read replica DB instance, specify the ID of
     * the source DB instance. Each DB instance can have a limited number of read replicas. For more information, see
     * [Working with Read Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/USER_ReadRepl.html) in
     * the *Amazon RDS User Guide*. For information about constraints that apply to DB instance identifiers, see [Naming
     * constraints in Amazon
     * RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the
     * *Amazon RDS User Guide*. The ``SourceDBInstanceIdentifier`` property determines whether a DB instance is a read
     * replica. If you remove the ``SourceDBInstanceIdentifier`` property from your template and then update your stack,
     * AWS CloudFormation promotes the Read Replica to a standalone DB instance. + If you specify a source DB instance
     * that uses VPC security groups, we recommend that you specify the ``VPCSecurityGroups`` property. If you don't
     * specify the property, the read replica inherits the value of the ``VPCSecurityGroups`` property from the source
     * DB when you create the replica. However, if you update the stack, AWS CloudFormation reverts the replica's
     * ``VPCSecurityGroups`` property to the default value because it's not defined in the stack's template. This change
     * might cause unexpected issues. + Read replicas don't support deletion policies. AWS CloudFormation ignores any
     * deletion policy that's associated with a read replica. + If you specify ``SourceDBInstanceIdentifier``, don't
     * specify the ``DBSnapshotIdentifier`` property. You can't create a read replica from a snapshot. + Don't set the
     * ``BackupRetentionPeriod``, ``DBName``, ``MasterUsername``, ``MasterUserPassword``, and ``PreferredBackupWindow``
     * properties. The database attributes are inherited from the source DB instance, and backups are disabled for read
     * replicas. + If the source DB instance is in a different region than the read replica, specify the source region
     * in ``SourceRegion``, and specify an ARN for a valid DB instance in ``SourceDBInstanceIdentifier``. For more
     * information, see [Constructing a Amazon RDS Amazon Resource Name
     * (ARN)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN) in the *Amazon
     * RDS User Guide*. + For DB instances in Amazon Aurora clusters, don't specify this property. Amazon RDS
     * automatically assigns writer and reader DB instances.
     * 
     * @param sourceDBInstanceIdentifier the sourceDBInstanceIdentifier value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withSourceDBInstanceIdentifier(String sourceDBInstanceIdentifier) {
        this.sourceDBInstanceIdentifier = sourceDBInstanceIdentifier;
        return this;
    }

    /**
     * Get the sourceDbiResourceId property: The resource ID of the source DB instance from which to restore.
     * 
     * @return the sourceDbiResourceId value.
     */
    public String sourceDbiResourceId() {
        return this.sourceDbiResourceId;
    }

    /**
     * Set the sourceDbiResourceId property: The resource ID of the source DB instance from which to restore.
     * 
     * @param sourceDbiResourceId the sourceDbiResourceId value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withSourceDbiResourceId(String sourceDbiResourceId) {
        this.sourceDbiResourceId = sourceDbiResourceId;
        return this;
    }

    /**
     * Get the sourceRegion property: The ID of the region that contains the source DB instance for the read replica.
     * 
     * @return the sourceRegion value.
     */
    public String sourceRegion() {
        return this.sourceRegion;
    }

    /**
     * Set the sourceRegion property: The ID of the region that contains the source DB instance for the read replica.
     * 
     * @param sourceRegion the sourceRegion value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withSourceRegion(String sourceRegion) {
        this.sourceRegion = sourceRegion;
        return this;
    }

    /**
     * Get the storageEncrypted property: A value that indicates whether the DB instance is encrypted. By default, it
     * isn't encrypted. If you specify the ``KmsKeyId`` property, then you must enable encryption. If you specify the
     * ``SourceDBInstanceIdentifier`` property, don't specify this property. The value is inherited from the source DB
     * instance, and if the DB instance is encrypted, the specified ``KmsKeyId`` property is used. If you specify the
     * ``DBSnapshotIdentifier`` and the specified snapshot is encrypted, don't specify this property. The value is
     * inherited from the snapshot, and the specified ``KmsKeyId`` property is used. If you specify the
     * ``DBSnapshotIdentifier`` and the specified snapshot isn't encrypted, you can use this property to specify that
     * the restored DB instance is encrypted. Specify the ``KmsKeyId`` property for the KMS key to use for encryption.
     * If you don't want the restored DB instance to be encrypted, then don't set this property or set it to ``false``.
     * *Amazon Aurora* Not applicable. The encryption for DB instances is managed by the DB cluster.
     * 
     * @return the storageEncrypted value.
     */
    public Boolean storageEncrypted() {
        return this.storageEncrypted;
    }

    /**
     * Set the storageEncrypted property: A value that indicates whether the DB instance is encrypted. By default, it
     * isn't encrypted. If you specify the ``KmsKeyId`` property, then you must enable encryption. If you specify the
     * ``SourceDBInstanceIdentifier`` property, don't specify this property. The value is inherited from the source DB
     * instance, and if the DB instance is encrypted, the specified ``KmsKeyId`` property is used. If you specify the
     * ``DBSnapshotIdentifier`` and the specified snapshot is encrypted, don't specify this property. The value is
     * inherited from the snapshot, and the specified ``KmsKeyId`` property is used. If you specify the
     * ``DBSnapshotIdentifier`` and the specified snapshot isn't encrypted, you can use this property to specify that
     * the restored DB instance is encrypted. Specify the ``KmsKeyId`` property for the KMS key to use for encryption.
     * If you don't want the restored DB instance to be encrypted, then don't set this property or set it to ``false``.
     * *Amazon Aurora* Not applicable. The encryption for DB instances is managed by the DB cluster.
     * 
     * @param storageEncrypted the storageEncrypted value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withStorageEncrypted(Boolean storageEncrypted) {
        this.storageEncrypted = storageEncrypted;
        return this;
    }

    /**
     * Get the storageThroughput property: Specifies the storage throughput value for the DB instance. This setting
     * applies only to the ``gp3`` storage type. This setting doesn't apply to RDS Custom or Amazon Aurora.
     * 
     * @return the storageThroughput value.
     */
    public Integer storageThroughput() {
        return this.storageThroughput;
    }

    /**
     * Set the storageThroughput property: Specifies the storage throughput value for the DB instance. This setting
     * applies only to the ``gp3`` storage type. This setting doesn't apply to RDS Custom or Amazon Aurora.
     * 
     * @param storageThroughput the storageThroughput value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withStorageThroughput(Integer storageThroughput) {
        this.storageThroughput = storageThroughput;
        return this;
    }

    /**
     * Get the storageType property: The storage type to associate with the DB instance. If you specify ``io1``,
     * ``io2``, or ``gp3``, you must also include a value for the ``Iops`` parameter. This setting doesn't apply to
     * Amazon Aurora DB instances. Storage is managed by the DB cluster. Valid Values: ``gp2 | gp3 | io1 | io2 |
     * standard`` Default: ``io1``, if the ``Iops`` parameter is specified. Otherwise, ``gp2``.
     * 
     * @return the storageType value.
     */
    public String storageType() {
        return this.storageType;
    }

    /**
     * Set the storageType property: The storage type to associate with the DB instance. If you specify ``io1``,
     * ``io2``, or ``gp3``, you must also include a value for the ``Iops`` parameter. This setting doesn't apply to
     * Amazon Aurora DB instances. Storage is managed by the DB cluster. Valid Values: ``gp2 | gp3 | io1 | io2 |
     * standard`` Default: ``io1``, if the ``Iops`` parameter is specified. Otherwise, ``gp2``.
     * 
     * @param storageType the storageType value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withStorageType(String storageType) {
        this.storageType = storageType;
        return this;
    }

    /**
     * Get the tags property: An optional array of key-value pairs to apply to this DB instance.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated46> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: An optional array of key-value pairs to apply to this DB instance.
     * 
     * @param tags the tags value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withTags(List<TagAutoGenerated46> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the tdeCredentialArn property: Property tdeCredentialArn.
     * 
     * @return the tdeCredentialArn value.
     */
    public String tdeCredentialArn() {
        return this.tdeCredentialArn;
    }

    /**
     * Set the tdeCredentialArn property: Property tdeCredentialArn.
     * 
     * @param tdeCredentialArn the tdeCredentialArn value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withTdeCredentialArn(String tdeCredentialArn) {
        this.tdeCredentialArn = tdeCredentialArn;
        return this;
    }

    /**
     * Get the tdeCredentialPassword property: Property tdeCredentialPassword.
     * 
     * @return the tdeCredentialPassword value.
     */
    public String tdeCredentialPassword() {
        return this.tdeCredentialPassword;
    }

    /**
     * Set the tdeCredentialPassword property: Property tdeCredentialPassword.
     * 
     * @param tdeCredentialPassword the tdeCredentialPassword value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withTdeCredentialPassword(String tdeCredentialPassword) {
        this.tdeCredentialPassword = tdeCredentialPassword;
        return this;
    }

    /**
     * Get the timezone property: The time zone of the DB instance. The time zone parameter is currently supported only
     * by [Microsoft SQL
     * Server](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
     * 
     * @return the timezone value.
     */
    public String timezone() {
        return this.timezone;
    }

    /**
     * Set the timezone property: The time zone of the DB instance. The time zone parameter is currently supported only
     * by [Microsoft SQL
     * Server](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
     * 
     * @param timezone the timezone value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }

    /**
     * Get the useDefaultProcessorFeatures property: Specifies whether the DB instance class of the DB instance uses its
     * default processor features. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @return the useDefaultProcessorFeatures value.
     */
    public Boolean useDefaultProcessorFeatures() {
        return this.useDefaultProcessorFeatures;
    }

    /**
     * Set the useDefaultProcessorFeatures property: Specifies whether the DB instance class of the DB instance uses its
     * default processor features. This setting doesn't apply to RDS Custom DB instances.
     * 
     * @param useDefaultProcessorFeatures the useDefaultProcessorFeatures value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withUseDefaultProcessorFeatures(Boolean useDefaultProcessorFeatures) {
        this.useDefaultProcessorFeatures = useDefaultProcessorFeatures;
        return this;
    }

    /**
     * Get the useLatestRestorableTime property: Specifies whether the DB instance is restored from the latest backup
     * time. By default, the DB instance isn't restored from the latest backup time. Constraints: + Can't be specified
     * if the ``RestoreTime`` parameter is provided.
     * 
     * @return the useLatestRestorableTime value.
     */
    public Boolean useLatestRestorableTime() {
        return this.useLatestRestorableTime;
    }

    /**
     * Set the useLatestRestorableTime property: Specifies whether the DB instance is restored from the latest backup
     * time. By default, the DB instance isn't restored from the latest backup time. Constraints: + Can't be specified
     * if the ``RestoreTime`` parameter is provided.
     * 
     * @param useLatestRestorableTime the useLatestRestorableTime value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withUseLatestRestorableTime(Boolean useLatestRestorableTime) {
        this.useLatestRestorableTime = useLatestRestorableTime;
        return this;
    }

    /**
     * Get the vpcSecurityGroups property: A list of the VPC security group IDs to assign to the DB instance. The list
     * can include both the physical IDs of existing VPC security groups and references to
     * [AWS::EC2::SecurityGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html)
     * resources created in the template. If you plan to update the resource, don't specify VPC security groups in a
     * shared VPC. If you set ``VPCSecurityGroups``, you must not set
     * [DBSecurityGroups](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-dbsecuritygroups),
     * and vice versa. You can migrate a DB instance in your stack from an RDS DB security group to a VPC security
     * group, but keep the following in mind: + You can't revert to using an RDS security group after you establish a
     * VPC security group membership. + When you migrate your DB instance to VPC security groups, if your stack update
     * rolls back because the DB instance update fails or because an update fails in another AWS CloudFormation
     * resource, the rollback fails because it can't revert to an RDS security group. + To use the properties that are
     * available when you use a VPC security group, you must recreate the DB instance. If you don't, AWS CloudFormation
     * submits only the property values that are listed in the
     * [DBSecurityGroups](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-dbsecuritygroups)
     * property. To avoid this situation, migrate your DB instance to using VPC security groups only when that is the
     * only change in your stack template. *Amazon Aurora* Not applicable. The associated list of EC2 VPC security
     * groups is managed by the DB cluster. If specified, the setting must match the DB cluster setting.
     * 
     * @return the vpcSecurityGroups value.
     */
    public List<String> vpcSecurityGroups() {
        return this.vpcSecurityGroups;
    }

    /**
     * Set the vpcSecurityGroups property: A list of the VPC security group IDs to assign to the DB instance. The list
     * can include both the physical IDs of existing VPC security groups and references to
     * [AWS::EC2::SecurityGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html)
     * resources created in the template. If you plan to update the resource, don't specify VPC security groups in a
     * shared VPC. If you set ``VPCSecurityGroups``, you must not set
     * [DBSecurityGroups](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-dbsecuritygroups),
     * and vice versa. You can migrate a DB instance in your stack from an RDS DB security group to a VPC security
     * group, but keep the following in mind: + You can't revert to using an RDS security group after you establish a
     * VPC security group membership. + When you migrate your DB instance to VPC security groups, if your stack update
     * rolls back because the DB instance update fails or because an update fails in another AWS CloudFormation
     * resource, the rollback fails because it can't revert to an RDS security group. + To use the properties that are
     * available when you use a VPC security group, you must recreate the DB instance. If you don't, AWS CloudFormation
     * submits only the property values that are listed in the
     * [DBSecurityGroups](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-dbsecuritygroups)
     * property. To avoid this situation, migrate your DB instance to using VPC security groups only when that is the
     * only change in your stack template. *Amazon Aurora* Not applicable. The associated list of EC2 VPC security
     * groups is managed by the DB cluster. If specified, the setting must match the DB cluster setting.
     * 
     * @param vpcSecurityGroups the vpcSecurityGroups value to set.
     * @return the AwsRdsDBInstanceProperties object itself.
     */
    public AwsRdsDBInstanceProperties withVpcSecurityGroups(List<String> vpcSecurityGroups) {
        this.vpcSecurityGroups = vpcSecurityGroups;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (associatedRoles() != null) {
            associatedRoles().forEach(e -> e.validate());
        }
        if (certificateDetails() != null) {
            certificateDetails().validate();
        }
        if (endpoint() != null) {
            endpoint().validate();
        }
        if (masterUserSecret() != null) {
            masterUserSecret().validate();
        }
        if (processorFeatures() != null) {
            processorFeatures().forEach(e -> e.validate());
        }
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("allocatedStorage", this.allocatedStorage);
        jsonWriter.writeBooleanField("allowMajorVersionUpgrade", this.allowMajorVersionUpgrade);
        jsonWriter.writeArrayField("associatedRoles", this.associatedRoles,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeBooleanField("autoMinorVersionUpgrade", this.autoMinorVersionUpgrade);
        jsonWriter.writeStringField("automaticBackupReplicationKmsKeyId", this.automaticBackupReplicationKmsKeyId);
        jsonWriter.writeStringField("automaticBackupReplicationRegion", this.automaticBackupReplicationRegion);
        jsonWriter.writeStringField("availabilityZone", this.availabilityZone);
        jsonWriter.writeNumberField("backupRetentionPeriod", this.backupRetentionPeriod);
        jsonWriter.writeStringField("caCertificateIdentifier", this.caCertificateIdentifier);
        jsonWriter.writeJsonField("certificateDetails", this.certificateDetails);
        jsonWriter.writeBooleanField("certificateRotationRestart", this.certificateRotationRestart);
        jsonWriter.writeStringField("characterSetName", this.characterSetName);
        jsonWriter.writeBooleanField("copyTagsToSnapshot", this.copyTagsToSnapshot);
        jsonWriter.writeStringField("customIAMInstanceProfile", this.customIamInstanceProfile);
        jsonWriter.writeStringField("dbClusterIdentifier", this.dbClusterIdentifier);
        jsonWriter.writeStringField("dbClusterSnapshotIdentifier", this.dbClusterSnapshotIdentifier);
        jsonWriter.writeStringField("dbInstanceArn", this.dbInstanceArn);
        jsonWriter.writeStringField("dbInstanceClass", this.dbInstanceClass);
        jsonWriter.writeStringField("dbInstanceIdentifier", this.dbInstanceIdentifier);
        jsonWriter.writeStringField("dbName", this.dbName);
        jsonWriter.writeStringField("dbParameterGroupName", this.dbParameterGroupName);
        jsonWriter.writeArrayField("dbSecurityGroups", this.dbSecurityGroups,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("dbSnapshotIdentifier", this.dbSnapshotIdentifier);
        jsonWriter.writeStringField("dbSubnetGroupName", this.dbSubnetGroupName);
        jsonWriter.writeStringField("dbSystemId", this.dbSystemId);
        jsonWriter.writeStringField("dbiResourceId", this.dbiResourceId);
        jsonWriter.writeBooleanField("dedicatedLogVolume", this.dedicatedLogVolume);
        jsonWriter.writeBooleanField("deleteAutomatedBackups", this.deleteAutomatedBackups);
        jsonWriter.writeBooleanField("deletionProtection", this.deletionProtection);
        jsonWriter.writeStringField("domain", this.domain);
        jsonWriter.writeStringField("domainAuthSecretArn", this.domainAuthSecretArn);
        jsonWriter.writeArrayField("domainDnsIps", this.domainDnsIps, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("domainFqdn", this.domainFqdn);
        jsonWriter.writeStringField("domainIAMRoleName", this.domainIamRoleName);
        jsonWriter.writeStringField("domainOu", this.domainOu);
        jsonWriter.writeArrayField("enableCloudwatchLogsExports", this.enableCloudwatchLogsExports,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeBooleanField("enableIAMDatabaseAuthentication", this.enableIamDatabaseAuthentication);
        jsonWriter.writeBooleanField("enablePerformanceInsights", this.enablePerformanceInsights);
        jsonWriter.writeJsonField("endpoint", this.endpoint);
        jsonWriter.writeStringField("engine", this.engine);
        jsonWriter.writeStringField("engineVersion", this.engineVersion);
        jsonWriter.writeNumberField("iops", this.iops);
        jsonWriter.writeStringField("kmsKeyId", this.kmsKeyId);
        jsonWriter.writeStringField("licenseModel", this.licenseModel);
        jsonWriter.writeBooleanField("manageMasterUserPassword", this.manageMasterUserPassword);
        jsonWriter.writeStringField("masterUserPassword", this.masterUserPassword);
        jsonWriter.writeJsonField("masterUserSecret", this.masterUserSecret);
        jsonWriter.writeStringField("masterUsername", this.masterUsername);
        jsonWriter.writeNumberField("maxAllocatedStorage", this.maxAllocatedStorage);
        jsonWriter.writeNumberField("monitoringInterval", this.monitoringInterval);
        jsonWriter.writeStringField("monitoringRoleArn", this.monitoringRoleArn);
        jsonWriter.writeBooleanField("multiAZ", this.multiAZ);
        jsonWriter.writeStringField("ncharCharacterSetName", this.ncharCharacterSetName);
        jsonWriter.writeStringField("networkType", this.networkType);
        jsonWriter.writeStringField("optionGroupName", this.optionGroupName);
        jsonWriter.writeStringField("performanceInsightsKMSKeyId", this.performanceInsightsKmsKeyId);
        jsonWriter.writeNumberField("performanceInsightsRetentionPeriod", this.performanceInsightsRetentionPeriod);
        jsonWriter.writeStringField("port", this.port);
        jsonWriter.writeStringField("preferredBackupWindow", this.preferredBackupWindow);
        jsonWriter.writeStringField("preferredMaintenanceWindow", this.preferredMaintenanceWindow);
        jsonWriter.writeArrayField("processorFeatures", this.processorFeatures,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeNumberField("promotionTier", this.promotionTier);
        jsonWriter.writeBooleanField("publiclyAccessible", this.publiclyAccessible);
        jsonWriter.writeStringField("replicaMode", this.replicaMode);
        jsonWriter.writeStringField("restoreTime", this.restoreTime);
        jsonWriter.writeStringField("sourceDBClusterIdentifier", this.sourceDBClusterIdentifier);
        jsonWriter.writeStringField("sourceDBInstanceAutomatedBackupsArn", this.sourceDBInstanceAutomatedBackupsArn);
        jsonWriter.writeStringField("sourceDBInstanceIdentifier", this.sourceDBInstanceIdentifier);
        jsonWriter.writeStringField("sourceDbiResourceId", this.sourceDbiResourceId);
        jsonWriter.writeStringField("sourceRegion", this.sourceRegion);
        jsonWriter.writeBooleanField("storageEncrypted", this.storageEncrypted);
        jsonWriter.writeNumberField("storageThroughput", this.storageThroughput);
        jsonWriter.writeStringField("storageType", this.storageType);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("tdeCredentialArn", this.tdeCredentialArn);
        jsonWriter.writeStringField("tdeCredentialPassword", this.tdeCredentialPassword);
        jsonWriter.writeStringField("timezone", this.timezone);
        jsonWriter.writeBooleanField("useDefaultProcessorFeatures", this.useDefaultProcessorFeatures);
        jsonWriter.writeBooleanField("useLatestRestorableTime", this.useLatestRestorableTime);
        jsonWriter.writeArrayField("vpcSecurityGroups", this.vpcSecurityGroups,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsRdsDBInstanceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsRdsDBInstanceProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AwsRdsDBInstanceProperties.
     */
    public static AwsRdsDBInstanceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AwsRdsDBInstanceProperties deserializedAwsRdsDBInstanceProperties = new AwsRdsDBInstanceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("allocatedStorage".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.allocatedStorage = reader.getString();
                } else if ("allowMajorVersionUpgrade".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.allowMajorVersionUpgrade
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("associatedRoles".equals(fieldName)) {
                    List<DBInstanceRole> associatedRoles
                        = reader.readArray(reader1 -> DBInstanceRole.fromJson(reader1));
                    deserializedAwsRdsDBInstanceProperties.associatedRoles = associatedRoles;
                } else if ("autoMinorVersionUpgrade".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.autoMinorVersionUpgrade
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("automaticBackupReplicationKmsKeyId".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.automaticBackupReplicationKmsKeyId = reader.getString();
                } else if ("automaticBackupReplicationRegion".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.automaticBackupReplicationRegion = reader.getString();
                } else if ("availabilityZone".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.availabilityZone = reader.getString();
                } else if ("backupRetentionPeriod".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.backupRetentionPeriod
                        = reader.getNullable(JsonReader::getInt);
                } else if ("caCertificateIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.caCertificateIdentifier = reader.getString();
                } else if ("certificateDetails".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.certificateDetails = CertificateDetails.fromJson(reader);
                } else if ("certificateRotationRestart".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.certificateRotationRestart
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("characterSetName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.characterSetName = reader.getString();
                } else if ("copyTagsToSnapshot".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.copyTagsToSnapshot
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("customIAMInstanceProfile".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.customIamInstanceProfile = reader.getString();
                } else if ("dbClusterIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbClusterIdentifier = reader.getString();
                } else if ("dbClusterSnapshotIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbClusterSnapshotIdentifier = reader.getString();
                } else if ("dbInstanceArn".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbInstanceArn = reader.getString();
                } else if ("dbInstanceClass".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbInstanceClass = reader.getString();
                } else if ("dbInstanceIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbInstanceIdentifier = reader.getString();
                } else if ("dbName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbName = reader.getString();
                } else if ("dbParameterGroupName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbParameterGroupName = reader.getString();
                } else if ("dbSecurityGroups".equals(fieldName)) {
                    List<String> dbSecurityGroups = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsRdsDBInstanceProperties.dbSecurityGroups = dbSecurityGroups;
                } else if ("dbSnapshotIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbSnapshotIdentifier = reader.getString();
                } else if ("dbSubnetGroupName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbSubnetGroupName = reader.getString();
                } else if ("dbSystemId".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbSystemId = reader.getString();
                } else if ("dbiResourceId".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dbiResourceId = reader.getString();
                } else if ("dedicatedLogVolume".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.dedicatedLogVolume
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("deleteAutomatedBackups".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.deleteAutomatedBackups
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("deletionProtection".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.deletionProtection
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("domain".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.domain = reader.getString();
                } else if ("domainAuthSecretArn".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.domainAuthSecretArn = reader.getString();
                } else if ("domainDnsIps".equals(fieldName)) {
                    List<String> domainDnsIps = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsRdsDBInstanceProperties.domainDnsIps = domainDnsIps;
                } else if ("domainFqdn".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.domainFqdn = reader.getString();
                } else if ("domainIAMRoleName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.domainIamRoleName = reader.getString();
                } else if ("domainOu".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.domainOu = reader.getString();
                } else if ("enableCloudwatchLogsExports".equals(fieldName)) {
                    List<String> enableCloudwatchLogsExports = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsRdsDBInstanceProperties.enableCloudwatchLogsExports = enableCloudwatchLogsExports;
                } else if ("enableIAMDatabaseAuthentication".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.enableIamDatabaseAuthentication
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enablePerformanceInsights".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.enablePerformanceInsights
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("endpoint".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.endpoint = EndpointAutoGenerated2.fromJson(reader);
                } else if ("engine".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.engine = reader.getString();
                } else if ("engineVersion".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.engineVersion = reader.getString();
                } else if ("iops".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.iops = reader.getNullable(JsonReader::getInt);
                } else if ("kmsKeyId".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.kmsKeyId = reader.getString();
                } else if ("licenseModel".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.licenseModel = reader.getString();
                } else if ("manageMasterUserPassword".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.manageMasterUserPassword
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("masterUserPassword".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.masterUserPassword = reader.getString();
                } else if ("masterUserSecret".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.masterUserSecret = MasterUserSecret.fromJson(reader);
                } else if ("masterUsername".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.masterUsername = reader.getString();
                } else if ("maxAllocatedStorage".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.maxAllocatedStorage = reader.getNullable(JsonReader::getInt);
                } else if ("monitoringInterval".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.monitoringInterval = reader.getNullable(JsonReader::getInt);
                } else if ("monitoringRoleArn".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.monitoringRoleArn = reader.getString();
                } else if ("multiAZ".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.multiAZ = reader.getNullable(JsonReader::getBoolean);
                } else if ("ncharCharacterSetName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.ncharCharacterSetName = reader.getString();
                } else if ("networkType".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.networkType = reader.getString();
                } else if ("optionGroupName".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.optionGroupName = reader.getString();
                } else if ("performanceInsightsKMSKeyId".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.performanceInsightsKmsKeyId = reader.getString();
                } else if ("performanceInsightsRetentionPeriod".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.performanceInsightsRetentionPeriod
                        = reader.getNullable(JsonReader::getInt);
                } else if ("port".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.port = reader.getString();
                } else if ("preferredBackupWindow".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.preferredBackupWindow = reader.getString();
                } else if ("preferredMaintenanceWindow".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.preferredMaintenanceWindow = reader.getString();
                } else if ("processorFeatures".equals(fieldName)) {
                    List<ProcessorFeature> processorFeatures
                        = reader.readArray(reader1 -> ProcessorFeature.fromJson(reader1));
                    deserializedAwsRdsDBInstanceProperties.processorFeatures = processorFeatures;
                } else if ("promotionTier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.promotionTier = reader.getNullable(JsonReader::getInt);
                } else if ("publiclyAccessible".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.publiclyAccessible
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("replicaMode".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.replicaMode = reader.getString();
                } else if ("restoreTime".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.restoreTime = reader.getString();
                } else if ("sourceDBClusterIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.sourceDBClusterIdentifier = reader.getString();
                } else if ("sourceDBInstanceAutomatedBackupsArn".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.sourceDBInstanceAutomatedBackupsArn = reader.getString();
                } else if ("sourceDBInstanceIdentifier".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.sourceDBInstanceIdentifier = reader.getString();
                } else if ("sourceDbiResourceId".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.sourceDbiResourceId = reader.getString();
                } else if ("sourceRegion".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.sourceRegion = reader.getString();
                } else if ("storageEncrypted".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.storageEncrypted
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("storageThroughput".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.storageThroughput = reader.getNullable(JsonReader::getInt);
                } else if ("storageType".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.storageType = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated46> tags = reader.readArray(reader1 -> TagAutoGenerated46.fromJson(reader1));
                    deserializedAwsRdsDBInstanceProperties.tags = tags;
                } else if ("tdeCredentialArn".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.tdeCredentialArn = reader.getString();
                } else if ("tdeCredentialPassword".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.tdeCredentialPassword = reader.getString();
                } else if ("timezone".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.timezone = reader.getString();
                } else if ("useDefaultProcessorFeatures".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.useDefaultProcessorFeatures
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("useLatestRestorableTime".equals(fieldName)) {
                    deserializedAwsRdsDBInstanceProperties.useLatestRestorableTime
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("vpcSecurityGroups".equals(fieldName)) {
                    List<String> vpcSecurityGroups = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsRdsDBInstanceProperties.vpcSecurityGroups = vpcSecurityGroups;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsRdsDBInstanceProperties;
        });
    }
}

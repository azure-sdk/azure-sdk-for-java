// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 * Definition of awsDatabaseMigrationServiceReplicationInstance.
 */
@Fluent
public final class AwsDatabaseMigrationServiceReplicationInstanceProperties
    implements JsonSerializable<AwsDatabaseMigrationServiceReplicationInstanceProperties> {
    /*
     * <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
     */
    private Integer allocatedStorage;

    /*
     * <p>Boolean value indicating if minor version upgrades will be automatically applied to the instance.</p>
     */
    private Boolean autoMinorVersionUpgrade;

    /*
     * <p>The Availability Zone for the instance.</p>
     */
    private String availabilityZone;

    /*
     * <p>The DNS name servers supported for the replication instance to access your on-premise source or target
     * database.</p>
     */
    private String dnsNameServers;

    /*
     * <p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified
     * when a replication instance is created, the default is the latest engine version available.</p> <p>When modifying
     * a major engine version of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>
     */
    private String engineVersion;

    /*
     * <p> The expiration date of the free replication instance that is part of the Free DMS program. </p>
     */
    private OffsetDateTime freeUntil;

    /*
     * <p>The time the replication instance was created.</p>
     */
    private OffsetDateTime instanceCreateTime;

    /*
     * <p>An KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't
     * specify a value for the <code>KmsKeyId</code> parameter, then DMS uses your default encryption key.</p> <p>KMS
     * creates the default encryption key for your Amazon Web Services account. Your Amazon Web Services account has a
     * different default encryption key for each Amazon Web Services Region.</p>
     */
    private String kmsKeyId;

    /*
     * <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the
     * <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
     */
    private Boolean multiAZ;

    /*
     * <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports
     * both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
     */
    private String networkType;

    /*
     * <p>The pending modification values.</p>
     */
    private ReplicationPendingModifiedValues pendingModifiedValues;

    /*
     * <p>The maintenance window times for the replication instance. Any pending upgrades to the replication instance
     * are performed during this time.</p>
     */
    private String preferredMaintenanceWindow;

    /*
     * <p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an
     * instance with a public IP address. A value of <code>false</code> represents an instance with a private IP
     * address. The default value is <code>true</code>. </p>
     */
    private Boolean publiclyAccessible;

    /*
     * <p>The Amazon Resource Name (ARN) of the replication instance.</p>
     */
    private String replicationInstanceArn;

    /*
     * <p>The compute and memory capacity of the replication instance as defined for the specified replication instance
     * class. It is a required parameter, although a default value is pre-selected in the DMS console.</p> <p>For more
     * information on the settings and capacities for the available replication instance classes, see <a
     * href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.
     * InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
     */
    private String replicationInstanceClass;

    /*
     * <p>The replication instance identifier is a required parameter. This parameter is stored as a lowercase
     * string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li>
     * <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive
     * hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>
     */
    private String replicationInstanceIdentifier;

    /*
     * <p>One or more IPv6 addresses for the replication instance.</p>
     */
    private List<String> replicationInstanceIpv6Addresses;

    /*
     * <p>The private IP address of the replication instance.</p>
     */
    private String replicationInstancePrivateIpAddress;

    /*
     * <p>One or more private IP addresses for the replication instance.</p>
     */
    private List<String> replicationInstancePrivateIpAddresses;

    /*
     * <p>The public IP address of the replication instance.</p>
     */
    private String replicationInstancePublicIpAddress;

    /*
     * <p>One or more public IP addresses for the replication instance.</p>
     */
    private List<String> replicationInstancePublicIpAddresses;

    /*
     * <p>The status of the replication instance. The possible return values include:</p> <ul> <li> <p>
     * <code>'available'</code> </p> </li> <li> <p> <code>'creating'</code> </p> </li> <li> <p> <code>'deleted'</code>
     * </p> </li> <li> <p> <code>'deleting'</code> </p> </li> <li> <p> <code>'failed'</code> </p> </li> <li> <p>
     * <code>'modifying'</code> </p> </li> <li> <p> <code>'upgrading'</code> </p> </li> <li> <p>
     * <code>'rebooting'</code> </p> </li> <li> <p> <code>'resetting-master-credentials'</code> </p> </li> <li> <p>
     * <code>'storage-full'</code> </p> </li> <li> <p> <code>'incompatible-credentials'</code> </p> </li> <li> <p>
     * <code>'incompatible-network'</code> </p> </li> <li> <p> <code>'maintenance'</code> </p> </li> </ul>
     */
    private String replicationInstanceStatus;

    /*
     * <p>The subnet group for the replication instance.</p>
     */
    private ReplicationSubnetGroup replicationSubnetGroup;

    /*
     * <p>The Availability Zone of the standby replication instance in a Multi-AZ deployment.</p>
     */
    private String secondaryAvailabilityZone;

    /*
     * <p>The VPC security group for the instance.</p>
     */
    private List<VpcSecurityGroupMembership> vpcSecurityGroups;

    /**
     * Creates an instance of AwsDatabaseMigrationServiceReplicationInstanceProperties class.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties() {
    }

    /**
     * Get the allocatedStorage property: &lt;p&gt;The amount of storage (in gigabytes) that is allocated for the
     * replication instance.&lt;/p&gt;.
     * 
     * @return the allocatedStorage value.
     */
    public Integer allocatedStorage() {
        return this.allocatedStorage;
    }

    /**
     * Set the allocatedStorage property: &lt;p&gt;The amount of storage (in gigabytes) that is allocated for the
     * replication instance.&lt;/p&gt;.
     * 
     * @param allocatedStorage the allocatedStorage value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withAllocatedStorage(Integer allocatedStorage) {
        this.allocatedStorage = allocatedStorage;
        return this;
    }

    /**
     * Get the autoMinorVersionUpgrade property: &lt;p&gt;Boolean value indicating if minor version upgrades will be
     * automatically applied to the instance.&lt;/p&gt;.
     * 
     * @return the autoMinorVersionUpgrade value.
     */
    public Boolean autoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade;
    }

    /**
     * Set the autoMinorVersionUpgrade property: &lt;p&gt;Boolean value indicating if minor version upgrades will be
     * automatically applied to the instance.&lt;/p&gt;.
     * 
     * @param autoMinorVersionUpgrade the autoMinorVersionUpgrade value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
        this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
        return this;
    }

    /**
     * Get the availabilityZone property: &lt;p&gt;The Availability Zone for the instance.&lt;/p&gt;.
     * 
     * @return the availabilityZone value.
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }

    /**
     * Set the availabilityZone property: &lt;p&gt;The Availability Zone for the instance.&lt;/p&gt;.
     * 
     * @param availabilityZone the availabilityZone value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withAvailabilityZone(String availabilityZone) {
        this.availabilityZone = availabilityZone;
        return this;
    }

    /**
     * Get the dnsNameServers property: &lt;p&gt;The DNS name servers supported for the replication instance to access
     * your on-premise source or target database.&lt;/p&gt;.
     * 
     * @return the dnsNameServers value.
     */
    public String dnsNameServers() {
        return this.dnsNameServers;
    }

    /**
     * Set the dnsNameServers property: &lt;p&gt;The DNS name servers supported for the replication instance to access
     * your on-premise source or target database.&lt;/p&gt;.
     * 
     * @param dnsNameServers the dnsNameServers value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withDnsNameServers(String dnsNameServers) {
        this.dnsNameServers = dnsNameServers;
        return this;
    }

    /**
     * Get the engineVersion property: &lt;p&gt;The engine version number of the replication instance.&lt;/p&gt;
     * &lt;p&gt;If an engine version number is not specified when a replication instance is created, the default is the
     * latest engine version available.&lt;/p&gt; &lt;p&gt;When modifying a major engine version of an instance, also
     * set &lt;code&gt;AllowMajorVersionUpgrade&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;.
     * 
     * @return the engineVersion value.
     */
    public String engineVersion() {
        return this.engineVersion;
    }

    /**
     * Set the engineVersion property: &lt;p&gt;The engine version number of the replication instance.&lt;/p&gt;
     * &lt;p&gt;If an engine version number is not specified when a replication instance is created, the default is the
     * latest engine version available.&lt;/p&gt; &lt;p&gt;When modifying a major engine version of an instance, also
     * set &lt;code&gt;AllowMajorVersionUpgrade&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;.
     * 
     * @param engineVersion the engineVersion value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }

    /**
     * Get the freeUntil property: &lt;p&gt; The expiration date of the free replication instance that is part of the
     * Free DMS program. &lt;/p&gt;.
     * 
     * @return the freeUntil value.
     */
    public OffsetDateTime freeUntil() {
        return this.freeUntil;
    }

    /**
     * Set the freeUntil property: &lt;p&gt; The expiration date of the free replication instance that is part of the
     * Free DMS program. &lt;/p&gt;.
     * 
     * @param freeUntil the freeUntil value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withFreeUntil(OffsetDateTime freeUntil) {
        this.freeUntil = freeUntil;
        return this;
    }

    /**
     * Get the instanceCreateTime property: &lt;p&gt;The time the replication instance was created.&lt;/p&gt;.
     * 
     * @return the instanceCreateTime value.
     */
    public OffsetDateTime instanceCreateTime() {
        return this.instanceCreateTime;
    }

    /**
     * Set the instanceCreateTime property: &lt;p&gt;The time the replication instance was created.&lt;/p&gt;.
     * 
     * @param instanceCreateTime the instanceCreateTime value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withInstanceCreateTime(OffsetDateTime instanceCreateTime) {
        this.instanceCreateTime = instanceCreateTime;
        return this;
    }

    /**
     * Get the kmsKeyId property: &lt;p&gt;An KMS key identifier that is used to encrypt the data on the replication
     * instance.&lt;/p&gt; &lt;p&gt;If you don't specify a value for the &lt;code&gt;KmsKeyId&lt;/code&gt; parameter,
     * then DMS uses your default encryption key.&lt;/p&gt; &lt;p&gt;KMS creates the default encryption key for your
     * Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for each
     * Amazon Web Services Region.&lt;/p&gt;.
     * 
     * @return the kmsKeyId value.
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }

    /**
     * Set the kmsKeyId property: &lt;p&gt;An KMS key identifier that is used to encrypt the data on the replication
     * instance.&lt;/p&gt; &lt;p&gt;If you don't specify a value for the &lt;code&gt;KmsKeyId&lt;/code&gt; parameter,
     * then DMS uses your default encryption key.&lt;/p&gt; &lt;p&gt;KMS creates the default encryption key for your
     * Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for each
     * Amazon Web Services Region.&lt;/p&gt;.
     * 
     * @param kmsKeyId the kmsKeyId value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }

    /**
     * Get the multiAZ property: &lt;p&gt; Specifies whether the replication instance is a Multi-AZ deployment. You
     * can't set the &lt;code&gt;AvailabilityZone&lt;/code&gt; parameter if the Multi-AZ parameter is set to
     * &lt;code&gt;true&lt;/code&gt;. &lt;/p&gt;.
     * 
     * @return the multiAZ value.
     */
    public Boolean multiAZ() {
        return this.multiAZ;
    }

    /**
     * Set the multiAZ property: &lt;p&gt; Specifies whether the replication instance is a Multi-AZ deployment. You
     * can't set the &lt;code&gt;AvailabilityZone&lt;/code&gt; parameter if the Multi-AZ parameter is set to
     * &lt;code&gt;true&lt;/code&gt;. &lt;/p&gt;.
     * 
     * @param multiAZ the multiAZ value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withMultiAZ(Boolean multiAZ) {
        this.multiAZ = multiAZ;
        return this;
    }

    /**
     * Get the networkType property: &lt;p&gt;The type of IP address protocol used by a replication instance, such as
     * IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.&lt;/p&gt;.
     * 
     * @return the networkType value.
     */
    public String networkType() {
        return this.networkType;
    }

    /**
     * Set the networkType property: &lt;p&gt;The type of IP address protocol used by a replication instance, such as
     * IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.&lt;/p&gt;.
     * 
     * @param networkType the networkType value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withNetworkType(String networkType) {
        this.networkType = networkType;
        return this;
    }

    /**
     * Get the pendingModifiedValues property: &lt;p&gt;The pending modification values.&lt;/p&gt;.
     * 
     * @return the pendingModifiedValues value.
     */
    public ReplicationPendingModifiedValues pendingModifiedValues() {
        return this.pendingModifiedValues;
    }

    /**
     * Set the pendingModifiedValues property: &lt;p&gt;The pending modification values.&lt;/p&gt;.
     * 
     * @param pendingModifiedValues the pendingModifiedValues value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withPendingModifiedValues(ReplicationPendingModifiedValues pendingModifiedValues) {
        this.pendingModifiedValues = pendingModifiedValues;
        return this;
    }

    /**
     * Get the preferredMaintenanceWindow property: &lt;p&gt;The maintenance window times for the replication instance.
     * Any pending upgrades to the replication instance are performed during this time.&lt;/p&gt;.
     * 
     * @return the preferredMaintenanceWindow value.
     */
    public String preferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow;
    }

    /**
     * Set the preferredMaintenanceWindow property: &lt;p&gt;The maintenance window times for the replication instance.
     * Any pending upgrades to the replication instance are performed during this time.&lt;/p&gt;.
     * 
     * @param preferredMaintenanceWindow the preferredMaintenanceWindow value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }

    /**
     * Get the publiclyAccessible property: &lt;p&gt; Specifies the accessibility options for the replication instance.
     * A value of &lt;code&gt;true&lt;/code&gt; represents an instance with a public IP address. A value of
     * &lt;code&gt;false&lt;/code&gt; represents an instance with a private IP address. The default value is
     * &lt;code&gt;true&lt;/code&gt;. &lt;/p&gt;.
     * 
     * @return the publiclyAccessible value.
     */
    public Boolean publiclyAccessible() {
        return this.publiclyAccessible;
    }

    /**
     * Set the publiclyAccessible property: &lt;p&gt; Specifies the accessibility options for the replication instance.
     * A value of &lt;code&gt;true&lt;/code&gt; represents an instance with a public IP address. A value of
     * &lt;code&gt;false&lt;/code&gt; represents an instance with a private IP address. The default value is
     * &lt;code&gt;true&lt;/code&gt;. &lt;/p&gt;.
     * 
     * @param publiclyAccessible the publiclyAccessible value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties withPubliclyAccessible(Boolean publiclyAccessible) {
        this.publiclyAccessible = publiclyAccessible;
        return this;
    }

    /**
     * Get the replicationInstanceArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the replication
     * instance.&lt;/p&gt;.
     * 
     * @return the replicationInstanceArn value.
     */
    public String replicationInstanceArn() {
        return this.replicationInstanceArn;
    }

    /**
     * Set the replicationInstanceArn property: &lt;p&gt;The Amazon Resource Name (ARN) of the replication
     * instance.&lt;/p&gt;.
     * 
     * @param replicationInstanceArn the replicationInstanceArn value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstanceArn(String replicationInstanceArn) {
        this.replicationInstanceArn = replicationInstanceArn;
        return this;
    }

    /**
     * Get the replicationInstanceClass property: &lt;p&gt;The compute and memory capacity of the replication instance
     * as defined for the specified replication instance class. It is a required parameter, although a default value is
     * pre-selected in the DMS console.&lt;/p&gt; &lt;p&gt;For more information on the settings and capacities for the
     * available replication instance classes, see &lt;a
     * href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'&gt;
     * Selecting the right DMS replication instance for your migration&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @return the replicationInstanceClass value.
     */
    public String replicationInstanceClass() {
        return this.replicationInstanceClass;
    }

    /**
     * Set the replicationInstanceClass property: &lt;p&gt;The compute and memory capacity of the replication instance
     * as defined for the specified replication instance class. It is a required parameter, although a default value is
     * pre-selected in the DMS console.&lt;/p&gt; &lt;p&gt;For more information on the settings and capacities for the
     * available replication instance classes, see &lt;a
     * href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'&gt;
     * Selecting the right DMS replication instance for your migration&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @param replicationInstanceClass the replicationInstanceClass value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstanceClass(String replicationInstanceClass) {
        this.replicationInstanceClass = replicationInstanceClass;
        return this;
    }

    /**
     * Get the replicationInstanceIdentifier property: &lt;p&gt;The replication instance identifier is a required
     * parameter. This parameter is stored as a lowercase string.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt;
     * &lt;li&gt; &lt;p&gt;Must contain 1-63 alphanumeric characters or hyphens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt;First character must be a letter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot end with a hyphen or
     * contain two consecutive hyphens.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Example:
     * &lt;code&gt;myrepinstance&lt;/code&gt; &lt;/p&gt;.
     * 
     * @return the replicationInstanceIdentifier value.
     */
    public String replicationInstanceIdentifier() {
        return this.replicationInstanceIdentifier;
    }

    /**
     * Set the replicationInstanceIdentifier property: &lt;p&gt;The replication instance identifier is a required
     * parameter. This parameter is stored as a lowercase string.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt;
     * &lt;li&gt; &lt;p&gt;Must contain 1-63 alphanumeric characters or hyphens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt;First character must be a letter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot end with a hyphen or
     * contain two consecutive hyphens.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Example:
     * &lt;code&gt;myrepinstance&lt;/code&gt; &lt;/p&gt;.
     * 
     * @param replicationInstanceIdentifier the replicationInstanceIdentifier value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstanceIdentifier(String replicationInstanceIdentifier) {
        this.replicationInstanceIdentifier = replicationInstanceIdentifier;
        return this;
    }

    /**
     * Get the replicationInstanceIpv6Addresses property: &lt;p&gt;One or more IPv6 addresses for the replication
     * instance.&lt;/p&gt;.
     * 
     * @return the replicationInstanceIpv6Addresses value.
     */
    public List<String> replicationInstanceIpv6Addresses() {
        return this.replicationInstanceIpv6Addresses;
    }

    /**
     * Set the replicationInstanceIpv6Addresses property: &lt;p&gt;One or more IPv6 addresses for the replication
     * instance.&lt;/p&gt;.
     * 
     * @param replicationInstanceIpv6Addresses the replicationInstanceIpv6Addresses value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstanceIpv6Addresses(List<String> replicationInstanceIpv6Addresses) {
        this.replicationInstanceIpv6Addresses = replicationInstanceIpv6Addresses;
        return this;
    }

    /**
     * Get the replicationInstancePrivateIpAddress property: &lt;p&gt;The private IP address of the replication
     * instance.&lt;/p&gt;.
     * 
     * @return the replicationInstancePrivateIpAddress value.
     */
    public String replicationInstancePrivateIpAddress() {
        return this.replicationInstancePrivateIpAddress;
    }

    /**
     * Set the replicationInstancePrivateIpAddress property: &lt;p&gt;The private IP address of the replication
     * instance.&lt;/p&gt;.
     * 
     * @param replicationInstancePrivateIpAddress the replicationInstancePrivateIpAddress value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstancePrivateIpAddress(String replicationInstancePrivateIpAddress) {
        this.replicationInstancePrivateIpAddress = replicationInstancePrivateIpAddress;
        return this;
    }

    /**
     * Get the replicationInstancePrivateIpAddresses property: &lt;p&gt;One or more private IP addresses for the
     * replication instance.&lt;/p&gt;.
     * 
     * @return the replicationInstancePrivateIpAddresses value.
     */
    public List<String> replicationInstancePrivateIpAddresses() {
        return this.replicationInstancePrivateIpAddresses;
    }

    /**
     * Set the replicationInstancePrivateIpAddresses property: &lt;p&gt;One or more private IP addresses for the
     * replication instance.&lt;/p&gt;.
     * 
     * @param replicationInstancePrivateIpAddresses the replicationInstancePrivateIpAddresses value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstancePrivateIpAddresses(List<String> replicationInstancePrivateIpAddresses) {
        this.replicationInstancePrivateIpAddresses = replicationInstancePrivateIpAddresses;
        return this;
    }

    /**
     * Get the replicationInstancePublicIpAddress property: &lt;p&gt;The public IP address of the replication
     * instance.&lt;/p&gt;.
     * 
     * @return the replicationInstancePublicIpAddress value.
     */
    public String replicationInstancePublicIpAddress() {
        return this.replicationInstancePublicIpAddress;
    }

    /**
     * Set the replicationInstancePublicIpAddress property: &lt;p&gt;The public IP address of the replication
     * instance.&lt;/p&gt;.
     * 
     * @param replicationInstancePublicIpAddress the replicationInstancePublicIpAddress value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstancePublicIpAddress(String replicationInstancePublicIpAddress) {
        this.replicationInstancePublicIpAddress = replicationInstancePublicIpAddress;
        return this;
    }

    /**
     * Get the replicationInstancePublicIpAddresses property: &lt;p&gt;One or more public IP addresses for the
     * replication instance.&lt;/p&gt;.
     * 
     * @return the replicationInstancePublicIpAddresses value.
     */
    public List<String> replicationInstancePublicIpAddresses() {
        return this.replicationInstancePublicIpAddresses;
    }

    /**
     * Set the replicationInstancePublicIpAddresses property: &lt;p&gt;One or more public IP addresses for the
     * replication instance.&lt;/p&gt;.
     * 
     * @param replicationInstancePublicIpAddresses the replicationInstancePublicIpAddresses value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstancePublicIpAddresses(List<String> replicationInstancePublicIpAddresses) {
        this.replicationInstancePublicIpAddresses = replicationInstancePublicIpAddresses;
        return this;
    }

    /**
     * Get the replicationInstanceStatus property: &lt;p&gt;The status of the replication instance. The possible return
     * values include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'available'&lt;/code&gt; &lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'creating'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'deleted'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'deleting'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'failed'&lt;/code&gt;
     * &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'modifying'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt;
     * &lt;li&gt; &lt;p&gt; &lt;code&gt;'upgrading'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'rebooting'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'resetting-master-credentials'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'storage-full'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'incompatible-credentials'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'incompatible-network'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'maintenance'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @return the replicationInstanceStatus value.
     */
    public String replicationInstanceStatus() {
        return this.replicationInstanceStatus;
    }

    /**
     * Set the replicationInstanceStatus property: &lt;p&gt;The status of the replication instance. The possible return
     * values include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'available'&lt;/code&gt; &lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'creating'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'deleted'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'deleting'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'failed'&lt;/code&gt;
     * &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;'modifying'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt;
     * &lt;li&gt; &lt;p&gt; &lt;code&gt;'upgrading'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'rebooting'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'resetting-master-credentials'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'storage-full'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'incompatible-credentials'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'incompatible-network'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;
     * &lt;code&gt;'maintenance'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.
     * 
     * @param replicationInstanceStatus the replicationInstanceStatus value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationInstanceStatus(String replicationInstanceStatus) {
        this.replicationInstanceStatus = replicationInstanceStatus;
        return this;
    }

    /**
     * Get the replicationSubnetGroup property: &lt;p&gt;The subnet group for the replication instance.&lt;/p&gt;.
     * 
     * @return the replicationSubnetGroup value.
     */
    public ReplicationSubnetGroup replicationSubnetGroup() {
        return this.replicationSubnetGroup;
    }

    /**
     * Set the replicationSubnetGroup property: &lt;p&gt;The subnet group for the replication instance.&lt;/p&gt;.
     * 
     * @param replicationSubnetGroup the replicationSubnetGroup value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withReplicationSubnetGroup(ReplicationSubnetGroup replicationSubnetGroup) {
        this.replicationSubnetGroup = replicationSubnetGroup;
        return this;
    }

    /**
     * Get the secondaryAvailabilityZone property: &lt;p&gt;The Availability Zone of the standby replication instance in
     * a Multi-AZ deployment.&lt;/p&gt;.
     * 
     * @return the secondaryAvailabilityZone value.
     */
    public String secondaryAvailabilityZone() {
        return this.secondaryAvailabilityZone;
    }

    /**
     * Set the secondaryAvailabilityZone property: &lt;p&gt;The Availability Zone of the standby replication instance in
     * a Multi-AZ deployment.&lt;/p&gt;.
     * 
     * @param secondaryAvailabilityZone the secondaryAvailabilityZone value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withSecondaryAvailabilityZone(String secondaryAvailabilityZone) {
        this.secondaryAvailabilityZone = secondaryAvailabilityZone;
        return this;
    }

    /**
     * Get the vpcSecurityGroups property: &lt;p&gt;The VPC security group for the instance.&lt;/p&gt;.
     * 
     * @return the vpcSecurityGroups value.
     */
    public List<VpcSecurityGroupMembership> vpcSecurityGroups() {
        return this.vpcSecurityGroups;
    }

    /**
     * Set the vpcSecurityGroups property: &lt;p&gt;The VPC security group for the instance.&lt;/p&gt;.
     * 
     * @param vpcSecurityGroups the vpcSecurityGroups value to set.
     * @return the AwsDatabaseMigrationServiceReplicationInstanceProperties object itself.
     */
    public AwsDatabaseMigrationServiceReplicationInstanceProperties
        withVpcSecurityGroups(List<VpcSecurityGroupMembership> vpcSecurityGroups) {
        this.vpcSecurityGroups = vpcSecurityGroups;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (pendingModifiedValues() != null) {
            pendingModifiedValues().validate();
        }
        if (replicationSubnetGroup() != null) {
            replicationSubnetGroup().validate();
        }
        if (vpcSecurityGroups() != null) {
            vpcSecurityGroups().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("allocatedStorage", this.allocatedStorage);
        jsonWriter.writeBooleanField("autoMinorVersionUpgrade", this.autoMinorVersionUpgrade);
        jsonWriter.writeStringField("availabilityZone", this.availabilityZone);
        jsonWriter.writeStringField("dnsNameServers", this.dnsNameServers);
        jsonWriter.writeStringField("engineVersion", this.engineVersion);
        jsonWriter.writeStringField("freeUntil",
            this.freeUntil == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.freeUntil));
        jsonWriter.writeStringField("instanceCreateTime",
            this.instanceCreateTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.instanceCreateTime));
        jsonWriter.writeStringField("kmsKeyId", this.kmsKeyId);
        jsonWriter.writeBooleanField("multiAZ", this.multiAZ);
        jsonWriter.writeStringField("networkType", this.networkType);
        jsonWriter.writeJsonField("pendingModifiedValues", this.pendingModifiedValues);
        jsonWriter.writeStringField("preferredMaintenanceWindow", this.preferredMaintenanceWindow);
        jsonWriter.writeBooleanField("publiclyAccessible", this.publiclyAccessible);
        jsonWriter.writeStringField("replicationInstanceArn", this.replicationInstanceArn);
        jsonWriter.writeStringField("replicationInstanceClass", this.replicationInstanceClass);
        jsonWriter.writeStringField("replicationInstanceIdentifier", this.replicationInstanceIdentifier);
        jsonWriter.writeArrayField("replicationInstanceIpv6Addresses", this.replicationInstanceIpv6Addresses,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("replicationInstancePrivateIpAddress", this.replicationInstancePrivateIpAddress);
        jsonWriter.writeArrayField("replicationInstancePrivateIpAddresses", this.replicationInstancePrivateIpAddresses,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("replicationInstancePublicIpAddress", this.replicationInstancePublicIpAddress);
        jsonWriter.writeArrayField("replicationInstancePublicIpAddresses", this.replicationInstancePublicIpAddresses,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("replicationInstanceStatus", this.replicationInstanceStatus);
        jsonWriter.writeJsonField("replicationSubnetGroup", this.replicationSubnetGroup);
        jsonWriter.writeStringField("secondaryAvailabilityZone", this.secondaryAvailabilityZone);
        jsonWriter.writeArrayField("vpcSecurityGroups", this.vpcSecurityGroups,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AwsDatabaseMigrationServiceReplicationInstanceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AwsDatabaseMigrationServiceReplicationInstanceProperties if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AwsDatabaseMigrationServiceReplicationInstanceProperties.
     */
    public static AwsDatabaseMigrationServiceReplicationInstanceProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AwsDatabaseMigrationServiceReplicationInstanceProperties deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties
                = new AwsDatabaseMigrationServiceReplicationInstanceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("allocatedStorage".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.allocatedStorage
                        = reader.getNullable(JsonReader::getInt);
                } else if ("autoMinorVersionUpgrade".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.autoMinorVersionUpgrade
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("availabilityZone".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.availabilityZone
                        = reader.getString();
                } else if ("dnsNameServers".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.dnsNameServers
                        = reader.getString();
                } else if ("engineVersion".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.engineVersion
                        = reader.getString();
                } else if ("freeUntil".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.freeUntil = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("instanceCreateTime".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.instanceCreateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("kmsKeyId".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.kmsKeyId = reader.getString();
                } else if ("multiAZ".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.multiAZ
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("networkType".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.networkType
                        = reader.getString();
                } else if ("pendingModifiedValues".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.pendingModifiedValues
                        = ReplicationPendingModifiedValues.fromJson(reader);
                } else if ("preferredMaintenanceWindow".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.preferredMaintenanceWindow
                        = reader.getString();
                } else if ("publiclyAccessible".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.publiclyAccessible
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("replicationInstanceArn".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstanceArn
                        = reader.getString();
                } else if ("replicationInstanceClass".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstanceClass
                        = reader.getString();
                } else if ("replicationInstanceIdentifier".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstanceIdentifier
                        = reader.getString();
                } else if ("replicationInstanceIpv6Addresses".equals(fieldName)) {
                    List<String> replicationInstanceIpv6Addresses = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstanceIpv6Addresses
                        = replicationInstanceIpv6Addresses;
                } else if ("replicationInstancePrivateIpAddress".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstancePrivateIpAddress
                        = reader.getString();
                } else if ("replicationInstancePrivateIpAddresses".equals(fieldName)) {
                    List<String> replicationInstancePrivateIpAddresses
                        = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstancePrivateIpAddresses
                        = replicationInstancePrivateIpAddresses;
                } else if ("replicationInstancePublicIpAddress".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstancePublicIpAddress
                        = reader.getString();
                } else if ("replicationInstancePublicIpAddresses".equals(fieldName)) {
                    List<String> replicationInstancePublicIpAddresses
                        = reader.readArray(reader1 -> reader1.getString());
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstancePublicIpAddresses
                        = replicationInstancePublicIpAddresses;
                } else if ("replicationInstanceStatus".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationInstanceStatus
                        = reader.getString();
                } else if ("replicationSubnetGroup".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.replicationSubnetGroup
                        = ReplicationSubnetGroup.fromJson(reader);
                } else if ("secondaryAvailabilityZone".equals(fieldName)) {
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.secondaryAvailabilityZone
                        = reader.getString();
                } else if ("vpcSecurityGroups".equals(fieldName)) {
                    List<VpcSecurityGroupMembership> vpcSecurityGroups
                        = reader.readArray(reader1 -> VpcSecurityGroupMembership.fromJson(reader1));
                    deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties.vpcSecurityGroups
                        = vpcSecurityGroups;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAwsDatabaseMigrationServiceReplicationInstanceProperties;
        });
    }
}

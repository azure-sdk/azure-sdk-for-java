// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ScalingConfig.
 */
@Fluent
public final class ScalingConfig implements JsonSerializable<ScalingConfig> {
    /*
     * Property desiredSize
     */
    private Integer desiredSize;

    /*
     * Property maxSize
     */
    private Integer maxSize;

    /*
     * Property minSize
     */
    private Integer minSize;

    /**
     * Creates an instance of ScalingConfig class.
     */
    public ScalingConfig() {
    }

    /**
     * Get the desiredSize property: Property desiredSize.
     * 
     * @return the desiredSize value.
     */
    public Integer desiredSize() {
        return this.desiredSize;
    }

    /**
     * Set the desiredSize property: Property desiredSize.
     * 
     * @param desiredSize the desiredSize value to set.
     * @return the ScalingConfig object itself.
     */
    public ScalingConfig withDesiredSize(Integer desiredSize) {
        this.desiredSize = desiredSize;
        return this;
    }

    /**
     * Get the maxSize property: Property maxSize.
     * 
     * @return the maxSize value.
     */
    public Integer maxSize() {
        return this.maxSize;
    }

    /**
     * Set the maxSize property: Property maxSize.
     * 
     * @param maxSize the maxSize value to set.
     * @return the ScalingConfig object itself.
     */
    public ScalingConfig withMaxSize(Integer maxSize) {
        this.maxSize = maxSize;
        return this;
    }

    /**
     * Get the minSize property: Property minSize.
     * 
     * @return the minSize value.
     */
    public Integer minSize() {
        return this.minSize;
    }

    /**
     * Set the minSize property: Property minSize.
     * 
     * @param minSize the minSize value to set.
     * @return the ScalingConfig object itself.
     */
    public ScalingConfig withMinSize(Integer minSize) {
        this.minSize = minSize;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("desiredSize", this.desiredSize);
        jsonWriter.writeNumberField("maxSize", this.maxSize);
        jsonWriter.writeNumberField("minSize", this.minSize);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScalingConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScalingConfig if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ScalingConfig.
     */
    public static ScalingConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScalingConfig deserializedScalingConfig = new ScalingConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("desiredSize".equals(fieldName)) {
                    deserializedScalingConfig.desiredSize = reader.getNullable(JsonReader::getInt);
                } else if ("maxSize".equals(fieldName)) {
                    deserializedScalingConfig.maxSize = reader.getNullable(JsonReader::getInt);
                } else if ("minSize".equals(fieldName)) {
                    deserializedScalingConfig.minSize = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScalingConfig;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of ProjectFileSystemLocation.
 */
@Fluent
public final class ProjectFileSystemLocation implements JsonSerializable<ProjectFileSystemLocation> {
    /*
     * <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by
     * appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you
     * specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named
     * <code>CODEBUILD_MY_EFS</code>. </p> <p> The <code>identifier</code> is used to mount your file system. </p>
     */
    private String identifier;

    /*
     * <p>A string that specifies the location of the file system created by Amazon EFS. Its format is
     * <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the
     * Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For
     * example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount
     * directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is
     * <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p> <p>The directory path in the
     * format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the
     * location is only the DNS name and CodeBuild mounts the entire file system. </p>
     */
    private String location;

    /*
     * <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are
     * <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a
     * href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'>Recommended NFS Mount
     * Options</a>. </p>
     */
    private String mountOptions;

    /*
     * <p>The location in the container where you mount the file system. </p>
     */
    private String mountPoint;

    /*
     * <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
     */
    private FileSystemTypeEnumValue type;

    /**
     * Creates an instance of ProjectFileSystemLocation class.
     */
    public ProjectFileSystemLocation() {
    }

    /**
     * Get the identifier property: &lt;p&gt;The name used to access a file system created by Amazon EFS. CodeBuild
     * creates an environment variable by appending the &lt;code&gt;identifier&lt;/code&gt; in all capital letters to
     * &lt;code&gt;CODEBUILD_&lt;/code&gt;. For example, if you specify &lt;code&gt;my_efs&lt;/code&gt; for
     * &lt;code&gt;identifier&lt;/code&gt;, a new environment variable is create named
     * &lt;code&gt;CODEBUILD_MY_EFS&lt;/code&gt;. &lt;/p&gt; &lt;p&gt; The &lt;code&gt;identifier&lt;/code&gt; is used
     * to mount your file system. &lt;/p&gt;.
     * 
     * @return the identifier value.
     */
    public String identifier() {
        return this.identifier;
    }

    /**
     * Set the identifier property: &lt;p&gt;The name used to access a file system created by Amazon EFS. CodeBuild
     * creates an environment variable by appending the &lt;code&gt;identifier&lt;/code&gt; in all capital letters to
     * &lt;code&gt;CODEBUILD_&lt;/code&gt;. For example, if you specify &lt;code&gt;my_efs&lt;/code&gt; for
     * &lt;code&gt;identifier&lt;/code&gt;, a new environment variable is create named
     * &lt;code&gt;CODEBUILD_MY_EFS&lt;/code&gt;. &lt;/p&gt; &lt;p&gt; The &lt;code&gt;identifier&lt;/code&gt; is used
     * to mount your file system. &lt;/p&gt;.
     * 
     * @param identifier the identifier value to set.
     * @return the ProjectFileSystemLocation object itself.
     */
    public ProjectFileSystemLocation withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Get the location property: &lt;p&gt;A string that specifies the location of the file system created by Amazon
     * EFS. Its format is &lt;code&gt;efs-dns-name:/directory-path&lt;/code&gt;. You can find the DNS name of file
     * system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system
     * that CodeBuild mounts. For example, if the DNS name of a file system is
     * &lt;code&gt;fs-abcd1234.efs.us-west-2.amazonaws.com&lt;/code&gt;, and its mount directory is
     * &lt;code&gt;my-efs-mount-directory&lt;/code&gt;, then the &lt;code&gt;location&lt;/code&gt; is
     * &lt;code&gt;fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;The
     * directory path in the format &lt;code&gt;efs-dns-name:/directory-path&lt;/code&gt; is optional. If you do not
     * specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.
     * &lt;/p&gt;.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: &lt;p&gt;A string that specifies the location of the file system created by Amazon
     * EFS. Its format is &lt;code&gt;efs-dns-name:/directory-path&lt;/code&gt;. You can find the DNS name of file
     * system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system
     * that CodeBuild mounts. For example, if the DNS name of a file system is
     * &lt;code&gt;fs-abcd1234.efs.us-west-2.amazonaws.com&lt;/code&gt;, and its mount directory is
     * &lt;code&gt;my-efs-mount-directory&lt;/code&gt;, then the &lt;code&gt;location&lt;/code&gt; is
     * &lt;code&gt;fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;The
     * directory path in the format &lt;code&gt;efs-dns-name:/directory-path&lt;/code&gt; is optional. If you do not
     * specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.
     * &lt;/p&gt;.
     * 
     * @param location the location value to set.
     * @return the ProjectFileSystemLocation object itself.
     */
    public ProjectFileSystemLocation withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the mountOptions property: &lt;p&gt; The mount options for a file system created by Amazon EFS. The default
     * mount options used by CodeBuild are
     * &lt;code&gt;nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2&lt;/code&gt;. For more information,
     * see &lt;a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'&gt;Recommended NFS
     * Mount Options&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @return the mountOptions value.
     */
    public String mountOptions() {
        return this.mountOptions;
    }

    /**
     * Set the mountOptions property: &lt;p&gt; The mount options for a file system created by Amazon EFS. The default
     * mount options used by CodeBuild are
     * &lt;code&gt;nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2&lt;/code&gt;. For more information,
     * see &lt;a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'&gt;Recommended NFS
     * Mount Options&lt;/a&gt;. &lt;/p&gt;.
     * 
     * @param mountOptions the mountOptions value to set.
     * @return the ProjectFileSystemLocation object itself.
     */
    public ProjectFileSystemLocation withMountOptions(String mountOptions) {
        this.mountOptions = mountOptions;
        return this;
    }

    /**
     * Get the mountPoint property: &lt;p&gt;The location in the container where you mount the file system. &lt;/p&gt;.
     * 
     * @return the mountPoint value.
     */
    public String mountPoint() {
        return this.mountPoint;
    }

    /**
     * Set the mountPoint property: &lt;p&gt;The location in the container where you mount the file system. &lt;/p&gt;.
     * 
     * @param mountPoint the mountPoint value to set.
     * @return the ProjectFileSystemLocation object itself.
     */
    public ProjectFileSystemLocation withMountPoint(String mountPoint) {
        this.mountPoint = mountPoint;
        return this;
    }

    /**
     * Get the type property: &lt;p&gt; The type of the file system. The one supported type is
     * &lt;code&gt;EFS&lt;/code&gt;. &lt;/p&gt;.
     * 
     * @return the type value.
     */
    public FileSystemTypeEnumValue type() {
        return this.type;
    }

    /**
     * Set the type property: &lt;p&gt; The type of the file system. The one supported type is
     * &lt;code&gt;EFS&lt;/code&gt;. &lt;/p&gt;.
     * 
     * @param type the type value to set.
     * @return the ProjectFileSystemLocation object itself.
     */
    public ProjectFileSystemLocation withType(FileSystemTypeEnumValue type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() != null) {
            type().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("identifier", this.identifier);
        jsonWriter.writeStringField("location", this.location);
        jsonWriter.writeStringField("mountOptions", this.mountOptions);
        jsonWriter.writeStringField("mountPoint", this.mountPoint);
        jsonWriter.writeJsonField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProjectFileSystemLocation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProjectFileSystemLocation if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProjectFileSystemLocation.
     */
    public static ProjectFileSystemLocation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProjectFileSystemLocation deserializedProjectFileSystemLocation = new ProjectFileSystemLocation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("identifier".equals(fieldName)) {
                    deserializedProjectFileSystemLocation.identifier = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedProjectFileSystemLocation.location = reader.getString();
                } else if ("mountOptions".equals(fieldName)) {
                    deserializedProjectFileSystemLocation.mountOptions = reader.getString();
                } else if ("mountPoint".equals(fieldName)) {
                    deserializedProjectFileSystemLocation.mountPoint = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedProjectFileSystemLocation.type = FileSystemTypeEnumValue.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProjectFileSystemLocation;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of FunctionAssociation.
 */
@Fluent
public final class FunctionAssociation implements JsonSerializable<FunctionAssociation> {
    /*
     * The event type of the function, either ``viewer-request`` or ``viewer-response``. You cannot use origin-facing
     * event types (``origin-request`` and ``origin-response``) with a CloudFront function.
     */
    private String eventType;

    /*
     * The Amazon Resource Name (ARN) of the function.
     */
    private String functionArn;

    /**
     * Creates an instance of FunctionAssociation class.
     */
    public FunctionAssociation() {
    }

    /**
     * Get the eventType property: The event type of the function, either ``viewer-request`` or ``viewer-response``. You
     * cannot use origin-facing event types (``origin-request`` and ``origin-response``) with a CloudFront function.
     * 
     * @return the eventType value.
     */
    public String eventType() {
        return this.eventType;
    }

    /**
     * Set the eventType property: The event type of the function, either ``viewer-request`` or ``viewer-response``. You
     * cannot use origin-facing event types (``origin-request`` and ``origin-response``) with a CloudFront function.
     * 
     * @param eventType the eventType value to set.
     * @return the FunctionAssociation object itself.
     */
    public FunctionAssociation withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }

    /**
     * Get the functionArn property: The Amazon Resource Name (ARN) of the function.
     * 
     * @return the functionArn value.
     */
    public String functionArn() {
        return this.functionArn;
    }

    /**
     * Set the functionArn property: The Amazon Resource Name (ARN) of the function.
     * 
     * @param functionArn the functionArn value to set.
     * @return the FunctionAssociation object itself.
     */
    public FunctionAssociation withFunctionArn(String functionArn) {
        this.functionArn = functionArn;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("eventType", this.eventType);
        jsonWriter.writeStringField("functionARN", this.functionArn);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FunctionAssociation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FunctionAssociation if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the FunctionAssociation.
     */
    public static FunctionAssociation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FunctionAssociation deserializedFunctionAssociation = new FunctionAssociation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("eventType".equals(fieldName)) {
                    deserializedFunctionAssociation.eventType = reader.getString();
                } else if ("functionARN".equals(fieldName)) {
                    deserializedFunctionAssociation.functionArn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFunctionAssociation;
        });
    }
}

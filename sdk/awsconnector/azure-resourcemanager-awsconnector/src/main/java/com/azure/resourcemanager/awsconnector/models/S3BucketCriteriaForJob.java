// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of S3BucketCriteriaForJob.
 */
@Fluent
public final class S3BucketCriteriaForJob implements JsonSerializable<S3BucketCriteriaForJob> {
    /*
     * <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
     */
    private CriteriaBlockForJob excludes;

    /*
     * <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
     */
    private CriteriaBlockForJob includes;

    /**
     * Creates an instance of S3BucketCriteriaForJob class.
     */
    public S3BucketCriteriaForJob() {
    }

    /**
     * Get the excludes property: &lt;p&gt;The property- and tag-based conditions that determine which buckets to
     * exclude from the job.&lt;/p&gt;.
     * 
     * @return the excludes value.
     */
    public CriteriaBlockForJob excludes() {
        return this.excludes;
    }

    /**
     * Set the excludes property: &lt;p&gt;The property- and tag-based conditions that determine which buckets to
     * exclude from the job.&lt;/p&gt;.
     * 
     * @param excludes the excludes value to set.
     * @return the S3BucketCriteriaForJob object itself.
     */
    public S3BucketCriteriaForJob withExcludes(CriteriaBlockForJob excludes) {
        this.excludes = excludes;
        return this;
    }

    /**
     * Get the includes property: &lt;p&gt;The property- and tag-based conditions that determine which buckets to
     * include in the job.&lt;/p&gt;.
     * 
     * @return the includes value.
     */
    public CriteriaBlockForJob includes() {
        return this.includes;
    }

    /**
     * Set the includes property: &lt;p&gt;The property- and tag-based conditions that determine which buckets to
     * include in the job.&lt;/p&gt;.
     * 
     * @param includes the includes value to set.
     * @return the S3BucketCriteriaForJob object itself.
     */
    public S3BucketCriteriaForJob withIncludes(CriteriaBlockForJob includes) {
        this.includes = includes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (excludes() != null) {
            excludes().validate();
        }
        if (includes() != null) {
            includes().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("excludes", this.excludes);
        jsonWriter.writeJsonField("includes", this.includes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of S3BucketCriteriaForJob from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of S3BucketCriteriaForJob if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the S3BucketCriteriaForJob.
     */
    public static S3BucketCriteriaForJob fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            S3BucketCriteriaForJob deserializedS3BucketCriteriaForJob = new S3BucketCriteriaForJob();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("excludes".equals(fieldName)) {
                    deserializedS3BucketCriteriaForJob.excludes = CriteriaBlockForJob.fromJson(reader);
                } else if ("includes".equals(fieldName)) {
                    deserializedS3BucketCriteriaForJob.includes = CriteriaBlockForJob.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedS3BucketCriteriaForJob;
        });
    }
}

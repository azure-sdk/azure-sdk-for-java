// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of AutoSnapshotAddOn.
 */
@Fluent
public final class AutoSnapshotAddOn implements JsonSerializable<AutoSnapshotAddOn> {
    /*
     * The daily time when an automatic snapshot will be created.
     */
    private String snapshotTimeOfDay;

    /**
     * Creates an instance of AutoSnapshotAddOn class.
     */
    public AutoSnapshotAddOn() {
    }

    /**
     * Get the snapshotTimeOfDay property: The daily time when an automatic snapshot will be created.
     * 
     * @return the snapshotTimeOfDay value.
     */
    public String snapshotTimeOfDay() {
        return this.snapshotTimeOfDay;
    }

    /**
     * Set the snapshotTimeOfDay property: The daily time when an automatic snapshot will be created.
     * 
     * @param snapshotTimeOfDay the snapshotTimeOfDay value to set.
     * @return the AutoSnapshotAddOn object itself.
     */
    public AutoSnapshotAddOn withSnapshotTimeOfDay(String snapshotTimeOfDay) {
        this.snapshotTimeOfDay = snapshotTimeOfDay;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("snapshotTimeOfDay", this.snapshotTimeOfDay);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoSnapshotAddOn from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoSnapshotAddOn if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoSnapshotAddOn.
     */
    public static AutoSnapshotAddOn fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoSnapshotAddOn deserializedAutoSnapshotAddOn = new AutoSnapshotAddOn();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("snapshotTimeOfDay".equals(fieldName)) {
                    deserializedAutoSnapshotAddOn.snapshotTimeOfDay = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoSnapshotAddOn;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Definition of EBSTagSpecification.
 */
@Fluent
public final class EbsTagSpecification implements JsonSerializable<EbsTagSpecification> {
    /*
     * Determines whether to propagate the tags from the task definition to the Amazon EBS volume. Tags can only
     * propagate to a ``SERVICE`` specified in ``ServiceVolumeConfiguration``. If no value is specified, the tags aren't
     * propagated.
     */
    private EbsTagSpecificationPropagateTags propagateTags;

    /*
     * The type of volume resource.
     */
    private String resourceType;

    /*
     * The tags applied to this Amazon EBS volume. ``AmazonECSCreated`` and ``AmazonECSManaged`` are reserved tags that
     * can't be used.
     */
    private List<TagAutoGenerated26> tags;

    /**
     * Creates an instance of EbsTagSpecification class.
     */
    public EbsTagSpecification() {
    }

    /**
     * Get the propagateTags property: Determines whether to propagate the tags from the task definition to the Amazon
     * EBS volume. Tags can only propagate to a ``SERVICE`` specified in ``ServiceVolumeConfiguration``. If no value is
     * specified, the tags aren't propagated.
     * 
     * @return the propagateTags value.
     */
    public EbsTagSpecificationPropagateTags propagateTags() {
        return this.propagateTags;
    }

    /**
     * Set the propagateTags property: Determines whether to propagate the tags from the task definition to the Amazon
     * EBS volume. Tags can only propagate to a ``SERVICE`` specified in ``ServiceVolumeConfiguration``. If no value is
     * specified, the tags aren't propagated.
     * 
     * @param propagateTags the propagateTags value to set.
     * @return the EbsTagSpecification object itself.
     */
    public EbsTagSpecification withPropagateTags(EbsTagSpecificationPropagateTags propagateTags) {
        this.propagateTags = propagateTags;
        return this;
    }

    /**
     * Get the resourceType property: The type of volume resource.
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: The type of volume resource.
     * 
     * @param resourceType the resourceType value to set.
     * @return the EbsTagSpecification object itself.
     */
    public EbsTagSpecification withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the tags property: The tags applied to this Amazon EBS volume. ``AmazonECSCreated`` and ``AmazonECSManaged``
     * are reserved tags that can't be used.
     * 
     * @return the tags value.
     */
    public List<TagAutoGenerated26> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: The tags applied to this Amazon EBS volume. ``AmazonECSCreated`` and ``AmazonECSManaged``
     * are reserved tags that can't be used.
     * 
     * @param tags the tags value to set.
     * @return the EbsTagSpecification object itself.
     */
    public EbsTagSpecification withTags(List<TagAutoGenerated26> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (tags() != null) {
            tags().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("propagateTags", this.propagateTags == null ? null : this.propagateTags.toString());
        jsonWriter.writeStringField("resourceType", this.resourceType);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EbsTagSpecification from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EbsTagSpecification if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the EbsTagSpecification.
     */
    public static EbsTagSpecification fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EbsTagSpecification deserializedEbsTagSpecification = new EbsTagSpecification();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("propagateTags".equals(fieldName)) {
                    deserializedEbsTagSpecification.propagateTags
                        = EbsTagSpecificationPropagateTags.fromString(reader.getString());
                } else if ("resourceType".equals(fieldName)) {
                    deserializedEbsTagSpecification.resourceType = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<TagAutoGenerated26> tags = reader.readArray(reader1 -> TagAutoGenerated26.fromJson(reader1));
                    deserializedEbsTagSpecification.tags = tags;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEbsTagSpecification;
        });
    }
}

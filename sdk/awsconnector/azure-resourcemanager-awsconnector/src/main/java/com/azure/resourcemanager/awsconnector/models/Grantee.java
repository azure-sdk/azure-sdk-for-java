// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.awsconnector.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Definition of Grantee.
 */
@Fluent
public final class Grantee implements JsonSerializable<Grantee> {
    /*
     * <p>Screen name of the grantee.</p>
     */
    private String displayName;

    /*
     * <p>Email address of the grantee.</p> <note> <p>Using email addresses to specify a grantee is only supported in
     * the following Amazon Web Services Regions: </p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N.
     * California)</p> </li> <li> <p> US West (Oregon)</p> </li> <li> <p> Asia Pacific (Singapore)</p> </li> <li>
     * <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li>
     * <p>South America (São Paulo)</p> </li> </ul> <p>For a list of all the Amazon S3 supported Regions and endpoints,
     * see <a href='https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region'>Regions and Endpoints</a> in the
     * Amazon Web Services General Reference.</p> </note>
     */
    private String emailAddress;

    /*
     * <p>The canonical user ID of the grantee.</p>
     */
    private String id;

    /*
     * <p>Type of grantee</p>
     */
    private TypeEnumValue type;

    /*
     * <p>URI of the grantee group.</p>
     */
    private String uri;

    /**
     * Creates an instance of Grantee class.
     */
    public Grantee() {
    }

    /**
     * Get the displayName property: &lt;p&gt;Screen name of the grantee.&lt;/p&gt;.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: &lt;p&gt;Screen name of the grantee.&lt;/p&gt;.
     * 
     * @param displayName the displayName value to set.
     * @return the Grantee object itself.
     */
    public Grantee withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the emailAddress property: &lt;p&gt;Email address of the grantee.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Using email
     * addresses to specify a grantee is only supported in the following Amazon Web Services Regions: &lt;/p&gt;
     * &lt;ul&gt; &lt;li&gt; &lt;p&gt;US East (N. Virginia)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;US West (N.
     * California)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; US West (Oregon)&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt; Asia Pacific (Singapore)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Sydney)&lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Tokyo)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Europe
     * (Ireland)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;South America (São Paulo)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * &lt;p&gt;For a list of all the Amazon S3 supported Regions and endpoints, see &lt;a
     * href='https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region'&gt;Regions and Endpoints&lt;/a&gt; in
     * the Amazon Web Services General Reference.&lt;/p&gt; &lt;/note&gt;.
     * 
     * @return the emailAddress value.
     */
    public String emailAddress() {
        return this.emailAddress;
    }

    /**
     * Set the emailAddress property: &lt;p&gt;Email address of the grantee.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Using email
     * addresses to specify a grantee is only supported in the following Amazon Web Services Regions: &lt;/p&gt;
     * &lt;ul&gt; &lt;li&gt; &lt;p&gt;US East (N. Virginia)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;US West (N.
     * California)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; US West (Oregon)&lt;/p&gt; &lt;/li&gt; &lt;li&gt;
     * &lt;p&gt; Asia Pacific (Singapore)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Sydney)&lt;/p&gt;
     * &lt;/li&gt; &lt;li&gt; &lt;p&gt;Asia Pacific (Tokyo)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Europe
     * (Ireland)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;South America (São Paulo)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * &lt;p&gt;For a list of all the Amazon S3 supported Regions and endpoints, see &lt;a
     * href='https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region'&gt;Regions and Endpoints&lt;/a&gt; in
     * the Amazon Web Services General Reference.&lt;/p&gt; &lt;/note&gt;.
     * 
     * @param emailAddress the emailAddress value to set.
     * @return the Grantee object itself.
     */
    public Grantee withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }

    /**
     * Get the id property: &lt;p&gt;The canonical user ID of the grantee.&lt;/p&gt;.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: &lt;p&gt;The canonical user ID of the grantee.&lt;/p&gt;.
     * 
     * @param id the id value to set.
     * @return the Grantee object itself.
     */
    public Grantee withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the type property: &lt;p&gt;Type of grantee&lt;/p&gt;.
     * 
     * @return the type value.
     */
    public TypeEnumValue type() {
        return this.type;
    }

    /**
     * Set the type property: &lt;p&gt;Type of grantee&lt;/p&gt;.
     * 
     * @param type the type value to set.
     * @return the Grantee object itself.
     */
    public Grantee withType(TypeEnumValue type) {
        this.type = type;
        return this;
    }

    /**
     * Get the uri property: &lt;p&gt;URI of the grantee group.&lt;/p&gt;.
     * 
     * @return the uri value.
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the uri property: &lt;p&gt;URI of the grantee group.&lt;/p&gt;.
     * 
     * @param uri the uri value to set.
     * @return the Grantee object itself.
     */
    public Grantee withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() != null) {
            type().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("emailAddress", this.emailAddress);
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("type", this.type);
        jsonWriter.writeStringField("uri", this.uri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Grantee from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Grantee if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Grantee.
     */
    public static Grantee fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Grantee deserializedGrantee = new Grantee();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedGrantee.displayName = reader.getString();
                } else if ("emailAddress".equals(fieldName)) {
                    deserializedGrantee.emailAddress = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedGrantee.id = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedGrantee.type = TypeEnumValue.fromJson(reader);
                } else if ("uri".equals(fieldName)) {
                    deserializedGrantee.uri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGrantee;
        });
    }
}

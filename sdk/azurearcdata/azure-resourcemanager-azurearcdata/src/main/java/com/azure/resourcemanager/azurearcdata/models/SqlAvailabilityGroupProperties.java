// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Properties of SqlAvailabilityGroup. */
@Fluent
public final class SqlAvailabilityGroupProperties {
    /*
     * The name of the availability group.
     */
    @JsonProperty(value = "availabilityGroupName", required = true)
    private String availabilityGroupName;

    /*
     * Id GUID of the availability group.
     */
    @JsonProperty(value = "availabilityGroupId", required = true)
    private String availabilityGroupId;

    /*
     * The name of the instance name which availability group primary is on.
     */
    @JsonProperty(value = "instanceName")
    private String instanceName;

    /*
     * Timestamp for when the data was collected from the client machine.
     */
    @JsonProperty(value = "collectionTimestamp")
    private OffsetDateTime collectionTimestamp;

    /*
     * SQL Server availability group current version.
     */
    @JsonProperty(value = "version")
    private Integer version;

    /*
     * SQL Server basic availability group.
     */
    @JsonProperty(value = "basicFeatures")
    private Boolean basicFeatures;

    /*
     * SQL Server availability group DTC support enabled.
     */
    @JsonProperty(value = "dtcSupport")
    private Boolean dtcSupport;

    /*
     * SQL Server availability group failover for database health conditions.
     */
    @JsonProperty(value = "dbFailover")
    private Boolean dbFailover;

    /*
     * SQL Server distributed availability group.
     */
    @JsonProperty(value = "isDistributed")
    private Boolean isDistributed;

    /*
     * SQL Server availability group cluster type description
     */
    @JsonProperty(value = "clusterTypeDesc")
    private String clusterTypeDesc;

    /*
     * Availability group required the number of synchronized secondary to commit.
     */
    @JsonProperty(value = "requiredSynchronizedSecondariesCommit")
    private Integer requiredSynchronizedSecondariesCommit;

    /*
     * SQL Server availability group contained system databases.
     */
    @JsonProperty(value = "isContained")
    private Boolean isContained;

    /** Creates an instance of SqlAvailabilityGroupProperties class. */
    public SqlAvailabilityGroupProperties() {
    }

    /**
     * Get the availabilityGroupName property: The name of the availability group.
     *
     * @return the availabilityGroupName value.
     */
    public String availabilityGroupName() {
        return this.availabilityGroupName;
    }

    /**
     * Set the availabilityGroupName property: The name of the availability group.
     *
     * @param availabilityGroupName the availabilityGroupName value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withAvailabilityGroupName(String availabilityGroupName) {
        this.availabilityGroupName = availabilityGroupName;
        return this;
    }

    /**
     * Get the availabilityGroupId property: Id GUID of the availability group.
     *
     * @return the availabilityGroupId value.
     */
    public String availabilityGroupId() {
        return this.availabilityGroupId;
    }

    /**
     * Set the availabilityGroupId property: Id GUID of the availability group.
     *
     * @param availabilityGroupId the availabilityGroupId value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withAvailabilityGroupId(String availabilityGroupId) {
        this.availabilityGroupId = availabilityGroupId;
        return this;
    }

    /**
     * Get the instanceName property: The name of the instance name which availability group primary is on.
     *
     * @return the instanceName value.
     */
    public String instanceName() {
        return this.instanceName;
    }

    /**
     * Set the instanceName property: The name of the instance name which availability group primary is on.
     *
     * @param instanceName the instanceName value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withInstanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }

    /**
     * Get the collectionTimestamp property: Timestamp for when the data was collected from the client machine.
     *
     * @return the collectionTimestamp value.
     */
    public OffsetDateTime collectionTimestamp() {
        return this.collectionTimestamp;
    }

    /**
     * Set the collectionTimestamp property: Timestamp for when the data was collected from the client machine.
     *
     * @param collectionTimestamp the collectionTimestamp value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withCollectionTimestamp(OffsetDateTime collectionTimestamp) {
        this.collectionTimestamp = collectionTimestamp;
        return this;
    }

    /**
     * Get the version property: SQL Server availability group current version.
     *
     * @return the version value.
     */
    public Integer version() {
        return this.version;
    }

    /**
     * Set the version property: SQL Server availability group current version.
     *
     * @param version the version value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withVersion(Integer version) {
        this.version = version;
        return this;
    }

    /**
     * Get the basicFeatures property: SQL Server basic availability group.
     *
     * @return the basicFeatures value.
     */
    public Boolean basicFeatures() {
        return this.basicFeatures;
    }

    /**
     * Set the basicFeatures property: SQL Server basic availability group.
     *
     * @param basicFeatures the basicFeatures value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withBasicFeatures(Boolean basicFeatures) {
        this.basicFeatures = basicFeatures;
        return this;
    }

    /**
     * Get the dtcSupport property: SQL Server availability group DTC support enabled.
     *
     * @return the dtcSupport value.
     */
    public Boolean dtcSupport() {
        return this.dtcSupport;
    }

    /**
     * Set the dtcSupport property: SQL Server availability group DTC support enabled.
     *
     * @param dtcSupport the dtcSupport value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withDtcSupport(Boolean dtcSupport) {
        this.dtcSupport = dtcSupport;
        return this;
    }

    /**
     * Get the dbFailover property: SQL Server availability group failover for database health conditions.
     *
     * @return the dbFailover value.
     */
    public Boolean dbFailover() {
        return this.dbFailover;
    }

    /**
     * Set the dbFailover property: SQL Server availability group failover for database health conditions.
     *
     * @param dbFailover the dbFailover value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withDbFailover(Boolean dbFailover) {
        this.dbFailover = dbFailover;
        return this;
    }

    /**
     * Get the isDistributed property: SQL Server distributed availability group.
     *
     * @return the isDistributed value.
     */
    public Boolean isDistributed() {
        return this.isDistributed;
    }

    /**
     * Set the isDistributed property: SQL Server distributed availability group.
     *
     * @param isDistributed the isDistributed value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withIsDistributed(Boolean isDistributed) {
        this.isDistributed = isDistributed;
        return this;
    }

    /**
     * Get the clusterTypeDesc property: SQL Server availability group cluster type description.
     *
     * @return the clusterTypeDesc value.
     */
    public String clusterTypeDesc() {
        return this.clusterTypeDesc;
    }

    /**
     * Set the clusterTypeDesc property: SQL Server availability group cluster type description.
     *
     * @param clusterTypeDesc the clusterTypeDesc value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withClusterTypeDesc(String clusterTypeDesc) {
        this.clusterTypeDesc = clusterTypeDesc;
        return this;
    }

    /**
     * Get the requiredSynchronizedSecondariesCommit property: Availability group required the number of synchronized
     * secondary to commit.
     *
     * @return the requiredSynchronizedSecondariesCommit value.
     */
    public Integer requiredSynchronizedSecondariesCommit() {
        return this.requiredSynchronizedSecondariesCommit;
    }

    /**
     * Set the requiredSynchronizedSecondariesCommit property: Availability group required the number of synchronized
     * secondary to commit.
     *
     * @param requiredSynchronizedSecondariesCommit the requiredSynchronizedSecondariesCommit value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withRequiredSynchronizedSecondariesCommit(
        Integer requiredSynchronizedSecondariesCommit) {
        this.requiredSynchronizedSecondariesCommit = requiredSynchronizedSecondariesCommit;
        return this;
    }

    /**
     * Get the isContained property: SQL Server availability group contained system databases.
     *
     * @return the isContained value.
     */
    public Boolean isContained() {
        return this.isContained;
    }

    /**
     * Set the isContained property: SQL Server availability group contained system databases.
     *
     * @param isContained the isContained value to set.
     * @return the SqlAvailabilityGroupProperties object itself.
     */
    public SqlAvailabilityGroupProperties withIsContained(Boolean isContained) {
        this.isContained = isContained;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (availabilityGroupName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property availabilityGroupName in model SqlAvailabilityGroupProperties"));
        }
        if (availabilityGroupId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property availabilityGroupId in model SqlAvailabilityGroupProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SqlAvailabilityGroupProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurearcdata.fluent.models.SqlAvailabilityGroupDatabaseResourceInner;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroupDatabaseResource;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroupDatabaseUpdate;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroupMultiDatabaseReplicaResourceProperties;
import java.util.Collections;
import java.util.Map;

public final class SqlAvailabilityGroupDatabaseResourceImpl
    implements SqlAvailabilityGroupDatabaseResource,
        SqlAvailabilityGroupDatabaseResource.Definition,
        SqlAvailabilityGroupDatabaseResource.Update {
    private SqlAvailabilityGroupDatabaseResourceInner innerObject;

    private final com.azure.resourcemanager.azurearcdata.AzureArcDataManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SqlAvailabilityGroupMultiDatabaseReplicaResourceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SqlAvailabilityGroupDatabaseResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurearcdata.AzureArcDataManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sqlAvailabilityGroupDatabaseName;

    private String sqlAvailabilityGroupName;

    private SqlAvailabilityGroupDatabaseUpdate updateSqlAvailabilityGroupDatabaseUpdate;

    public SqlAvailabilityGroupDatabaseResourceImpl withExistingSqlAvailabilityGroup(
        String resourceGroupName, String sqlAvailabilityGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.sqlAvailabilityGroupName = sqlAvailabilityGroupName;
        return this;
    }

    public SqlAvailabilityGroupDatabaseResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroupDatabases()
                .createWithResponse(
                    resourceGroupName,
                    sqlAvailabilityGroupDatabaseName,
                    sqlAvailabilityGroupName,
                    this.innerModel(),
                    Context.NONE)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroupDatabaseResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroupDatabases()
                .createWithResponse(
                    resourceGroupName,
                    sqlAvailabilityGroupDatabaseName,
                    sqlAvailabilityGroupName,
                    this.innerModel(),
                    context)
                .getValue();
        return this;
    }

    SqlAvailabilityGroupDatabaseResourceImpl(
        String name, com.azure.resourcemanager.azurearcdata.AzureArcDataManager serviceManager) {
        this.innerObject = new SqlAvailabilityGroupDatabaseResourceInner();
        this.serviceManager = serviceManager;
        this.sqlAvailabilityGroupDatabaseName = name;
    }

    public SqlAvailabilityGroupDatabaseResourceImpl update() {
        this.updateSqlAvailabilityGroupDatabaseUpdate = new SqlAvailabilityGroupDatabaseUpdate();
        return this;
    }

    public SqlAvailabilityGroupDatabaseResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroupDatabases()
                .updateWithResponse(
                    resourceGroupName,
                    sqlAvailabilityGroupDatabaseName,
                    sqlAvailabilityGroupName,
                    updateSqlAvailabilityGroupDatabaseUpdate,
                    Context.NONE)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroupDatabaseResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroupDatabases()
                .updateWithResponse(
                    resourceGroupName,
                    sqlAvailabilityGroupDatabaseName,
                    sqlAvailabilityGroupName,
                    updateSqlAvailabilityGroupDatabaseUpdate,
                    context)
                .getValue();
        return this;
    }

    SqlAvailabilityGroupDatabaseResourceImpl(
        SqlAvailabilityGroupDatabaseResourceInner innerObject,
        com.azure.resourcemanager.azurearcdata.AzureArcDataManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sqlAvailabilityGroupDatabaseName = Utils.getValueFromIdByName(innerObject.id(), "databases");
        this.sqlAvailabilityGroupName = Utils.getValueFromIdByName(innerObject.id(), "sqlAvailabilityGroups");
    }

    public SqlAvailabilityGroupDatabaseResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroupDatabases()
                .getWithResponse(
                    resourceGroupName, sqlAvailabilityGroupDatabaseName, sqlAvailabilityGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroupDatabaseResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroupDatabases()
                .getWithResponse(resourceGroupName, sqlAvailabilityGroupDatabaseName, sqlAvailabilityGroupName, context)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroupDatabaseResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SqlAvailabilityGroupDatabaseResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SqlAvailabilityGroupDatabaseResourceImpl withProperties(
        SqlAvailabilityGroupMultiDatabaseReplicaResourceProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateSqlAvailabilityGroupDatabaseUpdate.withProperties(properties);
            return this;
        }
    }

    public SqlAvailabilityGroupDatabaseResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateSqlAvailabilityGroupDatabaseUpdate.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Active Directory domain details. */
@Fluent
public final class ActiveDirectoryConnectorDomainDetails {
    /*
     * Name (uppercase) of the Active Directory domain that this AD connector
     * will be associated with.
     */
    @JsonProperty(value = "realm", required = true)
    private String realm;

    /*
     * NETBIOS name of the Active Directory domain.
     */
    @JsonProperty(value = "netbiosDomainName")
    private String netbiosDomainName;

    /*
     * null
     */
    @JsonProperty(value = "domainControllers", required = true)
    private ActiveDirectoryDomainControllers domainControllers;

    /**
     * Get the realm property: Name (uppercase) of the Active Directory domain that this AD connector will be associated
     * with.
     *
     * @return the realm value.
     */
    public String realm() {
        return this.realm;
    }

    /**
     * Set the realm property: Name (uppercase) of the Active Directory domain that this AD connector will be associated
     * with.
     *
     * @param realm the realm value to set.
     * @return the ActiveDirectoryConnectorDomainDetails object itself.
     */
    public ActiveDirectoryConnectorDomainDetails withRealm(String realm) {
        this.realm = realm;
        return this;
    }

    /**
     * Get the netbiosDomainName property: NETBIOS name of the Active Directory domain.
     *
     * @return the netbiosDomainName value.
     */
    public String netbiosDomainName() {
        return this.netbiosDomainName;
    }

    /**
     * Set the netbiosDomainName property: NETBIOS name of the Active Directory domain.
     *
     * @param netbiosDomainName the netbiosDomainName value to set.
     * @return the ActiveDirectoryConnectorDomainDetails object itself.
     */
    public ActiveDirectoryConnectorDomainDetails withNetbiosDomainName(String netbiosDomainName) {
        this.netbiosDomainName = netbiosDomainName;
        return this;
    }

    /**
     * Get the domainControllers property: null.
     *
     * @return the domainControllers value.
     */
    public ActiveDirectoryDomainControllers domainControllers() {
        return this.domainControllers;
    }

    /**
     * Set the domainControllers property: null.
     *
     * @param domainControllers the domainControllers value to set.
     * @return the ActiveDirectoryConnectorDomainDetails object itself.
     */
    public ActiveDirectoryConnectorDomainDetails withDomainControllers(
        ActiveDirectoryDomainControllers domainControllers) {
        this.domainControllers = domainControllers;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (realm() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property realm in model ActiveDirectoryConnectorDomainDetails"));
        }
        if (domainControllers() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property domainControllers in model ActiveDirectoryConnectorDomainDetails"));
        } else {
            domainControllers().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ActiveDirectoryConnectorDomainDetails.class);
}

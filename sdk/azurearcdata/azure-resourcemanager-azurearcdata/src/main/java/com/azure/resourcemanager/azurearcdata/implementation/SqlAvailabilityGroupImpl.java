// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurearcdata.fluent.models.SqlAvailabilityGroupInner;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroup;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroupProperties;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroupUpdate;
import java.util.Collections;
import java.util.Map;

public final class SqlAvailabilityGroupImpl
    implements SqlAvailabilityGroup, SqlAvailabilityGroup.Definition, SqlAvailabilityGroup.Update {
    private SqlAvailabilityGroupInner innerObject;

    private final com.azure.resourcemanager.azurearcdata.AzureArcDataManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SqlAvailabilityGroupProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SqlAvailabilityGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurearcdata.AzureArcDataManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sqlAvailabilityGroupName;

    private SqlAvailabilityGroupUpdate updateParameters;

    public SqlAvailabilityGroupImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public SqlAvailabilityGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroups()
                .create(resourceGroupName, sqlAvailabilityGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public SqlAvailabilityGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroups()
                .create(resourceGroupName, sqlAvailabilityGroupName, this.innerModel(), context);
        return this;
    }

    SqlAvailabilityGroupImpl(String name, com.azure.resourcemanager.azurearcdata.AzureArcDataManager serviceManager) {
        this.innerObject = new SqlAvailabilityGroupInner();
        this.serviceManager = serviceManager;
        this.sqlAvailabilityGroupName = name;
    }

    public SqlAvailabilityGroupImpl update() {
        this.updateParameters = new SqlAvailabilityGroupUpdate();
        return this;
    }

    public SqlAvailabilityGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroups()
                .updateWithResponse(resourceGroupName, sqlAvailabilityGroupName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroups()
                .updateWithResponse(resourceGroupName, sqlAvailabilityGroupName, updateParameters, context)
                .getValue();
        return this;
    }

    SqlAvailabilityGroupImpl(
        SqlAvailabilityGroupInner innerObject,
        com.azure.resourcemanager.azurearcdata.AzureArcDataManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sqlAvailabilityGroupName = Utils.getValueFromIdByName(innerObject.id(), "sqlAvailabilityGroups");
    }

    public SqlAvailabilityGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroups()
                .getByResourceGroupWithResponse(resourceGroupName, sqlAvailabilityGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlAvailabilityGroups()
                .getByResourceGroupWithResponse(resourceGroupName, sqlAvailabilityGroupName, context)
                .getValue();
        return this;
    }

    public SqlAvailabilityGroupImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SqlAvailabilityGroupImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SqlAvailabilityGroupImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public SqlAvailabilityGroupImpl withProperties(SqlAvailabilityGroupProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

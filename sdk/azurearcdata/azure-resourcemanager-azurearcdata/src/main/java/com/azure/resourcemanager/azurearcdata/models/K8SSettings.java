// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/**
 * The kubernetes settings information.
 */
@Fluent
public final class K8SSettings {
    /*
     * The kubernetes network settings information.
     */
    @JsonProperty(value = "network")
    private K8SNetworkSettings network;

    /*
     * The kubernetes settings information.
     */
    @JsonIgnore
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of K8SSettings class.
     */
    public K8SSettings() {
    }

    /**
     * Get the network property: The kubernetes network settings information.
     * 
     * @return the network value.
     */
    public K8SNetworkSettings network() {
        return this.network;
    }

    /**
     * Set the network property: The kubernetes network settings information.
     * 
     * @param network the network value to set.
     * @return the K8SSettings object itself.
     */
    public K8SSettings withNetwork(K8SNetworkSettings network) {
        this.network = network;
        return this;
    }

    /**
     * Get the additionalProperties property: The kubernetes settings information.
     * 
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: The kubernetes settings information.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the K8SSettings object itself.
     */
    public K8SSettings withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (network() != null) {
            network().validate();
        }
    }
}

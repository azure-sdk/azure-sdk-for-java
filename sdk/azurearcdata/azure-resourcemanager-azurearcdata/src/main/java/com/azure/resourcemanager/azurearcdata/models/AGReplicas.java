// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The information about each failover group replica. */
@Fluent
public final class AGReplicas {
    /*
     * The health state of the replica.
     */
    @JsonProperty(value = "healthState")
    private String healthState;

    /*
     * The replica name.
     */
    @JsonProperty(value = "replicaName")
    private String replicaName;

    /*
     * The role of the replica.
     */
    @JsonProperty(value = "role")
    private String role;

    /*
     * The connected state of the replica.
     */
    @JsonProperty(value = "connectedState")
    private String connectedState;

    /*
     * The synchronization state of the availability group replicas.
     */
    @JsonProperty(value = "synchronizationState")
    private String synchronizationState;

    /*
     * The availability mode of the replica.
     */
    @JsonProperty(value = "availabilityMode")
    private String availabilityMode;

    /*
     * The secondary role allowed connections.
     */
    @JsonProperty(value = "secondaryRoleAllowConnections")
    private String secondaryRoleAllowConnections;

    /** Creates an instance of AGReplicas class. */
    public AGReplicas() {
    }

    /**
     * Get the healthState property: The health state of the replica.
     *
     * @return the healthState value.
     */
    public String healthState() {
        return this.healthState;
    }

    /**
     * Set the healthState property: The health state of the replica.
     *
     * @param healthState the healthState value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withHealthState(String healthState) {
        this.healthState = healthState;
        return this;
    }

    /**
     * Get the replicaName property: The replica name.
     *
     * @return the replicaName value.
     */
    public String replicaName() {
        return this.replicaName;
    }

    /**
     * Set the replicaName property: The replica name.
     *
     * @param replicaName the replicaName value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withReplicaName(String replicaName) {
        this.replicaName = replicaName;
        return this;
    }

    /**
     * Get the role property: The role of the replica.
     *
     * @return the role value.
     */
    public String role() {
        return this.role;
    }

    /**
     * Set the role property: The role of the replica.
     *
     * @param role the role value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withRole(String role) {
        this.role = role;
        return this;
    }

    /**
     * Get the connectedState property: The connected state of the replica.
     *
     * @return the connectedState value.
     */
    public String connectedState() {
        return this.connectedState;
    }

    /**
     * Set the connectedState property: The connected state of the replica.
     *
     * @param connectedState the connectedState value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withConnectedState(String connectedState) {
        this.connectedState = connectedState;
        return this;
    }

    /**
     * Get the synchronizationState property: The synchronization state of the availability group replicas.
     *
     * @return the synchronizationState value.
     */
    public String synchronizationState() {
        return this.synchronizationState;
    }

    /**
     * Set the synchronizationState property: The synchronization state of the availability group replicas.
     *
     * @param synchronizationState the synchronizationState value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withSynchronizationState(String synchronizationState) {
        this.synchronizationState = synchronizationState;
        return this;
    }

    /**
     * Get the availabilityMode property: The availability mode of the replica.
     *
     * @return the availabilityMode value.
     */
    public String availabilityMode() {
        return this.availabilityMode;
    }

    /**
     * Set the availabilityMode property: The availability mode of the replica.
     *
     * @param availabilityMode the availabilityMode value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withAvailabilityMode(String availabilityMode) {
        this.availabilityMode = availabilityMode;
        return this;
    }

    /**
     * Get the secondaryRoleAllowConnections property: The secondary role allowed connections.
     *
     * @return the secondaryRoleAllowConnections value.
     */
    public String secondaryRoleAllowConnections() {
        return this.secondaryRoleAllowConnections;
    }

    /**
     * Set the secondaryRoleAllowConnections property: The secondary role allowed connections.
     *
     * @param secondaryRoleAllowConnections the secondaryRoleAllowConnections value to set.
     * @return the AGReplicas object itself.
     */
    public AGReplicas withSecondaryRoleAllowConnections(String secondaryRoleAllowConnections) {
        this.secondaryRoleAllowConnections = secondaryRoleAllowConnections;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

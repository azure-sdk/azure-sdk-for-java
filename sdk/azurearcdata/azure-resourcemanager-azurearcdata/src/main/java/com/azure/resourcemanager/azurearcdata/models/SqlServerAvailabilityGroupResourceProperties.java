// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The properties of Arc Sql Server availability group resource. */
@Fluent
public final class SqlServerAvailabilityGroupResourceProperties {
    /*
     * ID GUID of the availability group.
     */
    @JsonProperty(value = "availabilityGroupId", required = true)
    private String availabilityGroupId;

    /*
     * the availability group name.
     */
    @JsonProperty(value = "availabilityGroupName")
    private String availabilityGroupName;

    /*
     * null
     */
    @JsonProperty(value = "configure")
    private AvailabilityGroupConfigure configure;

    /*
     * null
     */
    @JsonProperty(value = "state")
    private AvailabilityGroupState state;

    /*
     * The provisioning state of the Arc-enabled SQL Server availability group resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /** Creates an instance of SqlServerAvailabilityGroupResourceProperties class. */
    public SqlServerAvailabilityGroupResourceProperties() {
    }

    /**
     * Get the availabilityGroupId property: ID GUID of the availability group.
     *
     * @return the availabilityGroupId value.
     */
    public String availabilityGroupId() {
        return this.availabilityGroupId;
    }

    /**
     * Set the availabilityGroupId property: ID GUID of the availability group.
     *
     * @param availabilityGroupId the availabilityGroupId value to set.
     * @return the SqlServerAvailabilityGroupResourceProperties object itself.
     */
    public SqlServerAvailabilityGroupResourceProperties withAvailabilityGroupId(String availabilityGroupId) {
        this.availabilityGroupId = availabilityGroupId;
        return this;
    }

    /**
     * Get the availabilityGroupName property: the availability group name.
     *
     * @return the availabilityGroupName value.
     */
    public String availabilityGroupName() {
        return this.availabilityGroupName;
    }

    /**
     * Set the availabilityGroupName property: the availability group name.
     *
     * @param availabilityGroupName the availabilityGroupName value to set.
     * @return the SqlServerAvailabilityGroupResourceProperties object itself.
     */
    public SqlServerAvailabilityGroupResourceProperties withAvailabilityGroupName(String availabilityGroupName) {
        this.availabilityGroupName = availabilityGroupName;
        return this;
    }

    /**
     * Get the configure property: null.
     *
     * @return the configure value.
     */
    public AvailabilityGroupConfigure configure() {
        return this.configure;
    }

    /**
     * Set the configure property: null.
     *
     * @param configure the configure value to set.
     * @return the SqlServerAvailabilityGroupResourceProperties object itself.
     */
    public SqlServerAvailabilityGroupResourceProperties withConfigure(AvailabilityGroupConfigure configure) {
        this.configure = configure;
        return this;
    }

    /**
     * Get the state property: null.
     *
     * @return the state value.
     */
    public AvailabilityGroupState state() {
        return this.state;
    }

    /**
     * Set the state property: null.
     *
     * @param state the state value to set.
     * @return the SqlServerAvailabilityGroupResourceProperties object itself.
     */
    public SqlServerAvailabilityGroupResourceProperties withState(AvailabilityGroupState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the Arc-enabled SQL Server availability group
     * resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (availabilityGroupId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property availabilityGroupId in model"
                            + " SqlServerAvailabilityGroupResourceProperties"));
        }
        if (configure() != null) {
            configure().validate();
        }
        if (state() != null) {
            state().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SqlServerAvailabilityGroupResourceProperties.class);
}

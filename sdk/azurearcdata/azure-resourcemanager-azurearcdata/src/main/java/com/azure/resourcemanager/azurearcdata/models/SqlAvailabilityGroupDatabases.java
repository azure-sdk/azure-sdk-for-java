// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SqlAvailabilityGroupDatabases. */
public interface SqlAvailabilityGroupDatabases {
    /**
     * Deletes an Arc Sql availability group database resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupDatabaseName Name of SQL Availability Group Database.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName,
        String sqlAvailabilityGroupDatabaseName,
        String sqlAvailabilityGroupName,
        Context context);

    /**
     * Deletes an Arc Sql availability group database resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupDatabaseName Name of SQL Availability Group Database.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sqlAvailabilityGroupDatabaseName, String sqlAvailabilityGroupName);

    /**
     * Retrieves an Arc Sql availability group database resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupDatabaseName Name of SQL Availability Group Database.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group Database along with {@link Response}.
     */
    Response<SqlAvailabilityGroupDatabaseResource> getWithResponse(
        String resourceGroupName,
        String sqlAvailabilityGroupDatabaseName,
        String sqlAvailabilityGroupName,
        Context context);

    /**
     * Retrieves an Arc Sql availability group database resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupDatabaseName Name of SQL Availability Group Database.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group Database.
     */
    SqlAvailabilityGroupDatabaseResource get(
        String resourceGroupName, String sqlAvailabilityGroupDatabaseName, String sqlAvailabilityGroupName);

    /**
     * List the Availability Group Databases associated with the given Arc Sql AG.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Availability Group Databases as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlAvailabilityGroupDatabaseResource> list(String resourceGroupName, String sqlAvailabilityGroupName);

    /**
     * List the Availability Group Databases associated with the given Arc Sql AG.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Availability Group Databases as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlAvailabilityGroupDatabaseResource> list(
        String resourceGroupName, String sqlAvailabilityGroupName, Context context);

    /**
     * Retrieves an Arc Sql availability group database resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group Database along with {@link Response}.
     */
    SqlAvailabilityGroupDatabaseResource getById(String id);

    /**
     * Retrieves an Arc Sql availability group database resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group Database along with {@link Response}.
     */
    Response<SqlAvailabilityGroupDatabaseResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an Arc Sql availability group database resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an Arc Sql availability group database resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SqlAvailabilityGroupDatabaseResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new SqlAvailabilityGroupDatabaseResource definition.
     */
    SqlAvailabilityGroupDatabaseResource.DefinitionStages.Blank define(String name);
}

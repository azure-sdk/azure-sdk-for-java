// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The backup profile for the SQL server. */
@Fluent
public final class BackupPolicy {
    /*
     * The retention period for all the databases in this managed instance.
     */
    @JsonProperty(value = "retentionPeriodDays")
    private Integer retentionPeriodDays;

    /*
     * The value indicating days between full backups.
     */
    @JsonProperty(value = "fullBackupDays")
    private Integer fullBackupDays;

    /*
     * The differential backup interval in hours.
     */
    @JsonProperty(value = "differentialBackupHours")
    private DifferentialBackupHours differentialBackupHours;

    /*
     * The value indicating minutes between transaction log backups.
     */
    @JsonProperty(value = "transactionLogBackupMinutes")
    private Integer transactionLogBackupMinutes;

    /** Creates an instance of BackupPolicy class. */
    public BackupPolicy() {
    }

    /**
     * Get the retentionPeriodDays property: The retention period for all the databases in this managed instance.
     *
     * @return the retentionPeriodDays value.
     */
    public Integer retentionPeriodDays() {
        return this.retentionPeriodDays;
    }

    /**
     * Set the retentionPeriodDays property: The retention period for all the databases in this managed instance.
     *
     * @param retentionPeriodDays the retentionPeriodDays value to set.
     * @return the BackupPolicy object itself.
     */
    public BackupPolicy withRetentionPeriodDays(Integer retentionPeriodDays) {
        this.retentionPeriodDays = retentionPeriodDays;
        return this;
    }

    /**
     * Get the fullBackupDays property: The value indicating days between full backups.
     *
     * @return the fullBackupDays value.
     */
    public Integer fullBackupDays() {
        return this.fullBackupDays;
    }

    /**
     * Set the fullBackupDays property: The value indicating days between full backups.
     *
     * @param fullBackupDays the fullBackupDays value to set.
     * @return the BackupPolicy object itself.
     */
    public BackupPolicy withFullBackupDays(Integer fullBackupDays) {
        this.fullBackupDays = fullBackupDays;
        return this;
    }

    /**
     * Get the differentialBackupHours property: The differential backup interval in hours.
     *
     * @return the differentialBackupHours value.
     */
    public DifferentialBackupHours differentialBackupHours() {
        return this.differentialBackupHours;
    }

    /**
     * Set the differentialBackupHours property: The differential backup interval in hours.
     *
     * @param differentialBackupHours the differentialBackupHours value to set.
     * @return the BackupPolicy object itself.
     */
    public BackupPolicy withDifferentialBackupHours(DifferentialBackupHours differentialBackupHours) {
        this.differentialBackupHours = differentialBackupHours;
        return this;
    }

    /**
     * Get the transactionLogBackupMinutes property: The value indicating minutes between transaction log backups.
     *
     * @return the transactionLogBackupMinutes value.
     */
    public Integer transactionLogBackupMinutes() {
        return this.transactionLogBackupMinutes;
    }

    /**
     * Set the transactionLogBackupMinutes property: The value indicating minutes between transaction log backups.
     *
     * @param transactionLogBackupMinutes the transactionLogBackupMinutes value to set.
     * @return the BackupPolicy object itself.
     */
    public BackupPolicy withTransactionLogBackupMinutes(Integer transactionLogBackupMinutes) {
        this.transactionLogBackupMinutes = transactionLogBackupMinutes;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

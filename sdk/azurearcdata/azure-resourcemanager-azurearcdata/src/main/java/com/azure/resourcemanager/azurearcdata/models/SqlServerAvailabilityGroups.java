// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SqlServerAvailabilityGroups. */
public interface SqlServerAvailabilityGroups {
    /**
     * Deletes an Arc Sql Server availability group resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName, Context context);

    /**
     * Deletes an Arc Sql Server availability group resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName);

    /**
     * Retrieves an Arc Sql Server availability group.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> getWithResponse(
        String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName, Context context);

    /**
     * Retrieves an Arc Sql Server availability group.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    SqlServerAvailabilityGroupResource get(
        String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName);

    /**
     * List the availability group associated with the given Arc Sql Server.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Server Availability Group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlServerAvailabilityGroupResource> list(String resourceGroupName, String sqlServerInstanceName);

    /**
     * List the availability group associated with the given Arc Sql Server.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Server Availability Group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlServerAvailabilityGroupResource> list(
        String resourceGroupName, String sqlServerInstanceName, Context context);

    /**
     * Retrieves an Arc Sql Server availability group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    SqlServerAvailabilityGroupResource getById(String id);

    /**
     * Retrieves an Arc Sql Server availability group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    Response<SqlServerAvailabilityGroupResource> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an Arc Sql Server availability group resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an Arc Sql Server availability group resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SqlServerAvailabilityGroupResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new SqlServerAvailabilityGroupResource definition.
     */
    SqlServerAvailabilityGroupResource.DefinitionStages.Blank define(String name);
}

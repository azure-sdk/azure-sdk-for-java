// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/** The status of the Kubernetes custom resource. */
@Fluent
public final class FailoverGroupStatus {
    /*
     * The time that the custom resource was last updated.
     */
    @JsonProperty(value = "lastUpdateTime")
    private OffsetDateTime lastUpdateTime;

    /*
     * The version of the replicaSet associated with the failover group custom resource.
     */
    @JsonProperty(value = "observedGeneration")
    private Long observedGeneration;

    /*
     * The state of the failover group custom resource.
     */
    @JsonProperty(value = "state")
    private State state;

    /*
     * The message in case of a failure in the failover group.
     */
    @JsonProperty(value = "results")
    private String results;

    /*
     * The role of the managed instance in the failover group.
     */
    @JsonProperty(value = "role")
    private InstanceFailoverGroupRole role;

    /*
     * A list of failover group replicas.
     */
    @JsonProperty(value = "replicas")
    private List<AGReplicas> replicas;

    /*
     * The status of the Kubernetes custom resource.
     */
    @JsonIgnore private Map<String, Object> additionalProperties;

    /** Creates an instance of FailoverGroupStatus class. */
    public FailoverGroupStatus() {
    }

    /**
     * Get the lastUpdateTime property: The time that the custom resource was last updated.
     *
     * @return the lastUpdateTime value.
     */
    public OffsetDateTime lastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Set the lastUpdateTime property: The time that the custom resource was last updated.
     *
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withLastUpdateTime(OffsetDateTime lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    /**
     * Get the observedGeneration property: The version of the replicaSet associated with the failover group custom
     * resource.
     *
     * @return the observedGeneration value.
     */
    public Long observedGeneration() {
        return this.observedGeneration;
    }

    /**
     * Set the observedGeneration property: The version of the replicaSet associated with the failover group custom
     * resource.
     *
     * @param observedGeneration the observedGeneration value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withObservedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }

    /**
     * Get the state property: The state of the failover group custom resource.
     *
     * @return the state value.
     */
    public State state() {
        return this.state;
    }

    /**
     * Set the state property: The state of the failover group custom resource.
     *
     * @param state the state value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withState(State state) {
        this.state = state;
        return this;
    }

    /**
     * Get the results property: The message in case of a failure in the failover group.
     *
     * @return the results value.
     */
    public String results() {
        return this.results;
    }

    /**
     * Set the results property: The message in case of a failure in the failover group.
     *
     * @param results the results value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withResults(String results) {
        this.results = results;
        return this;
    }

    /**
     * Get the role property: The role of the managed instance in the failover group.
     *
     * @return the role value.
     */
    public InstanceFailoverGroupRole role() {
        return this.role;
    }

    /**
     * Set the role property: The role of the managed instance in the failover group.
     *
     * @param role the role value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withRole(InstanceFailoverGroupRole role) {
        this.role = role;
        return this;
    }

    /**
     * Get the replicas property: A list of failover group replicas.
     *
     * @return the replicas value.
     */
    public List<AGReplicas> replicas() {
        return this.replicas;
    }

    /**
     * Set the replicas property: A list of failover group replicas.
     *
     * @param replicas the replicas value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withReplicas(List<AGReplicas> replicas) {
        this.replicas = replicas;
        return this;
    }

    /**
     * Get the additionalProperties property: The status of the Kubernetes custom resource.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: The status of the Kubernetes custom resource.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the FailoverGroupStatus object itself.
     */
    public FailoverGroupStatus withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (replicas() != null) {
            replicas().forEach(e -> e.validate());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurearcdata.fluent.models.SqlAvailabilityGroupReplicaResourceInner;
import com.azure.resourcemanager.azurearcdata.models.SqlAvailabilityGroupReplicaUpdate;

/** An instance of this class provides access to all the operations defined in SqlAvailabilityGroupReplicasClient. */
public interface SqlAvailabilityGroupReplicasClient {
    /**
     * Creates or replaces an Arc Sql Availability Group Replica.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param sqlAvailabilityGroupReplicaResource The request body for availability group replica resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlAvailabilityGroupReplicaResourceInner> createWithResponse(
        String resourceGroupName,
        String sqlServerInstanceName,
        String sqlAvailabilityGroupName,
        SqlAvailabilityGroupReplicaResourceInner sqlAvailabilityGroupReplicaResource,
        Context context);

    /**
     * Creates or replaces an Arc Sql Availability Group Replica.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param sqlAvailabilityGroupReplicaResource The request body for availability group replica resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlAvailabilityGroupReplicaResourceInner create(
        String resourceGroupName,
        String sqlServerInstanceName,
        String sqlAvailabilityGroupName,
        SqlAvailabilityGroupReplicaResourceInner sqlAvailabilityGroupReplicaResource);

    /**
     * Deletes an Arc Sql availability group replica resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName, Context context);

    /**
     * Deletes an Arc Sql availability group replica resource.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName);

    /**
     * Retrieves an Arc Sql availability group replica.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlAvailabilityGroupReplicaResourceInner> getWithResponse(
        String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName, Context context);

    /**
     * Retrieves an Arc Sql availability group replica.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlAvailabilityGroupReplicaResourceInner get(
        String resourceGroupName, String sqlServerInstanceName, String sqlAvailabilityGroupName);

    /**
     * Updates an existing Availability Group Replica.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param sqlAvailabilityGroupReplicaUpdate The requested availability group replica resource state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SqlAvailabilityGroupReplicaResourceInner> updateWithResponse(
        String resourceGroupName,
        String sqlServerInstanceName,
        String sqlAvailabilityGroupName,
        SqlAvailabilityGroupReplicaUpdate sqlAvailabilityGroupReplicaUpdate,
        Context context);

    /**
     * Updates an existing Availability Group Replica.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlServerInstanceName Name of SQL Server Instance.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param sqlAvailabilityGroupReplicaUpdate The requested availability group replica resource state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return arc Sql Server Availability Group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SqlAvailabilityGroupReplicaResourceInner update(
        String resourceGroupName,
        String sqlServerInstanceName,
        String sqlAvailabilityGroupName,
        SqlAvailabilityGroupReplicaUpdate sqlAvailabilityGroupReplicaUpdate);

    /**
     * List the Availability Group Replica associated with the given Arc Sql AG.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Availability Group Replica as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlAvailabilityGroupReplicaResourceInner> list(
        String resourceGroupName, String sqlAvailabilityGroupName);

    /**
     * List the Availability Group Replica associated with the given Arc Sql AG.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param sqlAvailabilityGroupName Name of SQL Availability Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of Arc Sql Availability Group Replica as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SqlAvailabilityGroupReplicaResourceInner> list(
        String resourceGroupName, String sqlAvailabilityGroupName, Context context);
}

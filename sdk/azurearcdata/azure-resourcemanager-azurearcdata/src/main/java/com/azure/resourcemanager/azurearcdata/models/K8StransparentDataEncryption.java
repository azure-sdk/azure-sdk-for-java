// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Transparent data encryption information. */
@Fluent
public final class K8StransparentDataEncryption {
    /*
     * Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
     */
    @JsonProperty(value = "mode")
    private String mode;

    /*
     * Protector secret for customer managed Transparent data encryption mode
     */
    @JsonProperty(value = "protectorSecret")
    private String protectorSecret;

    /** Creates an instance of K8StransparentDataEncryption class. */
    public K8StransparentDataEncryption() {
    }

    /**
     * Get the mode property: Transparent data encryption mode. Can be Service Managed, Customer managed or disabled.
     *
     * @return the mode value.
     */
    public String mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Transparent data encryption mode. Can be Service Managed, Customer managed or disabled.
     *
     * @param mode the mode value to set.
     * @return the K8StransparentDataEncryption object itself.
     */
    public K8StransparentDataEncryption withMode(String mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the protectorSecret property: Protector secret for customer managed Transparent data encryption mode.
     *
     * @return the protectorSecret value.
     */
    public String protectorSecret() {
        return this.protectorSecret;
    }

    /**
     * Set the protectorSecret property: Protector secret for customer managed Transparent data encryption mode.
     *
     * @param protectorSecret the protectorSecret value to set.
     * @return the K8StransparentDataEncryption object itself.
     */
    public K8StransparentDataEncryption withProtectorSecret(String protectorSecret) {
        this.protectorSecret = protectorSecret;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

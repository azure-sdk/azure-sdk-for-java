// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurearcdata.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A section of the telemetry response for the SQL Server instance.
 */
@Fluent
public final class SqlServerInstanceTelemetryResponse {
    /*
     * The columns of the result telemetry table for the SQL Server instance.
     */
    @JsonProperty(value = "columns", required = true)
    private List<SqlServerInstanceTelemetryColumn> columns;

    /*
     * A list of rows from the result telemetry table for the SQL Server instance.
     */
    @JsonProperty(value = "rows", required = true)
    private List<List<String>> rows;

    /*
     * The link to the next section of rows of the telemetry response for the SQL Server instance. Null if no more
     * sections are available.
     */
    @JsonProperty(value = "nextLink", access = JsonProperty.Access.WRITE_ONLY)
    private String nextLink;

    /**
     * Creates an instance of SqlServerInstanceTelemetryResponse class.
     */
    public SqlServerInstanceTelemetryResponse() {
    }

    /**
     * Get the columns property: The columns of the result telemetry table for the SQL Server instance.
     * 
     * @return the columns value.
     */
    public List<SqlServerInstanceTelemetryColumn> columns() {
        return this.columns;
    }

    /**
     * Set the columns property: The columns of the result telemetry table for the SQL Server instance.
     * 
     * @param columns the columns value to set.
     * @return the SqlServerInstanceTelemetryResponse object itself.
     */
    public SqlServerInstanceTelemetryResponse withColumns(List<SqlServerInstanceTelemetryColumn> columns) {
        this.columns = columns;
        return this;
    }

    /**
     * Get the rows property: A list of rows from the result telemetry table for the SQL Server instance.
     * 
     * @return the rows value.
     */
    public List<List<String>> rows() {
        return this.rows;
    }

    /**
     * Set the rows property: A list of rows from the result telemetry table for the SQL Server instance.
     * 
     * @param rows the rows value to set.
     * @return the SqlServerInstanceTelemetryResponse object itself.
     */
    public SqlServerInstanceTelemetryResponse withRows(List<List<String>> rows) {
        this.rows = rows;
        return this;
    }

    /**
     * Get the nextLink property: The link to the next section of rows of the telemetry response for the SQL Server
     * instance. Null if no more sections are available.
     * 
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (columns() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property columns in model SqlServerInstanceTelemetryResponse"));
        } else {
            columns().forEach(e -> e.validate());
        }
        if (rows() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property rows in model SqlServerInstanceTelemetryResponse"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SqlServerInstanceTelemetryResponse.class);
}

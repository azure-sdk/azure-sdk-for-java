// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.billingbenefits.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ExtendedStatusInfo model.
 */
@Immutable
public final class ExtendedStatusInfo implements JsonSerializable<ExtendedStatusInfo> {
    /*
     * Status code providing additional information.
     */
    private String statusCode;

    /*
     * The message giving detailed information about the status code.
     */
    private String message;

    /**
     * Creates an instance of ExtendedStatusInfo class.
     */
    private ExtendedStatusInfo() {
    }

    /**
     * Get the statusCode property: Status code providing additional information.
     * 
     * @return the statusCode value.
     */
    public String statusCode() {
        return this.statusCode;
    }

    /**
     * Get the message property: The message giving detailed information about the status code.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("statusCode", this.statusCode);
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExtendedStatusInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExtendedStatusInfo if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExtendedStatusInfo.
     */
    public static ExtendedStatusInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExtendedStatusInfo deserializedExtendedStatusInfo = new ExtendedStatusInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("statusCode".equals(fieldName)) {
                    deserializedExtendedStatusInfo.statusCode = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedExtendedStatusInfo.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExtendedStatusInfo;
        });
    }
}

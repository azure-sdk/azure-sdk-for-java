// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billingbenefits.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.billingbenefits.fluent.SavingsPlansInOrdersClient;
import com.azure.resourcemanager.billingbenefits.fluent.models.SavingsPlanModelInner;
import com.azure.resourcemanager.billingbenefits.models.SavingsPlanModel;
import com.azure.resourcemanager.billingbenefits.models.SavingsPlansInOrders;

public final class SavingsPlansInOrdersImpl implements SavingsPlansInOrders {
    private static final ClientLogger LOGGER = new ClientLogger(SavingsPlansInOrdersImpl.class);

    private final SavingsPlansInOrdersClient innerClient;

    private final com.azure.resourcemanager.billingbenefits.BillingBenefitsManager serviceManager;

    public SavingsPlansInOrdersImpl(
        SavingsPlansInOrdersClient innerClient,
        com.azure.resourcemanager.billingbenefits.BillingBenefitsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SavingsPlanModel> list(String savingsPlanOrderId) {
        PagedIterable<SavingsPlanModelInner> inner = this.serviceClient().list(savingsPlanOrderId);
        return Utils.mapPage(inner, inner1 -> new SavingsPlanModelImpl(inner1, this.manager()));
    }

    public PagedIterable<SavingsPlanModel> list(String savingsPlanOrderId, Context context) {
        PagedIterable<SavingsPlanModelInner> inner = this.serviceClient().list(savingsPlanOrderId, context);
        return Utils.mapPage(inner, inner1 -> new SavingsPlanModelImpl(inner1, this.manager()));
    }

    private SavingsPlansInOrdersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.billingbenefits.BillingBenefitsManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.billingbenefits.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.billingbenefits.BillingBenefitsManager;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeProperties;
import com.azure.resourcemanager.billingbenefits.models.AppliedScopeType;
import com.azure.resourcemanager.billingbenefits.models.BillingPlan;
import com.azure.resourcemanager.billingbenefits.models.InstanceFlexibility;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasRequest;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasRequestPropertiesReservedResourceProperties;
import com.azure.resourcemanager.billingbenefits.models.ReservationOrderAliasResponse;
import com.azure.resourcemanager.billingbenefits.models.ReservedResourceType;
import com.azure.resourcemanager.billingbenefits.models.ResourceSku;
import com.azure.resourcemanager.billingbenefits.models.Term;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReservationOrderAliasResponsesCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"sku\":{\"name\":\"la\"},\"location\":\"elwuipi\",\"properties\":{\"displayName\":\"zkzivgvvcnay\",\"reservationOrderId\":\"yrnxxmueedn\",\"provisioningState\":\"Succeeded\",\"billingScopeId\":\"stkwqqtch\",\"term\":\"P5Y\",\"billingPlan\":\"P1M\",\"appliedScopeType\":\"ManagementGroup\",\"appliedScopeProperties\":{\"tenantId\":\"aygdvwvgpioh\",\"managementGroupId\":\"xrtfudxep\",\"subscriptionId\":\"yqagvrvm\",\"resourceGroupId\":\"k\",\"displayName\":\"ghimdblx\"},\"quantity\":261614569,\"renew\":true,\"reservedResourceType\":\"AzureDataExplorer\",\"reviewDateTime\":\"2021-03-20T03:41:31Z\",\"reservedResourceProperties\":{\"instanceFlexibility\":\"On\"}},\"id\":\"szkkfoqre\",\"name\":\"fkzikfj\",\"type\":\"wneaiv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        BillingBenefitsManager manager = BillingBenefitsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ReservationOrderAliasResponse response = manager.reservationOrderAliasResponses()
            .create("qioxi", new ReservationOrderAliasRequest().withSku(new ResourceSku().withName("uiizynke"))
                .withLocation("atrwyhqmibzyh")
                .withDisplayName("smypyynpc")
                .withBillingScopeId("umnzgmwznmabik")
                .withTerm(Term.P1Y)
                .withBillingPlan(BillingPlan.P1M)
                .withAppliedScopeType(AppliedScopeType.MANAGEMENT_GROUP)
                .withAppliedScopeProperties(new AppliedScopeProperties().withTenantId("ldtlwwr")
                    .withManagementGroupId("dmtnc")
                    .withSubscriptionId("kotl")
                    .withResourceGroupId("d")
                    .withDisplayName("gsyocogj"))
                .withQuantity(1628620903)
                .withRenew(true)
                .withReservedResourceType(ReservedResourceType.AZURE_DATA_EXPLORER)
                .withReviewDateTime(OffsetDateTime.parse("2021-01-21T02:41:17Z"))
                .withReservedResourceProperties(new ReservationOrderAliasRequestPropertiesReservedResourceProperties()
                    .withInstanceFlexibility(InstanceFlexibility.OFF)),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("la", response.sku().name());
        Assertions.assertEquals("elwuipi", response.location());
        Assertions.assertEquals("zkzivgvvcnay", response.displayName());
        Assertions.assertEquals("stkwqqtch", response.billingScopeId());
        Assertions.assertEquals(Term.P5Y, response.term());
        Assertions.assertEquals(BillingPlan.P1M, response.billingPlan());
        Assertions.assertEquals(AppliedScopeType.MANAGEMENT_GROUP, response.appliedScopeType());
        Assertions.assertEquals("aygdvwvgpioh", response.appliedScopeProperties().tenantId());
        Assertions.assertEquals("xrtfudxep", response.appliedScopeProperties().managementGroupId());
        Assertions.assertEquals("yqagvrvm", response.appliedScopeProperties().subscriptionId());
        Assertions.assertEquals("k", response.appliedScopeProperties().resourceGroupId());
        Assertions.assertEquals("ghimdblx", response.appliedScopeProperties().displayName());
        Assertions.assertEquals(261614569, response.quantity());
        Assertions.assertTrue(response.renew());
        Assertions.assertEquals(ReservedResourceType.AZURE_DATA_EXPLORER, response.reservedResourceType());
        Assertions.assertEquals(OffsetDateTime.parse("2021-03-20T03:41:31Z"), response.reviewDateTime());
        Assertions.assertEquals(InstanceFlexibility.ON, response.reservedResourceProperties().instanceFlexibility());
    }
}

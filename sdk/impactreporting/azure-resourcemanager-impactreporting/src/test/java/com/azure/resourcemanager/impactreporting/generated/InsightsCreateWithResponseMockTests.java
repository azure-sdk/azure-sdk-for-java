// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.impactreporting.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.impactreporting.ImpactReportingManager;
import com.azure.resourcemanager.impactreporting.models.Content;
import com.azure.resourcemanager.impactreporting.models.ImpactDetails;
import com.azure.resourcemanager.impactreporting.models.Insight;
import com.azure.resourcemanager.impactreporting.models.InsightProperties;
import com.azure.resourcemanager.impactreporting.models.InsightPropertiesAdditionalDetails;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InsightsCreateWithResponseMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"category\":\"k\",\"status\":\"ali\",\"eventId\":\"rqhakauha\",\"groupId\":\"sfwxosowzxc\",\"content\":{\"title\":\"gicjooxdjeb\",\"description\":\"pucwwfvovbvme\"},\"eventTime\":\"2021-02-05T03:56:40Z\",\"insightUniqueId\":\"ivyhzceuojgjrwju\",\"impact\":{\"impactedResourceId\":\"iotwmcdytdxwit\",\"startTime\":\"2021-04-02T04:04:33Z\",\"endTime\":\"2021-01-08T17:07:37Z\",\"impactId\":\"awgqwgxhni\"},\"additionalDetails\":{}},\"id\":\"fbkp\",\"name\":\"cg\",\"type\":\"lwn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ImpactReportingManager manager = ImpactReportingManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Insight response = manager.insights()
            .define("bkyvp")
            .withExistingWorkloadImpact("hckfrlhrx")
            .withProperties(new InsightProperties().withCategory("uzbpzkafku")
                .withStatus("crnwbmeh")
                .withEventId("eyvjusrtslhspkde")
                .withGroupId("aofmxagkvtme")
                .withContent(new Content().withTitle("mqkrhahvljuahaqu").withDescription("c"))
                .withEventTime(OffsetDateTime.parse("2021-02-17T13:46:53Z"))
                .withInsightUniqueId("duala")
                .withImpact(new ImpactDetails().withImpactedResourceId("xqpvfadmw")
                    .withStartTime(OffsetDateTime.parse("2021-01-27T12:04:26Z"))
                    .withEndTime(OffsetDateTime.parse("2021-04-22T00:28:22Z"))
                    .withImpactId("gvxp"))
                .withAdditionalDetails(new InsightPropertiesAdditionalDetails()))
            .create();

        Assertions.assertEquals("k", response.properties().category());
        Assertions.assertEquals("ali", response.properties().status());
        Assertions.assertEquals("rqhakauha", response.properties().eventId());
        Assertions.assertEquals("sfwxosowzxc", response.properties().groupId());
        Assertions.assertEquals("gicjooxdjeb", response.properties().content().title());
        Assertions.assertEquals("pucwwfvovbvme", response.properties().content().description());
        Assertions.assertEquals(OffsetDateTime.parse("2021-02-05T03:56:40Z"), response.properties().eventTime());
        Assertions.assertEquals("ivyhzceuojgjrwju", response.properties().insightUniqueId());
        Assertions.assertEquals("iotwmcdytdxwit", response.properties().impact().impactedResourceId());
        Assertions.assertEquals(OffsetDateTime.parse("2021-04-02T04:04:33Z"),
            response.properties().impact().startTime());
        Assertions.assertEquals(OffsetDateTime.parse("2021-01-08T17:07:37Z"), response.properties().impact().endTime());
        Assertions.assertEquals("awgqwgxhni", response.properties().impact().impactId());
    }
}

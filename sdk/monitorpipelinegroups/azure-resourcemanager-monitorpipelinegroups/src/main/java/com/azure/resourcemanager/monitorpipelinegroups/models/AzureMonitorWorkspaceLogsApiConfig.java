// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitorpipelinegroups.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Monitor Workspace Logs Api configurations.
 */
@Fluent
public final class AzureMonitorWorkspaceLogsApiConfig implements JsonSerializable<AzureMonitorWorkspaceLogsApiConfig> {
    /*
     * Data collection endpoint ingestion url.
     */
    private String dataCollectionEndpointUrl;

    /*
     * Stream name in destination. Azure Monitor stream is related to the destination table.
     */
    private String stream;

    /*
     * Data Collection Rule (DCR) immutable id.
     */
    private String dataCollectionRule;

    /*
     * The schema mapping for incoming data.
     */
    private SchemaMap schema;

    /**
     * Creates an instance of AzureMonitorWorkspaceLogsApiConfig class.
     */
    public AzureMonitorWorkspaceLogsApiConfig() {
    }

    /**
     * Get the dataCollectionEndpointUrl property: Data collection endpoint ingestion url.
     * 
     * @return the dataCollectionEndpointUrl value.
     */
    public String dataCollectionEndpointUrl() {
        return this.dataCollectionEndpointUrl;
    }

    /**
     * Set the dataCollectionEndpointUrl property: Data collection endpoint ingestion url.
     * 
     * @param dataCollectionEndpointUrl the dataCollectionEndpointUrl value to set.
     * @return the AzureMonitorWorkspaceLogsApiConfig object itself.
     */
    public AzureMonitorWorkspaceLogsApiConfig withDataCollectionEndpointUrl(String dataCollectionEndpointUrl) {
        this.dataCollectionEndpointUrl = dataCollectionEndpointUrl;
        return this;
    }

    /**
     * Get the stream property: Stream name in destination. Azure Monitor stream is related to the destination table.
     * 
     * @return the stream value.
     */
    public String stream() {
        return this.stream;
    }

    /**
     * Set the stream property: Stream name in destination. Azure Monitor stream is related to the destination table.
     * 
     * @param stream the stream value to set.
     * @return the AzureMonitorWorkspaceLogsApiConfig object itself.
     */
    public AzureMonitorWorkspaceLogsApiConfig withStream(String stream) {
        this.stream = stream;
        return this;
    }

    /**
     * Get the dataCollectionRule property: Data Collection Rule (DCR) immutable id.
     * 
     * @return the dataCollectionRule value.
     */
    public String dataCollectionRule() {
        return this.dataCollectionRule;
    }

    /**
     * Set the dataCollectionRule property: Data Collection Rule (DCR) immutable id.
     * 
     * @param dataCollectionRule the dataCollectionRule value to set.
     * @return the AzureMonitorWorkspaceLogsApiConfig object itself.
     */
    public AzureMonitorWorkspaceLogsApiConfig withDataCollectionRule(String dataCollectionRule) {
        this.dataCollectionRule = dataCollectionRule;
        return this;
    }

    /**
     * Get the schema property: The schema mapping for incoming data.
     * 
     * @return the schema value.
     */
    public SchemaMap schema() {
        return this.schema;
    }

    /**
     * Set the schema property: The schema mapping for incoming data.
     * 
     * @param schema the schema value to set.
     * @return the AzureMonitorWorkspaceLogsApiConfig object itself.
     */
    public AzureMonitorWorkspaceLogsApiConfig withSchema(SchemaMap schema) {
        this.schema = schema;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (dataCollectionEndpointUrl() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property dataCollectionEndpointUrl in model AzureMonitorWorkspaceLogsApiConfig"));
        }
        if (stream() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property stream in model AzureMonitorWorkspaceLogsApiConfig"));
        }
        if (dataCollectionRule() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property dataCollectionRule in model AzureMonitorWorkspaceLogsApiConfig"));
        }
        if (schema() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property schema in model AzureMonitorWorkspaceLogsApiConfig"));
        } else {
            schema().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureMonitorWorkspaceLogsApiConfig.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("dataCollectionEndpointUrl", this.dataCollectionEndpointUrl);
        jsonWriter.writeStringField("stream", this.stream);
        jsonWriter.writeStringField("dataCollectionRule", this.dataCollectionRule);
        jsonWriter.writeJsonField("schema", this.schema);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureMonitorWorkspaceLogsApiConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureMonitorWorkspaceLogsApiConfig if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureMonitorWorkspaceLogsApiConfig.
     */
    public static AzureMonitorWorkspaceLogsApiConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureMonitorWorkspaceLogsApiConfig deserializedAzureMonitorWorkspaceLogsApiConfig
                = new AzureMonitorWorkspaceLogsApiConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dataCollectionEndpointUrl".equals(fieldName)) {
                    deserializedAzureMonitorWorkspaceLogsApiConfig.dataCollectionEndpointUrl = reader.getString();
                } else if ("stream".equals(fieldName)) {
                    deserializedAzureMonitorWorkspaceLogsApiConfig.stream = reader.getString();
                } else if ("dataCollectionRule".equals(fieldName)) {
                    deserializedAzureMonitorWorkspaceLogsApiConfig.dataCollectionRule = reader.getString();
                } else if ("schema".equals(fieldName)) {
                    deserializedAzureMonitorWorkspaceLogsApiConfig.schema = SchemaMap.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureMonitorWorkspaceLogsApiConfig;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitorpipelinegroups.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Base receiver using TCP as transport protocol.
 */
@Fluent
public final class SyslogReceiver implements JsonSerializable<SyslogReceiver> {
    /*
     * Syslog receiver endpoint definition. Example: 0.0.0.0:<port>.
     */
    private String endpoint;

    /*
     * Protocol to parse syslog messages. Default rfc3164
     */
    private SyslogProtocol protocol;

    /**
     * Creates an instance of SyslogReceiver class.
     */
    public SyslogReceiver() {
    }

    /**
     * Get the endpoint property: Syslog receiver endpoint definition. Example: 0.0.0.0:&lt;port&gt;.
     * 
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: Syslog receiver endpoint definition. Example: 0.0.0.0:&lt;port&gt;.
     * 
     * @param endpoint the endpoint value to set.
     * @return the SyslogReceiver object itself.
     */
    public SyslogReceiver withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the protocol property: Protocol to parse syslog messages. Default rfc3164.
     * 
     * @return the protocol value.
     */
    public SyslogProtocol protocol() {
        return this.protocol;
    }

    /**
     * Set the protocol property: Protocol to parse syslog messages. Default rfc3164.
     * 
     * @param protocol the protocol value to set.
     * @return the SyslogReceiver object itself.
     */
    public SyslogReceiver withProtocol(SyslogProtocol protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (endpoint() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property endpoint in model SyslogReceiver"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SyslogReceiver.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpoint", this.endpoint);
        jsonWriter.writeStringField("protocol", this.protocol == null ? null : this.protocol.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SyslogReceiver from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SyslogReceiver if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SyslogReceiver.
     */
    public static SyslogReceiver fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SyslogReceiver deserializedSyslogReceiver = new SyslogReceiver();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpoint".equals(fieldName)) {
                    deserializedSyslogReceiver.endpoint = reader.getString();
                } else if ("protocol".equals(fieldName)) {
                    deserializedSyslogReceiver.protocol = SyslogProtocol.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSyslogReceiver;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appcomplianceautomation.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ScopingQuestionsInner;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceProviders;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingQuestions;

public final class ResourceProvidersImpl implements ResourceProviders {
    private static final ClientLogger LOGGER = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager serviceManager;

    public ResourceProvidersImpl(ResourceProvidersClient innerClient,
        com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ScopingQuestions> getScopingQuestionsWithResponse(String reportName, Context context) {
        Response<ScopingQuestionsInner> inner
            = this.serviceClient().getScopingQuestionsWithResponse(reportName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ScopingQuestionsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ScopingQuestions getScopingQuestions(String reportName) {
        ScopingQuestionsInner inner = this.serviceClient().getScopingQuestions(reportName);
        if (inner != null) {
            return new ScopingQuestionsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager manager() {
        return this.serviceManager;
    }
}

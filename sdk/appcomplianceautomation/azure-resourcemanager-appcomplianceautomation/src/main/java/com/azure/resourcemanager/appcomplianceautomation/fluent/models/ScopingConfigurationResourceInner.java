// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appcomplianceautomation.models.ProvisioningState;
import com.azure.resourcemanager.appcomplianceautomation.models.ScopingAnswer;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A class represent an AppComplianceAutomation scoping configuration resource.
 */
@Fluent
public final class ScopingConfigurationResourceInner extends ProxyResource {
    /*
     * ScopingConfiguration property.
     */
    @JsonProperty(value = "properties", required = true)
    private ScopingConfigurationProperties innerProperties = new ScopingConfigurationProperties();

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of ScopingConfigurationResourceInner class.
     */
    public ScopingConfigurationResourceInner() {
    }

    /**
     * Get the innerProperties property: ScopingConfiguration property.
     * 
     * @return the innerProperties value.
     */
    private ScopingConfigurationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the answers property: List of scoping question answers.
     * 
     * @return the answers value.
     */
    public List<ScopingAnswer> answers() {
        return this.innerProperties() == null ? null : this.innerProperties().answers();
    }

    /**
     * Set the answers property: List of scoping question answers.
     * 
     * @param answers the answers value to set.
     * @return the ScopingConfigurationResourceInner object itself.
     */
    public ScopingConfigurationResourceInner withAnswers(List<ScopingAnswer> answers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScopingConfigurationProperties();
        }
        this.innerProperties().withAnswers(answers);
        return this;
    }

    /**
     * Get the provisioningState property: Azure lifecycle management.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model ScopingConfigurationResourceInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ScopingConfigurationResourceInner.class);
}

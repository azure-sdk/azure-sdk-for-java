// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * The updatable properties of the ReportResource.
 */
@Fluent
public final class ReportResourceUpdateProperties {
    /*
     * Report offer Guid.
     */
    @JsonProperty(value = "offerGuid")
    private String offerGuid;

    /*
     * Report collection trigger time's time zone, the available list can be obtained by executing "Get-TimeZone
     * -ListAvailable" in PowerShell.
     * An example of valid timezone id is "Pacific Standard Time".
     */
    @JsonProperty(value = "timeZone")
    private String timeZone;

    /*
     * Report collection trigger time.
     */
    @JsonProperty(value = "triggerTime")
    private OffsetDateTime triggerTime;

    /*
     * List of resource data.
     */
    @JsonProperty(value = "resources")
    private List<ResourceMetadata> resources;

    /**
     * Creates an instance of ReportResourceUpdateProperties class.
     */
    public ReportResourceUpdateProperties() {
    }

    /**
     * Get the offerGuid property: Report offer Guid.
     * 
     * @return the offerGuid value.
     */
    public String offerGuid() {
        return this.offerGuid;
    }

    /**
     * Set the offerGuid property: Report offer Guid.
     * 
     * @param offerGuid the offerGuid value to set.
     * @return the ReportResourceUpdateProperties object itself.
     */
    public ReportResourceUpdateProperties withOfferGuid(String offerGuid) {
        this.offerGuid = offerGuid;
        return this;
    }

    /**
     * Get the timeZone property: Report collection trigger time's time zone, the available list can be obtained by
     * executing "Get-TimeZone -ListAvailable" in PowerShell.
     * An example of valid timezone id is "Pacific Standard Time".
     * 
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: Report collection trigger time's time zone, the available list can be obtained by
     * executing "Get-TimeZone -ListAvailable" in PowerShell.
     * An example of valid timezone id is "Pacific Standard Time".
     * 
     * @param timeZone the timeZone value to set.
     * @return the ReportResourceUpdateProperties object itself.
     */
    public ReportResourceUpdateProperties withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the triggerTime property: Report collection trigger time.
     * 
     * @return the triggerTime value.
     */
    public OffsetDateTime triggerTime() {
        return this.triggerTime;
    }

    /**
     * Set the triggerTime property: Report collection trigger time.
     * 
     * @param triggerTime the triggerTime value to set.
     * @return the ReportResourceUpdateProperties object itself.
     */
    public ReportResourceUpdateProperties withTriggerTime(OffsetDateTime triggerTime) {
        this.triggerTime = triggerTime;
        return this;
    }

    /**
     * Get the resources property: List of resource data.
     * 
     * @return the resources value.
     */
    public List<ResourceMetadata> resources() {
        return this.resources;
    }

    /**
     * Set the resources property: List of resource data.
     * 
     * @param resources the resources value to set.
     * @return the ReportResourceUpdateProperties object itself.
     */
    public ReportResourceUpdateProperties withResources(List<ResourceMetadata> resources) {
        this.resources = resources;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resources() != null) {
            resources().forEach(e -> e.validate());
        }
    }
}

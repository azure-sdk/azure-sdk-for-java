// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A class represent the recommendation solution.
 */
@Immutable
public final class RecommendationSolution {
    /*
     * The index of the recommendation solution.
     */
    @JsonProperty(value = "recommendationSolutionIndex", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendationSolutionIndex;

    /*
     * The detail steps of the recommendation solution.
     */
    @JsonProperty(value = "recommendationSolutionContent", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendationSolutionContent;

    /*
     * Indicates whether this solution is the recommended.
     */
    @JsonProperty(value = "isRecommendSolution", access = JsonProperty.Access.WRITE_ONLY)
    private IsRecommendSolution isRecommendSolution;

    /**
     * Creates an instance of RecommendationSolution class.
     */
    public RecommendationSolution() {
    }

    /**
     * Get the recommendationSolutionIndex property: The index of the recommendation solution.
     * 
     * @return the recommendationSolutionIndex value.
     */
    public String recommendationSolutionIndex() {
        return this.recommendationSolutionIndex;
    }

    /**
     * Get the recommendationSolutionContent property: The detail steps of the recommendation solution.
     * 
     * @return the recommendationSolutionContent value.
     */
    public String recommendationSolutionContent() {
        return this.recommendationSolutionContent;
    }

    /**
     * Get the isRecommendSolution property: Indicates whether this solution is the recommended.
     * 
     * @return the isRecommendSolution value.
     */
    public IsRecommendSolution isRecommendSolution() {
        return this.isRecommendSolution;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

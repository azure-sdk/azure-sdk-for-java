// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The definition of a scoping question.
 */
@Immutable
public final class ScopingQuestion {
    /*
     * Question id.
     */
    @JsonProperty(value = "questionId", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private String questionId;

    /*
     * Superior question id.
     */
    @JsonProperty(value = "superiorQuestionId", access = JsonProperty.Access.WRITE_ONLY)
    private String superiorQuestionId;

    /*
     * Input type of the question answer.
     */
    @JsonProperty(value = "inputType", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private InputType inputType;

    /*
     * Option id list.
     */
    @JsonProperty(value = "optionIds", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private List<String> optionIds;

    /*
     * The rule of the question.
     */
    @JsonProperty(value = "rules", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private List<Rule> rules;

    /*
     * The answer value to show the sub questions.
     */
    @JsonProperty(value = "showSubQuestionsValue", access = JsonProperty.Access.WRITE_ONLY)
    private String showSubQuestionsValue;

    /**
     * Creates an instance of ScopingQuestion class.
     */
    public ScopingQuestion() {
    }

    /**
     * Get the questionId property: Question id.
     * 
     * @return the questionId value.
     */
    public String questionId() {
        return this.questionId;
    }

    /**
     * Get the superiorQuestionId property: Superior question id.
     * 
     * @return the superiorQuestionId value.
     */
    public String superiorQuestionId() {
        return this.superiorQuestionId;
    }

    /**
     * Get the inputType property: Input type of the question answer.
     * 
     * @return the inputType value.
     */
    public InputType inputType() {
        return this.inputType;
    }

    /**
     * Get the optionIds property: Option id list.
     * 
     * @return the optionIds value.
     */
    public List<String> optionIds() {
        return this.optionIds;
    }

    /**
     * Get the rules property: The rule of the question.
     * 
     * @return the rules value.
     */
    public List<Rule> rules() {
        return this.rules;
    }

    /**
     * Get the showSubQuestionsValue property: The answer value to show the sub questions.
     * 
     * @return the showSubQuestionsValue value.
     */
    public String showSubQuestionsValue() {
        return this.showSubQuestionsValue;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

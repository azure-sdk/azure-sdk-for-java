// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A class represent the recommendation.
 */
@Immutable
public final class Recommendation {
    /*
     * The Id of the recommendation.
     */
    @JsonProperty(value = "recommendationId", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendationId;

    /*
     * The short name of the recommendation. e.g. "Invalid TLS config"
     */
    @JsonProperty(value = "recommendationShortName", access = JsonProperty.Access.WRITE_ONLY)
    private String recommendationShortName;

    /*
     * List of recommendation solutions.
     */
    @JsonProperty(value = "recommendationSolutions", access = JsonProperty.Access.WRITE_ONLY)
    private List<RecommendationSolution> recommendationSolutions;

    /**
     * Creates an instance of Recommendation class.
     */
    public Recommendation() {
    }

    /**
     * Get the recommendationId property: The Id of the recommendation.
     * 
     * @return the recommendationId value.
     */
    public String recommendationId() {
        return this.recommendationId;
    }

    /**
     * Get the recommendationShortName property: The short name of the recommendation. e.g. "Invalid TLS config".
     * 
     * @return the recommendationShortName value.
     */
    public String recommendationShortName() {
        return this.recommendationShortName;
    }

    /**
     * Get the recommendationSolutions property: List of recommendation solutions.
     * 
     * @return the recommendationSolutions value.
     */
    public List<RecommendationSolution> recommendationSolutions() {
        return this.recommendationSolutions;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (recommendationSolutions() != null) {
            recommendationSolutions().forEach(e -> e.validate());
        }
    }
}

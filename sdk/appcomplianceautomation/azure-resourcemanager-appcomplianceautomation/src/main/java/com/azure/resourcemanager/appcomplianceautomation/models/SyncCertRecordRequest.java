// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Synchronize certification record request.
 */
@Fluent
public final class SyncCertRecordRequest {
    /*
     * certification record to be synchronized.
     */
    @JsonProperty(value = "certRecord", required = true)
    private CertSyncRecord certRecord;

    /**
     * Creates an instance of SyncCertRecordRequest class.
     */
    public SyncCertRecordRequest() {
    }

    /**
     * Get the certRecord property: certification record to be synchronized.
     * 
     * @return the certRecord value.
     */
    public CertSyncRecord certRecord() {
        return this.certRecord;
    }

    /**
     * Set the certRecord property: certification record to be synchronized.
     * 
     * @param certRecord the certRecord value to set.
     * @return the SyncCertRecordRequest object itself.
     */
    public SyncCertRecordRequest withCertRecord(CertSyncRecord certRecord) {
        this.certRecord = certRecord;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certRecord() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property certRecord in model SyncCertRecordRequest"));
        } else {
            certRecord().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SyncCertRecordRequest.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A class represent the control family.
 */
@Immutable
public final class ControlFamily {
    /*
     * The name of the control family. e.g. "Malware Protection - Anti-Virus"
     */
    @JsonProperty(value = "controlFamilyName", access = JsonProperty.Access.WRITE_ONLY)
    private String controlFamilyName;

    /*
     * The control family status
     */
    @JsonProperty(value = "controlFamilyStatus", access = JsonProperty.Access.WRITE_ONLY)
    private ControlFamilyStatus controlFamilyStatus;

    /*
     * List of controls.
     */
    @JsonProperty(value = "controls", access = JsonProperty.Access.WRITE_ONLY)
    private List<Control> controls;

    /**
     * Creates an instance of ControlFamily class.
     */
    private ControlFamily() {
    }

    /**
     * Get the controlFamilyName property: The name of the control family. e.g. "Malware Protection - Anti-Virus".
     * 
     * @return the controlFamilyName value.
     */
    public String controlFamilyName() {
        return this.controlFamilyName;
    }

    /**
     * Get the controlFamilyStatus property: The control family status.
     * 
     * @return the controlFamilyStatus value.
     */
    public ControlFamilyStatus controlFamilyStatus() {
        return this.controlFamilyStatus;
    }

    /**
     * Get the controls property: List of controls.
     * 
     * @return the controls value.
     */
    public List<Control> controls() {
        return this.controls;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (controls() != null) {
            controls().forEach(e -> e.validate());
        }
    }
}

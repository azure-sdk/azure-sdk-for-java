// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"triggerTime\":\"2021-04-06T06:50:38Z\",\"timeZone\":\"dbsdshm\",\"resources\":[{\"resourceId\":\"maehvbbxurip\",\"resourceType\":\"fnhtbaxkgxyw\",\"resourceKind\":\"kpyklyhp\",\"resourceOrigin\":\"Azure\",\"accountId\":\"pvruudlg\"},{\"resourceId\":\"ibthostgktstvd\",\"resourceType\":\"clzedqbcvh\",\"resourceKind\":\"h\",\"resourceOrigin\":\"Azure\",\"accountId\":\"qkdlw\"},{\"resourceId\":\"qfbumlkxtrqjf\",\"resourceType\":\"lmbtxhwgfwsrt\",\"resourceKind\":\"coezbrhubskh\",\"resourceOrigin\":\"Azure\",\"accountId\":\"oookkqfq\"}],\"status\":\"Active\",\"errors\":[\"orfmluiqt\",\"zf\"],\"tenantId\":\"yvnqqybaryeuay\",\"offerGuid\":\"qabqgzslesjcb\",\"nextTriggerTime\":\"2021-02-16T20:00:10Z\",\"lastTriggerTime\":\"2021-04-10T08:53:01Z\",\"subscriptions\":[\"ewdjcvbquwrb\"],\"complianceStatus\":{\"m365\":{\"passedCount\":635360833,\"failedCount\":52673301,\"manualCount\":1035155607,\"notApplicableCount\":961183610,\"pendingCount\":519813577}},\"storageInfo\":{\"subscriptionId\":\"emvvhm\",\"resourceGroup\":\"drjf\",\"accountName\":\"acoebj\",\"location\":\"wzcjznmwcpmgua\"},\"certRecords\":[{\"offerGuid\":\"ufactk\",\"certificationStatus\":\"zov\",\"ingestionStatus\":\"j\",\"controls\":[{},{}]},{\"offerGuid\":\"xps\",\"certificationStatus\":\"eekulfgslqubkwd\",\"ingestionStatus\":\"nrdsutujbazpjuoh\",\"controls\":[{},{}]},{\"offerGuid\":\"flnorwmduvwp\",\"certificationStatus\":\"vxwmygd\",\"ingestionStatus\":\"gpqch\",\"controls\":[{}]},{\"offerGuid\":\"pnnbjc\",\"certificationStatus\":\"gibbdaxc\",\"ingestionStatus\":\"fozauorsuk\",\"controls\":[{},{}]}],\"provisioningState\":\"Creating\"},\"id\":\"lhlv\",\"name\":\"uuepzlrphwzsoldw\",\"type\":\"yuqdu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReportResource response
            = manager.reports().getWithResponse("yxgtczh", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals(OffsetDateTime.parse("2021-04-06T06:50:38Z"), response.properties().triggerTime());
        Assertions.assertEquals("dbsdshm", response.properties().timeZone());
        Assertions.assertEquals("maehvbbxurip", response.properties().resources().get(0).resourceId());
        Assertions.assertEquals("fnhtbaxkgxyw", response.properties().resources().get(0).resourceType());
        Assertions.assertEquals("kpyklyhp", response.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AZURE, response.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("pvruudlg", response.properties().resources().get(0).accountId());
        Assertions.assertEquals("qabqgzslesjcb", response.properties().offerGuid());
        Assertions.assertEquals("emvvhm", response.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("drjf", response.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("acoebj", response.properties().storageInfo().accountName());
        Assertions.assertEquals("wzcjznmwcpmgua", response.properties().storageInfo().location());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsListByTenantMockTests {
    @Test
    public void testListByTenant() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"triggerTime\":\"2021-03-09T08:38:36Z\",\"timeZone\":\"e\",\"resources\":[{\"resourceId\":\"wcluqovekqvgq\",\"resourceType\":\"wifzmp\",\"resourceKind\":\"yivqikfxcvhrfsp\",\"resourceOrigin\":\"GCP\",\"accountId\":\"rttikteusqc\"},{\"resourceId\":\"kvyklxubyjaffmm\",\"resourceType\":\"lcqcuubgqibrt\",\"resourceKind\":\"metttwgd\",\"resourceOrigin\":\"GCP\",\"accountId\":\"ihhrmo\"}],\"status\":\"Active\",\"errors\":[\"eypxiutcxapzhyr\",\"etoge\",\"joxslhvnhla\",\"rqnkkzjcjbtr\"],\"tenantId\":\"ehvvib\",\"offerGuid\":\"jj\",\"nextTriggerTime\":\"2021-01-18T04:33:41Z\",\"lastTriggerTime\":\"2021-02-02T14:44:22Z\",\"subscriptions\":[\"tpkxztmoobklft\"],\"complianceStatus\":{\"m365\":{\"passedCount\":738652418,\"failedCount\":913661496,\"manualCount\":1328800252,\"notApplicableCount\":658740777,\"pendingCount\":1479549397}},\"storageInfo\":{\"subscriptionId\":\"hemjy\",\"resourceGroup\":\"hujswtwkozzwcul\",\"accountName\":\"awpfajnjwltlwtjj\",\"location\":\"ktalhsnvkcdmxz\"},\"certRecords\":[{\"offerGuid\":\"imlnwiaaomylw\",\"certificationStatus\":\"z\",\"ingestionStatus\":\"cse\",\"controls\":[{},{}]},{\"offerGuid\":\"npjhlfzswpchwahf\",\"certificationStatus\":\"usnfepgfewet\",\"ingestionStatus\":\"yxgncxykxhdjhli\",\"controls\":[{}]}],\"provisioningState\":\"Succeeded\"},\"id\":\"h\",\"name\":\"cporxvxcjz\",\"type\":\"qizxfpxtgqscjavf\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<ReportResource> response = manager.reports()
            .listByTenant("ysownbtgkbug", 1343904651, "qctojcmisof", "eypefojyqd", "cuplcplcwkhih", "hlhzdsqtzbsrgno",
                "cjhfgmvecactxmw", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-03-09T08:38:36Z"),
            response.iterator().next().properties().triggerTime());
        Assertions.assertEquals("e", response.iterator().next().properties().timeZone());
        Assertions.assertEquals("wcluqovekqvgq",
            response.iterator().next().properties().resources().get(0).resourceId());
        Assertions.assertEquals("wifzmp", response.iterator().next().properties().resources().get(0).resourceType());
        Assertions.assertEquals("yivqikfxcvhrfsp",
            response.iterator().next().properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.GCP,
            response.iterator().next().properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("rttikteusqc", response.iterator().next().properties().resources().get(0).accountId());
        Assertions.assertEquals("jj", response.iterator().next().properties().offerGuid());
        Assertions.assertEquals("hemjy", response.iterator().next().properties().storageInfo().subscriptionId());
        Assertions.assertEquals("hujswtwkozzwcul",
            response.iterator().next().properties().storageInfo().resourceGroup());
        Assertions.assertEquals("awpfajnjwltlwtjj",
            response.iterator().next().properties().storageInfo().accountName());
        Assertions.assertEquals("ktalhsnvkcdmxz", response.iterator().next().properties().storageInfo().location());
    }
}

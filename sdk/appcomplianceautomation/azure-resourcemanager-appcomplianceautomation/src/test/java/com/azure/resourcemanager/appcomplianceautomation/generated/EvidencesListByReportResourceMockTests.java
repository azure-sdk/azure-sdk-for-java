// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceResource;
import com.azure.resourcemanager.appcomplianceautomation.models.EvidenceType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EvidencesListByReportResourceMockTests {
    @Test
    public void testListByReportResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"evidenceType\":\"AutoCollectedEvidence\",\"filePath\":\"ivmxyasfl\",\"extraData\":\"sgzwywakoihknsm\",\"controlId\":\"lmljhlnymzotq\",\"responsibilityId\":\"yuzcbmqqvxmvw\",\"provisioningState\":\"Failed\"},\"id\":\"yxonsupe\",\"name\":\"jlzqnhc\",\"type\":\"sqltnzo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<EvidenceResource> response = manager.evidences()
            .listByReportResource("wcltyjede", "xm", 267714014, "mkqscaz", "awx", "z", "puamwabzxr", "xcushs",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(EvidenceType.AUTO_COLLECTED_EVIDENCE,
            response.iterator().next().properties().evidenceType());
        Assertions.assertEquals("ivmxyasfl", response.iterator().next().properties().filePath());
        Assertions.assertEquals("sgzwywakoihknsm", response.iterator().next().properties().extraData());
        Assertions.assertEquals("lmljhlnymzotq", response.iterator().next().properties().controlId());
        Assertions.assertEquals("yuzcbmqqvxmvw", response.iterator().next().properties().responsibilityId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.fluent.models.ReportResourceInner;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"triggerTime\":\"2021-08-17T06:46:10Z\",\"timeZone\":\"qdzfvazivjlfrqtt\",\"resources\":[{\"resourceId\":\"jlkatnwxy\",\"resourceType\":\"pidkqqfkuvscxkdm\",\"resourceKind\":\"govibrxkpmloazu\",\"resourceOrigin\":\"AWS\",\"accountId\":\"bgo\"},{\"resourceId\":\"rb\",\"resourceType\":\"oybfhjxakvvj\",\"resourceKind\":\"lordilmywwtkgkxn\",\"resourceOrigin\":\"AWS\",\"accountId\":\"b\"}],\"status\":\"Disabled\",\"errors\":[\"tjuewbcihx\"],\"tenantId\":\"whcjyxcc\",\"offerGuid\":\"vpayakkudzpx\",\"nextTriggerTime\":\"2021-11-14T05:13:38Z\",\"lastTriggerTime\":\"2021-07-01T17:47:57Z\",\"subscriptions\":[\"gstcyohpf\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1378216184,\"failedCount\":293927715,\"manualCount\":278281108,\"notApplicableCount\":649228036,\"pendingCount\":1593534784}},\"storageInfo\":{\"subscriptionId\":\"nwqjnoba\",\"resourceGroup\":\"hdd\",\"accountName\":\"acegfnmntf\",\"location\":\"vm\"},\"certRecords\":[{\"offerGuid\":\"czdwvvbalxlllc\",\"certificationStatus\":\"odbzevwrdnhf\",\"ingestionStatus\":\"uvsj\",\"controls\":[{},{},{},{}]},{\"offerGuid\":\"myst\",\"certificationStatus\":\"uqypfcvle\",\"ingestionStatus\":\"hp\",\"controls\":[{},{}]},{\"offerGuid\":\"pjbabwidfc\",\"certificationStatus\":\"spuunnoxyhkxgq\",\"ingestionStatus\":\"rihpfhoq\",\"controls\":[{}]}],\"provisioningState\":\"Succeeded\"},\"id\":\"aomdjvlpjxx\",\"name\":\"zb\",\"type\":\"msgeivsiykzk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReportResource response = manager.reports()
            .createOrUpdate("vmnnrw",
                new ReportResourceInner()
                    .withProperties(new ReportProperties().withTriggerTime(OffsetDateTime.parse("2021-09-06T05:49:51Z"))
                        .withTimeZone("i")
                        .withResources(Arrays.asList(new ResourceMetadata().withResourceId("ktalywjhhgdnhxms")
                            .withResourceType("fomiloxgg")
                            .withResourceKind("fi")
                            .withResourceOrigin(ResourceOrigin.AWS)
                            .withAccountId("euzaof")))
                        .withOfferGuid("impevf")
                        .withStorageInfo(new StorageInfo().withSubscriptionId("gyavu")
                            .withResourceGroup("thjoxoism")
                            .withAccountName("sbpimlq")
                            .withLocation("jxkcgxxlxsff"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-08-17T06:46:10Z"), response.properties().triggerTime());
        Assertions.assertEquals("qdzfvazivjlfrqtt", response.properties().timeZone());
        Assertions.assertEquals("jlkatnwxy", response.properties().resources().get(0).resourceId());
        Assertions.assertEquals("pidkqqfkuvscxkdm", response.properties().resources().get(0).resourceType());
        Assertions.assertEquals("govibrxkpmloazu", response.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AWS, response.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("bgo", response.properties().resources().get(0).accountId());
        Assertions.assertEquals("vpayakkudzpx", response.properties().offerGuid());
        Assertions.assertEquals("nwqjnoba", response.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("hdd", response.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("acegfnmntf", response.properties().storageInfo().accountName());
        Assertions.assertEquals("vm", response.properties().storageInfo().location());
    }
}

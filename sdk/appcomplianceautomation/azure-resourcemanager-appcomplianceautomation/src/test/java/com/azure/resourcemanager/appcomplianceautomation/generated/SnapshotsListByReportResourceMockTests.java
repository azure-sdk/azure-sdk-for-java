// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.SnapshotResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SnapshotsListByReportResourceMockTests {
    @Test
    public void testListByReportResource() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"snapshotName\":\"bu\",\"createdAt\":\"2021-02-22T09:02:50Z\",\"provisioningState\":\"Deleting\",\"reportProperties\":{\"triggerTime\":\"2021-04-01T04:08:22Z\",\"timeZone\":\"e\",\"resources\":[{\"resourceId\":\"pmzznrtffya\",\"resourceType\":\"tmhheioqa\",\"resourceKind\":\"v\",\"resourceOrigin\":\"Azure\",\"accountId\":\"uqyrxpdl\"},{\"resourceId\":\"gql\",\"resourceType\":\"smjqfrddgam\",\"resourceKind\":\"hiosrsjuiv\",\"resourceOrigin\":\"GCP\",\"accountId\":\"syirnx\"}],\"status\":\"Disabled\",\"errors\":[\"xrxzbujrtr\",\"qvwre\",\"khgn\",\"nzonzl\"],\"tenantId\":\"i\",\"offerGuid\":\"wncvjtszcofiz\",\"nextTriggerTime\":\"2021-07-23T04:24:07Z\",\"lastTriggerTime\":\"2020-12-22T10:55:39Z\",\"subscriptions\":[\"jkv\",\"eljeamurvzmlovua\",\"ashcxlpmjerbdk\"],\"complianceStatus\":{\"m365\":{\"passedCount\":402062508,\"failedCount\":2095946053,\"manualCount\":665475568,\"notApplicableCount\":344121425,\"pendingCount\":1181700002}},\"storageInfo\":{\"subscriptionId\":\"jmonfdgn\",\"resourceGroup\":\"cypuuwwlt\",\"accountName\":\"qjctzenkeif\",\"location\":\"hmkdasvfl\"},\"certRecords\":[{\"offerGuid\":\"cu\",\"certificationStatus\":\"hxgsrboldfor\",\"ingestionStatus\":\"wjlvizbfhfov\",\"controls\":[{},{}]},{\"offerGuid\":\"pbt\",\"certificationStatus\":\"dxe\",\"ingestionStatus\":\"abbelawumuaslzk\",\"controls\":[{},{},{}]}],\"provisioningState\":\"Creating\"},\"complianceResults\":[{\"complianceName\":\"cwyhahno\",\"categories\":[{},{},{}]},{\"complianceName\":\"ywuhpsvfuur\",\"categories\":[{},{}]},{\"complianceName\":\"exxwlalniexzsrz\",\"categories\":[{},{}]}]},\"id\":\"q\",\"name\":\"yb\",\"type\":\"wwpgdakchzyvlixq\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SnapshotResource> response = manager.snapshots()
            .listByReportResource("ebwjscjpahlxvea", "f", 1913750704, "nmwmqtibx", "ijddtvqc", "tad", "jaeukmrsieekpn",
                "zaapmudqmeqwi", com.azure.core.util.Context.NONE);

    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.appcomplianceautomation.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.appcomplianceautomation.AppComplianceAutomationManager;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportPatchProperties;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResource;
import com.azure.resourcemanager.appcomplianceautomation.models.ReportResourcePatch;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceMetadata;
import com.azure.resourcemanager.appcomplianceautomation.models.ResourceOrigin;
import com.azure.resourcemanager.appcomplianceautomation.models.StorageInfo;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ReportsUpdateMockTests {
    @Test
    public void testUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"triggerTime\":\"2021-05-29T19:51:37Z\",\"timeZone\":\"iqyuvvfo\",\"resources\":[{\"resourceId\":\"p\",\"resourceType\":\"qyikvy\",\"resourceKind\":\"uyav\",\"resourceOrigin\":\"Azure\",\"accountId\":\"ncstt\"},{\"resourceId\":\"jfybvpoekrsgsgb\",\"resourceType\":\"uzqgnjdgkynsc\",\"resourceKind\":\"qhzvhxnkomt\",\"resourceOrigin\":\"GCP\",\"accountId\":\"tppn\"}],\"status\":\"Active\",\"errors\":[\"hihfrbbcevqagtlt\",\"hlfkqojpy\",\"vgtrdcnifmzzs\",\"ymbrnysuxmpraf\"],\"tenantId\":\"ckh\",\"offerGuid\":\"xvd\",\"nextTriggerTime\":\"2021-05-28T04:28:25Z\",\"lastTriggerTime\":\"2021-09-25T16:54:36Z\",\"subscriptions\":[\"roud\",\"spave\"],\"complianceStatus\":{\"m365\":{\"passedCount\":1656627274,\"failedCount\":901509130,\"manualCount\":798003259,\"notApplicableCount\":1824103868,\"pendingCount\":35410717}},\"storageInfo\":{\"subscriptionId\":\"xg\",\"resourceGroup\":\"oyxcdyuib\",\"accountName\":\"fdn\",\"location\":\"ydvfvfcjnae\"},\"certRecords\":[{\"offerGuid\":\"vhmgorffukis\",\"certificationStatus\":\"w\",\"ingestionStatus\":\"hwplefaxvx\",\"controls\":[{},{}]},{\"offerGuid\":\"tg\",\"certificationStatus\":\"nzeyqxtjj\",\"ingestionStatus\":\"qlqhycavodg\",\"controls\":[{},{}]},{\"offerGuid\":\"ee\",\"certificationStatus\":\"ieknl\",\"ingestionStatus\":\"riaa\",\"controls\":[{},{},{},{}]},{\"offerGuid\":\"gy\",\"certificationStatus\":\"qfby\",\"ingestionStatus\":\"rfgi\",\"controls\":[{},{},{}]}],\"provisioningState\":\"Succeeded\"},\"id\":\"ocqwogfnzjvus\",\"name\":\"zldmozuxy\",\"type\":\"fsbtkad\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AppComplianceAutomationManager manager = AppComplianceAutomationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ReportResource response = manager.reports()
            .update("ncj",
                new ReportResourcePatch().withProperties(
                    new ReportPatchProperties().withTriggerTime(OffsetDateTime.parse("2021-05-20T17:35:10Z"))
                        .withTimeZone("zoggculapz")
                        .withResources(Arrays.asList(
                            new ResourceMetadata().withResourceId("pgogtqxepny")
                                .withResourceType("fuajly")
                                .withResourceKind("lvofqzhvfcibyfmo")
                                .withResourceOrigin(ResourceOrigin.AZURE)
                                .withAccountId("kjpvdwxf"),
                            new ResourceMetadata().withResourceId("wiivwzjbhyzsx")
                                .withResourceType("kambtrnegvmnvuqe")
                                .withResourceKind("lds")
                                .withResourceOrigin(ResourceOrigin.AWS)
                                .withAccountId("jbkkdmflvestmjl"),
                            new ResourceMetadata().withResourceId("rriloz")
                                .withResourceType("eewchpxlktw")
                                .withResourceKind("ziycslevufuztck")
                                .withResourceOrigin(ResourceOrigin.AZURE)
                                .withAccountId("tqedcgzulwm")))
                        .withOfferGuid("pzdm")
                        .withStorageInfo(new StorageInfo().withSubscriptionId("mldgxobfirc")
                            .withResourceGroup("pkc")
                            .withAccountName("yzriykhy")
                            .withLocation("fvjlboxqvkjlmx"))),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(OffsetDateTime.parse("2021-05-29T19:51:37Z"), response.properties().triggerTime());
        Assertions.assertEquals("iqyuvvfo", response.properties().timeZone());
        Assertions.assertEquals("p", response.properties().resources().get(0).resourceId());
        Assertions.assertEquals("qyikvy", response.properties().resources().get(0).resourceType());
        Assertions.assertEquals("uyav", response.properties().resources().get(0).resourceKind());
        Assertions.assertEquals(ResourceOrigin.AZURE, response.properties().resources().get(0).resourceOrigin());
        Assertions.assertEquals("ncstt", response.properties().resources().get(0).accountId());
        Assertions.assertEquals("xvd", response.properties().offerGuid());
        Assertions.assertEquals("xg", response.properties().storageInfo().subscriptionId());
        Assertions.assertEquals("oyxcdyuib", response.properties().storageInfo().resourceGroup());
        Assertions.assertEquals("fdn", response.properties().storageInfo().accountName());
        Assertions.assertEquals("ydvfvfcjnae", response.properties().storageInfo().location());
    }
}

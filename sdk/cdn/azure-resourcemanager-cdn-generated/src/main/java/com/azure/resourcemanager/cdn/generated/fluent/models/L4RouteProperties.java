// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.cdn.generated.models.ActivatedResourceReference;
import com.azure.resourcemanager.cdn.generated.models.AfdProvisioningState;
import com.azure.resourcemanager.cdn.generated.models.DeploymentStatus;
import com.azure.resourcemanager.cdn.generated.models.EnabledState;
import com.azure.resourcemanager.cdn.generated.models.L4RouteBaseSettings;
import com.azure.resourcemanager.cdn.generated.models.L4RouteUpdatePropertiesParameters;
import com.azure.resourcemanager.cdn.generated.models.ResourceReference;
import com.azure.resourcemanager.cdn.generated.models.RoutingMethod;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The JSON object that contains the properties of the Routes to create. */
@Fluent
public final class L4RouteProperties extends L4RouteUpdatePropertiesParameters {
    /*
     * Provisioning status
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private AfdProvisioningState provisioningState;

    /*
     * The deploymentStatus property.
     */
    @JsonProperty(value = "deploymentStatus", access = JsonProperty.Access.WRITE_ONLY)
    private DeploymentStatus deploymentStatus;

    /** Creates an instance of L4RouteProperties class. */
    public L4RouteProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning status.
     *
     * @return the provisioningState value.
     */
    public AfdProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the deploymentStatus property: The deploymentStatus property.
     *
     * @return the deploymentStatus value.
     */
    public DeploymentStatus deploymentStatus() {
        return this.deploymentStatus;
    }

    /** {@inheritDoc} */
    @Override
    public L4RouteProperties withRoutingMethod(RoutingMethod routingMethod) {
        super.withRoutingMethod(routingMethod);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public L4RouteProperties withCustomDomains(List<ActivatedResourceReference> customDomains) {
        super.withCustomDomains(customDomains);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public L4RouteProperties withOriginGroup(ResourceReference originGroup) {
        super.withOriginGroup(originGroup);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public L4RouteProperties withL4RouteBaseSettings(L4RouteBaseSettings l4RouteBaseSettings) {
        super.withL4RouteBaseSettings(l4RouteBaseSettings);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public L4RouteProperties withEnabledState(EnabledState enabledState) {
        super.withEnabledState(enabledState);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

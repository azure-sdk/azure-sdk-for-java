// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Request body for Migrate operation.
 */
@Fluent
public final class CdnMigrationToAfdParameters implements JsonSerializable<CdnMigrationToAfdParameters> {
    /*
     * Sku for the migration
     */
    private Sku sku;

    /*
     * A name map between classic CDN endpoints and AFD Premium/Standard endpoints.
     */
    private List<MigrationEndpointMapping> migrationEndpointMappings;

    /**
     * Creates an instance of CdnMigrationToAfdParameters class.
     */
    public CdnMigrationToAfdParameters() {
    }

    /**
     * Get the sku property: Sku for the migration.
     * 
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Sku for the migration.
     * 
     * @param sku the sku value to set.
     * @return the CdnMigrationToAfdParameters object itself.
     */
    public CdnMigrationToAfdParameters withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the migrationEndpointMappings property: A name map between classic CDN endpoints and AFD Premium/Standard
     * endpoints.
     * 
     * @return the migrationEndpointMappings value.
     */
    public List<MigrationEndpointMapping> migrationEndpointMappings() {
        return this.migrationEndpointMappings;
    }

    /**
     * Set the migrationEndpointMappings property: A name map between classic CDN endpoints and AFD Premium/Standard
     * endpoints.
     * 
     * @param migrationEndpointMappings the migrationEndpointMappings value to set.
     * @return the CdnMigrationToAfdParameters object itself.
     */
    public CdnMigrationToAfdParameters
        withMigrationEndpointMappings(List<MigrationEndpointMapping> migrationEndpointMappings) {
        this.migrationEndpointMappings = migrationEndpointMappings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property sku in model CdnMigrationToAfdParameters"));
        } else {
            sku().validate();
        }
        if (migrationEndpointMappings() != null) {
            migrationEndpointMappings().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CdnMigrationToAfdParameters.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("sku", this.sku);
        jsonWriter.writeArrayField("migrationEndpointMappings", this.migrationEndpointMappings,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CdnMigrationToAfdParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CdnMigrationToAfdParameters if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CdnMigrationToAfdParameters.
     */
    public static CdnMigrationToAfdParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CdnMigrationToAfdParameters deserializedCdnMigrationToAfdParameters = new CdnMigrationToAfdParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sku".equals(fieldName)) {
                    deserializedCdnMigrationToAfdParameters.sku = Sku.fromJson(reader);
                } else if ("migrationEndpointMappings".equals(fieldName)) {
                    List<MigrationEndpointMapping> migrationEndpointMappings
                        = reader.readArray(reader1 -> MigrationEndpointMapping.fromJson(reader1));
                    deserializedCdnMigrationToAfdParameters.migrationEndpointMappings = migrationEndpointMappings;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCdnMigrationToAfdParameters;
        });
    }
}

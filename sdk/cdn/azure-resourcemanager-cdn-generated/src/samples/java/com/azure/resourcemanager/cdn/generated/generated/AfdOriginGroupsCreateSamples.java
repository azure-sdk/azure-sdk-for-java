// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cdn.generated.generated;

import com.azure.resourcemanager.cdn.generated.models.HealthProbeParameters;
import com.azure.resourcemanager.cdn.generated.models.HealthProbeRequestType;
import com.azure.resourcemanager.cdn.generated.models.LoadBalancingSettingsParameters;
import com.azure.resourcemanager.cdn.generated.models.ProbeProtocol;
import com.azure.resourcemanager.cdn.generated.models.RouteType;
import com.azure.resourcemanager.cdn.generated.models.SessionAffinityType;

/** Samples for AfdOriginGroups Create. */
public final class AfdOriginGroupsCreateSamples {
    /*
     * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/preview/2023-04-11-preview/examples/AFDOriginGroups_Create.json
     */
    /**
     * Sample code: AFDOriginGroups_Create.
     *
     * @param manager Entry point to CdnManager.
     */
    public static void aFDOriginGroupsCreate(com.azure.resourcemanager.cdn.generated.CdnManager manager) {
        manager
            .afdOriginGroups()
            .define("origingroup1")
            .withExistingProfile("RG", "profile1")
            .withLoadBalancingSettings(
                new LoadBalancingSettingsParameters()
                    .withSampleSize(3)
                    .withSuccessfulSamplesRequired(3)
                    .withAdditionalLatencyInMilliseconds(1000))
            .withHealthProbeSettings(
                new HealthProbeParameters()
                    .withProbePath("/path2")
                    .withProbeRequestType(HealthProbeRequestType.NOT_SET)
                    .withProbeProtocol(ProbeProtocol.NOT_SET)
                    .withProbePort(2050)
                    .withProbeIntervalInSeconds(10))
            .withTrafficRestorationTimeToHealedOrNewEndpointsInMinutes(5)
            .withSessionAffinityType(SessionAffinityType.SOURCE_IP)
            .withRouteType(RouteType.L4ROUTE)
            .create();
    }
}

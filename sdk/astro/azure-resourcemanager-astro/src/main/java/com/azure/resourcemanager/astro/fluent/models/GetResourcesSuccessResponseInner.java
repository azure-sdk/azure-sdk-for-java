// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.astro.models.PageInfo;
import com.azure.resourcemanager.astro.models.PartnerResource;
import java.io.IOException;
import java.util.List;

/**
 * Response model for get resources API.
 */
@Fluent
public final class GetResourcesSuccessResponseInner implements JsonSerializable<GetResourcesSuccessResponseInner> {
    /*
     * Resource object array
     */
    private List<PartnerResource> resources;

    /*
     * page details
     */
    private PageInfo pageInfo;

    /**
     * Creates an instance of GetResourcesSuccessResponseInner class.
     */
    public GetResourcesSuccessResponseInner() {
    }

    /**
     * Get the resources property: Resource object array.
     * 
     * @return the resources value.
     */
    public List<PartnerResource> resources() {
        return this.resources;
    }

    /**
     * Set the resources property: Resource object array.
     * 
     * @param resources the resources value to set.
     * @return the GetResourcesSuccessResponseInner object itself.
     */
    public GetResourcesSuccessResponseInner withResources(List<PartnerResource> resources) {
        this.resources = resources;
        return this;
    }

    /**
     * Get the pageInfo property: page details.
     * 
     * @return the pageInfo value.
     */
    public PageInfo pageInfo() {
        return this.pageInfo;
    }

    /**
     * Set the pageInfo property: page details.
     * 
     * @param pageInfo the pageInfo value to set.
     * @return the GetResourcesSuccessResponseInner object itself.
     */
    public GetResourcesSuccessResponseInner withPageInfo(PageInfo pageInfo) {
        this.pageInfo = pageInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resources() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property resources in model GetResourcesSuccessResponseInner"));
        } else {
            resources().forEach(e -> e.validate());
        }
        if (pageInfo() != null) {
            pageInfo().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GetResourcesSuccessResponseInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("resources", this.resources, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("pageInfo", this.pageInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetResourcesSuccessResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetResourcesSuccessResponseInner if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GetResourcesSuccessResponseInner.
     */
    public static GetResourcesSuccessResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetResourcesSuccessResponseInner deserializedGetResourcesSuccessResponseInner
                = new GetResourcesSuccessResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resources".equals(fieldName)) {
                    List<PartnerResource> resources = reader.readArray(reader1 -> PartnerResource.fromJson(reader1));
                    deserializedGetResourcesSuccessResponseInner.resources = resources;
                } else if ("pageInfo".equals(fieldName)) {
                    deserializedGetResourcesSuccessResponseInner.pageInfo = PageInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetResourcesSuccessResponseInner;
        });
    }
}

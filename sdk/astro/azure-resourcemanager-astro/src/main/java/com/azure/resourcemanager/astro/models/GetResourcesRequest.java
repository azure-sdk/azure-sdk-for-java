// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Request model for get resources API.
 */
@Fluent
public final class GetResourcesRequest implements JsonSerializable<GetResourcesRequest> {
    /*
     * parameters to filter results
     */
    private Map<String, String> searchParamsDictionary;

    /*
     * page details
     */
    private PageInfo pageInfo;

    /**
     * Creates an instance of GetResourcesRequest class.
     */
    public GetResourcesRequest() {
    }

    /**
     * Get the searchParamsDictionary property: parameters to filter results.
     * 
     * @return the searchParamsDictionary value.
     */
    public Map<String, String> searchParamsDictionary() {
        return this.searchParamsDictionary;
    }

    /**
     * Set the searchParamsDictionary property: parameters to filter results.
     * 
     * @param searchParamsDictionary the searchParamsDictionary value to set.
     * @return the GetResourcesRequest object itself.
     */
    public GetResourcesRequest withSearchParamsDictionary(Map<String, String> searchParamsDictionary) {
        this.searchParamsDictionary = searchParamsDictionary;
        return this;
    }

    /**
     * Get the pageInfo property: page details.
     * 
     * @return the pageInfo value.
     */
    public PageInfo pageInfo() {
        return this.pageInfo;
    }

    /**
     * Set the pageInfo property: page details.
     * 
     * @param pageInfo the pageInfo value to set.
     * @return the GetResourcesRequest object itself.
     */
    public GetResourcesRequest withPageInfo(PageInfo pageInfo) {
        this.pageInfo = pageInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (pageInfo() != null) {
            pageInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("searchParamsDictionary", this.searchParamsDictionary,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("pageInfo", this.pageInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetResourcesRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetResourcesRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the GetResourcesRequest.
     */
    public static GetResourcesRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetResourcesRequest deserializedGetResourcesRequest = new GetResourcesRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("searchParamsDictionary".equals(fieldName)) {
                    Map<String, String> searchParamsDictionary = reader.readMap(reader1 -> reader1.getString());
                    deserializedGetResourcesRequest.searchParamsDictionary = searchParamsDictionary;
                } else if ("pageInfo".equals(fieldName)) {
                    deserializedGetResourcesRequest.pageInfo = PageInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetResourcesRequest;
        });
    }
}

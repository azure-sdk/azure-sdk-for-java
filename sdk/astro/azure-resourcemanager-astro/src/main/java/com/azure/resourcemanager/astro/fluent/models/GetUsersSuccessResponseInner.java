// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.astro.models.PageInfo;
import com.azure.resourcemanager.astro.models.User;
import java.io.IOException;
import java.util.List;

/**
 * Response model for get users API.
 */
@Fluent
public final class GetUsersSuccessResponseInner implements JsonSerializable<GetUsersSuccessResponseInner> {
    /*
     * User object array
     */
    private List<User> users;

    /*
     * page details
     */
    private PageInfo pageInfo;

    /**
     * Creates an instance of GetUsersSuccessResponseInner class.
     */
    public GetUsersSuccessResponseInner() {
    }

    /**
     * Get the users property: User object array.
     * 
     * @return the users value.
     */
    public List<User> users() {
        return this.users;
    }

    /**
     * Set the users property: User object array.
     * 
     * @param users the users value to set.
     * @return the GetUsersSuccessResponseInner object itself.
     */
    public GetUsersSuccessResponseInner withUsers(List<User> users) {
        this.users = users;
        return this;
    }

    /**
     * Get the pageInfo property: page details.
     * 
     * @return the pageInfo value.
     */
    public PageInfo pageInfo() {
        return this.pageInfo;
    }

    /**
     * Set the pageInfo property: page details.
     * 
     * @param pageInfo the pageInfo value to set.
     * @return the GetUsersSuccessResponseInner object itself.
     */
    public GetUsersSuccessResponseInner withPageInfo(PageInfo pageInfo) {
        this.pageInfo = pageInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (users() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property users in model GetUsersSuccessResponseInner"));
        } else {
            users().forEach(e -> e.validate());
        }
        if (pageInfo() != null) {
            pageInfo().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GetUsersSuccessResponseInner.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("users", this.users, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("pageInfo", this.pageInfo);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetUsersSuccessResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetUsersSuccessResponseInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GetUsersSuccessResponseInner.
     */
    public static GetUsersSuccessResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GetUsersSuccessResponseInner deserializedGetUsersSuccessResponseInner = new GetUsersSuccessResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("users".equals(fieldName)) {
                    List<User> users = reader.readArray(reader1 -> User.fromJson(reader1));
                    deserializedGetUsersSuccessResponseInner.users = users;
                } else if ("pageInfo".equals(fieldName)) {
                    deserializedGetUsersSuccessResponseInner.pageInfo = PageInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGetUsersSuccessResponseInner;
        });
    }
}

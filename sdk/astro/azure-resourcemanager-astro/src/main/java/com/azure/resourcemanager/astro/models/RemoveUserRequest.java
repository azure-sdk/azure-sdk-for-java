// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.astro.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Request model for manage roles API.
 */
@Fluent
public final class RemoveUserRequest implements JsonSerializable<RemoveUserRequest> {
    /*
     * User object
     */
    private User principal;

    /*
     * Additional data for deleting user
     */
    private Map<String, String> additionalData;

    /**
     * Creates an instance of RemoveUserRequest class.
     */
    public RemoveUserRequest() {
    }

    /**
     * Get the principal property: User object.
     * 
     * @return the principal value.
     */
    public User principal() {
        return this.principal;
    }

    /**
     * Set the principal property: User object.
     * 
     * @param principal the principal value to set.
     * @return the RemoveUserRequest object itself.
     */
    public RemoveUserRequest withPrincipal(User principal) {
        this.principal = principal;
        return this;
    }

    /**
     * Get the additionalData property: Additional data for deleting user.
     * 
     * @return the additionalData value.
     */
    public Map<String, String> additionalData() {
        return this.additionalData;
    }

    /**
     * Set the additionalData property: Additional data for deleting user.
     * 
     * @param additionalData the additionalData value to set.
     * @return the RemoveUserRequest object itself.
     */
    public RemoveUserRequest withAdditionalData(Map<String, String> additionalData) {
        this.additionalData = additionalData;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (principal() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property principal in model RemoveUserRequest"));
        } else {
            principal().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RemoveUserRequest.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("principal", this.principal);
        jsonWriter.writeMapField("additionalData", this.additionalData,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RemoveUserRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RemoveUserRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RemoveUserRequest.
     */
    public static RemoveUserRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RemoveUserRequest deserializedRemoveUserRequest = new RemoveUserRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("principal".equals(fieldName)) {
                    deserializedRemoveUserRequest.principal = User.fromJson(reader);
                } else if ("additionalData".equals(fieldName)) {
                    Map<String, String> additionalData = reader.readMap(reader1 -> reader1.getString());
                    deserializedRemoveUserRequest.additionalData = additionalData;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRemoveUserRequest;
        });
    }
}

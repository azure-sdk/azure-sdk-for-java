// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the Query Input Parameter properties in alerts template.
 */
@Fluent
public final class AlertTemplateQueryInputParameter implements JsonSerializable<AlertTemplateQueryInputParameter> {
    /*
     * Name of the Query Input Parameter
     */
    private String name;

    /*
     * Type of the Query Input Parameter
     */
    private AlertTemplateParameterType type;

    /*
     * Description of the Query Input Parameter
     */
    private String description;

    /*
     * Default Value of the Query Input Parameter
     */
    private String defaultValue;

    /*
     * Log Analytics query associated with the parameter.
     */
    private String laQuery;

    /*
     * Selection mode for the parameter.
     */
    private AlertTemplateSelectionMode selectionMode;

    /*
     * Display Name of the Query Input Parameter.
     */
    private String displayName;

    /**
     * Creates an instance of AlertTemplateQueryInputParameter class.
     */
    public AlertTemplateQueryInputParameter() {
    }

    /**
     * Get the name property: Name of the Query Input Parameter.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the Query Input Parameter.
     * 
     * @param name the name value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Type of the Query Input Parameter.
     * 
     * @return the type value.
     */
    public AlertTemplateParameterType type() {
        return this.type;
    }

    /**
     * Set the type property: Type of the Query Input Parameter.
     * 
     * @param type the type value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withType(AlertTemplateParameterType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the description property: Description of the Query Input Parameter.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the Query Input Parameter.
     * 
     * @param description the description value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the defaultValue property: Default Value of the Query Input Parameter.
     * 
     * @return the defaultValue value.
     */
    public String defaultValue() {
        return this.defaultValue;
    }

    /**
     * Set the defaultValue property: Default Value of the Query Input Parameter.
     * 
     * @param defaultValue the defaultValue value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }

    /**
     * Get the laQuery property: Log Analytics query associated with the parameter.
     * 
     * @return the laQuery value.
     */
    public String laQuery() {
        return this.laQuery;
    }

    /**
     * Set the laQuery property: Log Analytics query associated with the parameter.
     * 
     * @param laQuery the laQuery value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withLaQuery(String laQuery) {
        this.laQuery = laQuery;
        return this;
    }

    /**
     * Get the selectionMode property: Selection mode for the parameter.
     * 
     * @return the selectionMode value.
     */
    public AlertTemplateSelectionMode selectionMode() {
        return this.selectionMode;
    }

    /**
     * Set the selectionMode property: Selection mode for the parameter.
     * 
     * @param selectionMode the selectionMode value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withSelectionMode(AlertTemplateSelectionMode selectionMode) {
        this.selectionMode = selectionMode;
        return this;
    }

    /**
     * Get the displayName property: Display Name of the Query Input Parameter.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display Name of the Query Input Parameter.
     * 
     * @param displayName the displayName value to set.
     * @return the AlertTemplateQueryInputParameter object itself.
     */
    public AlertTemplateQueryInputParameter withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("defaultValue", this.defaultValue);
        jsonWriter.writeStringField("laQuery", this.laQuery);
        jsonWriter.writeStringField("selectionMode", this.selectionMode == null ? null : this.selectionMode.toString());
        jsonWriter.writeStringField("displayName", this.displayName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AlertTemplateQueryInputParameter from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AlertTemplateQueryInputParameter if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AlertTemplateQueryInputParameter.
     */
    public static AlertTemplateQueryInputParameter fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AlertTemplateQueryInputParameter deserializedAlertTemplateQueryInputParameter
                = new AlertTemplateQueryInputParameter();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.type
                        = AlertTemplateParameterType.fromString(reader.getString());
                } else if ("description".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.description = reader.getString();
                } else if ("defaultValue".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.defaultValue = reader.getString();
                } else if ("laQuery".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.laQuery = reader.getString();
                } else if ("selectionMode".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.selectionMode
                        = AlertTemplateSelectionMode.fromString(reader.getString());
                } else if ("displayName".equals(fieldName)) {
                    deserializedAlertTemplateQueryInputParameter.displayName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAlertTemplateQueryInputParameter;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.Context;
import com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.fluent.models.AlertInner;
import com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.models.Alert;
import com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.models.AlertRuleProperties;
import com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.models.WorkloadMonitorProvisioningState;
import java.util.Collections;
import java.util.List;

public final class AlertImpl implements Alert, Alert.Definition {
    private AlertInner innerObject;

    private final com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.WorkloadsManager serviceManager;

    AlertImpl(AlertInner innerObject,
        com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.WorkloadsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ManagementError errors() {
        return this.innerModel().errors();
    }

    public String alertRuleResourceId() {
        return this.innerModel().alertRuleResourceId();
    }

    public String templateName() {
        return this.innerModel().templateName();
    }

    public String providerType() {
        return this.innerModel().providerType();
    }

    public List<String> providerNames() {
        List<String> inner = this.innerModel().providerNames();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public AlertRuleProperties alertRuleProperties() {
        return this.innerModel().alertRuleProperties();
    }

    public WorkloadMonitorProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public AlertInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.WorkloadsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String monitorName;

    private String alertName;

    public AlertImpl withExistingMonitor(String resourceGroupName, String monitorName) {
        this.resourceGroupName = resourceGroupName;
        this.monitorName = monitorName;
        return this;
    }

    public Alert create() {
        this.innerObject = serviceManager.serviceClient()
            .getAlerts()
            .create(resourceGroupName, monitorName, alertName, this.innerModel(), Context.NONE);
        return this;
    }

    public Alert create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAlerts()
            .create(resourceGroupName, monitorName, alertName, this.innerModel(), context);
        return this;
    }

    AlertImpl(String name,
        com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.WorkloadsManager serviceManager) {
        this.innerObject = new AlertInner();
        this.serviceManager = serviceManager;
        this.alertName = name;
    }

    public Alert refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAlerts()
            .getWithResponse(resourceGroupName, monitorName, alertName, Context.NONE)
            .getValue();
        return this;
    }

    public Alert refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAlerts()
            .getWithResponse(resourceGroupName, monitorName, alertName, context)
            .getValue();
        return this;
    }

    public AlertImpl withTemplateName(String templateName) {
        this.innerModel().withTemplateName(templateName);
        return this;
    }

    public AlertImpl withProviderType(String providerType) {
        this.innerModel().withProviderType(providerType);
        return this;
    }

    public AlertImpl withProviderNames(List<String> providerNames) {
        this.innerModel().withProviderNames(providerNames);
        return this;
    }

    public AlertImpl withAlertRuleProperties(AlertRuleProperties alertRuleProperties) {
        this.innerModel().withAlertRuleProperties(alertRuleProperties);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Configuration details of app service plan.
 */
@Fluent
public final class AppServicePlanConfiguration implements JsonSerializable<AppServicePlanConfiguration> {
    /*
     * The App Service plan tier.
     */
    private AppServicePlanTier tier;

    /*
     * The number of workers in app service plan. If this is not set or set to 0, auto scale will be configured for the
     * app service plan, otherwise, instance count is set to this number.
     */
    private Integer capacity;

    /**
     * Creates an instance of AppServicePlanConfiguration class.
     */
    public AppServicePlanConfiguration() {
    }

    /**
     * Get the tier property: The App Service plan tier.
     * 
     * @return the tier value.
     */
    public AppServicePlanTier tier() {
        return this.tier;
    }

    /**
     * Set the tier property: The App Service plan tier.
     * 
     * @param tier the tier value to set.
     * @return the AppServicePlanConfiguration object itself.
     */
    public AppServicePlanConfiguration withTier(AppServicePlanTier tier) {
        this.tier = tier;
        return this;
    }

    /**
     * Get the capacity property: The number of workers in app service plan. If this is not set or set to 0, auto scale
     * will be configured for the app service plan, otherwise, instance count is set to this number.
     * 
     * @return the capacity value.
     */
    public Integer capacity() {
        return this.capacity;
    }

    /**
     * Set the capacity property: The number of workers in app service plan. If this is not set or set to 0, auto scale
     * will be configured for the app service plan, otherwise, instance count is set to this number.
     * 
     * @param capacity the capacity value to set.
     * @return the AppServicePlanConfiguration object itself.
     */
    public AppServicePlanConfiguration withCapacity(Integer capacity) {
        this.capacity = capacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("tier", this.tier == null ? null : this.tier.toString());
        jsonWriter.writeNumberField("capacity", this.capacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AppServicePlanConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AppServicePlanConfiguration if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AppServicePlanConfiguration.
     */
    public static AppServicePlanConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AppServicePlanConfiguration deserializedAppServicePlanConfiguration = new AppServicePlanConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tier".equals(fieldName)) {
                    deserializedAppServicePlanConfiguration.tier = AppServicePlanTier.fromString(reader.getString());
                } else if ("capacity".equals(fieldName)) {
                    deserializedAppServicePlanConfiguration.capacity = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAppServicePlanConfiguration;
        });
    }
}

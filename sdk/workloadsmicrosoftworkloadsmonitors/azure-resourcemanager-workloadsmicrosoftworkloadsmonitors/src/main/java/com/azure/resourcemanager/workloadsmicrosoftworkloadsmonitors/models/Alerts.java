// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.workloadsmicrosoftworkloadsmonitors.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Alerts.
 */
public interface Alerts {
    /**
     * Gets a list of alerts in the specified SAP monitor. The operations returns various properties of each alerts.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of alerts in the specified SAP monitor as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Alert> list(String resourceGroupName, String monitorName);

    /**
     * Gets a list of alerts in the specified SAP monitor. The operations returns various properties of each alerts.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of alerts in the specified SAP monitor as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Alert> list(String resourceGroupName, String monitorName, Context context);

    /**
     * Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param alertName Name of the SAP monitor alert resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of an alert for the specified subscription, resource group, SAP monitor name, and resource
     * name along with {@link Response}.
     */
    Response<Alert> getWithResponse(String resourceGroupName, String monitorName, String alertName, Context context);

    /**
     * Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param alertName Name of the SAP monitor alert resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of an alert for the specified subscription, resource group, SAP monitor name, and resource
     * name.
     */
    Alert get(String resourceGroupName, String monitorName, String alertName);

    /**
     * Deletes an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param alertName Name of the SAP monitor alert resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String monitorName, String alertName);

    /**
     * Deletes an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the SAP monitor resource.
     * @param alertName Name of the SAP monitor alert resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String monitorName, String alertName, Context context);

    /**
     * Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of an alert for the specified subscription, resource group, SAP monitor name, and resource
     * name along with {@link Response}.
     */
    Alert getById(String id);

    /**
     * Gets properties of an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties of an alert for the specified subscription, resource group, SAP monitor name, and resource
     * name along with {@link Response}.
     */
    Response<Alert> getByIdWithResponse(String id, Context context);

    /**
     * Deletes an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes an alert for the specified subscription, resource group, SAP monitor name, and resource name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Alert resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Alert definition.
     */
    Alert.DefinitionStages.Blank define(String name);
}

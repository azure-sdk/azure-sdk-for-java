// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.developer.loadtesting.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public final class ListsTheMetricValuesForALoadTestRunTests extends LoadTestingClientTestBase {
    @Test
    @Disabled
    public void testListsTheMetricValuesForALoadTestRunTests() {
        RequestOptions requestOptions =
                new RequestOptions()
                        .addQueryParam("aggregation", "Average")
                        .setBody(
                                BinaryData.fromString(
                                        "{\"filters\":[{\"name\":\"SamplerName\",\"values\":[\"HTTP Request\"]}]}"))
                        .addQueryParam("interval", "PT1H");
        Response<BinaryData> response =
                testRunClient.metricsWithResponse(
                        "12316678-1234-1234-1234-122451189012",
                        "ActiveThreads",
                        "JMeterLoadTestRunMetrics",
                        "Data",
                        "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z",
                        requestOptions);
        Assertions.assertEquals(200, response.getStatusCode());
        Assertions.assertEquals(
                BinaryData.fromString(
                                "{\"interval\":\"PT1H\",\"namespace\":\"JMeterLoadTestRunMetrics\",\"timespan\":\"2022-09-24T19:00:40Z/2022-09-25T19:28:40Z\",\"value\":{\"name\":{\"localizedValue\":\"Virtual Users\",\"value\":\"ActiveThreads\"},\"displayDescription\":\"Virtual Users\",\"id\":\"edf1875a-7af2-4c87-be05-02f64010244d/ActiveThreads\",\"timeseries\":[{\"data\":[{\"average\":null,\"count\":12.790277777777778,\"maximum\":null,\"minimum\":null,\"percentile90\":null,\"percentile95\":null,\"percentile99\":null,\"timeStamp\":\"9/24/2022 7:00:00 PM\",\"total\":null},{\"average\":null,\"count\":21.7725,\"maximum\":null,\"minimum\":null,\"percentile90\":null,\"percentile95\":null,\"percentile99\":null,\"timeStamp\":\"9/24/2022 8:00:00 PM\",\"total\":null},{\"average\":null,\"count\":21.77888888888889,\"maximum\":null,\"minimum\":null,\"percentile90\":null,\"percentile95\":null,\"percentile99\":null,\"timeStamp\":\"9/24/2022 9:00:00 PM\",\"total\":null},{\"average\":null,\"count\":19.93777777777778,\"maximum\":null,\"minimum\":null,\"percentile90\":null,\"percentile95\":null,\"percentile99\":null,\"timeStamp\":\"9/24/2022 10:00:00 PM\",\"total\":null}],\"metadatavalues\":[{\"name\":{\"localizedValue\":\"Sampler Name\",\"value\":\"SamplerName\"},\"value\":\"HTTP Request\"}]}],\"unit\":\"Count\"}}")
                        .toObject(Object.class),
                response.getValue().toObject(Object.class));
    }
}

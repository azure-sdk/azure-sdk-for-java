// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtestservice.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Check Quota Availability Response properties. */
@Fluent
public final class CheckQuotaAvailabilityResponseProperties {
    /*
     * true if Quota is Available, else false.
     */
    @JsonProperty(value = "isAvailable")
    private Boolean isAvailable;

    /*
     * availability Status of the quota bucket.
     */
    @JsonProperty(value = "availabilityStatus")
    private String availabilityStatus;

    /**
     * Get the isAvailable property: true if Quota is Available, else false.
     *
     * @return the isAvailable value.
     */
    public Boolean isAvailable() {
        return this.isAvailable;
    }

    /**
     * Set the isAvailable property: true if Quota is Available, else false.
     *
     * @param isAvailable the isAvailable value to set.
     * @return the CheckQuotaAvailabilityResponseProperties object itself.
     */
    public CheckQuotaAvailabilityResponseProperties withIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
        return this;
    }

    /**
     * Get the availabilityStatus property: availability Status of the quota bucket.
     *
     * @return the availabilityStatus value.
     */
    public String availabilityStatus() {
        return this.availabilityStatus;
    }

    /**
     * Set the availabilityStatus property: availability Status of the quota bucket.
     *
     * @param availabilityStatus the availabilityStatus value to set.
     * @return the CheckQuotaAvailabilityResponseProperties object itself.
     */
    public CheckQuotaAvailabilityResponseProperties withAvailabilityStatus(String availabilityStatus) {
        this.availabilityStatus = availabilityStatus;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

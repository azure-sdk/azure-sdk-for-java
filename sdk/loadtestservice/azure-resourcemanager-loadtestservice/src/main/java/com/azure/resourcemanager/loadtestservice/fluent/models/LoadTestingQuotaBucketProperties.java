// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.loadtestservice.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.loadtestservice.models.QuotaBucketRequestPropertiesDimensions;
import com.fasterxml.jackson.annotation.JsonProperty;

/** New quota request request properties. */
@Fluent
public final class LoadTestingQuotaBucketProperties {
    /*
     * Current quota usage of the quota bucket.
     */
    @JsonProperty(value = "currentUsage")
    private Integer currentUsage;

    /*
     * Current quota limit of the quota bucket.
     */
    @JsonProperty(value = "currentQuota")
    private Integer currentQuota;

    /*
     * New quota limit of the quota bucket.
     */
    @JsonProperty(value = "newQuota")
    private Integer newQuota;

    /*
     * Dimensions for new quota request.
     */
    @JsonProperty(value = "dimensions")
    private QuotaBucketRequestPropertiesDimensions loadTestingQuotaBucketDimensions;

    /** Creates an instance of LoadTestingQuotaBucketProperties class. */
    public LoadTestingQuotaBucketProperties() {
    }

    /**
     * Get the currentUsage property: Current quota usage of the quota bucket.
     *
     * @return the currentUsage value.
     */
    public Integer currentUsage() {
        return this.currentUsage;
    }

    /**
     * Set the currentUsage property: Current quota usage of the quota bucket.
     *
     * @param currentUsage the currentUsage value to set.
     * @return the LoadTestingQuotaBucketProperties object itself.
     */
    public LoadTestingQuotaBucketProperties withCurrentUsage(Integer currentUsage) {
        this.currentUsage = currentUsage;
        return this;
    }

    /**
     * Get the currentQuota property: Current quota limit of the quota bucket.
     *
     * @return the currentQuota value.
     */
    public Integer currentQuota() {
        return this.currentQuota;
    }

    /**
     * Set the currentQuota property: Current quota limit of the quota bucket.
     *
     * @param currentQuota the currentQuota value to set.
     * @return the LoadTestingQuotaBucketProperties object itself.
     */
    public LoadTestingQuotaBucketProperties withCurrentQuota(Integer currentQuota) {
        this.currentQuota = currentQuota;
        return this;
    }

    /**
     * Get the newQuota property: New quota limit of the quota bucket.
     *
     * @return the newQuota value.
     */
    public Integer newQuota() {
        return this.newQuota;
    }

    /**
     * Set the newQuota property: New quota limit of the quota bucket.
     *
     * @param newQuota the newQuota value to set.
     * @return the LoadTestingQuotaBucketProperties object itself.
     */
    public LoadTestingQuotaBucketProperties withNewQuota(Integer newQuota) {
        this.newQuota = newQuota;
        return this;
    }

    /**
     * Get the loadTestingQuotaBucketDimensions property: Dimensions for new quota request.
     *
     * @return the loadTestingQuotaBucketDimensions value.
     */
    public QuotaBucketRequestPropertiesDimensions loadTestingQuotaBucketDimensions() {
        return this.loadTestingQuotaBucketDimensions;
    }

    /**
     * Set the loadTestingQuotaBucketDimensions property: Dimensions for new quota request.
     *
     * @param loadTestingQuotaBucketDimensions the loadTestingQuotaBucketDimensions value to set.
     * @return the LoadTestingQuotaBucketProperties object itself.
     */
    public LoadTestingQuotaBucketProperties withLoadTestingQuotaBucketDimensions(
        QuotaBucketRequestPropertiesDimensions loadTestingQuotaBucketDimensions) {
        this.loadTestingQuotaBucketDimensions = loadTestingQuotaBucketDimensions;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (loadTestingQuotaBucketDimensions() != null) {
            loadTestingQuotaBucketDimensions().validate();
        }
    }
}

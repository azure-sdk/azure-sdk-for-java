// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elastic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.elastic.models.ElasticOrganizationToAzureSubscriptionMappingResponseProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Azure Subscription ID to which the Organization of the logged in user belongs and gets billed into.
 */
@Fluent
public final class ElasticOrganizationToAzureSubscriptionMappingResponseInner {
    /*
     * The properties of Azure Subscription ID to which the Organization of the logged in user belongs and gets billed into.
     */
    @JsonProperty(value = "properties")
    private ElasticOrganizationToAzureSubscriptionMappingResponseProperties properties;

    /**
     * Creates an instance of ElasticOrganizationToAzureSubscriptionMappingResponseInner class.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseInner() {
    }

    /**
     * Get the properties property: The properties of Azure Subscription ID to which the Organization of the logged in
     * user belongs and gets billed into.
     * 
     * @return the properties value.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The properties of Azure Subscription ID to which the Organization of the logged in
     * user belongs and gets billed into.
     * 
     * @param properties the properties value to set.
     * @return the ElasticOrganizationToAzureSubscriptionMappingResponseInner object itself.
     */
    public ElasticOrganizationToAzureSubscriptionMappingResponseInner
        withProperties(ElasticOrganizationToAzureSubscriptionMappingResponseProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
    }
}

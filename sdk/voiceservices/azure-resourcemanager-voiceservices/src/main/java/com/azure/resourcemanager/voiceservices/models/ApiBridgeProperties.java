// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.voiceservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Configuration of the API Bridge.
 */
@Fluent
public final class ApiBridgeProperties implements JsonSerializable<ApiBridgeProperties> {
    /*
     * The activation state of the API Bridge for this Communications Gateway
     */
    private ApiBridgeActivationState configureApiBridge;

    /*
     * FQDNs for sending requests to the API Bridge endpoint
     */
    private List<String> endpointFqdns;

    /*
     * The allowed source IP addresses or CIDR ranges for accessing the API Bridge
     */
    private List<String> allowedAddressPrefixes;

    /**
     * Creates an instance of ApiBridgeProperties class.
     */
    public ApiBridgeProperties() {
    }

    /**
     * Get the configureApiBridge property: The activation state of the API Bridge for this Communications Gateway.
     * 
     * @return the configureApiBridge value.
     */
    public ApiBridgeActivationState configureApiBridge() {
        return this.configureApiBridge;
    }

    /**
     * Set the configureApiBridge property: The activation state of the API Bridge for this Communications Gateway.
     * 
     * @param configureApiBridge the configureApiBridge value to set.
     * @return the ApiBridgeProperties object itself.
     */
    public ApiBridgeProperties withConfigureApiBridge(ApiBridgeActivationState configureApiBridge) {
        this.configureApiBridge = configureApiBridge;
        return this;
    }

    /**
     * Get the endpointFqdns property: FQDNs for sending requests to the API Bridge endpoint.
     * 
     * @return the endpointFqdns value.
     */
    public List<String> endpointFqdns() {
        return this.endpointFqdns;
    }

    /**
     * Get the allowedAddressPrefixes property: The allowed source IP addresses or CIDR ranges for accessing the API
     * Bridge.
     * 
     * @return the allowedAddressPrefixes value.
     */
    public List<String> allowedAddressPrefixes() {
        return this.allowedAddressPrefixes;
    }

    /**
     * Set the allowedAddressPrefixes property: The allowed source IP addresses or CIDR ranges for accessing the API
     * Bridge.
     * 
     * @param allowedAddressPrefixes the allowedAddressPrefixes value to set.
     * @return the ApiBridgeProperties object itself.
     */
    public ApiBridgeProperties withAllowedAddressPrefixes(List<String> allowedAddressPrefixes) {
        this.allowedAddressPrefixes = allowedAddressPrefixes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("configureApiBridge",
            this.configureApiBridge == null ? null : this.configureApiBridge.toString());
        jsonWriter.writeArrayField("allowedAddressPrefixes", this.allowedAddressPrefixes,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiBridgeProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiBridgeProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiBridgeProperties.
     */
    public static ApiBridgeProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiBridgeProperties deserializedApiBridgeProperties = new ApiBridgeProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("configureApiBridge".equals(fieldName)) {
                    deserializedApiBridgeProperties.configureApiBridge
                        = ApiBridgeActivationState.fromString(reader.getString());
                } else if ("endpointFqdns".equals(fieldName)) {
                    List<String> endpointFqdns = reader.readArray(reader1 -> reader1.getString());
                    deserializedApiBridgeProperties.endpointFqdns = endpointFqdns;
                } else if ("allowedAddressPrefixes".equals(fieldName)) {
                    List<String> allowedAddressPrefixes = reader.readArray(reader1 -> reader1.getString());
                    deserializedApiBridgeProperties.allowedAddressPrefixes = allowedAddressPrefixes;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiBridgeProperties;
        });
    }
}

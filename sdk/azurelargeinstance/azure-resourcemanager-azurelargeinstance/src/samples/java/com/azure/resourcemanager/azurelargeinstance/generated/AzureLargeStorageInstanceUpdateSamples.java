// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelargeinstance.generated;

import com.azure.resourcemanager.azurelargeinstance.models.AzureLargeStorageInstance;
import java.util.HashMap;
import java.util.Map;

/** Samples for AzureLargeStorageInstance Update. */
public final class AzureLargeStorageInstanceUpdateSamples {
    /*
     * x-ms-original-file: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/stable/2023-07-20/examples/AzureLargeStorageInstance_PatchTags.json
     */
    /**
     * Sample code: Update Tags field of an AzureLargeStorageStorage instance.
     *
     * @param manager Entry point to AzurelargeinstanceManager.
     */
    public static void updateTagsFieldOfAnAzureLargeStorageStorageInstance(
        com.azure.resourcemanager.azurelargeinstance.AzurelargeinstanceManager manager) {
        AzureLargeStorageInstance resource =
            manager
                .azureLargeStorageInstances()
                .getByResourceGroupWithResponse("myResourceGroup", "myALSInstance", com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().withTags(mapOf("testkey", "fakeTokenPlaceholder")).apply();
    }

    /*
     * x-ms-original-file: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/stable/2023-07-20/examples/AzureLargeStorageInstance_PatchTags_Delete.json
     */
    /**
     * Sample code: Delete Tags field of an AzureLargeStorageStorage instance.
     *
     * @param manager Entry point to AzurelargeinstanceManager.
     */
    public static void deleteTagsFieldOfAnAzureLargeStorageStorageInstance(
        com.azure.resourcemanager.azurelargeinstance.AzurelargeinstanceManager manager) {
        AzureLargeStorageInstance resource =
            manager
                .azureLargeStorageInstances()
                .getByResourceGroupWithResponse("myResourceGroup", "myALSInstance", com.azure.core.util.Context.NONE)
                .getValue();
        resource.update().withTags(mapOf()).apply();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelargeinstance.generated;

import com.azure.resourcemanager.azurelargeinstance.models.AzureLargeInstanceHardwareTypeNamesEnum;
import com.azure.resourcemanager.azurelargeinstance.models.AzureLargeInstanceSizeNamesEnum;
import com.azure.resourcemanager.azurelargeinstance.models.HardwareProfile;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for AzureLargeInstances Create.
 */
public final class AzureLargeInstancesCreateSamples {
    /*
     * x-ms-original-file:
     * specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2024-01-10-preview/
     * examples/AzureLargeInstance_Create.json
     */
    /**
     * Sample code: Create an Azure Large Instance if server is provisioned.
     * 
     * @param manager Entry point to AzureLargeInstanceManager.
     */
    public static void createAnAzureLargeInstanceIfServerIsProvisioned(
        com.azure.resourcemanager.azurelargeinstance.AzureLargeInstanceManager manager) {
        manager.azureLargeInstances().define("myALInstance").withRegion("westus2")
            .withExistingResourceGroup("myResourceGroup").withTags(mapOf("key", "fakeTokenPlaceholder"))
            .withHardwareProfile(
                new HardwareProfile().withHardwareType(AzureLargeInstanceHardwareTypeNamesEnum.CISCO_UCS)
                    .withAzureLargeInstanceSize(AzureLargeInstanceSizeNamesEnum.S72))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

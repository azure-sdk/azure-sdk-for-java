// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelargeinstance.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of AzureLargeStorageInstances. */
public interface AzureLargeStorageInstances {
    /**
     * Gets a list of Azure Large Storage Instances in the specified subscription.
     *
     * <p>Gets a list of AzureLargeStorageInstances in the specified subscription. The operations returns various
     * properties of each Azure LargeStorage instance.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of AzureLargeStorageInstances in the specified subscription as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AzureLargeStorageInstance> list();

    /**
     * Gets a list of Azure Large Storage Instances in the specified subscription.
     *
     * <p>Gets a list of AzureLargeStorageInstances in the specified subscription. The operations returns various
     * properties of each Azure LargeStorage instance.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of AzureLargeStorageInstances in the specified subscription as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AzureLargeStorageInstance> list(Context context);

    /**
     * Gets a list of Azure Large Storage Instances in the specified subscription and resource group.
     *
     * <p>Gets a list of AzureLargeStorageInstances in the specified subscription and resource group. The operations
     * returns various properties of each Azure LargeStorage instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of AzureLargeStorageInstances in the specified subscription and resource group as paginated
     *     response with {@link PagedIterable}.
     */
    PagedIterable<AzureLargeStorageInstance> listByResourceGroup(String resourceGroupName);

    /**
     * Gets a list of Azure Large Storage Instances in the specified subscription and resource group.
     *
     * <p>Gets a list of AzureLargeStorageInstances in the specified subscription and resource group. The operations
     * returns various properties of each Azure LargeStorage instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of AzureLargeStorageInstances in the specified subscription and resource group as paginated
     *     response with {@link PagedIterable}.
     */
    PagedIterable<AzureLargeStorageInstance> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets an Azure Large Storage Instance.
     *
     * <p>Gets an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureLargeStorageInstanceName Name of the AzureLargeStorageInstance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name
     *     along with {@link Response}.
     */
    Response<AzureLargeStorageInstance> getByResourceGroupWithResponse(
        String resourceGroupName, String azureLargeStorageInstanceName, Context context);

    /**
     * Gets an Azure Large Storage Instance.
     *
     * <p>Gets an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureLargeStorageInstanceName Name of the AzureLargeStorageInstance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name.
     */
    AzureLargeStorageInstance getByResourceGroup(String resourceGroupName, String azureLargeStorageInstanceName);

    /**
     * Delete an Azure Large Storage Instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureLargeStorageInstanceName Name of the AzureLargeStorageInstance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     *     status code 501.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(
        String resourceGroupName, String azureLargeStorageInstanceName, Context context);

    /**
     * Delete an Azure Large Storage Instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param azureLargeStorageInstanceName Name of the AzureLargeStorageInstance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     *     status code 501.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String azureLargeStorageInstanceName);

    /**
     * Gets an Azure Large Storage Instance.
     *
     * <p>Gets an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name
     *     along with {@link Response}.
     */
    AzureLargeStorageInstance getById(String id);

    /**
     * Gets an Azure Large Storage Instance.
     *
     * <p>Gets an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure LargeStorage Storage instance for the specified subscription, resource group, and instance name
     *     along with {@link Response}.
     */
    Response<AzureLargeStorageInstance> getByIdWithResponse(String id, Context context);

    /**
     * Delete an Azure Large Storage Instance.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     *     status code 501.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete an Azure Large Storage Instance.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server on
     *     status code 501.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new AzureLargeStorageInstance resource.
     *
     * @param name resource name.
     * @return the first stage of the new AzureLargeStorageInstance definition.
     */
    AzureLargeStorageInstance.DefinitionStages.Blank define(String name);
}

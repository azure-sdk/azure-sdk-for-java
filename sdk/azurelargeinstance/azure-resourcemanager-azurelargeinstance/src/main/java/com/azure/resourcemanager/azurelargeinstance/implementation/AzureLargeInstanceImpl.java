// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurelargeinstance.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azurelargeinstance.fluent.models.AzureLargeInstanceInner;
import com.azure.resourcemanager.azurelargeinstance.models.AzureLargeInstance;
import com.azure.resourcemanager.azurelargeinstance.models.AzureLargeInstancePowerStateEnum;
import com.azure.resourcemanager.azurelargeinstance.models.AzureLargeInstanceProvisioningStatesEnum;
import com.azure.resourcemanager.azurelargeinstance.models.HardwareProfile;
import com.azure.resourcemanager.azurelargeinstance.models.NetworkProfile;
import com.azure.resourcemanager.azurelargeinstance.models.OSProfile;
import com.azure.resourcemanager.azurelargeinstance.models.OperationStatusResult;
import com.azure.resourcemanager.azurelargeinstance.models.StorageProfile;
import com.azure.resourcemanager.azurelargeinstance.models.Tags;
import java.util.Collections;
import java.util.Map;

public final class AzureLargeInstanceImpl
    implements AzureLargeInstance, AzureLargeInstance.Definition, AzureLargeInstance.Update {
    private AzureLargeInstanceInner innerObject;

    private final com.azure.resourcemanager.azurelargeinstance.AzurelargeinstanceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public HardwareProfile hardwareProfile() {
        return this.innerModel().hardwareProfile();
    }

    public StorageProfile storageProfile() {
        return this.innerModel().storageProfile();
    }

    public OSProfile osProfile() {
        return this.innerModel().osProfile();
    }

    public NetworkProfile networkProfile() {
        return this.innerModel().networkProfile();
    }

    public String azureLargeInstanceId() {
        return this.innerModel().azureLargeInstanceId();
    }

    public AzureLargeInstancePowerStateEnum powerState() {
        return this.innerModel().powerState();
    }

    public String proximityPlacementGroup() {
        return this.innerModel().proximityPlacementGroup();
    }

    public String hwRevision() {
        return this.innerModel().hwRevision();
    }

    public String partnerNodeId() {
        return this.innerModel().partnerNodeId();
    }

    public AzureLargeInstanceProvisioningStatesEnum provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AzureLargeInstanceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azurelargeinstance.AzurelargeinstanceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String azureLargeInstanceName;

    private Tags updateTagsParameter;

    public AzureLargeInstanceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public AzureLargeInstance create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAzureLargeInstances()
                .putWithResponse(resourceGroupName, azureLargeInstanceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public AzureLargeInstance create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAzureLargeInstances()
                .putWithResponse(resourceGroupName, azureLargeInstanceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    AzureLargeInstanceImpl(
        String name, com.azure.resourcemanager.azurelargeinstance.AzurelargeinstanceManager serviceManager) {
        this.innerObject = new AzureLargeInstanceInner();
        this.serviceManager = serviceManager;
        this.azureLargeInstanceName = name;
    }

    public AzureLargeInstanceImpl update() {
        this.updateTagsParameter = new Tags();
        return this;
    }

    public AzureLargeInstance apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAzureLargeInstances()
                .updateWithResponse(resourceGroupName, azureLargeInstanceName, updateTagsParameter, Context.NONE)
                .getValue();
        return this;
    }

    public AzureLargeInstance apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAzureLargeInstances()
                .updateWithResponse(resourceGroupName, azureLargeInstanceName, updateTagsParameter, context)
                .getValue();
        return this;
    }

    AzureLargeInstanceImpl(
        AzureLargeInstanceInner innerObject,
        com.azure.resourcemanager.azurelargeinstance.AzurelargeinstanceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.azureLargeInstanceName = Utils.getValueFromIdByName(innerObject.id(), "azureLargeInstance");
    }

    public AzureLargeInstance refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAzureLargeInstances()
                .getByResourceGroupWithResponse(resourceGroupName, azureLargeInstanceName, Context.NONE)
                .getValue();
        return this;
    }

    public AzureLargeInstance refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAzureLargeInstances()
                .getByResourceGroupWithResponse(resourceGroupName, azureLargeInstanceName, context)
                .getValue();
        return this;
    }

    public OperationStatusResult start() {
        return serviceManager.azureLargeInstances().start(resourceGroupName, azureLargeInstanceName);
    }

    public OperationStatusResult start(Context context) {
        return serviceManager.azureLargeInstances().start(resourceGroupName, azureLargeInstanceName, context);
    }

    public OperationStatusResult restart() {
        return serviceManager.azureLargeInstances().restart(resourceGroupName, azureLargeInstanceName);
    }

    public OperationStatusResult restart(Context context) {
        return serviceManager.azureLargeInstances().restart(resourceGroupName, azureLargeInstanceName, context);
    }

    public OperationStatusResult shutdown() {
        return serviceManager.azureLargeInstances().shutdown(resourceGroupName, azureLargeInstanceName);
    }

    public OperationStatusResult shutdown(Context context) {
        return serviceManager.azureLargeInstances().shutdown(resourceGroupName, azureLargeInstanceName, context);
    }

    public AzureLargeInstanceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AzureLargeInstanceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AzureLargeInstanceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateTagsParameter.withTags(tags);
            return this;
        }
    }

    public AzureLargeInstanceImpl withHardwareProfile(HardwareProfile hardwareProfile) {
        this.innerModel().withHardwareProfile(hardwareProfile);
        return this;
    }

    public AzureLargeInstanceImpl withStorageProfile(StorageProfile storageProfile) {
        this.innerModel().withStorageProfile(storageProfile);
        return this;
    }

    public AzureLargeInstanceImpl withOsProfile(OSProfile osProfile) {
        this.innerModel().withOsProfile(osProfile);
        return this;
    }

    public AzureLargeInstanceImpl withNetworkProfile(NetworkProfile networkProfile) {
        this.innerModel().withNetworkProfile(networkProfile);
        return this;
    }

    public AzureLargeInstanceImpl withPartnerNodeId(String partnerNodeId) {
        this.innerModel().withPartnerNodeId(partnerNodeId);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * VMwareCbt specific test migrate input.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "instanceType",
    defaultImpl = VMwareCbtTestMigrateInput.class,
    visible = true)
@JsonTypeName("VMwareCbt")
@Fluent
public final class VMwareCbtTestMigrateInput extends TestMigrateProviderSpecificInput {
    /*
     * The class type.
     */
    @JsonTypeId
    @JsonProperty(value = "instanceType", required = true)
    private String instanceType = "VMwareCbt";

    /*
     * The recovery point Id.
     */
    @JsonProperty(value = "recoveryPointId", required = true)
    private String recoveryPointId;

    /*
     * The test network Id.
     */
    @JsonProperty(value = "networkId", required = true)
    private String networkId;

    /*
     * The list of NIC details.
     */
    @JsonProperty(value = "vmNics")
    private List<VMwareCbtNicInput> vmNics;

    /*
     * A value indicating the inplace OS Upgrade version.
     */
    @JsonProperty(value = "osUpgradeVersion")
    private String osUpgradeVersion;

    /*
     * The managed run command script input.
     */
    @JsonProperty(value = "postMigrationSteps")
    private List<ManagedRunCommandScriptInput> postMigrationSteps;

    /**
     * Creates an instance of VMwareCbtTestMigrateInput class.
     */
    public VMwareCbtTestMigrateInput() {
    }

    /**
     * Get the instanceType property: The class type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the recoveryPointId property: The recovery point Id.
     * 
     * @return the recoveryPointId value.
     */
    public String recoveryPointId() {
        return this.recoveryPointId;
    }

    /**
     * Set the recoveryPointId property: The recovery point Id.
     * 
     * @param recoveryPointId the recoveryPointId value to set.
     * @return the VMwareCbtTestMigrateInput object itself.
     */
    public VMwareCbtTestMigrateInput withRecoveryPointId(String recoveryPointId) {
        this.recoveryPointId = recoveryPointId;
        return this;
    }

    /**
     * Get the networkId property: The test network Id.
     * 
     * @return the networkId value.
     */
    public String networkId() {
        return this.networkId;
    }

    /**
     * Set the networkId property: The test network Id.
     * 
     * @param networkId the networkId value to set.
     * @return the VMwareCbtTestMigrateInput object itself.
     */
    public VMwareCbtTestMigrateInput withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }

    /**
     * Get the vmNics property: The list of NIC details.
     * 
     * @return the vmNics value.
     */
    public List<VMwareCbtNicInput> vmNics() {
        return this.vmNics;
    }

    /**
     * Set the vmNics property: The list of NIC details.
     * 
     * @param vmNics the vmNics value to set.
     * @return the VMwareCbtTestMigrateInput object itself.
     */
    public VMwareCbtTestMigrateInput withVmNics(List<VMwareCbtNicInput> vmNics) {
        this.vmNics = vmNics;
        return this;
    }

    /**
     * Get the osUpgradeVersion property: A value indicating the inplace OS Upgrade version.
     * 
     * @return the osUpgradeVersion value.
     */
    public String osUpgradeVersion() {
        return this.osUpgradeVersion;
    }

    /**
     * Set the osUpgradeVersion property: A value indicating the inplace OS Upgrade version.
     * 
     * @param osUpgradeVersion the osUpgradeVersion value to set.
     * @return the VMwareCbtTestMigrateInput object itself.
     */
    public VMwareCbtTestMigrateInput withOsUpgradeVersion(String osUpgradeVersion) {
        this.osUpgradeVersion = osUpgradeVersion;
        return this;
    }

    /**
     * Get the postMigrationSteps property: The managed run command script input.
     * 
     * @return the postMigrationSteps value.
     */
    public List<ManagedRunCommandScriptInput> postMigrationSteps() {
        return this.postMigrationSteps;
    }

    /**
     * Set the postMigrationSteps property: The managed run command script input.
     * 
     * @param postMigrationSteps the postMigrationSteps value to set.
     * @return the VMwareCbtTestMigrateInput object itself.
     */
    public VMwareCbtTestMigrateInput withPostMigrationSteps(List<ManagedRunCommandScriptInput> postMigrationSteps) {
        this.postMigrationSteps = postMigrationSteps;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (recoveryPointId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property recoveryPointId in model VMwareCbtTestMigrateInput"));
        }
        if (networkId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property networkId in model VMwareCbtTestMigrateInput"));
        }
        if (vmNics() != null) {
            vmNics().forEach(e -> e.validate());
        }
        if (postMigrationSteps() != null) {
            postMigrationSteps().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(VMwareCbtTestMigrateInput.class);
}

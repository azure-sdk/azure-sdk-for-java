// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * A2A provider specific settings.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "instanceType",
    defaultImpl = A2ASharedDiskReplicationDetails.class,
    visible = true)
@JsonTypeName("A2A")
@Fluent
public final class A2ASharedDiskReplicationDetails extends SharedDiskReplicationProviderSpecificSettings {
    /*
     * Gets the Instance type.
     */
    @JsonTypeId
    @JsonProperty(value = "instanceType", required = true)
    private String instanceType = "A2A";

    /*
     * The management Id.
     */
    @JsonProperty(value = "managementId")
    private String managementId;

    /*
     * The list of unprotected disks.
     */
    @JsonProperty(value = "unprotectedDisks")
    private List<A2AUnprotectedDiskDetails> unprotectedDisks;

    /*
     * The list of protected managed disks.
     */
    @JsonProperty(value = "protectedManagedDisks")
    private List<A2AProtectedManagedDiskDetails> protectedManagedDisks;

    /*
     * Primary fabric location.
     */
    @JsonProperty(value = "primaryFabricLocation")
    private String primaryFabricLocation;

    /*
     * The recovery fabric location.
     */
    @JsonProperty(value = "recoveryFabricLocation")
    private String recoveryFabricLocation;

    /*
     * The recovery point id to which the Virtual node was failed over.
     */
    @JsonProperty(value = "failoverRecoveryPointId")
    private String failoverRecoveryPointId;

    /*
     * The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
     */
    @JsonProperty(value = "monitoringPercentageCompletion")
    private Integer monitoringPercentageCompletion;

    /*
     * The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
     */
    @JsonProperty(value = "monitoringJobType")
    private String monitoringJobType;

    /*
     * The last RPO value in seconds.
     */
    @JsonProperty(value = "rpoInSeconds")
    private Long rpoInSeconds;

    /*
     * The time (in UTC) when the last RPO value was calculated by Protection Service.
     */
    @JsonProperty(value = "lastRpoCalculatedTime")
    private OffsetDateTime lastRpoCalculatedTime;

    /*
     * The IR Errors.
     */
    @JsonProperty(value = "sharedDiskIRErrors")
    private List<A2ASharedDiskIRErrorDetails> sharedDiskIRErrors;

    /**
     * Creates an instance of A2ASharedDiskReplicationDetails class.
     */
    public A2ASharedDiskReplicationDetails() {
    }

    /**
     * Get the instanceType property: Gets the Instance type.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the managementId property: The management Id.
     * 
     * @return the managementId value.
     */
    public String managementId() {
        return this.managementId;
    }

    /**
     * Set the managementId property: The management Id.
     * 
     * @param managementId the managementId value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withManagementId(String managementId) {
        this.managementId = managementId;
        return this;
    }

    /**
     * Get the unprotectedDisks property: The list of unprotected disks.
     * 
     * @return the unprotectedDisks value.
     */
    public List<A2AUnprotectedDiskDetails> unprotectedDisks() {
        return this.unprotectedDisks;
    }

    /**
     * Set the unprotectedDisks property: The list of unprotected disks.
     * 
     * @param unprotectedDisks the unprotectedDisks value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withUnprotectedDisks(List<A2AUnprotectedDiskDetails> unprotectedDisks) {
        this.unprotectedDisks = unprotectedDisks;
        return this;
    }

    /**
     * Get the protectedManagedDisks property: The list of protected managed disks.
     * 
     * @return the protectedManagedDisks value.
     */
    public List<A2AProtectedManagedDiskDetails> protectedManagedDisks() {
        return this.protectedManagedDisks;
    }

    /**
     * Set the protectedManagedDisks property: The list of protected managed disks.
     * 
     * @param protectedManagedDisks the protectedManagedDisks value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails
        withProtectedManagedDisks(List<A2AProtectedManagedDiskDetails> protectedManagedDisks) {
        this.protectedManagedDisks = protectedManagedDisks;
        return this;
    }

    /**
     * Get the primaryFabricLocation property: Primary fabric location.
     * 
     * @return the primaryFabricLocation value.
     */
    public String primaryFabricLocation() {
        return this.primaryFabricLocation;
    }

    /**
     * Set the primaryFabricLocation property: Primary fabric location.
     * 
     * @param primaryFabricLocation the primaryFabricLocation value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withPrimaryFabricLocation(String primaryFabricLocation) {
        this.primaryFabricLocation = primaryFabricLocation;
        return this;
    }

    /**
     * Get the recoveryFabricLocation property: The recovery fabric location.
     * 
     * @return the recoveryFabricLocation value.
     */
    public String recoveryFabricLocation() {
        return this.recoveryFabricLocation;
    }

    /**
     * Set the recoveryFabricLocation property: The recovery fabric location.
     * 
     * @param recoveryFabricLocation the recoveryFabricLocation value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withRecoveryFabricLocation(String recoveryFabricLocation) {
        this.recoveryFabricLocation = recoveryFabricLocation;
        return this;
    }

    /**
     * Get the failoverRecoveryPointId property: The recovery point id to which the Virtual node was failed over.
     * 
     * @return the failoverRecoveryPointId value.
     */
    public String failoverRecoveryPointId() {
        return this.failoverRecoveryPointId;
    }

    /**
     * Set the failoverRecoveryPointId property: The recovery point id to which the Virtual node was failed over.
     * 
     * @param failoverRecoveryPointId the failoverRecoveryPointId value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withFailoverRecoveryPointId(String failoverRecoveryPointId) {
        this.failoverRecoveryPointId = failoverRecoveryPointId;
        return this;
    }

    /**
     * Get the monitoringPercentageCompletion property: The percentage of the monitoring job. The type of the monitoring
     * job is defined by MonitoringJobType property.
     * 
     * @return the monitoringPercentageCompletion value.
     */
    public Integer monitoringPercentageCompletion() {
        return this.monitoringPercentageCompletion;
    }

    /**
     * Set the monitoringPercentageCompletion property: The percentage of the monitoring job. The type of the monitoring
     * job is defined by MonitoringJobType property.
     * 
     * @param monitoringPercentageCompletion the monitoringPercentageCompletion value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withMonitoringPercentageCompletion(Integer monitoringPercentageCompletion) {
        this.monitoringPercentageCompletion = monitoringPercentageCompletion;
        return this;
    }

    /**
     * Get the monitoringJobType property: The type of the monitoring job. The progress is contained in
     * MonitoringPercentageCompletion property.
     * 
     * @return the monitoringJobType value.
     */
    public String monitoringJobType() {
        return this.monitoringJobType;
    }

    /**
     * Set the monitoringJobType property: The type of the monitoring job. The progress is contained in
     * MonitoringPercentageCompletion property.
     * 
     * @param monitoringJobType the monitoringJobType value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withMonitoringJobType(String monitoringJobType) {
        this.monitoringJobType = monitoringJobType;
        return this;
    }

    /**
     * Get the rpoInSeconds property: The last RPO value in seconds.
     * 
     * @return the rpoInSeconds value.
     */
    public Long rpoInSeconds() {
        return this.rpoInSeconds;
    }

    /**
     * Set the rpoInSeconds property: The last RPO value in seconds.
     * 
     * @param rpoInSeconds the rpoInSeconds value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withRpoInSeconds(Long rpoInSeconds) {
        this.rpoInSeconds = rpoInSeconds;
        return this;
    }

    /**
     * Get the lastRpoCalculatedTime property: The time (in UTC) when the last RPO value was calculated by Protection
     * Service.
     * 
     * @return the lastRpoCalculatedTime value.
     */
    public OffsetDateTime lastRpoCalculatedTime() {
        return this.lastRpoCalculatedTime;
    }

    /**
     * Set the lastRpoCalculatedTime property: The time (in UTC) when the last RPO value was calculated by Protection
     * Service.
     * 
     * @param lastRpoCalculatedTime the lastRpoCalculatedTime value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails withLastRpoCalculatedTime(OffsetDateTime lastRpoCalculatedTime) {
        this.lastRpoCalculatedTime = lastRpoCalculatedTime;
        return this;
    }

    /**
     * Get the sharedDiskIRErrors property: The IR Errors.
     * 
     * @return the sharedDiskIRErrors value.
     */
    public List<A2ASharedDiskIRErrorDetails> sharedDiskIRErrors() {
        return this.sharedDiskIRErrors;
    }

    /**
     * Set the sharedDiskIRErrors property: The IR Errors.
     * 
     * @param sharedDiskIRErrors the sharedDiskIRErrors value to set.
     * @return the A2ASharedDiskReplicationDetails object itself.
     */
    public A2ASharedDiskReplicationDetails
        withSharedDiskIRErrors(List<A2ASharedDiskIRErrorDetails> sharedDiskIRErrors) {
        this.sharedDiskIRErrors = sharedDiskIRErrors;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (unprotectedDisks() != null) {
            unprotectedDisks().forEach(e -> e.validate());
        }
        if (protectedManagedDisks() != null) {
            protectedManagedDisks().forEach(e -> e.validate());
        }
        if (sharedDiskIRErrors() != null) {
            sharedDiskIRErrors().forEach(e -> e.validate());
        }
    }
}

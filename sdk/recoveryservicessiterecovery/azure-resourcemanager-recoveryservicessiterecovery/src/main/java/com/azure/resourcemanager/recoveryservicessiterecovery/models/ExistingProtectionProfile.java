// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Existing storage account input.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "resourceType",
    defaultImpl = ExistingProtectionProfile.class,
    visible = true)
@JsonTypeName("Existing")
@Fluent
public final class ExistingProtectionProfile extends ProtectionProfileCustomDetails {
    /*
     * The class type.
     */
    @JsonTypeId
    @JsonProperty(value = "resourceType", required = true)
    private String resourceType = "Existing";

    /*
     * The protection profile Arm Id. Throw error, if resource does not exists.
     */
    @JsonProperty(value = "protectionProfileId", required = true)
    private String protectionProfileId;

    /**
     * Creates an instance of ExistingProtectionProfile class.
     */
    public ExistingProtectionProfile() {
    }

    /**
     * Get the resourceType property: The class type.
     * 
     * @return the resourceType value.
     */
    @Override
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Get the protectionProfileId property: The protection profile Arm Id. Throw error, if resource does not exists.
     * 
     * @return the protectionProfileId value.
     */
    public String protectionProfileId() {
        return this.protectionProfileId;
    }

    /**
     * Set the protectionProfileId property: The protection profile Arm Id. Throw error, if resource does not exists.
     * 
     * @param protectionProfileId the protectionProfileId value to set.
     * @return the ExistingProtectionProfile object itself.
     */
    public ExistingProtectionProfile withProtectionProfileId(String protectionProfileId) {
        this.protectionProfileId = protectionProfileId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (protectionProfileId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property protectionProfileId in model ExistingProtectionProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ExistingProtectionProfile.class);
}

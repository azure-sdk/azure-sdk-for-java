// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * VMM fabric provider specific VM settings.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "instanceType",
    defaultImpl = VmmVirtualMachineDetails.class,
    visible = true)
@JsonTypeName("VmmVirtualMachine")
@Fluent
public final class VmmVirtualMachineDetails extends HyperVVirtualMachineDetails {
    /*
     * Gets the class type. Overridden in derived classes.
     */
    @JsonTypeId
    @JsonProperty(value = "instanceType", required = true)
    private String instanceType = "VmmVirtualMachine";

    /**
     * Creates an instance of VmmVirtualMachineDetails class.
     */
    public VmmVirtualMachineDetails() {
    }

    /**
     * Get the instanceType property: Gets the class type. Overridden in derived classes.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withSourceItemId(String sourceItemId) {
        super.withSourceItemId(sourceItemId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withGeneration(String generation) {
        super.withGeneration(generation);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withOsDetails(OSDetails osDetails) {
        super.withOsDetails(osDetails);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withDiskDetails(List<DiskDetails> diskDetails) {
        super.withDiskDetails(diskDetails);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withHasPhysicalDisk(PresenceStatus hasPhysicalDisk) {
        super.withHasPhysicalDisk(hasPhysicalDisk);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withHasFibreChannelAdapter(PresenceStatus hasFibreChannelAdapter) {
        super.withHasFibreChannelAdapter(hasFibreChannelAdapter);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withHasSharedVhd(PresenceStatus hasSharedVhd) {
        super.withHasSharedVhd(hasSharedVhd);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VmmVirtualMachineDetails withHyperVHostId(String hyperVHostId) {
        super.withHyperVHostId(hyperVHostId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

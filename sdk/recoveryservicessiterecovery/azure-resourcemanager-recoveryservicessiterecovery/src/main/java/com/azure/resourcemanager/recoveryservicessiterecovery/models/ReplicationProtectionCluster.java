// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectionClusterInner;

/** An immutable client-side representation of ReplicationProtectionCluster. */
public interface ReplicationProtectionCluster {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: The custom data.
     *
     * @return the properties value.
     */
    ReplicationProtectionClusterProperties properties();

    /**
     * Gets the inner
     * com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.ReplicationProtectionClusterInner object.
     *
     * @return the inner object.
     */
    ReplicationProtectionClusterInner innerModel();

    /** The entirety of the ReplicationProtectionCluster definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ReplicationProtectionCluster definition stages. */
    interface DefinitionStages {
        /** The first stage of the ReplicationProtectionCluster definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ReplicationProtectionCluster definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceName, resourceGroupName, fabricName, protectionContainerName.
             *
             * @param resourceName The name of the recovery services vault.
             * @param resourceGroupName The name of the resource group where the recovery services vault is present.
             * @param fabricName Name of the fabric.
             * @param protectionContainerName Protection container name.
             * @return the next definition stage.
             */
            WithCreate withExistingReplicationProtectionContainer(
                String resourceName, String resourceGroupName, String fabricName, String protectionContainerName);
        }
        /**
         * The stage of the ReplicationProtectionCluster definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProperties {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ReplicationProtectionCluster create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ReplicationProtectionCluster create(Context context);
        }
        /** The stage of the ReplicationProtectionCluster definition allowing to specify properties. */
        interface WithProperties {
            /**
             * Specifies the properties property: The custom data..
             *
             * @param properties The custom data.
             * @return the next definition stage.
             */
            WithCreate withProperties(ReplicationProtectionClusterProperties properties);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ReplicationProtectionCluster refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ReplicationProtectionCluster refresh(Context context);

    /**
     * Resynchronize or repair replication of protection cluster.
     *
     * <p>The operation to repair replication protection cluster.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void repairReplication();

    /**
     * Resynchronize or repair replication of protection cluster.
     *
     * <p>The operation to repair replication protection cluster.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void repairReplication(Context context);

    /**
     * Execute unplanned cluster failover.
     *
     * <p>Operation to initiate a failover of the replication protection cluster.
     *
     * @param failoverInput Failover input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void unplannedFailover(ClusterUnplannedFailoverInput failoverInput);

    /**
     * Execute unplanned cluster failover.
     *
     * <p>Operation to initiate a failover of the replication protection cluster.
     *
     * @param failoverInput Failover input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void unplannedFailover(ClusterUnplannedFailoverInput failoverInput, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.programmableconnectivity.fluent.models.OperatorApiConnectionUpdateProperties;
import java.io.IOException;
import java.util.Map;

/**
 * The type used for update operations of the OperatorApiConnection.
 */
@Fluent
public final class OperatorApiConnectionUpdate implements JsonSerializable<OperatorApiConnectionUpdate> {
    /*
     * Resource tags.
     */
    private Map<String, String> tags;

    /*
     * The resource-specific properties for this resource.
     */
    private OperatorApiConnectionUpdateProperties innerProperties;

    /**
     * Creates an instance of OperatorApiConnectionUpdate class.
     */
    public OperatorApiConnectionUpdate() {
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the OperatorApiConnectionUpdate object itself.
     */
    public OperatorApiConnectionUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private OperatorApiConnectionUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the operatorApiPlanId property: Reference to the Operator API Plan Resource ID.
     * 
     * @return the operatorApiPlanId value.
     */
    public String operatorApiPlanId() {
        return this.innerProperties() == null ? null : this.innerProperties().operatorApiPlanId();
    }

    /**
     * Set the operatorApiPlanId property: Reference to the Operator API Plan Resource ID.
     * 
     * @param operatorApiPlanId the operatorApiPlanId value to set.
     * @return the OperatorApiConnectionUpdate object itself.
     */
    public OperatorApiConnectionUpdate withOperatorApiPlanId(String operatorApiPlanId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperatorApiConnectionUpdateProperties();
        }
        this.innerProperties().withOperatorApiPlanId(operatorApiPlanId);
        return this;
    }

    /**
     * Get the saasProperties property: Details about the SaaS offer purchased from the marketplace.
     * 
     * @return the saasProperties value.
     */
    public SaasProperties saasProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().saasProperties();
    }

    /**
     * Set the saasProperties property: Details about the SaaS offer purchased from the marketplace.
     * 
     * @param saasProperties the saasProperties value to set.
     * @return the OperatorApiConnectionUpdate object itself.
     */
    public OperatorApiConnectionUpdate withSaasProperties(SaasProperties saasProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperatorApiConnectionUpdateProperties();
        }
        this.innerProperties().withSaasProperties(saasProperties);
        return this;
    }

    /**
     * Get the configuredApplication property: Details about the Application that would use the Operator's Network APIs.
     * 
     * @return the configuredApplication value.
     */
    public ApplicationProperties configuredApplication() {
        return this.innerProperties() == null ? null : this.innerProperties().configuredApplication();
    }

    /**
     * Set the configuredApplication property: Details about the Application that would use the Operator's Network APIs.
     * 
     * @param configuredApplication the configuredApplication value to set.
     * @return the OperatorApiConnectionUpdate object itself.
     */
    public OperatorApiConnectionUpdate withConfiguredApplication(ApplicationProperties configuredApplication) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperatorApiConnectionUpdateProperties();
        }
        this.innerProperties().withConfiguredApplication(configuredApplication);
        return this;
    }

    /**
     * Get the appId property: Application ID of the App Developer that is registered with the Operator in a specific
     * country/region.
     * 
     * @return the appId value.
     */
    public String appId() {
        return this.innerProperties() == null ? null : this.innerProperties().appId();
    }

    /**
     * Set the appId property: Application ID of the App Developer that is registered with the Operator in a specific
     * country/region.
     * 
     * @param appId the appId value to set.
     * @return the OperatorApiConnectionUpdate object itself.
     */
    public OperatorApiConnectionUpdate withAppId(String appId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperatorApiConnectionUpdateProperties();
        }
        this.innerProperties().withAppId(appId);
        return this;
    }

    /**
     * Get the appSecret property: Application secret linked to the 'appId'. This should be stored securely and is not
     * returned back when the resource information is read.
     * 
     * @return the appSecret value.
     */
    public String appSecret() {
        return this.innerProperties() == null ? null : this.innerProperties().appSecret();
    }

    /**
     * Set the appSecret property: Application secret linked to the 'appId'. This should be stored securely and is not
     * returned back when the resource information is read.
     * 
     * @param appSecret the appSecret value to set.
     * @return the OperatorApiConnectionUpdate object itself.
     */
    public OperatorApiConnectionUpdate withAppSecret(String appSecret) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperatorApiConnectionUpdateProperties();
        }
        this.innerProperties().withAppSecret(appSecret);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("tags", this.tags, (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperatorApiConnectionUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperatorApiConnectionUpdate if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperatorApiConnectionUpdate.
     */
    public static OperatorApiConnectionUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperatorApiConnectionUpdate deserializedOperatorApiConnectionUpdate = new OperatorApiConnectionUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedOperatorApiConnectionUpdate.tags = tags;
                } else if ("properties".equals(fieldName)) {
                    deserializedOperatorApiConnectionUpdate.innerProperties
                        = OperatorApiConnectionUpdateProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperatorApiConnectionUpdate;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.programmableconnectivity.fluent.models.OperatorApiConnectionInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of OperatorApiConnection.
 */
public interface OperatorApiConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the operatorApiPlanId property: Reference to the Operator API Plan Resource ID.
     * 
     * @return the operatorApiPlanId value.
     */
    String operatorApiPlanId();

    /**
     * Gets the marketplaceSaasProperties property: Details about the SaaS offer purchased from the Azure Marketplace.
     * 
     * @return the marketplaceSaasProperties value.
     */
    SaasProperties marketplaceSaasProperties();

    /**
     * Gets the gatewayId property: Reference to the APC Gateway resource ID.
     * 
     * @return the gatewayId value.
     */
    String gatewayId();

    /**
     * Gets the operatorName property: Name of the Operator in the linked Operator API Plan belongs to.
     * 
     * @return the operatorName value.
     */
    String operatorName();

    /**
     * Gets the camaraApiName property: The Network API for the current operator in the country/region provided in the
     * linked Operator API Plan.
     * 
     * @return the camaraApiName value.
     */
    String camaraApiName();

    /**
     * Gets the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the status property: The status of the OperatorApiConnection resource.
     * 
     * @return the status value.
     */
    Status status();

    /**
     * Gets the purposes property: The purpose for which the Application will use the API. Max Items 1 currently as
     * Operators do not support multiple.
     * 
     * @return the purposes value.
     */
    List<Purpose> purposes();

    /**
     * Gets the purposeReason property: Explanation of the reason that justifies the purpose: specifically why is the
     * API used for the application's use case.
     * 
     * @return the purposeReason value.
     */
    String purposeReason();

    /**
     * Gets the dataProcessingList property: List of ways the data returned on this API is processed.
     * 
     * @return the dataProcessingList value.
     */
    List<DataProcessing> dataProcessingList();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.programmableconnectivity.fluent.models.OperatorApiConnectionInner
     * object.
     * 
     * @return the inner object.
     */
    OperatorApiConnectionInner innerModel();

    /**
     * The entirety of the OperatorApiConnection definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The OperatorApiConnection definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the OperatorApiConnection definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the OperatorApiConnection definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithOperatorApiPlanId, DefinitionStages.WithGatewayId,
            DefinitionStages.WithPurposes, DefinitionStages.WithPurposeReason, DefinitionStages.WithDataProcessingList {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            OperatorApiConnection create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            OperatorApiConnection create(Context context);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify operatorApiPlanId.
         */
        interface WithOperatorApiPlanId {
            /**
             * Specifies the operatorApiPlanId property: Reference to the Operator API Plan Resource ID..
             * 
             * @param operatorApiPlanId Reference to the Operator API Plan Resource ID.
             * @return the next definition stage.
             */
            WithCreate withOperatorApiPlanId(String operatorApiPlanId);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify gatewayId.
         */
        interface WithGatewayId {
            /**
             * Specifies the gatewayId property: Reference to the APC Gateway resource ID..
             * 
             * @param gatewayId Reference to the APC Gateway resource ID.
             * @return the next definition stage.
             */
            WithCreate withGatewayId(String gatewayId);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify purposes.
         */
        interface WithPurposes {
            /**
             * Specifies the purposes property: The purpose for which the Application will use the API. Max Items 1
             * currently as Operators do not support multiple..
             * 
             * @param purposes The purpose for which the Application will use the API. Max Items 1 currently as
             * Operators do not support multiple.
             * @return the next definition stage.
             */
            WithCreate withPurposes(List<Purpose> purposes);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify purposeReason.
         */
        interface WithPurposeReason {
            /**
             * Specifies the purposeReason property: Explanation of the reason that justifies the purpose: specifically
             * why is the API used for the application's use case..
             * 
             * @param purposeReason Explanation of the reason that justifies the purpose: specifically why is the API
             * used for the application's use case.
             * @return the next definition stage.
             */
            WithCreate withPurposeReason(String purposeReason);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify dataProcessingList.
         */
        interface WithDataProcessingList {
            /**
             * Specifies the dataProcessingList property: List of ways the data returned on this API is processed..
             * 
             * @param dataProcessingList List of ways the data returned on this API is processed.
             * @return the next definition stage.
             */
            WithCreate withDataProcessingList(List<DataProcessing> dataProcessingList);
        }
    }

    /**
     * Begins update for the OperatorApiConnection resource.
     * 
     * @return the stage of resource update.
     */
    OperatorApiConnection.Update update();

    /**
     * The template for OperatorApiConnection update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithOperatorApiPlanId, UpdateStages.WithPurposes,
        UpdateStages.WithPurposeReason, UpdateStages.WithDataProcessingList {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        OperatorApiConnection apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        OperatorApiConnection apply(Context context);
    }

    /**
     * The OperatorApiConnection update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the OperatorApiConnection update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify operatorApiPlanId.
         */
        interface WithOperatorApiPlanId {
            /**
             * Specifies the operatorApiPlanId property: Reference to the Operator API Plan Resource ID..
             * 
             * @param operatorApiPlanId Reference to the Operator API Plan Resource ID.
             * @return the next definition stage.
             */
            Update withOperatorApiPlanId(String operatorApiPlanId);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify purposes.
         */
        interface WithPurposes {
            /**
             * Specifies the purposes property: The purpose for which the Application will use the API. Max Items 1
             * currently as Operators do not support multiple..
             * 
             * @param purposes The purpose for which the Application will use the API. Max Items 1 currently as
             * Operators do not support multiple.
             * @return the next definition stage.
             */
            Update withPurposes(List<Purpose> purposes);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify purposeReason.
         */
        interface WithPurposeReason {
            /**
             * Specifies the purposeReason property: Explanation of the reason that justifies the purpose: specifically
             * why is the API used for the application's use case..
             * 
             * @param purposeReason Explanation of the reason that justifies the purpose: specifically why is the API
             * used for the application's use case.
             * @return the next definition stage.
             */
            Update withPurposeReason(String purposeReason);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify dataProcessingList.
         */
        interface WithDataProcessingList {
            /**
             * Specifies the dataProcessingList property: List of ways the data returned on this API is processed..
             * 
             * @param dataProcessingList List of ways the data returned on this API is processed.
             * @return the next definition stage.
             */
            Update withDataProcessingList(List<DataProcessing> dataProcessingList);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    OperatorApiConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    OperatorApiConnection refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.programmableconnectivity.fluent.models.OperatorApiConnectionInner;
import java.util.Map;

/**
 * An immutable client-side representation of OperatorApiConnection.
 */
public interface OperatorApiConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the operatorApiPlanId property: Reference to the Operator API Plan Resource ID.
     * 
     * @return the operatorApiPlanId value.
     */
    String operatorApiPlanId();

    /**
     * Gets the saasProperties property: Details about the SaaS offer purchased from the marketplace.
     * 
     * @return the saasProperties value.
     */
    SaasProperties saasProperties();

    /**
     * Gets the configuredApplication property: Details about the Application that would use the Operator's Network
     * APIs.
     * 
     * @return the configuredApplication value.
     */
    ApplicationProperties configuredApplication();

    /**
     * Gets the appId property: Application ID of the App Developer that is registered with the Operator in a specific
     * country/region.
     * 
     * @return the appId value.
     */
    String appId();

    /**
     * Gets the gatewayId property: Reference to the APC Gateway resource ID.
     * 
     * @return the gatewayId value.
     */
    String gatewayId();

    /**
     * Gets the accountType property: Type of the account the user has with the Operator's Network API infrastructure.
     * AzureManaged | UserManaged.
     * 
     * @return the accountType value.
     */
    AccountType accountType();

    /**
     * Gets the appSecret property: Application secret linked to the 'appId'. This should be stored securely and is not
     * returned back when the resource information is read.
     * 
     * @return the appSecret value.
     */
    String appSecret();

    /**
     * Gets the operatorName property: Name of the Operator in the linked Operator API Plan belongs to.
     * 
     * @return the operatorName value.
     */
    String operatorName();

    /**
     * Gets the camaraApiName property: The Network API for the current operator in the country/region provided in the
     * linked Operator API Plan.
     * 
     * @return the camaraApiName value.
     */
    String camaraApiName();

    /**
     * Gets the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the status property: The status of the OperatorApiConnection resource.
     * 
     * @return the status value.
     */
    Status status();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.programmableconnectivity.fluent.models.OperatorApiConnectionInner
     * object.
     * 
     * @return the inner object.
     */
    OperatorApiConnectionInner innerModel();

    /**
     * The entirety of the OperatorApiConnection definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The OperatorApiConnection definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the OperatorApiConnection definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the OperatorApiConnection definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithOperatorApiPlanId,
            DefinitionStages.WithSaasProperties, DefinitionStages.WithConfiguredApplication, DefinitionStages.WithAppId,
            DefinitionStages.WithGatewayId, DefinitionStages.WithAccountType, DefinitionStages.WithAppSecret {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            OperatorApiConnection create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            OperatorApiConnection create(Context context);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify operatorApiPlanId.
         */
        interface WithOperatorApiPlanId {
            /**
             * Specifies the operatorApiPlanId property: Reference to the Operator API Plan Resource ID..
             * 
             * @param operatorApiPlanId Reference to the Operator API Plan Resource ID.
             * @return the next definition stage.
             */
            WithCreate withOperatorApiPlanId(String operatorApiPlanId);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify saasProperties.
         */
        interface WithSaasProperties {
            /**
             * Specifies the saasProperties property: Details about the SaaS offer purchased from the marketplace..
             * 
             * @param saasProperties Details about the SaaS offer purchased from the marketplace.
             * @return the next definition stage.
             */
            WithCreate withSaasProperties(SaasProperties saasProperties);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify configuredApplication.
         */
        interface WithConfiguredApplication {
            /**
             * Specifies the configuredApplication property: Details about the Application that would use the Operator's
             * Network APIs..
             * 
             * @param configuredApplication Details about the Application that would use the Operator's Network APIs.
             * @return the next definition stage.
             */
            WithCreate withConfiguredApplication(ApplicationProperties configuredApplication);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify appId.
         */
        interface WithAppId {
            /**
             * Specifies the appId property: Application ID of the App Developer that is registered with the Operator in
             * a specific country/region..
             * 
             * @param appId Application ID of the App Developer that is registered with the Operator in a specific
             * country/region.
             * @return the next definition stage.
             */
            WithCreate withAppId(String appId);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify gatewayId.
         */
        interface WithGatewayId {
            /**
             * Specifies the gatewayId property: Reference to the APC Gateway resource ID..
             * 
             * @param gatewayId Reference to the APC Gateway resource ID.
             * @return the next definition stage.
             */
            WithCreate withGatewayId(String gatewayId);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify accountType.
         */
        interface WithAccountType {
            /**
             * Specifies the accountType property: Type of the account the user has with the Operator's Network API
             * infrastructure. AzureManaged | UserManaged..
             * 
             * @param accountType Type of the account the user has with the Operator's Network API infrastructure.
             * AzureManaged | UserManaged.
             * @return the next definition stage.
             */
            WithCreate withAccountType(AccountType accountType);
        }

        /**
         * The stage of the OperatorApiConnection definition allowing to specify appSecret.
         */
        interface WithAppSecret {
            /**
             * Specifies the appSecret property: Application secret linked to the 'appId'. This should be stored
             * securely and is not returned back when the resource information is read..
             * 
             * @param appSecret Application secret linked to the 'appId'. This should be stored securely and is not
             * returned back when the resource information is read.
             * @return the next definition stage.
             */
            WithCreate withAppSecret(String appSecret);
        }
    }

    /**
     * Begins update for the OperatorApiConnection resource.
     * 
     * @return the stage of resource update.
     */
    OperatorApiConnection.Update update();

    /**
     * The template for OperatorApiConnection update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithOperatorApiPlanId, UpdateStages.WithSaasProperties,
        UpdateStages.WithConfiguredApplication, UpdateStages.WithAppId, UpdateStages.WithAppSecret {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        OperatorApiConnection apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        OperatorApiConnection apply(Context context);
    }

    /**
     * The OperatorApiConnection update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the OperatorApiConnection update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify operatorApiPlanId.
         */
        interface WithOperatorApiPlanId {
            /**
             * Specifies the operatorApiPlanId property: Reference to the Operator API Plan Resource ID..
             * 
             * @param operatorApiPlanId Reference to the Operator API Plan Resource ID.
             * @return the next definition stage.
             */
            Update withOperatorApiPlanId(String operatorApiPlanId);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify saasProperties.
         */
        interface WithSaasProperties {
            /**
             * Specifies the saasProperties property: Details about the SaaS offer purchased from the marketplace..
             * 
             * @param saasProperties Details about the SaaS offer purchased from the marketplace.
             * @return the next definition stage.
             */
            Update withSaasProperties(SaasProperties saasProperties);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify configuredApplication.
         */
        interface WithConfiguredApplication {
            /**
             * Specifies the configuredApplication property: Details about the Application that would use the Operator's
             * Network APIs..
             * 
             * @param configuredApplication Details about the Application that would use the Operator's Network APIs.
             * @return the next definition stage.
             */
            Update withConfiguredApplication(ApplicationProperties configuredApplication);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify appId.
         */
        interface WithAppId {
            /**
             * Specifies the appId property: Application ID of the App Developer that is registered with the Operator in
             * a specific country/region..
             * 
             * @param appId Application ID of the App Developer that is registered with the Operator in a specific
             * country/region.
             * @return the next definition stage.
             */
            Update withAppId(String appId);
        }

        /**
         * The stage of the OperatorApiConnection update allowing to specify appSecret.
         */
        interface WithAppSecret {
            /**
             * Specifies the appSecret property: Application secret linked to the 'appId'. This should be stored
             * securely and is not returned back when the resource information is read..
             * 
             * @param appSecret Application secret linked to the 'appId'. This should be stored securely and is not
             * returned back when the resource information is read.
             * @return the next definition stage.
             */
            Update withAppSecret(String appSecret);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    OperatorApiConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    OperatorApiConnection refresh(Context context);
}

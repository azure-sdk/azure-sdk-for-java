// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.programmableconnectivity.models.AccountType;
import com.azure.resourcemanager.programmableconnectivity.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** A Programmable Connectivity Open API Gateway resource. */
@Fluent
public final class OpenApiGatewayInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private OpenApiGatewayProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of OpenApiGatewayInner class. */
    public OpenApiGatewayInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     *
     * @return the innerProperties value.
     */
    private OpenApiGatewayProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public OpenApiGatewayInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public OpenApiGatewayInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the gatewayId property: APC Gateway resource ID linked to this Open API Gateway.
     *
     * @return the gatewayId value.
     */
    public String gatewayId() {
        return this.innerProperties() == null ? null : this.innerProperties().gatewayId();
    }

    /**
     * Set the gatewayId property: APC Gateway resource ID linked to this Open API Gateway.
     *
     * @param gatewayId the gatewayId value to set.
     * @return the OpenApiGatewayInner object itself.
     */
    public OpenApiGatewayInner withGatewayId(String gatewayId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayProperties();
        }
        this.innerProperties().withGatewayId(gatewayId);
        return this;
    }

    /**
     * Get the openApiGatewayOfferingId property: Reference to the Open API Gateway Offering Resource ID.
     *
     * @return the openApiGatewayOfferingId value.
     */
    public String openApiGatewayOfferingId() {
        return this.innerProperties() == null ? null : this.innerProperties().openApiGatewayOfferingId();
    }

    /**
     * Set the openApiGatewayOfferingId property: Reference to the Open API Gateway Offering Resource ID.
     *
     * @param openApiGatewayOfferingId the openApiGatewayOfferingId value to set.
     * @return the OpenApiGatewayInner object itself.
     */
    public OpenApiGatewayInner withOpenApiGatewayOfferingId(String openApiGatewayOfferingId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayProperties();
        }
        this.innerProperties().withOpenApiGatewayOfferingId(openApiGatewayOfferingId);
        return this;
    }

    /**
     * Get the features property: List of features the user has selected for the current operator in the country
     * provided in the Offering.
     *
     * @return the features value.
     */
    public List<String> features() {
        return this.innerProperties() == null ? null : this.innerProperties().features();
    }

    /**
     * Set the features property: List of features the user has selected for the current operator in the country
     * provided in the Offering.
     *
     * @param features the features value to set.
     * @return the OpenApiGatewayInner object itself.
     */
    public OpenApiGatewayInner withFeatures(List<String> features) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayProperties();
        }
        this.innerProperties().withFeatures(features);
        return this;
    }

    /**
     * Get the accountType property: Type of the account the user has with the Operator's Network API infrastructure.
     * AzureManaged | UserManaged.
     *
     * @return the accountType value.
     */
    public AccountType accountType() {
        return this.innerProperties() == null ? null : this.innerProperties().accountType();
    }

    /**
     * Set the accountType property: Type of the account the user has with the Operator's Network API infrastructure.
     * AzureManaged | UserManaged.
     *
     * @param accountType the accountType value to set.
     * @return the OpenApiGatewayInner object itself.
     */
    public OpenApiGatewayInner withAccountType(AccountType accountType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayProperties();
        }
        this.innerProperties().withAccountType(accountType);
        return this;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

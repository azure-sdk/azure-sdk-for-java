// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of OpenApiGatewayOfferings. */
public interface OpenApiGatewayOfferings {
    /**
     * List OpenApiGatewayOffering resources by tenant.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a OpenApiGatewayOffering list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<OpenApiGatewayOffering> listByTenant();

    /**
     * List OpenApiGatewayOffering resources by tenant.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a OpenApiGatewayOffering list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<OpenApiGatewayOffering> listByTenant(Context context);

    /**
     * Get a OpenApiGatewayOffering.
     *
     * @param name APC Gateway Offering Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a OpenApiGatewayOffering along with {@link Response}.
     */
    Response<OpenApiGatewayOffering> getWithResponse(String name, Context context);

    /**
     * Get a OpenApiGatewayOffering.
     *
     * @param name APC Gateway Offering Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a OpenApiGatewayOffering.
     */
    OpenApiGatewayOffering get(String name);

    /**
     * List OpenApiGatewayOffering resources by subscription ID.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a OpenApiGatewayOffering list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<OpenApiGatewayOffering> list();

    /**
     * List OpenApiGatewayOffering resources by subscription ID.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a OpenApiGatewayOffering list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<OpenApiGatewayOffering> list(Context context);
}

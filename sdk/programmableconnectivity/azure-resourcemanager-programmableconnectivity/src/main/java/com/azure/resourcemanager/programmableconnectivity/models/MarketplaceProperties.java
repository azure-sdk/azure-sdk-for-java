// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure marketplace properties for a plan.
 */
@Fluent
public final class MarketplaceProperties implements JsonSerializable<MarketplaceProperties> {
    /*
     * Azure marketplace Offer ID for this plan.
     */
    private String offerId;

    /*
     * Azure marketplace Legacy Offer ID for this plan. This is used to fetch the details of the plan from the Azure
     * marketplace.
     */
    private String legacyOfferId;

    /*
     * Azure marketplace Publisher ID for this plan.
     */
    private String publisherId;

    /*
     * Azure marketplace Plan ID for this plan.
     */
    private String planId;

    /*
     * Azure marketplace Term ID for this plan.
     */
    private String termId;

    /**
     * Creates an instance of MarketplaceProperties class.
     */
    public MarketplaceProperties() {
    }

    /**
     * Get the offerId property: Azure marketplace Offer ID for this plan.
     * 
     * @return the offerId value.
     */
    public String offerId() {
        return this.offerId;
    }

    /**
     * Set the offerId property: Azure marketplace Offer ID for this plan.
     * 
     * @param offerId the offerId value to set.
     * @return the MarketplaceProperties object itself.
     */
    public MarketplaceProperties withOfferId(String offerId) {
        this.offerId = offerId;
        return this;
    }

    /**
     * Get the legacyOfferId property: Azure marketplace Legacy Offer ID for this plan. This is used to fetch the
     * details of the plan from the Azure marketplace.
     * 
     * @return the legacyOfferId value.
     */
    public String legacyOfferId() {
        return this.legacyOfferId;
    }

    /**
     * Set the legacyOfferId property: Azure marketplace Legacy Offer ID for this plan. This is used to fetch the
     * details of the plan from the Azure marketplace.
     * 
     * @param legacyOfferId the legacyOfferId value to set.
     * @return the MarketplaceProperties object itself.
     */
    public MarketplaceProperties withLegacyOfferId(String legacyOfferId) {
        this.legacyOfferId = legacyOfferId;
        return this;
    }

    /**
     * Get the publisherId property: Azure marketplace Publisher ID for this plan.
     * 
     * @return the publisherId value.
     */
    public String publisherId() {
        return this.publisherId;
    }

    /**
     * Set the publisherId property: Azure marketplace Publisher ID for this plan.
     * 
     * @param publisherId the publisherId value to set.
     * @return the MarketplaceProperties object itself.
     */
    public MarketplaceProperties withPublisherId(String publisherId) {
        this.publisherId = publisherId;
        return this;
    }

    /**
     * Get the planId property: Azure marketplace Plan ID for this plan.
     * 
     * @return the planId value.
     */
    public String planId() {
        return this.planId;
    }

    /**
     * Set the planId property: Azure marketplace Plan ID for this plan.
     * 
     * @param planId the planId value to set.
     * @return the MarketplaceProperties object itself.
     */
    public MarketplaceProperties withPlanId(String planId) {
        this.planId = planId;
        return this;
    }

    /**
     * Get the termId property: Azure marketplace Term ID for this plan.
     * 
     * @return the termId value.
     */
    public String termId() {
        return this.termId;
    }

    /**
     * Set the termId property: Azure marketplace Term ID for this plan.
     * 
     * @param termId the termId value to set.
     * @return the MarketplaceProperties object itself.
     */
    public MarketplaceProperties withTermId(String termId) {
        this.termId = termId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("offerId", this.offerId);
        jsonWriter.writeStringField("legacyOfferId", this.legacyOfferId);
        jsonWriter.writeStringField("publisherId", this.publisherId);
        jsonWriter.writeStringField("planId", this.planId);
        jsonWriter.writeStringField("termId", this.termId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MarketplaceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MarketplaceProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MarketplaceProperties.
     */
    public static MarketplaceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MarketplaceProperties deserializedMarketplaceProperties = new MarketplaceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("offerId".equals(fieldName)) {
                    deserializedMarketplaceProperties.offerId = reader.getString();
                } else if ("legacyOfferId".equals(fieldName)) {
                    deserializedMarketplaceProperties.legacyOfferId = reader.getString();
                } else if ("publisherId".equals(fieldName)) {
                    deserializedMarketplaceProperties.publisherId = reader.getString();
                } else if ("planId".equals(fieldName)) {
                    deserializedMarketplaceProperties.planId = reader.getString();
                } else if ("termId".equals(fieldName)) {
                    deserializedMarketplaceProperties.termId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMarketplaceProperties;
        });
    }
}

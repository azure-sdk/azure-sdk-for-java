// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.programmableconnectivity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.programmableconnectivity.models.ResourceProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** A Programmable Connectivity Open API Gateway Offerings resource. */
@Fluent
public final class OpenApiGatewayOfferingInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private OpenApiGatewayOfferingProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of OpenApiGatewayOfferingInner class. */
    public OpenApiGatewayOfferingInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     *
     * @return the innerProperties value.
     */
    private OpenApiGatewayOfferingProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the offerName property: Open Gateway Offering Display Name.
     *
     * @return the offerName value.
     */
    public String offerName() {
        return this.innerProperties() == null ? null : this.innerProperties().offerName();
    }

    /**
     * Set the offerName property: Open Gateway Offering Display Name.
     *
     * @param offerName the offerName value to set.
     * @return the OpenApiGatewayOfferingInner object itself.
     */
    public OpenApiGatewayOfferingInner withOfferName(String offerName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayOfferingProperties();
        }
        this.innerProperties().withOfferName(offerName);
        return this;
    }

    /**
     * Get the operatorName property: Name of the Operator this offering belongs to.
     *
     * @return the operatorName value.
     */
    public String operatorName() {
        return this.innerProperties() == null ? null : this.innerProperties().operatorName();
    }

    /**
     * Set the operatorName property: Name of the Operator this offering belongs to.
     *
     * @param operatorName the operatorName value to set.
     * @return the OpenApiGatewayOfferingInner object itself.
     */
    public OpenApiGatewayOfferingInner withOperatorName(String operatorName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayOfferingProperties();
        }
        this.innerProperties().withOperatorName(operatorName);
        return this;
    }

    /**
     * Get the endpoint property: Endpoint (Base URL) for the Operator's Network API in current region/country.
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.innerProperties() == null ? null : this.innerProperties().endpoint();
    }

    /**
     * Set the endpoint property: Endpoint (Base URL) for the Operator's Network API in current region/country.
     *
     * @param endpoint the endpoint value to set.
     * @return the OpenApiGatewayOfferingInner object itself.
     */
    public OpenApiGatewayOfferingInner withEndpoint(String endpoint) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayOfferingProperties();
        }
        this.innerProperties().withEndpoint(endpoint);
        return this;
    }

    /**
     * Get the country property: Name of the country where this offering is being supported.
     *
     * @return the country value.
     */
    public String country() {
        return this.innerProperties() == null ? null : this.innerProperties().country();
    }

    /**
     * Set the country property: Name of the country where this offering is being supported.
     *
     * @param country the country value to set.
     * @return the OpenApiGatewayOfferingInner object itself.
     */
    public OpenApiGatewayOfferingInner withCountry(String country) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayOfferingProperties();
        }
        this.innerProperties().withCountry(country);
        return this;
    }

    /**
     * Get the features property: List of Network API features supported in this offering. The features are specific to
     * a country/region.
     *
     * @return the features value.
     */
    public List<String> features() {
        return this.innerProperties() == null ? null : this.innerProperties().features();
    }

    /**
     * Set the features property: List of Network API features supported in this offering. The features are specific to
     * a country/region.
     *
     * @param features the features value to set.
     * @return the OpenApiGatewayOfferingInner object itself.
     */
    public OpenApiGatewayOfferingInner withFeatures(List<String> features) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OpenApiGatewayOfferingProperties();
        }
        this.innerProperties().withFeatures(features);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

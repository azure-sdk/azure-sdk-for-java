// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.migrate.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migrate.MigrateManager;
import com.azure.resourcemanager.migrate.models.WebAppCompoundAssessmentSummary;
import com.azure.resourcemanager.migrate.models.WebAppType;
import com.azure.resourcemanager.migrate.models.WebServerType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CompoundAssessmentSummaryOperationsListByParentMockTests {
    @Test
    public void testListByParent() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"summaryType\":\"Target\",\"summaryName\":\"duugidyjr\",\"sources\":[{\"sourceName\":\"IIS\",\"sourceType\":\"Host\",\"platform\":\"Unknown\",\"count\":766224962}],\"targets\":[{\"targetName\":\"SqlDatabase\",\"targetType\":\"Instance\",\"platform\":\"IaaS\",\"count\":675704984}],\"targetSourceMapping\":[{\"sourceRef\":\"TomCat\",\"targetRef\":\"AzureAppServiceContainer\",\"sourceCount\":1486272447,\"targetCount\":529592400,\"migrationDetails\":{\"readinessSummary\":[{},{},{},{}],\"migrationType\":\"Unknown\"},\"managementDetails\":[{},{},{},{}],\"costDetails\":[{},{},{}],\"savingsDetails\":[{}],\"confidenceScore\":28.76282136834404},{\"sourceRef\":\"SAPInstance\",\"targetRef\":\"MySQLAzureFlexServer\",\"sourceCount\":1914432251,\"targetCount\":63986979,\"migrationDetails\":{\"readinessSummary\":[{},{}],\"migrationType\":\"Rearchitect\"},\"managementDetails\":[{},{},{}],\"costDetails\":[{},{},{},{}],\"savingsDetails\":[{},{}],\"confidenceScore\":97.56653262814537}],\"costComponents\":[{\"savingOptions\":\"RI3Year\",\"costDetail\":[{},{},{}]}],\"savingsComponents\":[{\"savingOptions\":\"None\",\"savingsDetail\":[{}]},{\"savingOptions\":\"RI1Year\",\"savingsDetail\":[{},{},{},{}]},{\"savingOptions\":\"RI3Year\",\"savingsDetail\":[{},{},{}]}],\"assessmentName\":\"tko\",\"discoveredLightSummary\":{\"numberOfWebApps\":926679159,\"numberOfWebAppsPerType\":[{\"webAppType\":\"Unknown\",\"count\":333094369},{\"webAppType\":\"Unknown\",\"count\":73605186},{\"webAppType\":\"Java\",\"count\":124550903}],\"numberOfWebServersPerType\":[{\"webServerType\":\"Unknown\",\"count\":1340454664},{\"webServerType\":\"Unknown\",\"count\":45967354},{\"webServerType\":\"Unknown\",\"count\":592708150},{\"webServerType\":\"Unknown\",\"count\":969530861}],\"numberOfWebServers\":1223607421,\"numberOfServers\":626726522}},\"id\":\"ipazyxoegukgjnpi\",\"name\":\"cgygev\",\"type\":\"zntypmrb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrateManager manager = MigrateManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<WebAppCompoundAssessmentSummary> response = manager.compoundAssessmentSummaryOperations()
            .listByParent("ajiwkuo", "oskg", "sauuimj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tko", response.iterator().next().properties().assessmentName());
        Assertions.assertEquals(926679159,
            response.iterator().next().properties().discoveredLightSummary().numberOfWebApps());
        Assertions.assertEquals(WebAppType.UNKNOWN,
            response.iterator()
                .next()
                .properties()
                .discoveredLightSummary()
                .numberOfWebAppsPerType()
                .get(0)
                .webAppType());
        Assertions.assertEquals(333094369,
            response.iterator().next().properties().discoveredLightSummary().numberOfWebAppsPerType().get(0).count());
        Assertions.assertEquals(WebServerType.UNKNOWN,
            response.iterator()
                .next()
                .properties()
                .discoveredLightSummary()
                .numberOfWebServersPerType()
                .get(0)
                .webServerType());
        Assertions.assertEquals(1340454664,
            response.iterator()
                .next()
                .properties()
                .discoveredLightSummary()
                .numberOfWebServersPerType()
                .get(0)
                .count());
        Assertions.assertEquals(1223607421,
            response.iterator().next().properties().discoveredLightSummary().numberOfWebServers());
        Assertions.assertEquals(626726522,
            response.iterator().next().properties().discoveredLightSummary().numberOfServers());
    }
}

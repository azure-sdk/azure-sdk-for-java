// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.migrate.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.migrate.fluent.models.CompoundAssessmentInner;
import com.azure.resourcemanager.migrate.models.CompoundAssessmentProperties;
import com.azure.resourcemanager.migrate.models.TargetAssessmentArmIds;
import org.junit.jupiter.api.Assertions;

public final class CompoundAssessmentInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CompoundAssessmentInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Accepted\",\"targetAssessmentArmIds\":{\"aks\":\"uv\",\"azureAppService\":\"xpyb\",\"azureAppServiceContainer\":\"m\"},\"fallbackMachineAssessmentArmId\":\"mtz\",\"details\":{\"createdTimestamp\":\"2021-03-21T18:26:35Z\",\"updatedTimestamp\":\"2021-10-31T16:25:13Z\",\"status\":\"Failed\"}},\"id\":\"pidgsybbejhphoyc\",\"name\":\"sx\",\"type\":\"obhdxbmtqioqjze\"}")
            .toObject(CompoundAssessmentInner.class);
        Assertions.assertEquals("uv", model.properties().targetAssessmentArmIds().aks());
        Assertions.assertEquals("xpyb", model.properties().targetAssessmentArmIds().azureAppService());
        Assertions.assertEquals("m", model.properties().targetAssessmentArmIds().azureAppServiceContainer());
        Assertions.assertEquals("mtz", model.properties().fallbackMachineAssessmentArmId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CompoundAssessmentInner model = new CompoundAssessmentInner().withProperties(
            new CompoundAssessmentProperties().withTargetAssessmentArmIds(new TargetAssessmentArmIds().withAks("uv")
                .withAzureAppService("xpyb")
                .withAzureAppServiceContainer("m")).withFallbackMachineAssessmentArmId("mtz"));
        model = BinaryData.fromObject(model).toObject(CompoundAssessmentInner.class);
        Assertions.assertEquals("uv", model.properties().targetAssessmentArmIds().aks());
        Assertions.assertEquals("xpyb", model.properties().targetAssessmentArmIds().azureAppService());
        Assertions.assertEquals("m", model.properties().targetAssessmentArmIds().azureAppServiceContainer());
        Assertions.assertEquals("mtz", model.properties().fallbackMachineAssessmentArmId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.migrate.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.migrate.MigrateManager;
import com.azure.resourcemanager.migrate.models.CompoundAssessment;
import com.azure.resourcemanager.migrate.models.CompoundAssessmentProperties;
import com.azure.resourcemanager.migrate.models.TargetAssessmentArmIds;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CompoundAssessmentOperationsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"targetAssessmentArmIds\":{\"aks\":\"cfsf\",\"azureAppService\":\"ymddys\",\"azureAppServiceContainer\":\"i\"},\"fallbackMachineAssessmentArmId\":\"xhqyudxorrqnb\",\"details\":{\"createdTimestamp\":\"2021-02-11T00:33:58Z\",\"updatedTimestamp\":\"2021-10-04T17:32:47Z\",\"status\":\"Completed\"}},\"id\":\"qrvkdv\",\"name\":\"sllr\",\"type\":\"vvdfwatkpnpul\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MigrateManager manager = MigrateManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        CompoundAssessment response = manager.compoundAssessmentOperations()
            .define("mdajv")
            .withExistingAssessmentProject("attpngjcrcczsq", "jh")
            .withProperties(new CompoundAssessmentProperties()
                .withTargetAssessmentArmIds(new TargetAssessmentArmIds().withAks("nqecanoaeup")
                    .withAzureAppService("yhltrpmopjmcm")
                    .withAzureAppServiceContainer("u"))
                .withFallbackMachineAssessmentArmId("thfuiuaodsfcpkvx"))
            .create();

        Assertions.assertEquals("cfsf", response.properties().targetAssessmentArmIds().aks());
        Assertions.assertEquals("ymddys", response.properties().targetAssessmentArmIds().azureAppService());
        Assertions.assertEquals("i", response.properties().targetAssessmentArmIds().azureAppServiceContainer());
        Assertions.assertEquals("xhqyudxorrqnb", response.properties().fallbackMachineAssessmentArmId());
    }
}

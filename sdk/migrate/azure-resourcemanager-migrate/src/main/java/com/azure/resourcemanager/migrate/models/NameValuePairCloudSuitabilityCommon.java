// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.migrate.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The generic name value pair.
 */
@Immutable
public final class NameValuePairCloudSuitabilityCommon
    implements JsonSerializable<NameValuePairCloudSuitabilityCommon> {
    /*
     * The name.
     */
    private CloudSuitabilityCommon name;

    /*
     * The value.
     */
    private Integer value;

    /**
     * Creates an instance of NameValuePairCloudSuitabilityCommon class.
     */
    private NameValuePairCloudSuitabilityCommon() {
    }

    /**
     * Get the name property: The name.
     * 
     * @return the name value.
     */
    public CloudSuitabilityCommon name() {
        return this.name;
    }

    /**
     * Get the value property: The value.
     * 
     * @return the value value.
     */
    public Integer value() {
        return this.value;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NameValuePairCloudSuitabilityCommon from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NameValuePairCloudSuitabilityCommon if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the NameValuePairCloudSuitabilityCommon.
     */
    public static NameValuePairCloudSuitabilityCommon fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NameValuePairCloudSuitabilityCommon deserializedNameValuePairCloudSuitabilityCommon
                = new NameValuePairCloudSuitabilityCommon();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedNameValuePairCloudSuitabilityCommon.name
                        = CloudSuitabilityCommon.fromString(reader.getString());
                } else if ("value".equals(fieldName)) {
                    deserializedNameValuePairCloudSuitabilityCommon.value = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNameValuePairCloudSuitabilityCommon;
        });
    }
}

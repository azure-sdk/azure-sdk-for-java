// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.migrate.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The migration suitability.
 */
@Immutable
public final class MigrationSuitability implements JsonSerializable<MigrationSuitability> {
    /*
     * The migration suitability.
     */
    private CloudSuitabilityCommon readiness;

    /**
     * Creates an instance of MigrationSuitability class.
     */
    private MigrationSuitability() {
    }

    /**
     * Get the readiness property: The migration suitability.
     * 
     * @return the readiness value.
     */
    public CloudSuitabilityCommon readiness() {
        return this.readiness;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MigrationSuitability from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MigrationSuitability if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MigrationSuitability.
     */
    public static MigrationSuitability fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MigrationSuitability deserializedMigrationSuitability = new MigrationSuitability();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("readiness".equals(fieldName)) {
                    deserializedMigrationSuitability.readiness = CloudSuitabilityCommon.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMigrationSuitability;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.migrate.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.migrate.fluent.models.DownloadUrlInner;
import com.azure.resourcemanager.migrate.fluent.models.MachineAssessmentV2Inner;
import com.azure.resourcemanager.migrate.models.DownloadUrlRequest;

/**
 * An instance of this class provides access to all the operations defined in MachineAssessmentsV2OperationsClient.
 */
public interface MachineAssessmentsV2OperationsClient {
    /**
     * Get a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MachineAssessmentV2 along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MachineAssessmentV2Inner> getWithResponse(String resourceGroupName, String projectName,
        String assessmentName, Context context);

    /**
     * Get a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MachineAssessmentV2.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MachineAssessmentV2Inner get(String resourceGroupName, String projectName, String assessmentName);

    /**
     * List MachineAssessmentV2 resources by AssessmentProject.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MachineAssessmentV2 list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MachineAssessmentV2Inner> listByParent(String resourceGroupName, String projectName);

    /**
     * List MachineAssessmentV2 resources by AssessmentProject.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MachineAssessmentV2 list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MachineAssessmentV2Inner> listByParent(String resourceGroupName, String projectName, Context context);

    /**
     * Create a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of machine assessment V2 resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MachineAssessmentV2Inner>, MachineAssessmentV2Inner> beginCreate(String resourceGroupName,
        String projectName, String assessmentName, MachineAssessmentV2Inner resource);

    /**
     * Create a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of machine assessment V2 resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MachineAssessmentV2Inner>, MachineAssessmentV2Inner> beginCreate(String resourceGroupName,
        String projectName, String assessmentName, MachineAssessmentV2Inner resource, Context context);

    /**
     * Create a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machine assessment V2 resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MachineAssessmentV2Inner create(String resourceGroupName, String projectName, String assessmentName,
        MachineAssessmentV2Inner resource);

    /**
     * Create a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return machine assessment V2 resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MachineAssessmentV2Inner create(String resourceGroupName, String projectName, String assessmentName,
        MachineAssessmentV2Inner resource, Context context);

    /**
     * Delete a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String projectName, String assessmentName,
        Context context);

    /**
     * Delete a MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String projectName, String assessmentName);

    /**
     * Get download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DownloadUrlInner>, DownloadUrlInner> beginDownloadUrl(String resourceGroupName,
        String projectName, String assessmentName, DownloadUrlRequest body);

    /**
     * Get download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DownloadUrlInner>, DownloadUrlInner> beginDownloadUrl(String resourceGroupName,
        String projectName, String assessmentName, DownloadUrlRequest body, Context context);

    /**
     * Get download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DownloadUrlInner downloadUrl(String resourceGroupName, String projectName, String assessmentName,
        DownloadUrlRequest body);

    /**
     * Get download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return download URL for the assessment report.
     * 
     * Get the URL for downloading the assessment in a report format.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DownloadUrlInner downloadUrl(String resourceGroupName, String projectName, String assessmentName,
        DownloadUrlRequest body, Context context);
}

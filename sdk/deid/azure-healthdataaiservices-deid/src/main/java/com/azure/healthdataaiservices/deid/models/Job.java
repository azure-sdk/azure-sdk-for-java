// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.healthdataaiservices.deid.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * A job containing a batch of documents to deidentify.
 */
@Fluent
public final class Job {
    /*
     * The name of a job.
     */
    @Generated
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Current status of a job.
     */
    @Generated
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private JobStatus status;

    /*
     * Summary of a job. Exists only when the job is completed.
     */
    @Generated
    @JsonProperty(value = "summary", access = JsonProperty.Access.WRITE_ONLY)
    private JobSummary summary;

    /*
     * Date and time when the job was created.
     */
    @Generated
    @JsonProperty(value = "createdAt", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdAt;

    /*
     * Date and time when the job was started.
     */
    @Generated
    @JsonProperty(value = "startedAt", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startedAt;

    /*
     * Date and time when the job was completed.
     * 
     * If the job is canceled, this is the time when the job was canceled.
     * 
     * If the job failed, this is the time when the job failed.
     */
    @Generated
    @JsonProperty(value = "completedAt", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime completedAt;

    /*
     * Storage location to perform the operation on.
     */
    @Generated
    @JsonProperty(value = "sourceLocation")
    private SourceStorageLocation sourceLocation;

    /*
     * Target location to store output of operation.
     */
    @Generated
    @JsonProperty(value = "targetLocation")
    private TargetStorageLocation targetLocation;

    /*
     * Data type of the input documents.
     */
    @Generated
    @JsonProperty(value = "dataType")
    private DocumentDataType dataType;

    /*
     * Operation to perform on the input documents.
     */
    @Generated
    @JsonProperty(value = "operation")
    private OperationType operation;

    /*
     * Format of the redacted output. Only valid when Operation is Redact.
     */
    @Generated
    @JsonProperty(value = "redactionFormat")
    private String redactionFormat;

    /**
     * Creates an instance of Job class.
     * 
     * @param sourceLocation the sourceLocation value to set.
     * @param targetLocation the targetLocation value to set.
     * @param dataType the dataType value to set.
     * @param operation the operation value to set.
     */
    @Generated
    @JsonCreator
    public Job(@JsonProperty(value = "sourceLocation") SourceStorageLocation sourceLocation,
        @JsonProperty(value = "targetLocation") TargetStorageLocation targetLocation,
        @JsonProperty(value = "dataType") DocumentDataType dataType,
        @JsonProperty(value = "operation") OperationType operation) {
        this.sourceLocation = sourceLocation;
        this.targetLocation = targetLocation;
        this.dataType = dataType;
        this.operation = operation;
    }

    /**
     * Get the name property: The name of a job.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the status property: Current status of a job.
     * 
     * @return the status value.
     */
    @Generated
    public JobStatus getStatus() {
        return this.status;
    }

    /**
     * Get the summary property: Summary of a job. Exists only when the job is completed.
     * 
     * @return the summary value.
     */
    @Generated
    public JobSummary getSummary() {
        return this.summary;
    }

    /**
     * Get the createdAt property: Date and time when the job was created.
     * 
     * @return the createdAt value.
     */
    @Generated
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Get the startedAt property: Date and time when the job was started.
     * 
     * @return the startedAt value.
     */
    @Generated
    public OffsetDateTime getStartedAt() {
        return this.startedAt;
    }

    /**
     * Get the completedAt property: Date and time when the job was completed.
     * 
     * If the job is canceled, this is the time when the job was canceled.
     * 
     * If the job failed, this is the time when the job failed.
     * 
     * @return the completedAt value.
     */
    @Generated
    public OffsetDateTime getCompletedAt() {
        return this.completedAt;
    }

    /**
     * Get the sourceLocation property: Storage location to perform the operation on.
     * 
     * @return the sourceLocation value.
     */
    @Generated
    public SourceStorageLocation getSourceLocation() {
        return this.sourceLocation;
    }

    /**
     * Get the targetLocation property: Target location to store output of operation.
     * 
     * @return the targetLocation value.
     */
    @Generated
    public TargetStorageLocation getTargetLocation() {
        return this.targetLocation;
    }

    /**
     * Get the dataType property: Data type of the input documents.
     * 
     * @return the dataType value.
     */
    @Generated
    public DocumentDataType getDataType() {
        return this.dataType;
    }

    /**
     * Get the operation property: Operation to perform on the input documents.
     * 
     * @return the operation value.
     */
    @Generated
    public OperationType getOperation() {
        return this.operation;
    }

    /**
     * Get the redactionFormat property: Format of the redacted output. Only valid when Operation is Redact.
     * 
     * @return the redactionFormat value.
     */
    @Generated
    public String getRedactionFormat() {
        return this.redactionFormat;
    }

    /**
     * Set the redactionFormat property: Format of the redacted output. Only valid when Operation is Redact.
     * 
     * @param redactionFormat the redactionFormat value to set.
     * @return the Job object itself.
     */
    @Generated
    public Job setRedactionFormat(String redactionFormat) {
        this.redactionFormat = redactionFormat;
        return this;
    }
}

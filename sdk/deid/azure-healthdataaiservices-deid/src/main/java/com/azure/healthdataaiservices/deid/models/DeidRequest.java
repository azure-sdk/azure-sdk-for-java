// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.healthdataaiservices.deid.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Request for synchronous DeID operation.
 */
@Fluent
public final class DeidRequest {
    /*
     * Input text to deidentify.
     */
    @Generated
    @JsonProperty(value = "inputText")
    private String inputText;

    /*
     * Data type of the input.
     */
    @Generated
    @JsonProperty(value = "dataType")
    private DocumentDataType dataType;

    /*
     * Operation to perform on the input.
     */
    @Generated
    @JsonProperty(value = "operation")
    private OperationType operation;

    /*
     * Requested Encoding of the tag response indices.
     */
    @Generated
    @JsonProperty(value = "stringIndexType")
    private StringIndexType stringIndexType;

    /*
     * Format of the redacted output. Only valid when OperationType is Redact.
     */
    @Generated
    @JsonProperty(value = "redactionFormat")
    private String redactionFormat;

    /**
     * Creates an instance of DeidRequest class.
     * 
     * @param inputText the inputText value to set.
     * @param dataType the dataType value to set.
     * @param operation the operation value to set.
     * @param stringIndexType the stringIndexType value to set.
     */
    @Generated
    @JsonCreator
    public DeidRequest(@JsonProperty(value = "inputText") String inputText,
        @JsonProperty(value = "dataType") DocumentDataType dataType,
        @JsonProperty(value = "operation") OperationType operation,
        @JsonProperty(value = "stringIndexType") StringIndexType stringIndexType) {
        this.inputText = inputText;
        this.dataType = dataType;
        this.operation = operation;
        this.stringIndexType = stringIndexType;
    }

    /**
     * Get the inputText property: Input text to deidentify.
     * 
     * @return the inputText value.
     */
    @Generated
    public String getInputText() {
        return this.inputText;
    }

    /**
     * Get the dataType property: Data type of the input.
     * 
     * @return the dataType value.
     */
    @Generated
    public DocumentDataType getDataType() {
        return this.dataType;
    }

    /**
     * Get the operation property: Operation to perform on the input.
     * 
     * @return the operation value.
     */
    @Generated
    public OperationType getOperation() {
        return this.operation;
    }

    /**
     * Get the stringIndexType property: Requested Encoding of the tag response indices.
     * 
     * @return the stringIndexType value.
     */
    @Generated
    public StringIndexType getStringIndexType() {
        return this.stringIndexType;
    }

    /**
     * Get the redactionFormat property: Format of the redacted output. Only valid when OperationType is Redact.
     * 
     * @return the redactionFormat value.
     */
    @Generated
    public String getRedactionFormat() {
        return this.redactionFormat;
    }

    /**
     * Set the redactionFormat property: Format of the redacted output. Only valid when OperationType is Redact.
     * 
     * @param redactionFormat the redactionFormat value to set.
     * @return the DeidRequest object itself.
     */
    @Generated
    public DeidRequest setRedactionFormat(String redactionFormat) {
        this.redactionFormat = redactionFormat;
        return this;
    }
}

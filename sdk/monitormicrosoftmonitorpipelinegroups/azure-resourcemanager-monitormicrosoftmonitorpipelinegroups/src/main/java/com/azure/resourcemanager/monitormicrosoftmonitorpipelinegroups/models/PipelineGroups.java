// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitormicrosoftmonitorpipelinegroups.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of PipelineGroups.
 */
public interface PipelineGroups {
    /**
     * Lists all workspaces in the specified subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PipelineGroup> list();

    /**
     * Lists all workspaces in the specified subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PipelineGroup> list(Context context);

    /**
     * Lists all workspaces in the specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PipelineGroup> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all workspaces in the specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PipelineGroup> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Returns the specific pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition along with {@link Response}.
     */
    Response<PipelineGroup> getByResourceGroupWithResponse(String resourceGroupName, String pipelineGroupName,
        Context context);

    /**
     * Returns the specific pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition.
     */
    PipelineGroup getByResourceGroup(String resourceGroupName, String pipelineGroupName);

    /**
     * Delete a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String pipelineGroupName);

    /**
     * Delete a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String pipelineGroupName, Context context);

    /**
     * Returns the specific pipeline group instance.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition along with {@link Response}.
     */
    PipelineGroup getById(String id);

    /**
     * Returns the specific pipeline group instance.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition along with {@link Response}.
     */
    Response<PipelineGroup> getByIdWithResponse(String id, Context context);

    /**
     * Delete a pipeline group instance.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a pipeline group instance.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new PipelineGroup resource.
     * 
     * @param name resource name.
     * @return the first stage of the new PipelineGroup definition.
     */
    PipelineGroup.DefinitionStages.Blank define(String name);
}

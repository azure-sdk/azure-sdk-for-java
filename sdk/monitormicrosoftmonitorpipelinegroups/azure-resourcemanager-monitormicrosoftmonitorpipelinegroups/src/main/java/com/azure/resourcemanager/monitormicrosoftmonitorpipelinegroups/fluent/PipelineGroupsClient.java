// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitormicrosoftmonitorpipelinegroups.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.monitormicrosoftmonitorpipelinegroups.fluent.models.PipelineGroupInner;
import com.azure.resourcemanager.monitormicrosoftmonitorpipelinegroups.models.PipelineGroupUpdate;

/**
 * An instance of this class provides access to all the operations defined in PipelineGroupsClient.
 */
public interface PipelineGroupsClient {
    /**
     * Lists all workspaces in the specified subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineGroupInner> list();

    /**
     * Lists all workspaces in the specified subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineGroupInner> list(Context context);

    /**
     * Lists all workspaces in the specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineGroupInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all workspaces in the specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a PipelineGroup list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineGroupInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Returns the specific pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PipelineGroupInner> getByResourceGroupWithResponse(String resourceGroupName, String pipelineGroupName,
        Context context);

    /**
     * Returns the specific pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineGroupInner getByResourceGroup(String resourceGroupName, String pipelineGroupName);

    /**
     * Create or update a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineGroupInner>, PipelineGroupInner> beginCreateOrUpdate(String resourceGroupName,
        String pipelineGroupName, PipelineGroupInner resource);

    /**
     * Create or update a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineGroupInner>, PipelineGroupInner> beginCreateOrUpdate(String resourceGroupName,
        String pipelineGroupName, PipelineGroupInner resource, Context context);

    /**
     * Create or update a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineGroupInner createOrUpdate(String resourceGroupName, String pipelineGroupName, PipelineGroupInner resource);

    /**
     * Create or update a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineGroupInner createOrUpdate(String resourceGroupName, String pipelineGroupName, PipelineGroupInner resource,
        Context context);

    /**
     * Updates a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineGroupInner>, PipelineGroupInner> beginUpdate(String resourceGroupName,
        String pipelineGroupName, PipelineGroupUpdate properties);

    /**
     * Updates a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineGroupInner>, PipelineGroupInner> beginUpdate(String resourceGroupName,
        String pipelineGroupName, PipelineGroupUpdate properties, Context context);

    /**
     * Updates a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineGroupInner update(String resourceGroupName, String pipelineGroupName, PipelineGroupUpdate properties);

    /**
     * Updates a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a pipeline group definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineGroupInner update(String resourceGroupName, String pipelineGroupName, PipelineGroupUpdate properties,
        Context context);

    /**
     * Delete a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String pipelineGroupName);

    /**
     * Delete a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String pipelineGroupName, Context context);

    /**
     * Delete a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String pipelineGroupName);

    /**
     * Delete a pipeline group instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineGroupName The name of pipeline group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String pipelineGroupName, Context context);
}

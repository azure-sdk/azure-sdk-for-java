// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import com.azure.resourcemanager.computeschedule.models.Schedule;
import com.azure.resourcemanager.computeschedule.models.SubmitStartRequest;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubmitStartRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubmitStartRequest model = BinaryData.fromString(
            "{\"schedule\":{\"deadline\":\"2021-07-30T11:45:35Z\",\"timezone\":\"jrwzox\",\"deadlineType\":\"InitiateAt\"},\"executionParameters\":{\"optimizationPreference\":\"Availability\",\"retryPolicy\":{\"retryCount\":1984213346,\"retryWindowInMinutes\":1480100872}},\"resources\":{\"ids\":[\"zitonpeqfpjkjl\",\"ofpdvh\"]},\"correlationid\":\"fxxypininmayhuy\"}")
            .toObject(SubmitStartRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-30T11:45:35Z"), model.schedule().deadline());
        Assertions.assertEquals("jrwzox", model.schedule().timezone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.AVAILABILITY,
            model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1984213346, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1480100872, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("zitonpeqfpjkjl", model.resources().ids().get(0));
        Assertions.assertEquals("fxxypininmayhuy", model.correlationid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubmitStartRequest model = new SubmitStartRequest()
            .withSchedule(new Schedule().withDeadline(OffsetDateTime.parse("2021-07-30T11:45:35Z"))
                .withTimezone("jrwzox")
                .withDeadlineType(DeadlineType.INITIATE_AT))
            .withExecutionParameters(
                new ExecutionParameters().withOptimizationPreference(OptimizationPreference.AVAILABILITY)
                    .withRetryPolicy(new RetryPolicy().withRetryCount(1984213346).withRetryWindowInMinutes(1480100872)))
            .withResources(new Resources().withIds(Arrays.asList("zitonpeqfpjkjl", "ofpdvh")))
            .withCorrelationid("fxxypininmayhuy");
        model = BinaryData.fromObject(model).toObject(SubmitStartRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-30T11:45:35Z"), model.schedule().deadline());
        Assertions.assertEquals("jrwzox", model.schedule().timezone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.AVAILABILITY,
            model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1984213346, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(1480100872, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("zitonpeqfpjkjl", model.resources().ids().get(0));
        Assertions.assertEquals("fxxypininmayhuy", model.correlationid());
    }
}

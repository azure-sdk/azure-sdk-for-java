// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.ExecuteDeleteRequest;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ExecuteDeleteRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ExecuteDeleteRequest model = BinaryData.fromString(
            "{\"executionParameters\":{\"optimizationPreference\":\"Cost\",\"retryPolicy\":{\"retryCount\":1634659545,\"retryWindowInMinutes\":102076266}},\"resources\":{\"ids\":[\"vqwhbmdgbbjfd\",\"gmbmbexppbh\",\"q\",\"rolfpfp\"]},\"correlationid\":\"lgbquxig\",\"forceDeletion\":true}")
            .toObject(ExecuteDeleteRequest.class);
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1634659545, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(102076266, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("vqwhbmdgbbjfd", model.resources().ids().get(0));
        Assertions.assertEquals("lgbquxig", model.correlationid());
        Assertions.assertTrue(model.forceDeletion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ExecuteDeleteRequest model = new ExecuteDeleteRequest()
            .withExecutionParameters(new ExecutionParameters().withOptimizationPreference(OptimizationPreference.COST)
                .withRetryPolicy(new RetryPolicy().withRetryCount(1634659545).withRetryWindowInMinutes(102076266)))
            .withResources(new Resources().withIds(Arrays.asList("vqwhbmdgbbjfd", "gmbmbexppbh", "q", "rolfpfp")))
            .withCorrelationid("lgbquxig")
            .withForceDeletion(true);
        model = BinaryData.fromObject(model).toObject(ExecuteDeleteRequest.class);
        Assertions.assertEquals(OptimizationPreference.COST, model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1634659545, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(102076266, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("vqwhbmdgbbjfd", model.resources().ids().get(0));
        Assertions.assertEquals("lgbquxig", model.correlationid());
        Assertions.assertTrue(model.forceDeletion());
    }
}

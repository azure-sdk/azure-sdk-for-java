// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.computeschedule.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.computeschedule.models.DeadlineType;
import com.azure.resourcemanager.computeschedule.models.ExecutionParameters;
import com.azure.resourcemanager.computeschedule.models.OptimizationPreference;
import com.azure.resourcemanager.computeschedule.models.Resources;
import com.azure.resourcemanager.computeschedule.models.RetryPolicy;
import com.azure.resourcemanager.computeschedule.models.Schedule;
import com.azure.resourcemanager.computeschedule.models.SubmitHibernateRequest;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class SubmitHibernateRequestTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SubmitHibernateRequest model = BinaryData.fromString(
            "{\"schedule\":{\"deadline\":\"2021-11-17T16:07:24Z\",\"timezone\":\"yoqpsoaccta\",\"deadlineType\":\"InitiateAt\"},\"executionParameters\":{\"optimizationPreference\":\"Availability\",\"retryPolicy\":{\"retryCount\":1063449943,\"retryWindowInMinutes\":88405242}},\"resources\":{\"ids\":[\"ryffdfdosy\"]},\"correlationid\":\"expa\"}")
            .toObject(SubmitHibernateRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-17T16:07:24Z"), model.schedule().deadline());
        Assertions.assertEquals("yoqpsoaccta", model.schedule().timezone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.AVAILABILITY,
            model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1063449943, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(88405242, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("ryffdfdosy", model.resources().ids().get(0));
        Assertions.assertEquals("expa", model.correlationid());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SubmitHibernateRequest model = new SubmitHibernateRequest()
            .withSchedule(new Schedule().withDeadline(OffsetDateTime.parse("2021-11-17T16:07:24Z"))
                .withTimezone("yoqpsoaccta")
                .withDeadlineType(DeadlineType.INITIATE_AT))
            .withExecutionParameters(
                new ExecutionParameters().withOptimizationPreference(OptimizationPreference.AVAILABILITY)
                    .withRetryPolicy(new RetryPolicy().withRetryCount(1063449943).withRetryWindowInMinutes(88405242)))
            .withResources(new Resources().withIds(Arrays.asList("ryffdfdosy")))
            .withCorrelationid("expa");
        model = BinaryData.fromObject(model).toObject(SubmitHibernateRequest.class);
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-17T16:07:24Z"), model.schedule().deadline());
        Assertions.assertEquals("yoqpsoaccta", model.schedule().timezone());
        Assertions.assertEquals(DeadlineType.INITIATE_AT, model.schedule().deadlineType());
        Assertions.assertEquals(OptimizationPreference.AVAILABILITY,
            model.executionParameters().optimizationPreference());
        Assertions.assertEquals(1063449943, model.executionParameters().retryPolicy().retryCount());
        Assertions.assertEquals(88405242, model.executionParameters().retryPolicy().retryWindowInMinutes());
        Assertions.assertEquals("ryffdfdosy", model.resources().ids().get(0));
        Assertions.assertEquals("expa", model.correlationid());
    }
}

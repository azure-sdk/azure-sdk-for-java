// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.imageanalysis.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** An object representing observed text styles. */
@Immutable
public final class DocumentStyle {
    /*
     * Confidence of correctly identifying the style.
     */
    @Generated
    @JsonProperty(value = "confidence")
    private double confidence;

    /*
     * Is content handwritten or not.
     */
    @Generated
    @JsonProperty(value = "isHandwritten")
    private boolean isHandwritten;

    /*
     * Location of the text elements in the concatenated content the style applies to.
     */
    @Generated
    @JsonProperty(value = "spans")
    private List<DocumentSpan> spans;

    /**
     * Creates an instance of DocumentStyle class.
     *
     * @param confidence the confidence value to set.
     * @param isHandwritten the isHandwritten value to set.
     * @param spans the spans value to set.
     */
    @Generated
    @JsonCreator
    private DocumentStyle(
            @JsonProperty(value = "confidence") double confidence,
            @JsonProperty(value = "isHandwritten") boolean isHandwritten,
            @JsonProperty(value = "spans") List<DocumentSpan> spans) {
        this.confidence = confidence;
        this.isHandwritten = isHandwritten;
        this.spans = spans;
    }

    /**
     * Get the confidence property: Confidence of correctly identifying the style.
     *
     * @return the confidence value.
     */
    @Generated
    public double getConfidence() {
        return this.confidence;
    }

    /**
     * Get the isHandwritten property: Is content handwritten or not.
     *
     * @return the isHandwritten value.
     */
    @Generated
    public boolean isHandwritten() {
        return this.isHandwritten;
    }

    /**
     * Get the spans property: Location of the text elements in the concatenated content the style applies to.
     *
     * @return the spans value.
     */
    @Generated
    public List<DocumentSpan> getSpans() {
        return this.spans;
    }
}

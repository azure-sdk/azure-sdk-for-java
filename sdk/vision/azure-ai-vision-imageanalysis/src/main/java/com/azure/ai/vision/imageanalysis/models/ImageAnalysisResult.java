// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.imageanalysis.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describe the combined results of different types of image analysis. */
@Immutable
public final class ImageAnalysisResult {
    /*
     * A CaptionResult for the image.
     */
    @Generated
    @JsonProperty(value = "captionResult")
    private CaptionResult captionResult;

    /*
     * A list of categories for the image.
     */
    @Generated
    @JsonProperty(value = "customModelResult")
    private CustomModelResult customModelResult;

    /*
     * A denseCaptionsResult for the image.
     */
    @Generated
    @JsonProperty(value = "denseCaptionsResult")
    private DenseCaptionsResult denseCaptionsResult;

    /*
     * The model used for the analysis
     */
    @Generated
    @JsonProperty(value = "metadata")
    private ImageMetadata metadata;

    /*
     * The model used for the analysis
     */
    @Generated
    @JsonProperty(value = "modelVersion")
    private String modelVersion;

    /*
     * A list of objects for the image.
     */
    @Generated
    @JsonProperty(value = "objectsResult")
    private ObjectsResult objectsResult;

    /*
     * A list of people for the image.
     */
    @Generated
    @JsonProperty(value = "peopleResult")
    private PeopleResult peopleResult;

    /*
     * A readResult for the image.
     */
    @Generated
    @JsonProperty(value = "readResult")
    private ReadResult readResult;

    /*
     * A list of regions for the image.
     */
    @Generated
    @JsonProperty(value = "smartCropsResult")
    private SmartCropsResult smartCropsResult;

    /*
     * A list of tags for the image.
     */
    @Generated
    @JsonProperty(value = "tagsResult")
    private TagsResult tagsResult;

    /**
     * Creates an instance of ImageAnalysisResult class.
     *
     * @param metadata the metadata value to set.
     * @param modelVersion the modelVersion value to set.
     */
    @Generated
    @JsonCreator
    private ImageAnalysisResult(
            @JsonProperty(value = "metadata") ImageMetadata metadata,
            @JsonProperty(value = "modelVersion") String modelVersion) {
        this.metadata = metadata;
        this.modelVersion = modelVersion;
    }

    /**
     * Get the captionResult property: A CaptionResult for the image.
     *
     * @return the captionResult value.
     */
    @Generated
    public CaptionResult getCaptionResult() {
        return this.captionResult;
    }

    /**
     * Get the customModelResult property: A list of categories for the image.
     *
     * @return the customModelResult value.
     */
    @Generated
    public CustomModelResult getCustomModelResult() {
        return this.customModelResult;
    }

    /**
     * Get the denseCaptionsResult property: A denseCaptionsResult for the image.
     *
     * @return the denseCaptionsResult value.
     */
    @Generated
    public DenseCaptionsResult getDenseCaptionsResult() {
        return this.denseCaptionsResult;
    }

    /**
     * Get the metadata property: The model used for the analysis.
     *
     * @return the metadata value.
     */
    @Generated
    public ImageMetadata getMetadata() {
        return this.metadata;
    }

    /**
     * Get the modelVersion property: The model used for the analysis.
     *
     * @return the modelVersion value.
     */
    @Generated
    public String getModelVersion() {
        return this.modelVersion;
    }

    /**
     * Get the objectsResult property: A list of objects for the image.
     *
     * @return the objectsResult value.
     */
    @Generated
    public ObjectsResult getObjectsResult() {
        return this.objectsResult;
    }

    /**
     * Get the peopleResult property: A list of people for the image.
     *
     * @return the peopleResult value.
     */
    @Generated
    public PeopleResult getPeopleResult() {
        return this.peopleResult;
    }

    /**
     * Get the readResult property: A readResult for the image.
     *
     * @return the readResult value.
     */
    @Generated
    public ReadResult getReadResult() {
        return this.readResult;
    }

    /**
     * Get the smartCropsResult property: A list of regions for the image.
     *
     * @return the smartCropsResult value.
     */
    @Generated
    public SmartCropsResult getSmartCropsResult() {
        return this.smartCropsResult;
    }

    /**
     * Get the tagsResult property: A list of tags for the image.
     *
     * @return the tagsResult value.
     */
    @Generated
    public TagsResult getTagsResult() {
        return this.tagsResult;
    }
}

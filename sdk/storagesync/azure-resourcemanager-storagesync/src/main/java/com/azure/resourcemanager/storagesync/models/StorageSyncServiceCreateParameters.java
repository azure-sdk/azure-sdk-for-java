// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.storagesync.fluent.models.StorageSyncServiceCreateParametersProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The parameters used when creating a storage sync service.
 */
@Fluent
public final class StorageSyncServiceCreateParameters extends Resource {
    /*
     * managed identities for the Storage Sync to interact with other Azure services without maintaining any secrets or credentials in code.
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /*
     * The parameters used to create the storage sync service.
     */
    @JsonProperty(value = "properties")
    private StorageSyncServiceCreateParametersProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of StorageSyncServiceCreateParameters class.
     */
    public StorageSyncServiceCreateParameters() {
    }

    /**
     * Get the identity property: managed identities for the Storage Sync to interact with other Azure services without
     * maintaining any secrets or credentials in code.
     * 
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: managed identities for the Storage Sync to interact with other Azure services without
     * maintaining any secrets or credentials in code.
     * 
     * @param identity the identity value to set.
     * @return the StorageSyncServiceCreateParameters object itself.
     */
    public StorageSyncServiceCreateParameters withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the innerProperties property: The parameters used to create the storage sync service.
     * 
     * @return the innerProperties value.
     */
    private StorageSyncServiceCreateParametersProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StorageSyncServiceCreateParameters withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StorageSyncServiceCreateParameters withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the incomingTrafficPolicy property: Incoming Traffic Policy.
     * 
     * @return the incomingTrafficPolicy value.
     */
    public IncomingTrafficPolicy incomingTrafficPolicy() {
        return this.innerProperties() == null ? null : this.innerProperties().incomingTrafficPolicy();
    }

    /**
     * Set the incomingTrafficPolicy property: Incoming Traffic Policy.
     * 
     * @param incomingTrafficPolicy the incomingTrafficPolicy value to set.
     * @return the StorageSyncServiceCreateParameters object itself.
     */
    public StorageSyncServiceCreateParameters withIncomingTrafficPolicy(IncomingTrafficPolicy incomingTrafficPolicy) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StorageSyncServiceCreateParametersProperties();
        }
        this.innerProperties().withIncomingTrafficPolicy(incomingTrafficPolicy);
        return this;
    }

    /**
     * Get the useIdentity property: Use Identity authorization when customer have finished setup RBAC permissions.
     * 
     * @return the useIdentity value.
     */
    public Boolean useIdentity() {
        return this.innerProperties() == null ? null : this.innerProperties().useIdentity();
    }

    /**
     * Set the useIdentity property: Use Identity authorization when customer have finished setup RBAC permissions.
     * 
     * @param useIdentity the useIdentity value to set.
     * @return the StorageSyncServiceCreateParameters object itself.
     */
    public StorageSyncServiceCreateParameters withUseIdentity(Boolean useIdentity) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StorageSyncServiceCreateParametersProperties();
        }
        this.innerProperties().withUseIdentity(useIdentity);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

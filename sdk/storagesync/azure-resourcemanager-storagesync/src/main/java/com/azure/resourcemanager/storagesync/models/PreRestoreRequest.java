// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Pre Restore request object.
 */
@Fluent
public final class PreRestoreRequest implements JsonSerializable<PreRestoreRequest> {
    /*
     * Pre Restore partition.
     */
    private String partition;

    /*
     * Pre Restore replica group.
     */
    private String replicaGroup;

    /*
     * Pre Restore request id.
     */
    private String requestId;

    /*
     * Pre Restore Azure file share uri.
     */
    private String azureFileShareUri;

    /*
     * Pre Restore Azure status.
     */
    private String status;

    /*
     * Pre Restore Azure source azure file share uri.
     */
    private String sourceAzureFileShareUri;

    /*
     * Pre Restore backup metadata property bag.
     */
    private String backupMetadataPropertyBag;

    /*
     * Pre Restore restore file spec array.
     */
    private List<RestoreFileSpec> restoreFileSpec;

    /*
     * Pre Restore pause wait for sync drain time period in seconds.
     */
    private Integer pauseWaitForSyncDrainTimePeriodInSeconds;

    /**
     * Creates an instance of PreRestoreRequest class.
     */
    public PreRestoreRequest() {
    }

    /**
     * Get the partition property: Pre Restore partition.
     * 
     * @return the partition value.
     */
    public String partition() {
        return this.partition;
    }

    /**
     * Set the partition property: Pre Restore partition.
     * 
     * @param partition the partition value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withPartition(String partition) {
        this.partition = partition;
        return this;
    }

    /**
     * Get the replicaGroup property: Pre Restore replica group.
     * 
     * @return the replicaGroup value.
     */
    public String replicaGroup() {
        return this.replicaGroup;
    }

    /**
     * Set the replicaGroup property: Pre Restore replica group.
     * 
     * @param replicaGroup the replicaGroup value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withReplicaGroup(String replicaGroup) {
        this.replicaGroup = replicaGroup;
        return this;
    }

    /**
     * Get the requestId property: Pre Restore request id.
     * 
     * @return the requestId value.
     */
    public String requestId() {
        return this.requestId;
    }

    /**
     * Set the requestId property: Pre Restore request id.
     * 
     * @param requestId the requestId value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    /**
     * Get the azureFileShareUri property: Pre Restore Azure file share uri.
     * 
     * @return the azureFileShareUri value.
     */
    public String azureFileShareUri() {
        return this.azureFileShareUri;
    }

    /**
     * Set the azureFileShareUri property: Pre Restore Azure file share uri.
     * 
     * @param azureFileShareUri the azureFileShareUri value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withAzureFileShareUri(String azureFileShareUri) {
        this.azureFileShareUri = azureFileShareUri;
        return this;
    }

    /**
     * Get the status property: Pre Restore Azure status.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: Pre Restore Azure status.
     * 
     * @param status the status value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the sourceAzureFileShareUri property: Pre Restore Azure source azure file share uri.
     * 
     * @return the sourceAzureFileShareUri value.
     */
    public String sourceAzureFileShareUri() {
        return this.sourceAzureFileShareUri;
    }

    /**
     * Set the sourceAzureFileShareUri property: Pre Restore Azure source azure file share uri.
     * 
     * @param sourceAzureFileShareUri the sourceAzureFileShareUri value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withSourceAzureFileShareUri(String sourceAzureFileShareUri) {
        this.sourceAzureFileShareUri = sourceAzureFileShareUri;
        return this;
    }

    /**
     * Get the backupMetadataPropertyBag property: Pre Restore backup metadata property bag.
     * 
     * @return the backupMetadataPropertyBag value.
     */
    public String backupMetadataPropertyBag() {
        return this.backupMetadataPropertyBag;
    }

    /**
     * Set the backupMetadataPropertyBag property: Pre Restore backup metadata property bag.
     * 
     * @param backupMetadataPropertyBag the backupMetadataPropertyBag value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withBackupMetadataPropertyBag(String backupMetadataPropertyBag) {
        this.backupMetadataPropertyBag = backupMetadataPropertyBag;
        return this;
    }

    /**
     * Get the restoreFileSpec property: Pre Restore restore file spec array.
     * 
     * @return the restoreFileSpec value.
     */
    public List<RestoreFileSpec> restoreFileSpec() {
        return this.restoreFileSpec;
    }

    /**
     * Set the restoreFileSpec property: Pre Restore restore file spec array.
     * 
     * @param restoreFileSpec the restoreFileSpec value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest withRestoreFileSpec(List<RestoreFileSpec> restoreFileSpec) {
        this.restoreFileSpec = restoreFileSpec;
        return this;
    }

    /**
     * Get the pauseWaitForSyncDrainTimePeriodInSeconds property: Pre Restore pause wait for sync drain time period in
     * seconds.
     * 
     * @return the pauseWaitForSyncDrainTimePeriodInSeconds value.
     */
    public Integer pauseWaitForSyncDrainTimePeriodInSeconds() {
        return this.pauseWaitForSyncDrainTimePeriodInSeconds;
    }

    /**
     * Set the pauseWaitForSyncDrainTimePeriodInSeconds property: Pre Restore pause wait for sync drain time period in
     * seconds.
     * 
     * @param pauseWaitForSyncDrainTimePeriodInSeconds the pauseWaitForSyncDrainTimePeriodInSeconds value to set.
     * @return the PreRestoreRequest object itself.
     */
    public PreRestoreRequest
        withPauseWaitForSyncDrainTimePeriodInSeconds(Integer pauseWaitForSyncDrainTimePeriodInSeconds) {
        this.pauseWaitForSyncDrainTimePeriodInSeconds = pauseWaitForSyncDrainTimePeriodInSeconds;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (restoreFileSpec() != null) {
            restoreFileSpec().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("partition", this.partition);
        jsonWriter.writeStringField("replicaGroup", this.replicaGroup);
        jsonWriter.writeStringField("requestId", this.requestId);
        jsonWriter.writeStringField("azureFileShareUri", this.azureFileShareUri);
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("sourceAzureFileShareUri", this.sourceAzureFileShareUri);
        jsonWriter.writeStringField("backupMetadataPropertyBag", this.backupMetadataPropertyBag);
        jsonWriter.writeArrayField("restoreFileSpec", this.restoreFileSpec,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeNumberField("pauseWaitForSyncDrainTimePeriodInSeconds",
            this.pauseWaitForSyncDrainTimePeriodInSeconds);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PreRestoreRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PreRestoreRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PreRestoreRequest.
     */
    public static PreRestoreRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PreRestoreRequest deserializedPreRestoreRequest = new PreRestoreRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("partition".equals(fieldName)) {
                    deserializedPreRestoreRequest.partition = reader.getString();
                } else if ("replicaGroup".equals(fieldName)) {
                    deserializedPreRestoreRequest.replicaGroup = reader.getString();
                } else if ("requestId".equals(fieldName)) {
                    deserializedPreRestoreRequest.requestId = reader.getString();
                } else if ("azureFileShareUri".equals(fieldName)) {
                    deserializedPreRestoreRequest.azureFileShareUri = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedPreRestoreRequest.status = reader.getString();
                } else if ("sourceAzureFileShareUri".equals(fieldName)) {
                    deserializedPreRestoreRequest.sourceAzureFileShareUri = reader.getString();
                } else if ("backupMetadataPropertyBag".equals(fieldName)) {
                    deserializedPreRestoreRequest.backupMetadataPropertyBag = reader.getString();
                } else if ("restoreFileSpec".equals(fieldName)) {
                    List<RestoreFileSpec> restoreFileSpec
                        = reader.readArray(reader1 -> RestoreFileSpec.fromJson(reader1));
                    deserializedPreRestoreRequest.restoreFileSpec = restoreFileSpec;
                } else if ("pauseWaitForSyncDrainTimePeriodInSeconds".equals(fieldName)) {
                    deserializedPreRestoreRequest.pauseWaitForSyncDrainTimePeriodInSeconds
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPreRestoreRequest;
        });
    }
}

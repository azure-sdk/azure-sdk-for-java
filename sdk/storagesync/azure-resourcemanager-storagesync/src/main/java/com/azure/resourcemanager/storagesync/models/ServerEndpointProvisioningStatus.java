// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Server endpoint provisioning status information.
 */
@Immutable
public final class ServerEndpointProvisioningStatus {
    /*
     * Server Endpoint provisioning status
     */
    @JsonProperty(value = "provisioningStatus", access = JsonProperty.Access.WRITE_ONLY)
    private ServerProvisioningStatus provisioningStatus;

    /*
     * Server Endpoint provisioning type
     */
    @JsonProperty(value = "provisioningType", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningType;

    /*
     * Provisioning Step status information for each step in the provisioning process
     */
    @JsonProperty(value = "provisioningStepStatuses", access = JsonProperty.Access.WRITE_ONLY)
    private List<ServerEndpointProvisioningStepStatus> provisioningStepStatuses;

    /**
     * Creates an instance of ServerEndpointProvisioningStatus class.
     */
    public ServerEndpointProvisioningStatus() {
    }

    /**
     * Get the provisioningStatus property: Server Endpoint provisioning status.
     * 
     * @return the provisioningStatus value.
     */
    public ServerProvisioningStatus provisioningStatus() {
        return this.provisioningStatus;
    }

    /**
     * Get the provisioningType property: Server Endpoint provisioning type.
     * 
     * @return the provisioningType value.
     */
    public String provisioningType() {
        return this.provisioningType;
    }

    /**
     * Get the provisioningStepStatuses property: Provisioning Step status information for each step in the provisioning
     * process.
     * 
     * @return the provisioningStepStatuses value.
     */
    public List<ServerEndpointProvisioningStepStatus> provisioningStepStatuses() {
        return this.provisioningStepStatuses;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (provisioningStepStatuses() != null) {
            provisioningStepStatuses().forEach(e -> e.validate());
        }
    }
}

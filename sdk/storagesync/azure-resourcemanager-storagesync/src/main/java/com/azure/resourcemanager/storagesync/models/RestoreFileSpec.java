// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Restore file spec.
 */
@Fluent
public final class RestoreFileSpec implements JsonSerializable<RestoreFileSpec> {
    /*
     * Restore file spec path
     */
    private String path;

    /*
     * Restore file spec isdir
     */
    private Boolean isdir;

    /**
     * Creates an instance of RestoreFileSpec class.
     */
    public RestoreFileSpec() {
    }

    /**
     * Get the path property: Restore file spec path.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Restore file spec path.
     * 
     * @param path the path value to set.
     * @return the RestoreFileSpec object itself.
     */
    public RestoreFileSpec withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the isdir property: Restore file spec isdir.
     * 
     * @return the isdir value.
     */
    public Boolean isdir() {
        return this.isdir;
    }

    /**
     * Set the isdir property: Restore file spec isdir.
     * 
     * @param isdir the isdir value to set.
     * @return the RestoreFileSpec object itself.
     */
    public RestoreFileSpec withIsdir(Boolean isdir) {
        this.isdir = isdir;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("path", this.path);
        jsonWriter.writeBooleanField("isdir", this.isdir);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestoreFileSpec from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestoreFileSpec if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the RestoreFileSpec.
     */
    public static RestoreFileSpec fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestoreFileSpec deserializedRestoreFileSpec = new RestoreFileSpec();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("path".equals(fieldName)) {
                    deserializedRestoreFileSpec.path = reader.getString();
                } else if ("isdir".equals(fieldName)) {
                    deserializedRestoreFileSpec.isdir = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestoreFileSpec;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.storagesync.fluent.models.StorageSyncServiceInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of StorageSyncService. */
public interface StorageSyncService {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: managed identities for the Storage Sync service to interact with other Azure services
     * without maintaining any secrets or credentials in code.
     *
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the incomingTrafficPolicy property: Incoming Traffic Policy.
     *
     * @return the incomingTrafficPolicy value.
     */
    IncomingTrafficPolicy incomingTrafficPolicy();

    /**
     * Gets the storageSyncServiceStatus property: Storage Sync service status.
     *
     * @return the storageSyncServiceStatus value.
     */
    Integer storageSyncServiceStatus();

    /**
     * Gets the storageSyncServiceUid property: Storage Sync service Uid.
     *
     * @return the storageSyncServiceUid value.
     */
    String storageSyncServiceUid();

    /**
     * Gets the provisioningState property: StorageSyncService Provisioning State.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the useIdentity property: Use Identity authorization when customer have finished setup RBAC permissions.
     *
     * @return the useIdentity value.
     */
    Boolean useIdentity();

    /**
     * Gets the lastWorkflowId property: StorageSyncService lastWorkflowId.
     *
     * @return the lastWorkflowId value.
     */
    String lastWorkflowId();

    /**
     * Gets the lastOperationName property: Resource Last Operation Name.
     *
     * @return the lastOperationName value.
     */
    String lastOperationName();

    /**
     * Gets the privateEndpointConnections property: List of private endpoint connection associated with the specified
     * storage sync service.
     *
     * @return the privateEndpointConnections value.
     */
    List<PrivateEndpointConnection> privateEndpointConnections();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.storagesync.fluent.models.StorageSyncServiceInner object.
     *
     * @return the inner object.
     */
    StorageSyncServiceInner innerModel();

    /** The entirety of the StorageSyncService definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }

    /** The StorageSyncService definition stages. */
    interface DefinitionStages {
        /** The first stage of the StorageSyncService definition. */
        interface Blank extends WithLocation {
        }

        /** The stage of the StorageSyncService definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /** The stage of the StorageSyncService definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the StorageSyncService definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIdentity,
                DefinitionStages.WithIncomingTrafficPolicy,
                DefinitionStages.WithUseIdentity {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            StorageSyncService create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            StorageSyncService create(Context context);
        }

        /** The stage of the StorageSyncService definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /** The stage of the StorageSyncService definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: managed identities for the Storage Sync to interact with other Azure
             * services without maintaining any secrets or credentials in code..
             *
             * @param identity managed identities for the Storage Sync to interact with other Azure services without
             *     maintaining any secrets or credentials in code.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /** The stage of the StorageSyncService definition allowing to specify incomingTrafficPolicy. */
        interface WithIncomingTrafficPolicy {
            /**
             * Specifies the incomingTrafficPolicy property: Incoming Traffic Policy.
             *
             * @param incomingTrafficPolicy Incoming Traffic Policy.
             * @return the next definition stage.
             */
            WithCreate withIncomingTrafficPolicy(IncomingTrafficPolicy incomingTrafficPolicy);
        }

        /** The stage of the StorageSyncService definition allowing to specify useIdentity. */
        interface WithUseIdentity {
            /**
             * Specifies the useIdentity property: Use Identity authorization when customer have finished setup RBAC
             * permissions..
             *
             * @param useIdentity Use Identity authorization when customer have finished setup RBAC permissions.
             * @return the next definition stage.
             */
            WithCreate withUseIdentity(Boolean useIdentity);
        }
    }

    /**
     * Begins update for the StorageSyncService resource.
     *
     * @return the stage of resource update.
     */
    StorageSyncService.Update update();

    /** The template for StorageSyncService update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithIdentity,
            UpdateStages.WithIncomingTrafficPolicy,
            UpdateStages.WithUseIdentity {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        StorageSyncService apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        StorageSyncService apply(Context context);
    }

    /** The StorageSyncService update stages. */
    interface UpdateStages {
        /** The stage of the StorageSyncService update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: The user-specified tags associated with the storage sync service..
             *
             * @param tags The user-specified tags associated with the storage sync service.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /** The stage of the StorageSyncService update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: managed identities for the Container App to interact with other Azure
             * services without maintaining any secrets or credentials in code..
             *
             * @param identity managed identities for the Container App to interact with other Azure services without
             *     maintaining any secrets or credentials in code.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /** The stage of the StorageSyncService update allowing to specify incomingTrafficPolicy. */
        interface WithIncomingTrafficPolicy {
            /**
             * Specifies the incomingTrafficPolicy property: Incoming Traffic Policy.
             *
             * @param incomingTrafficPolicy Incoming Traffic Policy.
             * @return the next definition stage.
             */
            Update withIncomingTrafficPolicy(IncomingTrafficPolicy incomingTrafficPolicy);
        }

        /** The stage of the StorageSyncService update allowing to specify useIdentity. */
        interface WithUseIdentity {
            /**
             * Specifies the useIdentity property: Use Identity authorization when customer have finished setup RBAC
             * permissions..
             *
             * @param useIdentity Use Identity authorization when customer have finished setup RBAC permissions.
             * @return the next definition stage.
             */
            Update withUseIdentity(Boolean useIdentity);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    StorageSyncService refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    StorageSyncService refresh(Context context);
}

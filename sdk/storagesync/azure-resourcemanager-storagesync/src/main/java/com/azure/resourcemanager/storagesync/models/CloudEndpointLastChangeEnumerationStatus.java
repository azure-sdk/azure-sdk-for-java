// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Cloud endpoint change enumeration status object.
 */
@Immutable
public final class CloudEndpointLastChangeEnumerationStatus
    implements JsonSerializable<CloudEndpointLastChangeEnumerationStatus> {
    /*
     * Timestamp when change enumeration started
     */
    private OffsetDateTime startedTimestamp;

    /*
     * Timestamp when change enumeration completed
     */
    private OffsetDateTime completedTimestamp;

    /*
     * Count of files in the namespace
     */
    private Long namespaceFilesCount;

    /*
     * Count of directories in the namespace
     */
    private Long namespaceDirectoriesCount;

    /*
     * Namespace size in bytes
     */
    private Long namespaceSizeBytes;

    /*
     * Timestamp of when change enumeration is expected to run again
     */
    private OffsetDateTime nextRunTimestamp;

    /**
     * Creates an instance of CloudEndpointLastChangeEnumerationStatus class.
     */
    public CloudEndpointLastChangeEnumerationStatus() {
    }

    /**
     * Get the startedTimestamp property: Timestamp when change enumeration started.
     * 
     * @return the startedTimestamp value.
     */
    public OffsetDateTime startedTimestamp() {
        return this.startedTimestamp;
    }

    /**
     * Get the completedTimestamp property: Timestamp when change enumeration completed.
     * 
     * @return the completedTimestamp value.
     */
    public OffsetDateTime completedTimestamp() {
        return this.completedTimestamp;
    }

    /**
     * Get the namespaceFilesCount property: Count of files in the namespace.
     * 
     * @return the namespaceFilesCount value.
     */
    public Long namespaceFilesCount() {
        return this.namespaceFilesCount;
    }

    /**
     * Get the namespaceDirectoriesCount property: Count of directories in the namespace.
     * 
     * @return the namespaceDirectoriesCount value.
     */
    public Long namespaceDirectoriesCount() {
        return this.namespaceDirectoriesCount;
    }

    /**
     * Get the namespaceSizeBytes property: Namespace size in bytes.
     * 
     * @return the namespaceSizeBytes value.
     */
    public Long namespaceSizeBytes() {
        return this.namespaceSizeBytes;
    }

    /**
     * Get the nextRunTimestamp property: Timestamp of when change enumeration is expected to run again.
     * 
     * @return the nextRunTimestamp value.
     */
    public OffsetDateTime nextRunTimestamp() {
        return this.nextRunTimestamp;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CloudEndpointLastChangeEnumerationStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CloudEndpointLastChangeEnumerationStatus if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CloudEndpointLastChangeEnumerationStatus.
     */
    public static CloudEndpointLastChangeEnumerationStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CloudEndpointLastChangeEnumerationStatus deserializedCloudEndpointLastChangeEnumerationStatus
                = new CloudEndpointLastChangeEnumerationStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("startedTimestamp".equals(fieldName)) {
                    deserializedCloudEndpointLastChangeEnumerationStatus.startedTimestamp = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("completedTimestamp".equals(fieldName)) {
                    deserializedCloudEndpointLastChangeEnumerationStatus.completedTimestamp = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("namespaceFilesCount".equals(fieldName)) {
                    deserializedCloudEndpointLastChangeEnumerationStatus.namespaceFilesCount
                        = reader.getNullable(JsonReader::getLong);
                } else if ("namespaceDirectoriesCount".equals(fieldName)) {
                    deserializedCloudEndpointLastChangeEnumerationStatus.namespaceDirectoriesCount
                        = reader.getNullable(JsonReader::getLong);
                } else if ("namespaceSizeBytes".equals(fieldName)) {
                    deserializedCloudEndpointLastChangeEnumerationStatus.namespaceSizeBytes
                        = reader.getNullable(JsonReader::getLong);
                } else if ("nextRunTimestamp".equals(fieldName)) {
                    deserializedCloudEndpointLastChangeEnumerationStatus.nextRunTimestamp = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCloudEndpointLastChangeEnumerationStatus;
        });
    }
}

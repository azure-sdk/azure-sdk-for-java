// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.storagesync.fluent.models.RegisteredServerUpdateParametersProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The parameters used when updating a registered server. */
@Fluent
public final class RegisteredServerUpdateParameters extends ProxyResource {
    /*
     * The parameters used to update the registered server.
     */
    @JsonProperty(value = "properties")
    private RegisteredServerUpdateParametersProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of RegisteredServerUpdateParameters class. */
    public RegisteredServerUpdateParameters() {
    }

    /**
     * Get the innerProperties property: The parameters used to update the registered server.
     *
     * @return the innerProperties value.
     */
    private RegisteredServerUpdateParametersProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the applicationId property: Server ServicePrincipal Id.
     *
     * @return the applicationId value.
     */
    public String applicationId() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationId();
    }

    /**
     * Set the applicationId property: Server ServicePrincipal Id.
     *
     * @param applicationId the applicationId value to set.
     * @return the RegisteredServerUpdateParameters object itself.
     */
    public RegisteredServerUpdateParameters withApplicationId(String applicationId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RegisteredServerUpdateParametersProperties();
        }
        this.innerProperties().withApplicationId(applicationId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

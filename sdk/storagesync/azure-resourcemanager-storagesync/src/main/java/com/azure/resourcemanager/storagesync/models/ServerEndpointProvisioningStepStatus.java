// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * Server endpoint provisioning step status object.
 */
@Immutable
public final class ServerEndpointProvisioningStepStatus {
    /*
     * Name of the provisioning step
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Status of the provisioning step
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /*
     * Start time of the provisioning step
     */
    @JsonProperty(value = "startTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startTime;

    /*
     * Estimated completion time of the provisioning step in minutes
     */
    @JsonProperty(value = "minutesLeft", access = JsonProperty.Access.WRITE_ONLY)
    private Integer minutesLeft;

    /*
     * Estimated progress percentage
     */
    @JsonProperty(value = "progressPercentage", access = JsonProperty.Access.WRITE_ONLY)
    private Integer progressPercentage;

    /*
     * End time of the provisioning step
     */
    @JsonProperty(value = "endTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime endTime;

    /*
     * Error code (HResult) for the provisioning step
     */
    @JsonProperty(value = "errorCode", access = JsonProperty.Access.WRITE_ONLY)
    private Integer errorCode;

    /*
     * Additional information for the provisioning step
     */
    @JsonProperty(value = "additionalInformation", access = JsonProperty.Access.WRITE_ONLY)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> additionalInformation;

    /**
     * Creates an instance of ServerEndpointProvisioningStepStatus class.
     */
    public ServerEndpointProvisioningStepStatus() {
    }

    /**
     * Get the name property: Name of the provisioning step.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the status property: Status of the provisioning step.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the startTime property: Start time of the provisioning step.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Get the minutesLeft property: Estimated completion time of the provisioning step in minutes.
     * 
     * @return the minutesLeft value.
     */
    public Integer minutesLeft() {
        return this.minutesLeft;
    }

    /**
     * Get the progressPercentage property: Estimated progress percentage.
     * 
     * @return the progressPercentage value.
     */
    public Integer progressPercentage() {
        return this.progressPercentage;
    }

    /**
     * Get the endTime property: End time of the provisioning step.
     * 
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Get the errorCode property: Error code (HResult) for the provisioning step.
     * 
     * @return the errorCode value.
     */
    public Integer errorCode() {
        return this.errorCode;
    }

    /**
     * Get the additionalInformation property: Additional information for the provisioning step.
     * 
     * @return the additionalInformation value.
     */
    public Map<String, String> additionalInformation() {
        return this.additionalInformation;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

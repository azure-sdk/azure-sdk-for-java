// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.storagesync.fluent.models.ServerEndpointCreateParametersProperties;
import java.io.IOException;

/**
 * The parameters used when creating a server endpoint.
 */
@Fluent
public final class ServerEndpointCreateParameters extends ProxyResource {
    /*
     * The parameters used to create the server endpoint.
     */
    private ServerEndpointCreateParametersProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of ServerEndpointCreateParameters class.
     */
    public ServerEndpointCreateParameters() {
    }

    /**
     * Get the innerProperties property: The parameters used to create the server endpoint.
     * 
     * @return the innerProperties value.
     */
    private ServerEndpointCreateParametersProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the serverLocalPath property: Server Local path.
     * 
     * @return the serverLocalPath value.
     */
    public String serverLocalPath() {
        return this.innerProperties() == null ? null : this.innerProperties().serverLocalPath();
    }

    /**
     * Set the serverLocalPath property: Server Local path.
     * 
     * @param serverLocalPath the serverLocalPath value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withServerLocalPath(String serverLocalPath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withServerLocalPath(serverLocalPath);
        return this;
    }

    /**
     * Get the cloudTiering property: Cloud Tiering.
     * 
     * @return the cloudTiering value.
     */
    public FeatureStatus cloudTiering() {
        return this.innerProperties() == null ? null : this.innerProperties().cloudTiering();
    }

    /**
     * Set the cloudTiering property: Cloud Tiering.
     * 
     * @param cloudTiering the cloudTiering value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withCloudTiering(FeatureStatus cloudTiering) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withCloudTiering(cloudTiering);
        return this;
    }

    /**
     * Get the volumeFreeSpacePercent property: Level of free space to be maintained by Cloud Tiering if it is enabled.
     * 
     * @return the volumeFreeSpacePercent value.
     */
    public Integer volumeFreeSpacePercent() {
        return this.innerProperties() == null ? null : this.innerProperties().volumeFreeSpacePercent();
    }

    /**
     * Set the volumeFreeSpacePercent property: Level of free space to be maintained by Cloud Tiering if it is enabled.
     * 
     * @param volumeFreeSpacePercent the volumeFreeSpacePercent value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withVolumeFreeSpacePercent(Integer volumeFreeSpacePercent) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withVolumeFreeSpacePercent(volumeFreeSpacePercent);
        return this;
    }

    /**
     * Get the tierFilesOlderThanDays property: Tier files older than days.
     * 
     * @return the tierFilesOlderThanDays value.
     */
    public Integer tierFilesOlderThanDays() {
        return this.innerProperties() == null ? null : this.innerProperties().tierFilesOlderThanDays();
    }

    /**
     * Set the tierFilesOlderThanDays property: Tier files older than days.
     * 
     * @param tierFilesOlderThanDays the tierFilesOlderThanDays value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withTierFilesOlderThanDays(Integer tierFilesOlderThanDays) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withTierFilesOlderThanDays(tierFilesOlderThanDays);
        return this;
    }

    /**
     * Get the friendlyName property: Friendly Name.
     * 
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.innerProperties() == null ? null : this.innerProperties().friendlyName();
    }

    /**
     * Set the friendlyName property: Friendly Name.
     * 
     * @param friendlyName the friendlyName value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withFriendlyName(String friendlyName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withFriendlyName(friendlyName);
        return this;
    }

    /**
     * Get the serverResourceId property: Server Resource Id.
     * 
     * @return the serverResourceId value.
     */
    public String serverResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().serverResourceId();
    }

    /**
     * Set the serverResourceId property: Server Resource Id.
     * 
     * @param serverResourceId the serverResourceId value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withServerResourceId(String serverResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withServerResourceId(serverResourceId);
        return this;
    }

    /**
     * Get the offlineDataTransfer property: Offline data transfer.
     * 
     * @return the offlineDataTransfer value.
     */
    public FeatureStatus offlineDataTransfer() {
        return this.innerProperties() == null ? null : this.innerProperties().offlineDataTransfer();
    }

    /**
     * Set the offlineDataTransfer property: Offline data transfer.
     * 
     * @param offlineDataTransfer the offlineDataTransfer value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withOfflineDataTransfer(FeatureStatus offlineDataTransfer) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withOfflineDataTransfer(offlineDataTransfer);
        return this;
    }

    /**
     * Get the offlineDataTransferShareName property: Offline data transfer share name.
     * 
     * @return the offlineDataTransferShareName value.
     */
    public String offlineDataTransferShareName() {
        return this.innerProperties() == null ? null : this.innerProperties().offlineDataTransferShareName();
    }

    /**
     * Set the offlineDataTransferShareName property: Offline data transfer share name.
     * 
     * @param offlineDataTransferShareName the offlineDataTransferShareName value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withOfflineDataTransferShareName(String offlineDataTransferShareName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withOfflineDataTransferShareName(offlineDataTransferShareName);
        return this;
    }

    /**
     * Get the initialDownloadPolicy property: Policy for how namespace and files are recalled during FastDr.
     * 
     * @return the initialDownloadPolicy value.
     */
    public InitialDownloadPolicy initialDownloadPolicy() {
        return this.innerProperties() == null ? null : this.innerProperties().initialDownloadPolicy();
    }

    /**
     * Set the initialDownloadPolicy property: Policy for how namespace and files are recalled during FastDr.
     * 
     * @param initialDownloadPolicy the initialDownloadPolicy value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withInitialDownloadPolicy(InitialDownloadPolicy initialDownloadPolicy) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withInitialDownloadPolicy(initialDownloadPolicy);
        return this;
    }

    /**
     * Get the localCacheMode property: Policy for enabling follow-the-sun business models: link local cache to cloud
     * behavior to pre-populate before local access.
     * 
     * @return the localCacheMode value.
     */
    public LocalCacheMode localCacheMode() {
        return this.innerProperties() == null ? null : this.innerProperties().localCacheMode();
    }

    /**
     * Set the localCacheMode property: Policy for enabling follow-the-sun business models: link local cache to cloud
     * behavior to pre-populate before local access.
     * 
     * @param localCacheMode the localCacheMode value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withLocalCacheMode(LocalCacheMode localCacheMode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withLocalCacheMode(localCacheMode);
        return this;
    }

    /**
     * Get the initialUploadPolicy property: Policy for how the initial upload sync session is performed.
     * 
     * @return the initialUploadPolicy value.
     */
    public InitialUploadPolicy initialUploadPolicy() {
        return this.innerProperties() == null ? null : this.innerProperties().initialUploadPolicy();
    }

    /**
     * Set the initialUploadPolicy property: Policy for how the initial upload sync session is performed.
     * 
     * @param initialUploadPolicy the initialUploadPolicy value to set.
     * @return the ServerEndpointCreateParameters object itself.
     */
    public ServerEndpointCreateParameters withInitialUploadPolicy(InitialUploadPolicy initialUploadPolicy) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServerEndpointCreateParametersProperties();
        }
        this.innerProperties().withInitialUploadPolicy(initialUploadPolicy);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServerEndpointCreateParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServerEndpointCreateParameters if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ServerEndpointCreateParameters.
     */
    public static ServerEndpointCreateParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServerEndpointCreateParameters deserializedServerEndpointCreateParameters
                = new ServerEndpointCreateParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedServerEndpointCreateParameters.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedServerEndpointCreateParameters.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedServerEndpointCreateParameters.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedServerEndpointCreateParameters.innerProperties
                        = ServerEndpointCreateParametersProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedServerEndpointCreateParameters.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServerEndpointCreateParameters;
        });
    }
}

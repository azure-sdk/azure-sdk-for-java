// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Error Details object.
 */
@Fluent
public final class StorageSyncInnerErrorDetails implements JsonSerializable<StorageSyncInnerErrorDetails> {
    /*
     * Call stack of the error.
     */
    private String callStack;

    /*
     * Error message of the error.
     */
    private String message;

    /*
     * Exception of the inner error.
     */
    private String innerException;

    /*
     * Call stack of the inner error.
     */
    private String innerExceptionCallStack;

    /**
     * Creates an instance of StorageSyncInnerErrorDetails class.
     */
    public StorageSyncInnerErrorDetails() {
    }

    /**
     * Get the callStack property: Call stack of the error.
     * 
     * @return the callStack value.
     */
    public String callStack() {
        return this.callStack;
    }

    /**
     * Set the callStack property: Call stack of the error.
     * 
     * @param callStack the callStack value to set.
     * @return the StorageSyncInnerErrorDetails object itself.
     */
    public StorageSyncInnerErrorDetails withCallStack(String callStack) {
        this.callStack = callStack;
        return this;
    }

    /**
     * Get the message property: Error message of the error.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: Error message of the error.
     * 
     * @param message the message value to set.
     * @return the StorageSyncInnerErrorDetails object itself.
     */
    public StorageSyncInnerErrorDetails withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the innerException property: Exception of the inner error.
     * 
     * @return the innerException value.
     */
    public String innerException() {
        return this.innerException;
    }

    /**
     * Set the innerException property: Exception of the inner error.
     * 
     * @param innerException the innerException value to set.
     * @return the StorageSyncInnerErrorDetails object itself.
     */
    public StorageSyncInnerErrorDetails withInnerException(String innerException) {
        this.innerException = innerException;
        return this;
    }

    /**
     * Get the innerExceptionCallStack property: Call stack of the inner error.
     * 
     * @return the innerExceptionCallStack value.
     */
    public String innerExceptionCallStack() {
        return this.innerExceptionCallStack;
    }

    /**
     * Set the innerExceptionCallStack property: Call stack of the inner error.
     * 
     * @param innerExceptionCallStack the innerExceptionCallStack value to set.
     * @return the StorageSyncInnerErrorDetails object itself.
     */
    public StorageSyncInnerErrorDetails withInnerExceptionCallStack(String innerExceptionCallStack) {
        this.innerExceptionCallStack = innerExceptionCallStack;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("callStack", this.callStack);
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("innerException", this.innerException);
        jsonWriter.writeStringField("innerExceptionCallStack", this.innerExceptionCallStack);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageSyncInnerErrorDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageSyncInnerErrorDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageSyncInnerErrorDetails.
     */
    public static StorageSyncInnerErrorDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageSyncInnerErrorDetails deserializedStorageSyncInnerErrorDetails = new StorageSyncInnerErrorDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("callStack".equals(fieldName)) {
                    deserializedStorageSyncInnerErrorDetails.callStack = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedStorageSyncInnerErrorDetails.message = reader.getString();
                } else if ("innerException".equals(fieldName)) {
                    deserializedStorageSyncInnerErrorDetails.innerException = reader.getString();
                } else if ("innerExceptionCallStack".equals(fieldName)) {
                    deserializedStorageSyncInnerErrorDetails.innerExceptionCallStack = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageSyncInnerErrorDetails;
        });
    }
}

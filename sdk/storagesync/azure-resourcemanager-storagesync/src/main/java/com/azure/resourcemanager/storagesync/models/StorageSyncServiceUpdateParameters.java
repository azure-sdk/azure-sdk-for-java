// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.storagesync.fluent.models.StorageSyncServiceUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Parameters for updating an Storage sync service. */
@Fluent
public final class StorageSyncServiceUpdateParameters {
    /*
     * The user-specified tags associated with the storage sync service.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * managed identities for the Container App to interact with other Azure services without maintaining any secrets
     * or credentials in code.
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /*
     * The properties of the server endpoint.
     */
    @JsonProperty(value = "properties")
    private StorageSyncServiceUpdateProperties innerProperties;

    /** Creates an instance of StorageSyncServiceUpdateParameters class. */
    public StorageSyncServiceUpdateParameters() {
    }

    /**
     * Get the tags property: The user-specified tags associated with the storage sync service.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: The user-specified tags associated with the storage sync service.
     *
     * @param tags the tags value to set.
     * @return the StorageSyncServiceUpdateParameters object itself.
     */
    public StorageSyncServiceUpdateParameters withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the identity property: managed identities for the Container App to interact with other Azure services without
     * maintaining any secrets or credentials in code.
     *
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: managed identities for the Container App to interact with other Azure services without
     * maintaining any secrets or credentials in code.
     *
     * @param identity the identity value to set.
     * @return the StorageSyncServiceUpdateParameters object itself.
     */
    public StorageSyncServiceUpdateParameters withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the innerProperties property: The properties of the server endpoint.
     *
     * @return the innerProperties value.
     */
    private StorageSyncServiceUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the incomingTrafficPolicy property: Incoming Traffic Policy.
     *
     * @return the incomingTrafficPolicy value.
     */
    public IncomingTrafficPolicy incomingTrafficPolicy() {
        return this.innerProperties() == null ? null : this.innerProperties().incomingTrafficPolicy();
    }

    /**
     * Set the incomingTrafficPolicy property: Incoming Traffic Policy.
     *
     * @param incomingTrafficPolicy the incomingTrafficPolicy value to set.
     * @return the StorageSyncServiceUpdateParameters object itself.
     */
    public StorageSyncServiceUpdateParameters withIncomingTrafficPolicy(IncomingTrafficPolicy incomingTrafficPolicy) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StorageSyncServiceUpdateProperties();
        }
        this.innerProperties().withIncomingTrafficPolicy(incomingTrafficPolicy);
        return this;
    }

    /**
     * Get the useIdentity property: Use Identity authorization when customer have finished setup RBAC permissions.
     *
     * @return the useIdentity value.
     */
    public Boolean useIdentity() {
        return this.innerProperties() == null ? null : this.innerProperties().useIdentity();
    }

    /**
     * Set the useIdentity property: Use Identity authorization when customer have finished setup RBAC permissions.
     *
     * @param useIdentity the useIdentity value to set.
     * @return the StorageSyncServiceUpdateParameters object itself.
     */
    public StorageSyncServiceUpdateParameters withUseIdentity(Boolean useIdentity) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StorageSyncServiceUpdateProperties();
        }
        this.innerProperties().withUseIdentity(useIdentity);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.storagesync.models.OperationDirection;
import com.azure.resourcemanager.storagesync.models.WorkflowStatus;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Workflow resource.
 */
@Fluent
public final class WorkflowInner extends ProxyResource {
    /*
     * Workflow properties.
     */
    private WorkflowProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of WorkflowInner class.
     */
    public WorkflowInner() {
    }

    /**
     * Get the innerProperties property: Workflow properties.
     * 
     * @return the innerProperties value.
     */
    private WorkflowProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the lastStepName property: last step name.
     * 
     * @return the lastStepName value.
     */
    public String lastStepName() {
        return this.innerProperties() == null ? null : this.innerProperties().lastStepName();
    }

    /**
     * Set the lastStepName property: last step name.
     * 
     * @param lastStepName the lastStepName value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withLastStepName(String lastStepName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withLastStepName(lastStepName);
        return this;
    }

    /**
     * Get the status property: workflow status.
     * 
     * @return the status value.
     */
    public WorkflowStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: workflow status.
     * 
     * @param status the status value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withStatus(WorkflowStatus status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the operation property: operation direction.
     * 
     * @return the operation value.
     */
    public OperationDirection operation() {
        return this.innerProperties() == null ? null : this.innerProperties().operation();
    }

    /**
     * Set the operation property: operation direction.
     * 
     * @param operation the operation value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withOperation(OperationDirection operation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withOperation(operation);
        return this;
    }

    /**
     * Get the steps property: workflow steps.
     * 
     * @return the steps value.
     */
    public String steps() {
        return this.innerProperties() == null ? null : this.innerProperties().steps();
    }

    /**
     * Set the steps property: workflow steps.
     * 
     * @param steps the steps value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withSteps(String steps) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withSteps(steps);
        return this;
    }

    /**
     * Get the lastOperationId property: workflow last operation identifier.
     * 
     * @return the lastOperationId value.
     */
    public String lastOperationId() {
        return this.innerProperties() == null ? null : this.innerProperties().lastOperationId();
    }

    /**
     * Set the lastOperationId property: workflow last operation identifier.
     * 
     * @param lastOperationId the lastOperationId value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withLastOperationId(String lastOperationId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withLastOperationId(lastOperationId);
        return this;
    }

    /**
     * Get the commandName property: workflow command name.
     * 
     * @return the commandName value.
     */
    public String commandName() {
        return this.innerProperties() == null ? null : this.innerProperties().commandName();
    }

    /**
     * Get the createdTimestamp property: workflow created timestamp.
     * 
     * @return the createdTimestamp value.
     */
    public OffsetDateTime createdTimestamp() {
        return this.innerProperties() == null ? null : this.innerProperties().createdTimestamp();
    }

    /**
     * Get the lastStatusTimestamp property: workflow last status timestamp.
     * 
     * @return the lastStatusTimestamp value.
     */
    public OffsetDateTime lastStatusTimestamp() {
        return this.innerProperties() == null ? null : this.innerProperties().lastStatusTimestamp();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkflowInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkflowInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the WorkflowInner.
     */
    public static WorkflowInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkflowInner deserializedWorkflowInner = new WorkflowInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedWorkflowInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedWorkflowInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedWorkflowInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedWorkflowInner.innerProperties = WorkflowProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedWorkflowInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkflowInner;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storagesync.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.storagesync.models.OperationDirection;
import com.azure.resourcemanager.storagesync.models.WorkflowStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Workflow resource. */
@Fluent
public final class WorkflowInner extends ProxyResource {
    /*
     * Workflow properties.
     */
    @JsonProperty(value = "properties")
    private WorkflowProperties innerProperties;

    /** Creates an instance of WorkflowInner class. */
    public WorkflowInner() {
    }

    /**
     * Get the innerProperties property: Workflow properties.
     *
     * @return the innerProperties value.
     */
    private WorkflowProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the lastStepName property: last step name.
     *
     * @return the lastStepName value.
     */
    public String lastStepName() {
        return this.innerProperties() == null ? null : this.innerProperties().lastStepName();
    }

    /**
     * Set the lastStepName property: last step name.
     *
     * @param lastStepName the lastStepName value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withLastStepName(String lastStepName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withLastStepName(lastStepName);
        return this;
    }

    /**
     * Get the status property: workflow status.
     *
     * @return the status value.
     */
    public WorkflowStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: workflow status.
     *
     * @param status the status value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withStatus(WorkflowStatus status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the operation property: operation direction.
     *
     * @return the operation value.
     */
    public OperationDirection operation() {
        return this.innerProperties() == null ? null : this.innerProperties().operation();
    }

    /**
     * Set the operation property: operation direction.
     *
     * @param operation the operation value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withOperation(OperationDirection operation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withOperation(operation);
        return this;
    }

    /**
     * Get the steps property: workflow steps.
     *
     * @return the steps value.
     */
    public String steps() {
        return this.innerProperties() == null ? null : this.innerProperties().steps();
    }

    /**
     * Set the steps property: workflow steps.
     *
     * @param steps the steps value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withSteps(String steps) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withSteps(steps);
        return this;
    }

    /**
     * Get the lastOperationId property: workflow last operation identifier.
     *
     * @return the lastOperationId value.
     */
    public String lastOperationId() {
        return this.innerProperties() == null ? null : this.innerProperties().lastOperationId();
    }

    /**
     * Set the lastOperationId property: workflow last operation identifier.
     *
     * @param lastOperationId the lastOperationId value to set.
     * @return the WorkflowInner object itself.
     */
    public WorkflowInner withLastOperationId(String lastOperationId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkflowProperties();
        }
        this.innerProperties().withLastOperationId(lastOperationId);
        return this;
    }

    /**
     * Get the commandName property: workflow command name.
     *
     * @return the commandName value.
     */
    public String commandName() {
        return this.innerProperties() == null ? null : this.innerProperties().commandName();
    }

    /**
     * Get the createdTimestamp property: workflow created timestamp.
     *
     * @return the createdTimestamp value.
     */
    public OffsetDateTime createdTimestamp() {
        return this.innerProperties() == null ? null : this.innerProperties().createdTimestamp();
    }

    /**
     * Get the lastStatusTimestamp property: workflow last status timestamp.
     *
     * @return the lastStatusTimestamp value.
     */
    public OffsetDateTime lastStatusTimestamp() {
        return this.innerProperties() == null ? null : this.innerProperties().lastStatusTimestamp();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

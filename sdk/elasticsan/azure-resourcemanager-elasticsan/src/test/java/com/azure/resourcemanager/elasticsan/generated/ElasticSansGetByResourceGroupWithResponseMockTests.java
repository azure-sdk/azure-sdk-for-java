// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.AutoScalePolicyEnforcement;
import com.azure.resourcemanager.elasticsan.models.ElasticSan;
import com.azure.resourcemanager.elasticsan.models.PublicNetworkAccess;
import com.azure.resourcemanager.elasticsan.models.SkuName;
import com.azure.resourcemanager.elasticsan.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ElasticSansGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"sku\":{\"name\":\"Premium_LRS\",\"tier\":\"Premium\"},\"availabilityZones\":[\"swbxqz\"],\"provisioningState\":\"Deleted\",\"baseSizeTiB\":2497120844605737451,\"extendedCapacitySizeTiB\":3988280150898611417,\"totalVolumeSizeGiB\":147411949012367890,\"volumeGroupCount\":7006497464458927834,\"totalIops\":4916987927565414718,\"totalMBps\":531591001372230315,\"totalSizeTiB\":8248770631957030305,\"privateEndpointConnections\":[{\"properties\":{\"provisioningState\":\"Deleting\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"bxvwv\",\"yslqbhsfx\",\"blytk\",\"lmpewwwfbkr\"]},\"id\":\"nsvs\",\"name\":\"q\",\"type\":\"ohxcrsbfova\"}],\"publicNetworkAccess\":\"Enabled\",\"autoScaleProperties\":{\"scaleUpProperties\":{\"unusedSizeTiB\":8133547677747948379,\"increaseCapacityUnitByTiB\":3514417136021968060,\"capacityUnitScaleUpLimitTiB\":1327647524081799749,\"autoScalePolicyEnforcement\":\"None\"}}},\"location\":\"birx\",\"tags\":{\"dtws\":\"bsrfbj\",\"nfqqnvwp\":\"otftpvjzbexilz\",\"tjrybnwjewgdr\":\"qtaruoujmkcjhwq\",\"doy\":\"ervnaenqpehi\"},\"id\":\"mifthnzdnd\",\"name\":\"l\",\"type\":\"nayqi\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ElasticSan response = manager.elasticSans()
            .getByResourceGroupWithResponse("n", "u", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("birx", response.location());
        Assertions.assertEquals("bsrfbj", response.tags().get("dtws"));
        Assertions.assertEquals(SkuName.PREMIUM_LRS, response.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.sku().tier());
        Assertions.assertEquals("swbxqz", response.availabilityZones().get(0));
        Assertions.assertEquals(2497120844605737451L, response.baseSizeTiB());
        Assertions.assertEquals(3988280150898611417L, response.extendedCapacitySizeTiB());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, response.publicNetworkAccess());
        Assertions.assertEquals(8133547677747948379L,
            response.autoScaleProperties().scaleUpProperties().unusedSizeTiB());
        Assertions.assertEquals(3514417136021968060L,
            response.autoScaleProperties().scaleUpProperties().increaseCapacityUnitByTiB());
        Assertions.assertEquals(1327647524081799749L,
            response.autoScaleProperties().scaleUpProperties().capacityUnitScaleUpLimitTiB());
        Assertions.assertEquals(AutoScalePolicyEnforcement.NONE,
            response.autoScaleProperties().scaleUpProperties().autoScalePolicyEnforcement());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.OperationalStatus;
import com.azure.resourcemanager.elasticsan.models.Volume;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumesRestoreVolumeMockTests {
    @Test
    public void testRestoreVolume() throws Exception {
        String responseStr
            = "{\"properties\":{\"volumeId\":\"pikpz\",\"creationData\":{\"createSource\":\"VolumeSnapshot\",\"sourceId\":\"anlfzxiavrmbz\"},\"sizeGiB\":5242594795236957454,\"storageTarget\":{\"targetIqn\":\"xrjqcirgzpfrlazs\",\"targetPortalHostname\":\"nwoiind\",\"targetPortalPort\":369486551,\"provisioningState\":\"Succeeded\",\"status\":\"Unhealthy\"},\"managedBy\":{\"resourceId\":\"tlhflsjcdhszf\"},\"provisioningState\":\"Succeeded\"},\"id\":\"gofel\",\"name\":\"a\",\"type\":\"rqmq\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Volume response = manager.volumes()
            .restoreVolume("x", "smwutwbdsrezpd", "hneuyowqkd", "ytisibir", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(VolumeCreateOption.VOLUME_SNAPSHOT, response.creationData().createSource());
        Assertions.assertEquals("anlfzxiavrmbz", response.creationData().sourceId());
        Assertions.assertEquals(5242594795236957454L, response.sizeGiB());
        Assertions.assertEquals(OperationalStatus.UNHEALTHY, response.storageTarget().status());
        Assertions.assertEquals("tlhflsjcdhszf", response.managedBy().resourceId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.AutoScalePolicyEnforcement;
import com.azure.resourcemanager.elasticsan.models.ElasticSan;
import com.azure.resourcemanager.elasticsan.models.PublicNetworkAccess;
import com.azure.resourcemanager.elasticsan.models.SkuName;
import com.azure.resourcemanager.elasticsan.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ElasticSansListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"sku\":{\"name\":\"Premium_LRS\",\"tier\":\"Premium\"},\"availabilityZones\":[\"slqlfmmdn\"],\"provisioningState\":\"Failed\",\"baseSizeTiB\":947991742378658922,\"extendedCapacitySizeTiB\":3156235499243727087,\"totalVolumeSizeGiB\":3740135590125473385,\"volumeGroupCount\":4925871283815625412,\"totalIops\":2535246333551569384,\"totalMBps\":476014655847836046,\"totalSizeTiB\":5631675707409598549,\"privateEndpointConnections\":[{\"properties\":{\"provisioningState\":\"Invalid\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"fznudaodvxzb\",\"cblylpstdbhhxsr\",\"dzu\"]},\"id\":\"rsc\",\"name\":\"ntnev\",\"type\":\"iwjmygtdssls\"},{\"properties\":{\"provisioningState\":\"Failed\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"iofz\",\"yqsemwa\",\"n\"]},\"id\":\"shhszhedplvwiw\",\"name\":\"bmwmbesldnkw\",\"type\":\"tppjflcx\"},{\"properties\":{\"provisioningState\":\"Creating\",\"privateEndpoint\":{},\"privateLinkServiceConnectionState\":{},\"groupIds\":[\"nzmnsikvm\"]},\"id\":\"ze\",\"name\":\"qkdltfz\",\"type\":\"mhhv\"}],\"publicNetworkAccess\":\"Enabled\",\"autoScaleProperties\":{\"scaleUpProperties\":{\"unusedSizeTiB\":820800207830190162,\"increaseCapacityUnitByTiB\":5369174747362686105,\"capacityUnitScaleUpLimitTiB\":5443627856554259872,\"autoScalePolicyEnforcement\":\"Disabled\"}}},\"location\":\"bqdxbx\",\"tags\":{\"iplbpodxunkbebxm\":\"bogqxndlkzgxhu\",\"oievseotgqrlltm\":\"byyntwlrbqt\",\"jefuzmuvpbttdumo\":\"wlauwzizxbmpg\",\"xe\":\"p\"},\"id\":\"mnzb\",\"name\":\"bhjpglkfgohdne\",\"type\":\"el\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ElasticSan> response
            = manager.elasticSans().listByResourceGroup("bgycduiertgccym", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bqdxbx", response.iterator().next().location());
        Assertions.assertEquals("bogqxndlkzgxhu", response.iterator().next().tags().get("iplbpodxunkbebxm"));
        Assertions.assertEquals(SkuName.PREMIUM_LRS, response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, response.iterator().next().sku().tier());
        Assertions.assertEquals("slqlfmmdn", response.iterator().next().availabilityZones().get(0));
        Assertions.assertEquals(947991742378658922L, response.iterator().next().baseSizeTiB());
        Assertions.assertEquals(3156235499243727087L, response.iterator().next().extendedCapacitySizeTiB());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, response.iterator().next().publicNetworkAccess());
        Assertions.assertEquals(820800207830190162L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().unusedSizeTiB());
        Assertions.assertEquals(5369174747362686105L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().increaseCapacityUnitByTiB());
        Assertions.assertEquals(5443627856554259872L,
            response.iterator().next().autoScaleProperties().scaleUpProperties().capacityUnitScaleUpLimitTiB());
        Assertions.assertEquals(AutoScalePolicyEnforcement.DISABLED,
            response.iterator().next().autoScaleProperties().scaleUpProperties().autoScalePolicyEnforcement());
    }
}

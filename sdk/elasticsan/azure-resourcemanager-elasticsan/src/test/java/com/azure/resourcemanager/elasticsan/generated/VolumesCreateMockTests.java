// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.elasticsan.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.elasticsan.ElasticSanManager;
import com.azure.resourcemanager.elasticsan.models.IscsiTargetInfo;
import com.azure.resourcemanager.elasticsan.models.ManagedByInfo;
import com.azure.resourcemanager.elasticsan.models.OperationalStatus;
import com.azure.resourcemanager.elasticsan.models.SourceCreationData;
import com.azure.resourcemanager.elasticsan.models.Volume;
import com.azure.resourcemanager.elasticsan.models.VolumeCreateOption;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VolumesCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"volumeId\":\"yajguqfhwygzlv\",\"creationData\":{\"createSource\":\"Disk\",\"sourceId\":\"usemdwzrmuhap\"},\"sizeGiB\":8224509646361312989,\"storageTarget\":{\"targetIqn\":\"sqxqvp\",\"targetPortalHostname\":\"uoymgccelvezry\",\"targetPortalPort\":69464261,\"provisioningState\":\"Deleted\",\"status\":\"Stopped\"},\"managedBy\":{\"resourceId\":\"rqwky\"},\"provisioningState\":\"Succeeded\"},\"id\":\"opgxedkowepb\",\"name\":\"pc\",\"type\":\"fkbw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ElasticSanManager manager = ElasticSanManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Volume response = manager.volumes()
            .define("wws")
            .withExistingVolumegroup("ldvriiiojnalghfk", "tvsexsowuel", "qhhahhxvrhmzkwpj")
            .withSizeGiB(6715661271748105813L)
            .withCreationData(new SourceCreationData().withCreateSource(VolumeCreateOption.DISK_RESTORE_POINT)
                .withSourceId("grjguufzd"))
            .withStorageTarget(new IscsiTargetInfo().withStatus(OperationalStatus.STOPPED_DEALLOCATED))
            .withManagedBy(new ManagedByInfo().withResourceId("amvdkfwynwcvtbv"))
            .create();

        Assertions.assertEquals(VolumeCreateOption.DISK, response.creationData().createSource());
        Assertions.assertEquals("usemdwzrmuhap", response.creationData().sourceId());
        Assertions.assertEquals(8224509646361312989L, response.sizeGiB());
        Assertions.assertEquals(OperationalStatus.STOPPED, response.storageTarget().status());
        Assertions.assertEquals("rqwky", response.managedBy().resourceId());
    }
}

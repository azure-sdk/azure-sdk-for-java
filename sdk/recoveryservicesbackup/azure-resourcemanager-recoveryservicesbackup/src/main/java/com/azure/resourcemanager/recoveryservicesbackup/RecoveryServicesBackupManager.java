// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.recoveryservicesbackup.fluent.RecoveryServicesBackupClient;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.AadPropertiesOperationsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.BackupCrrJobDetailsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.BackupCrrJobsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.BackupProtectedItemsCrrsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.BackupResourceStorageConfigsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.BackupUsageSummariesCrrsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.CrossRegionRestoresImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.CrrOperationResultsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.CrrOperationStatusImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.RecoveryPointsCrrsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.RecoveryPointsImpl;
import com.azure.resourcemanager.recoveryservicesbackup.implementation.RecoveryServicesBackupClientBuilder;
import com.azure.resourcemanager.recoveryservicesbackup.models.AadPropertiesOperations;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupCrrJobDetails;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupCrrJobs;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupProtectedItemsCrrs;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupResourceStorageConfigs;
import com.azure.resourcemanager.recoveryservicesbackup.models.BackupUsageSummariesCrrs;
import com.azure.resourcemanager.recoveryservicesbackup.models.CrossRegionRestores;
import com.azure.resourcemanager.recoveryservicesbackup.models.CrrOperationResults;
import com.azure.resourcemanager.recoveryservicesbackup.models.CrrOperationStatus;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryPoints;
import com.azure.resourcemanager.recoveryservicesbackup.models.RecoveryPointsCrrs;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Entry point to RecoveryServicesBackupManager.
 * Open API 2.0 Specs for Azure RecoveryServices Backup service.
 */
public final class RecoveryServicesBackupManager {
    private BackupUsageSummariesCrrs backupUsageSummariesCrrs;

    private AadPropertiesOperations aadPropertiesOperations;

    private CrossRegionRestores crossRegionRestores;

    private BackupCrrJobDetails backupCrrJobDetails;

    private BackupCrrJobs backupCrrJobs;

    private CrrOperationResults crrOperationResults;

    private CrrOperationStatus crrOperationStatus;

    private RecoveryPoints recoveryPoints;

    private BackupResourceStorageConfigs backupResourceStorageConfigs;

    private RecoveryPointsCrrs recoveryPointsCrrs;

    private BackupProtectedItemsCrrs backupProtectedItemsCrrs;

    private final RecoveryServicesBackupClient clientObject;

    private RecoveryServicesBackupManager(HttpPipeline httpPipeline, AzureProfile profile,
        Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new RecoveryServicesBackupClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of RecoveryServicesBackup service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the RecoveryServicesBackup service API instance.
     */
    public static RecoveryServicesBackupManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of RecoveryServicesBackup service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the RecoveryServicesBackup service API instance.
     */
    public static RecoveryServicesBackupManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new RecoveryServicesBackupManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create RecoveryServicesBackupManager with optional
     * configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new RecoveryServicesBackupManager.Configurable();
    }

    /**
     * The Configurable allowing configurations to be set.
     */
    public static final class Configurable {
        private static final ClientLogger LOGGER = new ClientLogger(Configurable.class);

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private RetryOptions retryOptions;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the retry options for the HTTP pipeline retry policy.
         * <p>
         * This setting has no effect, if retry policy is set via {@link #withRetryPolicy(RetryPolicy)}.
         *
         * @param retryOptions the retry options for the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryOptions(RetryOptions retryOptions) {
            this.retryOptions = Objects.requireNonNull(retryOptions, "'retryOptions' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval
                = Objects.requireNonNull(defaultPollInterval, "'defaultPollInterval' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw LOGGER
                    .logExceptionAsError(new IllegalArgumentException("'defaultPollInterval' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of RecoveryServicesBackup service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the RecoveryServicesBackup service API instance.
         */
        public RecoveryServicesBackupManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder.append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.recoveryservicesbackup")
                .append("/")
                .append("1.0.0-beta.1");
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder.append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                if (retryOptions != null) {
                    retryPolicy = new RetryPolicy(retryOptions);
                } else {
                    retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
                }
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new AddHeadersFromContextPolicy());
            policies.add(new RequestIdPolicy());
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new BearerTokenAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(httpClient)
                .policies(policies.toArray(new HttpPipelinePolicy[0]))
                .build();
            return new RecoveryServicesBackupManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /**
     * Gets the resource collection API of BackupUsageSummariesCrrs.
     * 
     * @return Resource collection API of BackupUsageSummariesCrrs.
     */
    public BackupUsageSummariesCrrs backupUsageSummariesCrrs() {
        if (this.backupUsageSummariesCrrs == null) {
            this.backupUsageSummariesCrrs
                = new BackupUsageSummariesCrrsImpl(clientObject.getBackupUsageSummariesCrrs(), this);
        }
        return backupUsageSummariesCrrs;
    }

    /**
     * Gets the resource collection API of AadPropertiesOperations.
     * 
     * @return Resource collection API of AadPropertiesOperations.
     */
    public AadPropertiesOperations aadPropertiesOperations() {
        if (this.aadPropertiesOperations == null) {
            this.aadPropertiesOperations
                = new AadPropertiesOperationsImpl(clientObject.getAadPropertiesOperations(), this);
        }
        return aadPropertiesOperations;
    }

    /**
     * Gets the resource collection API of CrossRegionRestores.
     * 
     * @return Resource collection API of CrossRegionRestores.
     */
    public CrossRegionRestores crossRegionRestores() {
        if (this.crossRegionRestores == null) {
            this.crossRegionRestores = new CrossRegionRestoresImpl(clientObject.getCrossRegionRestores(), this);
        }
        return crossRegionRestores;
    }

    /**
     * Gets the resource collection API of BackupCrrJobDetails.
     * 
     * @return Resource collection API of BackupCrrJobDetails.
     */
    public BackupCrrJobDetails backupCrrJobDetails() {
        if (this.backupCrrJobDetails == null) {
            this.backupCrrJobDetails = new BackupCrrJobDetailsImpl(clientObject.getBackupCrrJobDetails(), this);
        }
        return backupCrrJobDetails;
    }

    /**
     * Gets the resource collection API of BackupCrrJobs.
     * 
     * @return Resource collection API of BackupCrrJobs.
     */
    public BackupCrrJobs backupCrrJobs() {
        if (this.backupCrrJobs == null) {
            this.backupCrrJobs = new BackupCrrJobsImpl(clientObject.getBackupCrrJobs(), this);
        }
        return backupCrrJobs;
    }

    /**
     * Gets the resource collection API of CrrOperationResults.
     * 
     * @return Resource collection API of CrrOperationResults.
     */
    public CrrOperationResults crrOperationResults() {
        if (this.crrOperationResults == null) {
            this.crrOperationResults = new CrrOperationResultsImpl(clientObject.getCrrOperationResults(), this);
        }
        return crrOperationResults;
    }

    /**
     * Gets the resource collection API of CrrOperationStatus.
     * 
     * @return Resource collection API of CrrOperationStatus.
     */
    public CrrOperationStatus crrOperationStatus() {
        if (this.crrOperationStatus == null) {
            this.crrOperationStatus = new CrrOperationStatusImpl(clientObject.getCrrOperationStatus(), this);
        }
        return crrOperationStatus;
    }

    /**
     * Gets the resource collection API of RecoveryPoints.
     * 
     * @return Resource collection API of RecoveryPoints.
     */
    public RecoveryPoints recoveryPoints() {
        if (this.recoveryPoints == null) {
            this.recoveryPoints = new RecoveryPointsImpl(clientObject.getRecoveryPoints(), this);
        }
        return recoveryPoints;
    }

    /**
     * Gets the resource collection API of BackupResourceStorageConfigs.
     * 
     * @return Resource collection API of BackupResourceStorageConfigs.
     */
    public BackupResourceStorageConfigs backupResourceStorageConfigs() {
        if (this.backupResourceStorageConfigs == null) {
            this.backupResourceStorageConfigs
                = new BackupResourceStorageConfigsImpl(clientObject.getBackupResourceStorageConfigs(), this);
        }
        return backupResourceStorageConfigs;
    }

    /**
     * Gets the resource collection API of RecoveryPointsCrrs.
     * 
     * @return Resource collection API of RecoveryPointsCrrs.
     */
    public RecoveryPointsCrrs recoveryPointsCrrs() {
        if (this.recoveryPointsCrrs == null) {
            this.recoveryPointsCrrs = new RecoveryPointsCrrsImpl(clientObject.getRecoveryPointsCrrs(), this);
        }
        return recoveryPointsCrrs;
    }

    /**
     * Gets the resource collection API of BackupProtectedItemsCrrs.
     * 
     * @return Resource collection API of BackupProtectedItemsCrrs.
     */
    public BackupProtectedItemsCrrs backupProtectedItemsCrrs() {
        if (this.backupProtectedItemsCrrs == null) {
            this.backupProtectedItemsCrrs
                = new BackupProtectedItemsCrrsImpl(clientObject.getBackupProtectedItemsCrrs(), this);
        }
        return backupProtectedItemsCrrs;
    }

    /**
     * Gets wrapped service client RecoveryServicesBackupClient providing direct access to the underlying auto-generated
     * API implementation, based on Azure REST API.
     * 
     * @return Wrapped service client RecoveryServicesBackupClient.
     */
    public RecoveryServicesBackupClient serviceClient() {
        return this.clientObject;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CrossRegionRestoreRequest model.
 */
@Fluent
public final class CrossRegionRestoreRequest implements JsonSerializable<CrossRegionRestoreRequest> {
    /*
     * Access details for cross region restore
     */
    private CrrAccessToken crossRegionRestoreAccessDetails;

    /*
     * Request object for triggering restore
     */
    private RestoreRequest restoreRequest;

    /**
     * Creates an instance of CrossRegionRestoreRequest class.
     */
    public CrossRegionRestoreRequest() {
    }

    /**
     * Get the crossRegionRestoreAccessDetails property: Access details for cross region restore.
     * 
     * @return the crossRegionRestoreAccessDetails value.
     */
    public CrrAccessToken crossRegionRestoreAccessDetails() {
        return this.crossRegionRestoreAccessDetails;
    }

    /**
     * Set the crossRegionRestoreAccessDetails property: Access details for cross region restore.
     * 
     * @param crossRegionRestoreAccessDetails the crossRegionRestoreAccessDetails value to set.
     * @return the CrossRegionRestoreRequest object itself.
     */
    public CrossRegionRestoreRequest
        withCrossRegionRestoreAccessDetails(CrrAccessToken crossRegionRestoreAccessDetails) {
        this.crossRegionRestoreAccessDetails = crossRegionRestoreAccessDetails;
        return this;
    }

    /**
     * Get the restoreRequest property: Request object for triggering restore.
     * 
     * @return the restoreRequest value.
     */
    public RestoreRequest restoreRequest() {
        return this.restoreRequest;
    }

    /**
     * Set the restoreRequest property: Request object for triggering restore.
     * 
     * @param restoreRequest the restoreRequest value to set.
     * @return the CrossRegionRestoreRequest object itself.
     */
    public CrossRegionRestoreRequest withRestoreRequest(RestoreRequest restoreRequest) {
        this.restoreRequest = restoreRequest;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (crossRegionRestoreAccessDetails() != null) {
            crossRegionRestoreAccessDetails().validate();
        }
        if (restoreRequest() != null) {
            restoreRequest().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("crossRegionRestoreAccessDetails", this.crossRegionRestoreAccessDetails);
        jsonWriter.writeJsonField("restoreRequest", this.restoreRequest);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CrossRegionRestoreRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CrossRegionRestoreRequest if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CrossRegionRestoreRequest.
     */
    public static CrossRegionRestoreRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CrossRegionRestoreRequest deserializedCrossRegionRestoreRequest = new CrossRegionRestoreRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("crossRegionRestoreAccessDetails".equals(fieldName)) {
                    deserializedCrossRegionRestoreRequest.crossRegionRestoreAccessDetails
                        = CrrAccessToken.fromJson(reader);
                } else if ("restoreRequest".equals(fieldName)) {
                    deserializedCrossRegionRestoreRequest.restoreRequest = RestoreRequest.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCrossRegionRestoreRequest;
        });
    }
}

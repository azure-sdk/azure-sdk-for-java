// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The AadProperties model.
 */
@Fluent
public final class AadProperties implements JsonSerializable<AadProperties> {
    /*
     * The servicePrincipalClientId property.
     */
    private String servicePrincipalClientId;

    /*
     * The tenantId property.
     */
    private String tenantId;

    /*
     * The authority property.
     */
    private String authority;

    /*
     * The audience property.
     */
    private String audience;

    /*
     * The servicePrincipalObjectId property.
     */
    private String servicePrincipalObjectId;

    /**
     * Creates an instance of AadProperties class.
     */
    public AadProperties() {
    }

    /**
     * Get the servicePrincipalClientId property: The servicePrincipalClientId property.
     * 
     * @return the servicePrincipalClientId value.
     */
    public String servicePrincipalClientId() {
        return this.servicePrincipalClientId;
    }

    /**
     * Set the servicePrincipalClientId property: The servicePrincipalClientId property.
     * 
     * @param servicePrincipalClientId the servicePrincipalClientId value to set.
     * @return the AadProperties object itself.
     */
    public AadProperties withServicePrincipalClientId(String servicePrincipalClientId) {
        this.servicePrincipalClientId = servicePrincipalClientId;
        return this;
    }

    /**
     * Get the tenantId property: The tenantId property.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The tenantId property.
     * 
     * @param tenantId the tenantId value to set.
     * @return the AadProperties object itself.
     */
    public AadProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the authority property: The authority property.
     * 
     * @return the authority value.
     */
    public String authority() {
        return this.authority;
    }

    /**
     * Set the authority property: The authority property.
     * 
     * @param authority the authority value to set.
     * @return the AadProperties object itself.
     */
    public AadProperties withAuthority(String authority) {
        this.authority = authority;
        return this;
    }

    /**
     * Get the audience property: The audience property.
     * 
     * @return the audience value.
     */
    public String audience() {
        return this.audience;
    }

    /**
     * Set the audience property: The audience property.
     * 
     * @param audience the audience value to set.
     * @return the AadProperties object itself.
     */
    public AadProperties withAudience(String audience) {
        this.audience = audience;
        return this;
    }

    /**
     * Get the servicePrincipalObjectId property: The servicePrincipalObjectId property.
     * 
     * @return the servicePrincipalObjectId value.
     */
    public String servicePrincipalObjectId() {
        return this.servicePrincipalObjectId;
    }

    /**
     * Set the servicePrincipalObjectId property: The servicePrincipalObjectId property.
     * 
     * @param servicePrincipalObjectId the servicePrincipalObjectId value to set.
     * @return the AadProperties object itself.
     */
    public AadProperties withServicePrincipalObjectId(String servicePrincipalObjectId) {
        this.servicePrincipalObjectId = servicePrincipalObjectId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("servicePrincipalClientId", this.servicePrincipalClientId);
        jsonWriter.writeStringField("tenantId", this.tenantId);
        jsonWriter.writeStringField("authority", this.authority);
        jsonWriter.writeStringField("audience", this.audience);
        jsonWriter.writeStringField("servicePrincipalObjectId", this.servicePrincipalObjectId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AadProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AadProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AadProperties.
     */
    public static AadProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AadProperties deserializedAadProperties = new AadProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("servicePrincipalClientId".equals(fieldName)) {
                    deserializedAadProperties.servicePrincipalClientId = reader.getString();
                } else if ("tenantId".equals(fieldName)) {
                    deserializedAadProperties.tenantId = reader.getString();
                } else if ("authority".equals(fieldName)) {
                    deserializedAadProperties.authority = reader.getString();
                } else if ("audience".equals(fieldName)) {
                    deserializedAadProperties.audience = reader.getString();
                } else if ("servicePrincipalObjectId".equals(fieldName)) {
                    deserializedAadProperties.servicePrincipalObjectId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAadProperties;
        });
    }
}

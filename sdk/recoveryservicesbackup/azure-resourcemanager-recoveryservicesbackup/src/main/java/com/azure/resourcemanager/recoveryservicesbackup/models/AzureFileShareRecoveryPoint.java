// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicesbackup.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Azure File Share workload specific backup copy.
 */
@Fluent
public final class AzureFileShareRecoveryPoint extends RecoveryPoint {
    /*
     * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of
     * types.
     */
    private String objectType = "AzureFileShareRecoveryPoint";

    /*
     * Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent.
     */
    private String recoveryPointType;

    /*
     * Denotes whether the Recovery point can be restored to secondary region
     */
    private String crossRegionRestoreState;

    /*
     * Time at which this backup copy was created.
     */
    private OffsetDateTime recoveryPointTime;

    /*
     * Contains Url to the snapshot of fileshare, if applicable
     */
    private String fileShareSnapshotUri;

    /*
     * Contains recovery point size
     */
    private Integer recoveryPointSizeInGB;

    /*
     * Properties of Recovery Point
     */
    private RecoveryPointProperties recoveryPointProperties;

    /**
     * Creates an instance of AzureFileShareRecoveryPoint class.
     */
    public AzureFileShareRecoveryPoint() {
    }

    /**
     * Get the objectType property: This property will be used as the discriminator for deciding the specific types in
     * the polymorphic chain of types.
     * 
     * @return the objectType value.
     */
    @Override
    public String objectType() {
        return this.objectType;
    }

    /**
     * Get the recoveryPointType property: Type of the backup copy. Specifies whether it is a crash consistent backup or
     * app consistent.
     * 
     * @return the recoveryPointType value.
     */
    public String recoveryPointType() {
        return this.recoveryPointType;
    }

    /**
     * Get the crossRegionRestoreState property: Denotes whether the Recovery point can be restored to secondary region.
     * 
     * @return the crossRegionRestoreState value.
     */
    public String crossRegionRestoreState() {
        return this.crossRegionRestoreState;
    }

    /**
     * Set the crossRegionRestoreState property: Denotes whether the Recovery point can be restored to secondary region.
     * 
     * @param crossRegionRestoreState the crossRegionRestoreState value to set.
     * @return the AzureFileShareRecoveryPoint object itself.
     */
    public AzureFileShareRecoveryPoint withCrossRegionRestoreState(String crossRegionRestoreState) {
        this.crossRegionRestoreState = crossRegionRestoreState;
        return this;
    }

    /**
     * Get the recoveryPointTime property: Time at which this backup copy was created.
     * 
     * @return the recoveryPointTime value.
     */
    public OffsetDateTime recoveryPointTime() {
        return this.recoveryPointTime;
    }

    /**
     * Get the fileShareSnapshotUri property: Contains Url to the snapshot of fileshare, if applicable.
     * 
     * @return the fileShareSnapshotUri value.
     */
    public String fileShareSnapshotUri() {
        return this.fileShareSnapshotUri;
    }

    /**
     * Get the recoveryPointSizeInGB property: Contains recovery point size.
     * 
     * @return the recoveryPointSizeInGB value.
     */
    public Integer recoveryPointSizeInGB() {
        return this.recoveryPointSizeInGB;
    }

    /**
     * Get the recoveryPointProperties property: Properties of Recovery Point.
     * 
     * @return the recoveryPointProperties value.
     */
    public RecoveryPointProperties recoveryPointProperties() {
        return this.recoveryPointProperties;
    }

    /**
     * Set the recoveryPointProperties property: Properties of Recovery Point.
     * 
     * @param recoveryPointProperties the recoveryPointProperties value to set.
     * @return the AzureFileShareRecoveryPoint object itself.
     */
    public AzureFileShareRecoveryPoint withRecoveryPointProperties(RecoveryPointProperties recoveryPointProperties) {
        this.recoveryPointProperties = recoveryPointProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (recoveryPointProperties() != null) {
            recoveryPointProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("objectType", this.objectType);
        jsonWriter.writeStringField("crossRegionRestoreState", this.crossRegionRestoreState);
        jsonWriter.writeJsonField("recoveryPointProperties", this.recoveryPointProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureFileShareRecoveryPoint from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureFileShareRecoveryPoint if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureFileShareRecoveryPoint.
     */
    public static AzureFileShareRecoveryPoint fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureFileShareRecoveryPoint deserializedAzureFileShareRecoveryPoint = new AzureFileShareRecoveryPoint();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("objectType".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.objectType = reader.getString();
                } else if ("recoveryPointType".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.recoveryPointType = reader.getString();
                } else if ("crossRegionRestoreState".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.crossRegionRestoreState = reader.getString();
                } else if ("recoveryPointTime".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.recoveryPointTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("fileShareSnapshotUri".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.fileShareSnapshotUri = reader.getString();
                } else if ("recoveryPointSizeInGB".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.recoveryPointSizeInGB
                        = reader.getNullable(JsonReader::getInt);
                } else if ("recoveryPointProperties".equals(fieldName)) {
                    deserializedAzureFileShareRecoveryPoint.recoveryPointProperties
                        = RecoveryPointProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureFileShareRecoveryPoint;
        });
    }
}

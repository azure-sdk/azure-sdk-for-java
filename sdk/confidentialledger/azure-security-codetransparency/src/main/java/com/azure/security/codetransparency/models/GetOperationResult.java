// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.security.codetransparency.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Response body of the GetOperationId API.
 */
@Immutable
public final class GetOperationResult implements JsonSerializable<GetOperationResult> {
    /*
     * ID of the transaction. Only if status is Succeeded.
     */
    @Generated
    private String entryId;

    /*
     * Error in json format. Only if Status is Failed.
     */
    @Generated
    private String error;

    /*
     * OperationId
     */
    @Generated
    private final String operationId;

    /*
     * Status of the operation.
     */
    @Generated
    private final OperationStatus status;

    /**
     * Creates an instance of GetOperationResult class.
     * 
     * @param operationId the operationId value to set.
     * @param status the status value to set.
     */
    @Generated
    private GetOperationResult(String operationId, OperationStatus status) {
        this.operationId = operationId;
        this.status = status;
    }

    /**
     * Get the entryId property: ID of the transaction. Only if status is Succeeded.
     * 
     * @return the entryId value.
     */
    @Generated
    public String getEntryId() {
        return this.entryId;
    }

    /**
     * Get the error property: Error in json format. Only if Status is Failed.
     * 
     * @return the error value.
     */
    @Generated
    public String getError() {
        return this.error;
    }

    /**
     * Get the operationId property: OperationId.
     * 
     * @return the operationId value.
     */
    @Generated
    public String getOperationId() {
        return this.operationId;
    }

    /**
     * Get the status property: Status of the operation.
     * 
     * @return the status value.
     */
    @Generated
    public OperationStatus getStatus() {
        return this.status;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("operationId", this.operationId);
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeStringField("entryId", this.entryId);
        jsonWriter.writeStringField("error", this.error);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetOperationResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetOperationResult if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GetOperationResult.
     */
    @Generated
    public static GetOperationResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String operationId = null;
            OperationStatus status = null;
            String entryId = null;
            String error = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("operationId".equals(fieldName)) {
                    operationId = reader.getString();
                } else if ("status".equals(fieldName)) {
                    status = OperationStatus.fromString(reader.getString());
                } else if ("entryId".equals(fieldName)) {
                    entryId = reader.getString();
                } else if ("error".equals(fieldName)) {
                    error = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            GetOperationResult deserializedGetOperationResult = new GetOperationResult(operationId, status);
            deserializedGetOperationResult.entryId = entryId;
            deserializedGetOperationResult.error = error;

            return deserializedGetOperationResult;
        });
    }
}

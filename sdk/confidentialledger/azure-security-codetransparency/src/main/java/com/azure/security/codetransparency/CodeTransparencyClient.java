// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.security.codetransparency;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.security.codetransparency.implementation.CodeTransparencyClientImpl;
import com.azure.security.codetransparency.models.JwksDocument;

/**
 * Initializes a new instance of the synchronous CodeTransparencyClient type.
 */
@ServiceClient(builder = CodeTransparencyClientBuilder.class)
public final class CodeTransparencyClient {
    @Generated
    private final CodeTransparencyClientImpl serviceClient;

    /**
     * Initializes an instance of CodeTransparencyClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    CodeTransparencyClient(CodeTransparencyClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Get the transparency service configuration, mandatory in IETF SCITT draft.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the transparency service configuration, mandatory in IETF SCITT draft along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getTransparencyConfigCborWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getTransparencyConfigCborWithResponse(requestOptions);
    }

    /**
     * Get the public keys used by the service to sign receipts, mentioned in IETF SCITT draft as part of jwks_uri
     * implementation.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     keys (Required): [
     *          (Required){
     *             alg: String (Optional)
     *             crv: String (Optional)
     *             d: String (Optional)
     *             dp: String (Optional)
     *             dq: String (Optional)
     *             e: String (Optional)
     *             k: String (Optional)
     *             kid: String (Optional)
     *             kty: String (Required)
     *             n: String (Optional)
     *             p: String (Optional)
     *             q: String (Optional)
     *             qi: String (Optional)
     *             use: String (Optional)
     *             x: String (Optional)
     *             x5c (Optional): [
     *                 String (Optional)
     *             ]
     *             y: String (Optional)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the public keys used by the service to sign receipts, mentioned in IETF SCITT draft as part of jwks_uri
     * implementation along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getPublicKeysWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getPublicKeysWithResponse(requestOptions);
    }

    /**
     * Post an entry to be registered on the CodeTransparency instance, mandatory in IETF SCITT draft.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param body CoseSign1 signature envelope.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createEntryWithResponse(BinaryData body, RequestOptions requestOptions) {
        return this.serviceClient.createEntryWithResponse(body, requestOptions);
    }

    /**
     * Get status of the long running registration operation, mandatory in IETF SCITT draft.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param operationId ID of the operation to retrieve.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return status of the long running registration operation, mandatory in IETF SCITT draft along with
     * {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getOperationWithResponse(String operationId, RequestOptions requestOptions) {
        return this.serviceClient.getOperationWithResponse(operationId, requestOptions);
    }

    /**
     * Get receipt.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param entryId ID of the entry to retrieve.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return receipt along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getEntryWithResponse(String entryId, RequestOptions requestOptions) {
        return this.serviceClient.getEntryWithResponse(entryId, requestOptions);
    }

    /**
     * Get the transparent statement consisting of the signed statement and the receipt embedded in the header.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * BinaryData
     * }
     * </pre>
     * 
     * @param entryId ID of the entry to retrieve.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the transparent statement consisting of the signed statement and the receipt embedded in the header along
     * with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getEntryStatementWithResponse(String entryId, RequestOptions requestOptions) {
        return this.serviceClient.getEntryStatementWithResponse(entryId, requestOptions);
    }

    /**
     * Get the transparency service configuration, mandatory in IETF SCITT draft.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the transparency service configuration, mandatory in IETF SCITT draft.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public BinaryData getTransparencyConfigCbor() {
        // Generated convenience method for getTransparencyConfigCborWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getTransparencyConfigCborWithResponse(requestOptions).getValue();
    }

    /**
     * Get the public keys used by the service to sign receipts, mentioned in IETF SCITT draft as part of jwks_uri
     * implementation.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the public keys used by the service to sign receipts, mentioned in IETF SCITT draft as part of jwks_uri
     * implementation.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public JwksDocument getPublicKeys() {
        // Generated convenience method for getPublicKeysWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getPublicKeysWithResponse(requestOptions).getValue().toObject(JwksDocument.class);
    }

    /**
     * Post an entry to be registered on the CodeTransparency instance, mandatory in IETF SCITT draft.
     * 
     * @param body CoseSign1 signature envelope.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public BinaryData createEntry(BinaryData body) {
        // Generated convenience method for createEntryWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return createEntryWithResponse(body, requestOptions).getValue();
    }

    /**
     * Get status of the long running registration operation, mandatory in IETF SCITT draft.
     * 
     * @param operationId ID of the operation to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return status of the long running registration operation, mandatory in IETF SCITT draft.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public BinaryData getOperation(String operationId) {
        // Generated convenience method for getOperationWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getOperationWithResponse(operationId, requestOptions).getValue();
    }

    /**
     * Get receipt.
     * 
     * @param entryId ID of the entry to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return receipt.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public BinaryData getEntry(String entryId) {
        // Generated convenience method for getEntryWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getEntryWithResponse(entryId, requestOptions).getValue();
    }

    /**
     * Get the transparent statement consisting of the signed statement and the receipt embedded in the header.
     * 
     * @param entryId ID of the entry to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the transparent statement consisting of the signed statement and the receipt embedded in the header.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public BinaryData getEntryStatement(String entryId) {
        // Generated convenience method for getEntryStatementWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getEntryStatementWithResponse(entryId, requestOptions).getValue();
    }
}

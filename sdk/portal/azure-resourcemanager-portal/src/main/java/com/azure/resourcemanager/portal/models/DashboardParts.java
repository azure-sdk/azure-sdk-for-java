// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.portal.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A dashboard part.
 */
@Fluent
public final class DashboardParts implements JsonSerializable<DashboardParts> {
    /*
     * The dashboard's part position.
     */
    private DashboardPartsPosition position;

    /*
     * The dashboard part's metadata.
     */
    private DashboardPartMetadata metadata;

    /**
     * Creates an instance of DashboardParts class.
     */
    public DashboardParts() {
    }

    /**
     * Get the position property: The dashboard's part position.
     * 
     * @return the position value.
     */
    public DashboardPartsPosition position() {
        return this.position;
    }

    /**
     * Set the position property: The dashboard's part position.
     * 
     * @param position the position value to set.
     * @return the DashboardParts object itself.
     */
    public DashboardParts withPosition(DashboardPartsPosition position) {
        this.position = position;
        return this;
    }

    /**
     * Get the metadata property: The dashboard part's metadata.
     * 
     * @return the metadata value.
     */
    public DashboardPartMetadata metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: The dashboard part's metadata.
     * 
     * @param metadata the metadata value to set.
     * @return the DashboardParts object itself.
     */
    public DashboardParts withMetadata(DashboardPartMetadata metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (position() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property position in model DashboardParts"));
        } else {
            position().validate();
        }
        if (metadata() != null) {
            metadata().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DashboardParts.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("position", this.position);
        jsonWriter.writeJsonField("metadata", this.metadata);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DashboardParts from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DashboardParts if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DashboardParts.
     */
    public static DashboardParts fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DashboardParts deserializedDashboardParts = new DashboardParts();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("position".equals(fieldName)) {
                    deserializedDashboardParts.position = DashboardPartsPosition.fromJson(reader);
                } else if ("metadata".equals(fieldName)) {
                    deserializedDashboardParts.metadata = DashboardPartMetadata.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDashboardParts;
        });
    }
}

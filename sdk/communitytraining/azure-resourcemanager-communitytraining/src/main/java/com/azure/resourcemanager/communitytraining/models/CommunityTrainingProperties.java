// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communitytraining.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the Community CommunityTraining.
 */
@Fluent
public final class CommunityTrainingProperties implements JsonSerializable<CommunityTrainingProperties> {
    /*
     * The portal name (website name) of the Community Training instance
     */
    private String portalName;

    /*
     * The email address of the portal admin
     */
    private String portalAdminEmailAddress;

    /*
     * The organization name of the portal owner
     */
    private String portalOwnerOrganizationName;

    /*
     * The email address of the portal owner. Will be used as the primary contact
     */
    private String portalOwnerEmailAddress;

    /*
     * The identity configuration of the Community Training resource
     */
    private IdentityConfigurationProperties identityConfiguration;

    /*
     * To indicate whether the Community Training instance has Zone Redundancy enabled
     */
    private boolean zoneRedundancyEnabled;

    /*
     * To indicate whether the Community Training instance has Disaster Recovery enabled
     */
    private boolean disasterRecoveryEnabled;

    /*
     * The status of the last operation.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of CommunityTrainingProperties class.
     */
    public CommunityTrainingProperties() {
    }

    /**
     * Get the portalName property: The portal name (website name) of the Community Training instance.
     * 
     * @return the portalName value.
     */
    public String portalName() {
        return this.portalName;
    }

    /**
     * Set the portalName property: The portal name (website name) of the Community Training instance.
     * 
     * @param portalName the portalName value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties withPortalName(String portalName) {
        this.portalName = portalName;
        return this;
    }

    /**
     * Get the portalAdminEmailAddress property: The email address of the portal admin.
     * 
     * @return the portalAdminEmailAddress value.
     */
    public String portalAdminEmailAddress() {
        return this.portalAdminEmailAddress;
    }

    /**
     * Set the portalAdminEmailAddress property: The email address of the portal admin.
     * 
     * @param portalAdminEmailAddress the portalAdminEmailAddress value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties withPortalAdminEmailAddress(String portalAdminEmailAddress) {
        this.portalAdminEmailAddress = portalAdminEmailAddress;
        return this;
    }

    /**
     * Get the portalOwnerOrganizationName property: The organization name of the portal owner.
     * 
     * @return the portalOwnerOrganizationName value.
     */
    public String portalOwnerOrganizationName() {
        return this.portalOwnerOrganizationName;
    }

    /**
     * Set the portalOwnerOrganizationName property: The organization name of the portal owner.
     * 
     * @param portalOwnerOrganizationName the portalOwnerOrganizationName value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties withPortalOwnerOrganizationName(String portalOwnerOrganizationName) {
        this.portalOwnerOrganizationName = portalOwnerOrganizationName;
        return this;
    }

    /**
     * Get the portalOwnerEmailAddress property: The email address of the portal owner. Will be used as the primary
     * contact.
     * 
     * @return the portalOwnerEmailAddress value.
     */
    public String portalOwnerEmailAddress() {
        return this.portalOwnerEmailAddress;
    }

    /**
     * Set the portalOwnerEmailAddress property: The email address of the portal owner. Will be used as the primary
     * contact.
     * 
     * @param portalOwnerEmailAddress the portalOwnerEmailAddress value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties withPortalOwnerEmailAddress(String portalOwnerEmailAddress) {
        this.portalOwnerEmailAddress = portalOwnerEmailAddress;
        return this;
    }

    /**
     * Get the identityConfiguration property: The identity configuration of the Community Training resource.
     * 
     * @return the identityConfiguration value.
     */
    public IdentityConfigurationProperties identityConfiguration() {
        return this.identityConfiguration;
    }

    /**
     * Set the identityConfiguration property: The identity configuration of the Community Training resource.
     * 
     * @param identityConfiguration the identityConfiguration value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties
        withIdentityConfiguration(IdentityConfigurationProperties identityConfiguration) {
        this.identityConfiguration = identityConfiguration;
        return this;
    }

    /**
     * Get the zoneRedundancyEnabled property: To indicate whether the Community Training instance has Zone Redundancy
     * enabled.
     * 
     * @return the zoneRedundancyEnabled value.
     */
    public boolean zoneRedundancyEnabled() {
        return this.zoneRedundancyEnabled;
    }

    /**
     * Set the zoneRedundancyEnabled property: To indicate whether the Community Training instance has Zone Redundancy
     * enabled.
     * 
     * @param zoneRedundancyEnabled the zoneRedundancyEnabled value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties withZoneRedundancyEnabled(boolean zoneRedundancyEnabled) {
        this.zoneRedundancyEnabled = zoneRedundancyEnabled;
        return this;
    }

    /**
     * Get the disasterRecoveryEnabled property: To indicate whether the Community Training instance has Disaster
     * Recovery enabled.
     * 
     * @return the disasterRecoveryEnabled value.
     */
    public boolean disasterRecoveryEnabled() {
        return this.disasterRecoveryEnabled;
    }

    /**
     * Set the disasterRecoveryEnabled property: To indicate whether the Community Training instance has Disaster
     * Recovery enabled.
     * 
     * @param disasterRecoveryEnabled the disasterRecoveryEnabled value to set.
     * @return the CommunityTrainingProperties object itself.
     */
    public CommunityTrainingProperties withDisasterRecoveryEnabled(boolean disasterRecoveryEnabled) {
        this.disasterRecoveryEnabled = disasterRecoveryEnabled;
        return this;
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (portalName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property portalName in model CommunityTrainingProperties"));
        }
        if (portalAdminEmailAddress() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property portalAdminEmailAddress in model CommunityTrainingProperties"));
        }
        if (portalOwnerOrganizationName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property portalOwnerOrganizationName in model CommunityTrainingProperties"));
        }
        if (portalOwnerEmailAddress() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property portalOwnerEmailAddress in model CommunityTrainingProperties"));
        }
        if (identityConfiguration() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property identityConfiguration in model CommunityTrainingProperties"));
        } else {
            identityConfiguration().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CommunityTrainingProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("portalName", this.portalName);
        jsonWriter.writeStringField("portalAdminEmailAddress", this.portalAdminEmailAddress);
        jsonWriter.writeStringField("portalOwnerOrganizationName", this.portalOwnerOrganizationName);
        jsonWriter.writeStringField("portalOwnerEmailAddress", this.portalOwnerEmailAddress);
        jsonWriter.writeJsonField("identityConfiguration", this.identityConfiguration);
        jsonWriter.writeBooleanField("zoneRedundancyEnabled", this.zoneRedundancyEnabled);
        jsonWriter.writeBooleanField("disasterRecoveryEnabled", this.disasterRecoveryEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunityTrainingProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunityTrainingProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CommunityTrainingProperties.
     */
    public static CommunityTrainingProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunityTrainingProperties deserializedCommunityTrainingProperties = new CommunityTrainingProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("portalName".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.portalName = reader.getString();
                } else if ("portalAdminEmailAddress".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.portalAdminEmailAddress = reader.getString();
                } else if ("portalOwnerOrganizationName".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.portalOwnerOrganizationName = reader.getString();
                } else if ("portalOwnerEmailAddress".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.portalOwnerEmailAddress = reader.getString();
                } else if ("identityConfiguration".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.identityConfiguration
                        = IdentityConfigurationProperties.fromJson(reader);
                } else if ("zoneRedundancyEnabled".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.zoneRedundancyEnabled = reader.getBoolean();
                } else if ("disasterRecoveryEnabled".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.disasterRecoveryEnabled = reader.getBoolean();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedCommunityTrainingProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunityTrainingProperties;
        });
    }
}

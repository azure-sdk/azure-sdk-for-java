// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communitytraining.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the Community CommunityTraining Identity Configuration.
 */
@Fluent
public final class IdentityConfigurationPropertiesUpdate
    implements JsonSerializable<IdentityConfigurationPropertiesUpdate> {
    /*
     * The identity type of the Community Training Resource
     */
    private String identityType;

    /*
     * To indicate whether the Community Training Resource has Teams enabled
     */
    private Boolean teamsEnabled;

    /*
     * The tenantId of the selected identity provider for the Community Training Resource
     */
    private String tenantId;

    /*
     * The domain name of the selected identity provider for the Community Training Resource
     */
    private String domainName;

    /*
     * The clientId of the application registered in the selected identity provider for the Community Training Resource
     */
    private String clientId;

    /*
     * The client secret of the application registered in the selected identity provider for the Community Training
     * Resource
     */
    private String clientSecret;

    /*
     * The name of the authentication policy registered in ADB2C for the Community Training Resource
     */
    private String b2CAuthenticationPolicy;

    /*
     * The name of the password reset policy registered in ADB2C for the Community Training Resource
     */
    private String b2CPasswordResetPolicy;

    /*
     * The custom login parameters for the Community Training Resource
     */
    private String customLoginParameters;

    /**
     * Creates an instance of IdentityConfigurationPropertiesUpdate class.
     */
    public IdentityConfigurationPropertiesUpdate() {
    }

    /**
     * Get the identityType property: The identity type of the Community Training Resource.
     * 
     * @return the identityType value.
     */
    public String identityType() {
        return this.identityType;
    }

    /**
     * Set the identityType property: The identity type of the Community Training Resource.
     * 
     * @param identityType the identityType value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withIdentityType(String identityType) {
        this.identityType = identityType;
        return this;
    }

    /**
     * Get the teamsEnabled property: To indicate whether the Community Training Resource has Teams enabled.
     * 
     * @return the teamsEnabled value.
     */
    public Boolean teamsEnabled() {
        return this.teamsEnabled;
    }

    /**
     * Set the teamsEnabled property: To indicate whether the Community Training Resource has Teams enabled.
     * 
     * @param teamsEnabled the teamsEnabled value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withTeamsEnabled(Boolean teamsEnabled) {
        this.teamsEnabled = teamsEnabled;
        return this;
    }

    /**
     * Get the tenantId property: The tenantId of the selected identity provider for the Community Training Resource.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The tenantId of the selected identity provider for the Community Training Resource.
     * 
     * @param tenantId the tenantId value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the domainName property: The domain name of the selected identity provider for the Community Training
     * Resource.
     * 
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: The domain name of the selected identity provider for the Community Training
     * Resource.
     * 
     * @param domainName the domainName value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Get the clientId property: The clientId of the application registered in the selected identity provider for the
     * Community Training Resource.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The clientId of the application registered in the selected identity provider for the
     * Community Training Resource.
     * 
     * @param clientId the clientId value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: The client secret of the application registered in the selected identity provider
     * for the Community Training Resource.
     * 
     * @return the clientSecret value.
     */
    public String clientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: The client secret of the application registered in the selected identity provider
     * for the Community Training Resource.
     * 
     * @param clientSecret the clientSecret value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the b2CAuthenticationPolicy property: The name of the authentication policy registered in ADB2C for the
     * Community Training Resource.
     * 
     * @return the b2CAuthenticationPolicy value.
     */
    public String b2CAuthenticationPolicy() {
        return this.b2CAuthenticationPolicy;
    }

    /**
     * Set the b2CAuthenticationPolicy property: The name of the authentication policy registered in ADB2C for the
     * Community Training Resource.
     * 
     * @param b2CAuthenticationPolicy the b2CAuthenticationPolicy value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withB2CAuthenticationPolicy(String b2CAuthenticationPolicy) {
        this.b2CAuthenticationPolicy = b2CAuthenticationPolicy;
        return this;
    }

    /**
     * Get the b2CPasswordResetPolicy property: The name of the password reset policy registered in ADB2C for the
     * Community Training Resource.
     * 
     * @return the b2CPasswordResetPolicy value.
     */
    public String b2CPasswordResetPolicy() {
        return this.b2CPasswordResetPolicy;
    }

    /**
     * Set the b2CPasswordResetPolicy property: The name of the password reset policy registered in ADB2C for the
     * Community Training Resource.
     * 
     * @param b2CPasswordResetPolicy the b2CPasswordResetPolicy value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withB2CPasswordResetPolicy(String b2CPasswordResetPolicy) {
        this.b2CPasswordResetPolicy = b2CPasswordResetPolicy;
        return this;
    }

    /**
     * Get the customLoginParameters property: The custom login parameters for the Community Training Resource.
     * 
     * @return the customLoginParameters value.
     */
    public String customLoginParameters() {
        return this.customLoginParameters;
    }

    /**
     * Set the customLoginParameters property: The custom login parameters for the Community Training Resource.
     * 
     * @param customLoginParameters the customLoginParameters value to set.
     * @return the IdentityConfigurationPropertiesUpdate object itself.
     */
    public IdentityConfigurationPropertiesUpdate withCustomLoginParameters(String customLoginParameters) {
        this.customLoginParameters = customLoginParameters;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("identityType", this.identityType);
        jsonWriter.writeBooleanField("teamsEnabled", this.teamsEnabled);
        jsonWriter.writeStringField("tenantId", this.tenantId);
        jsonWriter.writeStringField("domainName", this.domainName);
        jsonWriter.writeStringField("clientId", this.clientId);
        jsonWriter.writeStringField("clientSecret", this.clientSecret);
        jsonWriter.writeStringField("b2cAuthenticationPolicy", this.b2CAuthenticationPolicy);
        jsonWriter.writeStringField("b2cPasswordResetPolicy", this.b2CPasswordResetPolicy);
        jsonWriter.writeStringField("customLoginParameters", this.customLoginParameters);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IdentityConfigurationPropertiesUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IdentityConfigurationPropertiesUpdate if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IdentityConfigurationPropertiesUpdate.
     */
    public static IdentityConfigurationPropertiesUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IdentityConfigurationPropertiesUpdate deserializedIdentityConfigurationPropertiesUpdate
                = new IdentityConfigurationPropertiesUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("identityType".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.identityType = reader.getString();
                } else if ("teamsEnabled".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.teamsEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("tenantId".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.tenantId = reader.getString();
                } else if ("domainName".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.domainName = reader.getString();
                } else if ("clientId".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.clientId = reader.getString();
                } else if ("clientSecret".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.clientSecret = reader.getString();
                } else if ("b2cAuthenticationPolicy".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.b2CAuthenticationPolicy = reader.getString();
                } else if ("b2cPasswordResetPolicy".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.b2CPasswordResetPolicy = reader.getString();
                } else if ("customLoginParameters".equals(fieldName)) {
                    deserializedIdentityConfigurationPropertiesUpdate.customLoginParameters = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIdentityConfigurationPropertiesUpdate;
        });
    }
}

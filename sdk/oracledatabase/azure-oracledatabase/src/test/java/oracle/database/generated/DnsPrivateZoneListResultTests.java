// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package oracle.database.generated;

import com.azure.core.util.BinaryData;
import java.time.OffsetDateTime;
import oracle.database.implementation.models.DnsPrivateZoneListResult;
import oracle.database.models.DnsPrivateZonesLifecycleState;
import oracle.database.models.ZoneType;
import org.junit.jupiter.api.Assertions;

public final class DnsPrivateZoneListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DnsPrivateZoneListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"ocid\":\"dn\",\"isProtected\":true,\"lifecycleState\":\"Updating\",\"self\":\"vgbmhr\",\"serial\":731430664,\"version\":\"kw\",\"viewId\":\"ijejvegrhbpn\",\"zoneType\":\"Primary\",\"timeCreated\":\"2020-12-21T03:38:52Z\",\"provisioningState\":\"Succeeded\"},\"id\":\"cbdreaxhcexd\",\"name\":\"rvqahqkghtpwi\",\"type\":\"nhyjsv\"}],\"nextLink\":\"cxzbfvoowvr\"}")
            .toObject(DnsPrivateZoneListResult.class);
        Assertions.assertEquals("dn", model.value().get(0).properties().ocid());
        Assertions.assertEquals(true, model.value().get(0).properties().isProtected());
        Assertions.assertEquals(DnsPrivateZonesLifecycleState.UPDATING,
            model.value().get(0).properties().lifecycleState());
        Assertions.assertEquals("vgbmhr", model.value().get(0).properties().self());
        Assertions.assertEquals(731430664, model.value().get(0).properties().serial());
        Assertions.assertEquals("kw", model.value().get(0).properties().version());
        Assertions.assertEquals("ijejvegrhbpn", model.value().get(0).properties().viewId());
        Assertions.assertEquals(ZoneType.PRIMARY, model.value().get(0).properties().zoneType());
        Assertions.assertEquals(OffsetDateTime.parse("2020-12-21T03:38:52Z"),
            model.value().get(0).properties().timeCreated());
        Assertions.assertEquals("cxzbfvoowvr", model.nextLink());
    }
}

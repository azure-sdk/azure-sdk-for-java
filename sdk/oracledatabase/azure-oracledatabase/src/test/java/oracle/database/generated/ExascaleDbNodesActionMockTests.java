// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package oracle.database.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import oracle.database.DatabaseManager;
import oracle.database.models.AzureResourceProvisioningState;
import oracle.database.models.DbActionResponse;
import oracle.database.models.DbNodeAction;
import oracle.database.models.DbNodeActionEnum;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExascaleDbNodesActionMockTests {
    @Test
    public void testAction() throws Exception {
        String responseStr = "{\"provisioningState\":\"Failed\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabaseManager manager = DatabaseManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        DbActionResponse response = manager.exascaleDbNodes()
            .action("mikzeb", "qbsms", "ziqgfuh", new DbNodeAction().withAction(DbNodeActionEnum.STOP),
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals(AzureResourceProvisioningState.FAILED, response.provisioningState());
    }
}

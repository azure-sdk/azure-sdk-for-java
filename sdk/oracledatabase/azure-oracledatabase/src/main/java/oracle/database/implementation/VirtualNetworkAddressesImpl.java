// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package oracle.database.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import oracle.database.fluent.VirtualNetworkAddressesClient;
import oracle.database.fluent.models.VirtualNetworkAddressInner;
import oracle.database.models.VirtualNetworkAddress;
import oracle.database.models.VirtualNetworkAddresses;

public final class VirtualNetworkAddressesImpl implements VirtualNetworkAddresses {
    private static final ClientLogger LOGGER = new ClientLogger(VirtualNetworkAddressesImpl.class);

    private final VirtualNetworkAddressesClient innerClient;

    private final oracle.database.DatabaseManager serviceManager;

    public VirtualNetworkAddressesImpl(VirtualNetworkAddressesClient innerClient,
        oracle.database.DatabaseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<VirtualNetworkAddress> getWithResponse(String resourceGroupName, String cloudvmclustername,
        String virtualnetworkaddressname, Context context) {
        Response<VirtualNetworkAddressInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, cloudvmclustername, virtualnetworkaddressname, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new VirtualNetworkAddressImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public VirtualNetworkAddress get(String resourceGroupName, String cloudvmclustername,
        String virtualnetworkaddressname) {
        VirtualNetworkAddressInner inner
            = this.serviceClient().get(resourceGroupName, cloudvmclustername, virtualnetworkaddressname);
        if (inner != null) {
            return new VirtualNetworkAddressImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String cloudvmclustername, String virtualnetworkaddressname) {
        this.serviceClient().delete(resourceGroupName, cloudvmclustername, virtualnetworkaddressname);
    }

    public void delete(String resourceGroupName, String cloudvmclustername, String virtualnetworkaddressname,
        Context context) {
        this.serviceClient().delete(resourceGroupName, cloudvmclustername, virtualnetworkaddressname, context);
    }

    public PagedIterable<VirtualNetworkAddress> listByParent(String resourceGroupName, String cloudvmclustername) {
        PagedIterable<VirtualNetworkAddressInner> inner
            = this.serviceClient().listByParent(resourceGroupName, cloudvmclustername);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new VirtualNetworkAddressImpl(inner1, this.manager()));
    }

    public PagedIterable<VirtualNetworkAddress> listByParent(String resourceGroupName, String cloudvmclustername,
        Context context) {
        PagedIterable<VirtualNetworkAddressInner> inner
            = this.serviceClient().listByParent(resourceGroupName, cloudvmclustername, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new VirtualNetworkAddressImpl(inner1, this.manager()));
    }

    public VirtualNetworkAddress getById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String cloudvmclustername = ResourceManagerUtils.getValueFromIdByName(id, "cloudVmClusters");
        if (cloudvmclustername == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'cloudVmClusters'.", id)));
        }
        String virtualnetworkaddressname = ResourceManagerUtils.getValueFromIdByName(id, "virtualNetworkAddresses");
        if (virtualnetworkaddressname == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(String
                .format("The resource ID '%s' is not valid. Missing path segment 'virtualNetworkAddresses'.", id)));
        }
        return this.getWithResponse(resourceGroupName, cloudvmclustername, virtualnetworkaddressname, Context.NONE)
            .getValue();
    }

    public Response<VirtualNetworkAddress> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String cloudvmclustername = ResourceManagerUtils.getValueFromIdByName(id, "cloudVmClusters");
        if (cloudvmclustername == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'cloudVmClusters'.", id)));
        }
        String virtualnetworkaddressname = ResourceManagerUtils.getValueFromIdByName(id, "virtualNetworkAddresses");
        if (virtualnetworkaddressname == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(String
                .format("The resource ID '%s' is not valid. Missing path segment 'virtualNetworkAddresses'.", id)));
        }
        return this.getWithResponse(resourceGroupName, cloudvmclustername, virtualnetworkaddressname, context);
    }

    public void deleteById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String cloudvmclustername = ResourceManagerUtils.getValueFromIdByName(id, "cloudVmClusters");
        if (cloudvmclustername == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'cloudVmClusters'.", id)));
        }
        String virtualnetworkaddressname = ResourceManagerUtils.getValueFromIdByName(id, "virtualNetworkAddresses");
        if (virtualnetworkaddressname == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(String
                .format("The resource ID '%s' is not valid. Missing path segment 'virtualNetworkAddresses'.", id)));
        }
        this.delete(resourceGroupName, cloudvmclustername, virtualnetworkaddressname, Context.NONE);
    }

    public void deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String cloudvmclustername = ResourceManagerUtils.getValueFromIdByName(id, "cloudVmClusters");
        if (cloudvmclustername == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'cloudVmClusters'.", id)));
        }
        String virtualnetworkaddressname = ResourceManagerUtils.getValueFromIdByName(id, "virtualNetworkAddresses");
        if (virtualnetworkaddressname == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(String
                .format("The resource ID '%s' is not valid. Missing path segment 'virtualNetworkAddresses'.", id)));
        }
        this.delete(resourceGroupName, cloudvmclustername, virtualnetworkaddressname, context);
    }

    private VirtualNetworkAddressesClient serviceClient() {
        return this.innerClient;
    }

    private oracle.database.DatabaseManager manager() {
        return this.serviceManager;
    }

    public VirtualNetworkAddressImpl define(String name) {
        return new VirtualNetworkAddressImpl(name, this.manager());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseNationalCharacterSetProperties;
import java.io.IOException;

/**
 * AutonomousDatabaseNationalCharacterSets resource definition.
 */
@Fluent
public final class AutonomousDatabaseNationalCharacterSetInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    private AutonomousDatabaseNationalCharacterSetProperties properties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /**
     * Creates an instance of AutonomousDatabaseNationalCharacterSetInner class.
     */
    public AutonomousDatabaseNationalCharacterSetInner() {
    }

    /**
     * Get the properties property: The resource-specific properties for this resource.
     * 
     * @return the properties value.
     */
    public AutonomousDatabaseNationalCharacterSetProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The resource-specific properties for this resource.
     * 
     * @param properties the properties value to set.
     * @return the AutonomousDatabaseNationalCharacterSetInner object itself.
     */
    public AutonomousDatabaseNationalCharacterSetInner
        withProperties(AutonomousDatabaseNationalCharacterSetProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (properties() != null) {
            properties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.properties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutonomousDatabaseNationalCharacterSetInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutonomousDatabaseNationalCharacterSetInner if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AutonomousDatabaseNationalCharacterSetInner.
     */
    public static AutonomousDatabaseNationalCharacterSetInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutonomousDatabaseNationalCharacterSetInner deserializedAutonomousDatabaseNationalCharacterSetInner
                = new AutonomousDatabaseNationalCharacterSetInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedAutonomousDatabaseNationalCharacterSetInner.withId(reader.getString());
                } else if ("name".equals(fieldName)) {
                    deserializedAutonomousDatabaseNationalCharacterSetInner.withName(reader.getString());
                } else if ("type".equals(fieldName)) {
                    deserializedAutonomousDatabaseNationalCharacterSetInner.withType(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    deserializedAutonomousDatabaseNationalCharacterSetInner.properties
                        = AutonomousDatabaseNationalCharacterSetProperties.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedAutonomousDatabaseNationalCharacterSetInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutonomousDatabaseNationalCharacterSetInner;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracledatabase.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Exadata Database Storage Details.
 */
@Fluent
public final class ExascaleDbStorageDetails implements JsonSerializable<ExascaleDbStorageDetails> {
    /*
     * Available Capacity
     */
    private Integer availableSizeInGbs;

    /*
     * Total Capacity
     */
    private Integer totalSizeInGbs;

    /**
     * Creates an instance of ExascaleDbStorageDetails class.
     */
    public ExascaleDbStorageDetails() {
    }

    /**
     * Get the availableSizeInGbs property: Available Capacity.
     * 
     * @return the availableSizeInGbs value.
     */
    public Integer availableSizeInGbs() {
        return this.availableSizeInGbs;
    }

    /**
     * Set the availableSizeInGbs property: Available Capacity.
     * 
     * @param availableSizeInGbs the availableSizeInGbs value to set.
     * @return the ExascaleDbStorageDetails object itself.
     */
    public ExascaleDbStorageDetails withAvailableSizeInGbs(Integer availableSizeInGbs) {
        this.availableSizeInGbs = availableSizeInGbs;
        return this;
    }

    /**
     * Get the totalSizeInGbs property: Total Capacity.
     * 
     * @return the totalSizeInGbs value.
     */
    public Integer totalSizeInGbs() {
        return this.totalSizeInGbs;
    }

    /**
     * Set the totalSizeInGbs property: Total Capacity.
     * 
     * @param totalSizeInGbs the totalSizeInGbs value to set.
     * @return the ExascaleDbStorageDetails object itself.
     */
    public ExascaleDbStorageDetails withTotalSizeInGbs(Integer totalSizeInGbs) {
        this.totalSizeInGbs = totalSizeInGbs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("availableSizeInGbs", this.availableSizeInGbs);
        jsonWriter.writeNumberField("totalSizeInGbs", this.totalSizeInGbs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExascaleDbStorageDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExascaleDbStorageDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExascaleDbStorageDetails.
     */
    public static ExascaleDbStorageDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExascaleDbStorageDetails deserializedExascaleDbStorageDetails = new ExascaleDbStorageDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("availableSizeInGbs".equals(fieldName)) {
                    deserializedExascaleDbStorageDetails.availableSizeInGbs = reader.getNullable(JsonReader::getInt);
                } else if ("totalSizeInGbs".equals(fieldName)) {
                    deserializedExascaleDbStorageDetails.totalSizeInGbs = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExascaleDbStorageDetails;
        });
    }
}

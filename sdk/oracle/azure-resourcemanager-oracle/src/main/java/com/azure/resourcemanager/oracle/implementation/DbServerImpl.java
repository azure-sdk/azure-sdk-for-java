// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.oracle.fluent.models.DbServerInner;
import com.azure.resourcemanager.oracle.models.DbServer;
import com.azure.resourcemanager.oracle.models.DbServerPatchingDetails;
import com.azure.resourcemanager.oracle.models.DbServerProvisioningState;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class DbServerImpl implements DbServer {
    private DbServerInner innerObject;

    private final com.azure.resourcemanager.oracle.OracleManager serviceManager;

    DbServerImpl(DbServerInner innerObject, com.azure.resourcemanager.oracle.OracleManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String ocid() {
        return this.innerModel().ocid();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String compartmentId() {
        return this.innerModel().compartmentId();
    }

    public String exadataInfrastructureId() {
        return this.innerModel().exadataInfrastructureId();
    }

    public String lifecycleDetails() {
        return this.innerModel().lifecycleDetails();
    }

    public Integer cpuCoreCount() {
        return this.innerModel().cpuCoreCount();
    }

    public DbServerPatchingDetails dbServerPatchingDetails() {
        return this.innerModel().dbServerPatchingDetails();
    }

    public Integer maxMemoryInGbs() {
        return this.innerModel().maxMemoryInGbs();
    }

    public Integer dbNodeStorageSizeInGbs() {
        return this.innerModel().dbNodeStorageSizeInGbs();
    }

    public List<String> vmClusterIds() {
        List<String> inner = this.innerModel().vmClusterIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> dbNodeIds() {
        List<String> inner = this.innerModel().dbNodeIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public DbServerProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Integer maxCpuCount() {
        return this.innerModel().maxCpuCount();
    }

    public List<String> autonomousVmClusterIds() {
        List<String> inner = this.innerModel().autonomousVmClusterIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> autonomousVirtualMachineIds() {
        List<String> inner = this.innerModel().autonomousVirtualMachineIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Integer maxDbNodeStorageInGbs() {
        return this.innerModel().maxDbNodeStorageInGbs();
    }

    public Integer memorySizeInGbs() {
        return this.innerModel().memorySizeInGbs();
    }

    public String shape() {
        return this.innerModel().shape();
    }

    public OffsetDateTime timeCreated() {
        return this.innerModel().timeCreated();
    }

    public DbServerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.oracle.OracleManager manager() {
        return this.serviceManager;
    }
}

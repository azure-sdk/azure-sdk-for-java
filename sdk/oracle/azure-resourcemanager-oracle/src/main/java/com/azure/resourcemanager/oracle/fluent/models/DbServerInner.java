// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.oracle.models.DbServerPatchingDetails;
import com.azure.resourcemanager.oracle.models.DbServerProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * DbServer resource model.
 */
@Immutable
public final class DbServerInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private DbServerProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of DbServerInner class.
     */
    public DbServerInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private DbServerProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the ocid property: Db server name.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.innerProperties() == null ? null : this.innerProperties().ocid();
    }

    /**
     * Get the displayName property: The name for the Db Server.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Get the compartmentId property: The OCID of the compartment.
     * 
     * @return the compartmentId value.
     */
    public String compartmentId() {
        return this.innerProperties() == null ? null : this.innerProperties().compartmentId();
    }

    /**
     * Get the exadataInfrastructureId property: The OCID of the Exadata infrastructure.
     * 
     * @return the exadataInfrastructureId value.
     */
    public String exadataInfrastructureId() {
        return this.innerProperties() == null ? null : this.innerProperties().exadataInfrastructureId();
    }

    /**
     * Get the lifecycleDetails property: Lifecycle details of dbServer.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleDetails();
    }

    /**
     * Get the cpuCoreCount property: The number of CPU cores enabled on the Db server.
     * 
     * @return the cpuCoreCount value.
     */
    public Integer cpuCoreCount() {
        return this.innerProperties() == null ? null : this.innerProperties().cpuCoreCount();
    }

    /**
     * Get the dbServerPatchingDetails property: dbServerPatching details of the Db server.
     * 
     * @return the dbServerPatchingDetails value.
     */
    public DbServerPatchingDetails dbServerPatchingDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().dbServerPatchingDetails();
    }

    /**
     * Get the maxMemoryInGbs property: The total memory available in GBs.
     * 
     * @return the maxMemoryInGbs value.
     */
    public Integer maxMemoryInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().maxMemoryInGbs();
    }

    /**
     * Get the dbNodeStorageSizeInGbs property: The allocated local node storage in GBs on the Db server.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dbNodeStorageSizeInGbs();
    }

    /**
     * Get the vmClusterIds property: The OCID of the VM Clusters associated with the Db server.
     * 
     * @return the vmClusterIds value.
     */
    public List<String> vmClusterIds() {
        return this.innerProperties() == null ? null : this.innerProperties().vmClusterIds();
    }

    /**
     * Get the dbNodeIds property: The OCID of the Db nodes associated with the Db server.
     * 
     * @return the dbNodeIds value.
     */
    public List<String> dbNodeIds() {
        return this.innerProperties() == null ? null : this.innerProperties().dbNodeIds();
    }

    /**
     * Get the provisioningState property: DbServer provisioning state.
     * 
     * @return the provisioningState value.
     */
    public DbServerProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the maxCpuCount property: The total number of CPU cores available.
     * 
     * @return the maxCpuCount value.
     */
    public Integer maxCpuCount() {
        return this.innerProperties() == null ? null : this.innerProperties().maxCpuCount();
    }

    /**
     * Get the autonomousVmClusterIds property: The list of OCIDs of the Autonomous VM Clusters associated with the Db
     * server.
     * 
     * @return the autonomousVmClusterIds value.
     */
    public List<String> autonomousVmClusterIds() {
        return this.innerProperties() == null ? null : this.innerProperties().autonomousVmClusterIds();
    }

    /**
     * Get the autonomousVirtualMachineIds property: The list of OCIDs of the Autonomous Virtual Machines associated
     * with the Db server.
     * 
     * @return the autonomousVirtualMachineIds value.
     */
    public List<String> autonomousVirtualMachineIds() {
        return this.innerProperties() == null ? null : this.innerProperties().autonomousVirtualMachineIds();
    }

    /**
     * Get the maxDbNodeStorageInGbs property: The total max dbNode storage in GBs.
     * 
     * @return the maxDbNodeStorageInGbs value.
     */
    public Integer maxDbNodeStorageInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().maxDbNodeStorageInGbs();
    }

    /**
     * Get the memorySizeInGbs property: The total memory size in GBs.
     * 
     * @return the memorySizeInGbs value.
     */
    public Integer memorySizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().memorySizeInGbs();
    }

    /**
     * Get the shape property: The shape of the Db server. The shape determines the amount of CPU, storage, and memory
     * resources available.
     * 
     * @return the shape value.
     */
    public String shape() {
        return this.innerProperties() == null ? null : this.innerProperties().shape();
    }

    /**
     * Get the timeCreated property: The date and time that the Db Server was created.
     * 
     * @return the timeCreated value.
     */
    public OffsetDateTime timeCreated() {
        return this.innerProperties() == null ? null : this.innerProperties().timeCreated();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

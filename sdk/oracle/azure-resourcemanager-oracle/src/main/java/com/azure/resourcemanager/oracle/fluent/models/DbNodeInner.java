// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.oracle.models.DbNodeMaintenanceType;
import com.azure.resourcemanager.oracle.models.DbNodeProvisioningState;
import com.azure.resourcemanager.oracle.models.ResourceProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * The DbNode resource belonging to vmCluster.
 */
@Immutable
public final class DbNodeInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private DbNodeProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of DbNodeInner class.
     */
    public DbNodeInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private DbNodeProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the ocid property: DbNode OCID.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.innerProperties() == null ? null : this.innerProperties().ocid();
    }

    /**
     * Get the additionalDetails property: Additional information about the planned maintenance.
     * 
     * @return the additionalDetails value.
     */
    public String additionalDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().additionalDetails();
    }

    /**
     * Get the backupIpId property: The OCID of the backup IP address associated with the database node.
     * 
     * @return the backupIpId value.
     */
    public String backupIpId() {
        return this.innerProperties() == null ? null : this.innerProperties().backupIpId();
    }

    /**
     * Get the backupVnic2Id property: The OCID of the second backup VNIC.
     * 
     * @return the backupVnic2Id value.
     */
    public String backupVnic2Id() {
        return this.innerProperties() == null ? null : this.innerProperties().backupVnic2Id();
    }

    /**
     * Get the backupVnicId property: The OCID of the backup VNIC.
     * 
     * @return the backupVnicId value.
     */
    public String backupVnicId() {
        return this.innerProperties() == null ? null : this.innerProperties().backupVnicId();
    }

    /**
     * Get the cpuCoreCount property: The number of CPU cores enabled on the Db node.
     * 
     * @return the cpuCoreCount value.
     */
    public Integer cpuCoreCount() {
        return this.innerProperties() == null ? null : this.innerProperties().cpuCoreCount();
    }

    /**
     * Get the dbNodeStorageSizeInGbs property: The allocated local node storage in GBs on the Db node.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dbNodeStorageSizeInGbs();
    }

    /**
     * Get the dbServerId property: The OCID of the Exacc Db server associated with the database node.
     * 
     * @return the dbServerId value.
     */
    public String dbServerId() {
        return this.innerProperties() == null ? null : this.innerProperties().dbServerId();
    }

    /**
     * Get the dbSystemId property: The OCID of the DB system.
     * 
     * @return the dbSystemId value.
     */
    public String dbSystemId() {
        return this.innerProperties() == null ? null : this.innerProperties().dbSystemId();
    }

    /**
     * Get the faultDomain property: The name of the Fault Domain the instance is contained in.
     * 
     * @return the faultDomain value.
     */
    public String faultDomain() {
        return this.innerProperties() == null ? null : this.innerProperties().faultDomain();
    }

    /**
     * Get the hostIpId property: The OCID of the host IP address associated with the database node.
     * 
     * @return the hostIpId value.
     */
    public String hostIpId() {
        return this.innerProperties() == null ? null : this.innerProperties().hostIpId();
    }

    /**
     * Get the hostname property: The host name for the database node.
     * 
     * @return the hostname value.
     */
    public String hostname() {
        return this.innerProperties() == null ? null : this.innerProperties().hostname();
    }

    /**
     * Get the lifecycleState property: The current state of the database node.
     * 
     * @return the lifecycleState value.
     */
    public DbNodeProvisioningState lifecycleState() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleState();
    }

    /**
     * Get the lifecycleDetails property: Lifecycle details of Db Node.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleDetails();
    }

    /**
     * Get the maintenanceType property: The type of database node maintenance.
     * 
     * @return the maintenanceType value.
     */
    public DbNodeMaintenanceType maintenanceType() {
        return this.innerProperties() == null ? null : this.innerProperties().maintenanceType();
    }

    /**
     * Get the memorySizeInGbs property: The allocated memory in GBs on the Db node.
     * 
     * @return the memorySizeInGbs value.
     */
    public Integer memorySizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().memorySizeInGbs();
    }

    /**
     * Get the softwareStorageSizeInGb property: The size (in GB) of the block storage volume allocation for the DB
     * system. This attribute applies only for virtual machine DB systems.
     * 
     * @return the softwareStorageSizeInGb value.
     */
    public Integer softwareStorageSizeInGb() {
        return this.innerProperties() == null ? null : this.innerProperties().softwareStorageSizeInGb();
    }

    /**
     * Get the timeCreated property: The date and time that the database node was created.
     * 
     * @return the timeCreated value.
     */
    public OffsetDateTime timeCreated() {
        return this.innerProperties() == null ? null : this.innerProperties().timeCreated();
    }

    /**
     * Get the timeMaintenanceWindowEnd property: End date and time of maintenance window.
     * 
     * @return the timeMaintenanceWindowEnd value.
     */
    public OffsetDateTime timeMaintenanceWindowEnd() {
        return this.innerProperties() == null ? null : this.innerProperties().timeMaintenanceWindowEnd();
    }

    /**
     * Get the timeMaintenanceWindowStart property: Start date and time of maintenance window.
     * 
     * @return the timeMaintenanceWindowStart value.
     */
    public OffsetDateTime timeMaintenanceWindowStart() {
        return this.innerProperties() == null ? null : this.innerProperties().timeMaintenanceWindowStart();
    }

    /**
     * Get the vnic2Id property: The OCID of the second VNIC.
     * 
     * @return the vnic2Id value.
     */
    public String vnic2Id() {
        return this.innerProperties() == null ? null : this.innerProperties().vnic2Id();
    }

    /**
     * Get the vnicId property: The OCID of the VNIC.
     * 
     * @return the vnicId value.
     */
    public String vnicId() {
        return this.innerProperties() == null ? null : this.innerProperties().vnicId();
    }

    /**
     * Get the provisioningState property: Azure resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

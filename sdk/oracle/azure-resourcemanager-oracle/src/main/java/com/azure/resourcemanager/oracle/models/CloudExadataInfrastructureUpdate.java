// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.oracle.fluent.models.CloudExadataInfrastructureUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The type used for update operations of the CloudExadataInfrastructure.
 */
@Fluent
public final class CloudExadataInfrastructureUpdate {
    /*
     * CloudExadataInfrastructure zones
     */
    @JsonProperty(value = "zones")
    private List<String> zones;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the CloudExadataInfrastructure.
     */
    @JsonProperty(value = "properties")
    private CloudExadataInfrastructureUpdateProperties innerProperties;

    /**
     * Creates an instance of CloudExadataInfrastructureUpdate class.
     */
    public CloudExadataInfrastructureUpdate() {
    }

    /**
     * Get the zones property: CloudExadataInfrastructure zones.
     * 
     * @return the zones value.
     */
    public List<String> zones() {
        return this.zones;
    }

    /**
     * Set the zones property: CloudExadataInfrastructure zones.
     * 
     * @param zones the zones value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withZones(List<String> zones) {
        this.zones = zones;
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the CloudExadataInfrastructure.
     * 
     * @return the innerProperties value.
     */
    private CloudExadataInfrastructureUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the computeCount property: The number of compute servers for the cloud Exadata infrastructure.
     * 
     * @return the computeCount value.
     */
    public Integer computeCount() {
        return this.innerProperties() == null ? null : this.innerProperties().computeCount();
    }

    /**
     * Set the computeCount property: The number of compute servers for the cloud Exadata infrastructure.
     * 
     * @param computeCount the computeCount value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withComputeCount(Integer computeCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureUpdateProperties();
        }
        this.innerProperties().withComputeCount(computeCount);
        return this;
    }

    /**
     * Get the storageCount property: The number of storage servers for the cloud Exadata infrastructure.
     * 
     * @return the storageCount value.
     */
    public Integer storageCount() {
        return this.innerProperties() == null ? null : this.innerProperties().storageCount();
    }

    /**
     * Set the storageCount property: The number of storage servers for the cloud Exadata infrastructure.
     * 
     * @param storageCount the storageCount value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withStorageCount(Integer storageCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureUpdateProperties();
        }
        this.innerProperties().withStorageCount(storageCount);
        return this;
    }

    /**
     * Get the maintenanceWindow property: maintenanceWindow property.
     * 
     * @return the maintenanceWindow value.
     */
    public MaintenanceWindow maintenanceWindow() {
        return this.innerProperties() == null ? null : this.innerProperties().maintenanceWindow();
    }

    /**
     * Set the maintenanceWindow property: maintenanceWindow property.
     * 
     * @param maintenanceWindow the maintenanceWindow value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withMaintenanceWindow(MaintenanceWindow maintenanceWindow) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureUpdateProperties();
        }
        this.innerProperties().withMaintenanceWindow(maintenanceWindow);
        return this;
    }

    /**
     * Get the customerContacts property: The list of customer email addresses that receive information from Oracle
     * about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about
     * planned and unplanned software maintenance updates, information about system hardware, and other information
     * needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata
     * infrastructure instance.
     * 
     * @return the customerContacts value.
     */
    public List<CustomerContact> customerContacts() {
        return this.innerProperties() == null ? null : this.innerProperties().customerContacts();
    }

    /**
     * Set the customerContacts property: The list of customer email addresses that receive information from Oracle
     * about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about
     * planned and unplanned software maintenance updates, information about system hardware, and other information
     * needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata
     * infrastructure instance.
     * 
     * @param customerContacts the customerContacts value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withCustomerContacts(List<CustomerContact> customerContacts) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureUpdateProperties();
        }
        this.innerProperties().withCustomerContacts(customerContacts);
        return this;
    }

    /**
     * Get the displayName property: The name for the Exadata infrastructure.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The name for the Exadata infrastructure.
     * 
     * @param displayName the displayName value to set.
     * @return the CloudExadataInfrastructureUpdate object itself.
     */
    public CloudExadataInfrastructureUpdate withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureUpdateProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

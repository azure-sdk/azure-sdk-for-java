// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracle.fluent.models.AutonomousDatabaseBackupInner;
import com.azure.resourcemanager.oracle.models.AutonomousDatabaseBackup;
import com.azure.resourcemanager.oracle.models.AutonomousDatabaseBackupLifecycleState;
import com.azure.resourcemanager.oracle.models.AutonomousDatabaseBackupType;
import com.azure.resourcemanager.oracle.models.AutonomousDatabaseBackupUpdate;
import com.azure.resourcemanager.oracle.models.AzureResourceProvisioningState;
import java.time.OffsetDateTime;

public final class AutonomousDatabaseBackupImpl
    implements AutonomousDatabaseBackup, AutonomousDatabaseBackup.Definition, AutonomousDatabaseBackup.Update {
    private AutonomousDatabaseBackupInner innerObject;

    private final com.azure.resourcemanager.oracle.OracleManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String autonomousDatabaseId() {
        return this.innerModel().autonomousDatabaseId();
    }

    public Integer databaseSizeInTBs() {
        return this.innerModel().databaseSizeInTBs();
    }

    public String dbVersion() {
        return this.innerModel().dbVersion();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String ocid() {
        return this.innerModel().ocid();
    }

    public Boolean isAutomatic() {
        return this.innerModel().isAutomatic();
    }

    public Boolean isRestorable() {
        return this.innerModel().isRestorable();
    }

    public String lifecycleDetails() {
        return this.innerModel().lifecycleDetails();
    }

    public AutonomousDatabaseBackupLifecycleState lifecycleState() {
        return this.innerModel().lifecycleState();
    }

    public Integer retentionPeriodInDays() {
        return this.innerModel().retentionPeriodInDays();
    }

    public Integer sizeInTBs() {
        return this.innerModel().sizeInTBs();
    }

    public OffsetDateTime timeAvailableTil() {
        return this.innerModel().timeAvailableTil();
    }

    public String timeEnded() {
        return this.innerModel().timeEnded();
    }

    public AutonomousDatabaseBackupType typePropertiesType() {
        return this.innerModel().typePropertiesType();
    }

    public AzureResourceProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AutonomousDatabaseBackupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.oracle.OracleManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String autonomousdatabasename;

    private String adbbackupid;

    private AutonomousDatabaseBackupUpdate updateProperties;

    public AutonomousDatabaseBackupImpl withExistingAutonomousDatabase(String resourceGroupName,
        String autonomousdatabasename) {
        this.resourceGroupName = resourceGroupName;
        this.autonomousdatabasename = autonomousdatabasename;
        return this;
    }

    public AutonomousDatabaseBackup create() {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabaseBackups()
            .createOrUpdate(resourceGroupName, autonomousdatabasename, adbbackupid, this.innerModel(), Context.NONE);
        return this;
    }

    public AutonomousDatabaseBackup create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabaseBackups()
            .createOrUpdate(resourceGroupName, autonomousdatabasename, adbbackupid, this.innerModel(), context);
        return this;
    }

    AutonomousDatabaseBackupImpl(String name, com.azure.resourcemanager.oracle.OracleManager serviceManager) {
        this.innerObject = new AutonomousDatabaseBackupInner();
        this.serviceManager = serviceManager;
        this.adbbackupid = name;
    }

    public AutonomousDatabaseBackupImpl update() {
        this.updateProperties = new AutonomousDatabaseBackupUpdate();
        return this;
    }

    public AutonomousDatabaseBackup apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabaseBackups()
            .update(resourceGroupName, autonomousdatabasename, adbbackupid, updateProperties, Context.NONE);
        return this;
    }

    public AutonomousDatabaseBackup apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabaseBackups()
            .update(resourceGroupName, autonomousdatabasename, adbbackupid, updateProperties, context);
        return this;
    }

    AutonomousDatabaseBackupImpl(AutonomousDatabaseBackupInner innerObject,
        com.azure.resourcemanager.oracle.OracleManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.autonomousdatabasename
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "autonomousDatabases");
        this.adbbackupid = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "autonomousDatabaseBackups");
    }

    public AutonomousDatabaseBackup refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabaseBackups()
            .getWithResponse(resourceGroupName, autonomousdatabasename, adbbackupid, Context.NONE)
            .getValue();
        return this;
    }

    public AutonomousDatabaseBackup refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutonomousDatabaseBackups()
            .getWithResponse(resourceGroupName, autonomousdatabasename, adbbackupid, context)
            .getValue();
        return this;
    }

    public AutonomousDatabaseBackupImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public AutonomousDatabaseBackupImpl withRetentionPeriodInDays(Integer retentionPeriodInDays) {
        if (isInCreateMode()) {
            this.innerModel().withRetentionPeriodInDays(retentionPeriodInDays);
            return this;
        } else {
            this.updateProperties.withRetentionPeriodInDays(retentionPeriodInDays);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

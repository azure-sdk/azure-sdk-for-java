// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracle.fluent.models.CloudExadataInfrastructureInner;
import com.azure.resourcemanager.oracle.models.AzureResourceProvisioningState;
import com.azure.resourcemanager.oracle.models.CloudExadataInfrastructure;
import com.azure.resourcemanager.oracle.models.CloudExadataInfrastructureLifecycleState;
import com.azure.resourcemanager.oracle.models.CloudExadataInfrastructureUpdate;
import com.azure.resourcemanager.oracle.models.CustomerContact;
import com.azure.resourcemanager.oracle.models.EstimatedPatchingTime;
import com.azure.resourcemanager.oracle.models.MaintenanceWindow;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class CloudExadataInfrastructureImpl
    implements CloudExadataInfrastructure, CloudExadataInfrastructure.Definition, CloudExadataInfrastructure.Update {
    private CloudExadataInfrastructureInner innerObject;

    private final com.azure.resourcemanager.oracle.OracleManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public List<String> zones() {
        List<String> inner = this.innerModel().zones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String ocid() {
        return this.innerModel().ocid();
    }

    public Integer computeCount() {
        return this.innerModel().computeCount();
    }

    public Integer storageCount() {
        return this.innerModel().storageCount();
    }

    public Integer totalStorageSizeInGbs() {
        return this.innerModel().totalStorageSizeInGbs();
    }

    public Integer availableStorageSizeInGbs() {
        return this.innerModel().availableStorageSizeInGbs();
    }

    public String timeCreated() {
        return this.innerModel().timeCreated();
    }

    public String lifecycleDetails() {
        return this.innerModel().lifecycleDetails();
    }

    public MaintenanceWindow maintenanceWindow() {
        return this.innerModel().maintenanceWindow();
    }

    public EstimatedPatchingTime estimatedPatchingTime() {
        return this.innerModel().estimatedPatchingTime();
    }

    public List<CustomerContact> customerContacts() {
        List<CustomerContact> inner = this.innerModel().customerContacts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public AzureResourceProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public CloudExadataInfrastructureLifecycleState lifecycleState() {
        return this.innerModel().lifecycleState();
    }

    public String shape() {
        return this.innerModel().shape();
    }

    public String ociUrl() {
        return this.innerModel().ociUrl();
    }

    public Integer cpuCount() {
        return this.innerModel().cpuCount();
    }

    public Integer maxCpuCount() {
        return this.innerModel().maxCpuCount();
    }

    public Integer memorySizeInGbs() {
        return this.innerModel().memorySizeInGbs();
    }

    public Integer maxMemoryInGbs() {
        return this.innerModel().maxMemoryInGbs();
    }

    public Integer dbNodeStorageSizeInGbs() {
        return this.innerModel().dbNodeStorageSizeInGbs();
    }

    public Integer maxDbNodeStorageSizeInGbs() {
        return this.innerModel().maxDbNodeStorageSizeInGbs();
    }

    public Integer dataStorageSizeInTbs() {
        return this.innerModel().dataStorageSizeInTbs();
    }

    public Double maxDataStorageInTbs() {
        return this.innerModel().maxDataStorageInTbs();
    }

    public String dbServerVersion() {
        return this.innerModel().dbServerVersion();
    }

    public String storageServerVersion() {
        return this.innerModel().storageServerVersion();
    }

    public Integer activatedStorageCount() {
        return this.innerModel().activatedStorageCount();
    }

    public Integer additionalStorageCount() {
        return this.innerModel().additionalStorageCount();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String lastMaintenanceRunId() {
        return this.innerModel().lastMaintenanceRunId();
    }

    public String nextMaintenanceRunId() {
        return this.innerModel().nextMaintenanceRunId();
    }

    public String monthlyDbServerVersion() {
        return this.innerModel().monthlyDbServerVersion();
    }

    public String monthlyStorageServerVersion() {
        return this.innerModel().monthlyStorageServerVersion();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CloudExadataInfrastructureInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.oracle.OracleManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String cloudexadatainfrastructurename;

    private CloudExadataInfrastructureUpdate updateProperties;

    public CloudExadataInfrastructureImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public CloudExadataInfrastructure create() {
        this.innerObject = serviceManager.serviceClient()
            .getCloudExadataInfrastructures()
            .createOrUpdate(resourceGroupName, cloudexadatainfrastructurename, this.innerModel(), Context.NONE);
        return this;
    }

    public CloudExadataInfrastructure create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCloudExadataInfrastructures()
            .createOrUpdate(resourceGroupName, cloudexadatainfrastructurename, this.innerModel(), context);
        return this;
    }

    CloudExadataInfrastructureImpl(String name, com.azure.resourcemanager.oracle.OracleManager serviceManager) {
        this.innerObject = new CloudExadataInfrastructureInner();
        this.serviceManager = serviceManager;
        this.cloudexadatainfrastructurename = name;
    }

    public CloudExadataInfrastructureImpl update() {
        this.updateProperties = new CloudExadataInfrastructureUpdate();
        return this;
    }

    public CloudExadataInfrastructure apply() {
        this.innerObject = serviceManager.serviceClient()
            .getCloudExadataInfrastructures()
            .update(resourceGroupName, cloudexadatainfrastructurename, updateProperties, Context.NONE);
        return this;
    }

    public CloudExadataInfrastructure apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCloudExadataInfrastructures()
            .update(resourceGroupName, cloudexadatainfrastructurename, updateProperties, context);
        return this;
    }

    CloudExadataInfrastructureImpl(CloudExadataInfrastructureInner innerObject,
        com.azure.resourcemanager.oracle.OracleManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.cloudexadatainfrastructurename
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "cloudExadataInfrastructures");
    }

    public CloudExadataInfrastructure refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getCloudExadataInfrastructures()
            .getByResourceGroupWithResponse(resourceGroupName, cloudexadatainfrastructurename, Context.NONE)
            .getValue();
        return this;
    }

    public CloudExadataInfrastructure refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCloudExadataInfrastructures()
            .getByResourceGroupWithResponse(resourceGroupName, cloudexadatainfrastructurename, context)
            .getValue();
        return this;
    }

    public CloudExadataInfrastructure addStorageCapacity() {
        return serviceManager.cloudExadataInfrastructures()
            .addStorageCapacity(resourceGroupName, cloudexadatainfrastructurename);
    }

    public CloudExadataInfrastructure addStorageCapacity(Context context) {
        return serviceManager.cloudExadataInfrastructures()
            .addStorageCapacity(resourceGroupName, cloudexadatainfrastructurename, context);
    }

    public CloudExadataInfrastructureImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CloudExadataInfrastructureImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CloudExadataInfrastructureImpl withZones(List<String> zones) {
        if (isInCreateMode()) {
            this.innerModel().withZones(zones);
            return this;
        } else {
            this.updateProperties.withZones(zones);
            return this;
        }
    }

    public CloudExadataInfrastructureImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public CloudExadataInfrastructureImpl withComputeCount(Integer computeCount) {
        if (isInCreateMode()) {
            this.innerModel().withComputeCount(computeCount);
            return this;
        } else {
            this.updateProperties.withComputeCount(computeCount);
            return this;
        }
    }

    public CloudExadataInfrastructureImpl withStorageCount(Integer storageCount) {
        if (isInCreateMode()) {
            this.innerModel().withStorageCount(storageCount);
            return this;
        } else {
            this.updateProperties.withStorageCount(storageCount);
            return this;
        }
    }

    public CloudExadataInfrastructureImpl withMaintenanceWindow(MaintenanceWindow maintenanceWindow) {
        if (isInCreateMode()) {
            this.innerModel().withMaintenanceWindow(maintenanceWindow);
            return this;
        } else {
            this.updateProperties.withMaintenanceWindow(maintenanceWindow);
            return this;
        }
    }

    public CloudExadataInfrastructureImpl withCustomerContacts(List<CustomerContact> customerContacts) {
        if (isInCreateMode()) {
            this.innerModel().withCustomerContacts(customerContacts);
            return this;
        } else {
            this.updateProperties.withCustomerContacts(customerContacts);
            return this;
        }
    }

    public CloudExadataInfrastructureImpl withShape(String shape) {
        this.innerModel().withShape(shape);
        return this;
    }

    public CloudExadataInfrastructureImpl withDisplayName(String displayName) {
        if (isInCreateMode()) {
            this.innerModel().withDisplayName(displayName);
            return this;
        } else {
            this.updateProperties.withDisplayName(displayName);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

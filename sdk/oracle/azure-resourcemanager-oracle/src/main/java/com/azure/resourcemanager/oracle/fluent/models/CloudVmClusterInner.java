// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.oracle.models.AzureResourceProvisioningState;
import com.azure.resourcemanager.oracle.models.CloudVmClusterLifecycleState;
import com.azure.resourcemanager.oracle.models.DataCollectionOptions;
import com.azure.resourcemanager.oracle.models.DiskRedundancy;
import com.azure.resourcemanager.oracle.models.ExadataIormConfig;
import com.azure.resourcemanager.oracle.models.LicenseModel;
import com.azure.resourcemanager.oracle.models.NsgCidr;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * CloudVmCluster resource definition.
 */
@Fluent
public final class CloudVmClusterInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private CloudVmClusterProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of CloudVmClusterInner class.
     */
    public CloudVmClusterInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private CloudVmClusterProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CloudVmClusterInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CloudVmClusterInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the ocid property: Cloud VM Cluster ocid.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.innerProperties() == null ? null : this.innerProperties().ocid();
    }

    /**
     * Get the listenerPort property: The port number configured for the listener on the cloud VM cluster.
     * 
     * @return the listenerPort value.
     */
    public Long listenerPort() {
        return this.innerProperties() == null ? null : this.innerProperties().listenerPort();
    }

    /**
     * Get the nodeCount property: The number of nodes in the cloud VM cluster.
     * 
     * @return the nodeCount value.
     */
    public Integer nodeCount() {
        return this.innerProperties() == null ? null : this.innerProperties().nodeCount();
    }

    /**
     * Get the storageSizeInGbs property: The data disk group size to be allocated in GBs per VM.
     * 
     * @return the storageSizeInGbs value.
     */
    public Integer storageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().storageSizeInGbs();
    }

    /**
     * Set the storageSizeInGbs property: The data disk group size to be allocated in GBs per VM.
     * 
     * @param storageSizeInGbs the storageSizeInGbs value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withStorageSizeInGbs(Integer storageSizeInGbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withStorageSizeInGbs(storageSizeInGbs);
        return this;
    }

    /**
     * Get the dataStorageSizeInTbs property: The data disk group size to be allocated in TBs.
     * 
     * @return the dataStorageSizeInTbs value.
     */
    public Double dataStorageSizeInTbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dataStorageSizeInTbs();
    }

    /**
     * Set the dataStorageSizeInTbs property: The data disk group size to be allocated in TBs.
     * 
     * @param dataStorageSizeInTbs the dataStorageSizeInTbs value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDataStorageSizeInTbs(Double dataStorageSizeInTbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDataStorageSizeInTbs(dataStorageSizeInTbs);
        return this;
    }

    /**
     * Get the dbNodeStorageSizeInGbs property: The local node storage to be allocated in GBs.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dbNodeStorageSizeInGbs();
    }

    /**
     * Set the dbNodeStorageSizeInGbs property: The local node storage to be allocated in GBs.
     * 
     * @param dbNodeStorageSizeInGbs the dbNodeStorageSizeInGbs value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDbNodeStorageSizeInGbs(dbNodeStorageSizeInGbs);
        return this;
    }

    /**
     * Get the memorySizeInGbs property: The memory to be allocated in GBs.
     * 
     * @return the memorySizeInGbs value.
     */
    public Integer memorySizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().memorySizeInGbs();
    }

    /**
     * Set the memorySizeInGbs property: The memory to be allocated in GBs.
     * 
     * @param memorySizeInGbs the memorySizeInGbs value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withMemorySizeInGbs(Integer memorySizeInGbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withMemorySizeInGbs(memorySizeInGbs);
        return this;
    }

    /**
     * Get the timeCreated property: The date and time that the cloud VM cluster was created.
     * 
     * @return the timeCreated value.
     */
    public OffsetDateTime timeCreated() {
        return this.innerProperties() == null ? null : this.innerProperties().timeCreated();
    }

    /**
     * Get the lifecycleDetails property: Additional information about the current lifecycle state.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleDetails();
    }

    /**
     * Get the timeZone property: The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time
     * Zones](/Content/Database/References/timezones.htm).
     * 
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.innerProperties() == null ? null : this.innerProperties().timeZone();
    }

    /**
     * Set the timeZone property: The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time
     * Zones](/Content/Database/References/timezones.htm).
     * 
     * @param timeZone the timeZone value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withTimeZone(String timeZone) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withTimeZone(timeZone);
        return this;
    }

    /**
     * Get the zoneId property: The OCID of the zone the cloud VM cluster is associated with.
     * 
     * @return the zoneId value.
     */
    public String zoneId() {
        return this.innerProperties() == null ? null : this.innerProperties().zoneId();
    }

    /**
     * Set the zoneId property: The OCID of the zone the cloud VM cluster is associated with.
     * 
     * @param zoneId the zoneId value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withZoneId(String zoneId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withZoneId(zoneId);
        return this;
    }

    /**
     * Get the hostname property: The hostname for the cloud VM cluster.
     * 
     * @return the hostname value.
     */
    public String hostname() {
        return this.innerProperties() == null ? null : this.innerProperties().hostname();
    }

    /**
     * Set the hostname property: The hostname for the cloud VM cluster.
     * 
     * @param hostname the hostname value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withHostname(String hostname) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withHostname(hostname);
        return this;
    }

    /**
     * Get the domain property: The domain name for the cloud VM cluster.
     * 
     * @return the domain value.
     */
    public String domain() {
        return this.innerProperties() == null ? null : this.innerProperties().domain();
    }

    /**
     * Set the domain property: The domain name for the cloud VM cluster.
     * 
     * @param domain the domain value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDomain(String domain) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDomain(domain);
        return this;
    }

    /**
     * Get the cpuCoreCount property: The number of CPU cores enabled on the cloud VM cluster.
     * 
     * @return the cpuCoreCount value.
     */
    public Integer cpuCoreCount() {
        return this.innerProperties() == null ? null : this.innerProperties().cpuCoreCount();
    }

    /**
     * Set the cpuCoreCount property: The number of CPU cores enabled on the cloud VM cluster.
     * 
     * @param cpuCoreCount the cpuCoreCount value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withCpuCoreCount(Integer cpuCoreCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withCpuCoreCount(cpuCoreCount);
        return this;
    }

    /**
     * Get the ocpuCount property: The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is
     * allowed for the fractional part.
     * 
     * @return the ocpuCount value.
     */
    public Float ocpuCount() {
        return this.innerProperties() == null ? null : this.innerProperties().ocpuCount();
    }

    /**
     * Set the ocpuCount property: The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is
     * allowed for the fractional part.
     * 
     * @param ocpuCount the ocpuCount value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withOcpuCount(Float ocpuCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withOcpuCount(ocpuCount);
        return this;
    }

    /**
     * Get the clusterName property: The cluster name for cloud VM cluster. The cluster name must begin with an
     * alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no
     * longer than 11 characters and is not case sensitive.
     * 
     * @return the clusterName value.
     */
    public String clusterName() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterName();
    }

    /**
     * Set the clusterName property: The cluster name for cloud VM cluster. The cluster name must begin with an
     * alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no
     * longer than 11 characters and is not case sensitive.
     * 
     * @param clusterName the clusterName value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withClusterName(String clusterName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withClusterName(clusterName);
        return this;
    }

    /**
     * Get the dataStoragePercentage property: The percentage assigned to DATA storage (user data and database files).
     * The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager
     * backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage
     * Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on
     * the impact of the configuration settings on storage.
     * 
     * @return the dataStoragePercentage value.
     */
    public Integer dataStoragePercentage() {
        return this.innerProperties() == null ? null : this.innerProperties().dataStoragePercentage();
    }

    /**
     * Set the dataStoragePercentage property: The percentage assigned to DATA storage (user data and database files).
     * The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager
     * backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage
     * Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on
     * the impact of the configuration settings on storage.
     * 
     * @param dataStoragePercentage the dataStoragePercentage value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDataStoragePercentage(Integer dataStoragePercentage) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDataStoragePercentage(dataStoragePercentage);
        return this;
    }

    /**
     * Get the isLocalBackupEnabled property: If true, database backup on local Exadata storage is configured for the
     * cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster.
     * 
     * @return the isLocalBackupEnabled value.
     */
    public Boolean isLocalBackupEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().isLocalBackupEnabled();
    }

    /**
     * Set the isLocalBackupEnabled property: If true, database backup on local Exadata storage is configured for the
     * cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster.
     * 
     * @param isLocalBackupEnabled the isLocalBackupEnabled value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withIsLocalBackupEnabled(Boolean isLocalBackupEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withIsLocalBackupEnabled(isLocalBackupEnabled);
        return this;
    }

    /**
     * Get the cloudExadataInfrastructureId property: Cloud Exadata Infrastructure ID.
     * 
     * @return the cloudExadataInfrastructureId value.
     */
    public String cloudExadataInfrastructureId() {
        return this.innerProperties() == null ? null : this.innerProperties().cloudExadataInfrastructureId();
    }

    /**
     * Set the cloudExadataInfrastructureId property: Cloud Exadata Infrastructure ID.
     * 
     * @param cloudExadataInfrastructureId the cloudExadataInfrastructureId value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withCloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withCloudExadataInfrastructureId(cloudExadataInfrastructureId);
        return this;
    }

    /**
     * Get the isSparseDiskgroupEnabled property: If true, sparse disk group is configured for the cloud VM cluster. If
     * false, sparse disk group is not created.
     * 
     * @return the isSparseDiskgroupEnabled value.
     */
    public Boolean isSparseDiskgroupEnabled() {
        return this.innerProperties() == null ? null : this.innerProperties().isSparseDiskgroupEnabled();
    }

    /**
     * Set the isSparseDiskgroupEnabled property: If true, sparse disk group is configured for the cloud VM cluster. If
     * false, sparse disk group is not created.
     * 
     * @param isSparseDiskgroupEnabled the isSparseDiskgroupEnabled value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withIsSparseDiskgroupEnabled(Boolean isSparseDiskgroupEnabled) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withIsSparseDiskgroupEnabled(isSparseDiskgroupEnabled);
        return this;
    }

    /**
     * Get the systemVersion property: Operating system version of the image.
     * 
     * @return the systemVersion value.
     */
    public String systemVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().systemVersion();
    }

    /**
     * Get the sshPublicKeys property: The public key portion of one or more key pairs used for SSH access to the cloud
     * VM cluster.
     * 
     * @return the sshPublicKeys value.
     */
    public List<String> sshPublicKeys() {
        return this.innerProperties() == null ? null : this.innerProperties().sshPublicKeys();
    }

    /**
     * Set the sshPublicKeys property: The public key portion of one or more key pairs used for SSH access to the cloud
     * VM cluster.
     * 
     * @param sshPublicKeys the sshPublicKeys value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withSshPublicKeys(List<String> sshPublicKeys) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withSshPublicKeys(sshPublicKeys);
        return this;
    }

    /**
     * Get the licenseModel property: The Oracle license model that applies to the cloud VM cluster. The default is
     * LICENSE_INCLUDED.
     * 
     * @return the licenseModel value.
     */
    public LicenseModel licenseModel() {
        return this.innerProperties() == null ? null : this.innerProperties().licenseModel();
    }

    /**
     * Set the licenseModel property: The Oracle license model that applies to the cloud VM cluster. The default is
     * LICENSE_INCLUDED.
     * 
     * @param licenseModel the licenseModel value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withLicenseModel(LicenseModel licenseModel) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withLicenseModel(licenseModel);
        return this;
    }

    /**
     * Get the diskRedundancy property: The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way
     * redundancy. HIGH is 3-way redundancy.
     * 
     * @return the diskRedundancy value.
     */
    public DiskRedundancy diskRedundancy() {
        return this.innerProperties() == null ? null : this.innerProperties().diskRedundancy();
    }

    /**
     * Get the scanIpIds property: The Single Client Access Name (SCAN) IP addresses associated with the cloud VM
     * cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle
     * Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system,
     * this list is empty.
     * 
     * @return the scanIpIds value.
     */
    public List<String> scanIpIds() {
        return this.innerProperties() == null ? null : this.innerProperties().scanIpIds();
    }

    /**
     * Get the vipIds property: The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready
     * Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to
     * enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a
     * single-node DB system, this list is empty.
     * 
     * @return the vipIds value.
     */
    public List<String> vipIds() {
        return this.innerProperties() == null ? null : this.innerProperties().vipIds();
    }

    /**
     * Get the scanDnsName property: The FQDN of the DNS record for the SCAN IP addresses that are associated with the
     * cloud VM cluster.
     * 
     * @return the scanDnsName value.
     */
    public String scanDnsName() {
        return this.innerProperties() == null ? null : this.innerProperties().scanDnsName();
    }

    /**
     * Get the scanListenerPortTcp property: The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     * 
     * @return the scanListenerPortTcp value.
     */
    public Integer scanListenerPortTcp() {
        return this.innerProperties() == null ? null : this.innerProperties().scanListenerPortTcp();
    }

    /**
     * Set the scanListenerPortTcp property: The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     * 
     * @param scanListenerPortTcp the scanListenerPortTcp value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withScanListenerPortTcp(Integer scanListenerPortTcp) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withScanListenerPortTcp(scanListenerPortTcp);
        return this;
    }

    /**
     * Get the scanListenerPortTcpSsl property: The TCPS Single Client Access Name (SCAN) port. The default port is
     * 2484.
     * 
     * @return the scanListenerPortTcpSsl value.
     */
    public Integer scanListenerPortTcpSsl() {
        return this.innerProperties() == null ? null : this.innerProperties().scanListenerPortTcpSsl();
    }

    /**
     * Set the scanListenerPortTcpSsl property: The TCPS Single Client Access Name (SCAN) port. The default port is
     * 2484.
     * 
     * @param scanListenerPortTcpSsl the scanListenerPortTcpSsl value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withScanListenerPortTcpSsl(Integer scanListenerPortTcpSsl) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withScanListenerPortTcpSsl(scanListenerPortTcpSsl);
        return this;
    }

    /**
     * Get the scanDnsRecordId property: The OCID of the DNS record for the SCAN IP addresses that are associated with
     * the cloud VM cluster.
     * 
     * @return the scanDnsRecordId value.
     */
    public String scanDnsRecordId() {
        return this.innerProperties() == null ? null : this.innerProperties().scanDnsRecordId();
    }

    /**
     * Get the shape property: The model name of the Exadata hardware running the cloud VM cluster.
     * 
     * @return the shape value.
     */
    public String shape() {
        return this.innerProperties() == null ? null : this.innerProperties().shape();
    }

    /**
     * Get the provisioningState property: CloudVmCluster provisioning state.
     * 
     * @return the provisioningState value.
     */
    public AzureResourceProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the lifecycleState property: CloudVmCluster lifecycle state.
     * 
     * @return the lifecycleState value.
     */
    public CloudVmClusterLifecycleState lifecycleState() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleState();
    }

    /**
     * Get the vnetId property: VNET for network connectivity.
     * 
     * @return the vnetId value.
     */
    public String vnetId() {
        return this.innerProperties() == null ? null : this.innerProperties().vnetId();
    }

    /**
     * Set the vnetId property: VNET for network connectivity.
     * 
     * @param vnetId the vnetId value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withVnetId(String vnetId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withVnetId(vnetId);
        return this;
    }

    /**
     * Get the giVersion property: Oracle Grid Infrastructure (GI) software version.
     * 
     * @return the giVersion value.
     */
    public String giVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().giVersion();
    }

    /**
     * Set the giVersion property: Oracle Grid Infrastructure (GI) software version.
     * 
     * @param giVersion the giVersion value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withGiVersion(String giVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withGiVersion(giVersion);
        return this;
    }

    /**
     * Get the ociUrl property: HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
     * 
     * @return the ociUrl value.
     */
    public String ociUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().ociUrl();
    }

    /**
     * Get the nsgUrl property: HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure
     * Interface.
     * 
     * @return the nsgUrl value.
     */
    public String nsgUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().nsgUrl();
    }

    /**
     * Get the subnetId property: Client subnet.
     * 
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.innerProperties() == null ? null : this.innerProperties().subnetId();
    }

    /**
     * Set the subnetId property: Client subnet.
     * 
     * @param subnetId the subnetId value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withSubnetId(String subnetId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withSubnetId(subnetId);
        return this;
    }

    /**
     * Get the backupSubnetCidr property: Client OCI backup subnet CIDR, default is 192.168.252.0/22.
     * 
     * @return the backupSubnetCidr value.
     */
    public String backupSubnetCidr() {
        return this.innerProperties() == null ? null : this.innerProperties().backupSubnetCidr();
    }

    /**
     * Set the backupSubnetCidr property: Client OCI backup subnet CIDR, default is 192.168.252.0/22.
     * 
     * @param backupSubnetCidr the backupSubnetCidr value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withBackupSubnetCidr(String backupSubnetCidr) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withBackupSubnetCidr(backupSubnetCidr);
        return this;
    }

    /**
     * Get the nsgCidrs property: CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM
     * Cluster will be added by default.
     * 
     * @return the nsgCidrs value.
     */
    public List<NsgCidr> nsgCidrs() {
        return this.innerProperties() == null ? null : this.innerProperties().nsgCidrs();
    }

    /**
     * Set the nsgCidrs property: CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM
     * Cluster will be added by default.
     * 
     * @param nsgCidrs the nsgCidrs value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withNsgCidrs(List<NsgCidr> nsgCidrs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withNsgCidrs(nsgCidrs);
        return this;
    }

    /**
     * Get the dataCollectionOptions property: Indicates user preferences for the various diagnostic collection options
     * for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     * @return the dataCollectionOptions value.
     */
    public DataCollectionOptions dataCollectionOptions() {
        return this.innerProperties() == null ? null : this.innerProperties().dataCollectionOptions();
    }

    /**
     * Set the dataCollectionOptions property: Indicates user preferences for the various diagnostic collection options
     * for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     * @param dataCollectionOptions the dataCollectionOptions value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDataCollectionOptions(DataCollectionOptions dataCollectionOptions) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDataCollectionOptions(dataCollectionOptions);
        return this;
    }

    /**
     * Get the displayName property: Display Name.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: Display Name.
     * 
     * @param displayName the displayName value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Get the computeNodes property: The list of compute servers to be added to the cloud VM cluster.
     * 
     * @return the computeNodes value.
     */
    public List<String> computeNodes() {
        return this.innerProperties() == null ? null : this.innerProperties().computeNodes();
    }

    /**
     * Set the computeNodes property: The list of compute servers to be added to the cloud VM cluster.
     * 
     * @param computeNodes the computeNodes value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withComputeNodes(List<String> computeNodes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withComputeNodes(computeNodes);
        return this;
    }

    /**
     * Get the iormConfigCache property: iormConfigCache details for cloud VM cluster.
     * 
     * @return the iormConfigCache value.
     */
    public ExadataIormConfig iormConfigCache() {
        return this.innerProperties() == null ? null : this.innerProperties().iormConfigCache();
    }

    /**
     * Get the lastUpdateHistoryEntryId property: The OCID of the last maintenance update history entry.
     * 
     * @return the lastUpdateHistoryEntryId value.
     */
    public String lastUpdateHistoryEntryId() {
        return this.innerProperties() == null ? null : this.innerProperties().lastUpdateHistoryEntryId();
    }

    /**
     * Get the dbServers property: The list of DB servers.
     * 
     * @return the dbServers value.
     */
    public List<String> dbServers() {
        return this.innerProperties() == null ? null : this.innerProperties().dbServers();
    }

    /**
     * Set the dbServers property: The list of DB servers.
     * 
     * @param dbServers the dbServers value to set.
     * @return the CloudVmClusterInner object itself.
     */
    public CloudVmClusterInner withDbServers(List<String> dbServers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterProperties();
        }
        this.innerProperties().withDbServers(dbServers);
        return this;
    }

    /**
     * Get the compartmentId property: Cluster compartmentId.
     * 
     * @return the compartmentId value.
     */
    public String compartmentId() {
        return this.innerProperties() == null ? null : this.innerProperties().compartmentId();
    }

    /**
     * Get the subnetOcid property: Cluster subnet ocid.
     * 
     * @return the subnetOcid value.
     */
    public String subnetOcid() {
        return this.innerProperties() == null ? null : this.innerProperties().subnetOcid();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

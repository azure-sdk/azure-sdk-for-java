// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.oracle.fluent.models.CloudVmClusterUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The type used for update operations of the CloudVmCluster.
 */
@Fluent
public final class CloudVmClusterUpdate {
    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the CloudVmCluster.
     */
    @JsonProperty(value = "properties")
    private CloudVmClusterUpdateProperties innerProperties;

    /**
     * Creates an instance of CloudVmClusterUpdate class.
     */
    public CloudVmClusterUpdate() {
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the CloudVmCluster.
     * 
     * @return the innerProperties value.
     */
    private CloudVmClusterUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the storageSizeInGbs property: The data disk group size to be allocated in GBs per VM.
     * 
     * @return the storageSizeInGbs value.
     */
    public Integer storageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().storageSizeInGbs();
    }

    /**
     * Set the storageSizeInGbs property: The data disk group size to be allocated in GBs per VM.
     * 
     * @param storageSizeInGbs the storageSizeInGbs value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withStorageSizeInGbs(Integer storageSizeInGbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withStorageSizeInGbs(storageSizeInGbs);
        return this;
    }

    /**
     * Get the dataStorageSizeInTbs property: The data disk group size to be allocated in TBs.
     * 
     * @return the dataStorageSizeInTbs value.
     */
    public Double dataStorageSizeInTbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dataStorageSizeInTbs();
    }

    /**
     * Set the dataStorageSizeInTbs property: The data disk group size to be allocated in TBs.
     * 
     * @param dataStorageSizeInTbs the dataStorageSizeInTbs value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withDataStorageSizeInTbs(Double dataStorageSizeInTbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withDataStorageSizeInTbs(dataStorageSizeInTbs);
        return this;
    }

    /**
     * Get the dbNodeStorageSizeInGbs property: The local node storage to be allocated in GBs.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dbNodeStorageSizeInGbs();
    }

    /**
     * Set the dbNodeStorageSizeInGbs property: The local node storage to be allocated in GBs.
     * 
     * @param dbNodeStorageSizeInGbs the dbNodeStorageSizeInGbs value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withDbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withDbNodeStorageSizeInGbs(dbNodeStorageSizeInGbs);
        return this;
    }

    /**
     * Get the memorySizeInGbs property: The memory to be allocated in GBs.
     * 
     * @return the memorySizeInGbs value.
     */
    public Integer memorySizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().memorySizeInGbs();
    }

    /**
     * Set the memorySizeInGbs property: The memory to be allocated in GBs.
     * 
     * @param memorySizeInGbs the memorySizeInGbs value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withMemorySizeInGbs(Integer memorySizeInGbs) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withMemorySizeInGbs(memorySizeInGbs);
        return this;
    }

    /**
     * Get the cpuCoreCount property: The number of CPU cores enabled on the cloud VM cluster.
     * 
     * @return the cpuCoreCount value.
     */
    public Integer cpuCoreCount() {
        return this.innerProperties() == null ? null : this.innerProperties().cpuCoreCount();
    }

    /**
     * Set the cpuCoreCount property: The number of CPU cores enabled on the cloud VM cluster.
     * 
     * @param cpuCoreCount the cpuCoreCount value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withCpuCoreCount(Integer cpuCoreCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withCpuCoreCount(cpuCoreCount);
        return this;
    }

    /**
     * Get the ocpuCount property: The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is
     * allowed for the fractional part.
     * 
     * @return the ocpuCount value.
     */
    public Float ocpuCount() {
        return this.innerProperties() == null ? null : this.innerProperties().ocpuCount();
    }

    /**
     * Set the ocpuCount property: The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is
     * allowed for the fractional part.
     * 
     * @param ocpuCount the ocpuCount value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withOcpuCount(Float ocpuCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withOcpuCount(ocpuCount);
        return this;
    }

    /**
     * Get the sshPublicKeys property: The public key portion of one or more key pairs used for SSH access to the cloud
     * VM cluster.
     * 
     * @return the sshPublicKeys value.
     */
    public List<String> sshPublicKeys() {
        return this.innerProperties() == null ? null : this.innerProperties().sshPublicKeys();
    }

    /**
     * Set the sshPublicKeys property: The public key portion of one or more key pairs used for SSH access to the cloud
     * VM cluster.
     * 
     * @param sshPublicKeys the sshPublicKeys value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withSshPublicKeys(List<String> sshPublicKeys) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withSshPublicKeys(sshPublicKeys);
        return this;
    }

    /**
     * Get the licenseModel property: The Oracle license model that applies to the cloud VM cluster. The default is
     * LICENSE_INCLUDED.
     * 
     * @return the licenseModel value.
     */
    public LicenseModel licenseModel() {
        return this.innerProperties() == null ? null : this.innerProperties().licenseModel();
    }

    /**
     * Set the licenseModel property: The Oracle license model that applies to the cloud VM cluster. The default is
     * LICENSE_INCLUDED.
     * 
     * @param licenseModel the licenseModel value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withLicenseModel(LicenseModel licenseModel) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withLicenseModel(licenseModel);
        return this;
    }

    /**
     * Get the dataCollectionOptions property: Indicates user preferences for the various diagnostic collection options
     * for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     * @return the dataCollectionOptions value.
     */
    public DataCollectionOptions dataCollectionOptions() {
        return this.innerProperties() == null ? null : this.innerProperties().dataCollectionOptions();
    }

    /**
     * Set the dataCollectionOptions property: Indicates user preferences for the various diagnostic collection options
     * for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     * @param dataCollectionOptions the dataCollectionOptions value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withDataCollectionOptions(DataCollectionOptions dataCollectionOptions) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withDataCollectionOptions(dataCollectionOptions);
        return this;
    }

    /**
     * Get the displayName property: Display Name.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: Display Name.
     * 
     * @param displayName the displayName value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Get the computeNodes property: The list of compute servers to be added to the cloud VM cluster.
     * 
     * @return the computeNodes value.
     */
    public List<String> computeNodes() {
        return this.innerProperties() == null ? null : this.innerProperties().computeNodes();
    }

    /**
     * Set the computeNodes property: The list of compute servers to be added to the cloud VM cluster.
     * 
     * @param computeNodes the computeNodes value to set.
     * @return the CloudVmClusterUpdate object itself.
     */
    public CloudVmClusterUpdate withComputeNodes(List<String> computeNodes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudVmClusterUpdateProperties();
        }
        this.innerProperties().withComputeNodes(computeNodes);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

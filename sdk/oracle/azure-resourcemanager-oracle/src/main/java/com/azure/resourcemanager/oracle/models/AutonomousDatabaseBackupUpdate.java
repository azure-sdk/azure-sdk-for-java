// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.oracle.fluent.models.AutonomousDatabaseBackupUpdateProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The type used for update operations of the AutonomousDatabaseBackup.
 */
@Fluent
public final class AutonomousDatabaseBackupUpdate {
    /*
     * The updatable properties of the AutonomousDatabaseBackup.
     */
    @JsonProperty(value = "properties")
    private AutonomousDatabaseBackupUpdateProperties innerProperties;

    /**
     * Creates an instance of AutonomousDatabaseBackupUpdate class.
     */
    public AutonomousDatabaseBackupUpdate() {
    }

    /**
     * Get the innerProperties property: The updatable properties of the AutonomousDatabaseBackup.
     * 
     * @return the innerProperties value.
     */
    private AutonomousDatabaseBackupUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the retentionPeriodInDays property: Retention period, in days, for long-term backups.
     * 
     * @return the retentionPeriodInDays value.
     */
    public Integer retentionPeriodInDays() {
        return this.innerProperties() == null ? null : this.innerProperties().retentionPeriodInDays();
    }

    /**
     * Set the retentionPeriodInDays property: Retention period, in days, for long-term backups.
     * 
     * @param retentionPeriodInDays the retentionPeriodInDays value to set.
     * @return the AutonomousDatabaseBackupUpdate object itself.
     */
    public AutonomousDatabaseBackupUpdate withRetentionPeriodInDays(Integer retentionPeriodInDays) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AutonomousDatabaseBackupUpdateProperties();
        }
        this.innerProperties().withRetentionPeriodInDays(retentionPeriodInDays);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

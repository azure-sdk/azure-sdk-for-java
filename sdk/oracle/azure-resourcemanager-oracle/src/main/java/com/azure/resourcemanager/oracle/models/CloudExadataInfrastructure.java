// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracle.fluent.models.CloudExadataInfrastructureInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of CloudExadataInfrastructure.
 */
public interface CloudExadataInfrastructure {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the zones property: CloudExadataInfrastructure zones.
     * 
     * @return the zones value.
     */
    List<String> zones();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the ocid property: Exadata infra ocid.
     * 
     * @return the ocid value.
     */
    String ocid();

    /**
     * Gets the computeCount property: The number of compute servers for the cloud Exadata infrastructure.
     * 
     * @return the computeCount value.
     */
    Integer computeCount();

    /**
     * Gets the storageCount property: The number of storage servers for the cloud Exadata infrastructure.
     * 
     * @return the storageCount value.
     */
    Integer storageCount();

    /**
     * Gets the totalStorageSizeInGbs property: The total storage allocated to the cloud Exadata infrastructure
     * resource, in gigabytes (GB).
     * 
     * @return the totalStorageSizeInGbs value.
     */
    Integer totalStorageSizeInGbs();

    /**
     * Gets the availableStorageSizeInGbs property: The available storage can be allocated to the cloud Exadata
     * infrastructure resource, in gigabytes (GB).
     * 
     * @return the availableStorageSizeInGbs value.
     */
    Integer availableStorageSizeInGbs();

    /**
     * Gets the timeCreated property: The date and time the cloud Exadata infrastructure resource was created.
     * 
     * @return the timeCreated value.
     */
    String timeCreated();

    /**
     * Gets the lifecycleDetails property: Additional information about the current lifecycle state.
     * 
     * @return the lifecycleDetails value.
     */
    String lifecycleDetails();

    /**
     * Gets the maintenanceWindow property: maintenanceWindow property.
     * 
     * @return the maintenanceWindow value.
     */
    MaintenanceWindow maintenanceWindow();

    /**
     * Gets the estimatedPatchingTime property: The estimated total time required in minutes for all patching operations
     * (database server, storage server, and network switch patching).
     * 
     * @return the estimatedPatchingTime value.
     */
    EstimatedPatchingTime estimatedPatchingTime();

    /**
     * Gets the customerContacts property: The list of customer email addresses that receive information from Oracle
     * about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about
     * planned and unplanned software maintenance updates, information about system hardware, and other information
     * needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata
     * infrastructure instance.
     * 
     * @return the customerContacts value.
     */
    List<CustomerContact> customerContacts();

    /**
     * Gets the provisioningState property: CloudExadataInfrastructure provisioning state.
     * 
     * @return the provisioningState value.
     */
    AzureResourceProvisioningState provisioningState();

    /**
     * Gets the lifecycleState property: CloudExadataInfrastructure lifecycle state.
     * 
     * @return the lifecycleState value.
     */
    CloudExadataInfrastructureLifecycleState lifecycleState();

    /**
     * Gets the shape property: The model name of the cloud Exadata infrastructure resource.
     * 
     * @return the shape value.
     */
    String shape();

    /**
     * Gets the ociUrl property: HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
     * 
     * @return the ociUrl value.
     */
    String ociUrl();

    /**
     * Gets the cpuCount property: The total number of CPU cores allocated.
     * 
     * @return the cpuCount value.
     */
    Integer cpuCount();

    /**
     * Gets the maxCpuCount property: The total number of CPU cores available.
     * 
     * @return the maxCpuCount value.
     */
    Integer maxCpuCount();

    /**
     * Gets the memorySizeInGbs property: The memory allocated in GBs.
     * 
     * @return the memorySizeInGbs value.
     */
    Integer memorySizeInGbs();

    /**
     * Gets the maxMemoryInGbs property: The total memory available in GBs.
     * 
     * @return the maxMemoryInGbs value.
     */
    Integer maxMemoryInGbs();

    /**
     * Gets the dbNodeStorageSizeInGbs property: The local node storage to be allocated in GBs.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    Integer dbNodeStorageSizeInGbs();

    /**
     * Gets the maxDbNodeStorageSizeInGbs property: The total local node storage available in GBs.
     * 
     * @return the maxDbNodeStorageSizeInGbs value.
     */
    Integer maxDbNodeStorageSizeInGbs();

    /**
     * Gets the dataStorageSizeInTbs property: The quantity of data in the database, in terabytes.
     * 
     * @return the dataStorageSizeInTbs value.
     */
    Integer dataStorageSizeInTbs();

    /**
     * Gets the maxDataStorageInTbs property: The total available DATA disk group size.
     * 
     * @return the maxDataStorageInTbs value.
     */
    Double maxDataStorageInTbs();

    /**
     * Gets the dbServerVersion property: The software version of the database servers (dom0) in the Exadata
     * infrastructure.
     * 
     * @return the dbServerVersion value.
     */
    String dbServerVersion();

    /**
     * Gets the storageServerVersion property: The software version of the storage servers (cells) in the Exadata
     * infrastructure.
     * 
     * @return the storageServerVersion value.
     */
    String storageServerVersion();

    /**
     * Gets the activatedStorageCount property: The requested number of additional storage servers activated for the
     * Exadata infrastructure.
     * 
     * @return the activatedStorageCount value.
     */
    Integer activatedStorageCount();

    /**
     * Gets the additionalStorageCount property: The requested number of additional storage servers for the Exadata
     * infrastructure.
     * 
     * @return the additionalStorageCount value.
     */
    Integer additionalStorageCount();

    /**
     * Gets the displayName property: The name for the Exadata infrastructure.
     * 
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the lastMaintenanceRunId property: The OCID of the last maintenance run.
     * 
     * @return the lastMaintenanceRunId value.
     */
    String lastMaintenanceRunId();

    /**
     * Gets the nextMaintenanceRunId property: The OCID of the next maintenance run.
     * 
     * @return the nextMaintenanceRunId value.
     */
    String nextMaintenanceRunId();

    /**
     * Gets the monthlyDbServerVersion property: Monthly Db Server version.
     * 
     * @return the monthlyDbServerVersion value.
     */
    String monthlyDbServerVersion();

    /**
     * Gets the monthlyStorageServerVersion property: Monthly Storage Server version.
     * 
     * @return the monthlyStorageServerVersion value.
     */
    String monthlyStorageServerVersion();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.oracle.fluent.models.CloudExadataInfrastructureInner object.
     * 
     * @return the inner object.
     */
    CloudExadataInfrastructureInner innerModel();

    /**
     * The entirety of the CloudExadataInfrastructure definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithZones, DefinitionStages.WithCreate {
    }

    /**
     * The CloudExadataInfrastructure definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the CloudExadataInfrastructure definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithZones withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify zones.
         */
        interface WithZones {
            /**
             * Specifies the zones property: CloudExadataInfrastructure zones.
             * 
             * @param zones CloudExadataInfrastructure zones.
             * @return the next definition stage.
             */
            WithCreate withZones(List<String> zones);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithComputeCount,
            DefinitionStages.WithStorageCount, DefinitionStages.WithMaintenanceWindow,
            DefinitionStages.WithCustomerContacts, DefinitionStages.WithShape, DefinitionStages.WithDisplayName {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            CloudExadataInfrastructure create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            CloudExadataInfrastructure create(Context context);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify computeCount.
         */
        interface WithComputeCount {
            /**
             * Specifies the computeCount property: The number of compute servers for the cloud Exadata infrastructure..
             * 
             * @param computeCount The number of compute servers for the cloud Exadata infrastructure.
             * @return the next definition stage.
             */
            WithCreate withComputeCount(Integer computeCount);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify storageCount.
         */
        interface WithStorageCount {
            /**
             * Specifies the storageCount property: The number of storage servers for the cloud Exadata infrastructure..
             * 
             * @param storageCount The number of storage servers for the cloud Exadata infrastructure.
             * @return the next definition stage.
             */
            WithCreate withStorageCount(Integer storageCount);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify maintenanceWindow.
         */
        interface WithMaintenanceWindow {
            /**
             * Specifies the maintenanceWindow property: maintenanceWindow property.
             * 
             * @param maintenanceWindow maintenanceWindow property.
             * @return the next definition stage.
             */
            WithCreate withMaintenanceWindow(MaintenanceWindow maintenanceWindow);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify customerContacts.
         */
        interface WithCustomerContacts {
            /**
             * Specifies the customerContacts property: The list of customer email addresses that receive information
             * from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send
             * notifications about planned and unplanned software maintenance updates, information about system
             * hardware, and other information needed by administrators. Up to 10 email addresses can be added to the
             * customer contacts for a cloud Exadata infrastructure instance. .
             * 
             * @param customerContacts The list of customer email addresses that receive information from Oracle about
             * the specified OCI Database service resource. Oracle uses these email addresses to send notifications
             * about planned and unplanned software maintenance updates, information about system hardware, and other
             * information needed by administrators. Up to 10 email addresses can be added to the customer contacts for
             * a cloud Exadata infrastructure instance.
             * @return the next definition stage.
             */
            WithCreate withCustomerContacts(List<CustomerContact> customerContacts);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify shape.
         */
        interface WithShape {
            /**
             * Specifies the shape property: The model name of the cloud Exadata infrastructure resource..
             * 
             * @param shape The model name of the cloud Exadata infrastructure resource.
             * @return the next definition stage.
             */
            WithCreate withShape(String shape);
        }

        /**
         * The stage of the CloudExadataInfrastructure definition allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The name for the Exadata infrastructure..
             * 
             * @param displayName The name for the Exadata infrastructure.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
    }

    /**
     * Begins update for the CloudExadataInfrastructure resource.
     * 
     * @return the stage of resource update.
     */
    CloudExadataInfrastructure.Update update();

    /**
     * The template for CloudExadataInfrastructure update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithZones, UpdateStages.WithComputeCount,
        UpdateStages.WithStorageCount, UpdateStages.WithMaintenanceWindow, UpdateStages.WithCustomerContacts,
        UpdateStages.WithDisplayName {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        CloudExadataInfrastructure apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        CloudExadataInfrastructure apply(Context context);
    }

    /**
     * The CloudExadataInfrastructure update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify zones.
         */
        interface WithZones {
            /**
             * Specifies the zones property: CloudExadataInfrastructure zones.
             * 
             * @param zones CloudExadataInfrastructure zones.
             * @return the next definition stage.
             */
            Update withZones(List<String> zones);
        }

        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify computeCount.
         */
        interface WithComputeCount {
            /**
             * Specifies the computeCount property: The number of compute servers for the cloud Exadata infrastructure..
             * 
             * @param computeCount The number of compute servers for the cloud Exadata infrastructure.
             * @return the next definition stage.
             */
            Update withComputeCount(Integer computeCount);
        }

        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify storageCount.
         */
        interface WithStorageCount {
            /**
             * Specifies the storageCount property: The number of storage servers for the cloud Exadata infrastructure..
             * 
             * @param storageCount The number of storage servers for the cloud Exadata infrastructure.
             * @return the next definition stage.
             */
            Update withStorageCount(Integer storageCount);
        }

        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify maintenanceWindow.
         */
        interface WithMaintenanceWindow {
            /**
             * Specifies the maintenanceWindow property: maintenanceWindow property.
             * 
             * @param maintenanceWindow maintenanceWindow property.
             * @return the next definition stage.
             */
            Update withMaintenanceWindow(MaintenanceWindow maintenanceWindow);
        }

        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify customerContacts.
         */
        interface WithCustomerContacts {
            /**
             * Specifies the customerContacts property: The list of customer email addresses that receive information
             * from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send
             * notifications about planned and unplanned software maintenance updates, information about system
             * hardware, and other information needed by administrators. Up to 10 email addresses can be added to the
             * customer contacts for a cloud Exadata infrastructure instance. .
             * 
             * @param customerContacts The list of customer email addresses that receive information from Oracle about
             * the specified OCI Database service resource. Oracle uses these email addresses to send notifications
             * about planned and unplanned software maintenance updates, information about system hardware, and other
             * information needed by administrators. Up to 10 email addresses can be added to the customer contacts for
             * a cloud Exadata infrastructure instance.
             * @return the next definition stage.
             */
            Update withCustomerContacts(List<CustomerContact> customerContacts);
        }

        /**
         * The stage of the CloudExadataInfrastructure update allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The name for the Exadata infrastructure..
             * 
             * @param displayName The name for the Exadata infrastructure.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    CloudExadataInfrastructure refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    CloudExadataInfrastructure refresh(Context context);

    /**
     * Perform add storage capacity on exadata infra.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    CloudExadataInfrastructure addStorageCapacity();

    /**
     * Perform add storage capacity on exadata infra.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return cloudExadataInfrastructure resource definition.
     */
    CloudExadataInfrastructure addStorageCapacity(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.oracle.models.AzureResourceProvisioningState;
import com.azure.resourcemanager.oracle.models.CloudExadataInfrastructureLifecycleState;
import com.azure.resourcemanager.oracle.models.CustomerContact;
import com.azure.resourcemanager.oracle.models.EstimatedPatchingTime;
import com.azure.resourcemanager.oracle.models.MaintenanceWindow;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * CloudExadataInfrastructure resource definition.
 */
@Fluent
public final class CloudExadataInfrastructureInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private CloudExadataInfrastructureProperties innerProperties;

    /*
     * CloudExadataInfrastructure zones
     */
    @JsonProperty(value = "zones", required = true)
    private List<String> zones;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of CloudExadataInfrastructureInner class.
     */
    public CloudExadataInfrastructureInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private CloudExadataInfrastructureProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the zones property: CloudExadataInfrastructure zones.
     * 
     * @return the zones value.
     */
    public List<String> zones() {
        return this.zones;
    }

    /**
     * Set the zones property: CloudExadataInfrastructure zones.
     * 
     * @param zones the zones value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withZones(List<String> zones) {
        this.zones = zones;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CloudExadataInfrastructureInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CloudExadataInfrastructureInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the ocid property: Exadata infra ocid.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.innerProperties() == null ? null : this.innerProperties().ocid();
    }

    /**
     * Get the computeCount property: The number of compute servers for the cloud Exadata infrastructure.
     * 
     * @return the computeCount value.
     */
    public Integer computeCount() {
        return this.innerProperties() == null ? null : this.innerProperties().computeCount();
    }

    /**
     * Set the computeCount property: The number of compute servers for the cloud Exadata infrastructure.
     * 
     * @param computeCount the computeCount value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withComputeCount(Integer computeCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureProperties();
        }
        this.innerProperties().withComputeCount(computeCount);
        return this;
    }

    /**
     * Get the storageCount property: The number of storage servers for the cloud Exadata infrastructure.
     * 
     * @return the storageCount value.
     */
    public Integer storageCount() {
        return this.innerProperties() == null ? null : this.innerProperties().storageCount();
    }

    /**
     * Set the storageCount property: The number of storage servers for the cloud Exadata infrastructure.
     * 
     * @param storageCount the storageCount value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withStorageCount(Integer storageCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureProperties();
        }
        this.innerProperties().withStorageCount(storageCount);
        return this;
    }

    /**
     * Get the totalStorageSizeInGbs property: The total storage allocated to the cloud Exadata infrastructure resource,
     * in gigabytes (GB).
     * 
     * @return the totalStorageSizeInGbs value.
     */
    public Integer totalStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().totalStorageSizeInGbs();
    }

    /**
     * Get the availableStorageSizeInGbs property: The available storage can be allocated to the cloud Exadata
     * infrastructure resource, in gigabytes (GB).
     * 
     * @return the availableStorageSizeInGbs value.
     */
    public Integer availableStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().availableStorageSizeInGbs();
    }

    /**
     * Get the timeCreated property: The date and time the cloud Exadata infrastructure resource was created.
     * 
     * @return the timeCreated value.
     */
    public String timeCreated() {
        return this.innerProperties() == null ? null : this.innerProperties().timeCreated();
    }

    /**
     * Get the lifecycleDetails property: Additional information about the current lifecycle state.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleDetails();
    }

    /**
     * Get the maintenanceWindow property: maintenanceWindow property.
     * 
     * @return the maintenanceWindow value.
     */
    public MaintenanceWindow maintenanceWindow() {
        return this.innerProperties() == null ? null : this.innerProperties().maintenanceWindow();
    }

    /**
     * Set the maintenanceWindow property: maintenanceWindow property.
     * 
     * @param maintenanceWindow the maintenanceWindow value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withMaintenanceWindow(MaintenanceWindow maintenanceWindow) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureProperties();
        }
        this.innerProperties().withMaintenanceWindow(maintenanceWindow);
        return this;
    }

    /**
     * Get the estimatedPatchingTime property: The estimated total time required in minutes for all patching operations
     * (database server, storage server, and network switch patching).
     * 
     * @return the estimatedPatchingTime value.
     */
    public EstimatedPatchingTime estimatedPatchingTime() {
        return this.innerProperties() == null ? null : this.innerProperties().estimatedPatchingTime();
    }

    /**
     * Get the customerContacts property: The list of customer email addresses that receive information from Oracle
     * about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about
     * planned and unplanned software maintenance updates, information about system hardware, and other information
     * needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata
     * infrastructure instance.
     * 
     * @return the customerContacts value.
     */
    public List<CustomerContact> customerContacts() {
        return this.innerProperties() == null ? null : this.innerProperties().customerContacts();
    }

    /**
     * Set the customerContacts property: The list of customer email addresses that receive information from Oracle
     * about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about
     * planned and unplanned software maintenance updates, information about system hardware, and other information
     * needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata
     * infrastructure instance.
     * 
     * @param customerContacts the customerContacts value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withCustomerContacts(List<CustomerContact> customerContacts) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureProperties();
        }
        this.innerProperties().withCustomerContacts(customerContacts);
        return this;
    }

    /**
     * Get the provisioningState property: CloudExadataInfrastructure provisioning state.
     * 
     * @return the provisioningState value.
     */
    public AzureResourceProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the lifecycleState property: CloudExadataInfrastructure lifecycle state.
     * 
     * @return the lifecycleState value.
     */
    public CloudExadataInfrastructureLifecycleState lifecycleState() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleState();
    }

    /**
     * Get the shape property: The model name of the cloud Exadata infrastructure resource.
     * 
     * @return the shape value.
     */
    public String shape() {
        return this.innerProperties() == null ? null : this.innerProperties().shape();
    }

    /**
     * Set the shape property: The model name of the cloud Exadata infrastructure resource.
     * 
     * @param shape the shape value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withShape(String shape) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureProperties();
        }
        this.innerProperties().withShape(shape);
        return this;
    }

    /**
     * Get the ociUrl property: HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
     * 
     * @return the ociUrl value.
     */
    public String ociUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().ociUrl();
    }

    /**
     * Get the cpuCount property: The total number of CPU cores allocated.
     * 
     * @return the cpuCount value.
     */
    public Integer cpuCount() {
        return this.innerProperties() == null ? null : this.innerProperties().cpuCount();
    }

    /**
     * Get the maxCpuCount property: The total number of CPU cores available.
     * 
     * @return the maxCpuCount value.
     */
    public Integer maxCpuCount() {
        return this.innerProperties() == null ? null : this.innerProperties().maxCpuCount();
    }

    /**
     * Get the memorySizeInGbs property: The memory allocated in GBs.
     * 
     * @return the memorySizeInGbs value.
     */
    public Integer memorySizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().memorySizeInGbs();
    }

    /**
     * Get the maxMemoryInGbs property: The total memory available in GBs.
     * 
     * @return the maxMemoryInGbs value.
     */
    public Integer maxMemoryInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().maxMemoryInGbs();
    }

    /**
     * Get the dbNodeStorageSizeInGbs property: The local node storage to be allocated in GBs.
     * 
     * @return the dbNodeStorageSizeInGbs value.
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dbNodeStorageSizeInGbs();
    }

    /**
     * Get the maxDbNodeStorageSizeInGbs property: The total local node storage available in GBs.
     * 
     * @return the maxDbNodeStorageSizeInGbs value.
     */
    public Integer maxDbNodeStorageSizeInGbs() {
        return this.innerProperties() == null ? null : this.innerProperties().maxDbNodeStorageSizeInGbs();
    }

    /**
     * Get the dataStorageSizeInTbs property: The quantity of data in the database, in terabytes.
     * 
     * @return the dataStorageSizeInTbs value.
     */
    public Integer dataStorageSizeInTbs() {
        return this.innerProperties() == null ? null : this.innerProperties().dataStorageSizeInTbs();
    }

    /**
     * Get the maxDataStorageInTbs property: The total available DATA disk group size.
     * 
     * @return the maxDataStorageInTbs value.
     */
    public Double maxDataStorageInTbs() {
        return this.innerProperties() == null ? null : this.innerProperties().maxDataStorageInTbs();
    }

    /**
     * Get the dbServerVersion property: The software version of the database servers (dom0) in the Exadata
     * infrastructure.
     * 
     * @return the dbServerVersion value.
     */
    public String dbServerVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().dbServerVersion();
    }

    /**
     * Get the storageServerVersion property: The software version of the storage servers (cells) in the Exadata
     * infrastructure.
     * 
     * @return the storageServerVersion value.
     */
    public String storageServerVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().storageServerVersion();
    }

    /**
     * Get the activatedStorageCount property: The requested number of additional storage servers activated for the
     * Exadata infrastructure.
     * 
     * @return the activatedStorageCount value.
     */
    public Integer activatedStorageCount() {
        return this.innerProperties() == null ? null : this.innerProperties().activatedStorageCount();
    }

    /**
     * Get the additionalStorageCount property: The requested number of additional storage servers for the Exadata
     * infrastructure.
     * 
     * @return the additionalStorageCount value.
     */
    public Integer additionalStorageCount() {
        return this.innerProperties() == null ? null : this.innerProperties().additionalStorageCount();
    }

    /**
     * Get the displayName property: The name for the Exadata infrastructure.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The name for the Exadata infrastructure.
     * 
     * @param displayName the displayName value to set.
     * @return the CloudExadataInfrastructureInner object itself.
     */
    public CloudExadataInfrastructureInner withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudExadataInfrastructureProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Get the lastMaintenanceRunId property: The OCID of the last maintenance run.
     * 
     * @return the lastMaintenanceRunId value.
     */
    public String lastMaintenanceRunId() {
        return this.innerProperties() == null ? null : this.innerProperties().lastMaintenanceRunId();
    }

    /**
     * Get the nextMaintenanceRunId property: The OCID of the next maintenance run.
     * 
     * @return the nextMaintenanceRunId value.
     */
    public String nextMaintenanceRunId() {
        return this.innerProperties() == null ? null : this.innerProperties().nextMaintenanceRunId();
    }

    /**
     * Get the monthlyDbServerVersion property: Monthly Db Server version.
     * 
     * @return the monthlyDbServerVersion value.
     */
    public String monthlyDbServerVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().monthlyDbServerVersion();
    }

    /**
     * Get the monthlyStorageServerVersion property: Monthly Storage Server version.
     * 
     * @return the monthlyStorageServerVersion value.
     */
    public String monthlyStorageServerVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().monthlyStorageServerVersion();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (zones() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property zones in model CloudExadataInfrastructureInner"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CloudExadataInfrastructureInner.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oracle.fluent.models.AutonomousDatabaseInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of AutonomousDatabase.
 */
public interface AutonomousDatabase {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the properties property: The resource-specific properties for this resource.
     * 
     * @return the properties value.
     */
    AutonomousDatabaseBaseProperties properties();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.oracle.fluent.models.AutonomousDatabaseInner object.
     * 
     * @return the inner object.
     */
    AutonomousDatabaseInner innerModel();

    /**
     * The entirety of the AutonomousDatabase definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The AutonomousDatabase definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the AutonomousDatabase definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the AutonomousDatabase definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the AutonomousDatabase definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the AutonomousDatabase definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithProperties {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            AutonomousDatabase create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AutonomousDatabase create(Context context);
        }

        /**
         * The stage of the AutonomousDatabase definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AutonomousDatabase definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The resource-specific properties for this resource..
             * 
             * @param properties The resource-specific properties for this resource.
             * @return the next definition stage.
             */
            WithCreate withProperties(AutonomousDatabaseBaseProperties properties);
        }
    }

    /**
     * Begins update for the AutonomousDatabase resource.
     * 
     * @return the stage of resource update.
     */
    AutonomousDatabase.Update update();

    /**
     * The template for AutonomousDatabase update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithAdminPassword,
        UpdateStages.WithAutonomousMaintenanceScheduleType, UpdateStages.WithComputeCount,
        UpdateStages.WithCpuCoreCount, UpdateStages.WithCustomerContacts, UpdateStages.WithDataStorageSizeInTbs,
        UpdateStages.WithDataStorageSizeInGbs, UpdateStages.WithDisplayName, UpdateStages.WithIsAutoScalingEnabled,
        UpdateStages.WithIsAutoScalingForStorageEnabled, UpdateStages.WithPeerDbId,
        UpdateStages.WithIsLocalDataGuardEnabled, UpdateStages.WithIsMtlsConnectionRequired,
        UpdateStages.WithLicenseModel, UpdateStages.WithScheduledOperations, UpdateStages.WithDatabaseEdition,
        UpdateStages.WithLocalAdgAutoFailoverMaxDataLossLimit, UpdateStages.WithOpenMode,
        UpdateStages.WithPermissionLevel, UpdateStages.WithRole, UpdateStages.WithBackupRetentionPeriodInDays,
        UpdateStages.WithWhitelistedIps {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        AutonomousDatabase apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AutonomousDatabase apply(Context context);
    }

    /**
     * The AutonomousDatabase update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the AutonomousDatabase update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify adminPassword.
         */
        interface WithAdminPassword {
            /**
             * Specifies the adminPassword property: Admin password..
             * 
             * @param adminPassword Admin password.
             * @return the next definition stage.
             */
            Update withAdminPassword(String adminPassword);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify autonomousMaintenanceScheduleType.
         */
        interface WithAutonomousMaintenanceScheduleType {
            /**
             * Specifies the autonomousMaintenanceScheduleType property: The maintenance schedule type of the Autonomous
             * Database Serverless..
             * 
             * @param autonomousMaintenanceScheduleType The maintenance schedule type of the Autonomous Database
             * Serverless.
             * @return the next definition stage.
             */
            Update withAutonomousMaintenanceScheduleType(
                AutonomousMaintenanceScheduleType autonomousMaintenanceScheduleType);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify computeCount.
         */
        interface WithComputeCount {
            /**
             * Specifies the computeCount property: The compute amount (CPUs) available to the database..
             * 
             * @param computeCount The compute amount (CPUs) available to the database.
             * @return the next definition stage.
             */
            Update withComputeCount(Float computeCount);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify cpuCoreCount.
         */
        interface WithCpuCoreCount {
            /**
             * Specifies the cpuCoreCount property: The number of CPU cores to be made available to the database..
             * 
             * @param cpuCoreCount The number of CPU cores to be made available to the database.
             * @return the next definition stage.
             */
            Update withCpuCoreCount(Integer cpuCoreCount);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify customerContacts.
         */
        interface WithCustomerContacts {
            /**
             * Specifies the customerContacts property: Customer Contacts..
             * 
             * @param customerContacts Customer Contacts.
             * @return the next definition stage.
             */
            Update withCustomerContacts(List<CustomerContact> customerContacts);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify dataStorageSizeInTbs.
         */
        interface WithDataStorageSizeInTbs {
            /**
             * Specifies the dataStorageSizeInTbs property: The quantity of data in the database, in terabytes..
             * 
             * @param dataStorageSizeInTbs The quantity of data in the database, in terabytes.
             * @return the next definition stage.
             */
            Update withDataStorageSizeInTbs(Integer dataStorageSizeInTbs);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify dataStorageSizeInGbs.
         */
        interface WithDataStorageSizeInGbs {
            /**
             * Specifies the dataStorageSizeInGbs property: The size, in gigabytes, of the data volume that will be
             * created and attached to the database..
             * 
             * @param dataStorageSizeInGbs The size, in gigabytes, of the data volume that will be created and attached
             * to the database.
             * @return the next definition stage.
             */
            Update withDataStorageSizeInGbs(Integer dataStorageSizeInGbs);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The user-friendly name for the Autonomous Database..
             * 
             * @param displayName The user-friendly name for the Autonomous Database.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify isAutoScalingEnabled.
         */
        interface WithIsAutoScalingEnabled {
            /**
             * Specifies the isAutoScalingEnabled property: Indicates if auto scaling is enabled for the Autonomous
             * Database CPU core count..
             * 
             * @param isAutoScalingEnabled Indicates if auto scaling is enabled for the Autonomous Database CPU core
             * count.
             * @return the next definition stage.
             */
            Update withIsAutoScalingEnabled(Boolean isAutoScalingEnabled);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify isAutoScalingForStorageEnabled.
         */
        interface WithIsAutoScalingForStorageEnabled {
            /**
             * Specifies the isAutoScalingForStorageEnabled property: Indicates if auto scaling is enabled for the
             * Autonomous Database storage..
             * 
             * @param isAutoScalingForStorageEnabled Indicates if auto scaling is enabled for the Autonomous Database
             * storage.
             * @return the next definition stage.
             */
            Update withIsAutoScalingForStorageEnabled(Boolean isAutoScalingForStorageEnabled);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify peerDbId.
         */
        interface WithPeerDbId {
            /**
             * Specifies the peerDbId property: The database OCID of the Disaster Recovery peer database, which is
             * located in a different region from the current peer database..
             * 
             * @param peerDbId The database OCID of the Disaster Recovery peer database, which is located in a different
             * region from the current peer database.
             * @return the next definition stage.
             */
            Update withPeerDbId(String peerDbId);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify isLocalDataGuardEnabled.
         */
        interface WithIsLocalDataGuardEnabled {
            /**
             * Specifies the isLocalDataGuardEnabled property: Indicates whether the Autonomous Database has local or
             * called in-region Data Guard enabled..
             * 
             * @param isLocalDataGuardEnabled Indicates whether the Autonomous Database has local or called in-region
             * Data Guard enabled.
             * @return the next definition stage.
             */
            Update withIsLocalDataGuardEnabled(Boolean isLocalDataGuardEnabled);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify isMtlsConnectionRequired.
         */
        interface WithIsMtlsConnectionRequired {
            /**
             * Specifies the isMtlsConnectionRequired property: Specifies if the Autonomous Database requires mTLS
             * connections..
             * 
             * @param isMtlsConnectionRequired Specifies if the Autonomous Database requires mTLS connections.
             * @return the next definition stage.
             */
            Update withIsMtlsConnectionRequired(Boolean isMtlsConnectionRequired);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify licenseModel.
         */
        interface WithLicenseModel {
            /**
             * Specifies the licenseModel property: The Oracle license model that applies to the Oracle Autonomous
             * Database. The default is LICENSE_INCLUDED..
             * 
             * @param licenseModel The Oracle license model that applies to the Oracle Autonomous Database. The default
             * is LICENSE_INCLUDED.
             * @return the next definition stage.
             */
            Update withLicenseModel(LicenseModel licenseModel);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify scheduledOperations.
         */
        interface WithScheduledOperations {
            /**
             * Specifies the scheduledOperations property: The list of scheduled operations..
             * 
             * @param scheduledOperations The list of scheduled operations.
             * @return the next definition stage.
             */
            Update withScheduledOperations(ScheduledOperationsTypeUpdate scheduledOperations);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify databaseEdition.
         */
        interface WithDatabaseEdition {
            /**
             * Specifies the databaseEdition property: The Oracle Database Edition that applies to the Autonomous
             * databases..
             * 
             * @param databaseEdition The Oracle Database Edition that applies to the Autonomous databases.
             * @return the next definition stage.
             */
            Update withDatabaseEdition(DatabaseEditionType databaseEdition);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify localAdgAutoFailoverMaxDataLossLimit.
         */
        interface WithLocalAdgAutoFailoverMaxDataLossLimit {
            /**
             * Specifies the localAdgAutoFailoverMaxDataLossLimit property: Parameter that allows users to select an
             * acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when
             * necessary for a Local Autonomous Data Guard.
             * 
             * @param localAdgAutoFailoverMaxDataLossLimit Parameter that allows users to select an acceptable maximum
             * data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local
             * Autonomous Data Guard.
             * @return the next definition stage.
             */
            Update withLocalAdgAutoFailoverMaxDataLossLimit(Integer localAdgAutoFailoverMaxDataLossLimit);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify openMode.
         */
        interface WithOpenMode {
            /**
             * Specifies the openMode property: Indicates the Autonomous Database mode..
             * 
             * @param openMode Indicates the Autonomous Database mode.
             * @return the next definition stage.
             */
            Update withOpenMode(OpenModeType openMode);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify permissionLevel.
         */
        interface WithPermissionLevel {
            /**
             * Specifies the permissionLevel property: The Autonomous Database permission level..
             * 
             * @param permissionLevel The Autonomous Database permission level.
             * @return the next definition stage.
             */
            Update withPermissionLevel(PermissionLevelType permissionLevel);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify role.
         */
        interface WithRole {
            /**
             * Specifies the role property: The Data Guard role of the Autonomous Container Database or Autonomous
             * Database, if Autonomous Data Guard is enabled..
             * 
             * @param role The Data Guard role of the Autonomous Container Database or Autonomous Database, if
             * Autonomous Data Guard is enabled.
             * @return the next definition stage.
             */
            Update withRole(RoleType role);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify backupRetentionPeriodInDays.
         */
        interface WithBackupRetentionPeriodInDays {
            /**
             * Specifies the backupRetentionPeriodInDays property: Retention period, in days, for long-term backups.
             * 
             * @param backupRetentionPeriodInDays Retention period, in days, for long-term backups.
             * @return the next definition stage.
             */
            Update withBackupRetentionPeriodInDays(Integer backupRetentionPeriodInDays);
        }

        /**
         * The stage of the AutonomousDatabase update allowing to specify whitelistedIps.
         */
        interface WithWhitelistedIps {
            /**
             * Specifies the whitelistedIps property: The client IP access control list (ACL). This is an array of CIDR
             * notations and/or IP addresses. Values should be separate strings, separated by commas. Example:
             * ['1.1.1.1','1.1.1.0/24','1.1.2.25'].
             * 
             * @param whitelistedIps The client IP access control list (ACL). This is an array of CIDR notations and/or
             * IP addresses. Values should be separate strings, separated by commas. Example:
             * ['1.1.1.1','1.1.1.0/24','1.1.2.25'].
             * @return the next definition stage.
             */
            Update withWhitelistedIps(List<String> whitelistedIps);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    AutonomousDatabase refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AutonomousDatabase refresh(Context context);

    /**
     * Perform failover action on Autonomous Database.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomous Database resource model.
     */
    AutonomousDatabase failover(PeerDbDetails body);

    /**
     * Perform failover action on Autonomous Database.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomous Database resource model.
     */
    AutonomousDatabase failover(PeerDbDetails body, Context context);

    /**
     * Generate wallet action on Autonomous Database.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomous Database Wallet File resource model along with {@link Response}.
     */
    Response<AutonomousDatabaseWalletFile> generateWalletWithResponse(GenerateAutonomousDatabaseWalletDetails body,
        Context context);

    /**
     * Generate wallet action on Autonomous Database.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomous Database Wallet File resource model.
     */
    AutonomousDatabaseWalletFile generateWallet(GenerateAutonomousDatabaseWalletDetails body);

    /**
     * Perform switchover action on Autonomous Database.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomous Database resource model.
     */
    AutonomousDatabase switchover(PeerDbDetails body);

    /**
     * Perform switchover action on Autonomous Database.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return autonomous Database resource model.
     */
    AutonomousDatabase switchover(PeerDbDetails body, Context context);
}

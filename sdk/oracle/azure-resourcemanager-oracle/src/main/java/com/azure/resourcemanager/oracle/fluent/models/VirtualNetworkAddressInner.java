// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oracle.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.oracle.models.AzureResourceProvisioningState;
import com.azure.resourcemanager.oracle.models.VirtualNetworkAddressLifecycleState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Virtual IP resource belonging to a vm cluster resource.
 */
@Fluent
public final class VirtualNetworkAddressInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private VirtualNetworkAddressProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of VirtualNetworkAddressInner class.
     */
    public VirtualNetworkAddressInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private VirtualNetworkAddressProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the ipAddress property: Virtual network Address address.
     * 
     * @return the ipAddress value.
     */
    public String ipAddress() {
        return this.innerProperties() == null ? null : this.innerProperties().ipAddress();
    }

    /**
     * Set the ipAddress property: Virtual network Address address.
     * 
     * @param ipAddress the ipAddress value to set.
     * @return the VirtualNetworkAddressInner object itself.
     */
    public VirtualNetworkAddressInner withIpAddress(String ipAddress) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualNetworkAddressProperties();
        }
        this.innerProperties().withIpAddress(ipAddress);
        return this;
    }

    /**
     * Get the vmOcid property: Virtual Machine OCID.
     * 
     * @return the vmOcid value.
     */
    public String vmOcid() {
        return this.innerProperties() == null ? null : this.innerProperties().vmOcid();
    }

    /**
     * Set the vmOcid property: Virtual Machine OCID.
     * 
     * @param vmOcid the vmOcid value to set.
     * @return the VirtualNetworkAddressInner object itself.
     */
    public VirtualNetworkAddressInner withVmOcid(String vmOcid) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualNetworkAddressProperties();
        }
        this.innerProperties().withVmOcid(vmOcid);
        return this;
    }

    /**
     * Get the ocid property: Application VIP OCID.
     * 
     * @return the ocid value.
     */
    public String ocid() {
        return this.innerProperties() == null ? null : this.innerProperties().ocid();
    }

    /**
     * Get the domain property: Virtual network address fully qualified domain name.
     * 
     * @return the domain value.
     */
    public String domain() {
        return this.innerProperties() == null ? null : this.innerProperties().domain();
    }

    /**
     * Get the lifecycleDetails property: Additional information about the current lifecycle state of the application
     * virtual IP (VIP) address.
     * 
     * @return the lifecycleDetails value.
     */
    public String lifecycleDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleDetails();
    }

    /**
     * Get the provisioningState property: Azure resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    public AzureResourceProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the lifecycleState property: virtual network address lifecycle state.
     * 
     * @return the lifecycleState value.
     */
    public VirtualNetworkAddressLifecycleState lifecycleState() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleState();
    }

    /**
     * Get the timeAssigned property: The date and time when the create operation for the application virtual IP (VIP)
     * address completed.
     * 
     * @return the timeAssigned value.
     */
    public OffsetDateTime timeAssigned() {
        return this.innerProperties() == null ? null : this.innerProperties().timeAssigned();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

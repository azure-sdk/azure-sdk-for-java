// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storageactions.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Storage task preview container properties.
 */
@Fluent
public final class StorageTaskPreviewContainerProperties {
    /*
     * Name of test container
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * metadata key value pairs to be tested for a match against the provided condition.
     */
    @JsonProperty(value = "metadata")
    private List<StorageTaskPreviewKeyValueProperties> metadata;

    /**
     * Creates an instance of StorageTaskPreviewContainerProperties class.
     */
    public StorageTaskPreviewContainerProperties() {
    }

    /**
     * Get the name property: Name of test container.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of test container.
     * 
     * @param name the name value to set.
     * @return the StorageTaskPreviewContainerProperties object itself.
     */
    public StorageTaskPreviewContainerProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the metadata property: metadata key value pairs to be tested for a match against the provided condition.
     * 
     * @return the metadata value.
     */
    public List<StorageTaskPreviewKeyValueProperties> metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: metadata key value pairs to be tested for a match against the provided condition.
     * 
     * @param metadata the metadata value to set.
     * @return the StorageTaskPreviewContainerProperties object itself.
     */
    public StorageTaskPreviewContainerProperties withMetadata(List<StorageTaskPreviewKeyValueProperties> metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metadata() != null) {
            metadata().forEach(e -> e.validate());
        }
    }
}

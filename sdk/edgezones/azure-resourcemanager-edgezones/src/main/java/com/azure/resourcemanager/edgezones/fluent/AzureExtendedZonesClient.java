// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgezones.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.edgezones.fluent.models.AzureExtendedZoneInner;

/**
 * An instance of this class provides access to all the operations defined in AzureExtendedZonesClient.
 */
public interface AzureExtendedZonesClient {
    /**
     * Lists the Azure Extended Zones for a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AzureExtendedZone list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureExtendedZoneInner> list();

    /**
     * Lists the Azure Extended Zones for a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AzureExtendedZone list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AzureExtendedZoneInner> list(Context context);

    /**
     * Get an Azure Extended Zone for a subscription.
     * 
     * @param azureExtendedZoneName The name of the AzureExtendedZone.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Extended Zone for a subscription along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureExtendedZoneInner> getWithResponse(String azureExtendedZoneName, Context context);

    /**
     * Get an Azure Extended Zone for a subscription.
     * 
     * @param azureExtendedZoneName The name of the AzureExtendedZone.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Extended Zone for a subscription.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureExtendedZoneInner get(String azureExtendedZoneName);

    /**
     * Registers a subscription for an Azure Extended Zone.
     * 
     * @param azureExtendedZoneName The name of the AzureExtendedZone.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an AzureExtendedZone resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureExtendedZoneInner> registerWithResponse(String azureExtendedZoneName, Context context);

    /**
     * Registers a subscription for an Azure Extended Zone.
     * 
     * @param azureExtendedZoneName The name of the AzureExtendedZone.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an AzureExtendedZone resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureExtendedZoneInner register(String azureExtendedZoneName);

    /**
     * Unregisters a subscription for an Azure Extended Zone.
     * 
     * @param azureExtendedZoneName The name of the AzureExtendedZone.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an AzureExtendedZone resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AzureExtendedZoneInner> unregisterWithResponse(String azureExtendedZoneName, Context context);

    /**
     * Unregisters a subscription for an Azure Extended Zone.
     * 
     * @param azureExtendedZoneName The name of the AzureExtendedZone.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an AzureExtendedZone resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AzureExtendedZoneInner unregister(String azureExtendedZoneName);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgezones.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.edgezones.EdgeZonesManager;
import com.azure.resourcemanager.edgezones.models.ExtendedZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ExtendedZonesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"registrationState\":\"NotRegistered\",\"displayName\":\"eebvmgxsab\",\"regionalDisplayName\":\"yqduujit\",\"regionType\":\"jczdzevndh\",\"regionCategory\":\"rwpdappdsbdkvwrw\",\"geography\":\"feusnhut\",\"geographyGroup\":\"eltmrldhugjzzdat\",\"longitude\":\"xhocdgeablgphuti\",\"latitude\":\"ndv\",\"homeLocation\":\"aozwyiftyhxhu\"},\"id\":\"k\",\"name\":\"tyxolniwpwc\",\"type\":\"kjfkg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        EdgeZonesManager manager = EdgeZonesManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ExtendedZone response
            = manager.extendedZones().getWithResponse("nzl", com.azure.core.util.Context.NONE).getValue();

    }
}

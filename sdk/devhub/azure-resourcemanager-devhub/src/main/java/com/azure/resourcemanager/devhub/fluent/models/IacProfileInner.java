// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.devhub.models.AuthorizationStatus;
import com.azure.resourcemanager.devhub.models.IacTemplateProperties;
import com.azure.resourcemanager.devhub.models.PullRequestStatus;
import com.azure.resourcemanager.devhub.models.StageProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * IacProfile
 * 
 * Resource representation of a IacProfile.
 */
@Fluent
public final class IacProfileInner extends Resource {
    /*
     * Properties of a IacProfile.
     */
    @JsonProperty(value = "properties")
    private IacProfileProperties innerProperties;

    /*
     * A unique read-only string that changes whenever the resource is updated.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of IacProfileInner class.
     */
    public IacProfileInner() {
    }

    /**
     * Get the innerProperties property: Properties of a IacProfile.
     * 
     * @return the innerProperties value.
     */
    private IacProfileProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the etag property: A unique read-only string that changes whenever the resource is updated.
     * 
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IacProfileInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IacProfileInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the stages property: The stages property.
     * 
     * @return the stages value.
     */
    public List<StageProperties> stages() {
        return this.innerProperties() == null ? null : this.innerProperties().stages();
    }

    /**
     * Set the stages property: The stages property.
     * 
     * @param stages the stages value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withStages(List<StageProperties> stages) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withStages(stages);
        return this;
    }

    /**
     * Get the templates property: The templates property.
     * 
     * @return the templates value.
     */
    public List<IacTemplateProperties> templates() {
        return this.innerProperties() == null ? null : this.innerProperties().templates();
    }

    /**
     * Set the templates property: The templates property.
     * 
     * @param templates the templates value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withTemplates(List<IacTemplateProperties> templates) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withTemplates(templates);
        return this;
    }

    /**
     * Get the repositoryName property: The name of the repository the IacProfile is associated with.
     * 
     * Repository Name.
     * 
     * @return the repositoryName value.
     */
    public String repositoryName() {
        return this.innerProperties() == null ? null : this.innerProperties().repositoryName();
    }

    /**
     * Set the repositoryName property: The name of the repository the IacProfile is associated with.
     * 
     * Repository Name.
     * 
     * @param repositoryName the repositoryName value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withRepositoryName(String repositoryName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withRepositoryName(repositoryName);
        return this;
    }

    /**
     * Get the repositoryMainBranch property: The name of the main branch of the repository the IacProfile is associated
     * with.
     * 
     * Repository Main Branch.
     * 
     * @return the repositoryMainBranch value.
     */
    public String repositoryMainBranch() {
        return this.innerProperties() == null ? null : this.innerProperties().repositoryMainBranch();
    }

    /**
     * Set the repositoryMainBranch property: The name of the main branch of the repository the IacProfile is associated
     * with.
     * 
     * Repository Main Branch.
     * 
     * @param repositoryMainBranch the repositoryMainBranch value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withRepositoryMainBranch(String repositoryMainBranch) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withRepositoryMainBranch(repositoryMainBranch);
        return this;
    }

    /**
     * Get the repositoryOwner property: The owner of the repository the IacProfile is associated with.
     * 
     * Repository Owner.
     * 
     * @return the repositoryOwner value.
     */
    public String repositoryOwner() {
        return this.innerProperties() == null ? null : this.innerProperties().repositoryOwner();
    }

    /**
     * Set the repositoryOwner property: The owner of the repository the IacProfile is associated with.
     * 
     * Repository Owner.
     * 
     * @param repositoryOwner the repositoryOwner value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withRepositoryOwner(String repositoryOwner) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withRepositoryOwner(repositoryOwner);
        return this;
    }

    /**
     * Get the authStatus property: Determines the authorization status of requests.
     * 
     * @return the authStatus value.
     */
    public AuthorizationStatus authStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().authStatus();
    }

    /**
     * Get the pullNumber property: The number associated with the submitted pull request.
     * 
     * @return the pullNumber value.
     */
    public Integer pullNumber() {
        return this.innerProperties() == null ? null : this.innerProperties().pullNumber();
    }

    /**
     * Get the prStatus property: The status of the Pull Request submitted against the users repository.
     * 
     * @return the prStatus value.
     */
    public PullRequestStatus prStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().prStatus();
    }

    /**
     * Get the branchName property: The name of the branch current operation is associated with.
     * 
     * Repository Branch Name.
     * 
     * @return the branchName value.
     */
    public String branchName() {
        return this.innerProperties() == null ? null : this.innerProperties().branchName();
    }

    /**
     * Set the branchName property: The name of the branch current operation is associated with.
     * 
     * Repository Branch Name.
     * 
     * @param branchName the branchName value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withBranchName(String branchName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withBranchName(branchName);
        return this;
    }

    /**
     * Get the storageAccountSubscription property: The subscription id of the storage account that save terraform
     * state.
     * 
     * Terraform Storage Account Subscription.
     * 
     * @return the storageAccountSubscription value.
     */
    public String storageAccountSubscription() {
        return this.innerProperties() == null ? null : this.innerProperties().storageAccountSubscription();
    }

    /**
     * Set the storageAccountSubscription property: The subscription id of the storage account that save terraform
     * state.
     * 
     * Terraform Storage Account Subscription.
     * 
     * @param storageAccountSubscription the storageAccountSubscription value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withStorageAccountSubscription(String storageAccountSubscription) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withStorageAccountSubscription(storageAccountSubscription);
        return this;
    }

    /**
     * Get the storageAccountResourceGroup property: The resource group of the storage account that save terraform
     * state.
     * 
     * Terraform Storage Account Resource Group.
     * 
     * @return the storageAccountResourceGroup value.
     */
    public String storageAccountResourceGroup() {
        return this.innerProperties() == null ? null : this.innerProperties().storageAccountResourceGroup();
    }

    /**
     * Set the storageAccountResourceGroup property: The resource group of the storage account that save terraform
     * state.
     * 
     * Terraform Storage Account Resource Group.
     * 
     * @param storageAccountResourceGroup the storageAccountResourceGroup value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withStorageAccountResourceGroup(String storageAccountResourceGroup) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withStorageAccountResourceGroup(storageAccountResourceGroup);
        return this;
    }

    /**
     * Get the storageAccountName property: The name of the storage account that save terraform state.
     * 
     * Terraform Storage Account Name.
     * 
     * @return the storageAccountName value.
     */
    public String storageAccountName() {
        return this.innerProperties() == null ? null : this.innerProperties().storageAccountName();
    }

    /**
     * Set the storageAccountName property: The name of the storage account that save terraform state.
     * 
     * Terraform Storage Account Name.
     * 
     * @param storageAccountName the storageAccountName value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withStorageAccountName(String storageAccountName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withStorageAccountName(storageAccountName);
        return this;
    }

    /**
     * Get the storageContainerName property: The name of the container that save terraform state.
     * 
     * Terraform Container Name.
     * 
     * @return the storageContainerName value.
     */
    public String storageContainerName() {
        return this.innerProperties() == null ? null : this.innerProperties().storageContainerName();
    }

    /**
     * Set the storageContainerName property: The name of the container that save terraform state.
     * 
     * Terraform Container Name.
     * 
     * @param storageContainerName the storageContainerName value to set.
     * @return the IacProfileInner object itself.
     */
    public IacProfileInner withStorageContainerName(String storageContainerName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new IacProfileProperties();
        }
        this.innerProperties().withStorageContainerName(storageContainerName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

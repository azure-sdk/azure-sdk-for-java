// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The ScaleTemplateRequest model.
 */
@Fluent
public final class ScaleTemplateRequest {
    /*
     * The name of the template.
     * 
     * Template Name
     */
    @JsonProperty(value = "templateName")
    private String templateName;

    /*
     * The scaleRequirement property.
     */
    @JsonProperty(value = "scaleRequirement")
    private List<ScaleProperty> scaleRequirement;

    /**
     * Creates an instance of ScaleTemplateRequest class.
     */
    public ScaleTemplateRequest() {
    }

    /**
     * Get the templateName property: The name of the template.
     * 
     * Template Name.
     * 
     * @return the templateName value.
     */
    public String templateName() {
        return this.templateName;
    }

    /**
     * Set the templateName property: The name of the template.
     * 
     * Template Name.
     * 
     * @param templateName the templateName value to set.
     * @return the ScaleTemplateRequest object itself.
     */
    public ScaleTemplateRequest withTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }

    /**
     * Get the scaleRequirement property: The scaleRequirement property.
     * 
     * @return the scaleRequirement value.
     */
    public List<ScaleProperty> scaleRequirement() {
        return this.scaleRequirement;
    }

    /**
     * Set the scaleRequirement property: The scaleRequirement property.
     * 
     * @param scaleRequirement the scaleRequirement value to set.
     * @return the ScaleTemplateRequest object itself.
     */
    public ScaleTemplateRequest withScaleRequirement(List<ScaleProperty> scaleRequirement) {
        this.scaleRequirement = scaleRequirement;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scaleRequirement() != null) {
            scaleRequirement().forEach(e -> e.validate());
        }
    }
}

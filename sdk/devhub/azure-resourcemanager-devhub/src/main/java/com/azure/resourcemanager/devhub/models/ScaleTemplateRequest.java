// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ScaleTemplateRequest model.
 */
@Fluent
public final class ScaleTemplateRequest implements JsonSerializable<ScaleTemplateRequest> {
    /*
     * Template Name
     */
    private String templateName;

    /*
     * The scaleProperties property.
     */
    private List<ScaleProperty> scaleProperties;

    /**
     * Creates an instance of ScaleTemplateRequest class.
     */
    public ScaleTemplateRequest() {
    }

    /**
     * Get the templateName property: Template Name.
     * 
     * @return the templateName value.
     */
    public String templateName() {
        return this.templateName;
    }

    /**
     * Set the templateName property: Template Name.
     * 
     * @param templateName the templateName value to set.
     * @return the ScaleTemplateRequest object itself.
     */
    public ScaleTemplateRequest withTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }

    /**
     * Get the scaleProperties property: The scaleProperties property.
     * 
     * @return the scaleProperties value.
     */
    public List<ScaleProperty> scaleProperties() {
        return this.scaleProperties;
    }

    /**
     * Set the scaleProperties property: The scaleProperties property.
     * 
     * @param scaleProperties the scaleProperties value to set.
     * @return the ScaleTemplateRequest object itself.
     */
    public ScaleTemplateRequest withScaleProperties(List<ScaleProperty> scaleProperties) {
        this.scaleProperties = scaleProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scaleProperties() != null) {
            scaleProperties().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("templateName", this.templateName);
        jsonWriter.writeArrayField("scaleProperties", this.scaleProperties,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScaleTemplateRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScaleTemplateRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ScaleTemplateRequest.
     */
    public static ScaleTemplateRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScaleTemplateRequest deserializedScaleTemplateRequest = new ScaleTemplateRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("templateName".equals(fieldName)) {
                    deserializedScaleTemplateRequest.templateName = reader.getString();
                } else if ("scaleProperties".equals(fieldName)) {
                    List<ScaleProperty> scaleProperties = reader.readArray(reader1 -> ScaleProperty.fromJson(reader1));
                    deserializedScaleTemplateRequest.scaleProperties = scaleProperties;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScaleTemplateRequest;
        });
    }
}

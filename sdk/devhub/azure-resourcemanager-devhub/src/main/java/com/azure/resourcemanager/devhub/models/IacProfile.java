// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devhub.fluent.models.IacProfileInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of IacProfile.
 */
public interface IacProfile {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     * 
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the stages property: The stages property.
     * 
     * @return the stages value.
     */
    List<StageProperties> stages();

    /**
     * Gets the templates property: The templates property.
     * 
     * @return the templates value.
     */
    List<IacTemplateProperties> templates();

    /**
     * Gets the repositoryName property: The name of the repository the IacProfile is associated with.
     * 
     * Repository Name.
     * 
     * @return the repositoryName value.
     */
    String repositoryName();

    /**
     * Gets the repositoryMainBranch property: The name of the main branch of the repository the IacProfile is
     * associated with.
     * 
     * Repository Main Branch.
     * 
     * @return the repositoryMainBranch value.
     */
    String repositoryMainBranch();

    /**
     * Gets the repositoryOwner property: The owner of the repository the IacProfile is associated with.
     * 
     * Repository Owner.
     * 
     * @return the repositoryOwner value.
     */
    String repositoryOwner();

    /**
     * Gets the authStatus property: Determines the authorization status of requests.
     * 
     * @return the authStatus value.
     */
    AuthorizationStatus authStatus();

    /**
     * Gets the pullNumber property: The number associated with the submitted pull request.
     * 
     * @return the pullNumber value.
     */
    Integer pullNumber();

    /**
     * Gets the prStatus property: The status of the Pull Request submitted against the users repository.
     * 
     * @return the prStatus value.
     */
    PullRequestStatus prStatus();

    /**
     * Gets the branchName property: The name of the branch current operation is associated with.
     * 
     * Repository Branch Name.
     * 
     * @return the branchName value.
     */
    String branchName();

    /**
     * Gets the storageAccountSubscription property: The subscription id of the storage account that save terraform
     * state.
     * 
     * Terraform Storage Account Subscription.
     * 
     * @return the storageAccountSubscription value.
     */
    String storageAccountSubscription();

    /**
     * Gets the storageAccountResourceGroup property: The resource group of the storage account that save terraform
     * state.
     * 
     * Terraform Storage Account Resource Group.
     * 
     * @return the storageAccountResourceGroup value.
     */
    String storageAccountResourceGroup();

    /**
     * Gets the storageAccountName property: The name of the storage account that save terraform state.
     * 
     * Terraform Storage Account Name.
     * 
     * @return the storageAccountName value.
     */
    String storageAccountName();

    /**
     * Gets the storageContainerName property: The name of the container that save terraform state.
     * 
     * Terraform Container Name.
     * 
     * @return the storageContainerName value.
     */
    String storageContainerName();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.devhub.fluent.models.IacProfileInner object.
     * 
     * @return the inner object.
     */
    IacProfileInner innerModel();

    /**
     * The entirety of the IacProfile definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The IacProfile definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the IacProfile definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the IacProfile definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the IacProfile definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the IacProfile definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithStages, DefinitionStages.WithTemplates,
            DefinitionStages.WithRepositoryName, DefinitionStages.WithRepositoryMainBranch,
            DefinitionStages.WithRepositoryOwner, DefinitionStages.WithBranchName,
            DefinitionStages.WithStorageAccountSubscription, DefinitionStages.WithStorageAccountResourceGroup,
            DefinitionStages.WithStorageAccountName, DefinitionStages.WithStorageContainerName {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            IacProfile create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IacProfile create(Context context);
        }

        /**
         * The stage of the IacProfile definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the IacProfile definition allowing to specify stages.
         */
        interface WithStages {
            /**
             * Specifies the stages property: The stages property..
             * 
             * @param stages The stages property.
             * @return the next definition stage.
             */
            WithCreate withStages(List<StageProperties> stages);
        }

        /**
         * The stage of the IacProfile definition allowing to specify templates.
         */
        interface WithTemplates {
            /**
             * Specifies the templates property: The templates property..
             * 
             * @param templates The templates property.
             * @return the next definition stage.
             */
            WithCreate withTemplates(List<IacTemplateProperties> templates);
        }

        /**
         * The stage of the IacProfile definition allowing to specify repositoryName.
         */
        interface WithRepositoryName {
            /**
             * Specifies the repositoryName property: The name of the repository the IacProfile is associated with.
             * 
             * Repository Name.
             * 
             * @param repositoryName The name of the repository the IacProfile is associated with.
             * 
             * Repository Name.
             * @return the next definition stage.
             */
            WithCreate withRepositoryName(String repositoryName);
        }

        /**
         * The stage of the IacProfile definition allowing to specify repositoryMainBranch.
         */
        interface WithRepositoryMainBranch {
            /**
             * Specifies the repositoryMainBranch property: The name of the main branch of the repository the IacProfile
             * is associated with.
             * 
             * Repository Main Branch.
             * 
             * @param repositoryMainBranch The name of the main branch of the repository the IacProfile is associated
             * with.
             * 
             * Repository Main Branch.
             * @return the next definition stage.
             */
            WithCreate withRepositoryMainBranch(String repositoryMainBranch);
        }

        /**
         * The stage of the IacProfile definition allowing to specify repositoryOwner.
         */
        interface WithRepositoryOwner {
            /**
             * Specifies the repositoryOwner property: The owner of the repository the IacProfile is associated with.
             * 
             * Repository Owner.
             * 
             * @param repositoryOwner The owner of the repository the IacProfile is associated with.
             * 
             * Repository Owner.
             * @return the next definition stage.
             */
            WithCreate withRepositoryOwner(String repositoryOwner);
        }

        /**
         * The stage of the IacProfile definition allowing to specify branchName.
         */
        interface WithBranchName {
            /**
             * Specifies the branchName property: The name of the branch current operation is associated with.
             * 
             * Repository Branch Name.
             * 
             * @param branchName The name of the branch current operation is associated with.
             * 
             * Repository Branch Name.
             * @return the next definition stage.
             */
            WithCreate withBranchName(String branchName);
        }

        /**
         * The stage of the IacProfile definition allowing to specify storageAccountSubscription.
         */
        interface WithStorageAccountSubscription {
            /**
             * Specifies the storageAccountSubscription property: The subscription id of the storage account that save
             * terraform state.
             * 
             * Terraform Storage Account Subscription.
             * 
             * @param storageAccountSubscription The subscription id of the storage account that save terraform state.
             * 
             * Terraform Storage Account Subscription.
             * @return the next definition stage.
             */
            WithCreate withStorageAccountSubscription(String storageAccountSubscription);
        }

        /**
         * The stage of the IacProfile definition allowing to specify storageAccountResourceGroup.
         */
        interface WithStorageAccountResourceGroup {
            /**
             * Specifies the storageAccountResourceGroup property: The resource group of the storage account that save
             * terraform state.
             * 
             * Terraform Storage Account Resource Group.
             * 
             * @param storageAccountResourceGroup The resource group of the storage account that save terraform state.
             * 
             * Terraform Storage Account Resource Group.
             * @return the next definition stage.
             */
            WithCreate withStorageAccountResourceGroup(String storageAccountResourceGroup);
        }

        /**
         * The stage of the IacProfile definition allowing to specify storageAccountName.
         */
        interface WithStorageAccountName {
            /**
             * Specifies the storageAccountName property: The name of the storage account that save terraform state.
             * 
             * Terraform Storage Account Name.
             * 
             * @param storageAccountName The name of the storage account that save terraform state.
             * 
             * Terraform Storage Account Name.
             * @return the next definition stage.
             */
            WithCreate withStorageAccountName(String storageAccountName);
        }

        /**
         * The stage of the IacProfile definition allowing to specify storageContainerName.
         */
        interface WithStorageContainerName {
            /**
             * Specifies the storageContainerName property: The name of the container that save terraform state.
             * 
             * Terraform Container Name.
             * 
             * @param storageContainerName The name of the container that save terraform state.
             * 
             * Terraform Container Name.
             * @return the next definition stage.
             */
            WithCreate withStorageContainerName(String storageContainerName);
        }
    }

    /**
     * Begins update for the IacProfile resource.
     * 
     * @return the stage of resource update.
     */
    IacProfile.Update update();

    /**
     * The template for IacProfile update.
     */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        IacProfile apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IacProfile apply(Context context);
    }

    /**
     * The IacProfile update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the IacProfile update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Dictionary of &lt;string&gt;.
             * 
             * @param tags Dictionary of &lt;string&gt;.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    IacProfile refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IacProfile refresh(Context context);

    /**
     * Export a template.
     * 
     * @param parameters The parameters parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<PrLinkResponse> exportWithResponse(ExportTemplateRequest parameters, Context context);

    /**
     * Export a template.
     * 
     * @param parameters The parameters parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    PrLinkResponse export(ExportTemplateRequest parameters);

    /**
     * Scale by template.
     * 
     * @param parameters The parameters parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<PrLinkResponse> scaleWithResponse(ScaleTemplateRequest parameters, Context context);

    /**
     * Scale by template.
     * 
     * @param parameters The parameters parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    PrLinkResponse scale(ScaleTemplateRequest parameters);

    /**
     * Sync template.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> syncWithResponse(Context context);

    /**
     * Sync template.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void sync();
}

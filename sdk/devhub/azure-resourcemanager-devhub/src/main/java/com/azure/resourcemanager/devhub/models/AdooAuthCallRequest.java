// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * ADOOAuth request object.
 */
@Fluent
public final class AdooAuthCallRequest implements JsonSerializable<AdooAuthCallRequest> {
    /*
     * The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
     */
    private String redirectUrl;

    /**
     * Creates an instance of AdooAuthCallRequest class.
     */
    public AdooAuthCallRequest() {
    }

    /**
     * Get the redirectUrl property: The URL the client will redirect to on successful authentication. If empty, no
     * redirect will occur.
     * 
     * @return the redirectUrl value.
     */
    public String redirectUrl() {
        return this.redirectUrl;
    }

    /**
     * Set the redirectUrl property: The URL the client will redirect to on successful authentication. If empty, no
     * redirect will occur.
     * 
     * @param redirectUrl the redirectUrl value to set.
     * @return the AdooAuthCallRequest object itself.
     */
    public AdooAuthCallRequest withRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("redirectUrl", this.redirectUrl);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdooAuthCallRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdooAuthCallRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdooAuthCallRequest.
     */
    public static AdooAuthCallRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdooAuthCallRequest deserializedAdooAuthCallRequest = new AdooAuthCallRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("redirectUrl".equals(fieldName)) {
                    deserializedAdooAuthCallRequest.redirectUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdooAuthCallRequest;
        });
    }
}

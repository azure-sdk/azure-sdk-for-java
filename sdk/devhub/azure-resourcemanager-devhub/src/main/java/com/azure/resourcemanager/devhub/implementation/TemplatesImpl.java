// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devhub.fluent.TemplatesClient;
import com.azure.resourcemanager.devhub.fluent.models.TemplateInner;
import com.azure.resourcemanager.devhub.models.Template;
import com.azure.resourcemanager.devhub.models.Templates;

public final class TemplatesImpl implements Templates {
    private static final ClientLogger LOGGER = new ClientLogger(TemplatesImpl.class);

    private final TemplatesClient innerClient;

    private final com.azure.resourcemanager.devhub.DevHubManager serviceManager;

    public TemplatesImpl(TemplatesClient innerClient, com.azure.resourcemanager.devhub.DevHubManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Template> list() {
        PagedIterable<TemplateInner> inner = this.serviceClient().list();
        return ResourceManagerUtils.mapPage(inner, inner1 -> new TemplateImpl(inner1, this.manager()));
    }

    public PagedIterable<Template> list(Context context) {
        PagedIterable<TemplateInner> inner = this.serviceClient().list(context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new TemplateImpl(inner1, this.manager()));
    }

    public Response<Template> getWithResponse(String templateName, Context context) {
        Response<TemplateInner> inner = this.serviceClient().getWithResponse(templateName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new TemplateImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Template get(String templateName) {
        TemplateInner inner = this.serviceClient().get(templateName);
        if (inner != null) {
            return new TemplateImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private TemplatesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.devhub.DevHubManager manager() {
        return this.serviceManager;
    }
}

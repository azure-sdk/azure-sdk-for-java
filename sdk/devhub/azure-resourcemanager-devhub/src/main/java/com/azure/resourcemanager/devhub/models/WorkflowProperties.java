// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Workflow properties.
 */
@Fluent
public final class WorkflowProperties implements JsonSerializable<WorkflowProperties> {
    /*
     * Profile of a github workflow.
     */
    private GitHubWorkflowProfile githubWorkflowProfile;

    /*
     * Properties for generating artifacts like dockerfile and manifests.
     */
    private ArtifactGenerationProperties artifactGenerationProperties;

    /*
     * Profile of an azure pipeline.
     */
    private AzurePipelineProfile azurePipelineProfile;

    /**
     * Creates an instance of WorkflowProperties class.
     */
    public WorkflowProperties() {
    }

    /**
     * Get the githubWorkflowProfile property: Profile of a github workflow.
     * 
     * @return the githubWorkflowProfile value.
     */
    public GitHubWorkflowProfile githubWorkflowProfile() {
        return this.githubWorkflowProfile;
    }

    /**
     * Set the githubWorkflowProfile property: Profile of a github workflow.
     * 
     * @param githubWorkflowProfile the githubWorkflowProfile value to set.
     * @return the WorkflowProperties object itself.
     */
    public WorkflowProperties withGithubWorkflowProfile(GitHubWorkflowProfile githubWorkflowProfile) {
        this.githubWorkflowProfile = githubWorkflowProfile;
        return this;
    }

    /**
     * Get the artifactGenerationProperties property: Properties for generating artifacts like dockerfile and manifests.
     * 
     * @return the artifactGenerationProperties value.
     */
    public ArtifactGenerationProperties artifactGenerationProperties() {
        return this.artifactGenerationProperties;
    }

    /**
     * Set the artifactGenerationProperties property: Properties for generating artifacts like dockerfile and manifests.
     * 
     * @param artifactGenerationProperties the artifactGenerationProperties value to set.
     * @return the WorkflowProperties object itself.
     */
    public WorkflowProperties
        withArtifactGenerationProperties(ArtifactGenerationProperties artifactGenerationProperties) {
        this.artifactGenerationProperties = artifactGenerationProperties;
        return this;
    }

    /**
     * Get the azurePipelineProfile property: Profile of an azure pipeline.
     * 
     * @return the azurePipelineProfile value.
     */
    public AzurePipelineProfile azurePipelineProfile() {
        return this.azurePipelineProfile;
    }

    /**
     * Set the azurePipelineProfile property: Profile of an azure pipeline.
     * 
     * @param azurePipelineProfile the azurePipelineProfile value to set.
     * @return the WorkflowProperties object itself.
     */
    public WorkflowProperties withAzurePipelineProfile(AzurePipelineProfile azurePipelineProfile) {
        this.azurePipelineProfile = azurePipelineProfile;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (githubWorkflowProfile() != null) {
            githubWorkflowProfile().validate();
        }
        if (artifactGenerationProperties() != null) {
            artifactGenerationProperties().validate();
        }
        if (azurePipelineProfile() != null) {
            azurePipelineProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("githubWorkflowProfile", this.githubWorkflowProfile);
        jsonWriter.writeJsonField("artifactGenerationProperties", this.artifactGenerationProperties);
        jsonWriter.writeJsonField("azurePipelineProfile", this.azurePipelineProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkflowProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkflowProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkflowProperties.
     */
    public static WorkflowProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkflowProperties deserializedWorkflowProperties = new WorkflowProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("githubWorkflowProfile".equals(fieldName)) {
                    deserializedWorkflowProperties.githubWorkflowProfile = GitHubWorkflowProfile.fromJson(reader);
                } else if ("artifactGenerationProperties".equals(fieldName)) {
                    deserializedWorkflowProperties.artifactGenerationProperties
                        = ArtifactGenerationProperties.fromJson(reader);
                } else if ("azurePipelineProfile".equals(fieldName)) {
                    deserializedWorkflowProperties.azurePipelineProfile = AzurePipelineProfile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkflowProperties;
        });
    }
}

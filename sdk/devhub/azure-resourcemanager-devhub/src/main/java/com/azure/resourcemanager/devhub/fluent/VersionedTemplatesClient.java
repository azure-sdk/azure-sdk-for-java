// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devhub.fluent.models.GenerateVersionedTemplateResponseInner;
import com.azure.resourcemanager.devhub.fluent.models.VersionedTemplateInner;
import java.util.Map;

/**
 * An instance of this class provides access to all the operations defined in VersionedTemplatesClient.
 */
public interface VersionedTemplatesClient {
    /**
     * Gets a list of VersionedTemplate.
     * 
     * @param templateName The name of the Template.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of VersionedTemplate as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VersionedTemplateInner> list(String templateName);

    /**
     * Gets a list of VersionedTemplate.
     * 
     * @param templateName The name of the Template.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of VersionedTemplate as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VersionedTemplateInner> list(String templateName, Context context);

    /**
     * Gets a VersionedTemplate.
     * 
     * @param templateName The name of the Template.
     * @param templateVersion The template version.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a VersionedTemplate along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VersionedTemplateInner> getWithResponse(String templateName, String templateVersion, Context context);

    /**
     * Gets a VersionedTemplate.
     * 
     * @param templateName The name of the Template.
     * @param templateVersion The template version.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a VersionedTemplate.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VersionedTemplateInner get(String templateName, String templateVersion);

    /**
     * Generates a VersionedTemplate.
     * 
     * @param templateName The name of the Template.
     * @param templateVersion The template version.
     * @param parameters The parameters parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return generated template files returned as a map&lt;path string,content string&gt; along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GenerateVersionedTemplateResponseInner> generateWithResponse(String templateName, String templateVersion,
        Map<String, String> parameters, Context context);

    /**
     * Generates a VersionedTemplate.
     * 
     * @param templateName The name of the Template.
     * @param templateVersion The template version.
     * @param parameters The parameters parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return generated template files returned as a map&lt;path string,content string&gt;.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GenerateVersionedTemplateResponseInner generate(String templateName, String templateVersion,
        Map<String, String> parameters);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Terraform backend profile.
 */
@Fluent
public final class TerraformProfile implements JsonSerializable<TerraformProfile> {
    /*
     * Terraform Storage Account Subscription
     */
    private String storageAccountSubscription;

    /*
     * Terraform Storage Account Resource Group
     */
    private String storageAccountResourceGroup;

    /*
     * Terraform Storage Account Name
     */
    private String storageAccountName;

    /*
     * Terraform Container Name
     */
    private String storageContainerName;

    /**
     * Creates an instance of TerraformProfile class.
     */
    public TerraformProfile() {
    }

    /**
     * Get the storageAccountSubscription property: Terraform Storage Account Subscription.
     * 
     * @return the storageAccountSubscription value.
     */
    public String storageAccountSubscription() {
        return this.storageAccountSubscription;
    }

    /**
     * Set the storageAccountSubscription property: Terraform Storage Account Subscription.
     * 
     * @param storageAccountSubscription the storageAccountSubscription value to set.
     * @return the TerraformProfile object itself.
     */
    public TerraformProfile withStorageAccountSubscription(String storageAccountSubscription) {
        this.storageAccountSubscription = storageAccountSubscription;
        return this;
    }

    /**
     * Get the storageAccountResourceGroup property: Terraform Storage Account Resource Group.
     * 
     * @return the storageAccountResourceGroup value.
     */
    public String storageAccountResourceGroup() {
        return this.storageAccountResourceGroup;
    }

    /**
     * Set the storageAccountResourceGroup property: Terraform Storage Account Resource Group.
     * 
     * @param storageAccountResourceGroup the storageAccountResourceGroup value to set.
     * @return the TerraformProfile object itself.
     */
    public TerraformProfile withStorageAccountResourceGroup(String storageAccountResourceGroup) {
        this.storageAccountResourceGroup = storageAccountResourceGroup;
        return this;
    }

    /**
     * Get the storageAccountName property: Terraform Storage Account Name.
     * 
     * @return the storageAccountName value.
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    /**
     * Set the storageAccountName property: Terraform Storage Account Name.
     * 
     * @param storageAccountName the storageAccountName value to set.
     * @return the TerraformProfile object itself.
     */
    public TerraformProfile withStorageAccountName(String storageAccountName) {
        this.storageAccountName = storageAccountName;
        return this;
    }

    /**
     * Get the storageContainerName property: Terraform Container Name.
     * 
     * @return the storageContainerName value.
     */
    public String storageContainerName() {
        return this.storageContainerName;
    }

    /**
     * Set the storageContainerName property: Terraform Container Name.
     * 
     * @param storageContainerName the storageContainerName value to set.
     * @return the TerraformProfile object itself.
     */
    public TerraformProfile withStorageContainerName(String storageContainerName) {
        this.storageContainerName = storageContainerName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("storageAccountSubscription", this.storageAccountSubscription);
        jsonWriter.writeStringField("storageAccountResourceGroup", this.storageAccountResourceGroup);
        jsonWriter.writeStringField("storageAccountName", this.storageAccountName);
        jsonWriter.writeStringField("storageContainerName", this.storageContainerName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TerraformProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TerraformProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the TerraformProfile.
     */
    public static TerraformProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TerraformProfile deserializedTerraformProfile = new TerraformProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("storageAccountSubscription".equals(fieldName)) {
                    deserializedTerraformProfile.storageAccountSubscription = reader.getString();
                } else if ("storageAccountResourceGroup".equals(fieldName)) {
                    deserializedTerraformProfile.storageAccountResourceGroup = reader.getString();
                } else if ("storageAccountName".equals(fieldName)) {
                    deserializedTerraformProfile.storageAccountName = reader.getString();
                } else if ("storageContainerName".equals(fieldName)) {
                    deserializedTerraformProfile.storageContainerName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTerraformProfile;
        });
    }
}

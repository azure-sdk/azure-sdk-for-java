// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.devhub.models.AuthorizationStatus;
import com.azure.resourcemanager.devhub.models.PullRequestStatus;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GitHub Profile of a IacProfile.
 */
@Fluent
public final class IacGitHubProfile {
    /*
     * The name of the repository the IacProfile is associated with.
     * 
     * Repository Name
     */
    @JsonProperty(value = "repositoryName")
    private String repositoryName;

    /*
     * The name of the main branch of the repository the IacProfile is associated with.
     * 
     * Repository Main Branch
     */
    @JsonProperty(value = "repositoryMainBranch")
    private String repositoryMainBranch;

    /*
     * The owner of the repository the IacProfile is associated with.
     * 
     * Repository Owner
     */
    @JsonProperty(value = "repositoryOwner")
    private String repositoryOwner;

    /*
     * Determines the authorization status of requests.
     */
    @JsonProperty(value = "authStatus", access = JsonProperty.Access.WRITE_ONLY)
    private AuthorizationStatus authStatus;

    /*
     * The number associated with the submitted pull request.
     */
    @JsonProperty(value = "pullNumber", access = JsonProperty.Access.WRITE_ONLY)
    private Integer pullNumber;

    /*
     * The status of the Pull Request submitted against the users repository.
     */
    @JsonProperty(value = "prStatus", access = JsonProperty.Access.WRITE_ONLY)
    private PullRequestStatus prStatus;

    /*
     * The name of the branch current operation is associated with.
     * 
     * Repository Branch Name
     */
    @JsonProperty(value = "branchName")
    private String branchName;

    /**
     * Creates an instance of IacGitHubProfile class.
     */
    public IacGitHubProfile() {
    }

    /**
     * Get the repositoryName property: The name of the repository the IacProfile is associated with.
     * 
     * Repository Name.
     * 
     * @return the repositoryName value.
     */
    public String repositoryName() {
        return this.repositoryName;
    }

    /**
     * Set the repositoryName property: The name of the repository the IacProfile is associated with.
     * 
     * Repository Name.
     * 
     * @param repositoryName the repositoryName value to set.
     * @return the IacGitHubProfile object itself.
     */
    public IacGitHubProfile withRepositoryName(String repositoryName) {
        this.repositoryName = repositoryName;
        return this;
    }

    /**
     * Get the repositoryMainBranch property: The name of the main branch of the repository the IacProfile is associated
     * with.
     * 
     * Repository Main Branch.
     * 
     * @return the repositoryMainBranch value.
     */
    public String repositoryMainBranch() {
        return this.repositoryMainBranch;
    }

    /**
     * Set the repositoryMainBranch property: The name of the main branch of the repository the IacProfile is associated
     * with.
     * 
     * Repository Main Branch.
     * 
     * @param repositoryMainBranch the repositoryMainBranch value to set.
     * @return the IacGitHubProfile object itself.
     */
    public IacGitHubProfile withRepositoryMainBranch(String repositoryMainBranch) {
        this.repositoryMainBranch = repositoryMainBranch;
        return this;
    }

    /**
     * Get the repositoryOwner property: The owner of the repository the IacProfile is associated with.
     * 
     * Repository Owner.
     * 
     * @return the repositoryOwner value.
     */
    public String repositoryOwner() {
        return this.repositoryOwner;
    }

    /**
     * Set the repositoryOwner property: The owner of the repository the IacProfile is associated with.
     * 
     * Repository Owner.
     * 
     * @param repositoryOwner the repositoryOwner value to set.
     * @return the IacGitHubProfile object itself.
     */
    public IacGitHubProfile withRepositoryOwner(String repositoryOwner) {
        this.repositoryOwner = repositoryOwner;
        return this;
    }

    /**
     * Get the authStatus property: Determines the authorization status of requests.
     * 
     * @return the authStatus value.
     */
    public AuthorizationStatus authStatus() {
        return this.authStatus;
    }

    /**
     * Get the pullNumber property: The number associated with the submitted pull request.
     * 
     * @return the pullNumber value.
     */
    public Integer pullNumber() {
        return this.pullNumber;
    }

    /**
     * Get the prStatus property: The status of the Pull Request submitted against the users repository.
     * 
     * @return the prStatus value.
     */
    public PullRequestStatus prStatus() {
        return this.prStatus;
    }

    /**
     * Get the branchName property: The name of the branch current operation is associated with.
     * 
     * Repository Branch Name.
     * 
     * @return the branchName value.
     */
    public String branchName() {
        return this.branchName;
    }

    /**
     * Set the branchName property: The name of the branch current operation is associated with.
     * 
     * Repository Branch Name.
     * 
     * @param branchName the branchName value to set.
     * @return the IacGitHubProfile object itself.
     */
    public IacGitHubProfile withBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

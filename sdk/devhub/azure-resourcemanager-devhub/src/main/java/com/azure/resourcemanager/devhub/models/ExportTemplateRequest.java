// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ExportTemplateRequest model.
 */
@Fluent
public final class ExportTemplateRequest implements JsonSerializable<ExportTemplateRequest> {
    /*
     * Template Name
     */
    private String templateName;

    /*
     * The resourceGroupIds property.
     */
    private List<String> resourceGroupIds;

    /*
     * The siteId property.
     */
    private String siteId;

    /*
     * The instanceName property.
     */
    private String instanceName;

    /*
     * The instanceStage property.
     */
    private String instanceStage;

    /**
     * Creates an instance of ExportTemplateRequest class.
     */
    public ExportTemplateRequest() {
    }

    /**
     * Get the templateName property: Template Name.
     * 
     * @return the templateName value.
     */
    public String templateName() {
        return this.templateName;
    }

    /**
     * Set the templateName property: Template Name.
     * 
     * @param templateName the templateName value to set.
     * @return the ExportTemplateRequest object itself.
     */
    public ExportTemplateRequest withTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }

    /**
     * Get the resourceGroupIds property: The resourceGroupIds property.
     * 
     * @return the resourceGroupIds value.
     */
    public List<String> resourceGroupIds() {
        return this.resourceGroupIds;
    }

    /**
     * Set the resourceGroupIds property: The resourceGroupIds property.
     * 
     * @param resourceGroupIds the resourceGroupIds value to set.
     * @return the ExportTemplateRequest object itself.
     */
    public ExportTemplateRequest withResourceGroupIds(List<String> resourceGroupIds) {
        this.resourceGroupIds = resourceGroupIds;
        return this;
    }

    /**
     * Get the siteId property: The siteId property.
     * 
     * @return the siteId value.
     */
    public String siteId() {
        return this.siteId;
    }

    /**
     * Set the siteId property: The siteId property.
     * 
     * @param siteId the siteId value to set.
     * @return the ExportTemplateRequest object itself.
     */
    public ExportTemplateRequest withSiteId(String siteId) {
        this.siteId = siteId;
        return this;
    }

    /**
     * Get the instanceName property: The instanceName property.
     * 
     * @return the instanceName value.
     */
    public String instanceName() {
        return this.instanceName;
    }

    /**
     * Set the instanceName property: The instanceName property.
     * 
     * @param instanceName the instanceName value to set.
     * @return the ExportTemplateRequest object itself.
     */
    public ExportTemplateRequest withInstanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }

    /**
     * Get the instanceStage property: The instanceStage property.
     * 
     * @return the instanceStage value.
     */
    public String instanceStage() {
        return this.instanceStage;
    }

    /**
     * Set the instanceStage property: The instanceStage property.
     * 
     * @param instanceStage the instanceStage value to set.
     * @return the ExportTemplateRequest object itself.
     */
    public ExportTemplateRequest withInstanceStage(String instanceStage) {
        this.instanceStage = instanceStage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("templateName", this.templateName);
        jsonWriter.writeArrayField("resourceGroupIds", this.resourceGroupIds,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("siteId", this.siteId);
        jsonWriter.writeStringField("instanceName", this.instanceName);
        jsonWriter.writeStringField("instanceStage", this.instanceStage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExportTemplateRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExportTemplateRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExportTemplateRequest.
     */
    public static ExportTemplateRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExportTemplateRequest deserializedExportTemplateRequest = new ExportTemplateRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("templateName".equals(fieldName)) {
                    deserializedExportTemplateRequest.templateName = reader.getString();
                } else if ("resourceGroupIds".equals(fieldName)) {
                    List<String> resourceGroupIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedExportTemplateRequest.resourceGroupIds = resourceGroupIds;
                } else if ("siteId".equals(fieldName)) {
                    deserializedExportTemplateRequest.siteId = reader.getString();
                } else if ("instanceName".equals(fieldName)) {
                    deserializedExportTemplateRequest.instanceName = reader.getString();
                } else if ("instanceStage".equals(fieldName)) {
                    deserializedExportTemplateRequest.instanceStage = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExportTemplateRequest;
        });
    }
}

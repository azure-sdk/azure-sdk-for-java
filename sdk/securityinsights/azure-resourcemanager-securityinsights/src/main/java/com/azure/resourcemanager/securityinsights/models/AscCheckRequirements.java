// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.AscCheckRequirementsProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents ASC (Azure Security Center) requirements check request.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "kind", defaultImpl = AscCheckRequirements.class, visible = true)
@JsonTypeName("AzureSecurityCenter")
@Fluent
public final class AscCheckRequirements extends DataConnectorsCheckRequirements {
    /*
     * Describes the kind of connector to be checked.
     */
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private DataConnectorKind kind = DataConnectorKind.AZURE_SECURITY_CENTER;

    /*
     * ASC (Azure Security Center) requirements check properties.
     */
    @JsonProperty(value = "properties")
    private AscCheckRequirementsProperties innerProperties;

    /**
     * Creates an instance of AscCheckRequirements class.
     */
    public AscCheckRequirements() {
    }

    /**
     * Get the kind property: Describes the kind of connector to be checked.
     * 
     * @return the kind value.
     */
    @Override
    public DataConnectorKind kind() {
        return this.kind;
    }

    /**
     * Get the innerProperties property: ASC (Azure Security Center) requirements check properties.
     * 
     * @return the innerProperties value.
     */
    private AscCheckRequirementsProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the subscriptionId property: The subscription id to connect to, and get the data from.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.innerProperties() == null ? null : this.innerProperties().subscriptionId();
    }

    /**
     * Set the subscriptionId property: The subscription id to connect to, and get the data from.
     * 
     * @param subscriptionId the subscriptionId value to set.
     * @return the AscCheckRequirements object itself.
     */
    public AscCheckRequirements withSubscriptionId(String subscriptionId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AscCheckRequirementsProperties();
        }
        this.innerProperties().withSubscriptionId(subscriptionId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

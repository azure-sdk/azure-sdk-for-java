// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.ExportConnectionInner;
import com.azure.resourcemanager.securityinsights.models.ContentType;
import com.azure.resourcemanager.securityinsights.models.ExportConnection;
import com.azure.resourcemanager.securityinsights.models.ExportType;
import com.azure.resourcemanager.securityinsights.models.RepoType;
import com.azure.resourcemanager.securityinsights.models.Repository;
import com.azure.resourcemanager.securityinsights.models.Version;
import java.util.Collections;
import java.util.List;

public final class ExportConnectionImpl implements ExportConnection, ExportConnection.Definition {
    private ExportConnectionInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    ExportConnectionImpl(
        ExportConnectionInner innerObject,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String connectionId() {
        return this.innerModel().connectionId();
    }

    public Version version() {
        return this.innerModel().version();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public RepoType repoType() {
        return this.innerModel().repoType();
    }

    public List<ContentType> contentTypes() {
        List<ContentType> inner = this.innerModel().contentTypes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Repository repository() {
        return this.innerModel().repository();
    }

    public ExportType exportType() {
        return this.innerModel().exportType();
    }

    public String nextScheduledTime() {
        return this.innerModel().nextScheduledTime();
    }

    public ExportConnectionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String exportConnectionId;

    public ExportConnectionImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public ExportConnection create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExportConnections()
                .createWithResponse(
                    resourceGroupName, workspaceName, exportConnectionId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ExportConnection create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExportConnections()
                .createWithResponse(resourceGroupName, workspaceName, exportConnectionId, this.innerModel(), context)
                .getValue();
        return this;
    }

    ExportConnectionImpl(
        String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new ExportConnectionInner();
        this.serviceManager = serviceManager;
        this.exportConnectionId = name;
    }

    public ExportConnection refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExportConnections()
                .getWithResponse(resourceGroupName, workspaceName, exportConnectionId, Context.NONE)
                .getValue();
        return this;
    }

    public ExportConnection refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExportConnections()
                .getWithResponse(resourceGroupName, workspaceName, exportConnectionId, context)
                .getValue();
        return this;
    }

    public ExportConnectionImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public ExportConnectionImpl withConnectionId(String connectionId) {
        this.innerModel().withConnectionId(connectionId);
        return this;
    }

    public ExportConnectionImpl withVersion(Version version) {
        this.innerModel().withVersion(version);
        return this;
    }

    public ExportConnectionImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public ExportConnectionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public ExportConnectionImpl withRepoType(RepoType repoType) {
        this.innerModel().withRepoType(repoType);
        return this;
    }

    public ExportConnectionImpl withContentTypes(List<ContentType> contentTypes) {
        this.innerModel().withContentTypes(contentTypes);
        return this;
    }

    public ExportConnectionImpl withRepository(Repository repository) {
        this.innerModel().withRepository(repository);
        return this;
    }

    public ExportConnectionImpl withExportType(ExportType exportType) {
        this.innerModel().withExportType(exportType);
        return this;
    }

    public ExportConnectionImpl withNextScheduledTime(String nextScheduledTime) {
        this.innerModel().withNextScheduledTime(nextScheduledTime);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Google Cloud Platform auth section properties.
 */
@Fluent
public final class GcpAuthProperties {
    /*
     * The service account that is used to access the GCP project.
     */
    @JsonProperty(value = "serviceAccountEmail", required = true)
    private String serviceAccountEmail;

    /*
     * The GCP project number.
     */
    @JsonProperty(value = "projectNumber", required = true)
    private String projectNumber;

    /*
     * The workload identity provider id that is used to gain access to the GCP project.
     */
    @JsonProperty(value = "workloadIdentityProviderId", required = true)
    private String workloadIdentityProviderId;

    /**
     * Creates an instance of GcpAuthProperties class.
     */
    public GcpAuthProperties() {
    }

    /**
     * Get the serviceAccountEmail property: The service account that is used to access the GCP project.
     * 
     * @return the serviceAccountEmail value.
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    /**
     * Set the serviceAccountEmail property: The service account that is used to access the GCP project.
     * 
     * @param serviceAccountEmail the serviceAccountEmail value to set.
     * @return the GcpAuthProperties object itself.
     */
    public GcpAuthProperties withServiceAccountEmail(String serviceAccountEmail) {
        this.serviceAccountEmail = serviceAccountEmail;
        return this;
    }

    /**
     * Get the projectNumber property: The GCP project number.
     * 
     * @return the projectNumber value.
     */
    public String projectNumber() {
        return this.projectNumber;
    }

    /**
     * Set the projectNumber property: The GCP project number.
     * 
     * @param projectNumber the projectNumber value to set.
     * @return the GcpAuthProperties object itself.
     */
    public GcpAuthProperties withProjectNumber(String projectNumber) {
        this.projectNumber = projectNumber;
        return this;
    }

    /**
     * Get the workloadIdentityProviderId property: The workload identity provider id that is used to gain access to
     * the GCP project.
     * 
     * @return the workloadIdentityProviderId value.
     */
    public String workloadIdentityProviderId() {
        return this.workloadIdentityProviderId;
    }

    /**
     * Set the workloadIdentityProviderId property: The workload identity provider id that is used to gain access to
     * the GCP project.
     * 
     * @param workloadIdentityProviderId the workloadIdentityProviderId value to set.
     * @return the GcpAuthProperties object itself.
     */
    public GcpAuthProperties withWorkloadIdentityProviderId(String workloadIdentityProviderId) {
        this.workloadIdentityProviderId = workloadIdentityProviderId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (serviceAccountEmail() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property serviceAccountEmail in model GcpAuthProperties"));
        }
        if (projectNumber() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property projectNumber in model GcpAuthProperties"));
        }
        if (workloadIdentityProviderId() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property workloadIdentityProviderId in model GcpAuthProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GcpAuthProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Describes hunt relation properties. */
@Fluent
public final class HuntRelationProperties {
    /*
     * The id of the related resource
     */
    @JsonProperty(value = "relatedResourceId", required = true)
    private String relatedResourceId;

    /*
     * The name of the related resource
     */
    @JsonProperty(value = "relatedResourceName", access = JsonProperty.Access.WRITE_ONLY)
    private String relatedResourceName;

    /*
     * The type of the hunt relation
     */
    @JsonProperty(value = "relationType", access = JsonProperty.Access.WRITE_ONLY)
    private String relationType;

    /*
     * The resource that the relation is related to
     */
    @JsonProperty(value = "relatedResourceKind", access = JsonProperty.Access.WRITE_ONLY)
    private String relatedResourceKind;

    /*
     * List of labels relevant to this hunt
     */
    @JsonProperty(value = "labels")
    private List<String> labels;

    /** Creates an instance of HuntRelationProperties class. */
    public HuntRelationProperties() {
    }

    /**
     * Get the relatedResourceId property: The id of the related resource.
     *
     * @return the relatedResourceId value.
     */
    public String relatedResourceId() {
        return this.relatedResourceId;
    }

    /**
     * Set the relatedResourceId property: The id of the related resource.
     *
     * @param relatedResourceId the relatedResourceId value to set.
     * @return the HuntRelationProperties object itself.
     */
    public HuntRelationProperties withRelatedResourceId(String relatedResourceId) {
        this.relatedResourceId = relatedResourceId;
        return this;
    }

    /**
     * Get the relatedResourceName property: The name of the related resource.
     *
     * @return the relatedResourceName value.
     */
    public String relatedResourceName() {
        return this.relatedResourceName;
    }

    /**
     * Get the relationType property: The type of the hunt relation.
     *
     * @return the relationType value.
     */
    public String relationType() {
        return this.relationType;
    }

    /**
     * Get the relatedResourceKind property: The resource that the relation is related to.
     *
     * @return the relatedResourceKind value.
     */
    public String relatedResourceKind() {
        return this.relatedResourceKind;
    }

    /**
     * Get the labels property: List of labels relevant to this hunt.
     *
     * @return the labels value.
     */
    public List<String> labels() {
        return this.labels;
    }

    /**
     * Set the labels property: List of labels relevant to this hunt.
     *
     * @param labels the labels value to set.
     * @return the HuntRelationProperties object itself.
     */
    public HuntRelationProperties withLabels(List<String> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (relatedResourceId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property relatedResourceId in model HuntRelationProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HuntRelationProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of WorkspaceManagerAssignmentJobs. */
public interface WorkspaceManagerAssignmentJobs {
    /**
     * Get all jobs for the specified workspace manager assignment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all jobs for the specified workspace manager assignment as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Job> list(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName);

    /**
     * Get all jobs for the specified workspace manager assignment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @param orderby Sorts the results. Optional.
     * @param top Returns only the first n results. Optional.
     * @param skipToken Skiptoken is only used if a previous operation returned a partial result. If a previous response
     *     contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that
     *     specifies a starting point to use for subsequent calls. Optional.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all jobs for the specified workspace manager assignment as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Job> list(
        String resourceGroupName,
        String workspaceName,
        String workspaceManagerAssignmentName,
        String orderby,
        Integer top,
        String skipToken,
        Context context);

    /**
     * Create a job for the specified workspace manager assignment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the assignment job along with {@link Response}.
     */
    Response<Job> createWithResponse(
        String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName, Context context);

    /**
     * Create a job for the specified workspace manager assignment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the assignment job.
     */
    Job create(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName);

    /**
     * Gets a job.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @param jobName The job name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a job along with {@link Response}.
     */
    Response<Job> getWithResponse(
        String resourceGroupName,
        String workspaceName,
        String workspaceManagerAssignmentName,
        String jobName,
        Context context);

    /**
     * Gets a job.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a job.
     */
    Job get(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName, String jobName);

    /**
     * Deletes the specified job from the specified workspace manager assignment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @param jobName The job name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName,
        String workspaceName,
        String workspaceManagerAssignmentName,
        String jobName,
        Context context);

    /**
     * Deletes the specified job from the specified workspace manager assignment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param workspaceManagerAssignmentName The name of the workspace manager assignment.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName, String jobName);
}

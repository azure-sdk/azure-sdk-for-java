// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** An entity describing the publish status of a content item. */
@Fluent
public final class JobItem {
    /*
     * The resource id of the content item
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * Status of the item publication
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private Status status;

    /*
     * The time the item publishing was completed
     */
    @JsonProperty(value = "executionTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime executionTime;

    /*
     * The list of error descriptions if the item publication fails.
     */
    @JsonProperty(value = "errors")
    private List<Error> errors;

    /** Creates an instance of JobItem class. */
    public JobItem() {
    }

    /**
     * Get the resourceId property: The resource id of the content item.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The resource id of the content item.
     *
     * @param resourceId the resourceId value to set.
     * @return the JobItem object itself.
     */
    public JobItem withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the status property: Status of the item publication.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the executionTime property: The time the item publishing was completed.
     *
     * @return the executionTime value.
     */
    public OffsetDateTime executionTime() {
        return this.executionTime;
    }

    /**
     * Get the errors property: The list of error descriptions if the item publication fails.
     *
     * @return the errors value.
     */
    public List<Error> errors() {
        return this.errors;
    }

    /**
     * Set the errors property: The list of error descriptions if the item publication fails.
     *
     * @param errors the errors value to set.
     * @return the JobItem object itself.
     */
    public JobItem withErrors(List<Error> errors) {
        this.errors = errors;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (errors() != null) {
            errors().forEach(e -> e.validate());
        }
    }
}

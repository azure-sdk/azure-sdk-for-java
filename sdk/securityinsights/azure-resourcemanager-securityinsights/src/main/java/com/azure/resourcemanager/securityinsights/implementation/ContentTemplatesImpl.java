// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.ContentTemplatesClient;
import com.azure.resourcemanager.securityinsights.fluent.models.TemplateInner;
import com.azure.resourcemanager.securityinsights.models.ContentTemplates;
import com.azure.resourcemanager.securityinsights.models.Template;

public final class ContentTemplatesImpl implements ContentTemplates {
    private static final ClientLogger LOGGER = new ClientLogger(ContentTemplatesImpl.class);

    private final ContentTemplatesClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public ContentTemplatesImpl(
        ContentTemplatesClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Template> list(String resourceGroupName, String sentinelWorkspaceName) {
        PagedIterable<TemplateInner> inner = this.serviceClient().list(resourceGroupName, sentinelWorkspaceName);
        return Utils.mapPage(inner, inner1 -> new TemplateImpl(inner1, this.manager()));
    }

    public PagedIterable<Template> list(
        String resourceGroupName,
        String sentinelWorkspaceName,
        String filter,
        String orderby,
        Integer top,
        Integer skip,
        Context context) {
        PagedIterable<TemplateInner> inner =
            this.serviceClient().list(resourceGroupName, sentinelWorkspaceName, filter, orderby, top, skip, context);
        return Utils.mapPage(inner, inner1 -> new TemplateImpl(inner1, this.manager()));
    }

    public Response<Template> getWithResponse(
        String resourceGroupName, String sentinelWorkspaceName, String templateId, Context context) {
        Response<TemplateInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, sentinelWorkspaceName, templateId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new TemplateImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Template get(String resourceGroupName, String sentinelWorkspaceName, String templateId) {
        TemplateInner inner = this.serviceClient().get(resourceGroupName, sentinelWorkspaceName, templateId);
        if (inner != null) {
            return new TemplateImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName, String sentinelWorkspaceName, String templateId, Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, sentinelWorkspaceName, templateId, context);
    }

    public void delete(String resourceGroupName, String sentinelWorkspaceName, String templateId) {
        this.serviceClient().delete(resourceGroupName, sentinelWorkspaceName, templateId);
    }

    private ContentTemplatesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

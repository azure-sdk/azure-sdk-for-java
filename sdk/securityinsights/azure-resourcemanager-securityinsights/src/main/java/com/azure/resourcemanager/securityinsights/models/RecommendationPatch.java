// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Recommendation Fields to update. */
@Fluent
public final class RecommendationPatch {
    /*
     * The patch operation to be performed on the recommendation.
     */
    @JsonProperty(value = "op", required = true)
    private Op op;

    /*
     * The field to update.
     */
    @JsonProperty(value = "path", required = true)
    private String path;

    /*
     * Value to update the field with.
     */
    @JsonProperty(value = "value", required = true)
    private String value;

    /**
     * Get the op property: The patch operation to be performed on the recommendation.
     *
     * @return the op value.
     */
    public Op op() {
        return this.op;
    }

    /**
     * Set the op property: The patch operation to be performed on the recommendation.
     *
     * @param op the op value to set.
     * @return the RecommendationPatch object itself.
     */
    public RecommendationPatch withOp(Op op) {
        this.op = op;
        return this;
    }

    /**
     * Get the path property: The field to update.
     *
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: The field to update.
     *
     * @param path the path value to set.
     * @return the RecommendationPatch object itself.
     */
    public RecommendationPatch withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the value property: Value to update the field with.
     *
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: Value to update the field with.
     *
     * @param value the value value to set.
     * @return the RecommendationPatch object itself.
     */
    public RecommendationPatch withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (op() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property op in model RecommendationPatch"));
        }
        if (path() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property path in model RecommendationPatch"));
        }
        if (value() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property value in model RecommendationPatch"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RecommendationPatch.class);
}

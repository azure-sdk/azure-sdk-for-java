// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes the NetWeaver connector.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "sapSystemType")
@JsonTypeName("NetWeaver")
@Fluent
public final class NetWeaverConnector extends SystemsConfigurationConnector {
    /*
     * FQDN, hostname, or IP address of the ABAP server.
     */
    @JsonProperty(value = "abapServerHost")
    private String abapServerHost;

    /*
     * FQDN, hostname, or IP address of the Message server.
     */
    @JsonProperty(value = "messageServerHost")
    private String messageServerHost;

    /*
     * Logon group of the message server.
     */
    @JsonProperty(value = "group")
    private String group;

    /*
     * Port number, or service name (from /etc/services) of the message server.
     */
    @JsonProperty(value = "messageServerService")
    private String messageServerService;

    /*
     * SNC QOP.
     * Options are 1, 2, 3, 8, 9.
     */
    @JsonProperty(value = "sncQop")
    private String sncQop;

    /*
     * The SAP code page used for character encoding.
     * Example - 1100
     */
    @JsonProperty(value = "codePage")
    private String codePage;

    /*
     * System number of the ABAP server.
     */
    @JsonProperty(value = "systemNumber", required = true)
    private String systemNumber;

    /*
     * System ID of the ABAP server.
     * Example - A4H
     */
    @JsonProperty(value = "systemId", required = true)
    private String systemId;

    /*
     * Client number of the ABAP server.
     * Example - 001
     */
    @JsonProperty(value = "client", required = true)
    private String client;

    /*
     * Types of authentication.
     */
    @JsonProperty(value = "authenticationType")
    private AuthenticationArmType authenticationType;

    /**
     * Creates an instance of NetWeaverConnector class.
     */
    public NetWeaverConnector() {
    }

    /**
     * Get the abapServerHost property: FQDN, hostname, or IP address of the ABAP server.
     * 
     * @return the abapServerHost value.
     */
    public String abapServerHost() {
        return this.abapServerHost;
    }

    /**
     * Set the abapServerHost property: FQDN, hostname, or IP address of the ABAP server.
     * 
     * @param abapServerHost the abapServerHost value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withAbapServerHost(String abapServerHost) {
        this.abapServerHost = abapServerHost;
        return this;
    }

    /**
     * Get the messageServerHost property: FQDN, hostname, or IP address of the Message server.
     * 
     * @return the messageServerHost value.
     */
    public String messageServerHost() {
        return this.messageServerHost;
    }

    /**
     * Set the messageServerHost property: FQDN, hostname, or IP address of the Message server.
     * 
     * @param messageServerHost the messageServerHost value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withMessageServerHost(String messageServerHost) {
        this.messageServerHost = messageServerHost;
        return this;
    }

    /**
     * Get the group property: Logon group of the message server.
     * 
     * @return the group value.
     */
    public String group() {
        return this.group;
    }

    /**
     * Set the group property: Logon group of the message server.
     * 
     * @param group the group value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withGroup(String group) {
        this.group = group;
        return this;
    }

    /**
     * Get the messageServerService property: Port number, or service name (from /etc/services) of the message server.
     * 
     * @return the messageServerService value.
     */
    public String messageServerService() {
        return this.messageServerService;
    }

    /**
     * Set the messageServerService property: Port number, or service name (from /etc/services) of the message server.
     * 
     * @param messageServerService the messageServerService value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withMessageServerService(String messageServerService) {
        this.messageServerService = messageServerService;
        return this;
    }

    /**
     * Get the sncQop property: SNC QOP.
     * Options are 1, 2, 3, 8, 9.
     * 
     * @return the sncQop value.
     */
    public String sncQop() {
        return this.sncQop;
    }

    /**
     * Set the sncQop property: SNC QOP.
     * Options are 1, 2, 3, 8, 9.
     * 
     * @param sncQop the sncQop value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withSncQop(String sncQop) {
        this.sncQop = sncQop;
        return this;
    }

    /**
     * Get the codePage property: The SAP code page used for character encoding.
     * Example - 1100.
     * 
     * @return the codePage value.
     */
    public String codePage() {
        return this.codePage;
    }

    /**
     * Set the codePage property: The SAP code page used for character encoding.
     * Example - 1100.
     * 
     * @param codePage the codePage value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withCodePage(String codePage) {
        this.codePage = codePage;
        return this;
    }

    /**
     * Get the systemNumber property: System number of the ABAP server.
     * 
     * @return the systemNumber value.
     */
    public String systemNumber() {
        return this.systemNumber;
    }

    /**
     * Set the systemNumber property: System number of the ABAP server.
     * 
     * @param systemNumber the systemNumber value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withSystemNumber(String systemNumber) {
        this.systemNumber = systemNumber;
        return this;
    }

    /**
     * Get the systemId property: System ID of the ABAP server.
     * Example - A4H.
     * 
     * @return the systemId value.
     */
    public String systemId() {
        return this.systemId;
    }

    /**
     * Set the systemId property: System ID of the ABAP server.
     * Example - A4H.
     * 
     * @param systemId the systemId value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withSystemId(String systemId) {
        this.systemId = systemId;
        return this;
    }

    /**
     * Get the client property: Client number of the ABAP server.
     * Example - 001.
     * 
     * @return the client value.
     */
    public String client() {
        return this.client;
    }

    /**
     * Set the client property: Client number of the ABAP server.
     * Example - 001.
     * 
     * @param client the client value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withClient(String client) {
        this.client = client;
        return this;
    }

    /**
     * Get the authenticationType property: Types of authentication.
     * 
     * @return the authenticationType value.
     */
    public AuthenticationArmType authenticationType() {
        return this.authenticationType;
    }

    /**
     * Set the authenticationType property: Types of authentication.
     * 
     * @param authenticationType the authenticationType value to set.
     * @return the NetWeaverConnector object itself.
     */
    public NetWeaverConnector withAuthenticationType(AuthenticationArmType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (systemNumber() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property systemNumber in model NetWeaverConnector"));
        }
        if (systemId() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property systemId in model NetWeaverConnector"));
        }
        if (client() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property client in model NetWeaverConnector"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NetWeaverConnector.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;

/**
 * Model for API authentication with session cookie.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("Session")
@Fluent
public final class SessionAuthModel extends CcpAuthConfig {
    /*
     * The user name attribute key value.
     */
    @JsonProperty(value = "userName", required = true)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> username;

    /*
     * The password attribute name.
     */
    @JsonProperty(value = "password", required = true)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> password;

    /*
     * Query parameters to session service endpoint.
     */
    @JsonProperty(value = "queryParameters")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, Object> queryParameters;

    /*
     * Indicating whether API key is set in HTTP POST payload.
     */
    @JsonProperty(value = "isPostPayloadJson")
    private Boolean isPostPayloadJson;

    /*
     * HTTP request headers to session service endpoint.
     */
    @JsonProperty(value = "headers")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> headers;

    /*
     * Session timeout in minutes.
     */
    @JsonProperty(value = "sessionTimeoutInMinutes")
    private Integer sessionTimeoutInMinutes;

    /*
     * Session id attribute name from HTTP response header.
     */
    @JsonProperty(value = "sessionIdName")
    private String sessionIdName;

    /*
     * HTTP request URL to session service endpoint.
     */
    @JsonProperty(value = "sessionLoginRequestUri")
    private String sessionLoginRequestUri;

    /**
     * Creates an instance of SessionAuthModel class.
     */
    public SessionAuthModel() {
    }

    /**
     * Get the username property: The user name attribute key value.
     * 
     * @return the username value.
     */
    public Map<String, String> username() {
        return this.username;
    }

    /**
     * Set the username property: The user name attribute key value.
     * 
     * @param username the username value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withUsername(Map<String, String> username) {
        this.username = username;
        return this;
    }

    /**
     * Get the password property: The password attribute name.
     * 
     * @return the password value.
     */
    public Map<String, String> password() {
        return this.password;
    }

    /**
     * Set the password property: The password attribute name.
     * 
     * @param password the password value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withPassword(Map<String, String> password) {
        this.password = password;
        return this;
    }

    /**
     * Get the queryParameters property: Query parameters to session service endpoint.
     * 
     * @return the queryParameters value.
     */
    public Map<String, Object> queryParameters() {
        return this.queryParameters;
    }

    /**
     * Set the queryParameters property: Query parameters to session service endpoint.
     * 
     * @param queryParameters the queryParameters value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withQueryParameters(Map<String, Object> queryParameters) {
        this.queryParameters = queryParameters;
        return this;
    }

    /**
     * Get the isPostPayloadJson property: Indicating whether API key is set in HTTP POST payload.
     * 
     * @return the isPostPayloadJson value.
     */
    public Boolean isPostPayloadJson() {
        return this.isPostPayloadJson;
    }

    /**
     * Set the isPostPayloadJson property: Indicating whether API key is set in HTTP POST payload.
     * 
     * @param isPostPayloadJson the isPostPayloadJson value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withIsPostPayloadJson(Boolean isPostPayloadJson) {
        this.isPostPayloadJson = isPostPayloadJson;
        return this;
    }

    /**
     * Get the headers property: HTTP request headers to session service endpoint.
     * 
     * @return the headers value.
     */
    public Map<String, String> headers() {
        return this.headers;
    }

    /**
     * Set the headers property: HTTP request headers to session service endpoint.
     * 
     * @param headers the headers value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withHeaders(Map<String, String> headers) {
        this.headers = headers;
        return this;
    }

    /**
     * Get the sessionTimeoutInMinutes property: Session timeout in minutes.
     * 
     * @return the sessionTimeoutInMinutes value.
     */
    public Integer sessionTimeoutInMinutes() {
        return this.sessionTimeoutInMinutes;
    }

    /**
     * Set the sessionTimeoutInMinutes property: Session timeout in minutes.
     * 
     * @param sessionTimeoutInMinutes the sessionTimeoutInMinutes value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withSessionTimeoutInMinutes(Integer sessionTimeoutInMinutes) {
        this.sessionTimeoutInMinutes = sessionTimeoutInMinutes;
        return this;
    }

    /**
     * Get the sessionIdName property: Session id attribute name from HTTP response header.
     * 
     * @return the sessionIdName value.
     */
    public String sessionIdName() {
        return this.sessionIdName;
    }

    /**
     * Set the sessionIdName property: Session id attribute name from HTTP response header.
     * 
     * @param sessionIdName the sessionIdName value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withSessionIdName(String sessionIdName) {
        this.sessionIdName = sessionIdName;
        return this;
    }

    /**
     * Get the sessionLoginRequestUri property: HTTP request URL to session service endpoint.
     * 
     * @return the sessionLoginRequestUri value.
     */
    public String sessionLoginRequestUri() {
        return this.sessionLoginRequestUri;
    }

    /**
     * Set the sessionLoginRequestUri property: HTTP request URL to session service endpoint.
     * 
     * @param sessionLoginRequestUri the sessionLoginRequestUri value to set.
     * @return the SessionAuthModel object itself.
     */
    public SessionAuthModel withSessionLoginRequestUri(String sessionLoginRequestUri) {
        this.sessionLoginRequestUri = sessionLoginRequestUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (username() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property username in model SessionAuthModel"));
        }
        if (password() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property password in model SessionAuthModel"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SessionAuthModel.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Describes a log.
 */
@Fluent
public final class LogArmModel {
    /*
     * Types of logs and tables.
     */
    @JsonProperty(value = "logType")
    private LogArmType logType;

    /*
     * Types of ingestion.
     */
    @JsonProperty(value = "ingestionType")
    private IngestionArmType ingestionType;

    /*
     * Types of log status.
     */
    @JsonProperty(value = "status")
    private LogStatusArmType status;

    /*
     * The schedule interval in seconds.
     */
    @JsonProperty(value = "scheduleInterval")
    private Integer scheduleInterval;

    /*
     * The bulk size for the log.
     */
    @JsonProperty(value = "bulkSize")
    private Integer bulkSize;

    /*
     * The filters for the log.
     */
    @JsonProperty(value = "filters")
    private List<String> filters;

    /**
     * Creates an instance of LogArmModel class.
     */
    public LogArmModel() {
    }

    /**
     * Get the logType property: Types of logs and tables.
     * 
     * @return the logType value.
     */
    public LogArmType logType() {
        return this.logType;
    }

    /**
     * Set the logType property: Types of logs and tables.
     * 
     * @param logType the logType value to set.
     * @return the LogArmModel object itself.
     */
    public LogArmModel withLogType(LogArmType logType) {
        this.logType = logType;
        return this;
    }

    /**
     * Get the ingestionType property: Types of ingestion.
     * 
     * @return the ingestionType value.
     */
    public IngestionArmType ingestionType() {
        return this.ingestionType;
    }

    /**
     * Set the ingestionType property: Types of ingestion.
     * 
     * @param ingestionType the ingestionType value to set.
     * @return the LogArmModel object itself.
     */
    public LogArmModel withIngestionType(IngestionArmType ingestionType) {
        this.ingestionType = ingestionType;
        return this;
    }

    /**
     * Get the status property: Types of log status.
     * 
     * @return the status value.
     */
    public LogStatusArmType status() {
        return this.status;
    }

    /**
     * Set the status property: Types of log status.
     * 
     * @param status the status value to set.
     * @return the LogArmModel object itself.
     */
    public LogArmModel withStatus(LogStatusArmType status) {
        this.status = status;
        return this;
    }

    /**
     * Get the scheduleInterval property: The schedule interval in seconds.
     * 
     * @return the scheduleInterval value.
     */
    public Integer scheduleInterval() {
        return this.scheduleInterval;
    }

    /**
     * Set the scheduleInterval property: The schedule interval in seconds.
     * 
     * @param scheduleInterval the scheduleInterval value to set.
     * @return the LogArmModel object itself.
     */
    public LogArmModel withScheduleInterval(Integer scheduleInterval) {
        this.scheduleInterval = scheduleInterval;
        return this;
    }

    /**
     * Get the bulkSize property: The bulk size for the log.
     * 
     * @return the bulkSize value.
     */
    public Integer bulkSize() {
        return this.bulkSize;
    }

    /**
     * Set the bulkSize property: The bulk size for the log.
     * 
     * @param bulkSize the bulkSize value to set.
     * @return the LogArmModel object itself.
     */
    public LogArmModel withBulkSize(Integer bulkSize) {
        this.bulkSize = bulkSize;
        return this;
    }

    /**
     * Get the filters property: The filters for the log.
     * 
     * @return the filters value.
     */
    public List<String> filters() {
        return this.filters;
    }

    /**
     * Set the filters property: The filters for the log.
     * 
     * @param filters the filters value to set.
     * @return the LogArmModel object itself.
     */
    public LogArmModel withFilters(List<String> filters) {
        this.filters = filters;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

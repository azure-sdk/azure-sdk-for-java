// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Service principal metadata. */
@Fluent
public final class ServicePrincipal {
    /*
     * Id of service principal.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Tenant id of service principal.
     */
    @JsonProperty(value = "tenantId")
    private String tenantId;

    /*
     * App id of service principal.
     */
    @JsonProperty(value = "appId")
    private String appId;

    /*
     * Indicates if service principal password expiration has been set.
     */
    @JsonProperty(value = "passwordExpirationSet")
    private Boolean passwordExpirationSet;

    /*
     * Indicates if service principal password has expired.
     */
    @JsonProperty(value = "passwordExpired")
    private Boolean passwordExpired;

    /*
     * Date-time of when service principal password expires.
     */
    @JsonProperty(value = "passwordExpirationDate")
    private String passwordExpirationDate;

    /*
     * Interval of time in minutes that password is valid for.
     */
    @JsonProperty(value = "passwordExpirationTimeframe")
    private Integer passwordExpirationTimeframe;

    /** Creates an instance of ServicePrincipal class. */
    public ServicePrincipal() {
    }

    /**
     * Get the id property: Id of service principal.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Id of service principal.
     *
     * @param id the id value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the tenantId property: Tenant id of service principal.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: Tenant id of service principal.
     *
     * @param tenantId the tenantId value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the appId property: App id of service principal.
     *
     * @return the appId value.
     */
    public String appId() {
        return this.appId;
    }

    /**
     * Set the appId property: App id of service principal.
     *
     * @param appId the appId value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withAppId(String appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Get the passwordExpirationSet property: Indicates if service principal password expiration has been set.
     *
     * @return the passwordExpirationSet value.
     */
    public Boolean passwordExpirationSet() {
        return this.passwordExpirationSet;
    }

    /**
     * Set the passwordExpirationSet property: Indicates if service principal password expiration has been set.
     *
     * @param passwordExpirationSet the passwordExpirationSet value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withPasswordExpirationSet(Boolean passwordExpirationSet) {
        this.passwordExpirationSet = passwordExpirationSet;
        return this;
    }

    /**
     * Get the passwordExpired property: Indicates if service principal password has expired.
     *
     * @return the passwordExpired value.
     */
    public Boolean passwordExpired() {
        return this.passwordExpired;
    }

    /**
     * Set the passwordExpired property: Indicates if service principal password has expired.
     *
     * @param passwordExpired the passwordExpired value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withPasswordExpired(Boolean passwordExpired) {
        this.passwordExpired = passwordExpired;
        return this;
    }

    /**
     * Get the passwordExpirationDate property: Date-time of when service principal password expires.
     *
     * @return the passwordExpirationDate value.
     */
    public String passwordExpirationDate() {
        return this.passwordExpirationDate;
    }

    /**
     * Set the passwordExpirationDate property: Date-time of when service principal password expires.
     *
     * @param passwordExpirationDate the passwordExpirationDate value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withPasswordExpirationDate(String passwordExpirationDate) {
        this.passwordExpirationDate = passwordExpirationDate;
        return this;
    }

    /**
     * Get the passwordExpirationTimeframe property: Interval of time in minutes that password is valid for.
     *
     * @return the passwordExpirationTimeframe value.
     */
    public Integer passwordExpirationTimeframe() {
        return this.passwordExpirationTimeframe;
    }

    /**
     * Set the passwordExpirationTimeframe property: Interval of time in minutes that password is valid for.
     *
     * @param passwordExpirationTimeframe the passwordExpirationTimeframe value to set.
     * @return the ServicePrincipal object itself.
     */
    public ServicePrincipal withPasswordExpirationTimeframe(Integer passwordExpirationTimeframe) {
        this.passwordExpirationTimeframe = passwordExpirationTimeframe;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Represents a Hunt Comment in Azure Security Insights. */
@Fluent
public final class HuntCommentInner extends ResourceWithEtag {
    /*
     * Hunt Comment properties
     */
    @JsonProperty(value = "properties")
    private HuntCommentProperties innerProperties;

    /** Creates an instance of HuntCommentInner class. */
    public HuntCommentInner() {
    }

    /**
     * Get the innerProperties property: Hunt Comment properties.
     *
     * @return the innerProperties value.
     */
    private HuntCommentProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public HuntCommentInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the message property: The message for the comment.
     *
     * @return the message value.
     */
    public String message() {
        return this.innerProperties() == null ? null : this.innerProperties().message();
    }

    /**
     * Set the message property: The message for the comment.
     *
     * @param message the message value to set.
     * @return the HuntCommentInner object itself.
     */
    public HuntCommentInner withMessage(String message) {
        if (this.innerProperties() == null) {
            this.innerProperties = new HuntCommentProperties();
        }
        this.innerProperties().withMessage(message);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

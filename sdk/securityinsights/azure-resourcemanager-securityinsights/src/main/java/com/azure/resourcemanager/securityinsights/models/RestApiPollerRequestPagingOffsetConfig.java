// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The request paging configuration for Offset paging type parameters.
 */
@Fluent
public final class RestApiPollerRequestPagingOffsetConfig extends RestApiPollerRequestPagingConfig {
    /*
     * Offset parameter name in HTTP request
     */
    @JsonProperty(value = "offsetParaName")
    private String offsetParaName;

    /**
     * Creates an instance of RestApiPollerRequestPagingOffsetConfig class.
     */
    public RestApiPollerRequestPagingOffsetConfig() {
    }

    /**
     * Get the offsetParaName property: Offset parameter name in HTTP request.
     * 
     * @return the offsetParaName value.
     */
    public String offsetParaName() {
        return this.offsetParaName;
    }

    /**
     * Set the offsetParaName property: Offset parameter name in HTTP request.
     * 
     * @param offsetParaName the offsetParaName value to set.
     * @return the RestApiPollerRequestPagingOffsetConfig object itself.
     */
    public RestApiPollerRequestPagingOffsetConfig withOffsetParaName(String offsetParaName) {
        this.offsetParaName = offsetParaName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingOffsetConfig withPagingType(RestApiPollerRequestPagingKind pagingType) {
        super.withPagingType(pagingType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingOffsetConfig withPageSize(Integer pageSize) {
        super.withPageSize(pageSize);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingOffsetConfig withPageSizeParameterName(String pageSizeParameterName) {
        super.withPageSizeParameterName(pageSizeParameterName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

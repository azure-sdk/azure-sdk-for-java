// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The request paging configuration for Offset paging type parameters.
 */
@Fluent
public final class RestApiPollerRequestPagingOffsetConfig extends RestApiPollerRequestPagingConfig {
    /*
     * Offset parameter name in HTTP request
     */
    private String offsetParaName;

    /**
     * Creates an instance of RestApiPollerRequestPagingOffsetConfig class.
     */
    public RestApiPollerRequestPagingOffsetConfig() {
    }

    /**
     * Get the offsetParaName property: Offset parameter name in HTTP request.
     * 
     * @return the offsetParaName value.
     */
    public String offsetParaName() {
        return this.offsetParaName;
    }

    /**
     * Set the offsetParaName property: Offset parameter name in HTTP request.
     * 
     * @param offsetParaName the offsetParaName value to set.
     * @return the RestApiPollerRequestPagingOffsetConfig object itself.
     */
    public RestApiPollerRequestPagingOffsetConfig withOffsetParaName(String offsetParaName) {
        this.offsetParaName = offsetParaName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingOffsetConfig withPagingType(RestApiPollerRequestPagingKind pagingType) {
        super.withPagingType(pagingType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingOffsetConfig withPageSize(Integer pageSize) {
        super.withPageSize(pageSize);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingOffsetConfig withPageSizeParameterName(String pageSizeParameterName) {
        super.withPageSizeParameterName(pageSizeParameterName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("pagingType", pagingType() == null ? null : pagingType().toString());
        jsonWriter.writeNumberField("pageSize", pageSize());
        jsonWriter.writeStringField("pageSizeParameterName", pageSizeParameterName());
        jsonWriter.writeStringField("offsetParaName", this.offsetParaName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestApiPollerRequestPagingOffsetConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestApiPollerRequestPagingOffsetConfig if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RestApiPollerRequestPagingOffsetConfig.
     */
    public static RestApiPollerRequestPagingOffsetConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestApiPollerRequestPagingOffsetConfig deserializedRestApiPollerRequestPagingOffsetConfig
                = new RestApiPollerRequestPagingOffsetConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("pagingType".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingOffsetConfig
                        .withPagingType(RestApiPollerRequestPagingKind.fromString(reader.getString()));
                } else if ("pageSize".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingOffsetConfig
                        .withPageSize(reader.getNullable(JsonReader::getInt));
                } else if ("pageSizeParameterName".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingOffsetConfig.withPageSizeParameterName(reader.getString());
                } else if ("offsetParaName".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingOffsetConfig.offsetParaName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestApiPollerRequestPagingOffsetConfig;
        });
    }
}

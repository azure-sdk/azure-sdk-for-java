// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * product package additional properties.
 */
@Fluent
public class ProductPackageAdditionalProperties implements JsonSerializable<ProductPackageAdditionalProperties> {
    /*
     * The version of the installed package, null or absent means not installed.
     */
    private String installedVersion;

    /*
     * The metadata resource id.
     */
    private String metadataResourceId;

    /*
     * The json of the ARM template to deploy. Expandable.
     */
    private Object packagedContent;

    /**
     * Creates an instance of ProductPackageAdditionalProperties class.
     */
    public ProductPackageAdditionalProperties() {
    }

    /**
     * Get the installedVersion property: The version of the installed package, null or absent means not installed.
     * 
     * @return the installedVersion value.
     */
    public String installedVersion() {
        return this.installedVersion;
    }

    /**
     * Set the installedVersion property: The version of the installed package, null or absent means not installed.
     * 
     * @param installedVersion the installedVersion value to set.
     * @return the ProductPackageAdditionalProperties object itself.
     */
    public ProductPackageAdditionalProperties withInstalledVersion(String installedVersion) {
        this.installedVersion = installedVersion;
        return this;
    }

    /**
     * Get the metadataResourceId property: The metadata resource id.
     * 
     * @return the metadataResourceId value.
     */
    public String metadataResourceId() {
        return this.metadataResourceId;
    }

    /**
     * Set the metadataResourceId property: The metadata resource id.
     * 
     * @param metadataResourceId the metadataResourceId value to set.
     * @return the ProductPackageAdditionalProperties object itself.
     */
    public ProductPackageAdditionalProperties withMetadataResourceId(String metadataResourceId) {
        this.metadataResourceId = metadataResourceId;
        return this;
    }

    /**
     * Get the packagedContent property: The json of the ARM template to deploy. Expandable.
     * 
     * @return the packagedContent value.
     */
    public Object packagedContent() {
        return this.packagedContent;
    }

    /**
     * Set the packagedContent property: The json of the ARM template to deploy. Expandable.
     * 
     * @param packagedContent the packagedContent value to set.
     * @return the ProductPackageAdditionalProperties object itself.
     */
    public ProductPackageAdditionalProperties withPackagedContent(Object packagedContent) {
        this.packagedContent = packagedContent;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("installedVersion", this.installedVersion);
        jsonWriter.writeStringField("metadataResourceId", this.metadataResourceId);
        jsonWriter.writeUntypedField("packagedContent", this.packagedContent);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProductPackageAdditionalProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProductPackageAdditionalProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProductPackageAdditionalProperties.
     */
    public static ProductPackageAdditionalProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProductPackageAdditionalProperties deserializedProductPackageAdditionalProperties
                = new ProductPackageAdditionalProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("installedVersion".equals(fieldName)) {
                    deserializedProductPackageAdditionalProperties.installedVersion = reader.getString();
                } else if ("metadataResourceId".equals(fieldName)) {
                    deserializedProductPackageAdditionalProperties.metadataResourceId = reader.getString();
                } else if ("packagedContent".equals(fieldName)) {
                    deserializedProductPackageAdditionalProperties.packagedContent = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProductPackageAdditionalProperties;
        });
    }
}

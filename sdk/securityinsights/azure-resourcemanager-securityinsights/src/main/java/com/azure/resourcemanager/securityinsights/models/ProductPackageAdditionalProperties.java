// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** product package additional properties. */
@Fluent
public class ProductPackageAdditionalProperties {
    /*
     * The version of the installed package, null or absent means not installed.
     */
    @JsonProperty(value = "installedVersion")
    private String installedVersion;

    /*
     * Static ID for the content.  Used to identify dependencies and content from solutions or community.
     * Hard-coded/static for out of the box content and solutions. Can be optionally set for user created content to
     * define dependencies.  If an active content item is made from a metadata, both will have the same contentId.
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * the json to deploy
     */
    @JsonProperty(value = "packagedContent")
    private Object packagedContent;

    /** Creates an instance of ProductPackageAdditionalProperties class. */
    public ProductPackageAdditionalProperties() {
    }

    /**
     * Get the installedVersion property: The version of the installed package, null or absent means not installed.
     *
     * @return the installedVersion value.
     */
    public String installedVersion() {
        return this.installedVersion;
    }

    /**
     * Set the installedVersion property: The version of the installed package, null or absent means not installed.
     *
     * @param installedVersion the installedVersion value to set.
     * @return the ProductPackageAdditionalProperties object itself.
     */
    public ProductPackageAdditionalProperties withInstalledVersion(String installedVersion) {
        this.installedVersion = installedVersion;
        return this;
    }

    /**
     * Get the resourceId property: Static ID for the content. Used to identify dependencies and content from solutions
     * or community. Hard-coded/static for out of the box content and solutions. Can be optionally set for user created
     * content to define dependencies. If an active content item is made from a metadata, both will have the same
     * contentId.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Static ID for the content. Used to identify dependencies and content from solutions
     * or community. Hard-coded/static for out of the box content and solutions. Can be optionally set for user created
     * content to define dependencies. If an active content item is made from a metadata, both will have the same
     * contentId.
     *
     * @param resourceId the resourceId value to set.
     * @return the ProductPackageAdditionalProperties object itself.
     */
    public ProductPackageAdditionalProperties withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the packagedContent property: the json to deploy.
     *
     * @return the packagedContent value.
     */
    public Object packagedContent() {
        return this.packagedContent;
    }

    /**
     * Set the packagedContent property: the json to deploy.
     *
     * @param packagedContent the packagedContent value to set.
     * @return the ProductPackageAdditionalProperties object itself.
     */
    public ProductPackageAdditionalProperties withPackagedContent(Object packagedContent) {
        this.packagedContent = packagedContent;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.ExportJobInner;

/** An instance of this class provides access to all the operations defined in ExportJobsClient. */
public interface ExportJobsClient {
    /**
     * Gets all export jobs, without export jobs items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param exportConnectionId Export connection Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all export jobs, without export jobs items as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExportJobInner> list(String resourceGroupName, String workspaceName, String exportConnectionId);

    /**
     * Gets all export jobs, without export jobs items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param exportConnectionId Export connection Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all export jobs, without export jobs items as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExportJobInner> list(
        String resourceGroupName, String workspaceName, String exportConnectionId, Context context);

    /**
     * Gets an export job by its identifier.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param exportConnectionId Export connection Id.
     * @param exportJobId Export job Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an export job by its identifier along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExportJobInner> getWithResponse(
        String resourceGroupName, String workspaceName, String exportConnectionId, String exportJobId, Context context);

    /**
     * Gets an export job by its identifier.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param exportConnectionId Export connection Id.
     * @param exportJobId Export job Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an export job by its identifier.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExportJobInner get(String resourceGroupName, String workspaceName, String exportConnectionId, String exportJobId);

    /**
     * Creates an export job.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param exportConnectionId Export connection Id.
     * @param exportJobId Export job Id.
     * @param exportJob The ExportJob.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ExportJob in Azure Security Insights along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExportJobInner> createWithResponse(
        String resourceGroupName,
        String workspaceName,
        String exportConnectionId,
        String exportJobId,
        ExportJobInner exportJob,
        Context context);

    /**
     * Creates an export job.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param exportConnectionId Export connection Id.
     * @param exportJobId Export job Id.
     * @param exportJob The ExportJob.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ExportJob in Azure Security Insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExportJobInner create(
        String resourceGroupName,
        String workspaceName,
        String exportConnectionId,
        String exportJobId,
        ExportJobInner exportJob);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.ThreatIntelligencesClient;
import com.azure.resourcemanager.securityinsights.fluent.models.ThreatIntelligenceCountInner;
import com.azure.resourcemanager.securityinsights.fluent.models.TIObjectInner;
import com.azure.resourcemanager.securityinsights.models.CountQuery;
import com.azure.resourcemanager.securityinsights.models.Query;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceCount;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligences;
import com.azure.resourcemanager.securityinsights.models.TIObject;
import com.azure.resourcemanager.securityinsights.models.TiType;

public final class ThreatIntelligencesImpl implements ThreatIntelligences {
    private static final ClientLogger LOGGER = new ClientLogger(ThreatIntelligencesImpl.class);

    private final ThreatIntelligencesClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public ThreatIntelligencesImpl(ThreatIntelligencesClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ThreatIntelligenceCount> countWithResponse(String resourceGroupName, String workspaceName,
        TiType tiType, CountQuery query, Context context) {
        Response<ThreatIntelligenceCountInner> inner
            = this.serviceClient().countWithResponse(resourceGroupName, workspaceName, tiType, query, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ThreatIntelligenceCountImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ThreatIntelligenceCount count(String resourceGroupName, String workspaceName, TiType tiType) {
        ThreatIntelligenceCountInner inner = this.serviceClient().count(resourceGroupName, workspaceName, tiType);
        if (inner != null) {
            return new ThreatIntelligenceCountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<TIObject> query(String resourceGroupName, String workspaceName, TiType tiType) {
        PagedIterable<TIObjectInner> inner = this.serviceClient().query(resourceGroupName, workspaceName, tiType);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new TIObjectImpl(inner1, this.manager()));
    }

    public PagedIterable<TIObject> query(String resourceGroupName, String workspaceName, TiType tiType, Query query,
        Context context) {
        PagedIterable<TIObjectInner> inner
            = this.serviceClient().query(resourceGroupName, workspaceName, tiType, query, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new TIObjectImpl(inner1, this.manager()));
    }

    private ThreatIntelligencesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

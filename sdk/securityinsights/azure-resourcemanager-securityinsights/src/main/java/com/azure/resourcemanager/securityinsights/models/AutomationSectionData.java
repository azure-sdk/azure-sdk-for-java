// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The AutomationSectionData model. */
@Fluent
public final class AutomationSectionData {
    /*
     * Aggregation of all actions performed by the user automation rules
     */
    @JsonProperty(value = "actionsPerformedByAutomation")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> actionsPerformedByAutomation;

    /*
     * The amount of active automation rules the user have
     */
    @JsonProperty(value = "activeAutomationRules")
    private String activeAutomationRules;

    /*
     * The mean time it took to close an incident via automation rule vs the
     * mean time without
     */
    @JsonProperty(value = "timeSavedByAutomation")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> timeSavedByAutomation;

    /*
     * The total amount of incidents that were closed by automation rule
     */
    @JsonProperty(value = "closedIncidentsByAutomation")
    private String closedIncidentsByAutomation;

    /**
     * Get the actionsPerformedByAutomation property: Aggregation of all actions performed by the user automation rules.
     *
     * @return the actionsPerformedByAutomation value.
     */
    public Map<String, String> actionsPerformedByAutomation() {
        return this.actionsPerformedByAutomation;
    }

    /**
     * Set the actionsPerformedByAutomation property: Aggregation of all actions performed by the user automation rules.
     *
     * @param actionsPerformedByAutomation the actionsPerformedByAutomation value to set.
     * @return the AutomationSectionData object itself.
     */
    public AutomationSectionData withActionsPerformedByAutomation(Map<String, String> actionsPerformedByAutomation) {
        this.actionsPerformedByAutomation = actionsPerformedByAutomation;
        return this;
    }

    /**
     * Get the activeAutomationRules property: The amount of active automation rules the user have.
     *
     * @return the activeAutomationRules value.
     */
    public String activeAutomationRules() {
        return this.activeAutomationRules;
    }

    /**
     * Set the activeAutomationRules property: The amount of active automation rules the user have.
     *
     * @param activeAutomationRules the activeAutomationRules value to set.
     * @return the AutomationSectionData object itself.
     */
    public AutomationSectionData withActiveAutomationRules(String activeAutomationRules) {
        this.activeAutomationRules = activeAutomationRules;
        return this;
    }

    /**
     * Get the timeSavedByAutomation property: The mean time it took to close an incident via automation rule vs the
     * mean time without.
     *
     * @return the timeSavedByAutomation value.
     */
    public Map<String, String> timeSavedByAutomation() {
        return this.timeSavedByAutomation;
    }

    /**
     * Set the timeSavedByAutomation property: The mean time it took to close an incident via automation rule vs the
     * mean time without.
     *
     * @param timeSavedByAutomation the timeSavedByAutomation value to set.
     * @return the AutomationSectionData object itself.
     */
    public AutomationSectionData withTimeSavedByAutomation(Map<String, String> timeSavedByAutomation) {
        this.timeSavedByAutomation = timeSavedByAutomation;
        return this;
    }

    /**
     * Get the closedIncidentsByAutomation property: The total amount of incidents that were closed by automation rule.
     *
     * @return the closedIncidentsByAutomation value.
     */
    public String closedIncidentsByAutomation() {
        return this.closedIncidentsByAutomation;
    }

    /**
     * Set the closedIncidentsByAutomation property: The total amount of incidents that were closed by automation rule.
     *
     * @param closedIncidentsByAutomation the closedIncidentsByAutomation value to set.
     * @return the AutomationSectionData object itself.
     */
    public AutomationSectionData withClosedIncidentsByAutomation(String closedIncidentsByAutomation) {
        this.closedIncidentsByAutomation = closedIncidentsByAutomation;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

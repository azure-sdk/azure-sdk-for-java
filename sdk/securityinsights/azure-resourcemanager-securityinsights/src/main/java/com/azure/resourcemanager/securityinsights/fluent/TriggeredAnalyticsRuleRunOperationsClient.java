// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.TriggeredAnalyticsRuleRunInner;

/**
 * An instance of this class provides access to all the operations defined in TriggeredAnalyticsRuleRunOperationsClient.
 */
public interface TriggeredAnalyticsRuleRunOperationsClient {
    /**
     * Gets the triggered analytics rule run.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleRunId the triggered rule id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the triggered analytics rule run along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TriggeredAnalyticsRuleRunInner> getWithResponse(
        String resourceGroupName, String workspaceName, String ruleRunId, Context context);

    /**
     * Gets the triggered analytics rule run.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleRunId the triggered rule id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the triggered analytics rule run.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TriggeredAnalyticsRuleRunInner get(String resourceGroupName, String workspaceName, String ruleRunId);
}

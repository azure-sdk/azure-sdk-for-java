// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * The request paging configuration for NextPageUrl paging type parameters.
 */
@Fluent
public final class RestApiPollerRequestPagingNextPageUrlConfig extends RestApiPollerRequestPagingConfig {
    /*
     * Next page URL
     */
    private String nextPageUrl;

    /*
     * Query parameters of next page URL
     */
    private Map<String, String> nextPageUrlQueryParameters;

    /*
     * Paging query parameters in string template format
     */
    private String nextPageUrlQueryParametersTemplate;

    /*
     * Next page parameter name in HTTP request
     */
    private String nextPageParaName;

    /*
     * Next page header name in the request
     */
    private String nextPageRequestHeader;

    /*
     * JSON path of flag in HTTP response payload to indicate more pages
     */
    private String hasNextFlagJsonPath;

    /**
     * Creates an instance of RestApiPollerRequestPagingNextPageUrlConfig class.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig() {
    }

    /**
     * Get the nextPageUrl property: Next page URL.
     * 
     * @return the nextPageUrl value.
     */
    public String nextPageUrl() {
        return this.nextPageUrl;
    }

    /**
     * Set the nextPageUrl property: Next page URL.
     * 
     * @param nextPageUrl the nextPageUrl value to set.
     * @return the RestApiPollerRequestPagingNextPageUrlConfig object itself.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig withNextPageUrl(String nextPageUrl) {
        this.nextPageUrl = nextPageUrl;
        return this;
    }

    /**
     * Get the nextPageUrlQueryParameters property: Query parameters of next page URL.
     * 
     * @return the nextPageUrlQueryParameters value.
     */
    public Map<String, String> nextPageUrlQueryParameters() {
        return this.nextPageUrlQueryParameters;
    }

    /**
     * Set the nextPageUrlQueryParameters property: Query parameters of next page URL.
     * 
     * @param nextPageUrlQueryParameters the nextPageUrlQueryParameters value to set.
     * @return the RestApiPollerRequestPagingNextPageUrlConfig object itself.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig
        withNextPageUrlQueryParameters(Map<String, String> nextPageUrlQueryParameters) {
        this.nextPageUrlQueryParameters = nextPageUrlQueryParameters;
        return this;
    }

    /**
     * Get the nextPageUrlQueryParametersTemplate property: Paging query parameters in string template format.
     * 
     * @return the nextPageUrlQueryParametersTemplate value.
     */
    public String nextPageUrlQueryParametersTemplate() {
        return this.nextPageUrlQueryParametersTemplate;
    }

    /**
     * Set the nextPageUrlQueryParametersTemplate property: Paging query parameters in string template format.
     * 
     * @param nextPageUrlQueryParametersTemplate the nextPageUrlQueryParametersTemplate value to set.
     * @return the RestApiPollerRequestPagingNextPageUrlConfig object itself.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig
        withNextPageUrlQueryParametersTemplate(String nextPageUrlQueryParametersTemplate) {
        this.nextPageUrlQueryParametersTemplate = nextPageUrlQueryParametersTemplate;
        return this;
    }

    /**
     * Get the nextPageParaName property: Next page parameter name in HTTP request.
     * 
     * @return the nextPageParaName value.
     */
    public String nextPageParaName() {
        return this.nextPageParaName;
    }

    /**
     * Set the nextPageParaName property: Next page parameter name in HTTP request.
     * 
     * @param nextPageParaName the nextPageParaName value to set.
     * @return the RestApiPollerRequestPagingNextPageUrlConfig object itself.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig withNextPageParaName(String nextPageParaName) {
        this.nextPageParaName = nextPageParaName;
        return this;
    }

    /**
     * Get the nextPageRequestHeader property: Next page header name in the request.
     * 
     * @return the nextPageRequestHeader value.
     */
    public String nextPageRequestHeader() {
        return this.nextPageRequestHeader;
    }

    /**
     * Set the nextPageRequestHeader property: Next page header name in the request.
     * 
     * @param nextPageRequestHeader the nextPageRequestHeader value to set.
     * @return the RestApiPollerRequestPagingNextPageUrlConfig object itself.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig withNextPageRequestHeader(String nextPageRequestHeader) {
        this.nextPageRequestHeader = nextPageRequestHeader;
        return this;
    }

    /**
     * Get the hasNextFlagJsonPath property: JSON path of flag in HTTP response payload to indicate more pages.
     * 
     * @return the hasNextFlagJsonPath value.
     */
    public String hasNextFlagJsonPath() {
        return this.hasNextFlagJsonPath;
    }

    /**
     * Set the hasNextFlagJsonPath property: JSON path of flag in HTTP response payload to indicate more pages.
     * 
     * @param hasNextFlagJsonPath the hasNextFlagJsonPath value to set.
     * @return the RestApiPollerRequestPagingNextPageUrlConfig object itself.
     */
    public RestApiPollerRequestPagingNextPageUrlConfig withHasNextFlagJsonPath(String hasNextFlagJsonPath) {
        this.hasNextFlagJsonPath = hasNextFlagJsonPath;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingNextPageUrlConfig withPagingType(RestApiPollerRequestPagingKind pagingType) {
        super.withPagingType(pagingType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingNextPageUrlConfig withPageSize(Integer pageSize) {
        super.withPageSize(pageSize);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingNextPageUrlConfig withPageSizeParameterName(String pageSizeParameterName) {
        super.withPageSizeParameterName(pageSizeParameterName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("pagingType", pagingType() == null ? null : pagingType().toString());
        jsonWriter.writeNumberField("pageSize", pageSize());
        jsonWriter.writeStringField("pageSizeParameterName", pageSizeParameterName());
        jsonWriter.writeStringField("nextPageUrl", this.nextPageUrl);
        jsonWriter.writeMapField("nextPageUrlQueryParameters", this.nextPageUrlQueryParameters,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("nextPageUrlQueryParametersTemplate", this.nextPageUrlQueryParametersTemplate);
        jsonWriter.writeStringField("nextPageParaName", this.nextPageParaName);
        jsonWriter.writeStringField("nextPageRequestHeader", this.nextPageRequestHeader);
        jsonWriter.writeStringField("hasNextFlagJsonPath", this.hasNextFlagJsonPath);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestApiPollerRequestPagingNextPageUrlConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestApiPollerRequestPagingNextPageUrlConfig if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RestApiPollerRequestPagingNextPageUrlConfig.
     */
    public static RestApiPollerRequestPagingNextPageUrlConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestApiPollerRequestPagingNextPageUrlConfig deserializedRestApiPollerRequestPagingNextPageUrlConfig
                = new RestApiPollerRequestPagingNextPageUrlConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("pagingType".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig
                        .withPagingType(RestApiPollerRequestPagingKind.fromString(reader.getString()));
                } else if ("pageSize".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig
                        .withPageSize(reader.getNullable(JsonReader::getInt));
                } else if ("pageSizeParameterName".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig
                        .withPageSizeParameterName(reader.getString());
                } else if ("nextPageUrl".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig.nextPageUrl = reader.getString();
                } else if ("nextPageUrlQueryParameters".equals(fieldName)) {
                    Map<String, String> nextPageUrlQueryParameters = reader.readMap(reader1 -> reader1.getString());
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig.nextPageUrlQueryParameters
                        = nextPageUrlQueryParameters;
                } else if ("nextPageUrlQueryParametersTemplate".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig.nextPageUrlQueryParametersTemplate
                        = reader.getString();
                } else if ("nextPageParaName".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig.nextPageParaName = reader.getString();
                } else if ("nextPageRequestHeader".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig.nextPageRequestHeader = reader.getString();
                } else if ("hasNextFlagJsonPath".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingNextPageUrlConfig.hasNextFlagJsonPath = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestApiPollerRequestPagingNextPageUrlConfig;
        });
    }
}

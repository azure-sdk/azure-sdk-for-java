// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;
import java.util.List;

/** Describes package properties. */
@Fluent
public class PackageBaseProperties {
    /*
     * The content id of the package
     */
    @JsonProperty(value = "contentId")
    private String contentId;

    /*
     * Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of
     * the package
     */
    @JsonProperty(value = "contentProductId")
    private String contentProductId;

    /*
     * The package kind
     */
    @JsonProperty(value = "contentKind")
    private PackageKind contentKind;

    /*
     * The version of the content schema.
     */
    @JsonProperty(value = "contentSchemaVersion")
    private String contentSchemaVersion;

    /*
     * Flag indicates if this is a newly published package.
     */
    @JsonProperty(value = "isNew")
    private Flag isNew;

    /*
     * Flag indicates if this package is in preview.
     */
    @JsonProperty(value = "isPreview")
    private Flag isPreview;

    /*
     * Flag indicates if this package is among the featured list.
     */
    @JsonProperty(value = "isFeatured")
    private Flag isFeatured;

    /*
     * the latest version number of the package
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * The display name of the package
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * The description of the package
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The publisher display name of the package
     */
    @JsonProperty(value = "publisherDisplayName")
    private String publisherDisplayName;

    /*
     * The source of the package
     */
    @JsonProperty(value = "source")
    private MetadataSource source;

    /*
     * The author of the package
     */
    @JsonProperty(value = "author")
    private MetadataAuthor author;

    /*
     * The support tier of the package
     */
    @JsonProperty(value = "support")
    private MetadataSupport support;

    /*
     * The support tier of the package
     */
    @JsonProperty(value = "dependencies")
    private MetadataDependencies dependencies;

    /*
     * Providers for the package item
     */
    @JsonProperty(value = "providers")
    private List<String> providers;

    /*
     * first publish date package item
     */
    @JsonProperty(value = "firstPublishDate")
    private LocalDate firstPublishDate;

    /*
     * last publish date for the package item
     */
    @JsonProperty(value = "lastPublishDate")
    private LocalDate lastPublishDate;

    /*
     * The categories of the package
     */
    @JsonProperty(value = "categories")
    private MetadataCategories categories;

    /*
     * the tactics the resource covers
     */
    @JsonProperty(value = "threatAnalysisTactics")
    private List<String> threatAnalysisTactics;

    /*
     * the techniques the resource covers, these have to be aligned with the tactics being used
     */
    @JsonProperty(value = "threatAnalysisTechniques")
    private List<String> threatAnalysisTechniques;

    /*
     * the icon identifier. this id can later be fetched from the content metadata
     */
    @JsonProperty(value = "icon")
    private String icon;

    /** Creates an instance of PackageBaseProperties class. */
    public PackageBaseProperties() {
    }

    /**
     * Get the contentId property: The content id of the package.
     *
     * @return the contentId value.
     */
    public String contentId() {
        return this.contentId;
    }

    /**
     * Set the contentId property: The content id of the package.
     *
     * @param contentId the contentId value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withContentId(String contentId) {
        this.contentId = contentId;
        return this;
    }

    /**
     * Get the contentProductId property: Unique ID for the content. It should be generated based on the contentId,
     * contentKind and the contentVersion of the package.
     *
     * @return the contentProductId value.
     */
    public String contentProductId() {
        return this.contentProductId;
    }

    /**
     * Set the contentProductId property: Unique ID for the content. It should be generated based on the contentId,
     * contentKind and the contentVersion of the package.
     *
     * @param contentProductId the contentProductId value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withContentProductId(String contentProductId) {
        this.contentProductId = contentProductId;
        return this;
    }

    /**
     * Get the contentKind property: The package kind.
     *
     * @return the contentKind value.
     */
    public PackageKind contentKind() {
        return this.contentKind;
    }

    /**
     * Set the contentKind property: The package kind.
     *
     * @param contentKind the contentKind value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withContentKind(PackageKind contentKind) {
        this.contentKind = contentKind;
        return this;
    }

    /**
     * Get the contentSchemaVersion property: The version of the content schema.
     *
     * @return the contentSchemaVersion value.
     */
    public String contentSchemaVersion() {
        return this.contentSchemaVersion;
    }

    /**
     * Set the contentSchemaVersion property: The version of the content schema.
     *
     * @param contentSchemaVersion the contentSchemaVersion value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withContentSchemaVersion(String contentSchemaVersion) {
        this.contentSchemaVersion = contentSchemaVersion;
        return this;
    }

    /**
     * Get the isNew property: Flag indicates if this is a newly published package.
     *
     * @return the isNew value.
     */
    public Flag isNew() {
        return this.isNew;
    }

    /**
     * Set the isNew property: Flag indicates if this is a newly published package.
     *
     * @param isNew the isNew value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withIsNew(Flag isNew) {
        this.isNew = isNew;
        return this;
    }

    /**
     * Get the isPreview property: Flag indicates if this package is in preview.
     *
     * @return the isPreview value.
     */
    public Flag isPreview() {
        return this.isPreview;
    }

    /**
     * Set the isPreview property: Flag indicates if this package is in preview.
     *
     * @param isPreview the isPreview value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withIsPreview(Flag isPreview) {
        this.isPreview = isPreview;
        return this;
    }

    /**
     * Get the isFeatured property: Flag indicates if this package is among the featured list.
     *
     * @return the isFeatured value.
     */
    public Flag isFeatured() {
        return this.isFeatured;
    }

    /**
     * Set the isFeatured property: Flag indicates if this package is among the featured list.
     *
     * @param isFeatured the isFeatured value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withIsFeatured(Flag isFeatured) {
        this.isFeatured = isFeatured;
        return this;
    }

    /**
     * Get the version property: the latest version number of the package.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: the latest version number of the package.
     *
     * @param version the version value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the displayName property: The display name of the package.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The display name of the package.
     *
     * @param displayName the displayName value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: The description of the package.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description of the package.
     *
     * @param description the description value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the publisherDisplayName property: The publisher display name of the package.
     *
     * @return the publisherDisplayName value.
     */
    public String publisherDisplayName() {
        return this.publisherDisplayName;
    }

    /**
     * Set the publisherDisplayName property: The publisher display name of the package.
     *
     * @param publisherDisplayName the publisherDisplayName value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withPublisherDisplayName(String publisherDisplayName) {
        this.publisherDisplayName = publisherDisplayName;
        return this;
    }

    /**
     * Get the source property: The source of the package.
     *
     * @return the source value.
     */
    public MetadataSource source() {
        return this.source;
    }

    /**
     * Set the source property: The source of the package.
     *
     * @param source the source value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withSource(MetadataSource source) {
        this.source = source;
        return this;
    }

    /**
     * Get the author property: The author of the package.
     *
     * @return the author value.
     */
    public MetadataAuthor author() {
        return this.author;
    }

    /**
     * Set the author property: The author of the package.
     *
     * @param author the author value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withAuthor(MetadataAuthor author) {
        this.author = author;
        return this;
    }

    /**
     * Get the support property: The support tier of the package.
     *
     * @return the support value.
     */
    public MetadataSupport support() {
        return this.support;
    }

    /**
     * Set the support property: The support tier of the package.
     *
     * @param support the support value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withSupport(MetadataSupport support) {
        this.support = support;
        return this;
    }

    /**
     * Get the dependencies property: The support tier of the package.
     *
     * @return the dependencies value.
     */
    public MetadataDependencies dependencies() {
        return this.dependencies;
    }

    /**
     * Set the dependencies property: The support tier of the package.
     *
     * @param dependencies the dependencies value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withDependencies(MetadataDependencies dependencies) {
        this.dependencies = dependencies;
        return this;
    }

    /**
     * Get the providers property: Providers for the package item.
     *
     * @return the providers value.
     */
    public List<String> providers() {
        return this.providers;
    }

    /**
     * Set the providers property: Providers for the package item.
     *
     * @param providers the providers value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withProviders(List<String> providers) {
        this.providers = providers;
        return this;
    }

    /**
     * Get the firstPublishDate property: first publish date package item.
     *
     * @return the firstPublishDate value.
     */
    public LocalDate firstPublishDate() {
        return this.firstPublishDate;
    }

    /**
     * Set the firstPublishDate property: first publish date package item.
     *
     * @param firstPublishDate the firstPublishDate value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withFirstPublishDate(LocalDate firstPublishDate) {
        this.firstPublishDate = firstPublishDate;
        return this;
    }

    /**
     * Get the lastPublishDate property: last publish date for the package item.
     *
     * @return the lastPublishDate value.
     */
    public LocalDate lastPublishDate() {
        return this.lastPublishDate;
    }

    /**
     * Set the lastPublishDate property: last publish date for the package item.
     *
     * @param lastPublishDate the lastPublishDate value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withLastPublishDate(LocalDate lastPublishDate) {
        this.lastPublishDate = lastPublishDate;
        return this;
    }

    /**
     * Get the categories property: The categories of the package.
     *
     * @return the categories value.
     */
    public MetadataCategories categories() {
        return this.categories;
    }

    /**
     * Set the categories property: The categories of the package.
     *
     * @param categories the categories value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withCategories(MetadataCategories categories) {
        this.categories = categories;
        return this;
    }

    /**
     * Get the threatAnalysisTactics property: the tactics the resource covers.
     *
     * @return the threatAnalysisTactics value.
     */
    public List<String> threatAnalysisTactics() {
        return this.threatAnalysisTactics;
    }

    /**
     * Set the threatAnalysisTactics property: the tactics the resource covers.
     *
     * @param threatAnalysisTactics the threatAnalysisTactics value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withThreatAnalysisTactics(List<String> threatAnalysisTactics) {
        this.threatAnalysisTactics = threatAnalysisTactics;
        return this;
    }

    /**
     * Get the threatAnalysisTechniques property: the techniques the resource covers, these have to be aligned with the
     * tactics being used.
     *
     * @return the threatAnalysisTechniques value.
     */
    public List<String> threatAnalysisTechniques() {
        return this.threatAnalysisTechniques;
    }

    /**
     * Set the threatAnalysisTechniques property: the techniques the resource covers, these have to be aligned with the
     * tactics being used.
     *
     * @param threatAnalysisTechniques the threatAnalysisTechniques value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withThreatAnalysisTechniques(List<String> threatAnalysisTechniques) {
        this.threatAnalysisTechniques = threatAnalysisTechniques;
        return this;
    }

    /**
     * Get the icon property: the icon identifier. this id can later be fetched from the content metadata.
     *
     * @return the icon value.
     */
    public String icon() {
        return this.icon;
    }

    /**
     * Set the icon property: the icon identifier. this id can later be fetched from the content metadata.
     *
     * @param icon the icon value to set.
     * @return the PackageBaseProperties object itself.
     */
    public PackageBaseProperties withIcon(String icon) {
        this.icon = icon;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (source() != null) {
            source().validate();
        }
        if (author() != null) {
            author().validate();
        }
        if (support() != null) {
            support().validate();
        }
        if (dependencies() != null) {
            dependencies().validate();
        }
        if (categories() != null) {
            categories().validate();
        }
    }
}

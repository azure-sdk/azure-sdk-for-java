// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes the SapControl connector configuration.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = SapControlConnector.class, visible = true)
@JsonTypeName("SapControl")
@Fluent
public final class SapControlConnector extends SystemsConfigurationConnector {
    /*
     * Represents the types of SAP systems.
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private SystemConfigurationConnectorType type = SystemConfigurationConnectorType.SAP_CONTROL;

    /*
     * The server name.
     * FQDN or IP address.
     */
    @JsonProperty(value = "server", required = true)
    private String server;

    /*
     * The instance number. Only 2 digits are allowed.
     */
    @JsonProperty(value = "instance", required = true)
    private String instance;

    /*
     * The timezone.
     * example: "GMT+0" or "GMT-8"
     * default: "GMT+0"
     */
    @JsonProperty(value = "timezone")
    private String timezone;

    /*
     * The port of the SOAP connection to SAP Control.
     */
    @JsonProperty(value = "port")
    private String port;

    /*
     * Represents the types of HTTPS configuration to connect to the SapControl service.
     */
    @JsonProperty(value = "httpsConfiguration")
    private HttpsConfigurationType httpsConfiguration;

    /**
     * Creates an instance of SapControlConnector class.
     */
    public SapControlConnector() {
    }

    /**
     * Get the type property: Represents the types of SAP systems.
     * 
     * @return the type value.
     */
    @Override
    public SystemConfigurationConnectorType type() {
        return this.type;
    }

    /**
     * Get the server property: The server name.
     * FQDN or IP address.
     * 
     * @return the server value.
     */
    public String server() {
        return this.server;
    }

    /**
     * Set the server property: The server name.
     * FQDN or IP address.
     * 
     * @param server the server value to set.
     * @return the SapControlConnector object itself.
     */
    public SapControlConnector withServer(String server) {
        this.server = server;
        return this;
    }

    /**
     * Get the instance property: The instance number. Only 2 digits are allowed.
     * 
     * @return the instance value.
     */
    public String instance() {
        return this.instance;
    }

    /**
     * Set the instance property: The instance number. Only 2 digits are allowed.
     * 
     * @param instance the instance value to set.
     * @return the SapControlConnector object itself.
     */
    public SapControlConnector withInstance(String instance) {
        this.instance = instance;
        return this;
    }

    /**
     * Get the timezone property: The timezone.
     * example: "GMT+0" or "GMT-8"
     * default: "GMT+0".
     * 
     * @return the timezone value.
     */
    public String timezone() {
        return this.timezone;
    }

    /**
     * Set the timezone property: The timezone.
     * example: "GMT+0" or "GMT-8"
     * default: "GMT+0".
     * 
     * @param timezone the timezone value to set.
     * @return the SapControlConnector object itself.
     */
    public SapControlConnector withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }

    /**
     * Get the port property: The port of the SOAP connection to SAP Control.
     * 
     * @return the port value.
     */
    public String port() {
        return this.port;
    }

    /**
     * Set the port property: The port of the SOAP connection to SAP Control.
     * 
     * @param port the port value to set.
     * @return the SapControlConnector object itself.
     */
    public SapControlConnector withPort(String port) {
        this.port = port;
        return this;
    }

    /**
     * Get the httpsConfiguration property: Represents the types of HTTPS configuration to connect to the SapControl
     * service.
     * 
     * @return the httpsConfiguration value.
     */
    public HttpsConfigurationType httpsConfiguration() {
        return this.httpsConfiguration;
    }

    /**
     * Set the httpsConfiguration property: Represents the types of HTTPS configuration to connect to the SapControl
     * service.
     * 
     * @param httpsConfiguration the httpsConfiguration value to set.
     * @return the SapControlConnector object itself.
     */
    public SapControlConnector withHttpsConfiguration(HttpsConfigurationType httpsConfiguration) {
        this.httpsConfiguration = httpsConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (server() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property server in model SapControlConnector"));
        }
        if (instance() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property instance in model SapControlConnector"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SapControlConnector.class);
}

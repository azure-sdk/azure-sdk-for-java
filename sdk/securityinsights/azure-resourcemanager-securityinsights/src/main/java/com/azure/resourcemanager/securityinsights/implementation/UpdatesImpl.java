// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.UpdatesClient;
import com.azure.resourcemanager.securityinsights.fluent.models.RecommendationInner;
import com.azure.resourcemanager.securityinsights.models.Recommendation;
import com.azure.resourcemanager.securityinsights.models.RecommendationPatch;
import com.azure.resourcemanager.securityinsights.models.Updates;
import java.util.UUID;

public final class UpdatesImpl implements Updates {
    private static final ClientLogger LOGGER = new ClientLogger(UpdatesImpl.class);

    private final UpdatesClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public UpdatesImpl(UpdatesClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Recommendation> recommendationWithResponse(String resourceGroupName, String workspaceName,
        UUID recommendationId, RecommendationPatch recommendationPatch, Context context) {
        Response<RecommendationInner> inner = this.serviceClient().recommendationWithResponse(resourceGroupName,
            workspaceName, recommendationId, recommendationPatch, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new RecommendationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Recommendation recommendation(String resourceGroupName, String workspaceName, UUID recommendationId,
        RecommendationPatch recommendationPatch) {
        RecommendationInner inner = this.serviceClient().recommendation(resourceGroupName, workspaceName,
            recommendationId, recommendationPatch);
        if (inner != null) {
            return new RecommendationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private UpdatesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

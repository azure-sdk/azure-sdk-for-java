// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.ContentMainTemplateProperties;
import com.azure.resourcemanager.securityinsights.fluent.models.PackageItemProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** package item ARM resource. */
@Fluent
public final class PackageItemArmResource extends ResourceWithEtag {
    /*
     * package item properties
     */
    @JsonProperty(value = "properties")
    private PackageItemProperties innerProperties;

    /** Creates an instance of PackageItemArmResource class. */
    public PackageItemArmResource() {
    }

    /**
     * Get the innerProperties property: package item properties.
     *
     * @return the innerProperties value.
     */
    private PackageItemProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public PackageItemArmResource withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the contentId property: The package item id.
     *
     * @return the contentId value.
     */
    public String contentId() {
        return this.innerProperties() == null ? null : this.innerProperties().contentId();
    }

    /**
     * Set the contentId property: The package item id.
     *
     * @param contentId the contentId value to set.
     * @return the PackageItemArmResource object itself.
     */
    public PackageItemArmResource withContentId(String contentId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackageItemProperties();
        }
        this.innerProperties().withContentId(contentId);
        return this;
    }

    /**
     * Get the contentKind property: The package item kind.
     *
     * @return the contentKind value.
     */
    public Kind contentKind() {
        return this.innerProperties() == null ? null : this.innerProperties().contentKind();
    }

    /**
     * Set the contentKind property: The package item kind.
     *
     * @param contentKind the contentKind value to set.
     * @return the PackageItemArmResource object itself.
     */
    public PackageItemArmResource withContentKind(Kind contentKind) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackageItemProperties();
        }
        this.innerProperties().withContentKind(contentKind);
        return this;
    }

    /**
     * Get the displayName property: The display name of the package item.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The display name of the package item.
     *
     * @param displayName the displayName value to set.
     * @return the PackageItemArmResource object itself.
     */
    public PackageItemArmResource withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackageItemProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Get the mainTemplate property: The main template of the package item.
     *
     * @return the mainTemplate value.
     */
    public ContentMainTemplateProperties mainTemplate() {
        return this.innerProperties() == null ? null : this.innerProperties().mainTemplate();
    }

    /**
     * Set the mainTemplate property: The main template of the package item.
     *
     * @param mainTemplate the mainTemplate value to set.
     * @return the PackageItemArmResource object itself.
     */
    public PackageItemArmResource withMainTemplate(ContentMainTemplateProperties mainTemplate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackageItemProperties();
        }
        this.innerProperties().withMainTemplate(mainTemplate);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

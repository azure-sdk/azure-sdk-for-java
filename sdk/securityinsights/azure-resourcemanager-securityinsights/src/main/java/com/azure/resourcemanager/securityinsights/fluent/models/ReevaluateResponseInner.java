// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Reevaluate response object.
 */
@Fluent
public final class ReevaluateResponseInner implements JsonSerializable<ReevaluateResponseInner> {
    /*
     * The time stamp (UTC) when the recommendation was last evaluated.
     */
    private OffsetDateTime lastEvaluatedTimeUtc;

    /**
     * Creates an instance of ReevaluateResponseInner class.
     */
    public ReevaluateResponseInner() {
    }

    /**
     * Get the lastEvaluatedTimeUtc property: The time stamp (UTC) when the recommendation was last evaluated.
     * 
     * @return the lastEvaluatedTimeUtc value.
     */
    public OffsetDateTime lastEvaluatedTimeUtc() {
        return this.lastEvaluatedTimeUtc;
    }

    /**
     * Set the lastEvaluatedTimeUtc property: The time stamp (UTC) when the recommendation was last evaluated.
     * 
     * @param lastEvaluatedTimeUtc the lastEvaluatedTimeUtc value to set.
     * @return the ReevaluateResponseInner object itself.
     */
    public ReevaluateResponseInner withLastEvaluatedTimeUtc(OffsetDateTime lastEvaluatedTimeUtc) {
        this.lastEvaluatedTimeUtc = lastEvaluatedTimeUtc;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("lastEvaluatedTimeUtc",
            this.lastEvaluatedTimeUtc == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastEvaluatedTimeUtc));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReevaluateResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReevaluateResponseInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReevaluateResponseInner.
     */
    public static ReevaluateResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReevaluateResponseInner deserializedReevaluateResponseInner = new ReevaluateResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("lastEvaluatedTimeUtc".equals(fieldName)) {
                    deserializedReevaluateResponseInner.lastEvaluatedTimeUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReevaluateResponseInner;
        });
    }
}

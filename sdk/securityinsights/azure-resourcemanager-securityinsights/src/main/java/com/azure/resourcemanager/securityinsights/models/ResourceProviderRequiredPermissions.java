// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Required permissions for the connector resource provider that define in ResourceProviders.
 * For more information about the permissions see &lt;see
 * href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format"&gt;here&lt;/see&gt;.
 */
@Fluent
public final class ResourceProviderRequiredPermissions {
    /*
     * Gets or sets a value indicating whether the permission is read action (GET).
     */
    @JsonProperty(value = "read")
    private Boolean read;

    /*
     * Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
     */
    @JsonProperty(value = "write")
    private Boolean write;

    /*
     * Gets or sets a value indicating whether the permission is delete action (DELETE).
     */
    @JsonProperty(value = "delete")
    private Boolean delete;

    /*
     * Gets or sets a value indicating whether the permission is custom actions (POST).
     */
    @JsonProperty(value = "action")
    private Boolean action;

    /**
     * Creates an instance of ResourceProviderRequiredPermissions class.
     */
    public ResourceProviderRequiredPermissions() {
    }

    /**
     * Get the read property: Gets or sets a value indicating whether the permission is read action (GET).
     * 
     * @return the read value.
     */
    public Boolean read() {
        return this.read;
    }

    /**
     * Set the read property: Gets or sets a value indicating whether the permission is read action (GET).
     * 
     * @param read the read value to set.
     * @return the ResourceProviderRequiredPermissions object itself.
     */
    public ResourceProviderRequiredPermissions withRead(Boolean read) {
        this.read = read;
        return this;
    }

    /**
     * Get the write property: Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
     * 
     * @return the write value.
     */
    public Boolean write() {
        return this.write;
    }

    /**
     * Set the write property: Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
     * 
     * @param write the write value to set.
     * @return the ResourceProviderRequiredPermissions object itself.
     */
    public ResourceProviderRequiredPermissions withWrite(Boolean write) {
        this.write = write;
        return this;
    }

    /**
     * Get the delete property: Gets or sets a value indicating whether the permission is delete action (DELETE).
     * 
     * @return the delete value.
     */
    public Boolean delete() {
        return this.delete;
    }

    /**
     * Set the delete property: Gets or sets a value indicating whether the permission is delete action (DELETE).
     * 
     * @param delete the delete value to set.
     * @return the ResourceProviderRequiredPermissions object itself.
     */
    public ResourceProviderRequiredPermissions withDelete(Boolean delete) {
        this.delete = delete;
        return this;
    }

    /**
     * Get the action property: Gets or sets a value indicating whether the permission is custom actions (POST).
     * 
     * @return the action value.
     */
    public Boolean action() {
        return this.action;
    }

    /**
     * Set the action property: Gets or sets a value indicating whether the permission is custom actions (POST).
     * 
     * @param action the action value to set.
     * @return the ResourceProviderRequiredPermissions object itself.
     */
    public ResourceProviderRequiredPermissions withAction(Boolean action) {
        this.action = action;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

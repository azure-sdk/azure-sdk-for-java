// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.SystemResourceInner;
import com.azure.resourcemanager.securityinsights.models.Action;
import com.azure.resourcemanager.securityinsights.models.SystemResource;
import com.azure.resourcemanager.securityinsights.models.SystemStatusType;
import com.azure.resourcemanager.securityinsights.models.SystemsConfiguration;
import java.time.OffsetDateTime;

public final class SystemResourceImpl implements SystemResource, SystemResource.Definition, SystemResource.Update {
    private SystemResourceInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public SystemStatusType status() {
        return this.innerModel().status();
    }

    public SystemsConfiguration configuration() {
        return this.innerModel().configuration();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public OffsetDateTime lastModifiedTimeUtc() {
        return this.innerModel().lastModifiedTimeUtc();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SystemResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String agentResourceName;

    private String systemResourceName;

    public SystemResourceImpl withExistingBusinessApplicationAgent(String resourceGroupName, String workspaceName,
        String agentResourceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        this.agentResourceName = agentResourceName;
        return this;
    }

    public SystemResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getSystems()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SystemResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSystems()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    SystemResourceImpl(String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new SystemResourceInner();
        this.serviceManager = serviceManager;
        this.systemResourceName = name;
    }

    public SystemResourceImpl update() {
        return this;
    }

    public SystemResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSystems()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SystemResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSystems()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    SystemResourceImpl(SystemResourceInner innerObject,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.agentResourceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "businessApplicationAgents");
        this.systemResourceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "systems");
    }

    public SystemResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSystems()
            .getWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName, Context.NONE)
            .getValue();
        return this;
    }

    public SystemResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSystems()
            .getWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName, context)
            .getValue();
        return this;
    }

    public PagedIterable<Action> listActions() {
        return serviceManager.systems()
            .listActions(resourceGroupName, workspaceName, agentResourceName, systemResourceName);
    }

    public PagedIterable<Action> listActions(String filter, String skipToken, Context context) {
        return serviceManager.systems()
            .listActions(resourceGroupName, workspaceName, agentResourceName, systemResourceName, filter, skipToken,
                context);
    }

    public Response<Void> undoActionWithResponse(Object payload, Context context) {
        return serviceManager.systems()
            .undoActionWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName, payload,
                context);
    }

    public void undoAction() {
        serviceManager.systems().undoAction(resourceGroupName, workspaceName, agentResourceName, systemResourceName);
    }

    public Response<Void> reportActionStatusWithResponse(Object payload, Context context) {
        return serviceManager.systems()
            .reportActionStatusWithResponse(resourceGroupName, workspaceName, agentResourceName, systemResourceName,
                payload, context);
    }

    public void reportActionStatus() {
        serviceManager.systems()
            .reportActionStatus(resourceGroupName, workspaceName, agentResourceName, systemResourceName);
    }

    public SystemResourceImpl withConfiguration(SystemsConfiguration configuration) {
        this.innerModel().withConfiguration(configuration);
        return this;
    }

    public SystemResourceImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public SystemResourceImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public SystemResourceImpl withStatus(SystemStatusType status) {
        this.innerModel().withStatus(status);
        return this;
    }
}

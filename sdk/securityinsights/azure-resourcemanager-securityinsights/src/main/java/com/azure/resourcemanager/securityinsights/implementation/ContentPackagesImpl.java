// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.ContentPackagesClient;
import com.azure.resourcemanager.securityinsights.fluent.models.PackageModelInner;
import com.azure.resourcemanager.securityinsights.models.ContentPackages;
import com.azure.resourcemanager.securityinsights.models.PackageModel;

public final class ContentPackagesImpl implements ContentPackages {
    private static final ClientLogger LOGGER = new ClientLogger(ContentPackagesImpl.class);

    private final ContentPackagesClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public ContentPackagesImpl(ContentPackagesClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PackageModel> list(String resourceGroupName, String workspaceName) {
        PagedIterable<PackageModelInner> inner = this.serviceClient().list(resourceGroupName, workspaceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PackageModelImpl(inner1, this.manager()));
    }

    public PagedIterable<PackageModel> list(String resourceGroupName, String workspaceName, String filter,
        String orderby, String search, Boolean count, Integer top, Integer skip, String skipToken, Context context) {
        PagedIterable<PackageModelInner> inner = this.serviceClient().list(resourceGroupName, workspaceName, filter,
            orderby, search, count, top, skip, skipToken, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new PackageModelImpl(inner1, this.manager()));
    }

    public Response<PackageModel> getWithResponse(String resourceGroupName, String workspaceName, String packageId,
        Context context) {
        Response<PackageModelInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, workspaceName, packageId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PackageModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PackageModel get(String resourceGroupName, String workspaceName, String packageId) {
        PackageModelInner inner = this.serviceClient().get(resourceGroupName, workspaceName, packageId);
        if (inner != null) {
            return new PackageModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ContentPackagesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

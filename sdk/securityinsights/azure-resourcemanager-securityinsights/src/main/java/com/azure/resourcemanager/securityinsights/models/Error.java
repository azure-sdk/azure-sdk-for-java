// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The error description for why a publication failed.
 */
@Fluent
public final class Error {
    /*
     * The member resource name for which the publication error occured
     */
    @JsonProperty(value = "memberResourceName", required = true)
    private String memberResourceName;

    /*
     * The error message
     */
    @JsonProperty(value = "errorMessage", required = true)
    private String errorMessage;

    /**
     * Creates an instance of Error class.
     */
    public Error() {
    }

    /**
     * Get the memberResourceName property: The member resource name for which the publication error occured.
     * 
     * @return the memberResourceName value.
     */
    public String memberResourceName() {
        return this.memberResourceName;
    }

    /**
     * Set the memberResourceName property: The member resource name for which the publication error occured.
     * 
     * @param memberResourceName the memberResourceName value to set.
     * @return the Error object itself.
     */
    public Error withMemberResourceName(String memberResourceName) {
        this.memberResourceName = memberResourceName;
        return this;
    }

    /**
     * Get the errorMessage property: The error message.
     * 
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Set the errorMessage property: The error message.
     * 
     * @param errorMessage the errorMessage value to set.
     * @return the Error object itself.
     */
    public Error withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (memberResourceName() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property memberResourceName in model Error"));
        }
        if (errorMessage() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property errorMessage in model Error"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Error.class);
}

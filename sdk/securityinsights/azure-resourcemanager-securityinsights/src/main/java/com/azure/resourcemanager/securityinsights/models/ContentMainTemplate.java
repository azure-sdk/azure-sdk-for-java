// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.ContentMainTemplateProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** ARM template resource for main template. */
@Fluent
public final class ContentMainTemplate extends ResourceWithEtag {
    /*
     * main template properties
     */
    @JsonProperty(value = "properties")
    private ContentMainTemplateProperties innerProperties;

    /** Creates an instance of ContentMainTemplate class. */
    public ContentMainTemplate() {
    }

    /**
     * Get the innerProperties property: main template properties.
     *
     * @return the innerProperties value.
     */
    private ContentMainTemplateProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public ContentMainTemplate withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the apiVersion property: API version of the ARM resource.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().apiVersion();
    }

    /**
     * Set the apiVersion property: API version of the ARM resource.
     *
     * @param apiVersion the apiVersion value to set.
     * @return the ContentMainTemplate object itself.
     */
    public ContentMainTemplate withApiVersion(String apiVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ContentMainTemplateProperties();
        }
        this.innerProperties().withApiVersion(apiVersion);
        return this;
    }

    /**
     * Get the dependsOn property: dependencies of the ARM template.
     *
     * @return the dependsOn value.
     */
    public List<String> dependsOn() {
        return this.innerProperties() == null ? null : this.innerProperties().dependsOn();
    }

    /**
     * Set the dependsOn property: dependencies of the ARM template.
     *
     * @param dependsOn the dependsOn value to set.
     * @return the ContentMainTemplate object itself.
     */
    public ContentMainTemplate withDependsOn(List<String> dependsOn) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ContentMainTemplateProperties();
        }
        this.innerProperties().withDependsOn(dependsOn);
        return this;
    }

    /**
     * Get the resources property: resources in the ARM template.
     *
     * @return the resources value.
     */
    public List<ContentMainTemplate> resources() {
        return this.innerProperties() == null ? null : this.innerProperties().resources();
    }

    /**
     * Set the resources property: resources in the ARM template.
     *
     * @param resources the resources value to set.
     * @return the ContentMainTemplate object itself.
     */
    public ContentMainTemplate withResources(List<ContentMainTemplate> resources) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ContentMainTemplateProperties();
        }
        this.innerProperties().withResources(resources);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

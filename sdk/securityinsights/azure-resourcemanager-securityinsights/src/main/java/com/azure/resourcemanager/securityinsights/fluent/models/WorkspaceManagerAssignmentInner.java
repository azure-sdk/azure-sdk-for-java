// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.AssignmentItem;
import com.azure.resourcemanager.securityinsights.models.AzureEntityResource;
import com.azure.resourcemanager.securityinsights.models.JobProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** The workspace manager assignment. */
@Fluent
public final class WorkspaceManagerAssignmentInner extends AzureEntityResource {
    /*
     * The workspace manager assignment object
     */
    @JsonProperty(value = "properties")
    private WorkspaceManagerAssignmentProperties innerProperties;

    /** Creates an instance of WorkspaceManagerAssignmentInner class. */
    public WorkspaceManagerAssignmentInner() {
    }

    /**
     * Get the innerProperties property: The workspace manager assignment object.
     *
     * @return the innerProperties value.
     */
    private WorkspaceManagerAssignmentProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the targetResourceName property: The resource name of the workspace manager group targeted by the workspace
     * manager assignment.
     *
     * @return the targetResourceName value.
     */
    public String targetResourceName() {
        return this.innerProperties() == null ? null : this.innerProperties().targetResourceName();
    }

    /**
     * Set the targetResourceName property: The resource name of the workspace manager group targeted by the workspace
     * manager assignment.
     *
     * @param targetResourceName the targetResourceName value to set.
     * @return the WorkspaceManagerAssignmentInner object itself.
     */
    public WorkspaceManagerAssignmentInner withTargetResourceName(String targetResourceName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceManagerAssignmentProperties();
        }
        this.innerProperties().withTargetResourceName(targetResourceName);
        return this;
    }

    /**
     * Get the lastJobEndTime property: The time the last job associated to this assignment ended at.
     *
     * @return the lastJobEndTime value.
     */
    public OffsetDateTime lastJobEndTime() {
        return this.innerProperties() == null ? null : this.innerProperties().lastJobEndTime();
    }

    /**
     * Get the lastJobProvisioningState property: State of the last job associated to this assignment.
     *
     * @return the lastJobProvisioningState value.
     */
    public JobProvisioningState lastJobProvisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().lastJobProvisioningState();
    }

    /**
     * Get the items property: List of resources included in this workspace manager assignment.
     *
     * @return the items value.
     */
    public List<AssignmentItem> items() {
        return this.innerProperties() == null ? null : this.innerProperties().items();
    }

    /**
     * Set the items property: List of resources included in this workspace manager assignment.
     *
     * @param items the items value to set.
     * @return the WorkspaceManagerAssignmentInner object itself.
     */
    public WorkspaceManagerAssignmentInner withItems(List<AssignmentItem> items) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceManagerAssignmentProperties();
        }
        this.innerProperties().withItems(items);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Domain name to be enriched.
 */
@Fluent
public final class EnrichmentDomainBody implements JsonSerializable<EnrichmentDomainBody> {
    /*
     * The domain name
     */
    private String domain;

    /**
     * Creates an instance of EnrichmentDomainBody class.
     */
    public EnrichmentDomainBody() {
    }

    /**
     * Get the domain property: The domain name.
     * 
     * @return the domain value.
     */
    public String domain() {
        return this.domain;
    }

    /**
     * Set the domain property: The domain name.
     * 
     * @param domain the domain value to set.
     * @return the EnrichmentDomainBody object itself.
     */
    public EnrichmentDomainBody withDomain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("domain", this.domain);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnrichmentDomainBody from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnrichmentDomainBody if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EnrichmentDomainBody.
     */
    public static EnrichmentDomainBody fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EnrichmentDomainBody deserializedEnrichmentDomainBody = new EnrichmentDomainBody();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("domain".equals(fieldName)) {
                    deserializedEnrichmentDomainBody.domain = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEnrichmentDomainBody;
        });
    }
}

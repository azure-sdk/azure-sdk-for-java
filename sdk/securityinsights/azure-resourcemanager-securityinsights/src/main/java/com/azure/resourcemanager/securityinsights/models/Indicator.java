// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.TIObjectInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Represents an indicator in Azure Security Insights.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("Indicator")
@Fluent
public final class Indicator extends TIObjectInner {
    /*
     * The observables of this indicator
     */
    @JsonProperty(value = "observables")
    private List<IndicatorObservablesItem> observables;

    /**
     * Creates an instance of Indicator class.
     */
    public Indicator() {
    }

    /**
     * Get the observables property: The observables of this indicator.
     * 
     * @return the observables value.
     */
    public List<IndicatorObservablesItem> observables() {
        return this.observables;
    }

    /**
     * Set the observables property: The observables of this indicator.
     * 
     * @param observables the observables value to set.
     * @return the Indicator object itself.
     */
    public Indicator withObservables(List<IndicatorObservablesItem> observables) {
        this.observables = observables;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (observables() != null) {
            observables().forEach(e -> e.validate());
        }
    }
}

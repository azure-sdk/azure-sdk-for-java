// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.AgentsSystemArmModel;
import com.azure.resourcemanager.securityinsights.models.KeyVaultAuthType;
import com.azure.resourcemanager.securityinsights.models.SecretSourceType;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * The AgentArmModel model.
 */
@Fluent
public final class AgentArmModel {
    /*
     * The name of the agent.
     * only letters with numbers, underscores and hyphens are allowed
     * example: "my-agent"
     */
    @JsonProperty(value = "agentContainerName")
    private String agentContainerName;

    /*
     * The SDK path (a file not a folder) on the agent machine.
     * example: "/path/to/nwrfc750P_8-70002755.zip"
     */
    @JsonProperty(value = "sdkPath")
    private String sdkPath;

    /*
     * The SNC path (a folder not a file) on the agent machine.
     * example: "/path/to/snc"
     */
    @JsonProperty(value = "sncPath")
    private String sncPath;

    /*
     * The key vault resource id to access the key vault.
     * example:
     * "/subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.KeyVault/vaults/myVault"
     */
    @JsonProperty(value = "keyVaultResourceId")
    private String keyVaultResourceId;

    /*
     * Key vault uri to access the key vault.
     */
    @JsonProperty(value = "keyVaultUri")
    private String keyVaultUri;

    /*
     * The keyVaultAuth property.
     */
    @JsonProperty(value = "keyVaultAuth")
    private KeyVaultAuthType keyVaultAuth;

    /*
     * The secretSource property.
     */
    @JsonProperty(value = "secretSource")
    private SecretSourceType secretSource;

    /*
     * The systems that installed in the agent.
     */
    @JsonProperty(value = "agentsSystems", access = JsonProperty.Access.WRITE_ONLY)
    private List<AgentsSystemArmModel> agentsSystems;

    /*
     * The displayName property.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * The lastModifiedTimeUtc property.
     */
    @JsonProperty(value = "lastModifiedTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastModifiedTimeUtc;

    /**
     * Creates an instance of AgentArmModel class.
     */
    public AgentArmModel() {
    }

    /**
     * Get the agentContainerName property: The name of the agent.
     * only letters with numbers, underscores and hyphens are allowed
     * example: "my-agent".
     * 
     * @return the agentContainerName value.
     */
    public String agentContainerName() {
        return this.agentContainerName;
    }

    /**
     * Set the agentContainerName property: The name of the agent.
     * only letters with numbers, underscores and hyphens are allowed
     * example: "my-agent".
     * 
     * @param agentContainerName the agentContainerName value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withAgentContainerName(String agentContainerName) {
        this.agentContainerName = agentContainerName;
        return this;
    }

    /**
     * Get the sdkPath property: The SDK path (a file not a folder) on the agent machine.
     * example: "/path/to/nwrfc750P_8-70002755.zip".
     * 
     * @return the sdkPath value.
     */
    public String sdkPath() {
        return this.sdkPath;
    }

    /**
     * Set the sdkPath property: The SDK path (a file not a folder) on the agent machine.
     * example: "/path/to/nwrfc750P_8-70002755.zip".
     * 
     * @param sdkPath the sdkPath value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withSdkPath(String sdkPath) {
        this.sdkPath = sdkPath;
        return this;
    }

    /**
     * Get the sncPath property: The SNC path (a folder not a file) on the agent machine.
     * example: "/path/to/snc".
     * 
     * @return the sncPath value.
     */
    public String sncPath() {
        return this.sncPath;
    }

    /**
     * Set the sncPath property: The SNC path (a folder not a file) on the agent machine.
     * example: "/path/to/snc".
     * 
     * @param sncPath the sncPath value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withSncPath(String sncPath) {
        this.sncPath = sncPath;
        return this;
    }

    /**
     * Get the keyVaultResourceId property: The key vault resource id to access the key vault.
     * example:
     * "/subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.KeyVault/vaults/myVault".
     * 
     * @return the keyVaultResourceId value.
     */
    public String keyVaultResourceId() {
        return this.keyVaultResourceId;
    }

    /**
     * Set the keyVaultResourceId property: The key vault resource id to access the key vault.
     * example:
     * "/subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.KeyVault/vaults/myVault".
     * 
     * @param keyVaultResourceId the keyVaultResourceId value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withKeyVaultResourceId(String keyVaultResourceId) {
        this.keyVaultResourceId = keyVaultResourceId;
        return this;
    }

    /**
     * Get the keyVaultUri property: Key vault uri to access the key vault.
     * 
     * @return the keyVaultUri value.
     */
    public String keyVaultUri() {
        return this.keyVaultUri;
    }

    /**
     * Set the keyVaultUri property: Key vault uri to access the key vault.
     * 
     * @param keyVaultUri the keyVaultUri value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withKeyVaultUri(String keyVaultUri) {
        this.keyVaultUri = keyVaultUri;
        return this;
    }

    /**
     * Get the keyVaultAuth property: The keyVaultAuth property.
     * 
     * @return the keyVaultAuth value.
     */
    public KeyVaultAuthType keyVaultAuth() {
        return this.keyVaultAuth;
    }

    /**
     * Set the keyVaultAuth property: The keyVaultAuth property.
     * 
     * @param keyVaultAuth the keyVaultAuth value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withKeyVaultAuth(KeyVaultAuthType keyVaultAuth) {
        this.keyVaultAuth = keyVaultAuth;
        return this;
    }

    /**
     * Get the secretSource property: The secretSource property.
     * 
     * @return the secretSource value.
     */
    public SecretSourceType secretSource() {
        return this.secretSource;
    }

    /**
     * Set the secretSource property: The secretSource property.
     * 
     * @param secretSource the secretSource value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withSecretSource(SecretSourceType secretSource) {
        this.secretSource = secretSource;
        return this;
    }

    /**
     * Get the agentsSystems property: The systems that installed in the agent.
     * 
     * @return the agentsSystems value.
     */
    public List<AgentsSystemArmModel> agentsSystems() {
        return this.agentsSystems;
    }

    /**
     * Get the displayName property: The displayName property.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The displayName property.
     * 
     * @param displayName the displayName value to set.
     * @return the AgentArmModel object itself.
     */
    public AgentArmModel withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the lastModifiedTimeUtc property: The lastModifiedTimeUtc property.
     * 
     * @return the lastModifiedTimeUtc value.
     */
    public OffsetDateTime lastModifiedTimeUtc() {
        return this.lastModifiedTimeUtc;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (agentsSystems() != null) {
            agentsSystems().forEach(e -> e.validate());
        }
    }
}

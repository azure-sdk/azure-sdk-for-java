// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.HuntRelationInner;
import java.util.List;

/**
 * An immutable client-side representation of HuntRelation.
 */
public interface HuntRelation {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: Etag of the azure resource.
     * 
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the relatedResourceId property: The id of the related resource.
     * 
     * @return the relatedResourceId value.
     */
    String relatedResourceId();

    /**
     * Gets the relatedResourceName property: The name of the related resource.
     * 
     * @return the relatedResourceName value.
     */
    String relatedResourceName();

    /**
     * Gets the relationType property: The type of the hunt relation.
     * 
     * @return the relationType value.
     */
    String relationType();

    /**
     * Gets the relatedResourceKind property: The resource that the relation is related to.
     * 
     * @return the relatedResourceKind value.
     */
    String relatedResourceKind();

    /**
     * Gets the labels property: List of labels relevant to this hunt.
     * 
     * @return the labels value.
     */
    List<String> labels();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.securityinsights.fluent.models.HuntRelationInner object.
     * 
     * @return the inner object.
     */
    HuntRelationInner innerModel();

    /**
     * The entirety of the HuntRelation definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The HuntRelation definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the HuntRelation definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the HuntRelation definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName, huntId.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @param huntId The hunt id (GUID).
             * @return the next definition stage.
             */
            WithCreate withExistingHunt(String resourceGroupName, String workspaceName, String huntId);
        }

        /**
         * The stage of the HuntRelation definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithEtag, DefinitionStages.WithRelatedResourceId, DefinitionStages.WithLabels {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            HuntRelation create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            HuntRelation create(Context context);
        }

        /**
         * The stage of the HuntRelation definition allowing to specify etag.
         */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             * 
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }

        /**
         * The stage of the HuntRelation definition allowing to specify relatedResourceId.
         */
        interface WithRelatedResourceId {
            /**
             * Specifies the relatedResourceId property: The id of the related resource.
             * 
             * @param relatedResourceId The id of the related resource.
             * @return the next definition stage.
             */
            WithCreate withRelatedResourceId(String relatedResourceId);
        }

        /**
         * The stage of the HuntRelation definition allowing to specify labels.
         */
        interface WithLabels {
            /**
             * Specifies the labels property: List of labels relevant to this hunt.
             * 
             * @param labels List of labels relevant to this hunt.
             * @return the next definition stage.
             */
            WithCreate withLabels(List<String> labels);
        }
    }

    /**
     * Begins update for the HuntRelation resource.
     * 
     * @return the stage of resource update.
     */
    HuntRelation.Update update();

    /**
     * The template for HuntRelation update.
     */
    interface Update extends UpdateStages.WithEtag, UpdateStages.WithRelatedResourceId, UpdateStages.WithLabels {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        HuntRelation apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        HuntRelation apply(Context context);
    }

    /**
     * The HuntRelation update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the HuntRelation update allowing to specify etag.
         */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             * 
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }

        /**
         * The stage of the HuntRelation update allowing to specify relatedResourceId.
         */
        interface WithRelatedResourceId {
            /**
             * Specifies the relatedResourceId property: The id of the related resource.
             * 
             * @param relatedResourceId The id of the related resource.
             * @return the next definition stage.
             */
            Update withRelatedResourceId(String relatedResourceId);
        }

        /**
         * The stage of the HuntRelation update allowing to specify labels.
         */
        interface WithLabels {
            /**
             * Specifies the labels property: List of labels relevant to this hunt.
             * 
             * @param labels List of labels relevant to this hunt.
             * @return the next definition stage.
             */
            Update withLabels(List<String> labels);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    HuntRelation refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    HuntRelation refresh(Context context);
}

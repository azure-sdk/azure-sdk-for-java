// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.UUID;

/**
 * Data about a user or client application.
 */
@Fluent
public final class UserInfoAutoGenerated {
    /*
     * The user's object ID.
     */
    @JsonProperty(value = "objectId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID objectId;

    /*
     * The user's email address.
     */
    @JsonProperty(value = "email")
    private String email;

    /*
     * The user's name.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of UserInfoAutoGenerated class.
     */
    public UserInfoAutoGenerated() {
    }

    /**
     * Get the objectId property: The user's object ID.
     * 
     * @return the objectId value.
     */
    public UUID objectId() {
        return this.objectId;
    }

    /**
     * Get the email property: The user's email address.
     * 
     * @return the email value.
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email property: The user's email address.
     * 
     * @param email the email value to set.
     * @return the UserInfoAutoGenerated object itself.
     */
    public UserInfoAutoGenerated withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get the name property: The user's name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The user's name.
     * 
     * @param name the name value to set.
     * @return the UserInfoAutoGenerated object itself.
     */
    public UserInfoAutoGenerated withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

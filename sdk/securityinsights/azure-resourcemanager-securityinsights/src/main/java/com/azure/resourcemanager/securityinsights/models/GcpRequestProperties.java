// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Google Cloud Platform request section properties. */
@Fluent
public final class GcpRequestProperties {
    /*
     * The GCP project id.
     */
    @JsonProperty(value = "projectId", required = true)
    private String projectId;

    /*
     * The GCP pub/sub subscription names.
     */
    @JsonProperty(value = "subscriptionNames", required = true)
    private List<String> subscriptionNames;

    /** Creates an instance of GcpRequestProperties class. */
    public GcpRequestProperties() {
    }

    /**
     * Get the projectId property: The GCP project id.
     *
     * @return the projectId value.
     */
    public String projectId() {
        return this.projectId;
    }

    /**
     * Set the projectId property: The GCP project id.
     *
     * @param projectId the projectId value to set.
     * @return the GcpRequestProperties object itself.
     */
    public GcpRequestProperties withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Get the subscriptionNames property: The GCP pub/sub subscription names.
     *
     * @return the subscriptionNames value.
     */
    public List<String> subscriptionNames() {
        return this.subscriptionNames;
    }

    /**
     * Set the subscriptionNames property: The GCP pub/sub subscription names.
     *
     * @param subscriptionNames the subscriptionNames value to set.
     * @return the GcpRequestProperties object itself.
     */
    public GcpRequestProperties withSubscriptionNames(List<String> subscriptionNames) {
        this.subscriptionNames = subscriptionNames;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (projectId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property projectId in model GcpRequestProperties"));
        }
        if (subscriptionNames() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property subscriptionNames in model GcpRequestProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GcpRequestProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Content section of the recommendation. */
@Fluent
public final class Content {
    /*
     * Title of the content.
     */
    @JsonProperty(value = "title", required = true)
    private String title;

    /*
     * Description of the content.
     */
    @JsonProperty(value = "description", required = true)
    private String description;

    /** Creates an instance of Content class. */
    public Content() {
    }

    /**
     * Get the title property: Title of the content.
     *
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: Title of the content.
     *
     * @param title the title value to set.
     * @return the Content object itself.
     */
    public Content withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the description property: Description of the content.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the content.
     *
     * @param description the description value to set.
     * @return the Content object itself.
     */
    public Content withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (title() == null) {
            throw LOGGER
                .logExceptionAsError(new IllegalArgumentException("Missing required property title in model Content"));
        }
        if (description() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property description in model Content"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Content.class);
}

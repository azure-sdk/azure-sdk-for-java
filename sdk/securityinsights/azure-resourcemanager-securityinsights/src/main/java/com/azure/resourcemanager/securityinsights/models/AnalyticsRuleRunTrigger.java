// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.fluent.models.AnalyticsRuleRunTriggerProperties;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Analytics Rule Run Trigger request.
 */
@Fluent
public final class AnalyticsRuleRunTrigger implements JsonSerializable<AnalyticsRuleRunTrigger> {
    /*
     * The analytics Rule Run Trigger request
     */
    private AnalyticsRuleRunTriggerProperties innerProperties = new AnalyticsRuleRunTriggerProperties();

    /**
     * Creates an instance of AnalyticsRuleRunTrigger class.
     */
    public AnalyticsRuleRunTrigger() {
    }

    /**
     * Get the innerProperties property: The analytics Rule Run Trigger request.
     * 
     * @return the innerProperties value.
     */
    private AnalyticsRuleRunTriggerProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the executionTimeUtc property: The executionTimeUtc property.
     * 
     * @return the executionTimeUtc value.
     */
    public OffsetDateTime executionTimeUtc() {
        return this.innerProperties() == null ? null : this.innerProperties().executionTimeUtc();
    }

    /**
     * Set the executionTimeUtc property: The executionTimeUtc property.
     * 
     * @param executionTimeUtc the executionTimeUtc value to set.
     * @return the AnalyticsRuleRunTrigger object itself.
     */
    public AnalyticsRuleRunTrigger withExecutionTimeUtc(OffsetDateTime executionTimeUtc) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AnalyticsRuleRunTriggerProperties();
        }
        this.innerProperties().withExecutionTimeUtc(executionTimeUtc);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property innerProperties in model AnalyticsRuleRunTrigger"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AnalyticsRuleRunTrigger.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyticsRuleRunTrigger from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyticsRuleRunTrigger if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyticsRuleRunTrigger.
     */
    public static AnalyticsRuleRunTrigger fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AnalyticsRuleRunTrigger deserializedAnalyticsRuleRunTrigger = new AnalyticsRuleRunTrigger();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedAnalyticsRuleRunTrigger.innerProperties
                        = AnalyticsRuleRunTriggerProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAnalyticsRuleRunTrigger;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.ActionInner;
import com.azure.resourcemanager.securityinsights.fluent.models.SystemResourceInner;
import com.azure.resourcemanager.securityinsights.models.ReportActionStatusPayload;
import com.azure.resourcemanager.securityinsights.models.UndoActionPayload;

/**
 * An instance of this class provides access to all the operations defined in SystemsClient.
 */
public interface SystemsClient {
    /**
     * Creates or updates the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param systemToUpsert The system to upsert.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the system within the agent along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SystemResourceInner> createOrUpdateWithResponse(String resourceGroupName, String workspaceName,
        String agentResourceName, String systemResourceName, SystemResourceInner systemToUpsert, Context context);

    /**
     * Creates or updates the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the system within the agent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SystemResourceInner createOrUpdate(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Gets the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SystemResourceInner> getWithResponse(String resourceGroupName, String workspaceName,
        String agentResourceName, String systemResourceName, Context context);

    /**
     * Gets the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SystemResourceInner get(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Deletes the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Context context);

    /**
     * Deletes the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String workspaceName, String agentResourceName, String systemResourceName);

    /**
     * ListAll the systems.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Agent's Systems as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SystemResourceInner> list(String resourceGroupName, String workspaceName, String agentResourceName);

    /**
     * ListAll the systems.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param filter Filters the results, based on a Boolean condition. Optional.
     * @param skipToken Skiptoken is only used if a previous operation returned a partial result. If a previous response
     * contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies
     * a starting point to use for subsequent calls. Optional.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Agent's Systems as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SystemResourceInner> list(String resourceGroupName, String workspaceName, String agentResourceName,
        String filter, String skipToken, Context context);

    /**
     * List of actions for a business application system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list all actions for a system to perform as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ActionInner> listActions(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * List of actions for a business application system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list all actions for a system to perform as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ActionInner> listActions(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Context context);

    /**
     * Undo action, based on the actionId.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param payload Undo action, based on the actionId.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> undoActionWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, UndoActionPayload payload, Context context);

    /**
     * Undo action, based on the actionId.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void undoAction(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Report the status of the action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param payload Report a status of the action that was performed by the agent.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> reportActionStatusWithResponse(String resourceGroupName, String workspaceName,
        String agentResourceName, String systemResourceName, ReportActionStatusPayload payload, Context context);

    /**
     * Report the status of the action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void reportActionStatus(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);
}

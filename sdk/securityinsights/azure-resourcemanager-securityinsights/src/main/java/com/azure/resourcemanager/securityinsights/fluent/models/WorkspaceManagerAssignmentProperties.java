// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.models.AssignmentItem;
import com.azure.resourcemanager.securityinsights.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * The workspace manager assignment properties.
 */
@Fluent
public final class WorkspaceManagerAssignmentProperties {
    /*
     * The resource name of the workspace manager group targeted by the workspace manager assignment
     */
    @JsonProperty(value = "targetResourceName", required = true)
    private String targetResourceName;

    /*
     * The time the last job associated to this assignment ended at
     */
    @JsonProperty(value = "lastJobEndTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastJobEndTime;

    /*
     * State of the last job associated to this assignment
     */
    @JsonProperty(value = "lastJobProvisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState lastJobProvisioningState;

    /*
     * List of resources included in this workspace manager assignment
     */
    @JsonProperty(value = "items", required = true)
    private List<AssignmentItem> items;

    /**
     * Creates an instance of WorkspaceManagerAssignmentProperties class.
     */
    public WorkspaceManagerAssignmentProperties() {
    }

    /**
     * Get the targetResourceName property: The resource name of the workspace manager group targeted by the workspace
     * manager assignment.
     * 
     * @return the targetResourceName value.
     */
    public String targetResourceName() {
        return this.targetResourceName;
    }

    /**
     * Set the targetResourceName property: The resource name of the workspace manager group targeted by the workspace
     * manager assignment.
     * 
     * @param targetResourceName the targetResourceName value to set.
     * @return the WorkspaceManagerAssignmentProperties object itself.
     */
    public WorkspaceManagerAssignmentProperties withTargetResourceName(String targetResourceName) {
        this.targetResourceName = targetResourceName;
        return this;
    }

    /**
     * Get the lastJobEndTime property: The time the last job associated to this assignment ended at.
     * 
     * @return the lastJobEndTime value.
     */
    public OffsetDateTime lastJobEndTime() {
        return this.lastJobEndTime;
    }

    /**
     * Get the lastJobProvisioningState property: State of the last job associated to this assignment.
     * 
     * @return the lastJobProvisioningState value.
     */
    public ProvisioningState lastJobProvisioningState() {
        return this.lastJobProvisioningState;
    }

    /**
     * Get the items property: List of resources included in this workspace manager assignment.
     * 
     * @return the items value.
     */
    public List<AssignmentItem> items() {
        return this.items;
    }

    /**
     * Set the items property: List of resources included in this workspace manager assignment.
     * 
     * @param items the items value to set.
     * @return the WorkspaceManagerAssignmentProperties object itself.
     */
    public WorkspaceManagerAssignmentProperties withItems(List<AssignmentItem> items) {
        this.items = items;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (targetResourceName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetResourceName in model WorkspaceManagerAssignmentProperties"));
        }
        if (items() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property items in model WorkspaceManagerAssignmentProperties"));
        } else {
            items().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(WorkspaceManagerAssignmentProperties.class);
}

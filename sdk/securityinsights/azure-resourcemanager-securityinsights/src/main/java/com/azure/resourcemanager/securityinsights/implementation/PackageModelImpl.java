// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.PackageModelInner;
import com.azure.resourcemanager.securityinsights.models.Flag;
import com.azure.resourcemanager.securityinsights.models.MetadataAuthor;
import com.azure.resourcemanager.securityinsights.models.MetadataCategories;
import com.azure.resourcemanager.securityinsights.models.MetadataDependencies;
import com.azure.resourcemanager.securityinsights.models.MetadataSource;
import com.azure.resourcemanager.securityinsights.models.MetadataSupport;
import com.azure.resourcemanager.securityinsights.models.PackageKind;
import com.azure.resourcemanager.securityinsights.models.PackageModel;
import java.time.LocalDate;
import java.util.Collections;
import java.util.List;

public final class PackageModelImpl implements PackageModel, PackageModel.Definition, PackageModel.Update {
    private PackageModelInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String contentId() {
        return this.innerModel().contentId();
    }

    public String contentProductId() {
        return this.innerModel().contentProductId();
    }

    public PackageKind contentKind() {
        return this.innerModel().contentKind();
    }

    public String contentSchemaVersion() {
        return this.innerModel().contentSchemaVersion();
    }

    public Flag isNew() {
        return this.innerModel().isNew();
    }

    public Flag isPreview() {
        return this.innerModel().isPreview();
    }

    public Flag isFeatured() {
        return this.innerModel().isFeatured();
    }

    public Flag isDeprecated() {
        return this.innerModel().isDeprecated();
    }

    public String version() {
        return this.innerModel().version();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public String publisherDisplayName() {
        return this.innerModel().publisherDisplayName();
    }

    public MetadataSource source() {
        return this.innerModel().source();
    }

    public MetadataAuthor author() {
        return this.innerModel().author();
    }

    public MetadataSupport support() {
        return this.innerModel().support();
    }

    public MetadataDependencies dependencies() {
        return this.innerModel().dependencies();
    }

    public List<String> providers() {
        List<String> inner = this.innerModel().providers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public LocalDate firstPublishDate() {
        return this.innerModel().firstPublishDate();
    }

    public LocalDate lastPublishDate() {
        return this.innerModel().lastPublishDate();
    }

    public MetadataCategories categories() {
        return this.innerModel().categories();
    }

    public List<String> threatAnalysisTactics() {
        List<String> inner = this.innerModel().threatAnalysisTactics();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> threatAnalysisTechniques() {
        List<String> inner = this.innerModel().threatAnalysisTechniques();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String icon() {
        return this.innerModel().icon();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public PackageModelInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String packageId;

    public PackageModelImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public PackageModel create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentPackageOperations()
                .installWithResponse(resourceGroupName, workspaceName, packageId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public PackageModel create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentPackageOperations()
                .installWithResponse(resourceGroupName, workspaceName, packageId, this.innerModel(), context)
                .getValue();
        return this;
    }

    PackageModelImpl(String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new PackageModelInner();
        this.serviceManager = serviceManager;
        this.packageId = name;
    }

    public PackageModelImpl update() {
        return this;
    }

    public PackageModel apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentPackageOperations()
                .installWithResponse(resourceGroupName, workspaceName, packageId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public PackageModel apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentPackageOperations()
                .installWithResponse(resourceGroupName, workspaceName, packageId, this.innerModel(), context)
                .getValue();
        return this;
    }

    PackageModelImpl(
        PackageModelInner innerObject,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.packageId = Utils.getValueFromIdByName(innerObject.id(), "contentPackages");
    }

    public PackageModelImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public PackageModelImpl withContentId(String contentId) {
        this.innerModel().withContentId(contentId);
        return this;
    }

    public PackageModelImpl withContentProductId(String contentProductId) {
        this.innerModel().withContentProductId(contentProductId);
        return this;
    }

    public PackageModelImpl withContentKind(PackageKind contentKind) {
        this.innerModel().withContentKind(contentKind);
        return this;
    }

    public PackageModelImpl withContentSchemaVersion(String contentSchemaVersion) {
        this.innerModel().withContentSchemaVersion(contentSchemaVersion);
        return this;
    }

    public PackageModelImpl withIsNew(Flag isNew) {
        this.innerModel().withIsNew(isNew);
        return this;
    }

    public PackageModelImpl withIsPreview(Flag isPreview) {
        this.innerModel().withIsPreview(isPreview);
        return this;
    }

    public PackageModelImpl withIsFeatured(Flag isFeatured) {
        this.innerModel().withIsFeatured(isFeatured);
        return this;
    }

    public PackageModelImpl withIsDeprecated(Flag isDeprecated) {
        this.innerModel().withIsDeprecated(isDeprecated);
        return this;
    }

    public PackageModelImpl withVersion(String version) {
        this.innerModel().withVersion(version);
        return this;
    }

    public PackageModelImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public PackageModelImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public PackageModelImpl withPublisherDisplayName(String publisherDisplayName) {
        this.innerModel().withPublisherDisplayName(publisherDisplayName);
        return this;
    }

    public PackageModelImpl withSource(MetadataSource source) {
        this.innerModel().withSource(source);
        return this;
    }

    public PackageModelImpl withAuthor(MetadataAuthor author) {
        this.innerModel().withAuthor(author);
        return this;
    }

    public PackageModelImpl withSupport(MetadataSupport support) {
        this.innerModel().withSupport(support);
        return this;
    }

    public PackageModelImpl withDependencies(MetadataDependencies dependencies) {
        this.innerModel().withDependencies(dependencies);
        return this;
    }

    public PackageModelImpl withProviders(List<String> providers) {
        this.innerModel().withProviders(providers);
        return this;
    }

    public PackageModelImpl withFirstPublishDate(LocalDate firstPublishDate) {
        this.innerModel().withFirstPublishDate(firstPublishDate);
        return this;
    }

    public PackageModelImpl withLastPublishDate(LocalDate lastPublishDate) {
        this.innerModel().withLastPublishDate(lastPublishDate);
        return this;
    }

    public PackageModelImpl withCategories(MetadataCategories categories) {
        this.innerModel().withCategories(categories);
        return this;
    }

    public PackageModelImpl withThreatAnalysisTactics(List<String> threatAnalysisTactics) {
        this.innerModel().withThreatAnalysisTactics(threatAnalysisTactics);
        return this;
    }

    public PackageModelImpl withThreatAnalysisTechniques(List<String> threatAnalysisTechniques) {
        this.innerModel().withThreatAnalysisTechniques(threatAnalysisTechniques);
        return this;
    }

    public PackageModelImpl withIcon(String icon) {
        this.innerModel().withIcon(icon);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Warning details.
 */
@Immutable
public final class WarningBody {
    /*
     * An identifier for the warning. Codes are invariant and are intended to be consumed programmatically.
     */
    @JsonProperty(value = "code", access = JsonProperty.Access.WRITE_ONLY)
    private WarningCode code;

    /*
     * A message describing the warning, intended to be suitable for display in a user interface.
     */
    @JsonProperty(value = "message", access = JsonProperty.Access.WRITE_ONLY)
    private String message;

    /*
     * The details property.
     */
    @JsonProperty(value = "details", access = JsonProperty.Access.WRITE_ONLY)
    private List<WarningBody> details;

    /**
     * Creates an instance of WarningBody class.
     */
    public WarningBody() {
    }

    /**
     * Get the code property: An identifier for the warning. Codes are invariant and are intended to be consumed
     * programmatically.
     * 
     * @return the code value.
     */
    public WarningCode code() {
        return this.code;
    }

    /**
     * Get the message property: A message describing the warning, intended to be suitable for display in a user
     * interface.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Get the details property: The details property.
     * 
     * @return the details value.
     */
    public List<WarningBody> details() {
        return this.details;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (details() != null) {
            details().forEach(e -> e.validate());
        }
    }
}

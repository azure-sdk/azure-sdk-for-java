// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the
 * remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body
 * of the request and not the header.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = ApiKeyAuthModel.class, visible = true)
@JsonTypeName("APIKey")
@Fluent
public final class ApiKeyAuthModel extends CcpAuthConfig {
    /*
     * The auth type
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private CcpAuthType type = CcpAuthType.APIKEY;

    /*
     * API Key for the user secret key credential
     */
    @JsonProperty(value = "apiKey", required = true)
    private String apiKey;

    /*
     * API Key name
     */
    @JsonProperty(value = "apiKeyName", required = true)
    private String apiKeyName;

    /*
     * API Key Identifier
     */
    @JsonProperty(value = "apiKeyIdentifier")
    private String apiKeyIdentifier;

    /*
     * Flag to indicate if API key is set in HTTP POST payload
     */
    @JsonProperty(value = "isApiKeyInPostPayload")
    private Boolean isApiKeyInPostPayload;

    /**
     * Creates an instance of ApiKeyAuthModel class.
     */
    public ApiKeyAuthModel() {
    }

    /**
     * Get the type property: The auth type.
     * 
     * @return the type value.
     */
    @Override
    public CcpAuthType type() {
        return this.type;
    }

    /**
     * Get the apiKey property: API Key for the user secret key credential.
     * 
     * @return the apiKey value.
     */
    public String apiKey() {
        return this.apiKey;
    }

    /**
     * Set the apiKey property: API Key for the user secret key credential.
     * 
     * @param apiKey the apiKey value to set.
     * @return the ApiKeyAuthModel object itself.
     */
    public ApiKeyAuthModel withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Get the apiKeyName property: API Key name.
     * 
     * @return the apiKeyName value.
     */
    public String apiKeyName() {
        return this.apiKeyName;
    }

    /**
     * Set the apiKeyName property: API Key name.
     * 
     * @param apiKeyName the apiKeyName value to set.
     * @return the ApiKeyAuthModel object itself.
     */
    public ApiKeyAuthModel withApiKeyName(String apiKeyName) {
        this.apiKeyName = apiKeyName;
        return this;
    }

    /**
     * Get the apiKeyIdentifier property: API Key Identifier.
     * 
     * @return the apiKeyIdentifier value.
     */
    public String apiKeyIdentifier() {
        return this.apiKeyIdentifier;
    }

    /**
     * Set the apiKeyIdentifier property: API Key Identifier.
     * 
     * @param apiKeyIdentifier the apiKeyIdentifier value to set.
     * @return the ApiKeyAuthModel object itself.
     */
    public ApiKeyAuthModel withApiKeyIdentifier(String apiKeyIdentifier) {
        this.apiKeyIdentifier = apiKeyIdentifier;
        return this;
    }

    /**
     * Get the isApiKeyInPostPayload property: Flag to indicate if API key is set in HTTP POST payload.
     * 
     * @return the isApiKeyInPostPayload value.
     */
    public Boolean isApiKeyInPostPayload() {
        return this.isApiKeyInPostPayload;
    }

    /**
     * Set the isApiKeyInPostPayload property: Flag to indicate if API key is set in HTTP POST payload.
     * 
     * @param isApiKeyInPostPayload the isApiKeyInPostPayload value to set.
     * @return the ApiKeyAuthModel object itself.
     */
    public ApiKeyAuthModel withIsApiKeyInPostPayload(Boolean isApiKeyInPostPayload) {
        this.isApiKeyInPostPayload = isApiKeyInPostPayload;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (apiKey() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property apiKey in model ApiKeyAuthModel"));
        }
        if (apiKeyName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property apiKeyName in model ApiKeyAuthModel"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ApiKeyAuthModel.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Represents a Hunt Relation in Azure Security Insights.
 */
@Fluent
public final class HuntRelationInner extends ResourceWithEtag {
    /*
     * Hunt Relation properties
     */
    @JsonProperty(value = "properties")
    private HuntRelationProperties innerProperties;

    /**
     * Creates an instance of HuntRelationInner class.
     */
    public HuntRelationInner() {
    }

    /**
     * Get the innerProperties property: Hunt Relation properties.
     * 
     * @return the innerProperties value.
     */
    private HuntRelationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HuntRelationInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the relatedResourceId property: The id of the related resource.
     * 
     * @return the relatedResourceId value.
     */
    public String relatedResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().relatedResourceId();
    }

    /**
     * Set the relatedResourceId property: The id of the related resource.
     * 
     * @param relatedResourceId the relatedResourceId value to set.
     * @return the HuntRelationInner object itself.
     */
    public HuntRelationInner withRelatedResourceId(String relatedResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new HuntRelationProperties();
        }
        this.innerProperties().withRelatedResourceId(relatedResourceId);
        return this;
    }

    /**
     * Get the relatedResourceName property: The name of the related resource.
     * 
     * @return the relatedResourceName value.
     */
    public String relatedResourceName() {
        return this.innerProperties() == null ? null : this.innerProperties().relatedResourceName();
    }

    /**
     * Get the relationType property: The type of the hunt relation.
     * 
     * @return the relationType value.
     */
    public String relationType() {
        return this.innerProperties() == null ? null : this.innerProperties().relationType();
    }

    /**
     * Get the relatedResourceKind property: The resource that the relation is related to.
     * 
     * @return the relatedResourceKind value.
     */
    public String relatedResourceKind() {
        return this.innerProperties() == null ? null : this.innerProperties().relatedResourceKind();
    }

    /**
     * Get the labels property: List of labels relevant to this hunt.
     * 
     * @return the labels value.
     */
    public List<String> labels() {
        return this.innerProperties() == null ? null : this.innerProperties().labels();
    }

    /**
     * Set the labels property: List of labels relevant to this hunt.
     * 
     * @param labels the labels value to set.
     * @return the HuntRelationInner object itself.
     */
    public HuntRelationInner withLabels(List<String> labels) {
        if (this.innerProperties() == null) {
            this.innerProperties = new HuntRelationProperties();
        }
        this.innerProperties().withLabels(labels);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

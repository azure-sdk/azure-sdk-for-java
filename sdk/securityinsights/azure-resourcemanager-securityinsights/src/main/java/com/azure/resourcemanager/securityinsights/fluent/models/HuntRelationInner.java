// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import java.io.IOException;
import java.util.List;

/**
 * Represents a Hunt Relation in Azure Security Insights.
 */
@Fluent
public final class HuntRelationInner extends ResourceWithEtag {
    /*
     * Hunt Relation properties
     */
    private HuntRelationProperties innerProperties;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /**
     * Creates an instance of HuntRelationInner class.
     */
    public HuntRelationInner() {
    }

    /**
     * Get the innerProperties property: Hunt Relation properties.
     * 
     * @return the innerProperties value.
     */
    private HuntRelationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    @Override
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HuntRelationInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the relatedResourceId property: The id of the related resource.
     * 
     * @return the relatedResourceId value.
     */
    public String relatedResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().relatedResourceId();
    }

    /**
     * Set the relatedResourceId property: The id of the related resource.
     * 
     * @param relatedResourceId the relatedResourceId value to set.
     * @return the HuntRelationInner object itself.
     */
    public HuntRelationInner withRelatedResourceId(String relatedResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new HuntRelationProperties();
        }
        this.innerProperties().withRelatedResourceId(relatedResourceId);
        return this;
    }

    /**
     * Get the relatedResourceName property: The name of the related resource.
     * 
     * @return the relatedResourceName value.
     */
    public String relatedResourceName() {
        return this.innerProperties() == null ? null : this.innerProperties().relatedResourceName();
    }

    /**
     * Get the relationType property: The type of the hunt relation.
     * 
     * @return the relationType value.
     */
    public String relationType() {
        return this.innerProperties() == null ? null : this.innerProperties().relationType();
    }

    /**
     * Get the relatedResourceKind property: The resource that the relation is related to.
     * 
     * @return the relatedResourceKind value.
     */
    public String relatedResourceKind() {
        return this.innerProperties() == null ? null : this.innerProperties().relatedResourceKind();
    }

    /**
     * Get the labels property: List of labels relevant to this hunt.
     * 
     * @return the labels value.
     */
    public List<String> labels() {
        return this.innerProperties() == null ? null : this.innerProperties().labels();
    }

    /**
     * Set the labels property: List of labels relevant to this hunt.
     * 
     * @param labels the labels value to set.
     * @return the HuntRelationInner object itself.
     */
    public HuntRelationInner withLabels(List<String> labels) {
        if (this.innerProperties() == null) {
            this.innerProperties = new HuntRelationProperties();
        }
        this.innerProperties().withLabels(labels);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("etag", etag());
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HuntRelationInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HuntRelationInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the HuntRelationInner.
     */
    public static HuntRelationInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            HuntRelationInner deserializedHuntRelationInner = new HuntRelationInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedHuntRelationInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedHuntRelationInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedHuntRelationInner.type = reader.getString();
                } else if ("etag".equals(fieldName)) {
                    deserializedHuntRelationInner.withEtag(reader.getString());
                } else if ("systemData".equals(fieldName)) {
                    deserializedHuntRelationInner.systemData = SystemData.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedHuntRelationInner.innerProperties = HuntRelationProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHuntRelationInner;
        });
    }
}

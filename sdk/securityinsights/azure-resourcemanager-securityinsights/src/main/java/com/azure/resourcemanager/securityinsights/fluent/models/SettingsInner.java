// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.Anomalies;
import com.azure.resourcemanager.securityinsights.models.EntityAnalytics;
import com.azure.resourcemanager.securityinsights.models.EyesOn;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import com.azure.resourcemanager.securityinsights.models.SettingKind;
import com.azure.resourcemanager.securityinsights.models.Ueba;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The Setting.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "kind", defaultImpl = SettingsInner.class, visible = true)
@JsonTypeName("Settings")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Anomalies", value = Anomalies.class),
    @JsonSubTypes.Type(name = "EyesOn", value = EyesOn.class),
    @JsonSubTypes.Type(name = "EntityAnalytics", value = EntityAnalytics.class),
    @JsonSubTypes.Type(name = "Ueba", value = Ueba.class) })
@Fluent
public class SettingsInner extends ResourceWithEtag {
    /*
     * The kind of the setting
     */
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private SettingKind kind;

    /**
     * Creates an instance of SettingsInner class.
     */
    public SettingsInner() {
        this.kind = SettingKind.fromString("Settings");
    }

    /**
     * Get the kind property: The kind of the setting.
     * 
     * @return the kind value.
     */
    public SettingKind kind() {
        return this.kind;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SettingsInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

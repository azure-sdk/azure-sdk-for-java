// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The request paging configuration.
 */
@Fluent
public class RestApiPollerRequestPagingConfig implements JsonSerializable<RestApiPollerRequestPagingConfig> {
    /*
     * Type of paging
     */
    private RestApiPollerRequestPagingKind pagingType;

    /*
     * Page size
     */
    private Integer pageSize;

    /*
     * Page size parameter name
     */
    private String pageSizeParameterName;

    /**
     * Creates an instance of RestApiPollerRequestPagingConfig class.
     */
    public RestApiPollerRequestPagingConfig() {
    }

    /**
     * Get the pagingType property: Type of paging.
     * 
     * @return the pagingType value.
     */
    public RestApiPollerRequestPagingKind pagingType() {
        return this.pagingType;
    }

    /**
     * Set the pagingType property: Type of paging.
     * 
     * @param pagingType the pagingType value to set.
     * @return the RestApiPollerRequestPagingConfig object itself.
     */
    public RestApiPollerRequestPagingConfig withPagingType(RestApiPollerRequestPagingKind pagingType) {
        this.pagingType = pagingType;
        return this;
    }

    /**
     * Get the pageSize property: Page size.
     * 
     * @return the pageSize value.
     */
    public Integer pageSize() {
        return this.pageSize;
    }

    /**
     * Set the pageSize property: Page size.
     * 
     * @param pageSize the pageSize value to set.
     * @return the RestApiPollerRequestPagingConfig object itself.
     */
    public RestApiPollerRequestPagingConfig withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * Get the pageSizeParameterName property: Page size parameter name.
     * 
     * @return the pageSizeParameterName value.
     */
    public String pageSizeParameterName() {
        return this.pageSizeParameterName;
    }

    /**
     * Set the pageSizeParameterName property: Page size parameter name.
     * 
     * @param pageSizeParameterName the pageSizeParameterName value to set.
     * @return the RestApiPollerRequestPagingConfig object itself.
     */
    public RestApiPollerRequestPagingConfig withPageSizeParameterName(String pageSizeParameterName) {
        this.pageSizeParameterName = pageSizeParameterName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (pagingType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property pagingType in model RestApiPollerRequestPagingConfig"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RestApiPollerRequestPagingConfig.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("pagingType", this.pagingType == null ? null : this.pagingType.toString());
        jsonWriter.writeNumberField("pageSize", this.pageSize);
        jsonWriter.writeStringField("pageSizeParameterName", this.pageSizeParameterName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestApiPollerRequestPagingConfig from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestApiPollerRequestPagingConfig if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RestApiPollerRequestPagingConfig.
     */
    public static RestApiPollerRequestPagingConfig fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestApiPollerRequestPagingConfig deserializedRestApiPollerRequestPagingConfig
                = new RestApiPollerRequestPagingConfig();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("pagingType".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingConfig.pagingType
                        = RestApiPollerRequestPagingKind.fromString(reader.getString());
                } else if ("pageSize".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingConfig.pageSize = reader.getNullable(JsonReader::getInt);
                } else if ("pageSizeParameterName".equals(fieldName)) {
                    deserializedRestApiPollerRequestPagingConfig.pageSizeParameterName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestApiPollerRequestPagingConfig;
        });
    }
}

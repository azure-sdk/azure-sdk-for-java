// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.PackageInner;
import com.azure.resourcemanager.securityinsights.models.PackageInstallationProperties;

/** An instance of this class provides access to all the operations defined in ContentPackagesClient. */
public interface ContentPackagesClient {
    /**
     * Gets all available packages.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all available packages as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PackageInner> list(String resourceGroupName, String sentinelWorkspaceName);

    /**
     * Gets all available packages.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param filter Filters the results, based on a Boolean condition. Optional.
     * @param orderby Sorts the results. Optional.
     * @param top Returns only the first n results. Optional.
     * @param skip Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results
     *     if there are any left.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all available packages as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PackageInner> list(
        String resourceGroupName,
        String sentinelWorkspaceName,
        String filter,
        String orderby,
        Integer top,
        Integer skip,
        Context context);

    /**
     * Gets a package byt its identifier.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param packageId package Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a package byt its identifier along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PackageInner> getWithResponse(
        String resourceGroupName, String sentinelWorkspaceName, String packageId, Context context);

    /**
     * Gets a package byt its identifier.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param packageId package Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a package byt its identifier.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PackageInner get(String resourceGroupName, String sentinelWorkspaceName, String packageId);

    /**
     * Install a package to the workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param packageId package Id.
     * @param packageInstallationProperties Package installation properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Package in Azure Security Insights along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PackageInner> installWithResponse(
        String resourceGroupName,
        String sentinelWorkspaceName,
        String packageId,
        PackageInstallationProperties packageInstallationProperties,
        Context context);

    /**
     * Install a package to the workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param packageId package Id.
     * @param packageInstallationProperties Package installation properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Package in Azure Security Insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PackageInner install(
        String resourceGroupName,
        String sentinelWorkspaceName,
        String packageId,
        PackageInstallationProperties packageInstallationProperties);

    /**
     * Uninstall a package from the workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param packageId package Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Package in Azure Security Insights along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PackageInner> uninstallWithResponse(
        String resourceGroupName, String sentinelWorkspaceName, String packageId, Context context);

    /**
     * Uninstall a package from the workspace.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param packageId package Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Package in Azure Security Insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PackageInner uninstall(String resourceGroupName, String sentinelWorkspaceName, String packageId);
}

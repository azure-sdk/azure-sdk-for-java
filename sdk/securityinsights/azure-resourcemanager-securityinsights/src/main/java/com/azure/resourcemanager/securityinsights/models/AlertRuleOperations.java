// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.util.Context;

/** Resource collection API of AlertRuleOperations. */
public interface AlertRuleOperations {
    /**
     * triggers analytics rule run.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID.
     * @param analyticsRuleRunTriggerParameter The Analytics Rule Run Trigger parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void triggerRuleRun(
        String resourceGroupName,
        String workspaceName,
        String ruleId,
        AnalyticsRuleRunTrigger analyticsRuleRunTriggerParameter);

    /**
     * triggers analytics rule run.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID.
     * @param analyticsRuleRunTriggerParameter The Analytics Rule Run Trigger parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void triggerRuleRun(
        String resourceGroupName,
        String workspaceName,
        String ruleId,
        AnalyticsRuleRunTrigger analyticsRuleRunTriggerParameter,
        Context context);
}

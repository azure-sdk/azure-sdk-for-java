// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.util.UUID;

/**
 * Resource collection API of Systems.
 */
public interface Systems {
    /**
     * Gets the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param xMsClientWorkspaceId The xMsClientWorkspaceId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    Response<System> getWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, UUID xMsClientWorkspaceId, Context context);

    /**
     * Gets the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system.
     */
    System get(String resourceGroupName, String workspaceName, String agentResourceName, String systemResourceName);

    /**
     * Deletes the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param xMsClientWorkspaceId The xMsClientWorkspaceId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, UUID xMsClientWorkspaceId, Context context);

    /**
     * Deletes the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, String agentResourceName, String systemResourceName);

    /**
     * Gets the systems.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the systems as paginated response with {@link PagedIterable}.
     */
    PagedIterable<System> getAll(String resourceGroupName, String workspaceName, String agentResourceName);

    /**
     * Gets the systems.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param xMsClientWorkspaceId The xMsClientWorkspaceId parameter.
     * @param filter Filters the results, based on a Boolean condition. Optional.
     * @param orderby Sorts the results. Optional.
     * @param skipToken Skiptoken is only used if a previous operation returned a partial result. If a previous response
     * contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies
     * a starting point to use for subsequent calls. Optional.
     * @param top Returns only the first n results. Optional.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the systems as paginated response with {@link PagedIterable}.
     */
    PagedIterable<System> getAll(String resourceGroupName, String workspaceName, String agentResourceName,
        UUID xMsClientWorkspaceId, String filter, String orderby, String skipToken, Integer top, Context context);

    /**
     * List of actions for a business application system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list all pending actions for a system to perform along with {@link Response}.
     */
    Response<ListActionsResponse> listActionsWithResponse(String resourceGroupName, String workspaceName,
        String agentResourceName, String systemResourceName, Context context);

    /**
     * List of actions for a business application system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list all pending actions for a system to perform.
     */
    ListActionsResponse listActions(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Perform the last operation on the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param payload Anything.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> performActionWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Object payload, Context context);

    /**
     * Perform the last operation on the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void performAction(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Report the status of the action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param payload Anything.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> reportActionStatusWithResponse(String resourceGroupName, String workspaceName,
        String agentResourceName, String systemResourceName, Object payload, Context context);

    /**
     * Report the status of the action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void reportActionStatus(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Gets the system.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    System getById(String id);

    /**
     * Gets the system.
     * 
     * @param id the resource ID.
     * @param xMsClientWorkspaceId The xMsClientWorkspaceId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    Response<System> getByIdWithResponse(String id, UUID xMsClientWorkspaceId, Context context);

    /**
     * Deletes the system.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the system.
     * 
     * @param id the resource ID.
     * @param xMsClientWorkspaceId The xMsClientWorkspaceId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, UUID xMsClientWorkspaceId, Context context);

    /**
     * Begins definition for a new System resource.
     * 
     * @param name resource name.
     * @return the first stage of the new System definition.
     */
    System.DefinitionStages.Blank define(String name);
}

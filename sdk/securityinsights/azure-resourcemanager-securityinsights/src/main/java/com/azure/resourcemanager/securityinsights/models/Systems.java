// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Systems.
 */
public interface Systems {
    /**
     * Gets the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    Response<System> getWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Context context);

    /**
     * Gets the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system.
     */
    System get(String resourceGroupName, String workspaceName, String agentResourceName, String systemResourceName);

    /**
     * Deletes the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Context context);

    /**
     * Deletes the system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, String agentResourceName, String systemResourceName);

    /**
     * ListAll the systems.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Agent's Systems as paginated response with {@link PagedIterable}.
     */
    PagedIterable<System> list(String resourceGroupName, String workspaceName, String agentResourceName);

    /**
     * ListAll the systems.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Agent's Systems as paginated response with {@link PagedIterable}.
     */
    PagedIterable<System> list(String resourceGroupName, String workspaceName, String agentResourceName,
        Context context);

    /**
     * List of pending actions for a business application system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list all pending actions for a system to perform as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Action> listActions(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * List of pending actions for a business application system.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list all pending actions for a system to perform as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Action> listActions(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Context context);

    /**
     * Undo action, based on the actionId.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param payload Undo action, based on the actionId.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> undoActionWithResponse(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName, Object payload, Context context);

    /**
     * Undo action, based on the actionId.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void undoAction(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Report the status of the action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @param payload Report a status of the action that was performed by the agent.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> reportActionStatusWithResponse(String resourceGroupName, String workspaceName,
        String agentResourceName, String systemResourceName, Object payload, Context context);

    /**
     * Report the status of the action.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param agentResourceName Business Application Agent Name.
     * @param systemResourceName The name of the system.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void reportActionStatus(String resourceGroupName, String workspaceName, String agentResourceName,
        String systemResourceName);

    /**
     * Gets the system.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    System getById(String id);

    /**
     * Gets the system.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the system along with {@link Response}.
     */
    Response<System> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the system.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the system.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new System resource.
     * 
     * @param name resource name.
     * @return the first stage of the new System definition.
     */
    System.DefinitionStages.Blank define(String name);
}

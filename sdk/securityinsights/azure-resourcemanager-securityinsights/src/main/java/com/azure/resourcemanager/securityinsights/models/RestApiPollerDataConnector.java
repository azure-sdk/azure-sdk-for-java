// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.fluent.models.DataConnectorInner;
import com.azure.resourcemanager.securityinsights.fluent.models.RestApiPollerDataConnectorProperties;
import java.io.IOException;
import java.util.Map;

/**
 * Represents Rest Api Poller data connector.
 */
@Fluent
public final class RestApiPollerDataConnector extends DataConnectorInner {
    /*
     * The data connector kind
     */
    private DataConnectorKind kind = DataConnectorKind.REST_API_POLLER;

    /*
     * Rest Api Poller data connector properties.
     */
    private RestApiPollerDataConnectorProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of RestApiPollerDataConnector class.
     */
    public RestApiPollerDataConnector() {
    }

    /**
     * Get the kind property: The data connector kind.
     * 
     * @return the kind value.
     */
    @Override
    public DataConnectorKind kind() {
        return this.kind;
    }

    /**
     * Get the innerProperties property: Rest Api Poller data connector properties.
     * 
     * @return the innerProperties value.
     */
    private RestApiPollerDataConnectorProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    @Override
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerDataConnector withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the connectorDefinitionName property: The connector definition name (the dataConnectorDefinition resource
     * id).
     * 
     * @return the connectorDefinitionName value.
     */
    public String connectorDefinitionName() {
        return this.innerProperties() == null ? null : this.innerProperties().connectorDefinitionName();
    }

    /**
     * Set the connectorDefinitionName property: The connector definition name (the dataConnectorDefinition resource
     * id).
     * 
     * @param connectorDefinitionName the connectorDefinitionName value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withConnectorDefinitionName(String connectorDefinitionName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withConnectorDefinitionName(connectorDefinitionName);
        return this;
    }

    /**
     * Get the auth property: The a authentication model.
     * 
     * @return the auth value.
     */
    public CcpAuthConfig auth() {
        return this.innerProperties() == null ? null : this.innerProperties().auth();
    }

    /**
     * Set the auth property: The a authentication model.
     * 
     * @param auth the auth value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withAuth(CcpAuthConfig auth) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withAuth(auth);
        return this;
    }

    /**
     * Get the request property: The request configuration.
     * 
     * @return the request value.
     */
    public RestApiPollerRequestConfig request() {
        return this.innerProperties() == null ? null : this.innerProperties().request();
    }

    /**
     * Set the request property: The request configuration.
     * 
     * @param request the request value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withRequest(RestApiPollerRequestConfig request) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withRequest(request);
        return this;
    }

    /**
     * Get the dcrConfig property: The DCR related properties.
     * 
     * @return the dcrConfig value.
     */
    public DcrConfiguration dcrConfig() {
        return this.innerProperties() == null ? null : this.innerProperties().dcrConfig();
    }

    /**
     * Set the dcrConfig property: The DCR related properties.
     * 
     * @param dcrConfig the dcrConfig value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withDcrConfig(DcrConfiguration dcrConfig) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withDcrConfig(dcrConfig);
        return this;
    }

    /**
     * Get the isActive property: Indicates whether the connector is active or not.
     * 
     * @return the isActive value.
     */
    public Boolean isActive() {
        return this.innerProperties() == null ? null : this.innerProperties().isActive();
    }

    /**
     * Set the isActive property: Indicates whether the connector is active or not.
     * 
     * @param isActive the isActive value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withIsActive(Boolean isActive) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withIsActive(isActive);
        return this;
    }

    /**
     * Get the dataType property: The Log Analytics table destination.
     * 
     * @return the dataType value.
     */
    public String dataType() {
        return this.innerProperties() == null ? null : this.innerProperties().dataType();
    }

    /**
     * Set the dataType property: The Log Analytics table destination.
     * 
     * @param dataType the dataType value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withDataType(String dataType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withDataType(dataType);
        return this;
    }

    /**
     * Get the response property: The response configuration.
     * 
     * @return the response value.
     */
    public CcpResponseConfig response() {
        return this.innerProperties() == null ? null : this.innerProperties().response();
    }

    /**
     * Set the response property: The response configuration.
     * 
     * @param response the response value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withResponse(CcpResponseConfig response) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withResponse(response);
        return this;
    }

    /**
     * Get the paging property: The paging configuration.
     * 
     * @return the paging value.
     */
    public RestApiPollerRequestPagingConfig paging() {
        return this.innerProperties() == null ? null : this.innerProperties().paging();
    }

    /**
     * Set the paging property: The paging configuration.
     * 
     * @param paging the paging value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withPaging(RestApiPollerRequestPagingConfig paging) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withPaging(paging);
        return this;
    }

    /**
     * Get the addOnAttributes property: The add on attributes. The key name will become attribute name (a column) and
     * the value will become the attribute value in the payload.
     * 
     * @return the addOnAttributes value.
     */
    public Map<String, String> addOnAttributes() {
        return this.innerProperties() == null ? null : this.innerProperties().addOnAttributes();
    }

    /**
     * Set the addOnAttributes property: The add on attributes. The key name will become attribute name (a column) and
     * the value will become the attribute value in the payload.
     * 
     * @param addOnAttributes the addOnAttributes value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withAddOnAttributes(Map<String, String> addOnAttributes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withAddOnAttributes(addOnAttributes);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("etag", etag());
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RestApiPollerDataConnector from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RestApiPollerDataConnector if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RestApiPollerDataConnector.
     */
    public static RestApiPollerDataConnector fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RestApiPollerDataConnector deserializedRestApiPollerDataConnector = new RestApiPollerDataConnector();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.type = reader.getString();
                } else if ("etag".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.withEtag(reader.getString());
                } else if ("systemData".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.systemData = SystemData.fromJson(reader);
                } else if ("kind".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.kind = DataConnectorKind.fromString(reader.getString());
                } else if ("properties".equals(fieldName)) {
                    deserializedRestApiPollerDataConnector.innerProperties
                        = RestApiPollerDataConnectorProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRestApiPollerDataConnector;
        });
    }
}

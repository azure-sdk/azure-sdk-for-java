// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.DataConnectorInner;
import com.azure.resourcemanager.securityinsights.fluent.models.RestApiPollerDataConnectorProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;

/**
 * Represents Rest Api Poller data connector.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("RestApiPoller")
@Fluent
public final class RestApiPollerDataConnector extends DataConnectorInner {
    /*
     * Rest Api Poller data connector properties.
     */
    @JsonProperty(value = "properties")
    private RestApiPollerDataConnectorProperties innerProperties;

    /**
     * Creates an instance of RestApiPollerDataConnector class.
     */
    public RestApiPollerDataConnector() {
    }

    /**
     * Get the innerProperties property: Rest Api Poller data connector properties.
     * 
     * @return the innerProperties value.
     */
    private RestApiPollerDataConnectorProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerDataConnector withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the connectorDefinitionName property: The connector definition name (the dataConnectorDefinition resource
     * id).
     * 
     * @return the connectorDefinitionName value.
     */
    public String connectorDefinitionName() {
        return this.innerProperties() == null ? null : this.innerProperties().connectorDefinitionName();
    }

    /**
     * Set the connectorDefinitionName property: The connector definition name (the dataConnectorDefinition resource
     * id).
     * 
     * @param connectorDefinitionName the connectorDefinitionName value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withConnectorDefinitionName(String connectorDefinitionName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withConnectorDefinitionName(connectorDefinitionName);
        return this;
    }

    /**
     * Get the auth property: The a authentication model.
     * 
     * @return the auth value.
     */
    public CcpAuthConfig auth() {
        return this.innerProperties() == null ? null : this.innerProperties().auth();
    }

    /**
     * Set the auth property: The a authentication model.
     * 
     * @param auth the auth value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withAuth(CcpAuthConfig auth) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withAuth(auth);
        return this;
    }

    /**
     * Get the request property: The request configuration.
     * 
     * @return the request value.
     */
    public RestApiPollerRequestConfig request() {
        return this.innerProperties() == null ? null : this.innerProperties().request();
    }

    /**
     * Set the request property: The request configuration.
     * 
     * @param request the request value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withRequest(RestApiPollerRequestConfig request) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withRequest(request);
        return this;
    }

    /**
     * Get the dcrConfig property: The DCR related properties.
     * 
     * @return the dcrConfig value.
     */
    public DcrConfiguration dcrConfig() {
        return this.innerProperties() == null ? null : this.innerProperties().dcrConfig();
    }

    /**
     * Set the dcrConfig property: The DCR related properties.
     * 
     * @param dcrConfig the dcrConfig value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withDcrConfig(DcrConfiguration dcrConfig) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withDcrConfig(dcrConfig);
        return this;
    }

    /**
     * Get the isActive property: Indicates whether the connector is active or not.
     * 
     * @return the isActive value.
     */
    public Boolean isActive() {
        return this.innerProperties() == null ? null : this.innerProperties().isActive();
    }

    /**
     * Set the isActive property: Indicates whether the connector is active or not.
     * 
     * @param isActive the isActive value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withIsActive(Boolean isActive) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withIsActive(isActive);
        return this;
    }

    /**
     * Get the dataType property: The Log Analytics table destination.
     * 
     * @return the dataType value.
     */
    public String dataType() {
        return this.innerProperties() == null ? null : this.innerProperties().dataType();
    }

    /**
     * Set the dataType property: The Log Analytics table destination.
     * 
     * @param dataType the dataType value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withDataType(String dataType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withDataType(dataType);
        return this;
    }

    /**
     * Get the response property: The response configuration.
     * 
     * @return the response value.
     */
    public CcpResponseConfig response() {
        return this.innerProperties() == null ? null : this.innerProperties().response();
    }

    /**
     * Set the response property: The response configuration.
     * 
     * @param response the response value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withResponse(CcpResponseConfig response) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withResponse(response);
        return this;
    }

    /**
     * Get the paging property: The paging configuration.
     * 
     * @return the paging value.
     */
    public RestApiPollerRequestPagingConfig paging() {
        return this.innerProperties() == null ? null : this.innerProperties().paging();
    }

    /**
     * Set the paging property: The paging configuration.
     * 
     * @param paging the paging value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withPaging(RestApiPollerRequestPagingConfig paging) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withPaging(paging);
        return this;
    }

    /**
     * Get the addOnAttributes property: The add on attributes. The key name will become attribute name (a column) and
     * the value will become the attribute value in the payload.
     * 
     * @return the addOnAttributes value.
     */
    public Map<String, String> addOnAttributes() {
        return this.innerProperties() == null ? null : this.innerProperties().addOnAttributes();
    }

    /**
     * Set the addOnAttributes property: The add on attributes. The key name will become attribute name (a column) and
     * the value will become the attribute value in the payload.
     * 
     * @param addOnAttributes the addOnAttributes value to set.
     * @return the RestApiPollerDataConnector object itself.
     */
    public RestApiPollerDataConnector withAddOnAttributes(Map<String, String> addOnAttributes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RestApiPollerDataConnectorProperties();
        }
        this.innerProperties().withAddOnAttributes(addOnAttributes);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

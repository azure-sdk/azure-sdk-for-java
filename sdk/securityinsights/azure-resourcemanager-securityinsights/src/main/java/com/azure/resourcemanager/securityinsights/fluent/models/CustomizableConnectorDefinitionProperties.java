// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.securityinsights.models.CustomizableConnectionsConfig;
import com.azure.resourcemanager.securityinsights.models.CustomizableConnectorUiConfig;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * The UiConfig for 'Customizable' connector definition kind.
 */
@Fluent
public final class CustomizableConnectorDefinitionProperties
    implements JsonSerializable<CustomizableConnectorDefinitionProperties> {
    /*
     * Gets or sets the connector definition created date in UTC format.
     */
    private OffsetDateTime createdTimeUtc;

    /*
     * Gets or sets the connector definition last modified date in UTC format.
     */
    private OffsetDateTime lastModifiedUtc;

    /*
     * The UiConfig for 'Customizable' connector definition kind.
     */
    private CustomizableConnectorUiConfig connectorUiConfig;

    /*
     * The UiConfig for 'Customizable' connector definition kind.
     */
    private CustomizableConnectionsConfig connectionsConfig;

    /**
     * Creates an instance of CustomizableConnectorDefinitionProperties class.
     */
    public CustomizableConnectorDefinitionProperties() {
    }

    /**
     * Get the createdTimeUtc property: Gets or sets the connector definition created date in UTC format.
     * 
     * @return the createdTimeUtc value.
     */
    public OffsetDateTime createdTimeUtc() {
        return this.createdTimeUtc;
    }

    /**
     * Set the createdTimeUtc property: Gets or sets the connector definition created date in UTC format.
     * 
     * @param createdTimeUtc the createdTimeUtc value to set.
     * @return the CustomizableConnectorDefinitionProperties object itself.
     */
    public CustomizableConnectorDefinitionProperties withCreatedTimeUtc(OffsetDateTime createdTimeUtc) {
        this.createdTimeUtc = createdTimeUtc;
        return this;
    }

    /**
     * Get the lastModifiedUtc property: Gets or sets the connector definition last modified date in UTC format.
     * 
     * @return the lastModifiedUtc value.
     */
    public OffsetDateTime lastModifiedUtc() {
        return this.lastModifiedUtc;
    }

    /**
     * Set the lastModifiedUtc property: Gets or sets the connector definition last modified date in UTC format.
     * 
     * @param lastModifiedUtc the lastModifiedUtc value to set.
     * @return the CustomizableConnectorDefinitionProperties object itself.
     */
    public CustomizableConnectorDefinitionProperties withLastModifiedUtc(OffsetDateTime lastModifiedUtc) {
        this.lastModifiedUtc = lastModifiedUtc;
        return this;
    }

    /**
     * Get the connectorUiConfig property: The UiConfig for 'Customizable' connector definition kind.
     * 
     * @return the connectorUiConfig value.
     */
    public CustomizableConnectorUiConfig connectorUiConfig() {
        return this.connectorUiConfig;
    }

    /**
     * Set the connectorUiConfig property: The UiConfig for 'Customizable' connector definition kind.
     * 
     * @param connectorUiConfig the connectorUiConfig value to set.
     * @return the CustomizableConnectorDefinitionProperties object itself.
     */
    public CustomizableConnectorDefinitionProperties
        withConnectorUiConfig(CustomizableConnectorUiConfig connectorUiConfig) {
        this.connectorUiConfig = connectorUiConfig;
        return this;
    }

    /**
     * Get the connectionsConfig property: The UiConfig for 'Customizable' connector definition kind.
     * 
     * @return the connectionsConfig value.
     */
    public CustomizableConnectionsConfig connectionsConfig() {
        return this.connectionsConfig;
    }

    /**
     * Set the connectionsConfig property: The UiConfig for 'Customizable' connector definition kind.
     * 
     * @param connectionsConfig the connectionsConfig value to set.
     * @return the CustomizableConnectorDefinitionProperties object itself.
     */
    public CustomizableConnectorDefinitionProperties
        withConnectionsConfig(CustomizableConnectionsConfig connectionsConfig) {
        this.connectionsConfig = connectionsConfig;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (connectorUiConfig() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property connectorUiConfig in model CustomizableConnectorDefinitionProperties"));
        } else {
            connectorUiConfig().validate();
        }
        if (connectionsConfig() != null) {
            connectionsConfig().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CustomizableConnectorDefinitionProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("connectorUiConfig", this.connectorUiConfig);
        jsonWriter.writeStringField("createdTimeUtc",
            this.createdTimeUtc == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.createdTimeUtc));
        jsonWriter.writeStringField("lastModifiedUtc",
            this.lastModifiedUtc == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastModifiedUtc));
        jsonWriter.writeJsonField("connectionsConfig", this.connectionsConfig);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomizableConnectorDefinitionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomizableConnectorDefinitionProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomizableConnectorDefinitionProperties.
     */
    public static CustomizableConnectorDefinitionProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomizableConnectorDefinitionProperties deserializedCustomizableConnectorDefinitionProperties
                = new CustomizableConnectorDefinitionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("connectorUiConfig".equals(fieldName)) {
                    deserializedCustomizableConnectorDefinitionProperties.connectorUiConfig
                        = CustomizableConnectorUiConfig.fromJson(reader);
                } else if ("createdTimeUtc".equals(fieldName)) {
                    deserializedCustomizableConnectorDefinitionProperties.createdTimeUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("lastModifiedUtc".equals(fieldName)) {
                    deserializedCustomizableConnectorDefinitionProperties.lastModifiedUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("connectionsConfig".equals(fieldName)) {
                    deserializedCustomizableConnectorDefinitionProperties.connectionsConfig
                        = CustomizableConnectionsConfig.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomizableConnectorDefinitionProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.AzureEntityResource;
import com.azure.resourcemanager.securityinsights.models.Mode;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The workspace manager configuration. */
@Fluent
public final class WorkspaceManagerConfigurationInner extends AzureEntityResource {
    /*
     * The workspace manager configuration object
     */
    @JsonProperty(value = "properties")
    private WorkspaceManagerConfigurationProperties innerProperties;

    /** Creates an instance of WorkspaceManagerConfigurationInner class. */
    public WorkspaceManagerConfigurationInner() {
    }

    /**
     * Get the innerProperties property: The workspace manager configuration object.
     *
     * @return the innerProperties value.
     */
    private WorkspaceManagerConfigurationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the mode property: The current mode of the workspace manager configuration.
     *
     * @return the mode value.
     */
    public Mode mode() {
        return this.innerProperties() == null ? null : this.innerProperties().mode();
    }

    /**
     * Set the mode property: The current mode of the workspace manager configuration.
     *
     * @param mode the mode value to set.
     * @return the WorkspaceManagerConfigurationInner object itself.
     */
    public WorkspaceManagerConfigurationInner withMode(Mode mode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new WorkspaceManagerConfigurationProperties();
        }
        this.innerProperties().withMode(mode);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

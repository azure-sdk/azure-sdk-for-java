// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.ThreatIntelligenceCountInner;
import com.azure.resourcemanager.securityinsights.fluent.models.TIObjectInner;
import com.azure.resourcemanager.securityinsights.models.CountQuery;
import com.azure.resourcemanager.securityinsights.models.Query;
import com.azure.resourcemanager.securityinsights.models.TiType;

/**
 * An instance of this class provides access to all the operations defined in ThreatIntelligencesClient.
 */
public interface ThreatIntelligencesClient {
    /**
     * Gets the count of all TI objects for the workspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param tiType TI type.
     * @param query The query to run on the TI objects in the workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the count of all TI objects for the workspace along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ThreatIntelligenceCountInner> countWithResponse(String resourceGroupName, String workspaceName,
        TiType tiType, CountQuery query, Context context);

    /**
     * Gets the count of all TI objects for the workspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param tiType TI type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the count of all TI objects for the workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ThreatIntelligenceCountInner count(String resourceGroupName, String workspaceName, TiType tiType);

    /**
     * Gets all TI objects for the workspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param tiType TI type.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all TI objects for the workspace as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TIObjectInner> query(String resourceGroupName, String workspaceName, TiType tiType);

    /**
     * Gets all TI objects for the workspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param tiType TI type.
     * @param query The query to run on the TI objects in the workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all TI objects for the workspace as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TIObjectInner> query(String resourceGroupName, String workspaceName, TiType tiType, Query query,
        Context context);
}

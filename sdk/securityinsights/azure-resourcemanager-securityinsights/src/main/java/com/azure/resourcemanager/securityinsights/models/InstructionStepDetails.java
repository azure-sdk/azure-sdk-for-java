// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel
 * Portal.
 */
@Fluent
public final class InstructionStepDetails {
    /*
     * Gets or sets the instruction type parameters settings.
     */
    @JsonProperty(value = "parameters", required = true)
    private Object parameters;

    /*
     * Gets or sets the instruction type name.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /** Creates an instance of InstructionStepDetails class. */
    public InstructionStepDetails() {
    }

    /**
     * Get the parameters property: Gets or sets the instruction type parameters settings.
     *
     * @return the parameters value.
     */
    public Object parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Gets or sets the instruction type parameters settings.
     *
     * @param parameters the parameters value to set.
     * @return the InstructionStepDetails object itself.
     */
    public InstructionStepDetails withParameters(Object parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the type property: Gets or sets the instruction type name.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Gets or sets the instruction type name.
     *
     * @param type the type value to set.
     * @return the InstructionStepDetails object itself.
     */
    public InstructionStepDetails withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parameters() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property parameters in model InstructionStepDetails"));
        }
        if (type() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property type in model InstructionStepDetails"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InstructionStepDetails.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.OfficeAtpCheckRequirementsProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents OfficeATP (Office 365 Advanced Threat Protection) requirements check request.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("OfficeATP")
@Fluent
public final class OfficeAtpCheckRequirements extends DataConnectorsCheckRequirements {
    /*
     * OfficeATP (Office 365 Advanced Threat Protection) requirements check properties.
     */
    @JsonProperty(value = "properties")
    private OfficeAtpCheckRequirementsProperties innerProperties;

    /**
     * Creates an instance of OfficeAtpCheckRequirements class.
     */
    public OfficeAtpCheckRequirements() {
    }

    /**
     * Get the innerProperties property: OfficeATP (Office 365 Advanced Threat Protection) requirements check
     * properties.
     * 
     * @return the innerProperties value.
     */
    private OfficeAtpCheckRequirementsProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tenantId property: The tenant id to connect to, and get the data from.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Set the tenantId property: The tenant id to connect to, and get the data from.
     * 
     * @param tenantId the tenantId value to set.
     * @return the OfficeAtpCheckRequirements object itself.
     */
    public OfficeAtpCheckRequirements withTenantId(String tenantId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OfficeAtpCheckRequirementsProperties();
        }
        this.innerProperties().withTenantId(tenantId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Report the status of an action that was performed by the agent.
 */
@Fluent
public final class ReportActionStatusPayload implements JsonSerializable<ReportActionStatusPayload> {
    /*
     * The action ID to perform
     */
    private String actionId;

    /*
     * The status of the action that was performed by the agent
     */
    private String actionStatus;

    /*
     * The reason of the failure of the action. Empty if the action is successful.
     */
    private String failureReason;

    /**
     * Creates an instance of ReportActionStatusPayload class.
     */
    public ReportActionStatusPayload() {
    }

    /**
     * Get the actionId property: The action ID to perform.
     * 
     * @return the actionId value.
     */
    public String actionId() {
        return this.actionId;
    }

    /**
     * Set the actionId property: The action ID to perform.
     * 
     * @param actionId the actionId value to set.
     * @return the ReportActionStatusPayload object itself.
     */
    public ReportActionStatusPayload withActionId(String actionId) {
        this.actionId = actionId;
        return this;
    }

    /**
     * Get the actionStatus property: The status of the action that was performed by the agent.
     * 
     * @return the actionStatus value.
     */
    public String actionStatus() {
        return this.actionStatus;
    }

    /**
     * Set the actionStatus property: The status of the action that was performed by the agent.
     * 
     * @param actionStatus the actionStatus value to set.
     * @return the ReportActionStatusPayload object itself.
     */
    public ReportActionStatusPayload withActionStatus(String actionStatus) {
        this.actionStatus = actionStatus;
        return this;
    }

    /**
     * Get the failureReason property: The reason of the failure of the action. Empty if the action is successful.
     * 
     * @return the failureReason value.
     */
    public String failureReason() {
        return this.failureReason;
    }

    /**
     * Set the failureReason property: The reason of the failure of the action. Empty if the action is successful.
     * 
     * @param failureReason the failureReason value to set.
     * @return the ReportActionStatusPayload object itself.
     */
    public ReportActionStatusPayload withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("actionId", this.actionId);
        jsonWriter.writeStringField("actionStatus", this.actionStatus);
        jsonWriter.writeStringField("failureReason", this.failureReason);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ReportActionStatusPayload from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ReportActionStatusPayload if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ReportActionStatusPayload.
     */
    public static ReportActionStatusPayload fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ReportActionStatusPayload deserializedReportActionStatusPayload = new ReportActionStatusPayload();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actionId".equals(fieldName)) {
                    deserializedReportActionStatusPayload.actionId = reader.getString();
                } else if ("actionStatus".equals(fieldName)) {
                    deserializedReportActionStatusPayload.actionStatus = reader.getString();
                } else if ("failureReason".equals(fieldName)) {
                    deserializedReportActionStatusPayload.failureReason = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedReportActionStatusPayload;
        });
    }
}

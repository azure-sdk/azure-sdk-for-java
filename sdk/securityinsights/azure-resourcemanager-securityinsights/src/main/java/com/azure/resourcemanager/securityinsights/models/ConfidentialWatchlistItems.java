// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.WatchlistItemInner;

/** Resource collection API of ConfidentialWatchlistItems. */
public interface ConfidentialWatchlistItems {
    /**
     * Gets all confidential watchlist Items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all confidential watchlist Items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WatchlistItem> list(String resourceGroupName, String workspaceName, String watchlistAlias);

    /**
     * Gets all confidential watchlist Items.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param skipToken Skiptoken is only used if a previous operation returned a partial result. If a previous response
     *     contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that
     *     specifies a starting point to use for subsequent calls. Optional.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all confidential watchlist Items as paginated response with {@link PagedIterable}.
     */
    PagedIterable<WatchlistItem> list(
        String resourceGroupName, String workspaceName, String watchlistAlias, String skipToken, Context context);

    /**
     * Gets a confidential watchlist item.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlistItemId Watchlist Item Id (GUID).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a confidential watchlist item.
     */
    WatchlistItem get(String resourceGroupName, String workspaceName, String watchlistAlias, String watchlistItemId);

    /**
     * Gets a confidential watchlist item.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlistItemId Watchlist Item Id (GUID).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a confidential watchlist item along with {@link Response}.
     */
    Response<WatchlistItem> getWithResponse(
        String resourceGroupName, String workspaceName, String watchlistAlias, String watchlistItemId, Context context);

    /**
     * Delete a confidential watchlist item.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlistItemId Watchlist Item Id (GUID).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, String watchlistAlias, String watchlistItemId);

    /**
     * Delete a confidential watchlist item.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlistItemId Watchlist Item Id (GUID).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String workspaceName, String watchlistAlias, String watchlistItemId, Context context);

    /**
     * Creates or updates a watchlist item.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlistItemId Watchlist Item Id (GUID).
     * @param watchlistItem The watchlist item.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Watchlist item in Azure Security Insights.
     */
    WatchlistItem createOrUpdate(
        String resourceGroupName,
        String workspaceName,
        String watchlistAlias,
        String watchlistItemId,
        WatchlistItemInner watchlistItem);

    /**
     * Creates or updates a watchlist item.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param watchlistAlias Watchlist Alias.
     * @param watchlistItemId Watchlist Item Id (GUID).
     * @param watchlistItem The watchlist item.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Watchlist item in Azure Security Insights along with {@link Response}.
     */
    Response<WatchlistItem> createOrUpdateWithResponse(
        String resourceGroupName,
        String workspaceName,
        String watchlistAlias,
        String watchlistItemId,
        WatchlistItemInner watchlistItem,
        Context context);
}

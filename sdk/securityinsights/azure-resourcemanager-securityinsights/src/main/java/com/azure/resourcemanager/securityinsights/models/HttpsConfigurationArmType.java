// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * Represents the types of HTTPS configuration to connect to the JavaOs or SapControlOs system.
 */
public final class HttpsConfigurationArmType extends ExpandableStringEnum<HttpsConfigurationArmType> {
    /**
     * Static value HttpOnly for HttpsConfigurationArmType.
     */
    public static final HttpsConfigurationArmType HTTP_ONLY = fromString("HttpOnly");

    /**
     * Static value HttpsWithSslVerification for HttpsConfigurationArmType.
     */
    public static final HttpsConfigurationArmType HTTPS_WITH_SSL_VERIFICATION = fromString("HttpsWithSslVerification");

    /**
     * Static value HttpsWithoutSslVerification for HttpsConfigurationArmType.
     */
    public static final HttpsConfigurationArmType HTTPS_WITHOUT_SSL_VERIFICATION
        = fromString("HttpsWithoutSslVerification");

    /**
     * Creates a new instance of HttpsConfigurationArmType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public HttpsConfigurationArmType() {
    }

    /**
     * Creates or finds a HttpsConfigurationArmType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding HttpsConfigurationArmType.
     */
    @JsonCreator
    public static HttpsConfigurationArmType fromString(String name) {
        return fromString(name, HttpsConfigurationArmType.class);
    }

    /**
     * Gets known HttpsConfigurationArmType values.
     * 
     * @return known HttpsConfigurationArmType values.
     */
    public static Collection<HttpsConfigurationArmType> values() {
        return values(HttpsConfigurationArmType.class);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * What suggestions should be taken to complete the recommendation.
 */
@Fluent
public final class RecommendedSuggestion {
    /*
     * Id of the suggestion type.
     */
    @JsonProperty(value = "suggestionTypeId", required = true)
    private String suggestionTypeId;

    /*
     * Title of the suggestion.
     */
    @JsonProperty(value = "title", required = true)
    private String title;

    /*
     * Description of the suggestion.
     */
    @JsonProperty(value = "description", required = true)
    private String description;

    /*
     * Action of the suggestion.
     */
    @JsonProperty(value = "action", required = true)
    private String action;

    /*
     * Collection of additional properties for the suggestion.
     */
    @JsonProperty(value = "additionalProperties")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> additionalProperties;

    /**
     * Creates an instance of RecommendedSuggestion class.
     */
    public RecommendedSuggestion() {
    }

    /**
     * Get the suggestionTypeId property: Id of the suggestion type.
     * 
     * @return the suggestionTypeId value.
     */
    public String suggestionTypeId() {
        return this.suggestionTypeId;
    }

    /**
     * Set the suggestionTypeId property: Id of the suggestion type.
     * 
     * @param suggestionTypeId the suggestionTypeId value to set.
     * @return the RecommendedSuggestion object itself.
     */
    public RecommendedSuggestion withSuggestionTypeId(String suggestionTypeId) {
        this.suggestionTypeId = suggestionTypeId;
        return this;
    }

    /**
     * Get the title property: Title of the suggestion.
     * 
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: Title of the suggestion.
     * 
     * @param title the title value to set.
     * @return the RecommendedSuggestion object itself.
     */
    public RecommendedSuggestion withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the description property: Description of the suggestion.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the suggestion.
     * 
     * @param description the description value to set.
     * @return the RecommendedSuggestion object itself.
     */
    public RecommendedSuggestion withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the action property: Action of the suggestion.
     * 
     * @return the action value.
     */
    public String action() {
        return this.action;
    }

    /**
     * Set the action property: Action of the suggestion.
     * 
     * @param action the action value to set.
     * @return the RecommendedSuggestion object itself.
     */
    public RecommendedSuggestion withAction(String action) {
        this.action = action;
        return this;
    }

    /**
     * Get the additionalProperties property: Collection of additional properties for the suggestion.
     * 
     * @return the additionalProperties value.
     */
    public Map<String, String> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Collection of additional properties for the suggestion.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the RecommendedSuggestion object itself.
     */
    public RecommendedSuggestion withAdditionalProperties(Map<String, String> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (suggestionTypeId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property suggestionTypeId in model RecommendedSuggestion"));
        }
        if (title() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property title in model RecommendedSuggestion"));
        }
        if (description() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property description in model RecommendedSuggestion"));
        }
        if (action() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property action in model RecommendedSuggestion"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(RecommendedSuggestion.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.ExportConnectionInner;
import java.util.List;

/** An immutable client-side representation of ExportConnection. */
public interface ExportConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: Etag of the azure resource.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the connectionId property: The id (a Guid) of the export connection.
     *
     * @return the connectionId value.
     */
    String connectionId();

    /**
     * Gets the version property: The version number associated with the export connection.
     *
     * @return the version value.
     */
    Version version();

    /**
     * Gets the displayName property: The display name of the export connection.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: A description of the export connection.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the repoType property: The repository type of the export connection.
     *
     * @return the repoType value.
     */
    RepoType repoType();

    /**
     * Gets the contentTypes property: Array of export connection content types.
     *
     * @return the contentTypes value.
     */
    List<ContentType> contentTypes();

    /**
     * Gets the repository property: Repository metadata.
     *
     * @return the repository value.
     */
    Repository repository();

    /**
     * Gets the exportType property: Export type of the export connection.
     *
     * @return the exportType value.
     */
    ExportType exportType();

    /**
     * Gets the nextScheduledTime property: Export type of the export connection.
     *
     * @return the nextScheduledTime value.
     */
    String nextScheduledTime();

    /**
     * Gets the inner com.azure.resourcemanager.securityinsights.fluent.models.ExportConnectionInner object.
     *
     * @return the inner object.
     */
    ExportConnectionInner innerModel();

    /** The entirety of the ExportConnection definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ExportConnection definition stages. */
    interface DefinitionStages {
        /** The first stage of the ExportConnection definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ExportConnection definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @return the next definition stage.
             */
            WithCreate withExistingWorkspace(String resourceGroupName, String workspaceName);
        }
        /**
         * The stage of the ExportConnection definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithEtag,
                DefinitionStages.WithConnectionId,
                DefinitionStages.WithVersion,
                DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithRepoType,
                DefinitionStages.WithContentTypes,
                DefinitionStages.WithRepository,
                DefinitionStages.WithExportType,
                DefinitionStages.WithNextScheduledTime {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ExportConnection create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ExportConnection create(Context context);
        }
        /** The stage of the ExportConnection definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             *
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the ExportConnection definition allowing to specify connectionId. */
        interface WithConnectionId {
            /**
             * Specifies the connectionId property: The id (a Guid) of the export connection.
             *
             * @param connectionId The id (a Guid) of the export connection.
             * @return the next definition stage.
             */
            WithCreate withConnectionId(String connectionId);
        }
        /** The stage of the ExportConnection definition allowing to specify version. */
        interface WithVersion {
            /**
             * Specifies the version property: The version number associated with the export connection.
             *
             * @param version The version number associated with the export connection.
             * @return the next definition stage.
             */
            WithCreate withVersion(Version version);
        }
        /** The stage of the ExportConnection definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the export connection.
             *
             * @param displayName The display name of the export connection.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the ExportConnection definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: A description of the export connection.
             *
             * @param description A description of the export connection.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the ExportConnection definition allowing to specify repoType. */
        interface WithRepoType {
            /**
             * Specifies the repoType property: The repository type of the export connection.
             *
             * @param repoType The repository type of the export connection.
             * @return the next definition stage.
             */
            WithCreate withRepoType(RepoType repoType);
        }
        /** The stage of the ExportConnection definition allowing to specify contentTypes. */
        interface WithContentTypes {
            /**
             * Specifies the contentTypes property: Array of export connection content types..
             *
             * @param contentTypes Array of export connection content types.
             * @return the next definition stage.
             */
            WithCreate withContentTypes(List<ContentType> contentTypes);
        }
        /** The stage of the ExportConnection definition allowing to specify repository. */
        interface WithRepository {
            /**
             * Specifies the repository property: Repository metadata..
             *
             * @param repository Repository metadata.
             * @return the next definition stage.
             */
            WithCreate withRepository(Repository repository);
        }
        /** The stage of the ExportConnection definition allowing to specify exportType. */
        interface WithExportType {
            /**
             * Specifies the exportType property: Export type of the export connection..
             *
             * @param exportType Export type of the export connection.
             * @return the next definition stage.
             */
            WithCreate withExportType(ExportType exportType);
        }
        /** The stage of the ExportConnection definition allowing to specify nextScheduledTime. */
        interface WithNextScheduledTime {
            /**
             * Specifies the nextScheduledTime property: Export type of the export connection..
             *
             * @param nextScheduledTime Export type of the export connection.
             * @return the next definition stage.
             */
            WithCreate withNextScheduledTime(String nextScheduledTime);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ExportConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ExportConnection refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The sample queries for the connector. */
@Fluent
public final class SampleQuery {
    /*
     * Gets or sets the  sample query description.
     */
    @JsonProperty(value = "description", required = true)
    private String description;

    /*
     * Gets or sets the KQL sample query.
     */
    @JsonProperty(value = "query", required = true)
    private String query;

    /** Creates an instance of SampleQuery class. */
    public SampleQuery() {
    }

    /**
     * Get the description property: Gets or sets the sample query description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Gets or sets the sample query description.
     *
     * @param description the description value to set.
     * @return the SampleQuery object itself.
     */
    public SampleQuery withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the query property: Gets or sets the KQL sample query.
     *
     * @return the query value.
     */
    public String query() {
        return this.query;
    }

    /**
     * Set the query property: Gets or sets the KQL sample query.
     *
     * @param query the query value to set.
     * @return the SampleQuery object itself.
     */
    public SampleQuery withQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (description() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property description in model SampleQuery"));
        }
        if (query() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property query in model SampleQuery"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SampleQuery.class);
}

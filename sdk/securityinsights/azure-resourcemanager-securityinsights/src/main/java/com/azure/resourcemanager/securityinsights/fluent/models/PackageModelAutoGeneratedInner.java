// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.Flag;
import com.azure.resourcemanager.securityinsights.models.MetadataAuthor;
import com.azure.resourcemanager.securityinsights.models.MetadataCategories;
import com.azure.resourcemanager.securityinsights.models.MetadataDependencies;
import com.azure.resourcemanager.securityinsights.models.MetadataSource;
import com.azure.resourcemanager.securityinsights.models.MetadataSupport;
import com.azure.resourcemanager.securityinsights.models.PackageKind;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;
import java.util.List;

/** Represents a Package in Azure Security Insights. */
@Fluent
public final class PackageModelAutoGeneratedInner extends ResourceWithEtag {
    /*
     * package properties
     */
    @JsonProperty(value = "properties")
    private PackagePropertiesAutoGenerated innerProperties;

    /** Creates an instance of PackageModelAutoGeneratedInner class. */
    public PackageModelAutoGeneratedInner() {
    }

    /**
     * Get the innerProperties property: package properties.
     *
     * @return the innerProperties value.
     */
    private PackagePropertiesAutoGenerated innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public PackageModelAutoGeneratedInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the packageId property: The package id.
     *
     * @return the packageId value.
     */
    public String packageId() {
        return this.innerProperties() == null ? null : this.innerProperties().packageId();
    }

    /**
     * Set the packageId property: The package id.
     *
     * @param packageId the packageId value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withPackageId(String packageId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withPackageId(packageId);
        return this;
    }

    /**
     * Get the packageKind property: The package kind.
     *
     * @return the packageKind value.
     */
    public PackageKind packageKind() {
        return this.innerProperties() == null ? null : this.innerProperties().packageKind();
    }

    /**
     * Set the packageKind property: The package kind.
     *
     * @param packageKind the packageKind value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withPackageKind(PackageKind packageKind) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withPackageKind(packageKind);
        return this;
    }

    /**
     * Get the installedVersion property: The version of the installed package, null or absent means not installed.
     *
     * @return the installedVersion value.
     */
    public String installedVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().installedVersion();
    }

    /**
     * Set the installedVersion property: The version of the installed package, null or absent means not installed.
     *
     * @param installedVersion the installedVersion value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withInstalledVersion(String installedVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withInstalledVersion(installedVersion);
        return this;
    }

    /**
     * Get the contentSchemaVersion property: The version of the content schema.
     *
     * @return the contentSchemaVersion value.
     */
    public String contentSchemaVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().contentSchemaVersion();
    }

    /**
     * Set the contentSchemaVersion property: The version of the content schema.
     *
     * @param contentSchemaVersion the contentSchemaVersion value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withContentSchemaVersion(String contentSchemaVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withContentSchemaVersion(contentSchemaVersion);
        return this;
    }

    /**
     * Get the resourceId property: The metadata resource id.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceId();
    }

    /**
     * Set the resourceId property: The metadata resource id.
     *
     * @param resourceId the resourceId value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withResourceId(String resourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withResourceId(resourceId);
        return this;
    }

    /**
     * Get the isNew property: Flag indicates if this is a newly published package.
     *
     * @return the isNew value.
     */
    public Flag isNew() {
        return this.innerProperties() == null ? null : this.innerProperties().isNew();
    }

    /**
     * Set the isNew property: Flag indicates if this is a newly published package.
     *
     * @param isNew the isNew value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withIsNew(Flag isNew) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withIsNew(isNew);
        return this;
    }

    /**
     * Get the isPreview property: Flag indicates if this package is in preview.
     *
     * @return the isPreview value.
     */
    public Flag isPreview() {
        return this.innerProperties() == null ? null : this.innerProperties().isPreview();
    }

    /**
     * Set the isPreview property: Flag indicates if this package is in preview.
     *
     * @param isPreview the isPreview value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withIsPreview(Flag isPreview) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withIsPreview(isPreview);
        return this;
    }

    /**
     * Get the isFeatured property: Flag indicates if this package is among the featured list.
     *
     * @return the isFeatured value.
     */
    public Flag isFeatured() {
        return this.innerProperties() == null ? null : this.innerProperties().isFeatured();
    }

    /**
     * Set the isFeatured property: Flag indicates if this package is among the featured list.
     *
     * @param isFeatured the isFeatured value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withIsFeatured(Flag isFeatured) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withIsFeatured(isFeatured);
        return this;
    }

    /**
     * Get the version property: the latest version number of the package.
     *
     * @return the version value.
     */
    public String version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Set the version property: the latest version number of the package.
     *
     * @param version the version value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withVersion(String version) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withVersion(version);
        return this;
    }

    /**
     * Get the displayName property: The display name of the package.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The display name of the package.
     *
     * @param displayName the displayName value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Get the description property: The description of the package.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of the package.
     *
     * @param description the description value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the publisherDisplayName property: The publisher display name of the package.
     *
     * @return the publisherDisplayName value.
     */
    public String publisherDisplayName() {
        return this.innerProperties() == null ? null : this.innerProperties().publisherDisplayName();
    }

    /**
     * Set the publisherDisplayName property: The publisher display name of the package.
     *
     * @param publisherDisplayName the publisherDisplayName value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withPublisherDisplayName(String publisherDisplayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withPublisherDisplayName(publisherDisplayName);
        return this;
    }

    /**
     * Get the source property: The source of the package.
     *
     * @return the source value.
     */
    public MetadataSource source() {
        return this.innerProperties() == null ? null : this.innerProperties().source();
    }

    /**
     * Set the source property: The source of the package.
     *
     * @param source the source value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withSource(MetadataSource source) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withSource(source);
        return this;
    }

    /**
     * Get the author property: The author of the package.
     *
     * @return the author value.
     */
    public MetadataAuthor author() {
        return this.innerProperties() == null ? null : this.innerProperties().author();
    }

    /**
     * Set the author property: The author of the package.
     *
     * @param author the author value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withAuthor(MetadataAuthor author) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withAuthor(author);
        return this;
    }

    /**
     * Get the support property: The support tier of the package.
     *
     * @return the support value.
     */
    public MetadataSupport support() {
        return this.innerProperties() == null ? null : this.innerProperties().support();
    }

    /**
     * Set the support property: The support tier of the package.
     *
     * @param support the support value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withSupport(MetadataSupport support) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withSupport(support);
        return this;
    }

    /**
     * Get the dependencies property: The support tier of the package.
     *
     * @return the dependencies value.
     */
    public MetadataDependencies dependencies() {
        return this.innerProperties() == null ? null : this.innerProperties().dependencies();
    }

    /**
     * Set the dependencies property: The support tier of the package.
     *
     * @param dependencies the dependencies value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withDependencies(MetadataDependencies dependencies) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withDependencies(dependencies);
        return this;
    }

    /**
     * Get the providers property: Providers for the package item.
     *
     * @return the providers value.
     */
    public List<String> providers() {
        return this.innerProperties() == null ? null : this.innerProperties().providers();
    }

    /**
     * Set the providers property: Providers for the package item.
     *
     * @param providers the providers value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withProviders(List<String> providers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withProviders(providers);
        return this;
    }

    /**
     * Get the firstPublishDate property: first publish date package item.
     *
     * @return the firstPublishDate value.
     */
    public LocalDate firstPublishDate() {
        return this.innerProperties() == null ? null : this.innerProperties().firstPublishDate();
    }

    /**
     * Set the firstPublishDate property: first publish date package item.
     *
     * @param firstPublishDate the firstPublishDate value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withFirstPublishDate(LocalDate firstPublishDate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withFirstPublishDate(firstPublishDate);
        return this;
    }

    /**
     * Get the lastPublishDate property: last publish date for the package item.
     *
     * @return the lastPublishDate value.
     */
    public LocalDate lastPublishDate() {
        return this.innerProperties() == null ? null : this.innerProperties().lastPublishDate();
    }

    /**
     * Set the lastPublishDate property: last publish date for the package item.
     *
     * @param lastPublishDate the lastPublishDate value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withLastPublishDate(LocalDate lastPublishDate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withLastPublishDate(lastPublishDate);
        return this;
    }

    /**
     * Get the categories property: The categories of the package.
     *
     * @return the categories value.
     */
    public MetadataCategories categories() {
        return this.innerProperties() == null ? null : this.innerProperties().categories();
    }

    /**
     * Set the categories property: The categories of the package.
     *
     * @param categories the categories value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withCategories(MetadataCategories categories) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withCategories(categories);
        return this;
    }

    /**
     * Get the tags property: The tags of the package.
     *
     * @return the tags value.
     */
    public List<String> tags() {
        return this.innerProperties() == null ? null : this.innerProperties().tags();
    }

    /**
     * Set the tags property: The tags of the package.
     *
     * @param tags the tags value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withTags(List<String> tags) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withTags(tags);
        return this;
    }

    /**
     * Get the threatAnalysisTactics property: the tactics the resource covers.
     *
     * @return the threatAnalysisTactics value.
     */
    public List<String> threatAnalysisTactics() {
        return this.innerProperties() == null ? null : this.innerProperties().threatAnalysisTactics();
    }

    /**
     * Set the threatAnalysisTactics property: the tactics the resource covers.
     *
     * @param threatAnalysisTactics the threatAnalysisTactics value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withThreatAnalysisTactics(List<String> threatAnalysisTactics) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withThreatAnalysisTactics(threatAnalysisTactics);
        return this;
    }

    /**
     * Get the threatAnalyticsTechniques property: the techniques the resource covers, these have to be aligned with the
     * tactics being used.
     *
     * @return the threatAnalyticsTechniques value.
     */
    public List<String> threatAnalyticsTechniques() {
        return this.innerProperties() == null ? null : this.innerProperties().threatAnalyticsTechniques();
    }

    /**
     * Set the threatAnalyticsTechniques property: the techniques the resource covers, these have to be aligned with the
     * tactics being used.
     *
     * @param threatAnalyticsTechniques the threatAnalyticsTechniques value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withThreatAnalyticsTechniques(List<String> threatAnalyticsTechniques) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withThreatAnalyticsTechniques(threatAnalyticsTechniques);
        return this;
    }

    /**
     * Get the icon property: the icon identifier. this id can later be fetched from the content metadata.
     *
     * @return the icon value.
     */
    public String icon() {
        return this.innerProperties() == null ? null : this.innerProperties().icon();
    }

    /**
     * Set the icon property: the icon identifier. this id can later be fetched from the content metadata.
     *
     * @param icon the icon value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withIcon(String icon) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withIcon(icon);
        return this;
    }

    /**
     * Get the packagedContent property: the json to deploy.
     *
     * @return the packagedContent value.
     */
    public Object packagedContent() {
        return this.innerProperties() == null ? null : this.innerProperties().packagedContent();
    }

    /**
     * Set the packagedContent property: the json to deploy.
     *
     * @param packagedContent the packagedContent value to set.
     * @return the PackageModelAutoGeneratedInner object itself.
     */
    public PackageModelAutoGeneratedInner withPackagedContent(Object packagedContent) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PackagePropertiesAutoGenerated();
        }
        this.innerProperties().withPackagedContent(packagedContent);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

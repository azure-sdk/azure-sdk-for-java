// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.SummaryInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of Summary. */
public interface Summary {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: Etag of the azure resource.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the summaryId property: The ID (a GUID) of the summary.
     *
     * @return the summaryId value.
     */
    String summaryId();

    /**
     * Gets the summaryName property: The name of the summary.
     *
     * @return the summaryName value.
     */
    String summaryName();

    /**
     * Gets the sourceInfo property: The source info for the summary.
     *
     * @return the sourceInfo value.
     */
    Map<String, String> sourceInfo();

    /**
     * Gets the searchKey property: The search key is used to optimize query performance when using summaries for joins
     * with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use
     * this field as the key field when joining to other event data by IP address.
     *
     * @return the searchKey value.
     */
    String searchKey();

    /**
     * Gets the tactics property: A list of relevant MITRE attacks.
     *
     * @return the tactics value.
     */
    List<AttackTactic> tactics();

    /**
     * Gets the techniques property: The list of techniques for summary.
     *
     * @return the techniques value.
     */
    List<String> techniques();

    /**
     * Gets the relationName property: The relation name for the summary.
     *
     * @return the relationName value.
     */
    String relationName();

    /**
     * Gets the relationId property: The relation ID (GUID) for the summary.
     *
     * @return the relationId value.
     */
    String relationId();

    /**
     * Gets the summaryDescription property: The description for the summary.
     *
     * @return the summaryDescription value.
     */
    String summaryDescription();

    /**
     * Gets the rawContent property: The raw content that represents to summary items to create.
     *
     * @return the rawContent value.
     */
    String rawContent();

    /**
     * Gets the typePropertiesType property: The type of the summary.
     *
     * @return the typePropertiesType value.
     */
    Type typePropertiesType();

    /**
     * Gets the tenantId property: The tenantId where the summary belongs to.
     *
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * Gets the summaryStatus property: The status of the Summary : Active, Deleted.
     *
     * @return the summaryStatus value.
     */
    SummaryStatus summaryStatus();

    /**
     * Gets the provisioningState property: The provisioning state of the Dynamic Summary resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.securityinsights.fluent.models.SummaryInner object.
     *
     * @return the inner object.
     */
    SummaryInner innerModel();

    /** The entirety of the Summary definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The Summary definition stages. */
    interface DefinitionStages {
        /** The first stage of the Summary definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Summary definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @return the next definition stage.
             */
            WithCreate withExistingWorkspace(String resourceGroupName, String workspaceName);
        }
        /**
         * The stage of the Summary definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithEtag,
                DefinitionStages.WithSummaryId,
                DefinitionStages.WithSummaryName,
                DefinitionStages.WithSourceInfo,
                DefinitionStages.WithSearchKey,
                DefinitionStages.WithTactics,
                DefinitionStages.WithTechniques,
                DefinitionStages.WithRelationName,
                DefinitionStages.WithRelationId,
                DefinitionStages.WithSummaryDescription,
                DefinitionStages.WithRawContent,
                DefinitionStages.WithTypePropertiesType,
                DefinitionStages.WithTenantId,
                DefinitionStages.WithSummaryStatus {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Summary create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Summary create(Context context);
        }
        /** The stage of the Summary definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             *
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the Summary definition allowing to specify summaryId. */
        interface WithSummaryId {
            /**
             * Specifies the summaryId property: The ID (a GUID) of the summary.
             *
             * @param summaryId The ID (a GUID) of the summary.
             * @return the next definition stage.
             */
            WithCreate withSummaryId(String summaryId);
        }
        /** The stage of the Summary definition allowing to specify summaryName. */
        interface WithSummaryName {
            /**
             * Specifies the summaryName property: The name of the summary.
             *
             * @param summaryName The name of the summary.
             * @return the next definition stage.
             */
            WithCreate withSummaryName(String summaryName);
        }
        /** The stage of the Summary definition allowing to specify sourceInfo. */
        interface WithSourceInfo {
            /**
             * Specifies the sourceInfo property: The source info for the summary.
             *
             * @param sourceInfo The source info for the summary.
             * @return the next definition stage.
             */
            WithCreate withSourceInfo(Map<String, String> sourceInfo);
        }
        /** The stage of the Summary definition allowing to specify searchKey. */
        interface WithSearchKey {
            /**
             * Specifies the searchKey property: The search key is used to optimize query performance when using
             * summaries for joins with other data. For example, enable a column with IP addresses to be the designated
             * SearchKey field, then use this field as the key field when joining to other event data by IP address..
             *
             * @param searchKey The search key is used to optimize query performance when using summaries for joins with
             *     other data. For example, enable a column with IP addresses to be the designated SearchKey field, then
             *     use this field as the key field when joining to other event data by IP address.
             * @return the next definition stage.
             */
            WithCreate withSearchKey(String searchKey);
        }
        /** The stage of the Summary definition allowing to specify tactics. */
        interface WithTactics {
            /**
             * Specifies the tactics property: A list of relevant MITRE attacks.
             *
             * @param tactics A list of relevant MITRE attacks.
             * @return the next definition stage.
             */
            WithCreate withTactics(List<AttackTactic> tactics);
        }
        /** The stage of the Summary definition allowing to specify techniques. */
        interface WithTechniques {
            /**
             * Specifies the techniques property: The list of techniques for summary.
             *
             * @param techniques The list of techniques for summary.
             * @return the next definition stage.
             */
            WithCreate withTechniques(List<String> techniques);
        }
        /** The stage of the Summary definition allowing to specify relationName. */
        interface WithRelationName {
            /**
             * Specifies the relationName property: The relation name for the summary.
             *
             * @param relationName The relation name for the summary.
             * @return the next definition stage.
             */
            WithCreate withRelationName(String relationName);
        }
        /** The stage of the Summary definition allowing to specify relationId. */
        interface WithRelationId {
            /**
             * Specifies the relationId property: The relation ID (GUID) for the summary.
             *
             * @param relationId The relation ID (GUID) for the summary.
             * @return the next definition stage.
             */
            WithCreate withRelationId(String relationId);
        }
        /** The stage of the Summary definition allowing to specify summaryDescription. */
        interface WithSummaryDescription {
            /**
             * Specifies the summaryDescription property: The description for the summary.
             *
             * @param summaryDescription The description for the summary.
             * @return the next definition stage.
             */
            WithCreate withSummaryDescription(String summaryDescription);
        }
        /** The stage of the Summary definition allowing to specify rawContent. */
        interface WithRawContent {
            /**
             * Specifies the rawContent property: The raw content that represents to summary items to create..
             *
             * @param rawContent The raw content that represents to summary items to create.
             * @return the next definition stage.
             */
            WithCreate withRawContent(String rawContent);
        }
        /** The stage of the Summary definition allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: The type of the summary.
             *
             * @param typePropertiesType The type of the summary.
             * @return the next definition stage.
             */
            WithCreate withTypePropertiesType(Type typePropertiesType);
        }
        /** The stage of the Summary definition allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenantId where the summary belongs to.
             *
             * @param tenantId The tenantId where the summary belongs to.
             * @return the next definition stage.
             */
            WithCreate withTenantId(String tenantId);
        }
        /** The stage of the Summary definition allowing to specify summaryStatus. */
        interface WithSummaryStatus {
            /**
             * Specifies the summaryStatus property: The status of the Summary : Active, Deleted.
             *
             * @param summaryStatus The status of the Summary : Active, Deleted.
             * @return the next definition stage.
             */
            WithCreate withSummaryStatus(SummaryStatus summaryStatus);
        }
    }
    /**
     * Begins update for the Summary resource.
     *
     * @return the stage of resource update.
     */
    Summary.Update update();

    /** The template for Summary update. */
    interface Update
        extends UpdateStages.WithEtag,
            UpdateStages.WithSummaryId,
            UpdateStages.WithSummaryName,
            UpdateStages.WithSourceInfo,
            UpdateStages.WithSearchKey,
            UpdateStages.WithTactics,
            UpdateStages.WithTechniques,
            UpdateStages.WithRelationName,
            UpdateStages.WithRelationId,
            UpdateStages.WithSummaryDescription,
            UpdateStages.WithRawContent,
            UpdateStages.WithTypePropertiesType,
            UpdateStages.WithTenantId,
            UpdateStages.WithSummaryStatus {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Summary apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Summary apply(Context context);
    }
    /** The Summary update stages. */
    interface UpdateStages {
        /** The stage of the Summary update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             *
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the Summary update allowing to specify summaryId. */
        interface WithSummaryId {
            /**
             * Specifies the summaryId property: The ID (a GUID) of the summary.
             *
             * @param summaryId The ID (a GUID) of the summary.
             * @return the next definition stage.
             */
            Update withSummaryId(String summaryId);
        }
        /** The stage of the Summary update allowing to specify summaryName. */
        interface WithSummaryName {
            /**
             * Specifies the summaryName property: The name of the summary.
             *
             * @param summaryName The name of the summary.
             * @return the next definition stage.
             */
            Update withSummaryName(String summaryName);
        }
        /** The stage of the Summary update allowing to specify sourceInfo. */
        interface WithSourceInfo {
            /**
             * Specifies the sourceInfo property: The source info for the summary.
             *
             * @param sourceInfo The source info for the summary.
             * @return the next definition stage.
             */
            Update withSourceInfo(Map<String, String> sourceInfo);
        }
        /** The stage of the Summary update allowing to specify searchKey. */
        interface WithSearchKey {
            /**
             * Specifies the searchKey property: The search key is used to optimize query performance when using
             * summaries for joins with other data. For example, enable a column with IP addresses to be the designated
             * SearchKey field, then use this field as the key field when joining to other event data by IP address..
             *
             * @param searchKey The search key is used to optimize query performance when using summaries for joins with
             *     other data. For example, enable a column with IP addresses to be the designated SearchKey field, then
             *     use this field as the key field when joining to other event data by IP address.
             * @return the next definition stage.
             */
            Update withSearchKey(String searchKey);
        }
        /** The stage of the Summary update allowing to specify tactics. */
        interface WithTactics {
            /**
             * Specifies the tactics property: A list of relevant MITRE attacks.
             *
             * @param tactics A list of relevant MITRE attacks.
             * @return the next definition stage.
             */
            Update withTactics(List<AttackTactic> tactics);
        }
        /** The stage of the Summary update allowing to specify techniques. */
        interface WithTechniques {
            /**
             * Specifies the techniques property: The list of techniques for summary.
             *
             * @param techniques The list of techniques for summary.
             * @return the next definition stage.
             */
            Update withTechniques(List<String> techniques);
        }
        /** The stage of the Summary update allowing to specify relationName. */
        interface WithRelationName {
            /**
             * Specifies the relationName property: The relation name for the summary.
             *
             * @param relationName The relation name for the summary.
             * @return the next definition stage.
             */
            Update withRelationName(String relationName);
        }
        /** The stage of the Summary update allowing to specify relationId. */
        interface WithRelationId {
            /**
             * Specifies the relationId property: The relation ID (GUID) for the summary.
             *
             * @param relationId The relation ID (GUID) for the summary.
             * @return the next definition stage.
             */
            Update withRelationId(String relationId);
        }
        /** The stage of the Summary update allowing to specify summaryDescription. */
        interface WithSummaryDescription {
            /**
             * Specifies the summaryDescription property: The description for the summary.
             *
             * @param summaryDescription The description for the summary.
             * @return the next definition stage.
             */
            Update withSummaryDescription(String summaryDescription);
        }
        /** The stage of the Summary update allowing to specify rawContent. */
        interface WithRawContent {
            /**
             * Specifies the rawContent property: The raw content that represents to summary items to create..
             *
             * @param rawContent The raw content that represents to summary items to create.
             * @return the next definition stage.
             */
            Update withRawContent(String rawContent);
        }
        /** The stage of the Summary update allowing to specify typePropertiesType. */
        interface WithTypePropertiesType {
            /**
             * Specifies the typePropertiesType property: The type of the summary.
             *
             * @param typePropertiesType The type of the summary.
             * @return the next definition stage.
             */
            Update withTypePropertiesType(Type typePropertiesType);
        }
        /** The stage of the Summary update allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenantId where the summary belongs to.
             *
             * @param tenantId The tenantId where the summary belongs to.
             * @return the next definition stage.
             */
            Update withTenantId(String tenantId);
        }
        /** The stage of the Summary update allowing to specify summaryStatus. */
        interface WithSummaryStatus {
            /**
             * Specifies the summaryStatus property: The status of the Summary : Active, Deleted.
             *
             * @param summaryStatus The status of the Summary : Active, Deleted.
             * @return the next definition stage.
             */
            Update withSummaryStatus(SummaryStatus summaryStatus);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Summary refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Summary refresh(Context context);
}

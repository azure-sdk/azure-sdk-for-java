// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.models.ClientInfo;
import com.azure.resourcemanager.securityinsights.models.IncidentTaskStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Describes the properties of an incident task.
 */
@Fluent
public final class IncidentTaskProperties {
    /*
     * The title of the task
     */
    @JsonProperty(value = "title", required = true)
    private String title;

    /*
     * The description of the task
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The status of the task
     */
    @JsonProperty(value = "status", required = true)
    private IncidentTaskStatus status;

    /*
     * The time the task was created
     */
    @JsonProperty(value = "createdTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdTimeUtc;

    /*
     * The last time the task was updated
     */
    @JsonProperty(value = "lastModifiedTimeUtc", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastModifiedTimeUtc;

    /*
     * Information on the client (user or application) that made some action
     */
    @JsonProperty(value = "createdBy")
    private ClientInfo createdBy;

    /*
     * Information on the client (user or application) that made some action
     */
    @JsonProperty(value = "lastModifiedBy")
    private ClientInfo lastModifiedBy;

    /**
     * Creates an instance of IncidentTaskProperties class.
     */
    public IncidentTaskProperties() {
    }

    /**
     * Get the title property: The title of the task.
     * 
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: The title of the task.
     * 
     * @param title the title value to set.
     * @return the IncidentTaskProperties object itself.
     */
    public IncidentTaskProperties withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the description property: The description of the task.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description of the task.
     * 
     * @param description the description value to set.
     * @return the IncidentTaskProperties object itself.
     */
    public IncidentTaskProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the status property: The status of the task.
     * 
     * @return the status value.
     */
    public IncidentTaskStatus status() {
        return this.status;
    }

    /**
     * Set the status property: The status of the task.
     * 
     * @param status the status value to set.
     * @return the IncidentTaskProperties object itself.
     */
    public IncidentTaskProperties withStatus(IncidentTaskStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the createdTimeUtc property: The time the task was created.
     * 
     * @return the createdTimeUtc value.
     */
    public OffsetDateTime createdTimeUtc() {
        return this.createdTimeUtc;
    }

    /**
     * Get the lastModifiedTimeUtc property: The last time the task was updated.
     * 
     * @return the lastModifiedTimeUtc value.
     */
    public OffsetDateTime lastModifiedTimeUtc() {
        return this.lastModifiedTimeUtc;
    }

    /**
     * Get the createdBy property: Information on the client (user or application) that made some action.
     * 
     * @return the createdBy value.
     */
    public ClientInfo createdBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy property: Information on the client (user or application) that made some action.
     * 
     * @param createdBy the createdBy value to set.
     * @return the IncidentTaskProperties object itself.
     */
    public IncidentTaskProperties withCreatedBy(ClientInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the lastModifiedBy property: Information on the client (user or application) that made some action.
     * 
     * @return the lastModifiedBy value.
     */
    public ClientInfo lastModifiedBy() {
        return this.lastModifiedBy;
    }

    /**
     * Set the lastModifiedBy property: Information on the client (user or application) that made some action.
     * 
     * @param lastModifiedBy the lastModifiedBy value to set.
     * @return the IncidentTaskProperties object itself.
     */
    public IncidentTaskProperties withLastModifiedBy(ClientInfo lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (title() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property title in model IncidentTaskProperties"));
        }
        if (status() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property status in model IncidentTaskProperties"));
        }
        if (createdBy() != null) {
            createdBy().validate();
        }
        if (lastModifiedBy() != null) {
            lastModifiedBy().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IncidentTaskProperties.class);
}

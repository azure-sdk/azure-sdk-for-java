// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.HuntInner;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.Hunt;
import com.azure.resourcemanager.securityinsights.models.HuntOwner;
import com.azure.resourcemanager.securityinsights.models.HypothesisStatus;
import com.azure.resourcemanager.securityinsights.models.Status;
import java.util.Collections;
import java.util.List;

public final class HuntImpl implements Hunt, Hunt.Definition, Hunt.Update {
    private HuntInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public Status status() {
        return this.innerModel().status();
    }

    public HypothesisStatus hypothesisStatus() {
        return this.innerModel().hypothesisStatus();
    }

    public List<AttackTactic> attackTactics() {
        List<AttackTactic> inner = this.innerModel().attackTactics();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> attackTechniques() {
        List<String> inner = this.innerModel().attackTechniques();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Integer huntSequenceNumber() {
        return this.innerModel().huntSequenceNumber();
    }

    public List<String> labels() {
        List<String> inner = this.innerModel().labels();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public HuntOwner owner() {
        return this.innerModel().owner();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public HuntInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String huntId;

    public HuntImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Hunt create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getHunts()
                .createOrUpdateWithResponse(resourceGroupName, workspaceName, huntId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Hunt create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getHunts()
                .createOrUpdateWithResponse(resourceGroupName, workspaceName, huntId, this.innerModel(), context)
                .getValue();
        return this;
    }

    HuntImpl(String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new HuntInner();
        this.serviceManager = serviceManager;
        this.huntId = name;
    }

    public HuntImpl update() {
        return this;
    }

    public Hunt apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getHunts()
                .createOrUpdateWithResponse(resourceGroupName, workspaceName, huntId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Hunt apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getHunts()
                .createOrUpdateWithResponse(resourceGroupName, workspaceName, huntId, this.innerModel(), context)
                .getValue();
        return this;
    }

    HuntImpl(HuntInner innerObject, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.huntId = Utils.getValueFromIdByName(innerObject.id(), "hunts");
    }

    public Hunt refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getHunts()
                .getWithResponse(resourceGroupName, workspaceName, huntId, Context.NONE)
                .getValue();
        return this;
    }

    public Hunt refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getHunts()
                .getWithResponse(resourceGroupName, workspaceName, huntId, context)
                .getValue();
        return this;
    }

    public HuntImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public HuntImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public HuntImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public HuntImpl withStatus(Status status) {
        this.innerModel().withStatus(status);
        return this;
    }

    public HuntImpl withHypothesisStatus(HypothesisStatus hypothesisStatus) {
        this.innerModel().withHypothesisStatus(hypothesisStatus);
        return this;
    }

    public HuntImpl withAttackTactics(List<AttackTactic> attackTactics) {
        this.innerModel().withAttackTactics(attackTactics);
        return this;
    }

    public HuntImpl withAttackTechniques(List<String> attackTechniques) {
        this.innerModel().withAttackTechniques(attackTechniques);
        return this;
    }

    public HuntImpl withHuntSequenceNumber(Integer huntSequenceNumber) {
        this.innerModel().withHuntSequenceNumber(huntSequenceNumber);
        return this;
    }

    public HuntImpl withLabels(List<String> labels) {
        this.innerModel().withLabels(labels);
        return this;
    }

    public HuntImpl withOwner(HuntOwner owner) {
        this.innerModel().withOwner(owner);
        return this;
    }
}

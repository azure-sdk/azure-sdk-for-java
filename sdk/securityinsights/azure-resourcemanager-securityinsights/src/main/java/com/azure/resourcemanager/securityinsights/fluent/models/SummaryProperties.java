// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.ProvisioningState;
import com.azure.resourcemanager.securityinsights.models.SummaryStatus;
import com.azure.resourcemanager.securityinsights.models.Type;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Describes summary properties. */
@Fluent
public final class SummaryProperties {
    /*
     * The ID (a GUID) of the summary
     */
    @JsonProperty(value = "summaryId")
    private String summaryId;

    /*
     * The name of the summary
     */
    @JsonProperty(value = "summaryName", required = true)
    private String summaryName;

    /*
     * The source info for the summary
     */
    @JsonProperty(value = "sourceInfo")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> sourceInfo;

    /*
     * The search key is used to optimize query performance when using summaries for joins with other data. For
     * example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key
     * field when joining to other event data by IP address.
     */
    @JsonProperty(value = "searchKey")
    private String searchKey;

    /*
     * A list of relevant MITRE attacks
     */
    @JsonProperty(value = "tactics")
    private List<AttackTactic> tactics;

    /*
     * The list of techniques for summary
     */
    @JsonProperty(value = "techniques")
    private List<String> techniques;

    /*
     * The relation name for the summary
     */
    @JsonProperty(value = "relationName")
    private String relationName;

    /*
     * The relation ID (GUID) for the summary
     */
    @JsonProperty(value = "relationId")
    private String relationId;

    /*
     * The description for the summary
     */
    @JsonProperty(value = "summaryDescription")
    private String summaryDescription;

    /*
     * The raw content that represents to summary items to create.
     */
    @JsonProperty(value = "rawContent")
    private String rawContent;

    /*
     * The type of the summary
     */
    @JsonProperty(value = "type")
    private Type type;

    /*
     * The tenantId where the summary belongs to
     */
    @JsonProperty(value = "tenantId")
    private String tenantId;

    /*
     * The status of the Summary : Active, Deleted
     */
    @JsonProperty(value = "summaryStatus")
    private SummaryStatus summaryStatus;

    /*
     * The provisioning state of the Dynamic Summary resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of SummaryProperties class. */
    public SummaryProperties() {
    }

    /**
     * Get the summaryId property: The ID (a GUID) of the summary.
     *
     * @return the summaryId value.
     */
    public String summaryId() {
        return this.summaryId;
    }

    /**
     * Set the summaryId property: The ID (a GUID) of the summary.
     *
     * @param summaryId the summaryId value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withSummaryId(String summaryId) {
        this.summaryId = summaryId;
        return this;
    }

    /**
     * Get the summaryName property: The name of the summary.
     *
     * @return the summaryName value.
     */
    public String summaryName() {
        return this.summaryName;
    }

    /**
     * Set the summaryName property: The name of the summary.
     *
     * @param summaryName the summaryName value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withSummaryName(String summaryName) {
        this.summaryName = summaryName;
        return this;
    }

    /**
     * Get the sourceInfo property: The source info for the summary.
     *
     * @return the sourceInfo value.
     */
    public Map<String, String> sourceInfo() {
        return this.sourceInfo;
    }

    /**
     * Set the sourceInfo property: The source info for the summary.
     *
     * @param sourceInfo the sourceInfo value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withSourceInfo(Map<String, String> sourceInfo) {
        this.sourceInfo = sourceInfo;
        return this;
    }

    /**
     * Get the searchKey property: The search key is used to optimize query performance when using summaries for joins
     * with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use
     * this field as the key field when joining to other event data by IP address.
     *
     * @return the searchKey value.
     */
    public String searchKey() {
        return this.searchKey;
    }

    /**
     * Set the searchKey property: The search key is used to optimize query performance when using summaries for joins
     * with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use
     * this field as the key field when joining to other event data by IP address.
     *
     * @param searchKey the searchKey value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withSearchKey(String searchKey) {
        this.searchKey = searchKey;
        return this;
    }

    /**
     * Get the tactics property: A list of relevant MITRE attacks.
     *
     * @return the tactics value.
     */
    public List<AttackTactic> tactics() {
        return this.tactics;
    }

    /**
     * Set the tactics property: A list of relevant MITRE attacks.
     *
     * @param tactics the tactics value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withTactics(List<AttackTactic> tactics) {
        this.tactics = tactics;
        return this;
    }

    /**
     * Get the techniques property: The list of techniques for summary.
     *
     * @return the techniques value.
     */
    public List<String> techniques() {
        return this.techniques;
    }

    /**
     * Set the techniques property: The list of techniques for summary.
     *
     * @param techniques the techniques value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withTechniques(List<String> techniques) {
        this.techniques = techniques;
        return this;
    }

    /**
     * Get the relationName property: The relation name for the summary.
     *
     * @return the relationName value.
     */
    public String relationName() {
        return this.relationName;
    }

    /**
     * Set the relationName property: The relation name for the summary.
     *
     * @param relationName the relationName value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withRelationName(String relationName) {
        this.relationName = relationName;
        return this;
    }

    /**
     * Get the relationId property: The relation ID (GUID) for the summary.
     *
     * @return the relationId value.
     */
    public String relationId() {
        return this.relationId;
    }

    /**
     * Set the relationId property: The relation ID (GUID) for the summary.
     *
     * @param relationId the relationId value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withRelationId(String relationId) {
        this.relationId = relationId;
        return this;
    }

    /**
     * Get the summaryDescription property: The description for the summary.
     *
     * @return the summaryDescription value.
     */
    public String summaryDescription() {
        return this.summaryDescription;
    }

    /**
     * Set the summaryDescription property: The description for the summary.
     *
     * @param summaryDescription the summaryDescription value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withSummaryDescription(String summaryDescription) {
        this.summaryDescription = summaryDescription;
        return this;
    }

    /**
     * Get the rawContent property: The raw content that represents to summary items to create.
     *
     * @return the rawContent value.
     */
    public String rawContent() {
        return this.rawContent;
    }

    /**
     * Set the rawContent property: The raw content that represents to summary items to create.
     *
     * @param rawContent the rawContent value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withRawContent(String rawContent) {
        this.rawContent = rawContent;
        return this;
    }

    /**
     * Get the type property: The type of the summary.
     *
     * @return the type value.
     */
    public Type type() {
        return this.type;
    }

    /**
     * Set the type property: The type of the summary.
     *
     * @param type the type value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withType(Type type) {
        this.type = type;
        return this;
    }

    /**
     * Get the tenantId property: The tenantId where the summary belongs to.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The tenantId where the summary belongs to.
     *
     * @param tenantId the tenantId value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the summaryStatus property: The status of the Summary : Active, Deleted.
     *
     * @return the summaryStatus value.
     */
    public SummaryStatus summaryStatus() {
        return this.summaryStatus;
    }

    /**
     * Set the summaryStatus property: The status of the Summary : Active, Deleted.
     *
     * @param summaryStatus the summaryStatus value to set.
     * @return the SummaryProperties object itself.
     */
    public SummaryProperties withSummaryStatus(SummaryStatus summaryStatus) {
        this.summaryStatus = summaryStatus;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the Dynamic Summary resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (summaryName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property summaryName in model SummaryProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SummaryProperties.class);
}

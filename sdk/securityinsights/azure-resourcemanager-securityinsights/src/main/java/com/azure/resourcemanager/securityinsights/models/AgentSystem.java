// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes the configuration of a system inside the agent.
 */
@Fluent
public final class AgentSystem {
    /*
     * The systemResourceName property.
     */
    @JsonProperty(value = "systemResourceName")
    private String systemResourceName;

    /*
     * The systemDisplayName property.
     */
    @JsonProperty(value = "systemDisplayName")
    private String systemDisplayName;

    /**
     * Creates an instance of AgentSystem class.
     */
    public AgentSystem() {
    }

    /**
     * Get the systemResourceName property: The systemResourceName property.
     * 
     * @return the systemResourceName value.
     */
    public String systemResourceName() {
        return this.systemResourceName;
    }

    /**
     * Set the systemResourceName property: The systemResourceName property.
     * 
     * @param systemResourceName the systemResourceName value to set.
     * @return the AgentSystem object itself.
     */
    public AgentSystem withSystemResourceName(String systemResourceName) {
        this.systemResourceName = systemResourceName;
        return this;
    }

    /**
     * Get the systemDisplayName property: The systemDisplayName property.
     * 
     * @return the systemDisplayName value.
     */
    public String systemDisplayName() {
        return this.systemDisplayName;
    }

    /**
     * Set the systemDisplayName property: The systemDisplayName property.
     * 
     * @param systemDisplayName the systemDisplayName value to set.
     * @return the AgentSystem object itself.
     */
    public AgentSystem withSystemDisplayName(String systemDisplayName) {
        this.systemDisplayName = systemDisplayName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

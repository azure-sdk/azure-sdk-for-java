// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Describes the configuration of a system inside the agent.
 */
@Fluent
public final class AgentSystem implements JsonSerializable<AgentSystem> {
    /*
     * The systemResourceName property.
     */
    private String systemResourceName;

    /*
     * The systemDisplayName property.
     */
    private String systemDisplayName;

    /**
     * Creates an instance of AgentSystem class.
     */
    public AgentSystem() {
    }

    /**
     * Get the systemResourceName property: The systemResourceName property.
     * 
     * @return the systemResourceName value.
     */
    public String systemResourceName() {
        return this.systemResourceName;
    }

    /**
     * Set the systemResourceName property: The systemResourceName property.
     * 
     * @param systemResourceName the systemResourceName value to set.
     * @return the AgentSystem object itself.
     */
    public AgentSystem withSystemResourceName(String systemResourceName) {
        this.systemResourceName = systemResourceName;
        return this;
    }

    /**
     * Get the systemDisplayName property: The systemDisplayName property.
     * 
     * @return the systemDisplayName value.
     */
    public String systemDisplayName() {
        return this.systemDisplayName;
    }

    /**
     * Set the systemDisplayName property: The systemDisplayName property.
     * 
     * @param systemDisplayName the systemDisplayName value to set.
     * @return the AgentSystem object itself.
     */
    public AgentSystem withSystemDisplayName(String systemDisplayName) {
        this.systemDisplayName = systemDisplayName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("systemResourceName", this.systemResourceName);
        jsonWriter.writeStringField("systemDisplayName", this.systemDisplayName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AgentSystem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AgentSystem if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AgentSystem.
     */
    public static AgentSystem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AgentSystem deserializedAgentSystem = new AgentSystem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("systemResourceName".equals(fieldName)) {
                    deserializedAgentSystem.systemResourceName = reader.getString();
                } else if ("systemDisplayName".equals(fieldName)) {
                    deserializedAgentSystem.systemDisplayName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAgentSystem;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.securityinsights.fluent.models.RecommendationInner;
import com.azure.resourcemanager.securityinsights.models.RecommendationPatch;
import java.util.List;
import java.util.UUID;

/**
 * An instance of this class provides access to all the operations defined in UpdatesClient.
 */
public interface UpdatesClient {
    /**
     * Patch a recommendation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param recommendationId Recommendation Id.
     * @param recommendationPatch Recommendation Fields to Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of recommendation object.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RecommendationInner>, RecommendationInner> beginRecommendation(String resourceGroupName,
        String workspaceName, UUID recommendationId, List<RecommendationPatch> recommendationPatch);

    /**
     * Patch a recommendation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param recommendationId Recommendation Id.
     * @param recommendationPatch Recommendation Fields to Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of recommendation object.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RecommendationInner>, RecommendationInner> beginRecommendation(String resourceGroupName,
        String workspaceName, UUID recommendationId, List<RecommendationPatch> recommendationPatch, Context context);

    /**
     * Patch a recommendation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param recommendationId Recommendation Id.
     * @param recommendationPatch Recommendation Fields to Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return recommendation object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RecommendationInner recommendation(String resourceGroupName, String workspaceName, UUID recommendationId,
        List<RecommendationPatch> recommendationPatch);

    /**
     * Patch a recommendation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param recommendationId Recommendation Id.
     * @param recommendationPatch Recommendation Fields to Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return recommendation object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RecommendationInner recommendation(String resourceGroupName, String workspaceName, UUID recommendationId,
        List<RecommendationPatch> recommendationPatch, Context context);
}

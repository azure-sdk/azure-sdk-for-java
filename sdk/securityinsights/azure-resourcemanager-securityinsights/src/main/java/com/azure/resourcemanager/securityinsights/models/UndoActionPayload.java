// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the undo action.
 */
@Fluent
public final class UndoActionPayload implements JsonSerializable<UndoActionPayload> {
    /*
     * The action ID of the original action that was performed and now need to undo
     */
    private String actionId;

    /**
     * Creates an instance of UndoActionPayload class.
     */
    public UndoActionPayload() {
    }

    /**
     * Get the actionId property: The action ID of the original action that was performed and now need to undo.
     * 
     * @return the actionId value.
     */
    public String actionId() {
        return this.actionId;
    }

    /**
     * Set the actionId property: The action ID of the original action that was performed and now need to undo.
     * 
     * @param actionId the actionId value to set.
     * @return the UndoActionPayload object itself.
     */
    public UndoActionPayload withActionId(String actionId) {
        this.actionId = actionId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("actionId", this.actionId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UndoActionPayload from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UndoActionPayload if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the UndoActionPayload.
     */
    public static UndoActionPayload fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UndoActionPayload deserializedUndoActionPayload = new UndoActionPayload();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actionId".equals(fieldName)) {
                    deserializedUndoActionPayload.actionId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUndoActionPayload;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Base Model for API authentication.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = CcpAuthConfig.class, visible = true)
@JsonTypeName("CcpAuthConfig")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "APIKey", value = ApiKeyAuthModel.class),
    @JsonSubTypes.Type(name = "AWS", value = AwsAuthModel.class),
    @JsonSubTypes.Type(name = "Basic", value = BasicAuthModel.class),
    @JsonSubTypes.Type(name = "GCP", value = GcpAuthModel.class),
    @JsonSubTypes.Type(name = "ServiceBus", value = GenericBlobSbsAuthModel.class),
    @JsonSubTypes.Type(name = "GitHub", value = GitHubAuthModel.class),
    @JsonSubTypes.Type(name = "None", value = NoneAuthModel.class),
    @JsonSubTypes.Type(name = "JwtToken", value = JwtAuthModel.class),
    @JsonSubTypes.Type(name = "OAuth2", value = OAuthModel.class),
    @JsonSubTypes.Type(name = "Oracle", value = OracleAuthModel.class),
    @JsonSubTypes.Type(name = "Session", value = SessionAuthModel.class) })
@Immutable
public class CcpAuthConfig {
    /*
     * The auth type
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private CcpAuthType type;

    /**
     * Creates an instance of CcpAuthConfig class.
     */
    public CcpAuthConfig() {
        this.type = CcpAuthType.fromString("CcpAuthConfig");
    }

    /**
     * Get the type property: The auth type.
     * 
     * @return the type value.
     */
    public CcpAuthType type() {
        return this.type;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

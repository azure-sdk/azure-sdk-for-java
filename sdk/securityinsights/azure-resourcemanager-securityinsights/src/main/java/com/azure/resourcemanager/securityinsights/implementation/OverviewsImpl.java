// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.OverviewsClient;
import com.azure.resourcemanager.securityinsights.fluent.models.OverviewSectionInner;
import com.azure.resourcemanager.securityinsights.models.OverviewSection;
import com.azure.resourcemanager.securityinsights.models.Overviews;
import java.util.Collections;
import java.util.Map;
import java.util.stream.Collectors;

public final class OverviewsImpl implements Overviews {
    private static final ClientLogger LOGGER = new ClientLogger(OverviewsImpl.class);

    private final OverviewsClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public OverviewsImpl(
        OverviewsClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Map<String, OverviewSection> list(String resourceGroupName, String workspaceName) {
        Map<String, OverviewSectionInner> inner = this.serviceClient().list(resourceGroupName, workspaceName);
        if (inner != null) {
            return Collections
                .unmodifiableMap(
                    inner
                        .entrySet()
                        .stream()
                        .collect(
                            Collectors
                                .toMap(
                                    Map.Entry::getKey,
                                    inner1 -> new OverviewSectionImpl(inner1.getValue(), this.manager()))));
        } else {
            return Collections.emptyMap();
        }
    }

    public Response<Map<String, OverviewSection>> listWithResponse(
        String resourceGroupName, String workspaceName, String sections, Context context) {
        Response<Map<String, OverviewSectionInner>> inner =
            this.serviceClient().listWithResponse(resourceGroupName, workspaceName, sections, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .entrySet()
                    .stream()
                    .collect(
                        Collectors
                            .toMap(
                                Map.Entry::getKey,
                                inner1 -> new OverviewSectionImpl(inner1.getValue(), this.manager()))));
        } else {
            return null;
        }
    }

    private OverviewsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.TemplateModelAutoGeneratedInner;
import com.azure.resourcemanager.securityinsights.fluent.models.TemplatePropertiesAutoGenerated;
import com.azure.resourcemanager.securityinsights.models.Kind;
import com.azure.resourcemanager.securityinsights.models.MetadataAuthor;
import com.azure.resourcemanager.securityinsights.models.MetadataCategories;
import com.azure.resourcemanager.securityinsights.models.MetadataDependencies;
import com.azure.resourcemanager.securityinsights.models.MetadataSource;
import com.azure.resourcemanager.securityinsights.models.MetadataSupport;
import com.azure.resourcemanager.securityinsights.models.PackageKind;
import com.azure.resourcemanager.securityinsights.models.TemplateModelAutoGenerated;
import java.time.LocalDate;
import java.util.Collections;
import java.util.List;

public final class TemplateModelAutoGeneratedImpl
    implements TemplateModelAutoGenerated, TemplateModelAutoGenerated.Definition, TemplateModelAutoGenerated.Update {
    private TemplateModelAutoGeneratedInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String contentId() {
        return this.innerModel().contentId();
    }

    public String parentId() {
        return this.innerModel().parentId();
    }

    public String version() {
        return this.innerModel().version();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public Kind contentKind() {
        return this.innerModel().contentKind();
    }

    public MetadataSource source() {
        return this.innerModel().source();
    }

    public MetadataAuthor author() {
        return this.innerModel().author();
    }

    public MetadataSupport support() {
        return this.innerModel().support();
    }

    public MetadataDependencies dependencies() {
        return this.innerModel().dependencies();
    }

    public MetadataCategories categories() {
        return this.innerModel().categories();
    }

    public List<String> tags() {
        List<String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> providers() {
        List<String> inner = this.innerModel().providers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public LocalDate firstPublishDate() {
        return this.innerModel().firstPublishDate();
    }

    public LocalDate lastPublishDate() {
        return this.innerModel().lastPublishDate();
    }

    public String customVersion() {
        return this.innerModel().customVersion();
    }

    public String contentSchemaVersion() {
        return this.innerModel().contentSchemaVersion();
    }

    public String icon() {
        return this.innerModel().icon();
    }

    public List<String> threatAnalysisTactics() {
        List<String> inner = this.innerModel().threatAnalysisTactics();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> threatAnalysisTechniques() {
        List<String> inner = this.innerModel().threatAnalysisTechniques();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> previewImages() {
        List<String> inner = this.innerModel().previewImages();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> previewImagesDark() {
        List<String> inner = this.innerModel().previewImagesDark();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String packageId() {
        return this.innerModel().packageId();
    }

    public PackageKind packageKind() {
        return this.innerModel().packageKind();
    }

    public String packageName() {
        return this.innerModel().packageName();
    }

    public Object mainTemplate() {
        return this.innerModel().mainTemplate();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public TemplateModelAutoGeneratedInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String templateId;

    private TemplatePropertiesAutoGenerated createTemplateInstallationProperties;

    private TemplatePropertiesAutoGenerated updateTemplateInstallationProperties;

    public TemplateModelAutoGeneratedImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public TemplateModelAutoGenerated create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentTemplateOperations()
                .installWithResponse(
                    resourceGroupName, workspaceName, templateId, createTemplateInstallationProperties, Context.NONE)
                .getValue();
        return this;
    }

    public TemplateModelAutoGenerated create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentTemplateOperations()
                .installWithResponse(
                    resourceGroupName, workspaceName, templateId, createTemplateInstallationProperties, context)
                .getValue();
        return this;
    }

    TemplateModelAutoGeneratedImpl(
        String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new TemplateModelAutoGeneratedInner();
        this.serviceManager = serviceManager;
        this.templateId = name;
        this.createTemplateInstallationProperties = new TemplatePropertiesAutoGenerated();
    }

    public TemplateModelAutoGeneratedImpl update() {
        this.updateTemplateInstallationProperties = new TemplatePropertiesAutoGenerated();
        return this;
    }

    public TemplateModelAutoGenerated apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentTemplateOperations()
                .installWithResponse(
                    resourceGroupName, workspaceName, templateId, updateTemplateInstallationProperties, Context.NONE)
                .getValue();
        return this;
    }

    public TemplateModelAutoGenerated apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentTemplateOperations()
                .installWithResponse(
                    resourceGroupName, workspaceName, templateId, updateTemplateInstallationProperties, context)
                .getValue();
        return this;
    }

    TemplateModelAutoGeneratedImpl(
        TemplateModelAutoGeneratedInner innerObject,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.templateId = Utils.getValueFromIdByName(innerObject.id(), "contentTemplates");
    }

    public TemplateModelAutoGenerated refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentTemplateOperations()
                .getWithResponse(resourceGroupName, workspaceName, templateId, Context.NONE)
                .getValue();
        return this;
    }

    public TemplateModelAutoGenerated refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getContentTemplateOperations()
                .getWithResponse(resourceGroupName, workspaceName, templateId, context)
                .getValue();
        return this;
    }

    public TemplateModelAutoGeneratedImpl withContentId(String contentId) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withContentId(contentId);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withContentId(contentId);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withVersion(String version) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withVersion(version);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withVersion(version);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withDisplayName(String displayName) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withDisplayName(displayName);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withDisplayName(displayName);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withContentKind(Kind contentKind) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withContentKind(contentKind);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withContentKind(contentKind);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withSource(MetadataSource source) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withSource(source);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withSource(source);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withTags(List<String> tags) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withTags(tags);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withTags(tags);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withParentId(String parentId) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withParentId(parentId);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withParentId(parentId);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withAuthor(MetadataAuthor author) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withAuthor(author);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withAuthor(author);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withSupport(MetadataSupport support) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withSupport(support);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withSupport(support);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withDependencies(MetadataDependencies dependencies) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withDependencies(dependencies);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withDependencies(dependencies);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withCategories(MetadataCategories categories) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withCategories(categories);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withCategories(categories);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withProviders(List<String> providers) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withProviders(providers);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withProviders(providers);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withFirstPublishDate(LocalDate firstPublishDate) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withFirstPublishDate(firstPublishDate);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withFirstPublishDate(firstPublishDate);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withLastPublishDate(LocalDate lastPublishDate) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withLastPublishDate(lastPublishDate);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withLastPublishDate(lastPublishDate);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withCustomVersion(String customVersion) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withCustomVersion(customVersion);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withCustomVersion(customVersion);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withContentSchemaVersion(String contentSchemaVersion) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withContentSchemaVersion(contentSchemaVersion);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withContentSchemaVersion(contentSchemaVersion);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withIcon(String icon) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withIcon(icon);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withIcon(icon);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withThreatAnalysisTactics(List<String> threatAnalysisTactics) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withThreatAnalysisTactics(threatAnalysisTactics);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withThreatAnalysisTactics(threatAnalysisTactics);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withThreatAnalysisTechniques(List<String> threatAnalysisTechniques) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withThreatAnalysisTechniques(threatAnalysisTechniques);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withThreatAnalysisTechniques(threatAnalysisTechniques);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withPreviewImages(List<String> previewImages) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withPreviewImages(previewImages);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withPreviewImages(previewImages);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withPreviewImagesDark(List<String> previewImagesDark) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withPreviewImagesDark(previewImagesDark);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withPreviewImagesDark(previewImagesDark);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withPackageId(String packageId) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withPackageId(packageId);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withPackageId(packageId);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withPackageKind(PackageKind packageKind) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withPackageKind(packageKind);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withPackageKind(packageKind);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withPackageName(String packageName) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withPackageName(packageName);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withPackageName(packageName);
            return this;
        }
    }

    public TemplateModelAutoGeneratedImpl withMainTemplate(Object mainTemplate) {
        if (isInCreateMode()) {
            this.createTemplateInstallationProperties.withMainTemplate(mainTemplate);
            return this;
        } else {
            this.updateTemplateInstallationProperties.withMainTemplate(mainTemplate);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

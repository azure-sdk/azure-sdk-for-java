// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.fluent.models.CodelessParameters;
import com.azure.resourcemanager.securityinsights.fluent.models.DataConnectorInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents Codeless UI data connector.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "kind",
    defaultImpl = CodelessUiDataConnector.class,
    visible = true)
@JsonTypeName("GenericUI")
@Fluent
public final class CodelessUiDataConnector extends DataConnectorInner {
    /*
     * The data connector kind
     */
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private DataConnectorKind kind = DataConnectorKind.GENERIC_UI;

    /*
     * Codeless UI data connector properties
     */
    @JsonProperty(value = "properties")
    private CodelessParameters innerProperties;

    /**
     * Creates an instance of CodelessUiDataConnector class.
     */
    public CodelessUiDataConnector() {
    }

    /**
     * Get the kind property: The data connector kind.
     * 
     * @return the kind value.
     */
    @Override
    public DataConnectorKind kind() {
        return this.kind;
    }

    /**
     * Get the innerProperties property: Codeless UI data connector properties.
     * 
     * @return the innerProperties value.
     */
    private CodelessParameters innerProperties() {
        return this.innerProperties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodelessUiDataConnector withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the connectorUiConfig property: Config to describe the instructions blade.
     * 
     * @return the connectorUiConfig value.
     */
    public CodelessUiConnectorConfigProperties connectorUiConfig() {
        return this.innerProperties() == null ? null : this.innerProperties().connectorUiConfig();
    }

    /**
     * Set the connectorUiConfig property: Config to describe the instructions blade.
     * 
     * @param connectorUiConfig the connectorUiConfig value to set.
     * @return the CodelessUiDataConnector object itself.
     */
    public CodelessUiDataConnector withConnectorUiConfig(CodelessUiConnectorConfigProperties connectorUiConfig) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CodelessParameters();
        }
        this.innerProperties().withConnectorUiConfig(connectorUiConfig);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

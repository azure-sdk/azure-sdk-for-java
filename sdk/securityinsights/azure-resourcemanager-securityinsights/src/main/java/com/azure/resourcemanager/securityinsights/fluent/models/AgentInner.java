// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.models.AgentProperties;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes the configuration of a Business Application Agent.
 */
@Fluent
public final class AgentInner extends ResourceWithEtag {
    /*
     * Describes the configuration of a Business Application Agent.
     */
    @JsonProperty(value = "properties", required = true)
    private AgentProperties properties;

    /**
     * Creates an instance of AgentInner class.
     */
    public AgentInner() {
    }

    /**
     * Get the properties property: Describes the configuration of a Business Application Agent.
     * 
     * @return the properties value.
     */
    public AgentProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Describes the configuration of a Business Application Agent.
     * 
     * @param properties the properties value to set.
     * @return the AgentInner object itself.
     */
    public AgentInner withProperties(AgentProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (properties() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property properties in model AgentInner"));
        } else {
            properties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AgentInner.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.ProductSettingsClient;
import com.azure.resourcemanager.securityinsights.fluent.models.SettingsInner;
import com.azure.resourcemanager.securityinsights.models.ProductSettings;
import com.azure.resourcemanager.securityinsights.models.Settings;

public final class ProductSettingsImpl implements ProductSettings {
    private static final ClientLogger LOGGER = new ClientLogger(ProductSettingsImpl.class);

    private final ProductSettingsClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public ProductSettingsImpl(ProductSettingsClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Settings> list(String resourceGroupName, String workspaceName) {
        PagedIterable<SettingsInner> inner = this.serviceClient().list(resourceGroupName, workspaceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SettingsImpl(inner1, this.manager()));
    }

    public PagedIterable<Settings> list(String resourceGroupName, String workspaceName, Context context) {
        PagedIterable<SettingsInner> inner = this.serviceClient().list(resourceGroupName, workspaceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SettingsImpl(inner1, this.manager()));
    }

    public Response<Settings> getWithResponse(String resourceGroupName, String workspaceName, String settingsName,
        Context context) {
        Response<SettingsInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, workspaceName, settingsName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Settings get(String resourceGroupName, String workspaceName, String settingsName) {
        SettingsInner inner = this.serviceClient().get(resourceGroupName, workspaceName, settingsName);
        if (inner != null) {
            return new SettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String resourceGroupName, String workspaceName, String settingsName,
        Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, workspaceName, settingsName, context);
    }

    public void delete(String resourceGroupName, String workspaceName, String settingsName) {
        this.serviceClient().delete(resourceGroupName, workspaceName, settingsName);
    }

    public Response<Settings> updateWithResponse(String resourceGroupName, String workspaceName, String settingsName,
        SettingsInner settings, Context context) {
        Response<SettingsInner> inner = this.serviceClient()
            .updateWithResponse(resourceGroupName, workspaceName, settingsName, settings, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Settings update(String resourceGroupName, String workspaceName, String settingsName,
        SettingsInner settings) {
        SettingsInner inner = this.serviceClient().update(resourceGroupName, workspaceName, settingsName, settings);
        if (inner != null) {
            return new SettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ProductSettingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.SummaryInner;
import com.azure.resourcemanager.securityinsights.models.AttackTactic;
import com.azure.resourcemanager.securityinsights.models.ProvisioningState;
import com.azure.resourcemanager.securityinsights.models.Summary;
import com.azure.resourcemanager.securityinsights.models.SummaryStatus;
import com.azure.resourcemanager.securityinsights.models.Type;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class SummaryImpl implements Summary, Summary.Definition, Summary.Update {
    private SummaryInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String summaryId() {
        return this.innerModel().summaryId();
    }

    public String summaryName() {
        return this.innerModel().summaryName();
    }

    public Map<String, String> sourceInfo() {
        Map<String, String> inner = this.innerModel().sourceInfo();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String searchKey() {
        return this.innerModel().searchKey();
    }

    public List<AttackTactic> tactics() {
        List<AttackTactic> inner = this.innerModel().tactics();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> techniques() {
        List<String> inner = this.innerModel().techniques();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String relationName() {
        return this.innerModel().relationName();
    }

    public String relationId() {
        return this.innerModel().relationId();
    }

    public String summaryDescription() {
        return this.innerModel().summaryDescription();
    }

    public String rawContent() {
        return this.innerModel().rawContent();
    }

    public Type typePropertiesType() {
        return this.innerModel().typePropertiesType();
    }

    public String tenantId() {
        return this.innerModel().tenantId();
    }

    public SummaryStatus summaryStatus() {
        return this.innerModel().summaryStatus();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SummaryInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String summaryId;

    public SummaryImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Summary create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .createOrUpdateWithResponse(
                    resourceGroupName, workspaceName, summaryId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Summary create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .createOrUpdateWithResponse(resourceGroupName, workspaceName, summaryId, this.innerModel(), context)
                .getValue();
        return this;
    }

    SummaryImpl(String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new SummaryInner();
        this.serviceManager = serviceManager;
        this.summaryId = name;
    }

    public SummaryImpl update() {
        return this;
    }

    public Summary apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .createOrUpdateWithResponse(
                    resourceGroupName, workspaceName, summaryId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Summary apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .createOrUpdateWithResponse(resourceGroupName, workspaceName, summaryId, this.innerModel(), context)
                .getValue();
        return this;
    }

    SummaryImpl(
        SummaryInner innerObject, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.summaryId = Utils.getValueFromIdByName(innerObject.id(), "dynamicSummaries");
    }

    public Summary refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .getWithResponse(resourceGroupName, workspaceName, summaryId, Context.NONE)
                .getValue();
        return this;
    }

    public Summary refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .getWithResponse(resourceGroupName, workspaceName, summaryId, context)
                .getValue();
        return this;
    }

    public SummaryImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public SummaryImpl withSummaryId(String summaryId) {
        this.innerModel().withSummaryId(summaryId);
        return this;
    }

    public SummaryImpl withSummaryName(String summaryName) {
        this.innerModel().withSummaryName(summaryName);
        return this;
    }

    public SummaryImpl withSourceInfo(Map<String, String> sourceInfo) {
        this.innerModel().withSourceInfo(sourceInfo);
        return this;
    }

    public SummaryImpl withSearchKey(String searchKey) {
        this.innerModel().withSearchKey(searchKey);
        return this;
    }

    public SummaryImpl withTactics(List<AttackTactic> tactics) {
        this.innerModel().withTactics(tactics);
        return this;
    }

    public SummaryImpl withTechniques(List<String> techniques) {
        this.innerModel().withTechniques(techniques);
        return this;
    }

    public SummaryImpl withRelationName(String relationName) {
        this.innerModel().withRelationName(relationName);
        return this;
    }

    public SummaryImpl withRelationId(String relationId) {
        this.innerModel().withRelationId(relationId);
        return this;
    }

    public SummaryImpl withSummaryDescription(String summaryDescription) {
        this.innerModel().withSummaryDescription(summaryDescription);
        return this;
    }

    public SummaryImpl withRawContent(String rawContent) {
        this.innerModel().withRawContent(rawContent);
        return this;
    }

    public SummaryImpl withTypePropertiesType(Type typePropertiesType) {
        this.innerModel().withTypePropertiesType(typePropertiesType);
        return this;
    }

    public SummaryImpl withTenantId(String tenantId) {
        this.innerModel().withTenantId(tenantId);
        return this;
    }

    public SummaryImpl withSummaryStatus(SummaryStatus summaryStatus) {
        this.innerModel().withSummaryStatus(summaryStatus);
        return this;
    }
}

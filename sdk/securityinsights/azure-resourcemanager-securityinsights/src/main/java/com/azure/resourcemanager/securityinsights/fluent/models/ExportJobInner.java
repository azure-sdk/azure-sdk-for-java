// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.securityinsights.models.ExportJobContentInfo;
import com.azure.resourcemanager.securityinsights.models.ExportJobResultInfo;
import com.azure.resourcemanager.securityinsights.models.ExportType;
import com.azure.resourcemanager.securityinsights.models.ResourceWithEtag;
import com.azure.resourcemanager.securityinsights.models.Version;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Represents a ExportJob in Azure Security Insights. */
@Fluent
public final class ExportJobInner extends ResourceWithEtag {
    /*
     * export job properties
     */
    @JsonProperty(value = "properties")
    private ExportJobProperties innerProperties;

    /** Creates an instance of ExportJobInner class. */
    public ExportJobInner() {
    }

    /**
     * Get the innerProperties property: export job properties.
     *
     * @return the innerProperties value.
     */
    private ExportJobProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public ExportJobInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /**
     * Get the jobId property: The id (a Guid) of the export job.
     *
     * @return the jobId value.
     */
    public String jobId() {
        return this.innerProperties() == null ? null : this.innerProperties().jobId();
    }

    /**
     * Set the jobId property: The id (a Guid) of the export job.
     *
     * @param jobId the jobId value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withJobId(String jobId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withJobId(jobId);
        return this;
    }

    /**
     * Get the connectionId property: The id (a Guid) of the export connection.
     *
     * @return the connectionId value.
     */
    public String connectionId() {
        return this.innerProperties() == null ? null : this.innerProperties().connectionId();
    }

    /**
     * Set the connectionId property: The id (a Guid) of the export connection.
     *
     * @param connectionId the connectionId value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withConnectionId(String connectionId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withConnectionId(connectionId);
        return this;
    }

    /**
     * Get the version property: The version number associated with the export job.
     *
     * @return the version value.
     */
    public Version version() {
        return this.innerProperties() == null ? null : this.innerProperties().version();
    }

    /**
     * Set the version property: The version number associated with the export job.
     *
     * @param version the version value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withVersion(Version version) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withVersion(version);
        return this;
    }

    /**
     * Get the description property: A description of the export job.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: A description of the export job.
     *
     * @param description the description value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the exportType property: Export type of the export job.
     *
     * @return the exportType value.
     */
    public ExportType exportType() {
        return this.innerProperties() == null ? null : this.innerProperties().exportType();
    }

    /**
     * Set the exportType property: Export type of the export job.
     *
     * @param exportType the exportType value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withExportType(ExportType exportType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withExportType(exportType);
        return this;
    }

    /**
     * Get the startTime property: Start time of the export job.
     *
     * @return the startTime value.
     */
    public String startTime() {
        return this.innerProperties() == null ? null : this.innerProperties().startTime();
    }

    /**
     * Set the startTime property: Start time of the export job.
     *
     * @param startTime the startTime value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withStartTime(String startTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withStartTime(startTime);
        return this;
    }

    /**
     * Get the endTime property: End time of the export job.
     *
     * @return the endTime value.
     */
    public String endTime() {
        return this.innerProperties() == null ? null : this.innerProperties().endTime();
    }

    /**
     * Set the endTime property: End time of the export job.
     *
     * @param endTime the endTime value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withEndTime(String endTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withEndTime(endTime);
        return this;
    }

    /**
     * Get the lastUpdateTime property: Last update time of the export job.
     *
     * @return the lastUpdateTime value.
     */
    public String lastUpdateTime() {
        return this.innerProperties() == null ? null : this.innerProperties().lastUpdateTime();
    }

    /**
     * Set the lastUpdateTime property: Last update time of the export job.
     *
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withLastUpdateTime(String lastUpdateTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withLastUpdateTime(lastUpdateTime);
        return this;
    }

    /**
     * Get the jobResult property: Export type of the export job.
     *
     * @return the jobResult value.
     */
    public ExportJobResultInfo jobResult() {
        return this.innerProperties() == null ? null : this.innerProperties().jobResult();
    }

    /**
     * Get the exportContents property: Array of export job content info types.
     *
     * @return the exportContents value.
     */
    public List<ExportJobContentInfo> exportContents() {
        return this.innerProperties() == null ? null : this.innerProperties().exportContents();
    }

    /**
     * Set the exportContents property: Array of export job content info types.
     *
     * @param exportContents the exportContents value to set.
     * @return the ExportJobInner object itself.
     */
    public ExportJobInner withExportContents(List<ExportJobContentInfo> exportContents) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExportJobProperties();
        }
        this.innerProperties().withExportContents(exportContents);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.WorkspaceManagerAssignmentJobsClient;
import com.azure.resourcemanager.securityinsights.fluent.models.JobInner;
import com.azure.resourcemanager.securityinsights.models.Job;
import com.azure.resourcemanager.securityinsights.models.WorkspaceManagerAssignmentJobs;

public final class WorkspaceManagerAssignmentJobsImpl implements WorkspaceManagerAssignmentJobs {
    private static final ClientLogger LOGGER = new ClientLogger(WorkspaceManagerAssignmentJobsImpl.class);

    private final WorkspaceManagerAssignmentJobsClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public WorkspaceManagerAssignmentJobsImpl(WorkspaceManagerAssignmentJobsClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Job> list(String resourceGroupName, String workspaceName,
        String workspaceManagerAssignmentName) {
        PagedIterable<JobInner> inner
            = this.serviceClient().list(resourceGroupName, workspaceName, workspaceManagerAssignmentName);
        return Utils.mapPage(inner, inner1 -> new JobImpl(inner1, this.manager()));
    }

    public PagedIterable<Job> list(String resourceGroupName, String workspaceName,
        String workspaceManagerAssignmentName, String orderby, Integer top, String skipToken, Context context) {
        PagedIterable<JobInner> inner = this.serviceClient().list(resourceGroupName, workspaceName,
            workspaceManagerAssignmentName, orderby, top, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new JobImpl(inner1, this.manager()));
    }

    public Response<Job> createWithResponse(String resourceGroupName, String workspaceName,
        String workspaceManagerAssignmentName, Context context) {
        Response<JobInner> inner = this.serviceClient().createWithResponse(resourceGroupName, workspaceName,
            workspaceManagerAssignmentName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new JobImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Job create(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName) {
        JobInner inner = this.serviceClient().create(resourceGroupName, workspaceName, workspaceManagerAssignmentName);
        if (inner != null) {
            return new JobImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Job> getWithResponse(String resourceGroupName, String workspaceName,
        String workspaceManagerAssignmentName, String jobName, Context context) {
        Response<JobInner> inner = this.serviceClient().getWithResponse(resourceGroupName, workspaceName,
            workspaceManagerAssignmentName, jobName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new JobImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Job get(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName,
        String jobName) {
        JobInner inner
            = this.serviceClient().get(resourceGroupName, workspaceName, workspaceManagerAssignmentName, jobName);
        if (inner != null) {
            return new JobImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String resourceGroupName, String workspaceName,
        String workspaceManagerAssignmentName, String jobName, Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, workspaceName, workspaceManagerAssignmentName,
            jobName, context);
    }

    public void delete(String resourceGroupName, String workspaceName, String workspaceManagerAssignmentName,
        String jobName) {
        this.serviceClient().delete(resourceGroupName, workspaceName, workspaceManagerAssignmentName, jobName);
    }

    private WorkspaceManagerAssignmentJobsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

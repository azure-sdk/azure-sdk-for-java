// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The request paging configuration for NextPageToken and PersistentToken paging type parameters.
 */
@Fluent
public final class RestApiPollerRequestPagingTokenConfig extends RestApiPollerRequestPagingConfig {
    /*
     * JSON path of next page token in HTTP response payload
     */
    @JsonProperty(value = "nextPageTokenJsonPath")
    private String nextPageTokenJsonPath;

    /*
     * JSON path of flag in HTTP response payload to indicate more pages
     */
    @JsonProperty(value = "hasNextFlagJsonPath")
    private String hasNextFlagJsonPath;

    /*
     * HTTP response header name of next page token
     */
    @JsonProperty(value = "nextPageTokenResponseHeader")
    private String nextPageTokenResponseHeader;

    /*
     * Next page parameter name in HTTP request
     */
    @JsonProperty(value = "nextPageParaName")
    private String nextPageParaName;

    /*
     * Next page header name in the request
     */
    @JsonProperty(value = "nextPageRequestHeader")
    private String nextPageRequestHeader;

    /**
     * Creates an instance of RestApiPollerRequestPagingTokenConfig class.
     */
    public RestApiPollerRequestPagingTokenConfig() {
    }

    /**
     * Get the nextPageTokenJsonPath property: JSON path of next page token in HTTP response payload.
     * 
     * @return the nextPageTokenJsonPath value.
     */
    public String nextPageTokenJsonPath() {
        return this.nextPageTokenJsonPath;
    }

    /**
     * Set the nextPageTokenJsonPath property: JSON path of next page token in HTTP response payload.
     * 
     * @param nextPageTokenJsonPath the nextPageTokenJsonPath value to set.
     * @return the RestApiPollerRequestPagingTokenConfig object itself.
     */
    public RestApiPollerRequestPagingTokenConfig withNextPageTokenJsonPath(String nextPageTokenJsonPath) {
        this.nextPageTokenJsonPath = nextPageTokenJsonPath;
        return this;
    }

    /**
     * Get the hasNextFlagJsonPath property: JSON path of flag in HTTP response payload to indicate more pages.
     * 
     * @return the hasNextFlagJsonPath value.
     */
    public String hasNextFlagJsonPath() {
        return this.hasNextFlagJsonPath;
    }

    /**
     * Set the hasNextFlagJsonPath property: JSON path of flag in HTTP response payload to indicate more pages.
     * 
     * @param hasNextFlagJsonPath the hasNextFlagJsonPath value to set.
     * @return the RestApiPollerRequestPagingTokenConfig object itself.
     */
    public RestApiPollerRequestPagingTokenConfig withHasNextFlagJsonPath(String hasNextFlagJsonPath) {
        this.hasNextFlagJsonPath = hasNextFlagJsonPath;
        return this;
    }

    /**
     * Get the nextPageTokenResponseHeader property: HTTP response header name of next page token.
     * 
     * @return the nextPageTokenResponseHeader value.
     */
    public String nextPageTokenResponseHeader() {
        return this.nextPageTokenResponseHeader;
    }

    /**
     * Set the nextPageTokenResponseHeader property: HTTP response header name of next page token.
     * 
     * @param nextPageTokenResponseHeader the nextPageTokenResponseHeader value to set.
     * @return the RestApiPollerRequestPagingTokenConfig object itself.
     */
    public RestApiPollerRequestPagingTokenConfig withNextPageTokenResponseHeader(String nextPageTokenResponseHeader) {
        this.nextPageTokenResponseHeader = nextPageTokenResponseHeader;
        return this;
    }

    /**
     * Get the nextPageParaName property: Next page parameter name in HTTP request.
     * 
     * @return the nextPageParaName value.
     */
    public String nextPageParaName() {
        return this.nextPageParaName;
    }

    /**
     * Set the nextPageParaName property: Next page parameter name in HTTP request.
     * 
     * @param nextPageParaName the nextPageParaName value to set.
     * @return the RestApiPollerRequestPagingTokenConfig object itself.
     */
    public RestApiPollerRequestPagingTokenConfig withNextPageParaName(String nextPageParaName) {
        this.nextPageParaName = nextPageParaName;
        return this;
    }

    /**
     * Get the nextPageRequestHeader property: Next page header name in the request.
     * 
     * @return the nextPageRequestHeader value.
     */
    public String nextPageRequestHeader() {
        return this.nextPageRequestHeader;
    }

    /**
     * Set the nextPageRequestHeader property: Next page header name in the request.
     * 
     * @param nextPageRequestHeader the nextPageRequestHeader value to set.
     * @return the RestApiPollerRequestPagingTokenConfig object itself.
     */
    public RestApiPollerRequestPagingTokenConfig withNextPageRequestHeader(String nextPageRequestHeader) {
        this.nextPageRequestHeader = nextPageRequestHeader;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingTokenConfig withPagingType(RestApiPollerRequestPagingKind pagingType) {
        super.withPagingType(pagingType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingTokenConfig withPageSize(Integer pageSize) {
        super.withPageSize(pageSize);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestApiPollerRequestPagingTokenConfig withPageSizeParameterName(String pageSizeParameterName) {
        super.withPageSizeParameterName(pageSizeParameterName);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

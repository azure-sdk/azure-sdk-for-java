// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.AgentInner;
import com.azure.resourcemanager.securityinsights.models.Agent;
import com.azure.resourcemanager.securityinsights.models.AgentProperties;

public final class AgentImpl implements Agent, Agent.Definition, Agent.Update {
    private AgentInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public AgentProperties properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AgentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String agentResourceName;

    public AgentImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Agent create() {
        this.innerObject = serviceManager.serviceClient()
            .getBusinessApplicationAgents()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public Agent create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBusinessApplicationAgents()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, this.innerModel(), context)
            .getValue();
        return this;
    }

    AgentImpl(String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new AgentInner();
        this.serviceManager = serviceManager;
        this.agentResourceName = name;
    }

    public AgentImpl update() {
        return this;
    }

    public Agent apply() {
        this.innerObject = serviceManager.serviceClient()
            .getBusinessApplicationAgents()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public Agent apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBusinessApplicationAgents()
            .createOrUpdateWithResponse(resourceGroupName, workspaceName, agentResourceName, this.innerModel(), context)
            .getValue();
        return this;
    }

    AgentImpl(AgentInner innerObject,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.agentResourceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "businessApplicationAgents");
    }

    public AgentImpl withProperties(AgentProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public AgentImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }
}

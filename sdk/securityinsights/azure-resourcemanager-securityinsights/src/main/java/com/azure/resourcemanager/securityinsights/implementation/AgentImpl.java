// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.AgentInner;
import com.azure.resourcemanager.securityinsights.models.Agent;
import com.azure.resourcemanager.securityinsights.models.AgentsSystemArmModel;
import com.azure.resourcemanager.securityinsights.models.KeyVaultAuthType;
import com.azure.resourcemanager.securityinsights.models.SecretSourceType;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.UUID;

public final class AgentImpl implements Agent, Agent.Definition, Agent.Update {
    private AgentInner innerObject;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String agentContainerName() {
        return this.innerModel().agentContainerName();
    }

    public String sdkPath() {
        return this.innerModel().sdkPath();
    }

    public String sncPath() {
        return this.innerModel().sncPath();
    }

    public String keyVaultResourceId() {
        return this.innerModel().keyVaultResourceId();
    }

    public String keyVaultUri() {
        return this.innerModel().keyVaultUri();
    }

    public KeyVaultAuthType keyVaultAuth() {
        return this.innerModel().keyVaultAuth();
    }

    public SecretSourceType secretSource() {
        return this.innerModel().secretSource();
    }

    public List<AgentsSystemArmModel> agentsSystems() {
        List<AgentsSystemArmModel> inner = this.innerModel().agentsSystems();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public OffsetDateTime lastModifiedTimeUtc() {
        return this.innerModel().lastModifiedTimeUtc();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AgentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String agentResourceName;

    private UUID createXMsClientWorkspaceId;

    private UUID createXMsClientObjectId;

    private UUID updateXMsClientWorkspaceId;

    private UUID updateXMsClientObjectId;

    public AgentImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public Agent create() {
        this.innerObject = serviceManager
            .serviceClient().getBusinessApplicationAgents().createOrUpdateWithResponse(resourceGroupName, workspaceName,
                agentResourceName, createXMsClientWorkspaceId, createXMsClientObjectId, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Agent create(Context context) {
        this.innerObject = serviceManager
            .serviceClient().getBusinessApplicationAgents().createOrUpdateWithResponse(resourceGroupName, workspaceName,
                agentResourceName, createXMsClientWorkspaceId, createXMsClientObjectId, this.innerModel(), context)
            .getValue();
        return this;
    }

    AgentImpl(String name, com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = new AgentInner();
        this.serviceManager = serviceManager;
        this.agentResourceName = name;
        this.createXMsClientWorkspaceId = null;
        this.createXMsClientObjectId = null;
    }

    public AgentImpl update() {
        this.updateXMsClientWorkspaceId = null;
        this.updateXMsClientObjectId = null;
        return this;
    }

    public Agent apply() {
        this.innerObject = serviceManager
            .serviceClient().getBusinessApplicationAgents().createOrUpdateWithResponse(resourceGroupName, workspaceName,
                agentResourceName, updateXMsClientWorkspaceId, updateXMsClientObjectId, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Agent apply(Context context) {
        this.innerObject = serviceManager
            .serviceClient().getBusinessApplicationAgents().createOrUpdateWithResponse(resourceGroupName, workspaceName,
                agentResourceName, updateXMsClientWorkspaceId, updateXMsClientObjectId, this.innerModel(), context)
            .getValue();
        return this;
    }

    AgentImpl(AgentInner innerObject,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.agentResourceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "businessApplicationAgents");
    }

    public AgentImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public AgentImpl withAgentContainerName(String agentContainerName) {
        this.innerModel().withAgentContainerName(agentContainerName);
        return this;
    }

    public AgentImpl withSdkPath(String sdkPath) {
        this.innerModel().withSdkPath(sdkPath);
        return this;
    }

    public AgentImpl withSncPath(String sncPath) {
        this.innerModel().withSncPath(sncPath);
        return this;
    }

    public AgentImpl withKeyVaultResourceId(String keyVaultResourceId) {
        this.innerModel().withKeyVaultResourceId(keyVaultResourceId);
        return this;
    }

    public AgentImpl withKeyVaultUri(String keyVaultUri) {
        this.innerModel().withKeyVaultUri(keyVaultUri);
        return this;
    }

    public AgentImpl withKeyVaultAuth(KeyVaultAuthType keyVaultAuth) {
        this.innerModel().withKeyVaultAuth(keyVaultAuth);
        return this;
    }

    public AgentImpl withSecretSource(SecretSourceType secretSource) {
        this.innerModel().withSecretSource(secretSource);
        return this;
    }

    public AgentImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public AgentImpl withXMsClientWorkspaceId(UUID xMsClientWorkspaceId) {
        if (isInCreateMode()) {
            this.createXMsClientWorkspaceId = xMsClientWorkspaceId;
            return this;
        } else {
            this.updateXMsClientWorkspaceId = xMsClientWorkspaceId;
            return this;
        }
    }

    public AgentImpl withXMsClientObjectId(UUID xMsClientObjectId) {
        if (isInCreateMode()) {
            this.createXMsClientObjectId = xMsClientObjectId;
            return this;
        } else {
            this.updateXMsClientObjectId = xMsClientObjectId;
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

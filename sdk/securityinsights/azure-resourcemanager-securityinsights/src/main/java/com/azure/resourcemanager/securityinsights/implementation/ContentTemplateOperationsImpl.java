// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.fluent.ContentTemplateOperationsClient;
import com.azure.resourcemanager.securityinsights.fluent.models.TemplateModelInner;
import com.azure.resourcemanager.securityinsights.models.ContentTemplateOperations;
import com.azure.resourcemanager.securityinsights.models.TemplateModel;

public final class ContentTemplateOperationsImpl implements ContentTemplateOperations {
    private static final ClientLogger LOGGER = new ClientLogger(ContentTemplateOperationsImpl.class);

    private final ContentTemplateOperationsClient innerClient;

    private final com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager;

    public ContentTemplateOperationsImpl(
        ContentTemplateOperationsClient innerClient,
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public TemplateModel get(
        String resourceGroupName, String operationalInsightsResourceProvider, String workspaceName, String templateId) {
        TemplateModelInner inner =
            this.serviceClient().get(resourceGroupName, operationalInsightsResourceProvider, workspaceName, templateId);
        if (inner != null) {
            return new TemplateModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<TemplateModel> getWithResponse(
        String resourceGroupName,
        String operationalInsightsResourceProvider,
        String workspaceName,
        String templateId,
        Context context) {
        Response<TemplateModelInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName, operationalInsightsResourceProvider, workspaceName, templateId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new TemplateModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(
        String resourceGroupName, String operationalInsightsResourceProvider, String workspaceName, String templateId) {
        this.serviceClient().delete(resourceGroupName, operationalInsightsResourceProvider, workspaceName, templateId);
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName,
        String operationalInsightsResourceProvider,
        String workspaceName,
        String templateId,
        Context context) {
        return this
            .serviceClient()
            .deleteWithResponse(
                resourceGroupName, operationalInsightsResourceProvider, workspaceName, templateId, context);
    }

    private ContentTemplateOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager() {
        return this.serviceManager;
    }
}

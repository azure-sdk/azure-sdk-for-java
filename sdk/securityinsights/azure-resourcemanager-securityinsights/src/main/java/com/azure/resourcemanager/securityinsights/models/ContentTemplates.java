// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ContentTemplates. */
public interface ContentTemplates {
    /**
     * Gets all installed templates.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all installed templates as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Template> list(String resourceGroupName, String sentinelWorkspaceName);

    /**
     * Gets all installed templates.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param filter Filters the results, based on a Boolean condition. Optional.
     * @param orderby Sorts the results. Optional.
     * @param top Returns only the first n results. Optional.
     * @param skip Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results
     *     if there are any left.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all installed templates as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Template> list(
        String resourceGroupName,
        String sentinelWorkspaceName,
        String filter,
        String orderby,
        Integer top,
        Integer skip,
        Context context);

    /**
     * Gets a template byt its identifier.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param templateId template Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a template byt its identifier along with {@link Response}.
     */
    Response<Template> getWithResponse(
        String resourceGroupName, String sentinelWorkspaceName, String templateId, Context context);

    /**
     * Gets a template byt its identifier.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param templateId template Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a template byt its identifier.
     */
    Template get(String resourceGroupName, String sentinelWorkspaceName, String templateId);

    /**
     * Delete an installed template.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param templateId template Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String sentinelWorkspaceName, String templateId, Context context);

    /**
     * Delete an installed template.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sentinelWorkspaceName The name of the workspace.
     * @param templateId template Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String sentinelWorkspaceName, String templateId);
}

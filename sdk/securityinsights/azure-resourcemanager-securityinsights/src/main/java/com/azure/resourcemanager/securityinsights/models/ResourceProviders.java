// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ResourceProviders.
 */
public interface ResourceProviders {
    /**
     * Get geodata for a single IP address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param enrichmentType Enrichment type.
     * @param ipAddressBody IP address (v4 or v6) to be enriched.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return geodata for a single IP address along with {@link Response}.
     */
    Response<EnrichmentIpGeodata> listGeodataByIpWithResponse(String resourceGroupName, String workspaceName,
        EnrichmentType enrichmentType, EnrichmentIpAddressBody ipAddressBody, Context context);

    /**
     * Get geodata for a single IP address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param enrichmentType Enrichment type.
     * @param ipAddressBody IP address (v4 or v6) to be enriched.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return geodata for a single IP address.
     */
    EnrichmentIpGeodata listGeodataByIp(String resourceGroupName, String workspaceName, EnrichmentType enrichmentType,
        EnrichmentIpAddressBody ipAddressBody);

    /**
     * Get whois information for a single domain name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param enrichmentType Enrichment type.
     * @param domainBody Domain name to be enriched. Only domain name is accepted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return whois information for a single domain name along with {@link Response}.
     */
    Response<EnrichmentDomainWhois> listWhoisByDomainWithResponse(String resourceGroupName, String workspaceName,
        EnrichmentType enrichmentType, EnrichmentDomainBody domainBody, Context context);

    /**
     * Get whois information for a single domain name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param enrichmentType Enrichment type.
     * @param domainBody Domain name to be enriched. Only domain name is accepted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return whois information for a single domain name.
     */
    EnrichmentDomainWhois listWhoisByDomain(String resourceGroupName, String workspaceName,
        EnrichmentType enrichmentType, EnrichmentDomainBody domainBody);
}

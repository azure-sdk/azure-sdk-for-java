// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** metadata of a repository. */
@Fluent
public final class Repository {
    /*
     * Url of repository.
     */
    @JsonProperty(value = "url", required = true)
    private String url;

    /*
     * Branch name of repository.
     */
    @JsonProperty(value = "branch", required = true)
    private String branch;

    /*
     * Display url of repository.
     */
    @JsonProperty(value = "displayUrl")
    private String displayUrl;

    /*
     * Url to access repository action logs.
     */
    @JsonProperty(value = "deploymentLogsUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String deploymentLogsUrl;

    /** Creates an instance of Repository class. */
    public Repository() {
    }

    /**
     * Get the url property: Url of repository.
     *
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: Url of repository.
     *
     * @param url the url value to set.
     * @return the Repository object itself.
     */
    public Repository withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the branch property: Branch name of repository.
     *
     * @return the branch value.
     */
    public String branch() {
        return this.branch;
    }

    /**
     * Set the branch property: Branch name of repository.
     *
     * @param branch the branch value to set.
     * @return the Repository object itself.
     */
    public Repository withBranch(String branch) {
        this.branch = branch;
        return this;
    }

    /**
     * Get the displayUrl property: Display url of repository.
     *
     * @return the displayUrl value.
     */
    public String displayUrl() {
        return this.displayUrl;
    }

    /**
     * Set the displayUrl property: Display url of repository.
     *
     * @param displayUrl the displayUrl value to set.
     * @return the Repository object itself.
     */
    public Repository withDisplayUrl(String displayUrl) {
        this.displayUrl = displayUrl;
        return this;
    }

    /**
     * Get the deploymentLogsUrl property: Url to access repository action logs.
     *
     * @return the deploymentLogsUrl value.
     */
    public String deploymentLogsUrl() {
        return this.deploymentLogsUrl;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (url() == null) {
            throw LOGGER
                .logExceptionAsError(new IllegalArgumentException("Missing required property url in model Repository"));
        }
        if (branch() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property branch in model Repository"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(Repository.class);
}

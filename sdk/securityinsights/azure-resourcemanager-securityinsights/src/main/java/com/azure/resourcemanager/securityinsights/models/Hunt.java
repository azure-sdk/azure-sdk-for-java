// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.HuntInner;
import java.util.List;

/** An immutable client-side representation of Hunt. */
public interface Hunt {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: Etag of the azure resource.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the displayName property: The display name of the hunt.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: The description of the hunt.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the status property: The status of the hunt.
     *
     * @return the status value.
     */
    Status status();

    /**
     * Gets the hypothesisStatus property: The hypothesis status of the hunt.
     *
     * @return the hypothesisStatus value.
     */
    HypothesisStatus hypothesisStatus();

    /**
     * Gets the attackTactics property: A list of mitre attack tactics the hunt is associated with.
     *
     * @return the attackTactics value.
     */
    List<AttackTactic> attackTactics();

    /**
     * Gets the attackTechniques property: A list of a mitre attack techniques the hunt is associated with.
     *
     * @return the attackTechniques value.
     */
    List<String> attackTechniques();

    /**
     * Gets the labels property: List of labels relevant to this hunt.
     *
     * @return the labels value.
     */
    List<String> labels();

    /**
     * Gets the owner property: Describes a user that the hunt is assigned to.
     *
     * @return the owner value.
     */
    HuntOwner owner();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.securityinsights.fluent.models.HuntInner object.
     *
     * @return the inner object.
     */
    HuntInner innerModel();

    /** The entirety of the Hunt definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The Hunt definition stages. */
    interface DefinitionStages {
        /** The first stage of the Hunt definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Hunt definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @return the next definition stage.
             */
            WithCreate withExistingWorkspace(String resourceGroupName, String workspaceName);
        }
        /**
         * The stage of the Hunt definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithEtag,
                DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithStatus,
                DefinitionStages.WithHypothesisStatus,
                DefinitionStages.WithAttackTactics,
                DefinitionStages.WithAttackTechniques,
                DefinitionStages.WithLabels,
                DefinitionStages.WithOwner {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Hunt create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Hunt create(Context context);
        }
        /** The stage of the Hunt definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             *
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the Hunt definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the hunt.
             *
             * @param displayName The display name of the hunt.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the Hunt definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The description of the hunt.
             *
             * @param description The description of the hunt.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the Hunt definition allowing to specify status. */
        interface WithStatus {
            /**
             * Specifies the status property: The status of the hunt..
             *
             * @param status The status of the hunt.
             * @return the next definition stage.
             */
            WithCreate withStatus(Status status);
        }
        /** The stage of the Hunt definition allowing to specify hypothesisStatus. */
        interface WithHypothesisStatus {
            /**
             * Specifies the hypothesisStatus property: The hypothesis status of the hunt..
             *
             * @param hypothesisStatus The hypothesis status of the hunt.
             * @return the next definition stage.
             */
            WithCreate withHypothesisStatus(HypothesisStatus hypothesisStatus);
        }
        /** The stage of the Hunt definition allowing to specify attackTactics. */
        interface WithAttackTactics {
            /**
             * Specifies the attackTactics property: A list of mitre attack tactics the hunt is associated with.
             *
             * @param attackTactics A list of mitre attack tactics the hunt is associated with.
             * @return the next definition stage.
             */
            WithCreate withAttackTactics(List<AttackTactic> attackTactics);
        }
        /** The stage of the Hunt definition allowing to specify attackTechniques. */
        interface WithAttackTechniques {
            /**
             * Specifies the attackTechniques property: A list of a mitre attack techniques the hunt is associated with.
             *
             * @param attackTechniques A list of a mitre attack techniques the hunt is associated with.
             * @return the next definition stage.
             */
            WithCreate withAttackTechniques(List<String> attackTechniques);
        }
        /** The stage of the Hunt definition allowing to specify labels. */
        interface WithLabels {
            /**
             * Specifies the labels property: List of labels relevant to this hunt .
             *
             * @param labels List of labels relevant to this hunt.
             * @return the next definition stage.
             */
            WithCreate withLabels(List<String> labels);
        }
        /** The stage of the Hunt definition allowing to specify owner. */
        interface WithOwner {
            /**
             * Specifies the owner property: Describes a user that the hunt is assigned to.
             *
             * @param owner Describes a user that the hunt is assigned to.
             * @return the next definition stage.
             */
            WithCreate withOwner(HuntOwner owner);
        }
    }
    /**
     * Begins update for the Hunt resource.
     *
     * @return the stage of resource update.
     */
    Hunt.Update update();

    /** The template for Hunt update. */
    interface Update
        extends UpdateStages.WithEtag,
            UpdateStages.WithDisplayName,
            UpdateStages.WithDescription,
            UpdateStages.WithStatus,
            UpdateStages.WithHypothesisStatus,
            UpdateStages.WithAttackTactics,
            UpdateStages.WithAttackTechniques,
            UpdateStages.WithLabels,
            UpdateStages.WithOwner {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Hunt apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Hunt apply(Context context);
    }
    /** The Hunt update stages. */
    interface UpdateStages {
        /** The stage of the Hunt update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Etag of the azure resource.
             *
             * @param etag Etag of the azure resource.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the Hunt update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the hunt.
             *
             * @param displayName The display name of the hunt.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }
        /** The stage of the Hunt update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The description of the hunt.
             *
             * @param description The description of the hunt.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the Hunt update allowing to specify status. */
        interface WithStatus {
            /**
             * Specifies the status property: The status of the hunt..
             *
             * @param status The status of the hunt.
             * @return the next definition stage.
             */
            Update withStatus(Status status);
        }
        /** The stage of the Hunt update allowing to specify hypothesisStatus. */
        interface WithHypothesisStatus {
            /**
             * Specifies the hypothesisStatus property: The hypothesis status of the hunt..
             *
             * @param hypothesisStatus The hypothesis status of the hunt.
             * @return the next definition stage.
             */
            Update withHypothesisStatus(HypothesisStatus hypothesisStatus);
        }
        /** The stage of the Hunt update allowing to specify attackTactics. */
        interface WithAttackTactics {
            /**
             * Specifies the attackTactics property: A list of mitre attack tactics the hunt is associated with.
             *
             * @param attackTactics A list of mitre attack tactics the hunt is associated with.
             * @return the next definition stage.
             */
            Update withAttackTactics(List<AttackTactic> attackTactics);
        }
        /** The stage of the Hunt update allowing to specify attackTechniques. */
        interface WithAttackTechniques {
            /**
             * Specifies the attackTechniques property: A list of a mitre attack techniques the hunt is associated with.
             *
             * @param attackTechniques A list of a mitre attack techniques the hunt is associated with.
             * @return the next definition stage.
             */
            Update withAttackTechniques(List<String> attackTechniques);
        }
        /** The stage of the Hunt update allowing to specify labels. */
        interface WithLabels {
            /**
             * Specifies the labels property: List of labels relevant to this hunt .
             *
             * @param labels List of labels relevant to this hunt.
             * @return the next definition stage.
             */
            Update withLabels(List<String> labels);
        }
        /** The stage of the Hunt update allowing to specify owner. */
        interface WithOwner {
            /**
             * Specifies the owner property: Describes a user that the hunt is assigned to.
             *
             * @param owner Describes a user that the hunt is assigned to.
             * @return the next definition stage.
             */
            Update withOwner(HuntOwner owner);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Hunt refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Hunt refresh(Context context);
}

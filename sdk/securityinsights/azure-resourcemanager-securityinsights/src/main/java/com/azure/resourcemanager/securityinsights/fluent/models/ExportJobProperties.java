// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.securityinsights.models.ExportJobContentInfo;
import com.azure.resourcemanager.securityinsights.models.ExportJobResultInfo;
import com.azure.resourcemanager.securityinsights.models.ExportType;
import com.azure.resourcemanager.securityinsights.models.Version;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Describes export job properties. */
@Fluent
public final class ExportJobProperties {
    /*
     * The id (a Guid) of the export job
     */
    @JsonProperty(value = "jobId", required = true)
    private String jobId;

    /*
     * The id (a Guid) of the export connection
     */
    @JsonProperty(value = "connectionId", required = true)
    private String connectionId;

    /*
     * The version number associated with the export job
     */
    @JsonProperty(value = "version")
    private Version version;

    /*
     * A description of the export job
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Export type of the export job.
     */
    @JsonProperty(value = "exportType", required = true)
    private ExportType exportType;

    /*
     * Start time of the export job.
     */
    @JsonProperty(value = "startTime")
    private String startTime;

    /*
     * End time of the export job.
     */
    @JsonProperty(value = "endTime")
    private String endTime;

    /*
     * Last update time of the export job.
     */
    @JsonProperty(value = "lastUpdateTime")
    private String lastUpdateTime;

    /*
     * Export type of the export job.
     */
    @JsonProperty(value = "jobResult", access = JsonProperty.Access.WRITE_ONLY)
    private ExportJobResultInfo jobResult;

    /*
     * Array of export job content info types.
     */
    @JsonProperty(value = "exportContents")
    private List<ExportJobContentInfo> exportContents;

    /** Creates an instance of ExportJobProperties class. */
    public ExportJobProperties() {
    }

    /**
     * Get the jobId property: The id (a Guid) of the export job.
     *
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Set the jobId property: The id (a Guid) of the export job.
     *
     * @param jobId the jobId value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Get the connectionId property: The id (a Guid) of the export connection.
     *
     * @return the connectionId value.
     */
    public String connectionId() {
        return this.connectionId;
    }

    /**
     * Set the connectionId property: The id (a Guid) of the export connection.
     *
     * @param connectionId the connectionId value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }

    /**
     * Get the version property: The version number associated with the export job.
     *
     * @return the version value.
     */
    public Version version() {
        return this.version;
    }

    /**
     * Set the version property: The version number associated with the export job.
     *
     * @param version the version value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withVersion(Version version) {
        this.version = version;
        return this;
    }

    /**
     * Get the description property: A description of the export job.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: A description of the export job.
     *
     * @param description the description value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the exportType property: Export type of the export job.
     *
     * @return the exportType value.
     */
    public ExportType exportType() {
        return this.exportType;
    }

    /**
     * Set the exportType property: Export type of the export job.
     *
     * @param exportType the exportType value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withExportType(ExportType exportType) {
        this.exportType = exportType;
        return this;
    }

    /**
     * Get the startTime property: Start time of the export job.
     *
     * @return the startTime value.
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: Start time of the export job.
     *
     * @param startTime the startTime value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: End time of the export job.
     *
     * @return the endTime value.
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: End time of the export job.
     *
     * @param endTime the endTime value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the lastUpdateTime property: Last update time of the export job.
     *
     * @return the lastUpdateTime value.
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Set the lastUpdateTime property: Last update time of the export job.
     *
     * @param lastUpdateTime the lastUpdateTime value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withLastUpdateTime(String lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    /**
     * Get the jobResult property: Export type of the export job.
     *
     * @return the jobResult value.
     */
    public ExportJobResultInfo jobResult() {
        return this.jobResult;
    }

    /**
     * Get the exportContents property: Array of export job content info types.
     *
     * @return the exportContents value.
     */
    public List<ExportJobContentInfo> exportContents() {
        return this.exportContents;
    }

    /**
     * Set the exportContents property: Array of export job content info types.
     *
     * @param exportContents the exportContents value to set.
     * @return the ExportJobProperties object itself.
     */
    public ExportJobProperties withExportContents(List<ExportJobContentInfo> exportContents) {
        this.exportContents = exportContents;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (jobId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property jobId in model ExportJobProperties"));
        }
        if (connectionId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property connectionId in model ExportJobProperties"));
        }
        if (exportType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property exportType in model ExportJobProperties"));
        }
        if (jobResult() != null) {
            jobResult().validate();
        }
        if (exportContents() != null) {
            exportContents().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ExportJobProperties.class);
}

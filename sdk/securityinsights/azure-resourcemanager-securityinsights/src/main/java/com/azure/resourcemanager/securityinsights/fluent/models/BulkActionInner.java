// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.securityinsights.models.BulkActionState;
import com.azure.resourcemanager.securityinsights.models.Condition;
import com.azure.resourcemanager.securityinsights.models.Operation;
import com.azure.resourcemanager.securityinsights.models.TargetType;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Represents a bulk action in Azure Security Insights. */
@Fluent
public final class BulkActionInner extends ProxyResource {
    /*
     * Bulk action properties
     */
    @JsonProperty(value = "properties")
    private BulkActionProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the innerProperties property: Bulk action properties.
     *
     * @return the innerProperties value.
     */
    private BulkActionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the targetType property: Describes the type this bulk action targets for execution.
     *
     * @return the targetType value.
     */
    public TargetType targetType() {
        return this.innerProperties() == null ? null : this.innerProperties().targetType();
    }

    /**
     * Set the targetType property: Describes the type this bulk action targets for execution.
     *
     * @param targetType the targetType value to set.
     * @return the BulkActionInner object itself.
     */
    public BulkActionInner withTargetType(TargetType targetType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BulkActionProperties();
        }
        this.innerProperties().withTargetType(targetType);
        return this;
    }

    /**
     * Get the state property: The current state of this bulk action in the execution pipeline.
     *
     * @return the state value.
     */
    public BulkActionState state() {
        return this.innerProperties() == null ? null : this.innerProperties().state();
    }

    /**
     * Set the state property: The current state of this bulk action in the execution pipeline.
     *
     * @param state the state value to set.
     * @return the BulkActionInner object itself.
     */
    public BulkActionInner withState(BulkActionState state) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BulkActionProperties();
        }
        this.innerProperties().withState(state);
        return this;
    }

    /**
     * Get the condition property: The condition which describes what instances of the target type should be affected by
     * this bulk action.
     *
     * @return the condition value.
     */
    public Condition condition() {
        return this.innerProperties() == null ? null : this.innerProperties().condition();
    }

    /**
     * Set the condition property: The condition which describes what instances of the target type should be affected by
     * this bulk action.
     *
     * @param condition the condition value to set.
     * @return the BulkActionInner object itself.
     */
    public BulkActionInner withCondition(Condition condition) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BulkActionProperties();
        }
        this.innerProperties().withCondition(condition);
        return this;
    }

    /**
     * Get the operation property: The operation which describes how the targeted objects will be modified by this bulk
     * action.
     *
     * @return the operation value.
     */
    public Operation operation() {
        return this.innerProperties() == null ? null : this.innerProperties().operation();
    }

    /**
     * Set the operation property: The operation which describes how the targeted objects will be modified by this bulk
     * action.
     *
     * @param operation the operation value to set.
     * @return the BulkActionInner object itself.
     */
    public BulkActionInner withOperation(Operation operation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BulkActionProperties();
        }
        this.innerProperties().withOperation(operation);
        return this;
    }

    /**
     * Get the estimatedAffectedCountAtCreation property: Estimated number of items to be affected by this bulk action,
     * computed at creation time.
     *
     * @return the estimatedAffectedCountAtCreation value.
     */
    public Integer estimatedAffectedCountAtCreation() {
        return this.innerProperties() == null ? null : this.innerProperties().estimatedAffectedCountAtCreation();
    }

    /**
     * Get the estimatedAffectedCountAtExecutionStartTime property: Estimated number of items to be affected by this
     * bulk action, computed at execution start time.
     *
     * @return the estimatedAffectedCountAtExecutionStartTime value.
     */
    public Integer estimatedAffectedCountAtExecutionStartTime() {
        return this.innerProperties() == null
            ? null
            : this.innerProperties().estimatedAffectedCountAtExecutionStartTime();
    }

    /**
     * Get the totalAffectedCount property: Total number of affected items by this bulk action.
     *
     * @return the totalAffectedCount value.
     */
    public Integer totalAffectedCount() {
        return this.innerProperties() == null ? null : this.innerProperties().totalAffectedCount();
    }

    /**
     * Get the executionOrder property: Index of this bulk action in the execution queue.
     *
     * @return the executionOrder value.
     */
    public Integer executionOrder() {
        return this.innerProperties() == null ? null : this.innerProperties().executionOrder();
    }

    /**
     * Set the executionOrder property: Index of this bulk action in the execution queue.
     *
     * @param executionOrder the executionOrder value to set.
     * @return the BulkActionInner object itself.
     */
    public BulkActionInner withExecutionOrder(Integer executionOrder) {
        if (this.innerProperties() == null) {
            this.innerProperties = new BulkActionProperties();
        }
        this.innerProperties().withExecutionOrder(executionOrder);
        return this;
    }

    /**
     * Get the createdTimeUtc property: The time this bulk action was created.
     *
     * @return the createdTimeUtc value.
     */
    public OffsetDateTime createdTimeUtc() {
        return this.innerProperties() == null ? null : this.innerProperties().createdTimeUtc();
    }

    /**
     * Get the lastModifiedTimeUtc property: The last time this bulk action was modified.
     *
     * @return the lastModifiedTimeUtc value.
     */
    public OffsetDateTime lastModifiedTimeUtc() {
        return this.innerProperties() == null ? null : this.innerProperties().lastModifiedTimeUtc();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.WatchlistItemInner;
import java.util.HashMap;
import java.util.Map;

/** Samples for ConfidentialWatchlistItems CreateOrUpdate. */
public final class ConfidentialWatchlistItemsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-06-01-preview/examples/confidentialWatchlists/CreateConfidentialWatchlistItem.json
     */
    /**
     * Sample code: Creates or updates a confidential watchlist item.
     *
     * @param manager Entry point to SecurityInsightsManager.
     */
    public static void createsOrUpdatesAConfidentialWatchlistItem(
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager) {
        manager
            .confidentialWatchlistItems()
            .createOrUpdateWithResponse(
                "myRg",
                "myWorkspace",
                "highValueAsset",
                "82ba292c-dc97-4dfc-969d-d4dd9e666842",
                new WatchlistItemInner()
                    .withEtag("0300bf09-0000-0000-0000-5c37296e0000")
                    .withItemsKeyValue(
                        mapOf(
                            "Business tier",
                            "10.0.2.0/24",
                            "Data tier",
                            "10.0.2.0/24",
                            "Gateway subnet",
                            "10.0.255.224/27",
                            "Private DMZ in",
                            "10.0.0.0/27",
                            "Public DMZ out",
                            "10.0.0.96/27",
                            "Web Tier",
                            "10.0.1.0/24")),
                Context.NONE);
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

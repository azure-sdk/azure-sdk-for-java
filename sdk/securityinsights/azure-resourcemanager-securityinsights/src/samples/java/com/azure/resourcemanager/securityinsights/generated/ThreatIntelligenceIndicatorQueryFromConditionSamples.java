// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.models.Clause;
import com.azure.resourcemanager.securityinsights.models.Condition;
import com.azure.resourcemanager.securityinsights.models.ConditionOperator;
import com.azure.resourcemanager.securityinsights.models.Connective;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceQueryByCondition;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceSortingCriteria;
import com.azure.resourcemanager.securityinsights.models.ThreatIntelligenceSortingCriteriaEnum;
import java.util.Arrays;

/** Samples for ThreatIntelligenceIndicator QueryFromCondition. */
public final class ThreatIntelligenceIndicatorQueryFromConditionSamples {
    /*
     * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-10-01-preview/examples/threatintelligence/QueryThreatIntelligenceByCondition.json
     */
    /**
     * Sample code: Query Indicators from condition.
     *
     * @param manager Entry point to SecurityInsightsManager.
     */
    public static void queryIndicatorsFromCondition(
        com.azure.resourcemanager.securityinsights.SecurityInsightsManager manager) {
        manager
            .threatIntelligenceIndicators()
            .queryFromConditionWithResponse(
                "myRg",
                "myWorkspace",
                new ThreatIntelligenceQueryByCondition()
                    .withCondition(
                        new Condition()
                            .withConditionConnective(Connective.AND)
                            .withClauses(
                                Arrays
                                    .asList(
                                        new Clause()
                                            .withField("source")
                                            .withOperator(ConditionOperator.EQUAL)
                                            .withValues(Arrays.asList("source1")),
                                        new Clause()
                                            .withClauseConnective(Connective.OR)
                                            .withField("confidence")
                                            .withOperator(ConditionOperator.GREATER_THAN)
                                            .withValues(Arrays.asList("50")))))
                    .withPageSize(100)
                    .withSortBy(
                        Arrays
                            .asList(
                                new ThreatIntelligenceSortingCriteria()
                                    .withSortOrder(ThreatIntelligenceSortingCriteriaEnum.fromString("Descending")))),
                Context.NONE);
    }
}

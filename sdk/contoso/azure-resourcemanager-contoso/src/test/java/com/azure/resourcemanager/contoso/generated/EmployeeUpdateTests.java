// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.contoso.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.contoso.models.EmployeeUpdate;
import com.azure.resourcemanager.contoso.models.EmployeeUpdateProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class EmployeeUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EmployeeUpdate model = BinaryData
            .fromString("{\"tags\":{\"j\":\"jcny\"},\"properties\":{\"age\":1707664619,\"city\":\"tnapczwlokjyemkk\"}}")
            .toObject(EmployeeUpdate.class);
        Assertions.assertEquals("jcny", model.tags().get("j"));
        Assertions.assertEquals(1707664619, model.properties().age());
        Assertions.assertEquals("tnapczwlokjyemkk", model.properties().city());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EmployeeUpdate model = new EmployeeUpdate().withTags(mapOf("j", "jcny"))
            .withProperties(new EmployeeUpdateProperties().withAge(1707664619).withCity("tnapczwlokjyemkk"));
        model = BinaryData.fromObject(model).toObject(EmployeeUpdate.class);
        Assertions.assertEquals("jcny", model.tags().get("j"));
        Assertions.assertEquals(1707664619, model.properties().age());
        Assertions.assertEquals("tnapczwlokjyemkk", model.properties().city());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

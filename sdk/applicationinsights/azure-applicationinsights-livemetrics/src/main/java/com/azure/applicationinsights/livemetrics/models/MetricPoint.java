// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.applicationinsights.livemetrics.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Metric data point.
 */
@Immutable
public final class MetricPoint implements JsonSerializable<MetricPoint> {
    /*
     * Metric name.
     */
    @Generated
    private final String name;

    /*
     * Metric value.
     */
    @Generated
    private final double value;

    /*
     * Metric weight.
     */
    @Generated
    private final int weight;

    /**
     * Creates an instance of MetricPoint class.
     * 
     * @param name the name value to set.
     * @param value the value value to set.
     * @param weight the weight value to set.
     */
    @Generated
    public MetricPoint(String name, double value, int weight) {
        this.name = name;
        this.value = value;
        this.weight = weight;
    }

    /**
     * Get the name property: Metric name.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the value property: Metric value.
     * 
     * @return the value value.
     */
    @Generated
    public double getValue() {
        return this.value;
    }

    /**
     * Get the weight property: Metric weight.
     * 
     * @return the weight value.
     */
    @Generated
    public int getWeight() {
        return this.weight;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("Name", this.name);
        jsonWriter.writeDoubleField("Value", this.value);
        jsonWriter.writeIntField("Weight", this.weight);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetricPoint from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetricPoint if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MetricPoint.
     */
    @Generated
    public static MetricPoint fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String name = null;
            double value = 0.0;
            int weight = 0;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("Name".equals(fieldName)) {
                    name = reader.getString();
                } else if ("Value".equals(fieldName)) {
                    value = reader.getDouble();
                } else if ("Weight".equals(fieldName)) {
                    weight = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }
            return new MetricPoint(name, value, weight);
        });
    }
}

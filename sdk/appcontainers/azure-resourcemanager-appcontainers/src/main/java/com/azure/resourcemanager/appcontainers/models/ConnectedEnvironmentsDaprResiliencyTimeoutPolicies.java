// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ConnectedEnvironmentsDaprResiliencyTimeoutPolicies. */
public interface ConnectedEnvironmentsDaprResiliencyTimeoutPolicies {
    /**
     * Get the Dapr Resiliency Timeout Policies for a connected environment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the Connected Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Dapr Resiliency Timeout Policies for a connected environment as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<DaprResiliencyTimeoutPolicy> list(String resourceGroupName, String connectedEnvironmentName);

    /**
     * Get the Dapr Resiliency Timeout Policies for a connected environment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the Connected Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Dapr Resiliency Timeout Policies for a connected environment as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<DaprResiliencyTimeoutPolicy> list(
        String resourceGroupName, String connectedEnvironmentName, Context context);

    /**
     * Get a Dapr Resiliency Timeout Policy.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the Connected Environment.
     * @param policyName Name of the Dapr Resiliency Timeout Policy.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Dapr Resiliency Timeout Policy along with {@link Response}.
     */
    Response<DaprResiliencyTimeoutPolicy> getWithResponse(
        String resourceGroupName, String connectedEnvironmentName, String policyName, Context context);

    /**
     * Get a Dapr Resiliency Timeout Policy.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the Connected Environment.
     * @param policyName Name of the Dapr Resiliency Timeout Policy.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Dapr Resiliency Timeout Policy.
     */
    DaprResiliencyTimeoutPolicy get(String resourceGroupName, String connectedEnvironmentName, String policyName);

    /**
     * Delete a Dapr Resiliency Timeout Policy.
     *
     * <p>Delete a Dapr Resiliency Timeout Policy from a Connected Environment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the Connected Environment.
     * @param policyName Name of the Dapr Resiliency Timeout Policy.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String connectedEnvironmentName, String policyName, Context context);

    /**
     * Delete a Dapr Resiliency Timeout Policy.
     *
     * <p>Delete a Dapr Resiliency Timeout Policy from a Connected Environment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the Connected Environment.
     * @param policyName Name of the Dapr Resiliency Timeout Policy.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String connectedEnvironmentName, String policyName);

    /**
     * Get a Dapr Resiliency Timeout Policy.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Dapr Resiliency Timeout Policy along with {@link Response}.
     */
    DaprResiliencyTimeoutPolicy getById(String id);

    /**
     * Get a Dapr Resiliency Timeout Policy.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Dapr Resiliency Timeout Policy along with {@link Response}.
     */
    Response<DaprResiliencyTimeoutPolicy> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Dapr Resiliency Timeout Policy.
     *
     * <p>Delete a Dapr Resiliency Timeout Policy from a Connected Environment.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Dapr Resiliency Timeout Policy.
     *
     * <p>Delete a Dapr Resiliency Timeout Policy from a Connected Environment.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DaprResiliencyTimeoutPolicy resource.
     *
     * @param name resource name.
     * @return the first stage of the new DaprResiliencyTimeoutPolicy definition.
     */
    DaprResiliencyTimeoutPolicy.DefinitionStages.Blank define(String name);
}

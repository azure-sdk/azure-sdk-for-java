// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Java app configuration.
 */
@Fluent
public final class RuntimeJava {
    /*
     * Enable jmx core metrics for the java app
     */
    @JsonProperty(value = "enableMetrics")
    private Boolean enableMetrics;

    /*
     * Diagnostic capabilities achieved by java agent
     */
    @JsonProperty(value = "javaAgent")
    private RuntimeJavaAgent javaAgent;

    /**
     * Creates an instance of RuntimeJava class.
     */
    public RuntimeJava() {
    }

    /**
     * Get the enableMetrics property: Enable jmx core metrics for the java app.
     * 
     * @return the enableMetrics value.
     */
    public Boolean enableMetrics() {
        return this.enableMetrics;
    }

    /**
     * Set the enableMetrics property: Enable jmx core metrics for the java app.
     * 
     * @param enableMetrics the enableMetrics value to set.
     * @return the RuntimeJava object itself.
     */
    public RuntimeJava withEnableMetrics(Boolean enableMetrics) {
        this.enableMetrics = enableMetrics;
        return this;
    }

    /**
     * Get the javaAgent property: Diagnostic capabilities achieved by java agent.
     * 
     * @return the javaAgent value.
     */
    public RuntimeJavaAgent javaAgent() {
        return this.javaAgent;
    }

    /**
     * Set the javaAgent property: Diagnostic capabilities achieved by java agent.
     * 
     * @param javaAgent the javaAgent value to set.
     * @return the RuntimeJava object itself.
     */
    public RuntimeJava withJavaAgent(RuntimeJavaAgent javaAgent) {
        this.javaAgent = javaAgent;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (javaAgent() != null) {
            javaAgent().validate();
        }
    }
}

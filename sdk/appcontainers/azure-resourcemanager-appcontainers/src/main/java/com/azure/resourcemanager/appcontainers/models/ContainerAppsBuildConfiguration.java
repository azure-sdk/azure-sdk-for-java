// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Configuration of the build.
 */
@Immutable
public final class ContainerAppsBuildConfiguration {
    /*
     * Base OS used to build and run the app.
     */
    @JsonProperty(value = "baseOs", access = JsonProperty.Access.WRITE_ONLY)
    private String baseOs;

    /*
     * Platform to be used to build and run the app.
     */
    @JsonProperty(value = "platform", access = JsonProperty.Access.WRITE_ONLY)
    private String platform;

    /*
     * Platform version to be used to build and run the app.
     */
    @JsonProperty(value = "platformVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String platformVersion;

    /*
     * List of environment variables to be passed to the build, secrets should not be used in environment variable.
     */
    @JsonProperty(value = "environmentVariables", access = JsonProperty.Access.WRITE_ONLY)
    private List<EnvironmentVariable> environmentVariables;

    /*
     * List of steps to perform before the build.
     */
    @JsonProperty(value = "preBuildSteps", access = JsonProperty.Access.WRITE_ONLY)
    private List<PreBuildStep> preBuildSteps;

    /**
     * Creates an instance of ContainerAppsBuildConfiguration class.
     */
    public ContainerAppsBuildConfiguration() {
    }

    /**
     * Get the baseOs property: Base OS used to build and run the app.
     * 
     * @return the baseOs value.
     */
    public String baseOs() {
        return this.baseOs;
    }

    /**
     * Get the platform property: Platform to be used to build and run the app.
     * 
     * @return the platform value.
     */
    public String platform() {
        return this.platform;
    }

    /**
     * Get the platformVersion property: Platform version to be used to build and run the app.
     * 
     * @return the platformVersion value.
     */
    public String platformVersion() {
        return this.platformVersion;
    }

    /**
     * Get the environmentVariables property: List of environment variables to be passed to the build, secrets should
     * not be used in environment variable.
     * 
     * @return the environmentVariables value.
     */
    public List<EnvironmentVariable> environmentVariables() {
        return this.environmentVariables;
    }

    /**
     * Get the preBuildSteps property: List of steps to perform before the build.
     * 
     * @return the preBuildSteps value.
     */
    public List<PreBuildStep> preBuildSteps() {
        return this.preBuildSteps;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (environmentVariables() != null) {
            environmentVariables().forEach(e -> e.validate());
        }
        if (preBuildSteps() != null) {
            preBuildSteps().forEach(e -> e.validate());
        }
    }
}

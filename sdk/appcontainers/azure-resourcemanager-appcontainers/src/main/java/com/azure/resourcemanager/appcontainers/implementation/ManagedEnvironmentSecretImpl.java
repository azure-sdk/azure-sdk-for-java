// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcontainers.fluent.models.ManagedEnvironmentSecretInner;
import com.azure.resourcemanager.appcontainers.models.ManagedEnvironmentSecret;
import com.azure.resourcemanager.appcontainers.models.ManagedEnvironmentSecretProperties;

public final class ManagedEnvironmentSecretImpl
    implements ManagedEnvironmentSecret, ManagedEnvironmentSecret.Definition, ManagedEnvironmentSecret.Update {
    private ManagedEnvironmentSecretInner innerObject;

    private final com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ManagedEnvironmentSecretProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ManagedEnvironmentSecretInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String environmentName;

    private String secretName;

    public ManagedEnvironmentSecretImpl withExistingManagedEnvironment(String resourceGroupName,
        String environmentName) {
        this.resourceGroupName = resourceGroupName;
        this.environmentName = environmentName;
        return this;
    }

    public ManagedEnvironmentSecret create() {
        this.innerObject = serviceManager.serviceClient().getManagedEnvironmentSecrets()
            .createOrUpdateWithResponse(resourceGroupName, environmentName, secretName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ManagedEnvironmentSecret create(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedEnvironmentSecrets()
            .createOrUpdateWithResponse(resourceGroupName, environmentName, secretName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ManagedEnvironmentSecretImpl(String name,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = new ManagedEnvironmentSecretInner();
        this.serviceManager = serviceManager;
        this.secretName = name;
    }

    public ManagedEnvironmentSecretImpl update() {
        return this;
    }

    public ManagedEnvironmentSecret apply() {
        this.innerObject = serviceManager.serviceClient().getManagedEnvironmentSecrets()
            .createOrUpdateWithResponse(resourceGroupName, environmentName, secretName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ManagedEnvironmentSecret apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedEnvironmentSecrets()
            .createOrUpdateWithResponse(resourceGroupName, environmentName, secretName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ManagedEnvironmentSecretImpl(ManagedEnvironmentSecretInner innerObject,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.environmentName = Utils.getValueFromIdByName(innerObject.id(), "managedEnvironments");
        this.secretName = Utils.getValueFromIdByName(innerObject.id(), "secrets");
    }

    public ManagedEnvironmentSecret refresh() {
        this.innerObject = serviceManager.serviceClient().getManagedEnvironmentSecrets()
            .getWithResponse(resourceGroupName, environmentName, secretName, Context.NONE).getValue();
        return this;
    }

    public ManagedEnvironmentSecret refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedEnvironmentSecrets()
            .getWithResponse(resourceGroupName, environmentName, secretName, context).getValue();
        return this;
    }

    public Response<ManagedEnvironmentSecret> getValueWithResponse(Context context) {
        return serviceManager.managedEnvironmentSecrets().getValueWithResponse(resourceGroupName, environmentName,
            secretName, context);
    }

    public ManagedEnvironmentSecret getValue() {
        return serviceManager.managedEnvironmentSecrets().getValue(resourceGroupName, environmentName, secretName);
    }

    public ManagedEnvironmentSecretImpl withProperties(ManagedEnvironmentSecretProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

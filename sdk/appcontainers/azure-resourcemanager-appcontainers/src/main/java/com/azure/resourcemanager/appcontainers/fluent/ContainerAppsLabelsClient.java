// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appcontainers.fluent.models.LabelsInner;

/**
 * An instance of this class provides access to all the operations defined in ContainerAppsLabelsClient.
 */
public interface ContainerAppsLabelsClient {
    /**
     * Get the labels associated with the revisions of current app.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the labels associated with the revisions of current app as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LabelsInner> list(String resourceGroupName, String containerAppName);

    /**
     * Get the labels associated with the revisions of current app.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the labels associated with the revisions of current app as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LabelsInner> list(String resourceGroupName, String containerAppName, Context context);

    /**
     * Get a labels to revisions mapping for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels mapping.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a labels to revisions mapping for a Container App along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LabelsInner> getWithResponse(String resourceGroupName, String containerAppName, String labelsName,
        Context context);

    /**
     * Get a labels to revisions mapping for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels mapping.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a labels to revisions mapping for a Container App.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LabelsInner get(String resourceGroupName, String containerAppName, String labelsName);

    /**
     * Create or update the Labels for a Container App.
     * 
     * Create or update the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @param labelsEnvelope Properties used to create a Container App Labels collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of container App Labels.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LabelsInner>, LabelsInner> beginCreateOrUpdate(String resourceGroupName,
        String containerAppName, String labelsName, LabelsInner labelsEnvelope);

    /**
     * Create or update the Labels for a Container App.
     * 
     * Create or update the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @param labelsEnvelope Properties used to create a Container App Labels collection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of container App Labels.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<LabelsInner>, LabelsInner> beginCreateOrUpdate(String resourceGroupName,
        String containerAppName, String labelsName, LabelsInner labelsEnvelope, Context context);

    /**
     * Create or update the Labels for a Container App.
     * 
     * Create or update the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @param labelsEnvelope Properties used to create a Container App Labels collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return container App Labels.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LabelsInner createOrUpdate(String resourceGroupName, String containerAppName, String labelsName,
        LabelsInner labelsEnvelope);

    /**
     * Create or update the Labels for a Container App.
     * 
     * Create or update the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @param labelsEnvelope Properties used to create a Container App Labels collection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return container App Labels.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LabelsInner createOrUpdate(String resourceGroupName, String containerAppName, String labelsName,
        LabelsInner labelsEnvelope, Context context);

    /**
     * Delete Container App's Labels.
     * 
     * Delete the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String containerAppName,
        String labelsName);

    /**
     * Delete Container App's Labels.
     * 
     * Delete the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String containerAppName, String labelsName,
        Context context);

    /**
     * Delete Container App's Labels.
     * 
     * Delete the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String containerAppName, String labelsName);

    /**
     * Delete Container App's Labels.
     * 
     * Delete the mapping of revision to labels for a Container App.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param labelsName Name of the Container App Labels collection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String containerAppName, String labelsName, Context context);
}

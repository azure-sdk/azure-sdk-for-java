// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** DaprResiliencyRetryPolicy resource specific properties. */
@Fluent
public final class DaprResiliencyRetryPolicyProperties {
    /*
     * Back-off and retry interval strategy
     */
    @JsonProperty(value = "policy")
    private String policy;

    /*
     * Time interval between retries. Valid values are of the form 200ms, 15s, 2m, 1h30m, etc.
     */
    @JsonProperty(value = "duration")
    private String duration;

    /*
     * The maximum number of retries to attempt. -1 denotes an indefinite number of retries.
     */
    @JsonProperty(value = "maxRetries")
    private Integer maxRetries;

    /*
     * Determines the maximum interval between retries. Valid values are of the form 200ms, 15s, 2m, 1h30m, etc.
     */
    @JsonProperty(value = "maxInterval")
    private String maxInterval;

    /** Creates an instance of DaprResiliencyRetryPolicyProperties class. */
    public DaprResiliencyRetryPolicyProperties() {
    }

    /**
     * Get the policy property: Back-off and retry interval strategy.
     *
     * @return the policy value.
     */
    public String policy() {
        return this.policy;
    }

    /**
     * Set the policy property: Back-off and retry interval strategy.
     *
     * @param policy the policy value to set.
     * @return the DaprResiliencyRetryPolicyProperties object itself.
     */
    public DaprResiliencyRetryPolicyProperties withPolicy(String policy) {
        this.policy = policy;
        return this;
    }

    /**
     * Get the duration property: Time interval between retries. Valid values are of the form 200ms, 15s, 2m, 1h30m,
     * etc.
     *
     * @return the duration value.
     */
    public String duration() {
        return this.duration;
    }

    /**
     * Set the duration property: Time interval between retries. Valid values are of the form 200ms, 15s, 2m, 1h30m,
     * etc.
     *
     * @param duration the duration value to set.
     * @return the DaprResiliencyRetryPolicyProperties object itself.
     */
    public DaprResiliencyRetryPolicyProperties withDuration(String duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get the maxRetries property: The maximum number of retries to attempt. -1 denotes an indefinite number of
     * retries.
     *
     * @return the maxRetries value.
     */
    public Integer maxRetries() {
        return this.maxRetries;
    }

    /**
     * Set the maxRetries property: The maximum number of retries to attempt. -1 denotes an indefinite number of
     * retries.
     *
     * @param maxRetries the maxRetries value to set.
     * @return the DaprResiliencyRetryPolicyProperties object itself.
     */
    public DaprResiliencyRetryPolicyProperties withMaxRetries(Integer maxRetries) {
        this.maxRetries = maxRetries;
        return this;
    }

    /**
     * Get the maxInterval property: Determines the maximum interval between retries. Valid values are of the form
     * 200ms, 15s, 2m, 1h30m, etc.
     *
     * @return the maxInterval value.
     */
    public String maxInterval() {
        return this.maxInterval;
    }

    /**
     * Set the maxInterval property: Determines the maximum interval between retries. Valid values are of the form
     * 200ms, 15s, 2m, 1h30m, etc.
     *
     * @param maxInterval the maxInterval value to set.
     * @return the DaprResiliencyRetryPolicyProperties object itself.
     */
    public DaprResiliencyRetryPolicyProperties withMaxInterval(String maxInterval) {
        this.maxInterval = maxInterval;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

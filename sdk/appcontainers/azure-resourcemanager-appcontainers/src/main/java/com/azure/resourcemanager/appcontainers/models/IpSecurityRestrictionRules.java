// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Rules to restrict incoming IP address. */
@Fluent
public final class IpSecurityRestrictionRules {
    /*
     * Name for the ip restriction rule.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * Describe the IP restriction rules that are being sent to the
     * container-app. This is an optional field.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * CIDR notation to match incoming ip address
     */
    @JsonProperty(value = "ipAddress", required = true)
    private String ipAddress;

    /*
     * Allow or Deny rules to determine for incoming ip
     */
    @JsonProperty(value = "action", required = true)
    private Action action;

    /**
     * Get the name property: Name for the ip restriction rule.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name for the ip restriction rule.
     *
     * @param name the name value to set.
     * @return the IpSecurityRestrictionRules object itself.
     */
    public IpSecurityRestrictionRules withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description property: Describe the IP restriction rules that are being sent to the container-app. This is
     * an optional field.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Describe the IP restriction rules that are being sent to the container-app. This is
     * an optional field.
     *
     * @param description the description value to set.
     * @return the IpSecurityRestrictionRules object itself.
     */
    public IpSecurityRestrictionRules withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the ipAddress property: CIDR notation to match incoming ip address.
     *
     * @return the ipAddress value.
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    /**
     * Set the ipAddress property: CIDR notation to match incoming ip address.
     *
     * @param ipAddress the ipAddress value to set.
     * @return the IpSecurityRestrictionRules object itself.
     */
    public IpSecurityRestrictionRules withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }

    /**
     * Get the action property: Allow or Deny rules to determine for incoming ip.
     *
     * @return the action value.
     */
    public Action action() {
        return this.action;
    }

    /**
     * Set the action property: Allow or Deny rules to determine for incoming ip.
     *
     * @param action the action value to set.
     * @return the IpSecurityRestrictionRules object itself.
     */
    public IpSecurityRestrictionRules withAction(Action action) {
        this.action = action;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property name in model IpSecurityRestrictionRules"));
        }
        if (ipAddress() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property ipAddress in model IpSecurityRestrictionRules"));
        }
        if (action() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property action in model IpSecurityRestrictionRules"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IpSecurityRestrictionRules.class);
}

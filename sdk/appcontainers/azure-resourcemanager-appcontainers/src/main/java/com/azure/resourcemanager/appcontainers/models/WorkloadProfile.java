// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Description of a workload profile. */
@Fluent
public final class WorkloadProfile {
    /*
     * Workload profile type for the workloads to run on.
     */
    @JsonProperty(value = "workloadProfileType", required = true)
    private WorkloadProfileType workloadProfileType;

    /*
     * Provisioning state of the workload profile
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The minimum capacity.
     */
    @JsonProperty(value = "minimum")
    private Integer minimum;

    /*
     * The maximum capacity.
     */
    @JsonProperty(value = "maximum")
    private Integer maximum;

    /**
     * Get the workloadProfileType property: Workload profile type for the workloads to run on.
     *
     * @return the workloadProfileType value.
     */
    public WorkloadProfileType workloadProfileType() {
        return this.workloadProfileType;
    }

    /**
     * Set the workloadProfileType property: Workload profile type for the workloads to run on.
     *
     * @param workloadProfileType the workloadProfileType value to set.
     * @return the WorkloadProfile object itself.
     */
    public WorkloadProfile withWorkloadProfileType(WorkloadProfileType workloadProfileType) {
        this.workloadProfileType = workloadProfileType;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state of the workload profile.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the minimum property: The minimum capacity.
     *
     * @return the minimum value.
     */
    public Integer minimum() {
        return this.minimum;
    }

    /**
     * Set the minimum property: The minimum capacity.
     *
     * @param minimum the minimum value to set.
     * @return the WorkloadProfile object itself.
     */
    public WorkloadProfile withMinimum(Integer minimum) {
        this.minimum = minimum;
        return this;
    }

    /**
     * Get the maximum property: The maximum capacity.
     *
     * @return the maximum value.
     */
    public Integer maximum() {
        return this.maximum;
    }

    /**
     * Set the maximum property: The maximum capacity.
     *
     * @param maximum the maximum value to set.
     * @return the WorkloadProfile object itself.
     */
    public WorkloadProfile withMaximum(Integer maximum) {
        this.maximum = maximum;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (workloadProfileType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property workloadProfileType in model WorkloadProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(WorkloadProfile.class);
}

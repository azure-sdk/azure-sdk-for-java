// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Diagnostic capabilities achieved by java agent.
 */
@Fluent
public final class RuntimeJavaAgent {
    /*
     * Enable java agent injection for the java app.
     */
    @JsonProperty(value = "enabled")
    private Boolean enabled;

    /*
     * Settings of the log level for the java app.
     */
    @JsonProperty(value = "logLevelSettings")
    private List<LogLevelSetting> logLevelSettings;

    /**
     * Creates an instance of RuntimeJavaAgent class.
     */
    public RuntimeJavaAgent() {
    }

    /**
     * Get the enabled property: Enable java agent injection for the java app.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Enable java agent injection for the java app.
     * 
     * @param enabled the enabled value to set.
     * @return the RuntimeJavaAgent object itself.
     */
    public RuntimeJavaAgent withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the logLevelSettings property: Settings of the log level for the java app.
     * 
     * @return the logLevelSettings value.
     */
    public List<LogLevelSetting> logLevelSettings() {
        return this.logLevelSettings;
    }

    /**
     * Set the logLevelSettings property: Settings of the log level for the java app.
     * 
     * @param logLevelSettings the logLevelSettings value to set.
     * @return the RuntimeJavaAgent object itself.
     */
    public RuntimeJavaAgent withLogLevelSettings(List<LogLevelSetting> logLevelSettings) {
        this.logLevelSettings = logLevelSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (logLevelSettings() != null) {
            logLevelSettings().forEach(e -> e.validate());
        }
    }
}

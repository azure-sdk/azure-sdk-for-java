// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.appcontainers.models.ExtendedLocation;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** App Space. */
@Fluent
public final class AppSpaceInner extends Resource {
    /*
     * The complex type of the extended location.
     */
    @JsonProperty(value = "extendedLocation")
    private ExtendedLocation extendedLocation;

    /*
     * AppSpace resource specific properties
     */
    @JsonProperty(value = "properties")
    private AppSpaceProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of AppSpaceInner class. */
    public AppSpaceInner() {
    }

    /**
     * Get the extendedLocation property: The complex type of the extended location.
     *
     * @return the extendedLocation value.
     */
    public ExtendedLocation extendedLocation() {
        return this.extendedLocation;
    }

    /**
     * Set the extendedLocation property: The complex type of the extended location.
     *
     * @param extendedLocation the extendedLocation value to set.
     * @return the AppSpaceInner object itself.
     */
    public AppSpaceInner withExtendedLocation(ExtendedLocation extendedLocation) {
        this.extendedLocation = extendedLocation;
        return this;
    }

    /**
     * Get the innerProperties property: AppSpace resource specific properties.
     *
     * @return the innerProperties value.
     */
    private AppSpaceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public AppSpaceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AppSpaceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the friendlyName property: Friendly name of the App Space.
     *
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.innerProperties() == null ? null : this.innerProperties().friendlyName();
    }

    /**
     * Set the friendlyName property: Friendly name of the App Space.
     *
     * @param friendlyName the friendlyName value to set.
     * @return the AppSpaceInner object itself.
     */
    public AppSpaceInner withFriendlyName(String friendlyName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceProperties();
        }
        this.innerProperties().withFriendlyName(friendlyName);
        return this;
    }

    /**
     * Get the primaryResourceId property: ARM resource Id of the primary resource in the App Space.
     *
     * @return the primaryResourceId value.
     */
    public String primaryResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().primaryResourceId();
    }

    /**
     * Set the primaryResourceId property: ARM resource Id of the primary resource in the App Space.
     *
     * @param primaryResourceId the primaryResourceId value to set.
     * @return the AppSpaceInner object itself.
     */
    public AppSpaceInner withPrimaryResourceId(String primaryResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceProperties();
        }
        this.innerProperties().withPrimaryResourceId(primaryResourceId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (extendedLocation() != null) {
            extendedLocation().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appcontainers.fluent.ContainerAppsSessionPoolSessionsClient;
import com.azure.resourcemanager.appcontainers.fluent.models.SessionInner;
import com.azure.resourcemanager.appcontainers.models.ContainerAppsSessionPoolSessions;
import com.azure.resourcemanager.appcontainers.models.EnvironmentVar;
import com.azure.resourcemanager.appcontainers.models.Session;
import java.util.List;
import java.util.Map;

public final class ContainerAppsSessionPoolSessionsImpl implements ContainerAppsSessionPoolSessions {
    private static final ClientLogger LOGGER = new ClientLogger(ContainerAppsSessionPoolSessionsImpl.class);

    private final ContainerAppsSessionPoolSessionsClient innerClient;

    private final com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager;

    public ContainerAppsSessionPoolSessionsImpl(ContainerAppsSessionPoolSessionsClient innerClient,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Session> generateSessions(String resourceGroupName, String sessionPoolName,
        SessionInner sessionEnvelope) {
        PagedIterable<SessionInner> inner
            = this.serviceClient().generateSessions(resourceGroupName, sessionPoolName, sessionEnvelope);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SessionImpl(inner1, this.manager()));
    }

    public PagedIterable<Session> generateSessions(String resourceGroupName, String sessionPoolName,
        SessionInner sessionEnvelope, Integer count, Context context) {
        PagedIterable<SessionInner> inner = this.serviceClient().generateSessions(resourceGroupName, sessionPoolName,
            sessionEnvelope, count, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SessionImpl(inner1, this.manager()));
    }

    public Response<Session> getWithResponse(String resourceGroupName, String sessionPoolName, String name,
        Context context) {
        Response<SessionInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, sessionPoolName, name, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SessionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Session get(String resourceGroupName, String sessionPoolName, String name) {
        SessionInner inner = this.serviceClient().get(resourceGroupName, sessionPoolName, name);
        if (inner != null) {
            return new SessionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<Session> listBySessionPool(String resourceGroupName, String sessionPoolName) {
        PagedIterable<SessionInner> inner = this.serviceClient().listBySessionPool(resourceGroupName, sessionPoolName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SessionImpl(inner1, this.manager()));
    }

    public PagedIterable<Session> listBySessionPool(String resourceGroupName, String sessionPoolName, Context context) {
        PagedIterable<SessionInner> inner
            = this.serviceClient().listBySessionPool(resourceGroupName, sessionPoolName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SessionImpl(inner1, this.manager()));
    }

    public Response<Void> updateEnvironmentVariablesWithResponse(String resourceGroupName, String sessionPoolName,
        String name, Map<String, List<EnvironmentVar>> environmentVariables, Context context) {
        return this.serviceClient().updateEnvironmentVariablesWithResponse(resourceGroupName, sessionPoolName, name,
            environmentVariables, context);
    }

    public void updateEnvironmentVariables(String resourceGroupName, String sessionPoolName, String name,
        Map<String, List<EnvironmentVar>> environmentVariables) {
        this.serviceClient().updateEnvironmentVariables(resourceGroupName, sessionPoolName, name, environmentVariables);
    }

    private ContainerAppsSessionPoolSessionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager() {
        return this.serviceManager;
    }
}

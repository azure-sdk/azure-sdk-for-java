// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprResiliencyCircuitBreakerPolicyInner;
import com.azure.resourcemanager.appcontainers.models.DaprResiliencyCircuitBreakerPolicy;

public final class DaprResiliencyCircuitBreakerPolicyImpl
    implements DaprResiliencyCircuitBreakerPolicy,
        DaprResiliencyCircuitBreakerPolicy.Definition,
        DaprResiliencyCircuitBreakerPolicy.Update {
    private DaprResiliencyCircuitBreakerPolicyInner innerObject;

    private final com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Integer maxRequests() {
        return this.innerModel().maxRequests();
    }

    public String interval() {
        return this.innerModel().interval();
    }

    public String timeout() {
        return this.innerModel().timeout();
    }

    public String trip() {
        return this.innerModel().trip();
    }

    public String circuitBreakerScope() {
        return this.innerModel().circuitBreakerScope();
    }

    public Integer circuitBreakerCacheSize() {
        return this.innerModel().circuitBreakerCacheSize();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DaprResiliencyCircuitBreakerPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String environmentName;

    private String policyName;

    public DaprResiliencyCircuitBreakerPolicyImpl withExistingManagedEnvironment(
        String resourceGroupName, String environmentName) {
        this.resourceGroupName = resourceGroupName;
        this.environmentName = environmentName;
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicy create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDaprResiliencyCircuitBreakerPolicies()
                .createOrUpdateWithResponse(
                    resourceGroupName, environmentName, policyName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicy create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDaprResiliencyCircuitBreakerPolicies()
                .createOrUpdateWithResponse(resourceGroupName, environmentName, policyName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DaprResiliencyCircuitBreakerPolicyImpl(
        String name, com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = new DaprResiliencyCircuitBreakerPolicyInner();
        this.serviceManager = serviceManager;
        this.policyName = name;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl update() {
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicy apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDaprResiliencyCircuitBreakerPolicies()
                .createOrUpdateWithResponse(
                    resourceGroupName, environmentName, policyName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicy apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDaprResiliencyCircuitBreakerPolicies()
                .createOrUpdateWithResponse(resourceGroupName, environmentName, policyName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DaprResiliencyCircuitBreakerPolicyImpl(
        DaprResiliencyCircuitBreakerPolicyInner innerObject,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.environmentName = Utils.getValueFromIdByName(innerObject.id(), "managedEnvironments");
        this.policyName = Utils.getValueFromIdByName(innerObject.id(), "daprResiliencyCircuitBreakerPolicies");
    }

    public DaprResiliencyCircuitBreakerPolicy refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDaprResiliencyCircuitBreakerPolicies()
                .getWithResponse(resourceGroupName, environmentName, policyName, Context.NONE)
                .getValue();
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicy refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDaprResiliencyCircuitBreakerPolicies()
                .getWithResponse(resourceGroupName, environmentName, policyName, context)
                .getValue();
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl withMaxRequests(Integer maxRequests) {
        this.innerModel().withMaxRequests(maxRequests);
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl withInterval(String interval) {
        this.innerModel().withInterval(interval);
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl withTimeout(String timeout) {
        this.innerModel().withTimeout(timeout);
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl withTrip(String trip) {
        this.innerModel().withTrip(trip);
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl withCircuitBreakerScope(String circuitBreakerScope) {
        this.innerModel().withCircuitBreakerScope(circuitBreakerScope);
        return this;
    }

    public DaprResiliencyCircuitBreakerPolicyImpl withCircuitBreakerCacheSize(Integer circuitBreakerCacheSize) {
        this.innerModel().withCircuitBreakerCacheSize(circuitBreakerCacheSize);
        return this;
    }
}

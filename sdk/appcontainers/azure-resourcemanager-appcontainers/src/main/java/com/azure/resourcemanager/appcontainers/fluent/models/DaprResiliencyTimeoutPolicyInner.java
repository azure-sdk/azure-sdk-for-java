// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Resiliency Policy Retries. */
@Fluent
public final class DaprResiliencyTimeoutPolicyInner extends ProxyResource {
    /*
     * DaprResiliencyTimeoutPolicy resource specific properties
     */
    @JsonProperty(value = "properties")
    private DaprResiliencyTimeoutPolicyProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of DaprResiliencyTimeoutPolicyInner class. */
    public DaprResiliencyTimeoutPolicyInner() {
    }

    /**
     * Get the innerProperties property: DaprResiliencyTimeoutPolicy resource specific properties.
     *
     * @return the innerProperties value.
     */
    private DaprResiliencyTimeoutPolicyProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the general property: Timeout duration for general operations. Valid values are of the form 15s, 2m, 1h30m,
     * etc.
     *
     * @return the general value.
     */
    public String general() {
        return this.innerProperties() == null ? null : this.innerProperties().general();
    }

    /**
     * Set the general property: Timeout duration for general operations. Valid values are of the form 15s, 2m, 1h30m,
     * etc.
     *
     * @param general the general value to set.
     * @return the DaprResiliencyTimeoutPolicyInner object itself.
     */
    public DaprResiliencyTimeoutPolicyInner withGeneral(String general) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DaprResiliencyTimeoutPolicyProperties();
        }
        this.innerProperties().withGeneral(general);
        return this;
    }

    /**
     * Get the important property: Timeout duration for important operations. Valid values are of the form 15s, 2m,
     * 1h30m, etc.
     *
     * @return the important value.
     */
    public String important() {
        return this.innerProperties() == null ? null : this.innerProperties().important();
    }

    /**
     * Set the important property: Timeout duration for important operations. Valid values are of the form 15s, 2m,
     * 1h30m, etc.
     *
     * @param important the important value to set.
     * @return the DaprResiliencyTimeoutPolicyInner object itself.
     */
    public DaprResiliencyTimeoutPolicyInner withImportant(String important) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DaprResiliencyTimeoutPolicyProperties();
        }
        this.innerProperties().withImportant(important);
        return this;
    }

    /**
     * Get the largeResponse property: Timeout duration for large operations. Valid values are of the form 15s, 2m,
     * 1h30m, etc.
     *
     * @return the largeResponse value.
     */
    public String largeResponse() {
        return this.innerProperties() == null ? null : this.innerProperties().largeResponse();
    }

    /**
     * Set the largeResponse property: Timeout duration for large operations. Valid values are of the form 15s, 2m,
     * 1h30m, etc.
     *
     * @param largeResponse the largeResponse value to set.
     * @return the DaprResiliencyTimeoutPolicyInner object itself.
     */
    public DaprResiliencyTimeoutPolicyInner withLargeResponse(String largeResponse) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DaprResiliencyTimeoutPolicyProperties();
        }
        this.innerProperties().withLargeResponse(largeResponse);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Resiliency Policy Retries. */
@Fluent
public final class DaprResiliencyTimeoutPolicyInner extends ProxyResource {
    /*
     * DaprResiliencyTimeoutPolicy resource specific properties
     */
    @JsonProperty(value = "properties")
    private DaprResiliencyTimeoutPolicyProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of DaprResiliencyTimeoutPolicyInner class. */
    public DaprResiliencyTimeoutPolicyInner() {
    }

    /**
     * Get the innerProperties property: DaprResiliencyTimeoutPolicy resource specific properties.
     *
     * @return the innerProperties value.
     */
    private DaprResiliencyTimeoutPolicyProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the timeout property: Timeout duration for the operation. Valid values are of the form 200ms, 15s, 2m, 1h30m,
     * etc.
     *
     * @return the timeout value.
     */
    public String timeout() {
        return this.innerProperties() == null ? null : this.innerProperties().timeout();
    }

    /**
     * Set the timeout property: Timeout duration for the operation. Valid values are of the form 200ms, 15s, 2m, 1h30m,
     * etc.
     *
     * @param timeout the timeout value to set.
     * @return the DaprResiliencyTimeoutPolicyInner object itself.
     */
    public DaprResiliencyTimeoutPolicyInner withTimeout(String timeout) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DaprResiliencyTimeoutPolicyProperties();
        }
        this.innerProperties().withTimeout(timeout);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

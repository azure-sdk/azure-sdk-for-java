// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of AppSpaceResources. */
public interface AppSpaceResources {
    /**
     * Get an App Space Resource in an App Space.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appSpaceName Name of the App Space.
     * @param spaceResourceName Name of the App Space Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an App Space Resource in an App Space along with {@link Response}.
     */
    Response<AppSpaceResource> getWithResponse(
        String resourceGroupName, String appSpaceName, String spaceResourceName, Context context);

    /**
     * Get an App Space Resource in an App Space.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appSpaceName Name of the App Space.
     * @param spaceResourceName Name of the App Space Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an App Space Resource in an App Space.
     */
    AppSpaceResource get(String resourceGroupName, String appSpaceName, String spaceResourceName);

    /**
     * Delete an App Space Resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appSpaceName Name of the App Space.
     * @param spaceResourceName Name of the App Space Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String appSpaceName, String spaceResourceName, Context context);

    /**
     * Delete an App Space Resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appSpaceName Name of the App Space.
     * @param spaceResourceName Name of the App Space Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String appSpaceName, String spaceResourceName);

    /**
     * Get an App Space Resource in an App Space.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an App Space Resource in an App Space along with {@link Response}.
     */
    AppSpaceResource getById(String id);

    /**
     * Get an App Space Resource in an App Space.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an App Space Resource in an App Space along with {@link Response}.
     */
    Response<AppSpaceResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete an App Space Resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete an App Space Resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new AppSpaceResource resource.
     *
     * @param name resource name.
     * @return the first stage of the new AppSpaceResource definition.
     */
    AppSpaceResource.DefinitionStages.Blank define(String name);
}

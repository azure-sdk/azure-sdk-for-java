// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcontainers.fluent.models.SessionInner;
import com.azure.resourcemanager.appcontainers.models.EnvironmentVar;
import java.util.List;
import java.util.Map;

/**
 * An instance of this class provides access to all the operations defined in ContainerAppsSessionPoolSessionsClient.
 */
public interface ContainerAppsSessionPoolSessionsClient {
    /**
     * Generate Sessions from a Session Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param sessionEnvelope Properties used to generate a session.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return session collection ARM resource as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SessionInner> generateSessions(String resourceGroupName, String sessionPoolName,
        SessionInner sessionEnvelope);

    /**
     * Generate Sessions from a Session Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param sessionEnvelope Properties used to generate a session.
     * @param count How many Sessions to generate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return session collection ARM resource as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SessionInner> generateSessions(String resourceGroupName, String sessionPoolName,
        SessionInner sessionEnvelope, Integer count, Context context);

    /**
     * Get the properties of a Session.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param name Name of the Session.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a Session along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SessionInner> getWithResponse(String resourceGroupName, String sessionPoolName, String name,
        Context context);

    /**
     * Get the properties of a Session.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param name Name of the Session.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a Session.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SessionInner get(String resourceGroupName, String sessionPoolName, String name);

    /**
     * Get the Session Pools in a Session Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Session Pools in a Session Pool as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SessionInner> listBySessionPool(String resourceGroupName, String sessionPoolName);

    /**
     * Get the Session Pools in a Session Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Session Pools in a Session Pool as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SessionInner> listBySessionPool(String resourceGroupName, String sessionPoolName, Context context);

    /**
     * Update environment variables of a Session.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param name Name of the Session.
     * @param environmentVariables Environment variables to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> updateEnvironmentVariablesWithResponse(String resourceGroupName, String sessionPoolName, String name,
        Map<String, List<EnvironmentVar>> environmentVariables, Context context);

    /**
     * Update environment variables of a Session.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param sessionPoolName Name of the Session Pool.
     * @param name Name of the Session.
     * @param environmentVariables Environment variables to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     * is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void updateEnvironmentVariables(String resourceGroupName, String sessionPoolName, String name,
        Map<String, List<EnvironmentVar>> environmentVariables);
}

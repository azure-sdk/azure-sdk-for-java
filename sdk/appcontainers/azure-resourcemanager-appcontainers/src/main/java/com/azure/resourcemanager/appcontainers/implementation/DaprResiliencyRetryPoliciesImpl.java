// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appcontainers.fluent.DaprResiliencyRetryPoliciesClient;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprResiliencyRetryPolicyInner;
import com.azure.resourcemanager.appcontainers.models.DaprResiliencyRetryPolicies;
import com.azure.resourcemanager.appcontainers.models.DaprResiliencyRetryPolicy;

public final class DaprResiliencyRetryPoliciesImpl implements DaprResiliencyRetryPolicies {
    private static final ClientLogger LOGGER = new ClientLogger(DaprResiliencyRetryPoliciesImpl.class);

    private final DaprResiliencyRetryPoliciesClient innerClient;

    private final com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager;

    public DaprResiliencyRetryPoliciesImpl(
        DaprResiliencyRetryPoliciesClient innerClient,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DaprResiliencyRetryPolicy> list(String resourceGroupName, String environmentName) {
        PagedIterable<DaprResiliencyRetryPolicyInner> inner =
            this.serviceClient().list(resourceGroupName, environmentName);
        return Utils.mapPage(inner, inner1 -> new DaprResiliencyRetryPolicyImpl(inner1, this.manager()));
    }

    public PagedIterable<DaprResiliencyRetryPolicy> list(
        String resourceGroupName, String environmentName, Context context) {
        PagedIterable<DaprResiliencyRetryPolicyInner> inner =
            this.serviceClient().list(resourceGroupName, environmentName, context);
        return Utils.mapPage(inner, inner1 -> new DaprResiliencyRetryPolicyImpl(inner1, this.manager()));
    }

    public Response<DaprResiliencyRetryPolicy> getWithResponse(
        String resourceGroupName, String environmentName, String policyName, Context context) {
        Response<DaprResiliencyRetryPolicyInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, environmentName, policyName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DaprResiliencyRetryPolicyImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DaprResiliencyRetryPolicy get(String resourceGroupName, String environmentName, String policyName) {
        DaprResiliencyRetryPolicyInner inner = this.serviceClient().get(resourceGroupName, environmentName, policyName);
        if (inner != null) {
            return new DaprResiliencyRetryPolicyImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DaprResiliencyRetryPolicy> createOrUpdateWithResponse(
        String resourceGroupName,
        String environmentName,
        String policyName,
        DaprResiliencyRetryPolicyInner daprResiliencyRetryPoliciesEnvelope,
        Context context) {
        Response<DaprResiliencyRetryPolicyInner> inner =
            this
                .serviceClient()
                .createOrUpdateWithResponse(
                    resourceGroupName, environmentName, policyName, daprResiliencyRetryPoliciesEnvelope, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new DaprResiliencyRetryPolicyImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DaprResiliencyRetryPolicy createOrUpdate(
        String resourceGroupName,
        String environmentName,
        String policyName,
        DaprResiliencyRetryPolicyInner daprResiliencyRetryPoliciesEnvelope) {
        DaprResiliencyRetryPolicyInner inner =
            this
                .serviceClient()
                .createOrUpdate(resourceGroupName, environmentName, policyName, daprResiliencyRetryPoliciesEnvelope);
        if (inner != null) {
            return new DaprResiliencyRetryPolicyImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName, String environmentName, String policyName, Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, environmentName, policyName, context);
    }

    public void delete(String resourceGroupName, String environmentName, String policyName) {
        this.serviceClient().delete(resourceGroupName, environmentName, policyName);
    }

    private DaprResiliencyRetryPoliciesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcontainers.fluent.models.DaprResiliencyRetryPolicyInner;
import com.azure.resourcemanager.appcontainers.models.DaprResiliencyRetryPolicy;

public final class DaprResiliencyRetryPolicyImpl
    implements DaprResiliencyRetryPolicy, DaprResiliencyRetryPolicy.Definition, DaprResiliencyRetryPolicy.Update {
    private DaprResiliencyRetryPolicyInner innerObject;

    private final com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String policy() {
        return this.innerModel().policy();
    }

    public String duration() {
        return this.innerModel().duration();
    }

    public Integer maxRetries() {
        return this.innerModel().maxRetries();
    }

    public String maxInterval() {
        return this.innerModel().maxInterval();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DaprResiliencyRetryPolicyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String connectedEnvironmentName;

    private String policyName;

    public DaprResiliencyRetryPolicyImpl withExistingConnectedEnvironment(
        String resourceGroupName, String connectedEnvironmentName) {
        this.resourceGroupName = resourceGroupName;
        this.connectedEnvironmentName = connectedEnvironmentName;
        return this;
    }

    public DaprResiliencyRetryPolicy create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectedEnvironmentsDaprResiliencyRetryPolicies()
                .createOrUpdateWithResponse(
                    resourceGroupName, connectedEnvironmentName, policyName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DaprResiliencyRetryPolicy create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectedEnvironmentsDaprResiliencyRetryPolicies()
                .createOrUpdateWithResponse(
                    resourceGroupName, connectedEnvironmentName, policyName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DaprResiliencyRetryPolicyImpl(
        String name, com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = new DaprResiliencyRetryPolicyInner();
        this.serviceManager = serviceManager;
        this.policyName = name;
    }

    public DaprResiliencyRetryPolicyImpl update() {
        return this;
    }

    public DaprResiliencyRetryPolicy apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectedEnvironmentsDaprResiliencyRetryPolicies()
                .createOrUpdateWithResponse(
                    resourceGroupName, connectedEnvironmentName, policyName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DaprResiliencyRetryPolicy apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectedEnvironmentsDaprResiliencyRetryPolicies()
                .createOrUpdateWithResponse(
                    resourceGroupName, connectedEnvironmentName, policyName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DaprResiliencyRetryPolicyImpl(
        DaprResiliencyRetryPolicyInner innerObject,
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.connectedEnvironmentName = Utils.getValueFromIdByName(innerObject.id(), "connectedEnvironments");
        this.policyName = Utils.getValueFromIdByName(innerObject.id(), "daprResiliencyRetryPolicies");
    }

    public DaprResiliencyRetryPolicy refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectedEnvironmentsDaprResiliencyRetryPolicies()
                .getWithResponse(resourceGroupName, connectedEnvironmentName, policyName, Context.NONE)
                .getValue();
        return this;
    }

    public DaprResiliencyRetryPolicy refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getConnectedEnvironmentsDaprResiliencyRetryPolicies()
                .getWithResponse(resourceGroupName, connectedEnvironmentName, policyName, context)
                .getValue();
        return this;
    }

    public DaprResiliencyRetryPolicyImpl withPolicy(String policy) {
        this.innerModel().withPolicy(policy);
        return this;
    }

    public DaprResiliencyRetryPolicyImpl withDuration(String duration) {
        this.innerModel().withDuration(duration);
        return this;
    }

    public DaprResiliencyRetryPolicyImpl withMaxRetries(Integer maxRetries) {
        this.innerModel().withMaxRetries(maxRetries);
        return this;
    }

    public DaprResiliencyRetryPolicyImpl withMaxInterval(String maxInterval) {
        this.innerModel().withMaxInterval(maxInterval);
        return this;
    }
}

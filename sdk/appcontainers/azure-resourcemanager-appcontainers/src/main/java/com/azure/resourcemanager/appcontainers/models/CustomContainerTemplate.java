// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Custom container configuration.
 */
@Fluent
public final class CustomContainerTemplate {
    /*
     * Private container registry credentials for containers used by the sessions of the session pool.
     */
    @JsonProperty(value = "registryCredentials")
    private SessionRegistryCredentials registryCredentials;

    /*
     * List of container definitions for the sessions of the session pool.
     */
    @JsonProperty(value = "containers")
    private List<SessionContainer> containers;

    /*
     * Session pool ingress configuration.
     */
    @JsonProperty(value = "ingress")
    private SessionIngress ingress;

    /**
     * Creates an instance of CustomContainerTemplate class.
     */
    public CustomContainerTemplate() {
    }

    /**
     * Get the registryCredentials property: Private container registry credentials for containers used by the sessions
     * of the session pool.
     * 
     * @return the registryCredentials value.
     */
    public SessionRegistryCredentials registryCredentials() {
        return this.registryCredentials;
    }

    /**
     * Set the registryCredentials property: Private container registry credentials for containers used by the sessions
     * of the session pool.
     * 
     * @param registryCredentials the registryCredentials value to set.
     * @return the CustomContainerTemplate object itself.
     */
    public CustomContainerTemplate withRegistryCredentials(SessionRegistryCredentials registryCredentials) {
        this.registryCredentials = registryCredentials;
        return this;
    }

    /**
     * Get the containers property: List of container definitions for the sessions of the session pool.
     * 
     * @return the containers value.
     */
    public List<SessionContainer> containers() {
        return this.containers;
    }

    /**
     * Set the containers property: List of container definitions for the sessions of the session pool.
     * 
     * @param containers the containers value to set.
     * @return the CustomContainerTemplate object itself.
     */
    public CustomContainerTemplate withContainers(List<SessionContainer> containers) {
        this.containers = containers;
        return this;
    }

    /**
     * Get the ingress property: Session pool ingress configuration.
     * 
     * @return the ingress value.
     */
    public SessionIngress ingress() {
        return this.ingress;
    }

    /**
     * Set the ingress property: Session pool ingress configuration.
     * 
     * @param ingress the ingress value to set.
     * @return the CustomContainerTemplate object itself.
     */
    public CustomContainerTemplate withIngress(SessionIngress ingress) {
        this.ingress = ingress;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (registryCredentials() != null) {
            registryCredentials().validate();
        }
        if (containers() != null) {
            containers().forEach(e -> e.validate());
        }
        if (ingress() != null) {
            ingress().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ManagedEnvironmentsDiagnostics. */
public interface ManagedEnvironmentsDiagnostics {
    /**
     * Get the properties of a Managed Environment.
     *
     * <p>Get the properties of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a Managed Environment used to host container apps along with {@link Response}.
     */
    Response<ManagedEnvironment> getRootWithResponse(String resourceGroupName, String environmentName, Context context);

    /**
     * Get the properties of a Managed Environment.
     *
     * <p>Get the properties of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a Managed Environment used to host container apps.
     */
    ManagedEnvironment getRoot(String resourceGroupName, String environmentName);

    /**
     * Get the Dapr components of a Managed Environment.
     *
     * <p>Get the Dapr components of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Dapr components of a Managed Environment used to host container apps as paginated response with
     *     {@link PagedIterable}.
     */
    PagedIterable<DaprComponent> listDaprComponents(String resourceGroupName, String environmentName);

    /**
     * Get the Dapr components of a Managed Environment.
     *
     * <p>Get the Dapr components of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Dapr components of a Managed Environment used to host container apps as paginated response with
     *     {@link PagedIterable}.
     */
    PagedIterable<DaprComponent> listDaprComponents(String resourceGroupName, String environmentName, Context context);

    /**
     * Get the Dapr component of a Managed Environment.
     *
     * <p>Get the Dapr component of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param componentName Name of the Dapr Component.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Dapr component of a Managed Environment used to host container apps along with {@link Response}.
     */
    Response<DaprComponent> getDaprComponentsWithResponse(
        String resourceGroupName, String environmentName, String componentName, Context context);

    /**
     * Get the Dapr component of a Managed Environment.
     *
     * <p>Get the Dapr component of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param componentName Name of the Dapr Component.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Dapr component of a Managed Environment used to host container apps.
     */
    DaprComponent getDaprComponents(String resourceGroupName, String environmentName, String componentName);

    /**
     * Get the Certificates in a Managed Environment.
     *
     * <p>Get the Certificates of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Certificates of a Managed Environment used to host container apps as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<Certificate> listCertificates(String resourceGroupName, String environmentName);

    /**
     * Get the Certificates in a Managed Environment.
     *
     * <p>Get the Certificates of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Certificates of a Managed Environment used to host container apps as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<Certificate> listCertificates(String resourceGroupName, String environmentName, Context context);

    /**
     * Get the specified Certificate in a Managed Environment.
     *
     * <p>Get the specified Certificate of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param certificateName Name of the Certificate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Certificate of a Managed Environment used to host container apps along with {@link
     *     Response}.
     */
    Response<Certificate> getCertificatesWithResponse(
        String resourceGroupName, String environmentName, String certificateName, Context context);

    /**
     * Get the specified Certificate in a Managed Environment.
     *
     * <p>Get the specified Certificate of a Managed Environment used to host container apps.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param certificateName Name of the Certificate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.appcontainers.models.DefaultErrorResponseErrorException thrown if the request
     *     is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Certificate of a Managed Environment used to host container apps.
     */
    Certificate getCertificates(String resourceGroupName, String environmentName, String certificateName);
}

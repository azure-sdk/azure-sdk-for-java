// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appcontainers.fluent.models.LabelsInner;
import java.util.Map;

/**
 * An immutable client-side representation of Labels.
 */
public interface Labels {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Current provisioning State of the operation.
     * 
     * @return the provisioningState value.
     */
    LabelsProvisioningState provisioningState();

    /**
     * Gets the labels property: Labels for the Container App.
     * 
     * @return the labels value.
     */
    Map<String, Label> labels();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.appcontainers.fluent.models.LabelsInner object.
     * 
     * @return the inner object.
     */
    LabelsInner innerModel();

    /**
     * The entirety of the Labels definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The Labels definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Labels definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the Labels definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, containerAppName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param containerAppName Name of the Container App.
             * @return the next definition stage.
             */
            WithCreate withExistingContainerApp(String resourceGroupName, String containerAppName);
        }

        /**
         * The stage of the Labels definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithLabels {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Labels create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Labels create(Context context);
        }

        /**
         * The stage of the Labels definition allowing to specify labels.
         */
        interface WithLabels {
            /**
             * Specifies the labels property: Labels for the Container App..
             * 
             * @param labels Labels for the Container App.
             * @return the next definition stage.
             */
            WithCreate withLabels(Map<String, Label> labels);
        }
    }

    /**
     * Begins update for the Labels resource.
     * 
     * @return the stage of resource update.
     */
    Labels.Update update();

    /**
     * The template for Labels update.
     */
    interface Update extends UpdateStages.WithLabels {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        Labels apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Labels apply(Context context);
    }

    /**
     * The Labels update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the Labels update allowing to specify labels.
         */
        interface WithLabels {
            /**
             * Specifies the labels property: Labels for the Container App..
             * 
             * @param labels Labels for the Container App.
             * @return the next definition stage.
             */
            Update withLabels(Map<String, Label> labels);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    Labels refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Labels refresh(Context context);
}

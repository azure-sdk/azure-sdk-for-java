// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.appcontainers.models.DeploymentInformation;
import com.azure.resourcemanager.appcontainers.models.ExtendedLocation;
import com.azure.resourcemanager.appcontainers.models.RepositoryInformation;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** App Space Resource. */
@Fluent
public final class AppSpaceResourceInner extends Resource {
    /*
     * The complex type of the extended location.
     */
    @JsonProperty(value = "extendedLocation")
    private ExtendedLocation extendedLocation;

    /*
     * AppSpaceResource resource specific properties
     */
    @JsonProperty(value = "properties")
    private AppSpaceResourceProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of AppSpaceResourceInner class. */
    public AppSpaceResourceInner() {
    }

    /**
     * Get the extendedLocation property: The complex type of the extended location.
     *
     * @return the extendedLocation value.
     */
    public ExtendedLocation extendedLocation() {
        return this.extendedLocation;
    }

    /**
     * Set the extendedLocation property: The complex type of the extended location.
     *
     * @param extendedLocation the extendedLocation value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withExtendedLocation(ExtendedLocation extendedLocation) {
        this.extendedLocation = extendedLocation;
        return this;
    }

    /**
     * Get the innerProperties property: AppSpaceResource resource specific properties.
     *
     * @return the innerProperties value.
     */
    private AppSpaceResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public AppSpaceResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AppSpaceResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the resourceId property: ARM resource Id of the tracked resource.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceId();
    }

    /**
     * Set the resourceId property: ARM resource Id of the tracked resource.
     *
     * @param resourceId the resourceId value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withResourceId(String resourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withResourceId(resourceId);
        return this;
    }

    /**
     * Get the friendlyName property: Friendly name of the App Space Resource.
     *
     * @return the friendlyName value.
     */
    public String friendlyName() {
        return this.innerProperties() == null ? null : this.innerProperties().friendlyName();
    }

    /**
     * Set the friendlyName property: Friendly name of the App Space Resource.
     *
     * @param friendlyName the friendlyName value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withFriendlyName(String friendlyName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withFriendlyName(friendlyName);
        return this;
    }

    /**
     * Get the resourceLocation property: Location of the tracked ARM resource. Can be different from the location of
     * the app space resource.
     *
     * @return the resourceLocation value.
     */
    public String resourceLocation() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceLocation();
    }

    /**
     * Set the resourceLocation property: Location of the tracked ARM resource. Can be different from the location of
     * the app space resource.
     *
     * @param resourceLocation the resourceLocation value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withResourceLocation(String resourceLocation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withResourceLocation(resourceLocation);
        return this;
    }

    /**
     * Get the repo property: Optional App Space Resource Repository Information.
     *
     * @return the repo value.
     */
    public RepositoryInformation repo() {
        return this.innerProperties() == null ? null : this.innerProperties().repo();
    }

    /**
     * Set the repo property: Optional App Space Resource Repository Information.
     *
     * @param repo the repo value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withRepo(RepositoryInformation repo) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withRepo(repo);
        return this;
    }

    /**
     * Get the deployment property: Optional App Space Resource Deployment Information.
     *
     * @return the deployment value.
     */
    public DeploymentInformation deployment() {
        return this.innerProperties() == null ? null : this.innerProperties().deployment();
    }

    /**
     * Set the deployment property: Optional App Space Resource Deployment Information.
     *
     * @param deployment the deployment value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withDeployment(DeploymentInformation deployment) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withDeployment(deployment);
        return this;
    }

    /**
     * Get the isFavorite property: Boolean marking this App Space Resource as a favorite.
     *
     * @return the isFavorite value.
     */
    public Boolean isFavorite() {
        return this.innerProperties() == null ? null : this.innerProperties().isFavorite();
    }

    /**
     * Set the isFavorite property: Boolean marking this App Space Resource as a favorite.
     *
     * @param isFavorite the isFavorite value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withIsFavorite(Boolean isFavorite) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withIsFavorite(isFavorite);
        return this;
    }

    /**
     * Get the metadata property: Property bag to add properties used by Portal.
     *
     * @return the metadata value.
     */
    public Object metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Set the metadata property: Property bag to add properties used by Portal.
     *
     * @param metadata the metadata value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withMetadata(Object metadata) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withMetadata(metadata);
        return this;
    }

    /**
     * Get the dependencies property: List of ARM App Space Resource Ids on which this App Space Resource is dependent.
     *
     * @return the dependencies value.
     */
    public List<String> dependencies() {
        return this.innerProperties() == null ? null : this.innerProperties().dependencies();
    }

    /**
     * Set the dependencies property: List of ARM App Space Resource Ids on which this App Space Resource is dependent.
     *
     * @param dependencies the dependencies value to set.
     * @return the AppSpaceResourceInner object itself.
     */
    public AppSpaceResourceInner withDependencies(List<String> dependencies) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AppSpaceResourceProperties();
        }
        this.innerProperties().withDependencies(dependencies);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (extendedLocation() != null) {
            extendedLocation().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

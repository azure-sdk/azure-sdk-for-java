// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Nacos properties.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "componentType",
    defaultImpl = NacosComponent.class,
    visible = true)
@JsonTypeName("Nacos")
@Fluent
public final class NacosComponent extends JavaComponentProperties {
    /*
     * Type of the Java Component.
     */
    @JsonTypeId
    @JsonProperty(value = "componentType", required = true)
    private JavaComponentType componentType = JavaComponentType.NACOS;

    /*
     * Java Component Ingress configurations.
     */
    @JsonProperty(value = "ingress")
    private JavaComponentIngress ingress;

    /**
     * Creates an instance of NacosComponent class.
     */
    public NacosComponent() {
    }

    /**
     * Get the componentType property: Type of the Java Component.
     * 
     * @return the componentType value.
     */
    @Override
    public JavaComponentType componentType() {
        return this.componentType;
    }

    /**
     * Get the ingress property: Java Component Ingress configurations.
     * 
     * @return the ingress value.
     */
    public JavaComponentIngress ingress() {
        return this.ingress;
    }

    /**
     * Set the ingress property: Java Component Ingress configurations.
     * 
     * @param ingress the ingress value to set.
     * @return the NacosComponent object itself.
     */
    public NacosComponent withIngress(JavaComponentIngress ingress) {
        this.ingress = ingress;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NacosComponent withConfigurations(List<JavaComponentConfigurationProperty> configurations) {
        super.withConfigurations(configurations);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NacosComponent withServiceBinds(List<JavaComponentServiceBind> serviceBinds) {
        super.withServiceBinds(serviceBinds);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (ingress() != null) {
            ingress().validate();
        }
    }
}

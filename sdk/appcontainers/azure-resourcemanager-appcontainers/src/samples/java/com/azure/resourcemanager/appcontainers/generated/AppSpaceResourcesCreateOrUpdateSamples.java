// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appcontainers.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.appcontainers.models.DeploymentInformation;
import com.azure.resourcemanager.appcontainers.models.RepositoryInformation;
import java.io.IOException;
import java.util.Arrays;

/** Samples for AppSpaceResources CreateOrUpdate. */
public final class AppSpaceResourcesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/app/resource-manager/Microsoft.App/preview/2023-08-01-preview/examples/AppSpaceResources_CreateOrUpdate.json
     */
    /**
     * Sample code: Create or Update App Space Resource.
     *
     * @param manager Entry point to ContainerAppsApiManager.
     */
    public static void createOrUpdateAppSpaceResource(
        com.azure.resourcemanager.appcontainers.ContainerAppsApiManager manager) throws IOException {
        manager
            .appSpaceResources()
            .define("testappSpaceResource0")
            .withRegion("East US")
            .withExistingAppSpace("rg", "testappSpace0")
            .withResourceId(
                "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.Web/sites/testAppSpaceWebApp")
            .withFriendlyName("Test Resource 0 - Web App")
            .withResourceLocation("West US")
            .withRepo(new RepositoryInformation().withUrl("github.com/myrepo").withBranch("master"))
            .withDeployment(
                new DeploymentInformation()
                    .withId(
                        "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.Resources/deployments/testAppSpaceWebAppDeployment")
                    .withProvisioningState("Succeeded"))
            .withIsFavorite(true)
            .withMetadata(
                SerializerFactory
                    .createDefaultManagementSerializerAdapter()
                    .deserialize("{}", Object.class, SerializerEncoding.JSON))
            .withDependencies(Arrays.asList())
            .create();
    }
}

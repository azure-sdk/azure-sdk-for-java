// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemicrosoftedgeconnectivitystatuses.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.edgemicrosoftedgeconnectivitystatuses.fluent.models.ConnectivityStatusUpdateProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The type used for update operations of the ConnectivityStatus.
 */
@Fluent
public final class ConnectivityStatusUpdate {
    /*
     * The updatable properties of the ConnectivityStatus.
     */
    @JsonProperty(value = "properties")
    private ConnectivityStatusUpdateProperties innerProperties;

    /**
     * Creates an instance of ConnectivityStatusUpdate class.
     */
    public ConnectivityStatusUpdate() {
    }

    /**
     * Get the innerProperties property: The updatable properties of the ConnectivityStatus.
     * 
     * @return the innerProperties value.
     */
    private ConnectivityStatusUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the status property: The Status.
     * 
     * @return the status value.
     */
    public ConnectivityStatusEnumForUpdate status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: The Status.
     * 
     * @param status the status value to set.
     * @return the ConnectivityStatusUpdate object itself.
     */
    public ConnectivityStatusUpdate withStatus(ConnectivityStatusEnumForUpdate status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectivityStatusUpdateProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

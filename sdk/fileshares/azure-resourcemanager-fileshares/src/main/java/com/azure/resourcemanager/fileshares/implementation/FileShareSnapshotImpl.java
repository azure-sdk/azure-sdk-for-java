// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fileshares.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.fileshares.fluent.models.FileShareSnapshotInner;
import com.azure.resourcemanager.fileshares.models.FileShareSnapshot;
import com.azure.resourcemanager.fileshares.models.FileShareSnapshotProperties;
import com.azure.resourcemanager.fileshares.models.FileShareSnapshotUpdate;
import com.azure.resourcemanager.fileshares.models.FileShareSnapshotUpdateProperties;

public final class FileShareSnapshotImpl
    implements FileShareSnapshot, FileShareSnapshot.Definition, FileShareSnapshot.Update {
    private FileShareSnapshotInner innerObject;

    private final com.azure.resourcemanager.fileshares.FileSharesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public FileShareSnapshotProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FileShareSnapshotInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.fileshares.FileSharesManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String resourceName;

    private String name;

    private FileShareSnapshotUpdate updateProperties;

    public FileShareSnapshotImpl withExistingFileShare(String resourceGroupName, String resourceName) {
        this.resourceGroupName = resourceGroupName;
        this.resourceName = resourceName;
        return this;
    }

    public FileShareSnapshot create() {
        this.innerObject = serviceManager.serviceClient()
            .getFileShares()
            .createOrUpdateFileShareSnapshotWithResponse(resourceGroupName, resourceName, name, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public FileShareSnapshot create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileShares()
            .createOrUpdateFileShareSnapshotWithResponse(resourceGroupName, resourceName, name, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    FileShareSnapshotImpl(String name, com.azure.resourcemanager.fileshares.FileSharesManager serviceManager) {
        this.innerObject = new FileShareSnapshotInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public FileShareSnapshotImpl update() {
        this.updateProperties = new FileShareSnapshotUpdate();
        return this;
    }

    public FileShareSnapshot apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFileShares()
            .updateFileShareSnapshot(resourceGroupName, resourceName, name, updateProperties, Context.NONE);
        return this;
    }

    public FileShareSnapshot apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileShares()
            .updateFileShareSnapshot(resourceGroupName, resourceName, name, updateProperties, context);
        return this;
    }

    FileShareSnapshotImpl(FileShareSnapshotInner innerObject,
        com.azure.resourcemanager.fileshares.FileSharesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fileShares");
        this.name = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fileShareSnapshots");
    }

    public FileShareSnapshot refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFileShares()
            .getFileShareSnapshotWithResponse(resourceGroupName, resourceName, name, Context.NONE)
            .getValue();
        return this;
    }

    public FileShareSnapshot refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileShares()
            .getFileShareSnapshotWithResponse(resourceGroupName, resourceName, name, context)
            .getValue();
        return this;
    }

    public FileShareSnapshotImpl withProperties(FileShareSnapshotProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public FileShareSnapshotImpl withProperties(FileShareSnapshotUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }
}

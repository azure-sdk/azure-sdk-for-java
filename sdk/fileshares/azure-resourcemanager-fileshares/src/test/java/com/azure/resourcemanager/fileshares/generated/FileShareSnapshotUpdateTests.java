// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fileshares.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.fileshares.models.FileShareSnapshotUpdate;
import com.azure.resourcemanager.fileshares.models.FileShareSnapshotUpdateProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class FileShareSnapshotUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FileShareSnapshotUpdate model = BinaryData.fromString(
            "{\"properties\":{\"metadata\":{\"mocpc\":\"cjxvsnbyxqab\",\"c\":\"shurzafbljjgpbto\",\"idtqajzyu\":\"mkljavb\",\"jkrlkhbzhfepg\":\"pku\"}}}")
            .toObject(FileShareSnapshotUpdate.class);
        Assertions.assertEquals("cjxvsnbyxqab", model.properties().metadata().get("mocpc"));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FileShareSnapshotUpdate model = new FileShareSnapshotUpdate()
            .withProperties(new FileShareSnapshotUpdateProperties().withMetadata(mapOf("mocpc", "cjxvsnbyxqab", "c",
                "shurzafbljjgpbto", "idtqajzyu", "mkljavb", "jkrlkhbzhfepg", "pku")));
        model = BinaryData.fromObject(model).toObject(FileShareSnapshotUpdate.class);
        Assertions.assertEquals("cjxvsnbyxqab", model.properties().metadata().get("mocpc"));
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

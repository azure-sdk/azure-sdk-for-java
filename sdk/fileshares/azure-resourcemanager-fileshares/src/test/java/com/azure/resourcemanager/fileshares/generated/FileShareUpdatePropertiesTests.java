// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fileshares.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.fileshares.models.FileShareUpdateProperties;
import com.azure.resourcemanager.fileshares.models.NfsProtocolProperties;
import com.azure.resourcemanager.fileshares.models.PublicAccessProperties;
import com.azure.resourcemanager.fileshares.models.PublicNetworkAccess;
import com.azure.resourcemanager.fileshares.models.ShareRootSquash;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FileShareUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FileShareUpdateProperties model = BinaryData.fromString(
            "{\"provisionedStorageGiB\":222855388,\"provisionedIOPerSec\":559319579,\"provisionedThroughputMiBPerSec\":1369496360,\"nfsProtocolProperties\":{\"rootSquash\":\"AllSquash\"},\"publicAccessProperties\":{\"allowedSubnets\":[\"wcukjfkgiawxk\",\"ryplwckbasyypn\",\"dhsgcba\",\"phejkotynqgoulz\"]},\"publicNetworkAccess\":\"Disabled\"}")
            .toObject(FileShareUpdateProperties.class);
        Assertions.assertEquals(222855388, model.provisionedStorageGiB());
        Assertions.assertEquals(559319579, model.provisionedIOPerSec());
        Assertions.assertEquals(1369496360, model.provisionedThroughputMiBPerSec());
        Assertions.assertEquals(ShareRootSquash.ALL_SQUASH, model.nfsProtocolProperties().rootSquash());
        Assertions.assertEquals("wcukjfkgiawxk", model.publicAccessProperties().allowedSubnets().get(0));
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.publicNetworkAccess());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FileShareUpdateProperties model = new FileShareUpdateProperties().withProvisionedStorageGiB(222855388)
            .withProvisionedIOPerSec(559319579)
            .withProvisionedThroughputMiBPerSec(1369496360)
            .withNfsProtocolProperties(new NfsProtocolProperties().withRootSquash(ShareRootSquash.ALL_SQUASH))
            .withPublicAccessProperties(new PublicAccessProperties()
                .withAllowedSubnets(Arrays.asList("wcukjfkgiawxk", "ryplwckbasyypn", "dhsgcba", "phejkotynqgoulz")))
            .withPublicNetworkAccess(PublicNetworkAccess.DISABLED);
        model = BinaryData.fromObject(model).toObject(FileShareUpdateProperties.class);
        Assertions.assertEquals(222855388, model.provisionedStorageGiB());
        Assertions.assertEquals(559319579, model.provisionedIOPerSec());
        Assertions.assertEquals(1369496360, model.provisionedThroughputMiBPerSec());
        Assertions.assertEquals(ShareRootSquash.ALL_SQUASH, model.nfsProtocolProperties().rootSquash());
        Assertions.assertEquals("wcukjfkgiawxk", model.publicAccessProperties().allowedSubnets().get(0));
        Assertions.assertEquals(PublicNetworkAccess.DISABLED, model.publicNetworkAccess());
    }
}

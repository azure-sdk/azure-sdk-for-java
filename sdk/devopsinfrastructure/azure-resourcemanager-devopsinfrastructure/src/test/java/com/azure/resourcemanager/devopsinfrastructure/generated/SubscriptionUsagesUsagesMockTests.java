// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.Quota;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SubscriptionUsagesUsagesMockTests {
    @Test
    public void testUsages() throws Exception {
        String responseStr
            = "{\"value\":[{\"id\":\"l\",\"unit\":\"wabm\",\"currentValue\":5156980415023593365,\"limit\":4958511624832240982}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Quota> response = manager.subscriptionUsages().usages("ovsm", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("l", response.iterator().next().id());
        Assertions.assertEquals("wabm", response.iterator().next().unit());
        Assertions.assertEquals(5156980415023593365L, response.iterator().next().currentValue());
        Assertions.assertEquals(4958511624832240982L, response.iterator().next().limit());
    }
}

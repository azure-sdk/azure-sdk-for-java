// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devopsinfrastructure.models.CachingType;
import com.azure.resourcemanager.devopsinfrastructure.models.DataDisk;
import com.azure.resourcemanager.devopsinfrastructure.models.OsDiskStorageAccountType;
import com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType;
import com.azure.resourcemanager.devopsinfrastructure.models.StorageProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageProfile model = BinaryData.fromString(
            "{\"osDiskStorageAccountType\":\"Premium\",\"dataDisks\":[{\"caching\":\"ReadWrite\",\"diskSizeGiB\":391776168,\"storageAccountType\":\"StandardSSD_ZRS\",\"driveLetter\":\"savjcbpwxqps\"},{\"caching\":\"ReadWrite\",\"diskSizeGiB\":168456950,\"storageAccountType\":\"Standard_LRS\",\"driveLetter\":\"riuhprwm\"},{\"caching\":\"None\",\"diskSizeGiB\":1468047146,\"storageAccountType\":\"Premium_LRS\",\"driveLetter\":\"riwwroy\"},{\"caching\":\"None\",\"diskSizeGiB\":1717005830,\"storageAccountType\":\"Premium_ZRS\",\"driveLetter\":\"ibycno\"}]}")
            .toObject(StorageProfile.class);
        Assertions.assertEquals(OsDiskStorageAccountType.PREMIUM, model.osDiskStorageAccountType());
        Assertions.assertEquals(CachingType.READ_WRITE, model.dataDisks().get(0).caching());
        Assertions.assertEquals(391776168, model.dataDisks().get(0).diskSizeGiB());
        Assertions.assertEquals(StorageAccountType.STANDARD_SSD_ZRS, model.dataDisks().get(0).storageAccountType());
        Assertions.assertEquals("savjcbpwxqps", model.dataDisks().get(0).driveLetter());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageProfile model = new StorageProfile().withOsDiskStorageAccountType(OsDiskStorageAccountType.PREMIUM)
            .withDataDisks(Arrays.asList(
                new DataDisk().withCaching(CachingType.READ_WRITE)
                    .withDiskSizeGiB(391776168)
                    .withStorageAccountType(StorageAccountType.STANDARD_SSD_ZRS)
                    .withDriveLetter("savjcbpwxqps"),
                new DataDisk().withCaching(CachingType.READ_WRITE)
                    .withDiskSizeGiB(168456950)
                    .withStorageAccountType(StorageAccountType.STANDARD_LRS)
                    .withDriveLetter("riuhprwm"),
                new DataDisk().withCaching(CachingType.NONE)
                    .withDiskSizeGiB(1468047146)
                    .withStorageAccountType(StorageAccountType.PREMIUM_LRS)
                    .withDriveLetter("riwwroy"),
                new DataDisk().withCaching(CachingType.NONE)
                    .withDiskSizeGiB(1717005830)
                    .withStorageAccountType(StorageAccountType.PREMIUM_ZRS)
                    .withDriveLetter("ibycno")));
        model = BinaryData.fromObject(model).toObject(StorageProfile.class);
        Assertions.assertEquals(OsDiskStorageAccountType.PREMIUM, model.osDiskStorageAccountType());
        Assertions.assertEquals(CachingType.READ_WRITE, model.dataDisks().get(0).caching());
        Assertions.assertEquals(391776168, model.dataDisks().get(0).diskSizeGiB());
        Assertions.assertEquals(StorageAccountType.STANDARD_SSD_ZRS, model.dataDisks().get(0).storageAccountType());
        Assertions.assertEquals("savjcbpwxqps", model.dataDisks().get(0).driveLetter());
    }
}

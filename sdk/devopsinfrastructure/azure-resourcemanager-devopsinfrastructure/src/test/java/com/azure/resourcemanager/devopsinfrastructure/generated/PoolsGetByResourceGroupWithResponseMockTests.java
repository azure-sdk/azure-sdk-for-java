// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devopsinfrastructure.models.Pool;
import com.azure.resourcemanager.devopsinfrastructure.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoolsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Provisioning\",\"maximumConcurrency\":586646303,\"organizationProfile\":{\"kind\":\"OrganizationProfile\"},\"agentProfile\":{\"kind\":\"AgentProfile\",\"resourcePredictions\":\"dataaxoruzfgsquy\",\"resourcePredictionsProfile\":{\"kind\":\"ResourcePredictionsProfile\"}},\"fabricProfile\":{\"kind\":\"FabricProfile\"},\"devCenterProjectResourceId\":\"rxxle\"},\"identity\":{\"tenantId\":\"amxjezwlw\",\"principalId\":\"xuqlcvydypat\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"ujhemmsbvdkcrodt\":{\"clientId\":\"jkniodko\",\"principalId\":\"bw\"},\"fpagaowpulp\":{\"clientId\":\"nfwjlfltkacjvefk\",\"principalId\":\"foakgg\"},\"jnsjervtiagxsd\":{\"clientId\":\"lyls\",\"principalId\":\"k\"}}},\"location\":\"uem\",\"tags\":{\"nqicvinvkjjxdxrb\":\"zkfzbeyv\",\"zpof\":\"ukzclewyhmlwpaz\",\"qa\":\"cckwyfzqwhxxbu\"},\"id\":\"zfeqztppri\",\"name\":\"lxorjaltolmncws\",\"type\":\"bqwcsdbnwdcf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Pool response = manager.pools()
            .getByResourceGroupWithResponse("exiili", "pdtii", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("uem", response.location());
        Assertions.assertEquals("zkfzbeyv", response.tags().get("nqicvinvkjjxdxrb"));
        Assertions.assertEquals(ProvisioningState.PROVISIONING, response.properties().provisioningState());
        Assertions.assertEquals(586646303, response.properties().maximumConcurrency());
        Assertions.assertEquals("rxxle", response.properties().devCenterProjectResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("jkniodko",
            response.identity().userAssignedIdentities().get("ujhemmsbvdkcrodt").clientId());
        Assertions.assertEquals("bw",
            response.identity().userAssignedIdentities().get("ujhemmsbvdkcrodt").principalId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devopsinfrastructure.models.Pool;
import com.azure.resourcemanager.devopsinfrastructure.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoolsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Provisioning\",\"maximumConcurrency\":1090180987,\"organizationProfile\":{\"kind\":\"OrganizationProfile\"},\"agentProfile\":{\"kind\":\"AgentProfile\",\"resourcePredictions\":\"dataodxun\",\"resourcePredictionsProfile\":{\"kind\":\"ResourcePredictionsProfile\"}},\"fabricProfile\":{\"kind\":\"FabricProfile\"},\"devCenterProjectResourceId\":\"ebxmubyynt\"},\"identity\":{\"principalId\":\"bqtkoievseotgqr\",\"tenantId\":\"tmuwlauwzi\",\"type\":\"None\",\"userAssignedIdentities\":{\"muvp\":{\"principalId\":\"gcj\",\"clientId\":\"u\"},\"xe\":{\"principalId\":\"tdum\",\"clientId\":\"p\"},\"hdneuelfph\":{\"principalId\":\"nzbtbhj\",\"clientId\":\"lkfg\"},\"ithhqzon\":{\"principalId\":\"yhtozfikdowwqu\",\"clientId\":\"xzxcl\"}}},\"location\":\"ggbhcohfwds\",\"tags\":{\"fgdkzzew\":\"aljutiiswac\"},\"id\":\"fvhqc\",\"name\":\"a\",\"type\":\"lvpnpp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Pool response = manager.pools()
            .getByResourceGroupWithResponse("xbxwa", "bogqxndlkzgxhu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ggbhcohfwds", response.location());
        Assertions.assertEquals("aljutiiswac", response.tags().get("fgdkzzew"));
        Assertions.assertEquals(ProvisioningState.PROVISIONING, response.properties().provisioningState());
        Assertions.assertEquals(1090180987, response.properties().maximumConcurrency());
        Assertions.assertEquals("ebxmubyynt", response.properties().devCenterProjectResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
    }
}

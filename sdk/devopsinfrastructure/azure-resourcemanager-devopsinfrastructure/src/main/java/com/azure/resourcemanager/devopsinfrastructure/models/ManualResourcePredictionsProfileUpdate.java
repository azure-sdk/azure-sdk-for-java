// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Customer provides the stand-by agent scheme.
 */
@Immutable
public final class ManualResourcePredictionsProfileUpdate extends ResourcePredictionsProfileUpdate {
    /*
     * Determines how the stand-by scheme should be provided.
     */
    private ResourcePredictionsProfileType kind = ResourcePredictionsProfileType.MANUAL;

    /**
     * Creates an instance of ManualResourcePredictionsProfileUpdate class.
     */
    public ManualResourcePredictionsProfileUpdate() {
    }

    /**
     * Get the kind property: Determines how the stand-by scheme should be provided.
     * 
     * @return the kind value.
     */
    @Override
    public ResourcePredictionsProfileType kind() {
        return this.kind;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManualResourcePredictionsProfileUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManualResourcePredictionsProfileUpdate if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManualResourcePredictionsProfileUpdate.
     */
    public static ManualResourcePredictionsProfileUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManualResourcePredictionsProfileUpdate deserializedManualResourcePredictionsProfileUpdate
                = new ManualResourcePredictionsProfileUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kind".equals(fieldName)) {
                    deserializedManualResourcePredictionsProfileUpdate.kind
                        = ResourcePredictionsProfileType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManualResourcePredictionsProfileUpdate;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.devopsinfrastructure.models.QuotaName;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes Resource Quota.
 */
@Fluent
public final class QuotaInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private QuotaProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of QuotaInner class.
     */
    public QuotaInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private QuotaProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the unit property: The unit of usage measurement.
     * 
     * @return the unit value.
     */
    public String unit() {
        return this.innerProperties() == null ? null : this.innerProperties().unit();
    }

    /**
     * Set the unit property: The unit of usage measurement.
     * 
     * @param unit the unit value to set.
     * @return the QuotaInner object itself.
     */
    public QuotaInner withUnit(String unit) {
        if (this.innerProperties() == null) {
            this.innerProperties = new QuotaProperties();
        }
        this.innerProperties().withUnit(unit);
        return this;
    }

    /**
     * Get the currentValue property: The current usage of the resource.
     * 
     * @return the currentValue value.
     */
    public Long currentValue() {
        return this.innerProperties() == null ? null : this.innerProperties().currentValue();
    }

    /**
     * Set the currentValue property: The current usage of the resource.
     * 
     * @param currentValue the currentValue value to set.
     * @return the QuotaInner object itself.
     */
    public QuotaInner withCurrentValue(Long currentValue) {
        if (this.innerProperties() == null) {
            this.innerProperties = new QuotaProperties();
        }
        this.innerProperties().withCurrentValue(currentValue);
        return this;
    }

    /**
     * Get the limit property: The maximum permitted usage of the resource.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.innerProperties() == null ? null : this.innerProperties().limit();
    }

    /**
     * Set the limit property: The maximum permitted usage of the resource.
     * 
     * @param limit the limit value to set.
     * @return the QuotaInner object itself.
     */
    public QuotaInner withLimit(Long limit) {
        if (this.innerProperties() == null) {
            this.innerProperties = new QuotaProperties();
        }
        this.innerProperties().withLimit(limit);
        return this;
    }

    /**
     * Get the name property: The details of the quota.
     * 
     * @return the name value.
     */
    public QuotaName namePropertiesName() {
        return this.innerProperties() == null ? null : this.innerProperties().name();
    }

    /**
     * Set the name property: The details of the quota.
     * 
     * @param name the name value to set.
     * @return the QuotaInner object itself.
     */
    public QuotaInner withNamePropertiesName(QuotaName name) {
        if (this.innerProperties() == null) {
            this.innerProperties = new QuotaProperties();
        }
        this.innerProperties().withName(name);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Only the specified accounts will be admins of the pool.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("SpecificAccounts")
@Fluent
public final class SpecificAccounts extends AzureDevOpsPermissionProfile {
    /*
     * User email addresses.
     */
    @JsonProperty(value = "users")
    private List<String> users;

    /*
     * Group email addresses.
     */
    @JsonProperty(value = "groups")
    private List<String> groups;

    /**
     * Creates an instance of SpecificAccounts class.
     */
    public SpecificAccounts() {
    }

    /**
     * Get the users property: User email addresses.
     * 
     * @return the users value.
     */
    public List<String> users() {
        return this.users;
    }

    /**
     * Set the users property: User email addresses.
     * 
     * @param users the users value to set.
     * @return the SpecificAccounts object itself.
     */
    public SpecificAccounts withUsers(List<String> users) {
        this.users = users;
        return this;
    }

    /**
     * Get the groups property: Group email addresses.
     * 
     * @return the groups value.
     */
    public List<String> groups() {
        return this.groups;
    }

    /**
     * Set the groups property: Group email addresses.
     * 
     * @param groups the groups value to set.
     * @return the SpecificAccounts object itself.
     */
    public SpecificAccounts withGroups(List<String> groups) {
        this.groups = groups;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

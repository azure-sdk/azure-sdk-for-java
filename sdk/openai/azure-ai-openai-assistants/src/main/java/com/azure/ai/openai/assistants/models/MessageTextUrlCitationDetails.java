// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A representation of the URL used for the text citation.
 */
@Immutable
public final class MessageTextUrlCitationDetails implements JsonSerializable<MessageTextUrlCitationDetails> {
    /*
     * The URL where the citation is from.
     */
    @Generated
    private final String url;

    /*
     * The title of the URL.
     */
    @Generated
    private final String title;

    /**
     * Creates an instance of MessageTextUrlCitationDetails class.
     * 
     * @param url the url value to set.
     * @param title the title value to set.
     */
    @Generated
    public MessageTextUrlCitationDetails(String url, String title) {
        this.url = url;
        this.title = title;
    }

    /**
     * Get the url property: The URL where the citation is from.
     * 
     * @return the url value.
     */
    @Generated
    public String getUrl() {
        return this.url;
    }

    /**
     * Get the title property: The title of the URL.
     * 
     * @return the title value.
     */
    @Generated
    public String getTitle() {
        return this.title;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("url", this.url);
        jsonWriter.writeStringField("title", this.title);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessageTextUrlCitationDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessageTextUrlCitationDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MessageTextUrlCitationDetails.
     */
    @Generated
    public static MessageTextUrlCitationDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String url = null;
            String title = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("url".equals(fieldName)) {
                    url = reader.getString();
                } else if ("title".equals(fieldName)) {
                    title = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new MessageTextUrlCitationDetails(url, title);
        });
    }
}

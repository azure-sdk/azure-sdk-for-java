// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import java.io.IOException;

/**
 * An abstract representation of an emitted output from a code interpreter tool.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "type",
    defaultImpl = RunStepCodeInterpreterToolCallOutput.class,
    visible = true)
@JsonTypeName("RunStepCodeInterpreterToolCallOutput")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "logs", value = RunStepCodeInterpreterLogOutput.class),
    @JsonSubTypes.Type(name = "image", value = RunStepCodeInterpreterImageOutput.class) })
@Immutable
public class RunStepCodeInterpreterToolCallOutput {

    /**
     * Creates an instance of RunStepCodeInterpreterToolCallOutput class.
     */
    @Generated
    protected RunStepCodeInterpreterToolCallOutput() {
        this.type = "RunStepCodeInterpreterToolCallOutput";
    }

    static RunStepCodeInterpreterToolCallOutput fromJsonKnownDiscriminator(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunStepCodeInterpreterToolCallOutput deserializedRunStepCodeInterpreterToolCallOutput
                = new RunStepCodeInterpreterToolCallOutput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                reader.skipChildren();
            }
            return deserializedRunStepCodeInterpreterToolCallOutput;
        });
    }

    /*
     * The object type.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the type property: The object type.
     *
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }
}

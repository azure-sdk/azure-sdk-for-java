// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import java.io.IOException;

/**
 * An abstract representation of an annotation to text thread message content.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = MessageTextAnnotation.class, visible = true)
@JsonTypeName("MessageTextAnnotation")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "file_citation", value = MessageTextFileCitationAnnotation.class),
    @JsonSubTypes.Type(name = "file_path", value = MessageTextFilePathAnnotation.class) })
@Immutable
public class MessageTextAnnotation {

    /*
     * The textual content associated with this text annotation item.
     */
    @Generated
    @JsonProperty(value = "text")
    private final String text;

    /*
     * The first text index associated with this text annotation.
     */
    @Generated
    @JsonProperty(value = "start_index")
    private final int startIndex;

    /*
     * The last text index associated with this text annotation.
     */
    @Generated
    @JsonProperty(value = "end_index")
    private final int endIndex;

    /**
     * Creates an instance of MessageTextAnnotation class.
     *
     * @param text the text value to set.
     * @param startIndex the startIndex value to set.
     * @param endIndex the endIndex value to set.
     */
    @Generated
    @JsonCreator
    protected MessageTextAnnotation(@JsonProperty(value = "text") String text,
        @JsonProperty(value = "start_index") int startIndex, @JsonProperty(value = "end_index") int endIndex) {
        this.type = "MessageTextAnnotation";
        this.text = text;
        this.startIndex = startIndex;
        this.endIndex = endIndex;
    }

    /**
     * Get the text property: The textual content associated with this text annotation item.
     *
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Get the startIndex property: The first text index associated with this text annotation.
     *
     * @return the startIndex value.
     */
    @Generated
    public int getStartIndex() {
        return this.startIndex;
    }

    /**
     * Get the endIndex property: The last text index associated with this text annotation.
     *
     * @return the endIndex value.
     */
    @Generated
    public int getEndIndex() {
        return this.endIndex;
    }

    static MessageTextAnnotation fromJsonKnownDiscriminator(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String text = null;
            int startIndex = 0;
            int endIndex = 0;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("start_index".equals(fieldName)) {
                    startIndex = reader.getInt();
                } else if ("end_index".equals(fieldName)) {
                    endIndex = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }
            return new MessageTextAnnotation(text, startIndex, endIndex);
        });
    }

    /*
     * The object type.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the type property: The object type.
     *
     * @return the type value.
     */
    @Generated
    public String getType() {
        return this.type;
    }
}

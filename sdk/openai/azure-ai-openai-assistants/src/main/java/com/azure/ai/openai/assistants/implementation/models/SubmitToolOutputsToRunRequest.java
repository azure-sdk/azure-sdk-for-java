// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.implementation.models;

import com.azure.ai.openai.assistants.models.ToolOutput;
import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The SubmitToolOutputsToRunRequest model.
 */
@Fluent
public final class SubmitToolOutputsToRunRequest {

    /*
     * The list of tool outputs requested by tool calls from the specified run.
     */
    @Generated
    @JsonProperty(value = "tool_outputs")
    private final List<ToolOutput> toolOutputs;

    /**
     * Creates an instance of SubmitToolOutputsToRunRequest class.
     *
     * @param toolOutputs the toolOutputs value to set.
     */
    @Generated
    @JsonCreator
    public SubmitToolOutputsToRunRequest(@JsonProperty(value = "tool_outputs") List<ToolOutput> toolOutputs) {
        this.toolOutputs = toolOutputs;
    }

    /**
     * Get the toolOutputs property: The list of tool outputs requested by tool calls from the specified run.
     *
     * @return the toolOutputs value.
     */
    @Generated
    public List<ToolOutput> getToolOutputs() {
        return this.toolOutputs;
    }

    /*
     * If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.
     */
    @Generated
    @JsonProperty(value = "stream")
    private Boolean stream;

    /**
     * Get the stream property: If `true`, returns a stream of events that happen during the Run as server-sent events,
     * terminating when the Run enters a terminal state with a `data: [DONE]` message.
     *
     * @return the stream value.
     */
    @Generated
    public Boolean isStream() {
        return this.stream;
    }

    /**
     * Set the stream property: If `true`, returns a stream of events that happen during the Run as server-sent events,
     * terminating when the Run enters a terminal state with a `data: [DONE]` message.
     *
     * @param stream the stream value to set.
     * @return the SubmitToolOutputsToRunRequest object itself.
     */
    @Generated
    public SubmitToolOutputsToRunRequest setStream(Boolean stream) {
        this.stream = stream;
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import java.io.IOException;

/**
 * An abstract representation of the details for a run step.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = RunStepDetails.class, visible = true)
@JsonTypeName("RunStepDetails")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "message_creation", value = RunStepMessageCreationDetails.class),
    @JsonSubTypes.Type(name = "tool_calls", value = RunStepToolCallDetails.class) })
@Immutable
public class RunStepDetails {

    /**
     * Creates an instance of RunStepDetails class.
     */
    @Generated
    protected RunStepDetails() {
        this.type = RunStepType.fromString("RunStepDetails");
    }

    static RunStepDetails fromJsonKnownDiscriminator(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunStepDetails deserializedRunStepDetails = new RunStepDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                reader.skipChildren();
            }
            return deserializedRunStepDetails;
        });
    }

    /*
     * The object type.
     */
    @Generated
    @JsonTypeId
    @JsonProperty(value = "type")
    private RunStepType type;

    /**
     * Get the type property: The object type.
     *
     * @return the type value.
     */
    @Generated
    public RunStepType getType() {
        return this.type;
    }
}

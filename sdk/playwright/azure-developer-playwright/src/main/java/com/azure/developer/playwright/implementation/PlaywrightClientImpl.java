// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.developer.playwright.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.developer.playwright.MicrosoftPlaywrightServiceVersion;

/**
 * Initializes a new instance of the PlaywrightClient type.
 */
public final class PlaywrightClientImpl {
    /**
     * Supported Playwright Service API Endpoints (protocol and hostname, for example:
     * https://{region}.api.playwright.microsoft.com).
     */
    private final String endpoint;

    /**
     * Gets Supported Playwright Service API Endpoints (protocol and hostname, for example:
     * https://{region}.api.playwright.microsoft.com).
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final MicrosoftPlaywrightServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public MicrosoftPlaywrightServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The AccessTokensImpl object to access its operations.
     */
    private final AccessTokensImpl accessTokens;

    /**
     * Gets the AccessTokensImpl object to access its operations.
     * 
     * @return the AccessTokensImpl object.
     */
    public AccessTokensImpl getAccessTokens() {
        return this.accessTokens;
    }

    /**
     * The WorkspacesImpl object to access its operations.
     */
    private final WorkspacesImpl workspaces;

    /**
     * Gets the WorkspacesImpl object to access its operations.
     * 
     * @return the WorkspacesImpl object.
     */
    public WorkspacesImpl getWorkspaces() {
        return this.workspaces;
    }

    /**
     * Initializes an instance of PlaywrightClient client.
     * 
     * @param endpoint Supported Playwright Service API Endpoints (protocol and hostname, for example:
     * https://{region}.api.playwright.microsoft.com).
     * @param serviceVersion Service version.
     */
    public PlaywrightClientImpl(String endpoint, MicrosoftPlaywrightServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of PlaywrightClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Supported Playwright Service API Endpoints (protocol and hostname, for example:
     * https://{region}.api.playwright.microsoft.com).
     * @param serviceVersion Service version.
     */
    public PlaywrightClientImpl(HttpPipeline httpPipeline, String endpoint,
        MicrosoftPlaywrightServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of PlaywrightClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Supported Playwright Service API Endpoints (protocol and hostname, for example:
     * https://{region}.api.playwright.microsoft.com).
     * @param serviceVersion Service version.
     */
    public PlaywrightClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        MicrosoftPlaywrightServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.accessTokens = new AccessTokensImpl(this);
        this.workspaces = new WorkspacesImpl(this);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.chatprotocol.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The representation of a delta message received in a streaming completion. */
@Immutable
public final class ChatMessageDelta {
    /*
     * An incremental part of the text associated with the message.
     */
    @Generated
    @JsonProperty(value = "content")
    private String content;

    /*
     * The role associated with the message.
     */
    @Generated
    @JsonProperty(value = "role")
    private ChatRole role;

    /*
     * Field that allows the chat app to store and retrieve data, the structure of such data is dependant on the
     * backend
     * being used. The client must send back the data in this field unchanged in subsequent requests, until the chat
     * app
     * sends a new one. The data in this field can be used to implement stateful services, such as remembering previous
     * conversations or user preferences.
     */
    @Generated
    @JsonProperty(value = "session_state")
    private Object sessionState;

    /** Creates an instance of ChatMessageDelta class. */
    @Generated
    private ChatMessageDelta() {}

    /**
     * Get the content property: An incremental part of the text associated with the message.
     *
     * @return the content value.
     */
    @Generated
    public String getContent() {
        return this.content;
    }

    /**
     * Get the role property: The role associated with the message.
     *
     * @return the role value.
     */
    @Generated
    public ChatRole getRole() {
        return this.role;
    }

    /**
     * Get the sessionState property: Field that allows the chat app to store and retrieve data, the structure of such
     * data is dependant on the backend being used. The client must send back the data in this field unchanged in
     * subsequent requests, until the chat app sends a new one. The data in this field can be used to implement stateful
     * services, such as remembering previous conversations or user preferences.
     *
     * @return the sessionState value.
     */
    @Generated
    public Object getSessionState() {
        return this.sessionState;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Secret expiration configuration.
 */
@Fluent
public final class SecretExpiry {
    /*
     * Indicates if the secret is expirable.
     */
    @JsonProperty(value = "expirableSecret")
    private Boolean expirableSecret;

    /*
     * Number of hours after which the secret will expire.
     */
    @JsonProperty(value = "expireAfterHours")
    private Integer expireAfterHours;

    /**
     * Creates an instance of SecretExpiry class.
     */
    public SecretExpiry() {
    }

    /**
     * Get the expirableSecret property: Indicates if the secret is expirable.
     * 
     * @return the expirableSecret value.
     */
    public Boolean expirableSecret() {
        return this.expirableSecret;
    }

    /**
     * Set the expirableSecret property: Indicates if the secret is expirable.
     * 
     * @param expirableSecret the expirableSecret value to set.
     * @return the SecretExpiry object itself.
     */
    public SecretExpiry withExpirableSecret(Boolean expirableSecret) {
        this.expirableSecret = expirableSecret;
        return this;
    }

    /**
     * Get the expireAfterHours property: Number of hours after which the secret will expire.
     * 
     * @return the expireAfterHours value.
     */
    public Integer expireAfterHours() {
        return this.expireAfterHours;
    }

    /**
     * Set the expireAfterHours property: Number of hours after which the secret will expire.
     * 
     * @param expireAfterHours the expireAfterHours value to set.
     * @return the SecretExpiry object itself.
     */
    public SecretExpiry withExpireAfterHours(Integer expireAfterHours) {
        this.expireAfterHours = expireAfterHours;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

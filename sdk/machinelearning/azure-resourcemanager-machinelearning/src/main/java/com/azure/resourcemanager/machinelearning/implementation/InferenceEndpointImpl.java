// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.InferenceEndpointInner;
import com.azure.resourcemanager.machinelearning.models.InferenceEndpoint;
import com.azure.resourcemanager.machinelearning.models.InferenceEndpointProperties;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.Sku;
import java.util.Collections;
import java.util.Map;

public final class InferenceEndpointImpl
    implements InferenceEndpoint, InferenceEndpoint.Definition, InferenceEndpoint.Update {
    private InferenceEndpointInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ManagedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public InferenceEndpointProperties properties() {
        return this.innerModel().properties();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public InferenceEndpointInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String poolName;

    private String endpointName;

    public InferenceEndpointImpl withExistingInferencePool(String resourceGroupName, String workspaceName,
        String poolName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        this.poolName = poolName;
        return this;
    }

    public InferenceEndpoint create() {
        this.innerObject = serviceManager.serviceClient()
            .getInferenceEndpoints()
            .createOrUpdate(resourceGroupName, workspaceName, poolName, endpointName, this.innerModel(), Context.NONE);
        return this;
    }

    public InferenceEndpoint create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getInferenceEndpoints()
            .createOrUpdate(resourceGroupName, workspaceName, poolName, endpointName, this.innerModel(), context);
        return this;
    }

    InferenceEndpointImpl(String name,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new InferenceEndpointInner();
        this.serviceManager = serviceManager;
        this.endpointName = name;
    }

    public InferenceEndpointImpl update() {
        return this;
    }

    public InferenceEndpoint apply() {
        this.innerObject = serviceManager.serviceClient()
            .getInferenceEndpoints()
            .createOrUpdate(resourceGroupName, workspaceName, poolName, endpointName, this.innerModel(), Context.NONE);
        return this;
    }

    public InferenceEndpoint apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getInferenceEndpoints()
            .createOrUpdate(resourceGroupName, workspaceName, poolName, endpointName, this.innerModel(), context);
        return this;
    }

    InferenceEndpointImpl(InferenceEndpointInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.poolName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "inferencePools");
        this.endpointName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "endpoints");
    }

    public InferenceEndpoint refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getInferenceEndpoints()
            .getWithResponse(resourceGroupName, workspaceName, poolName, endpointName, Context.NONE)
            .getValue();
        return this;
    }

    public InferenceEndpoint refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getInferenceEndpoints()
            .getWithResponse(resourceGroupName, workspaceName, poolName, endpointName, context)
            .getValue();
        return this;
    }

    public InferenceEndpointImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public InferenceEndpointImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public InferenceEndpointImpl withProperties(InferenceEndpointProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public InferenceEndpointImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public InferenceEndpointImpl withIdentity(ManagedServiceIdentity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public InferenceEndpointImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public InferenceEndpointImpl withSku(Sku sku) {
        this.innerModel().withSku(sku);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of ACR account to be used for the Registry.
 */
@Fluent
public final class AcrDetails implements JsonSerializable<AcrDetails> {
    /*
     * Details of system created ACR account to be used for the Registry
     */
    private SystemCreatedAcrAccount systemCreatedAcrAccount;

    /**
     * Creates an instance of AcrDetails class.
     */
    public AcrDetails() {
    }

    /**
     * Get the systemCreatedAcrAccount property: Details of system created ACR account to be used for the Registry.
     * 
     * @return the systemCreatedAcrAccount value.
     */
    public SystemCreatedAcrAccount systemCreatedAcrAccount() {
        return this.systemCreatedAcrAccount;
    }

    /**
     * Set the systemCreatedAcrAccount property: Details of system created ACR account to be used for the Registry.
     * 
     * @param systemCreatedAcrAccount the systemCreatedAcrAccount value to set.
     * @return the AcrDetails object itself.
     */
    public AcrDetails withSystemCreatedAcrAccount(SystemCreatedAcrAccount systemCreatedAcrAccount) {
        this.systemCreatedAcrAccount = systemCreatedAcrAccount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (systemCreatedAcrAccount() != null) {
            systemCreatedAcrAccount().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("systemCreatedAcrAccount", this.systemCreatedAcrAccount);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AcrDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AcrDetails if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the AcrDetails.
     */
    public static AcrDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AcrDetails deserializedAcrDetails = new AcrDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("systemCreatedAcrAccount".equals(fieldName)) {
                    deserializedAcrDetails.systemCreatedAcrAccount = SystemCreatedAcrAccount.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAcrDetails;
        });
    }
}

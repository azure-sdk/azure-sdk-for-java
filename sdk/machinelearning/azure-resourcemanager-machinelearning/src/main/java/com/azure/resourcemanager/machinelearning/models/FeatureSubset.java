// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * The FeatureSubset model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "filterType")
@JsonTypeName("FeatureSubset")
@Fluent
public final class FeatureSubset extends MonitoringFeatureFilterBase {
    /*
     * [Required] The list of features to include.
     */
    @JsonProperty(value = "features", required = true)
    private List<String> features;

    /**
     * Creates an instance of FeatureSubset class.
     */
    public FeatureSubset() {
    }

    /**
     * Get the features property: [Required] The list of features to include.
     * 
     * @return the features value.
     */
    public List<String> features() {
        return this.features;
    }

    /**
     * Set the features property: [Required] The list of features to include.
     * 
     * @param features the features value to set.
     * @return the FeatureSubset object itself.
     */
    public FeatureSubset withFeatures(List<String> features) {
        this.features = features;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (features() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property features in model FeatureSubset"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FeatureSubset.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.models.FeatureWindow;
import com.azure.resourcemanager.machinelearning.models.FeaturestoreJobType;
import com.azure.resourcemanager.machinelearning.models.JobStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.Map;

/** Dto object representing the feature set job. */
@Fluent
public final class FeaturesetJobInner {
    /*
     * Specifies the created date
     */
    @JsonProperty(value = "createdDate")
    private OffsetDateTime createdDate;

    /*
     * Specifies the display name
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Specifies the duration
     */
    @JsonProperty(value = "duration")
    private Duration duration;

    /*
     * Specifies the experiment id
     */
    @JsonProperty(value = "experimentId")
    private String experimentId;

    /*
     * Specifies the backfill feature window to be materialized
     */
    @JsonProperty(value = "featureWindow")
    private FeatureWindow featureWindow;

    /*
     * Specifies the job id
     */
    @JsonProperty(value = "jobId")
    private String jobId;

    /*
     * Specifies the job status
     */
    @JsonProperty(value = "status")
    private JobStatus status;

    /*
     * Specifies the tags if any
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * Specifies the feature store job type
     */
    @JsonProperty(value = "type")
    private FeaturestoreJobType type;

    /** Creates an instance of FeaturesetJobInner class. */
    public FeaturesetJobInner() {
    }

    /**
     * Get the createdDate property: Specifies the created date.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.createdDate;
    }

    /**
     * Set the createdDate property: Specifies the created date.
     *
     * @param createdDate the createdDate value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    /**
     * Get the displayName property: Specifies the display name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Specifies the display name.
     *
     * @param displayName the displayName value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the duration property: Specifies the duration.
     *
     * @return the duration value.
     */
    public Duration duration() {
        return this.duration;
    }

    /**
     * Set the duration property: Specifies the duration.
     *
     * @param duration the duration value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withDuration(Duration duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get the experimentId property: Specifies the experiment id.
     *
     * @return the experimentId value.
     */
    public String experimentId() {
        return this.experimentId;
    }

    /**
     * Set the experimentId property: Specifies the experiment id.
     *
     * @param experimentId the experimentId value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withExperimentId(String experimentId) {
        this.experimentId = experimentId;
        return this;
    }

    /**
     * Get the featureWindow property: Specifies the backfill feature window to be materialized.
     *
     * @return the featureWindow value.
     */
    public FeatureWindow featureWindow() {
        return this.featureWindow;
    }

    /**
     * Set the featureWindow property: Specifies the backfill feature window to be materialized.
     *
     * @param featureWindow the featureWindow value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withFeatureWindow(FeatureWindow featureWindow) {
        this.featureWindow = featureWindow;
        return this;
    }

    /**
     * Get the jobId property: Specifies the job id.
     *
     * @return the jobId value.
     */
    public String jobId() {
        return this.jobId;
    }

    /**
     * Set the jobId property: Specifies the job id.
     *
     * @param jobId the jobId value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Get the status property: Specifies the job status.
     *
     * @return the status value.
     */
    public JobStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Specifies the job status.
     *
     * @param status the status value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withStatus(JobStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the tags property: Specifies the tags if any.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Specifies the tags if any.
     *
     * @param tags the tags value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the type property: Specifies the feature store job type.
     *
     * @return the type value.
     */
    public FeaturestoreJobType type() {
        return this.type;
    }

    /**
     * Set the type property: Specifies the feature store job type.
     *
     * @param type the type value to set.
     * @return the FeaturesetJobInner object itself.
     */
    public FeaturesetJobInner withType(FeaturestoreJobType type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (featureWindow() != null) {
            featureWindow().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Azure OpenAI Content Filters properties.
 */
@Fluent
public final class RaiPolicyProperties {
    /*
     * The basePolicyName property.
     */
    @JsonProperty(value = "basePolicyName")
    private String basePolicyName;

    /*
     * The completionBlocklists property.
     */
    @JsonProperty(value = "completionBlocklists")
    private List<RaiBlocklistConfig> completionBlocklists;

    /*
     * The contentFilters property.
     */
    @JsonProperty(value = "contentFilters")
    private List<RaiPolicyContentFilter> contentFilters;

    /*
     * Content Filters mode.
     */
    @JsonProperty(value = "mode")
    private RaiPolicyMode mode;

    /*
     * Content Filters policy type.
     */
    @JsonProperty(value = "type")
    private RaiPolicyType type;

    /*
     * The promptBlocklists property.
     */
    @JsonProperty(value = "promptBlocklists")
    private List<RaiBlocklistConfig> promptBlocklists;

    /**
     * Creates an instance of RaiPolicyProperties class.
     */
    public RaiPolicyProperties() {
    }

    /**
     * Get the basePolicyName property: The basePolicyName property.
     * 
     * @return the basePolicyName value.
     */
    public String basePolicyName() {
        return this.basePolicyName;
    }

    /**
     * Set the basePolicyName property: The basePolicyName property.
     * 
     * @param basePolicyName the basePolicyName value to set.
     * @return the RaiPolicyProperties object itself.
     */
    public RaiPolicyProperties withBasePolicyName(String basePolicyName) {
        this.basePolicyName = basePolicyName;
        return this;
    }

    /**
     * Get the completionBlocklists property: The completionBlocklists property.
     * 
     * @return the completionBlocklists value.
     */
    public List<RaiBlocklistConfig> completionBlocklists() {
        return this.completionBlocklists;
    }

    /**
     * Set the completionBlocklists property: The completionBlocklists property.
     * 
     * @param completionBlocklists the completionBlocklists value to set.
     * @return the RaiPolicyProperties object itself.
     */
    public RaiPolicyProperties withCompletionBlocklists(List<RaiBlocklistConfig> completionBlocklists) {
        this.completionBlocklists = completionBlocklists;
        return this;
    }

    /**
     * Get the contentFilters property: The contentFilters property.
     * 
     * @return the contentFilters value.
     */
    public List<RaiPolicyContentFilter> contentFilters() {
        return this.contentFilters;
    }

    /**
     * Set the contentFilters property: The contentFilters property.
     * 
     * @param contentFilters the contentFilters value to set.
     * @return the RaiPolicyProperties object itself.
     */
    public RaiPolicyProperties withContentFilters(List<RaiPolicyContentFilter> contentFilters) {
        this.contentFilters = contentFilters;
        return this;
    }

    /**
     * Get the mode property: Content Filters mode.
     * 
     * @return the mode value.
     */
    public RaiPolicyMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Content Filters mode.
     * 
     * @param mode the mode value to set.
     * @return the RaiPolicyProperties object itself.
     */
    public RaiPolicyProperties withMode(RaiPolicyMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the type property: Content Filters policy type.
     * 
     * @return the type value.
     */
    public RaiPolicyType type() {
        return this.type;
    }

    /**
     * Set the type property: Content Filters policy type.
     * 
     * @param type the type value to set.
     * @return the RaiPolicyProperties object itself.
     */
    public RaiPolicyProperties withType(RaiPolicyType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the promptBlocklists property: The promptBlocklists property.
     * 
     * @return the promptBlocklists value.
     */
    public List<RaiBlocklistConfig> promptBlocklists() {
        return this.promptBlocklists;
    }

    /**
     * Set the promptBlocklists property: The promptBlocklists property.
     * 
     * @param promptBlocklists the promptBlocklists value to set.
     * @return the RaiPolicyProperties object itself.
     */
    public RaiPolicyProperties withPromptBlocklists(List<RaiBlocklistConfig> promptBlocklists) {
        this.promptBlocklists = promptBlocklists;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (completionBlocklists() != null) {
            completionBlocklists().forEach(e -> e.validate());
        }
        if (contentFilters() != null) {
            contentFilters().forEach(e -> e.validate());
        }
        if (promptBlocklists() != null) {
            promptBlocklists().forEach(e -> e.validate());
        }
    }
}

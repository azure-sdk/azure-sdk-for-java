// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Indexes resource definition.
 */
@Fluent
public final class IndexesProperties extends ResourceBase {
    /*
     * Placeholder for extras.
     * Example: any index details we are prototyping for surfacing.
     */
    @JsonProperty(value = "indexConfigurations")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> indexConfigurations;

    /*
     * Reference to the Index this index was versioned off of. Null implies creation of a new versioned set.
     * Uri azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/indexes/{{previous}}
     * Should not be required to be the latest. Just one of the assets in the set.
     */
    @JsonProperty(value = "previousVersionIndexId")
    private String previousVersionIndexId;

    /*
     * Default workspace blob storage Uri. Should work across storage types and auth scenarios.
     * Uri
     * azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/datastores/workspaceblobstore/
     * paths/azureml
     */
    @JsonProperty(value = "storageUri")
    private String storageUri;

    /*
     * Set by system: format {Major-Version}.{Minor-Version}. Example 3.5, major version 3 minor version 5.
     */
    @JsonProperty(value = "version", access = JsonProperty.Access.WRITE_ONLY)
    private String version;

    /**
     * Creates an instance of IndexesProperties class.
     */
    public IndexesProperties() {
    }

    /**
     * Get the indexConfigurations property: Placeholder for extras.
     * Example: any index details we are prototyping for surfacing.
     * 
     * @return the indexConfigurations value.
     */
    public Map<String, String> indexConfigurations() {
        return this.indexConfigurations;
    }

    /**
     * Set the indexConfigurations property: Placeholder for extras.
     * Example: any index details we are prototyping for surfacing.
     * 
     * @param indexConfigurations the indexConfigurations value to set.
     * @return the IndexesProperties object itself.
     */
    public IndexesProperties withIndexConfigurations(Map<String, String> indexConfigurations) {
        this.indexConfigurations = indexConfigurations;
        return this;
    }

    /**
     * Get the previousVersionIndexId property: Reference to the Index this index was versioned off of. Null implies
     * creation of a new versioned set.
     * Uri azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/indexes/{{previous}}
     * Should not be required to be the latest. Just one of the assets in the set.
     * 
     * @return the previousVersionIndexId value.
     */
    public String previousVersionIndexId() {
        return this.previousVersionIndexId;
    }

    /**
     * Set the previousVersionIndexId property: Reference to the Index this index was versioned off of. Null implies
     * creation of a new versioned set.
     * Uri azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/indexes/{{previous}}
     * Should not be required to be the latest. Just one of the assets in the set.
     * 
     * @param previousVersionIndexId the previousVersionIndexId value to set.
     * @return the IndexesProperties object itself.
     */
    public IndexesProperties withPreviousVersionIndexId(String previousVersionIndexId) {
        this.previousVersionIndexId = previousVersionIndexId;
        return this;
    }

    /**
     * Get the storageUri property: Default workspace blob storage Uri. Should work across storage types and auth
     * scenarios.
     * Uri
     * azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/datastores/workspaceblobstore/paths/azureml.
     * 
     * @return the storageUri value.
     */
    public String storageUri() {
        return this.storageUri;
    }

    /**
     * Set the storageUri property: Default workspace blob storage Uri. Should work across storage types and auth
     * scenarios.
     * Uri
     * azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/datastores/workspaceblobstore/paths/azureml.
     * 
     * @param storageUri the storageUri value to set.
     * @return the IndexesProperties object itself.
     */
    public IndexesProperties withStorageUri(String storageUri) {
        this.storageUri = storageUri;
        return this;
    }

    /**
     * Get the version property: Set by system: format {Major-Version}.{Minor-Version}. Example 3.5, major version 3
     * minor version 5.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexesProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexesProperties withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexesProperties withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

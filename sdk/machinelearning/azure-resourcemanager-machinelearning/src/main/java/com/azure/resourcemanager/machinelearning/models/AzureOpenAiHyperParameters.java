// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Open AI hyperparameters for fine tuning.
 */
@Fluent
public final class AzureOpenAiHyperParameters implements JsonSerializable<AzureOpenAiHyperParameters> {
    /*
     * Scaling factor for the learning rate. A smaller learning rate may be useful to avoid over fitting.
     */
    private Double learningRateMultiplier;

    /*
     * Number of examples in each batch. A larger batch size means that model parameters are updated less frequently,
     * but with lower variance.
     */
    private Integer batchSize;

    /*
     * The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
     */
    private Integer nEpochs;

    /**
     * Creates an instance of AzureOpenAiHyperParameters class.
     */
    public AzureOpenAiHyperParameters() {
    }

    /**
     * Get the learningRateMultiplier property: Scaling factor for the learning rate. A smaller learning rate may be
     * useful to avoid over fitting.
     * 
     * @return the learningRateMultiplier value.
     */
    public Double learningRateMultiplier() {
        return this.learningRateMultiplier;
    }

    /**
     * Set the learningRateMultiplier property: Scaling factor for the learning rate. A smaller learning rate may be
     * useful to avoid over fitting.
     * 
     * @param learningRateMultiplier the learningRateMultiplier value to set.
     * @return the AzureOpenAiHyperParameters object itself.
     */
    public AzureOpenAiHyperParameters withLearningRateMultiplier(Double learningRateMultiplier) {
        this.learningRateMultiplier = learningRateMultiplier;
        return this;
    }

    /**
     * Get the batchSize property: Number of examples in each batch. A larger batch size means that model parameters are
     * updated less frequently, but with lower variance.
     * 
     * @return the batchSize value.
     */
    public Integer batchSize() {
        return this.batchSize;
    }

    /**
     * Set the batchSize property: Number of examples in each batch. A larger batch size means that model parameters are
     * updated less frequently, but with lower variance.
     * 
     * @param batchSize the batchSize value to set.
     * @return the AzureOpenAiHyperParameters object itself.
     */
    public AzureOpenAiHyperParameters withBatchSize(Integer batchSize) {
        this.batchSize = batchSize;
        return this;
    }

    /**
     * Get the nEpochs property: The number of epochs to train the model for. An epoch refers to one full cycle through
     * the training dataset.
     * 
     * @return the nEpochs value.
     */
    public Integer nEpochs() {
        return this.nEpochs;
    }

    /**
     * Set the nEpochs property: The number of epochs to train the model for. An epoch refers to one full cycle through
     * the training dataset.
     * 
     * @param nEpochs the nEpochs value to set.
     * @return the AzureOpenAiHyperParameters object itself.
     */
    public AzureOpenAiHyperParameters withNEpochs(Integer nEpochs) {
        this.nEpochs = nEpochs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("learningRateMultiplier", this.learningRateMultiplier);
        jsonWriter.writeNumberField("batchSize", this.batchSize);
        jsonWriter.writeNumberField("nEpochs", this.nEpochs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureOpenAiHyperParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureOpenAiHyperParameters if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureOpenAiHyperParameters.
     */
    public static AzureOpenAiHyperParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureOpenAiHyperParameters deserializedAzureOpenAiHyperParameters = new AzureOpenAiHyperParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("learningRateMultiplier".equals(fieldName)) {
                    deserializedAzureOpenAiHyperParameters.learningRateMultiplier
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("batchSize".equals(fieldName)) {
                    deserializedAzureOpenAiHyperParameters.batchSize = reader.getNullable(JsonReader::getInt);
                } else if ("nEpochs".equals(fieldName)) {
                    deserializedAzureOpenAiHyperParameters.nEpochs = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureOpenAiHyperParameters;
        });
    }
}

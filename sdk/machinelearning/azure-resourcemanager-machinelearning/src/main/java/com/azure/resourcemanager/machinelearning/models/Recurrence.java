// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The workflow trigger recurrence for ComputeStartStop schedule type. */
@Fluent
public final class Recurrence {
    /*
     * [Required] The frequency to trigger schedule.
     */
    @JsonProperty(value = "frequency")
    private RecurrenceFrequency frequency;

    /*
     * [Required] Specifies schedule interval in conjunction with frequency
     */
    @JsonProperty(value = "interval")
    private Integer interval;

    /*
     * The start time in yyyy-MM-ddTHH:mm:ss format.
     */
    @JsonProperty(value = "startTime")
    private String startTime;

    /*
     * Specifies time zone in which the schedule runs.
     * TimeZone should follow Windows time zone format. Refer:
     * https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
     */
    @JsonProperty(value = "timeZone")
    private String timeZone;

    /*
     * [Required] The recurrence schedule.
     */
    @JsonProperty(value = "schedule")
    private RecurrenceSchedule schedule;

    /** Creates an instance of Recurrence class. */
    public Recurrence() {
    }

    /**
     * Get the frequency property: [Required] The frequency to trigger schedule.
     *
     * @return the frequency value.
     */
    public RecurrenceFrequency frequency() {
        return this.frequency;
    }

    /**
     * Set the frequency property: [Required] The frequency to trigger schedule.
     *
     * @param frequency the frequency value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withFrequency(RecurrenceFrequency frequency) {
        this.frequency = frequency;
        return this;
    }

    /**
     * Get the interval property: [Required] Specifies schedule interval in conjunction with frequency.
     *
     * @return the interval value.
     */
    public Integer interval() {
        return this.interval;
    }

    /**
     * Set the interval property: [Required] Specifies schedule interval in conjunction with frequency.
     *
     * @param interval the interval value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withInterval(Integer interval) {
        this.interval = interval;
        return this;
    }

    /**
     * Get the startTime property: The start time in yyyy-MM-ddTHH:mm:ss format.
     *
     * @return the startTime value.
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The start time in yyyy-MM-ddTHH:mm:ss format.
     *
     * @param startTime the startTime value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the timeZone property: Specifies time zone in which the schedule runs. TimeZone should follow Windows time
     * zone format. Refer:
     * https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11.
     *
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: Specifies time zone in which the schedule runs. TimeZone should follow Windows time
     * zone format. Refer:
     * https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11.
     *
     * @param timeZone the timeZone value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the schedule property: [Required] The recurrence schedule.
     *
     * @return the schedule value.
     */
    public RecurrenceSchedule schedule() {
        return this.schedule;
    }

    /**
     * Set the schedule property: [Required] The recurrence schedule.
     *
     * @param schedule the schedule value to set.
     * @return the Recurrence object itself.
     */
    public Recurrence withSchedule(RecurrenceSchedule schedule) {
        this.schedule = schedule;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (schedule() != null) {
            schedule().validate();
        }
    }
}

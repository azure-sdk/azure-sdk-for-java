// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The PromptSettings model.
 */
@Fluent
public final class PromptSettings implements JsonSerializable<PromptSettings> {
    /*
     * The enableChainOfDensity property.
     */
    private Boolean enableChainOfDensity;

    /*
     * The enableChainOfThought property.
     */
    private Boolean enableChainOfThought;

    /*
     * The maxLenSummary property.
     */
    private Integer maxLenSummary;

    /**
     * Creates an instance of PromptSettings class.
     */
    public PromptSettings() {
    }

    /**
     * Get the enableChainOfDensity property: The enableChainOfDensity property.
     * 
     * @return the enableChainOfDensity value.
     */
    public Boolean enableChainOfDensity() {
        return this.enableChainOfDensity;
    }

    /**
     * Set the enableChainOfDensity property: The enableChainOfDensity property.
     * 
     * @param enableChainOfDensity the enableChainOfDensity value to set.
     * @return the PromptSettings object itself.
     */
    public PromptSettings withEnableChainOfDensity(Boolean enableChainOfDensity) {
        this.enableChainOfDensity = enableChainOfDensity;
        return this;
    }

    /**
     * Get the enableChainOfThought property: The enableChainOfThought property.
     * 
     * @return the enableChainOfThought value.
     */
    public Boolean enableChainOfThought() {
        return this.enableChainOfThought;
    }

    /**
     * Set the enableChainOfThought property: The enableChainOfThought property.
     * 
     * @param enableChainOfThought the enableChainOfThought value to set.
     * @return the PromptSettings object itself.
     */
    public PromptSettings withEnableChainOfThought(Boolean enableChainOfThought) {
        this.enableChainOfThought = enableChainOfThought;
        return this;
    }

    /**
     * Get the maxLenSummary property: The maxLenSummary property.
     * 
     * @return the maxLenSummary value.
     */
    public Integer maxLenSummary() {
        return this.maxLenSummary;
    }

    /**
     * Set the maxLenSummary property: The maxLenSummary property.
     * 
     * @param maxLenSummary the maxLenSummary value to set.
     * @return the PromptSettings object itself.
     */
    public PromptSettings withMaxLenSummary(Integer maxLenSummary) {
        this.maxLenSummary = maxLenSummary;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enableChainOfDensity", this.enableChainOfDensity);
        jsonWriter.writeBooleanField("enableChainOfThought", this.enableChainOfThought);
        jsonWriter.writeNumberField("maxLenSummary", this.maxLenSummary);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PromptSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PromptSettings if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PromptSettings.
     */
    public static PromptSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PromptSettings deserializedPromptSettings = new PromptSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableChainOfDensity".equals(fieldName)) {
                    deserializedPromptSettings.enableChainOfDensity = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableChainOfThought".equals(fieldName)) {
                    deserializedPromptSettings.enableChainOfThought = reader.getNullable(JsonReader::getBoolean);
                } else if ("maxLenSummary".equals(fieldName)) {
                    deserializedPromptSettings.maxLenSummary = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPromptSettings;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Request payload for creating a backfill request for a given feature set version. */
@Fluent
public final class FeaturesetVersionBackfillRequest {
    /*
     * Specifies description
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Specifies description
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Specifies the backfill feature window to be materialized
     */
    @JsonProperty(value = "featureWindow")
    private FeatureWindow featureWindow;

    /*
     * Specifies the compute resource settings
     */
    @JsonProperty(value = "resource")
    private MaterializationComputeResource resource;

    /*
     * Specifies the spark compute settings
     */
    @JsonProperty(value = "sparkConfiguration")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> sparkConfiguration;

    /*
     * Specifies the tags
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /** Creates an instance of FeaturesetVersionBackfillRequest class. */
    public FeaturesetVersionBackfillRequest() {
    }

    /**
     * Get the description property: Specifies description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Specifies description.
     *
     * @param description the description value to set.
     * @return the FeaturesetVersionBackfillRequest object itself.
     */
    public FeaturesetVersionBackfillRequest withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the displayName property: Specifies description.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Specifies description.
     *
     * @param displayName the displayName value to set.
     * @return the FeaturesetVersionBackfillRequest object itself.
     */
    public FeaturesetVersionBackfillRequest withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the featureWindow property: Specifies the backfill feature window to be materialized.
     *
     * @return the featureWindow value.
     */
    public FeatureWindow featureWindow() {
        return this.featureWindow;
    }

    /**
     * Set the featureWindow property: Specifies the backfill feature window to be materialized.
     *
     * @param featureWindow the featureWindow value to set.
     * @return the FeaturesetVersionBackfillRequest object itself.
     */
    public FeaturesetVersionBackfillRequest withFeatureWindow(FeatureWindow featureWindow) {
        this.featureWindow = featureWindow;
        return this;
    }

    /**
     * Get the resource property: Specifies the compute resource settings.
     *
     * @return the resource value.
     */
    public MaterializationComputeResource resource() {
        return this.resource;
    }

    /**
     * Set the resource property: Specifies the compute resource settings.
     *
     * @param resource the resource value to set.
     * @return the FeaturesetVersionBackfillRequest object itself.
     */
    public FeaturesetVersionBackfillRequest withResource(MaterializationComputeResource resource) {
        this.resource = resource;
        return this;
    }

    /**
     * Get the sparkConfiguration property: Specifies the spark compute settings.
     *
     * @return the sparkConfiguration value.
     */
    public Map<String, String> sparkConfiguration() {
        return this.sparkConfiguration;
    }

    /**
     * Set the sparkConfiguration property: Specifies the spark compute settings.
     *
     * @param sparkConfiguration the sparkConfiguration value to set.
     * @return the FeaturesetVersionBackfillRequest object itself.
     */
    public FeaturesetVersionBackfillRequest withSparkConfiguration(Map<String, String> sparkConfiguration) {
        this.sparkConfiguration = sparkConfiguration;
        return this;
    }

    /**
     * Get the tags property: Specifies the tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Specifies the tags.
     *
     * @param tags the tags value to set.
     * @return the FeaturesetVersionBackfillRequest object itself.
     */
    public FeaturesetVersionBackfillRequest withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (featureWindow() != null) {
            featureWindow().validate();
        }
        if (resource() != null) {
            resource().validate();
        }
    }
}

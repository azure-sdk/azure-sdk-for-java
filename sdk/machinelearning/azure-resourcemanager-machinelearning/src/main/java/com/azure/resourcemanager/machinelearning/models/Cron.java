// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The workflow trigger cron for ComputeStartStop schedule type. */
@Fluent
public final class Cron {
    /*
     * The start time in yyyy-MM-ddTHH:mm:ss format.
     */
    @JsonProperty(value = "startTime")
    private String startTime;

    /*
     * Specifies time zone in which the schedule runs.
     * TimeZone should follow Windows time zone format. Refer:
     * https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11
     */
    @JsonProperty(value = "timeZone")
    private String timeZone;

    /*
     * [Required] Specifies cron expression of schedule.
     * The expression should follow NCronTab format.
     */
    @JsonProperty(value = "expression")
    private String expression;

    /**
     * Get the startTime property: The start time in yyyy-MM-ddTHH:mm:ss format.
     *
     * @return the startTime value.
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The start time in yyyy-MM-ddTHH:mm:ss format.
     *
     * @param startTime the startTime value to set.
     * @return the Cron object itself.
     */
    public Cron withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the timeZone property: Specifies time zone in which the schedule runs. TimeZone should follow Windows time
     * zone format. Refer:
     * https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11.
     *
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: Specifies time zone in which the schedule runs. TimeZone should follow Windows time
     * zone format. Refer:
     * https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11.
     *
     * @param timeZone the timeZone value to set.
     * @return the Cron object itself.
     */
    public Cron withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the expression property: [Required] Specifies cron expression of schedule. The expression should follow
     * NCronTab format.
     *
     * @return the expression value.
     */
    public String expression() {
        return this.expression;
    }

    /**
     * Set the expression property: [Required] Specifies cron expression of schedule. The expression should follow
     * NCronTab format.
     *
     * @param expression the expression value to set.
     * @return the Cron object itself.
     */
    public Cron withExpression(String expression) {
        this.expression = expression;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The PoolStatus model. */
@Fluent
public final class PoolStatusInner {
    /*
     * Gets or sets the actual number of instances in the pool.
     */
    @JsonProperty(value = "actualCapacity")
    private Integer actualCapacity;

    /*
     * Gets or sets the actual number of groups in the pool.
     */
    @JsonProperty(value = "groupCount")
    private Integer groupCount;

    /*
     * Gets or sets the requested number of instances for the pool.
     */
    @JsonProperty(value = "requestedCapacity")
    private Integer requestedCapacity;

    /*
     * Gets or sets the number of instances in the pool reserved by the system.
     */
    @JsonProperty(value = "reservedCapacity")
    private Integer reservedCapacity;

    /** Creates an instance of PoolStatusInner class. */
    public PoolStatusInner() {
    }

    /**
     * Get the actualCapacity property: Gets or sets the actual number of instances in the pool.
     *
     * @return the actualCapacity value.
     */
    public Integer actualCapacity() {
        return this.actualCapacity;
    }

    /**
     * Set the actualCapacity property: Gets or sets the actual number of instances in the pool.
     *
     * @param actualCapacity the actualCapacity value to set.
     * @return the PoolStatusInner object itself.
     */
    public PoolStatusInner withActualCapacity(Integer actualCapacity) {
        this.actualCapacity = actualCapacity;
        return this;
    }

    /**
     * Get the groupCount property: Gets or sets the actual number of groups in the pool.
     *
     * @return the groupCount value.
     */
    public Integer groupCount() {
        return this.groupCount;
    }

    /**
     * Set the groupCount property: Gets or sets the actual number of groups in the pool.
     *
     * @param groupCount the groupCount value to set.
     * @return the PoolStatusInner object itself.
     */
    public PoolStatusInner withGroupCount(Integer groupCount) {
        this.groupCount = groupCount;
        return this;
    }

    /**
     * Get the requestedCapacity property: Gets or sets the requested number of instances for the pool.
     *
     * @return the requestedCapacity value.
     */
    public Integer requestedCapacity() {
        return this.requestedCapacity;
    }

    /**
     * Set the requestedCapacity property: Gets or sets the requested number of instances for the pool.
     *
     * @param requestedCapacity the requestedCapacity value to set.
     * @return the PoolStatusInner object itself.
     */
    public PoolStatusInner withRequestedCapacity(Integer requestedCapacity) {
        this.requestedCapacity = requestedCapacity;
        return this;
    }

    /**
     * Get the reservedCapacity property: Gets or sets the number of instances in the pool reserved by the system.
     *
     * @return the reservedCapacity value.
     */
    public Integer reservedCapacity() {
        return this.reservedCapacity;
    }

    /**
     * Set the reservedCapacity property: Gets or sets the number of instances in the pool reserved by the system.
     *
     * @param reservedCapacity the reservedCapacity value to set.
     * @return the PoolStatusInner object itself.
     */
    public PoolStatusInner withReservedCapacity(Integer reservedCapacity) {
        this.reservedCapacity = reservedCapacity;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

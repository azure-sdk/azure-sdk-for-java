// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Package input path specified with a resource id.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "inputPathType",
    defaultImpl = PackageInputPathId.class,
    visible = true)
@JsonTypeName("PathId")
@Fluent
public final class PackageInputPathId extends PackageInputPathBase {
    /*
     * [Required] Input path type for package inputs.
     */
    @JsonTypeId
    @JsonProperty(value = "inputPathType", required = true)
    private InputPathType inputPathType = InputPathType.PATH_ID;

    /*
     * Input resource id.
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /**
     * Creates an instance of PackageInputPathId class.
     */
    public PackageInputPathId() {
    }

    /**
     * Get the inputPathType property: [Required] Input path type for package inputs.
     * 
     * @return the inputPathType value.
     */
    @Override
    public InputPathType inputPathType() {
        return this.inputPathType;
    }

    /**
     * Get the resourceId property: Input resource id.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Input resource id.
     * 
     * @param resourceId the resourceId value to set.
     * @return the PackageInputPathId object itself.
     */
    public PackageInputPathId withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

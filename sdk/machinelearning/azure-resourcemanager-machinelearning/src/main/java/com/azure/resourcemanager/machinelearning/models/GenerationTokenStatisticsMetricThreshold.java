// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Generation token statistics metric threshold definition. */
@Fluent
public final class GenerationTokenStatisticsMetricThreshold {
    /*
     * [Required] Gets or sets the feature attribution metric to calculate.
     */
    @JsonProperty(value = "metric", required = true)
    private GenerationTokenStatisticsMetric metric;

    /*
     * Gets or sets the threshold value.
     * If null, a default value will be set depending on the selected metric.
     */
    @JsonProperty(value = "threshold")
    private MonitoringThreshold threshold;

    /** Creates an instance of GenerationTokenStatisticsMetricThreshold class. */
    public GenerationTokenStatisticsMetricThreshold() {
    }

    /**
     * Get the metric property: [Required] Gets or sets the feature attribution metric to calculate.
     *
     * @return the metric value.
     */
    public GenerationTokenStatisticsMetric metric() {
        return this.metric;
    }

    /**
     * Set the metric property: [Required] Gets or sets the feature attribution metric to calculate.
     *
     * @param metric the metric value to set.
     * @return the GenerationTokenStatisticsMetricThreshold object itself.
     */
    public GenerationTokenStatisticsMetricThreshold withMetric(GenerationTokenStatisticsMetric metric) {
        this.metric = metric;
        return this;
    }

    /**
     * Get the threshold property: Gets or sets the threshold value. If null, a default value will be set depending on
     * the selected metric.
     *
     * @return the threshold value.
     */
    public MonitoringThreshold threshold() {
        return this.threshold;
    }

    /**
     * Set the threshold property: Gets or sets the threshold value. If null, a default value will be set depending on
     * the selected metric.
     *
     * @param threshold the threshold value to set.
     * @return the GenerationTokenStatisticsMetricThreshold object itself.
     */
    public GenerationTokenStatisticsMetricThreshold withThreshold(MonitoringThreshold threshold) {
        this.threshold = threshold;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (metric() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property metric in model GenerationTokenStatisticsMetricThreshold"));
        }
        if (threshold() != null) {
            threshold().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GenerationTokenStatisticsMetricThreshold.class);
}

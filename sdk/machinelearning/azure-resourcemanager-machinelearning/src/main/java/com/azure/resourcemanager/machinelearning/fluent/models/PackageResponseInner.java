// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.models.BaseEnvironmentSource;
import com.azure.resourcemanager.machinelearning.models.InferencingServer;
import com.azure.resourcemanager.machinelearning.models.ModelConfiguration;
import com.azure.resourcemanager.machinelearning.models.ModelPackageInput;
import com.azure.resourcemanager.machinelearning.models.PackageBuildState;
import com.azure.resourcemanager.machinelearning.models.PackageRequest;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Package response returned after async package operation completes successfully. */
@Fluent
public final class PackageResponseInner extends PackageRequest {
    /*
     * Build id of the image build operation.
     */
    @JsonProperty(value = "buildId", access = JsonProperty.Access.WRITE_ONLY)
    private String buildId;

    /*
     * Build state of the image build operation.
     */
    @JsonProperty(value = "buildState", access = JsonProperty.Access.WRITE_ONLY)
    private PackageBuildState buildState;

    /*
     * Log url of the image build operation.
     */
    @JsonProperty(value = "logUrl", access = JsonProperty.Access.WRITE_ONLY)
    private String logUrl;

    /*
     * Asset ID of the target environment created by package operation.
     */
    @JsonProperty(value = "targetEnvironmentId", access = JsonProperty.Access.WRITE_ONLY)
    private String targetEnvironmentId;

    /** Creates an instance of PackageResponseInner class. */
    public PackageResponseInner() {
    }

    /**
     * Get the buildId property: Build id of the image build operation.
     *
     * @return the buildId value.
     */
    public String buildId() {
        return this.buildId;
    }

    /**
     * Get the buildState property: Build state of the image build operation.
     *
     * @return the buildState value.
     */
    public PackageBuildState buildState() {
        return this.buildState;
    }

    /**
     * Get the logUrl property: Log url of the image build operation.
     *
     * @return the logUrl value.
     */
    public String logUrl() {
        return this.logUrl;
    }

    /**
     * Get the targetEnvironmentId property: Asset ID of the target environment created by package operation.
     *
     * @return the targetEnvironmentId value.
     */
    public String targetEnvironmentId() {
        return this.targetEnvironmentId;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withBaseEnvironmentSource(BaseEnvironmentSource baseEnvironmentSource) {
        super.withBaseEnvironmentSource(baseEnvironmentSource);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withEnvironmentVariables(Map<String, String> environmentVariables) {
        super.withEnvironmentVariables(environmentVariables);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withInferencingServer(InferencingServer inferencingServer) {
        super.withInferencingServer(inferencingServer);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withInputs(List<ModelPackageInput> inputs) {
        super.withInputs(inputs);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withModelConfiguration(ModelConfiguration modelConfiguration) {
        super.withModelConfiguration(modelConfiguration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withTargetEnvironmentName(String targetEnvironmentName) {
        super.withTargetEnvironmentName(targetEnvironmentName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PackageResponseInner withTargetEnvironmentVersion(String targetEnvironmentVersion) {
        super.withTargetEnvironmentVersion(targetEnvironmentVersion);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.models.IsolationMode;
import com.azure.resourcemanager.machinelearning.models.OutboundRule;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * Managed Network settings for a machine learning workspace.
 */
@Fluent
public final class ManagedNetworkSettingsInner {
    /*
     * Isolation mode for the managed network of a machine learning workspace.
     */
    @JsonProperty(value = "isolationMode")
    private IsolationMode isolationMode;

    /*
     * The networkId property.
     */
    @JsonProperty(value = "networkId", access = JsonProperty.Access.WRITE_ONLY)
    private String networkId;

    /*
     * Dictionary of <OutboundRule>
     */
    @JsonProperty(value = "outboundRules")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, OutboundRule> outboundRules;

    /*
     * Status of the Provisioning for the managed network of a machine learning workspace.
     */
    @JsonProperty(value = "status")
    private ManagedNetworkProvisionStatusInner status;

    /*
     * Detail isolation modes for the managed network of a machine learning workspace.
     */
    @JsonProperty(value = "changeableIsolationModes", access = JsonProperty.Access.WRITE_ONLY)
    private List<IsolationMode> changeableIsolationModes;

    /**
     * Creates an instance of ManagedNetworkSettingsInner class.
     */
    public ManagedNetworkSettingsInner() {
    }

    /**
     * Get the isolationMode property: Isolation mode for the managed network of a machine learning workspace.
     * 
     * @return the isolationMode value.
     */
    public IsolationMode isolationMode() {
        return this.isolationMode;
    }

    /**
     * Set the isolationMode property: Isolation mode for the managed network of a machine learning workspace.
     * 
     * @param isolationMode the isolationMode value to set.
     * @return the ManagedNetworkSettingsInner object itself.
     */
    public ManagedNetworkSettingsInner withIsolationMode(IsolationMode isolationMode) {
        this.isolationMode = isolationMode;
        return this;
    }

    /**
     * Get the networkId property: The networkId property.
     * 
     * @return the networkId value.
     */
    public String networkId() {
        return this.networkId;
    }

    /**
     * Get the outboundRules property: Dictionary of &lt;OutboundRule&gt;.
     * 
     * @return the outboundRules value.
     */
    public Map<String, OutboundRule> outboundRules() {
        return this.outboundRules;
    }

    /**
     * Set the outboundRules property: Dictionary of &lt;OutboundRule&gt;.
     * 
     * @param outboundRules the outboundRules value to set.
     * @return the ManagedNetworkSettingsInner object itself.
     */
    public ManagedNetworkSettingsInner withOutboundRules(Map<String, OutboundRule> outboundRules) {
        this.outboundRules = outboundRules;
        return this;
    }

    /**
     * Get the status property: Status of the Provisioning for the managed network of a machine learning workspace.
     * 
     * @return the status value.
     */
    public ManagedNetworkProvisionStatusInner status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the Provisioning for the managed network of a machine learning workspace.
     * 
     * @param status the status value to set.
     * @return the ManagedNetworkSettingsInner object itself.
     */
    public ManagedNetworkSettingsInner withStatus(ManagedNetworkProvisionStatusInner status) {
        this.status = status;
        return this;
    }

    /**
     * Get the changeableIsolationModes property: Detail isolation modes for the managed network of a machine learning
     * workspace.
     * 
     * @return the changeableIsolationModes value.
     */
    public List<IsolationMode> changeableIsolationModes() {
        return this.changeableIsolationModes;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (outboundRules() != null) {
            outboundRules().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
        if (status() != null) {
            status().validate();
        }
    }
}

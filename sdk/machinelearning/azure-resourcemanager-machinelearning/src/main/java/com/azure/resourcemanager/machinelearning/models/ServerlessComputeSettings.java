// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The ServerlessComputeSettings model.
 */
@Fluent
public final class ServerlessComputeSettings {
    /*
     * The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
     */
    @JsonProperty(value = "serverlessComputeCustomSubnet")
    private String serverlessComputeCustomSubnet;

    /*
     * The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a
     * workspace with private endpoint
     */
    @JsonProperty(value = "serverlessComputeNoPublicIP")
    private Boolean serverlessComputeNoPublicIp;

    /**
     * Creates an instance of ServerlessComputeSettings class.
     */
    public ServerlessComputeSettings() {
    }

    /**
     * Get the serverlessComputeCustomSubnet property: The resource ID of an existing virtual network subnet in which
     * serverless compute nodes should be deployed.
     * 
     * @return the serverlessComputeCustomSubnet value.
     */
    public String serverlessComputeCustomSubnet() {
        return this.serverlessComputeCustomSubnet;
    }

    /**
     * Set the serverlessComputeCustomSubnet property: The resource ID of an existing virtual network subnet in which
     * serverless compute nodes should be deployed.
     * 
     * @param serverlessComputeCustomSubnet the serverlessComputeCustomSubnet value to set.
     * @return the ServerlessComputeSettings object itself.
     */
    public ServerlessComputeSettings withServerlessComputeCustomSubnet(String serverlessComputeCustomSubnet) {
        this.serverlessComputeCustomSubnet = serverlessComputeCustomSubnet;
        return this;
    }

    /**
     * Get the serverlessComputeNoPublicIp property: The flag to signal if serverless compute nodes deployed in custom
     * vNet would have no public IP addresses for a workspace with private endpoint.
     * 
     * @return the serverlessComputeNoPublicIp value.
     */
    public Boolean serverlessComputeNoPublicIp() {
        return this.serverlessComputeNoPublicIp;
    }

    /**
     * Set the serverlessComputeNoPublicIp property: The flag to signal if serverless compute nodes deployed in custom
     * vNet would have no public IP addresses for a workspace with private endpoint.
     * 
     * @param serverlessComputeNoPublicIp the serverlessComputeNoPublicIp value to set.
     * @return the ServerlessComputeSettings object itself.
     */
    public ServerlessComputeSettings withServerlessComputeNoPublicIp(Boolean serverlessComputeNoPublicIp) {
        this.serverlessComputeNoPublicIp = serverlessComputeNoPublicIp;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

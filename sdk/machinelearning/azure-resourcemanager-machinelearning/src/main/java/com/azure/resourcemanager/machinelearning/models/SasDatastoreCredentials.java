// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SAS datastore credentials configuration.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "credentialsType",
    defaultImpl = SasDatastoreCredentials.class,
    visible = true)
@JsonTypeName("Sas")
@Fluent
public final class SasDatastoreCredentials extends DatastoreCredentials {
    /*
     * [Required] Credential type used to authentication with storage.
     */
    @JsonTypeId
    @JsonProperty(value = "credentialsType", required = true)
    private CredentialsType credentialsType = CredentialsType.SAS;

    /*
     * [Required] Storage container secrets.
     */
    @JsonProperty(value = "secrets")
    private SasDatastoreSecrets secrets;

    /**
     * Creates an instance of SasDatastoreCredentials class.
     */
    public SasDatastoreCredentials() {
    }

    /**
     * Get the credentialsType property: [Required] Credential type used to authentication with storage.
     * 
     * @return the credentialsType value.
     */
    @Override
    public CredentialsType credentialsType() {
        return this.credentialsType;
    }

    /**
     * Get the secrets property: [Required] Storage container secrets.
     * 
     * @return the secrets value.
     */
    public SasDatastoreSecrets secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets property: [Required] Storage container secrets.
     * 
     * @param secrets the secrets value to set.
     * @return the SasDatastoreCredentials object itself.
     */
    public SasDatastoreCredentials withSecrets(SasDatastoreSecrets secrets) {
        this.secrets = secrets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (secrets() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property secrets in model SasDatastoreCredentials"));
        } else {
            secrets().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SasDatastoreCredentials.class);
}

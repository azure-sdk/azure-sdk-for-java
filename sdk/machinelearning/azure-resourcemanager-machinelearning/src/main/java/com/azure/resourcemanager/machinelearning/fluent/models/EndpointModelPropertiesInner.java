// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.models.EndpointModelDeprecationProperties;
import com.azure.resourcemanager.machinelearning.models.EndpointModelSkuProperties;
import com.azure.resourcemanager.machinelearning.models.ModelLifecycleStatus;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Endpoint Model properties.
 */
@Fluent
public final class EndpointModelPropertiesInner implements JsonSerializable<EndpointModelPropertiesInner> {
    /*
     * The capabilities.
     */
    private Map<String, String> capabilities;

    /*
     * The deprecation property.
     */
    private EndpointModelDeprecationProperties deprecation;

    /*
     * The capabilities for finetune models.
     */
    private Map<String, String> finetuneCapabilities;

    /*
     * Deployment model format.
     */
    private String format;

    /*
     * If the model is default version.
     */
    private Boolean isDefaultVersion;

    /*
     * Model lifecycle status.
     */
    private ModelLifecycleStatus lifecycleStatus;

    /*
     * The max capacity.
     */
    private Integer maxCapacity;

    /*
     * Deployment model name.
     */
    private String name;

    /*
     * The list of Model Sku.
     */
    private List<EndpointModelSkuProperties> skus;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    private SystemData systemData;

    /*
     * Optional. Deployment model version. If version is not specified, a default version will be assigned. The default
     * version is different for different models and might change when there is new version available for a model.
     * Default version for a model could be found from list models API.
     */
    private String version;

    /**
     * Creates an instance of EndpointModelPropertiesInner class.
     */
    public EndpointModelPropertiesInner() {
    }

    /**
     * Get the capabilities property: The capabilities.
     * 
     * @return the capabilities value.
     */
    public Map<String, String> capabilities() {
        return this.capabilities;
    }

    /**
     * Set the capabilities property: The capabilities.
     * 
     * @param capabilities the capabilities value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withCapabilities(Map<String, String> capabilities) {
        this.capabilities = capabilities;
        return this;
    }

    /**
     * Get the deprecation property: The deprecation property.
     * 
     * @return the deprecation value.
     */
    public EndpointModelDeprecationProperties deprecation() {
        return this.deprecation;
    }

    /**
     * Set the deprecation property: The deprecation property.
     * 
     * @param deprecation the deprecation value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withDeprecation(EndpointModelDeprecationProperties deprecation) {
        this.deprecation = deprecation;
        return this;
    }

    /**
     * Get the finetuneCapabilities property: The capabilities for finetune models.
     * 
     * @return the finetuneCapabilities value.
     */
    public Map<String, String> finetuneCapabilities() {
        return this.finetuneCapabilities;
    }

    /**
     * Set the finetuneCapabilities property: The capabilities for finetune models.
     * 
     * @param finetuneCapabilities the finetuneCapabilities value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withFinetuneCapabilities(Map<String, String> finetuneCapabilities) {
        this.finetuneCapabilities = finetuneCapabilities;
        return this;
    }

    /**
     * Get the format property: Deployment model format.
     * 
     * @return the format value.
     */
    public String format() {
        return this.format;
    }

    /**
     * Set the format property: Deployment model format.
     * 
     * @param format the format value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withFormat(String format) {
        this.format = format;
        return this;
    }

    /**
     * Get the isDefaultVersion property: If the model is default version.
     * 
     * @return the isDefaultVersion value.
     */
    public Boolean isDefaultVersion() {
        return this.isDefaultVersion;
    }

    /**
     * Set the isDefaultVersion property: If the model is default version.
     * 
     * @param isDefaultVersion the isDefaultVersion value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withIsDefaultVersion(Boolean isDefaultVersion) {
        this.isDefaultVersion = isDefaultVersion;
        return this;
    }

    /**
     * Get the lifecycleStatus property: Model lifecycle status.
     * 
     * @return the lifecycleStatus value.
     */
    public ModelLifecycleStatus lifecycleStatus() {
        return this.lifecycleStatus;
    }

    /**
     * Set the lifecycleStatus property: Model lifecycle status.
     * 
     * @param lifecycleStatus the lifecycleStatus value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withLifecycleStatus(ModelLifecycleStatus lifecycleStatus) {
        this.lifecycleStatus = lifecycleStatus;
        return this;
    }

    /**
     * Get the maxCapacity property: The max capacity.
     * 
     * @return the maxCapacity value.
     */
    public Integer maxCapacity() {
        return this.maxCapacity;
    }

    /**
     * Set the maxCapacity property: The max capacity.
     * 
     * @param maxCapacity the maxCapacity value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withMaxCapacity(Integer maxCapacity) {
        this.maxCapacity = maxCapacity;
        return this;
    }

    /**
     * Get the name property: Deployment model name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Deployment model name.
     * 
     * @param name the name value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the skus property: The list of Model Sku.
     * 
     * @return the skus value.
     */
    public List<EndpointModelSkuProperties> skus() {
        return this.skus;
    }

    /**
     * Set the skus property: The list of Model Sku.
     * 
     * @param skus the skus value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withSkus(List<EndpointModelSkuProperties> skus) {
        this.skus = skus;
        return this;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the version property: Optional. Deployment model version. If version is not specified, a default version will
     * be assigned. The default version is different for different models and might change when there is new version
     * available for a model. Default version for a model could be found from list models API.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Optional. Deployment model version. If version is not specified, a default version will
     * be assigned. The default version is different for different models and might change when there is new version
     * available for a model. Default version for a model could be found from list models API.
     * 
     * @param version the version value to set.
     * @return the EndpointModelPropertiesInner object itself.
     */
    public EndpointModelPropertiesInner withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deprecation() != null) {
            deprecation().validate();
        }
        if (skus() != null) {
            skus().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("capabilities", this.capabilities, (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("deprecation", this.deprecation);
        jsonWriter.writeMapField("finetuneCapabilities", this.finetuneCapabilities,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("format", this.format);
        jsonWriter.writeBooleanField("isDefaultVersion", this.isDefaultVersion);
        jsonWriter.writeStringField("lifecycleStatus",
            this.lifecycleStatus == null ? null : this.lifecycleStatus.toString());
        jsonWriter.writeNumberField("maxCapacity", this.maxCapacity);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeArrayField("skus", this.skus, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("version", this.version);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EndpointModelPropertiesInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EndpointModelPropertiesInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EndpointModelPropertiesInner.
     */
    public static EndpointModelPropertiesInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EndpointModelPropertiesInner deserializedEndpointModelPropertiesInner = new EndpointModelPropertiesInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("capabilities".equals(fieldName)) {
                    Map<String, String> capabilities = reader.readMap(reader1 -> reader1.getString());
                    deserializedEndpointModelPropertiesInner.capabilities = capabilities;
                } else if ("deprecation".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.deprecation
                        = EndpointModelDeprecationProperties.fromJson(reader);
                } else if ("finetuneCapabilities".equals(fieldName)) {
                    Map<String, String> finetuneCapabilities = reader.readMap(reader1 -> reader1.getString());
                    deserializedEndpointModelPropertiesInner.finetuneCapabilities = finetuneCapabilities;
                } else if ("format".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.format = reader.getString();
                } else if ("isDefaultVersion".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.isDefaultVersion
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("lifecycleStatus".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.lifecycleStatus
                        = ModelLifecycleStatus.fromString(reader.getString());
                } else if ("maxCapacity".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.maxCapacity = reader.getNullable(JsonReader::getInt);
                } else if ("name".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.name = reader.getString();
                } else if ("skus".equals(fieldName)) {
                    List<EndpointModelSkuProperties> skus
                        = reader.readArray(reader1 -> EndpointModelSkuProperties.fromJson(reader1));
                    deserializedEndpointModelPropertiesInner.skus = skus;
                } else if ("systemData".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.systemData = SystemData.fromJson(reader);
                } else if ("version".equals(fieldName)) {
                    deserializedEndpointModelPropertiesInner.version = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpointModelPropertiesInner;
        });
    }
}

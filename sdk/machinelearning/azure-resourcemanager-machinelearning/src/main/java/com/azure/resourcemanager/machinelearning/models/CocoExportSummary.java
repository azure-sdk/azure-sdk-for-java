// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.machinelearning.fluent.models.ExportSummaryInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The CocoExportSummary model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "format", defaultImpl = CocoExportSummary.class, visible = true)
@JsonTypeName("Coco")
@Immutable
public final class CocoExportSummary extends ExportSummaryInner {
    /*
     * [Required] The format of exported labels, also as the discriminator.
     */
    @JsonTypeId
    @JsonProperty(value = "format", required = true)
    private ExportFormatType format = ExportFormatType.COCO;

    /*
     * The container name to which the labels will be exported.
     */
    @JsonProperty(value = "containerName", access = JsonProperty.Access.WRITE_ONLY)
    private String containerName;

    /*
     * The output path where the labels will be exported.
     */
    @JsonProperty(value = "snapshotPath", access = JsonProperty.Access.WRITE_ONLY)
    private String snapshotPath;

    /**
     * Creates an instance of CocoExportSummary class.
     */
    public CocoExportSummary() {
    }

    /**
     * Get the format property: [Required] The format of exported labels, also as the discriminator.
     * 
     * @return the format value.
     */
    @Override
    public ExportFormatType format() {
        return this.format;
    }

    /**
     * Get the containerName property: The container name to which the labels will be exported.
     * 
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Get the snapshotPath property: The output path where the labels will be exported.
     * 
     * @return the snapshotPath value.
     */
    public String snapshotPath() {
        return this.snapshotPath;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

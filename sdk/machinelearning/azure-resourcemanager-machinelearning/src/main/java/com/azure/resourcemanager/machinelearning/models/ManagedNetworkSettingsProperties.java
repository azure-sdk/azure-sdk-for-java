// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of the managed network settings of a machine learning workspace.
 */
@Fluent
public final class ManagedNetworkSettingsProperties implements JsonSerializable<ManagedNetworkSettingsProperties> {
    /*
     * Managed Network settings for a machine learning workspace.
     */
    private ManagedNetworkSettingsEx managedNetwork;

    /*
     * The current deployment state of the managed network resource. The provisioningState is to indicate states for
     * resource provisioning.
     */
    private ManagedNetworkProvisioningState provisioningState;

    /**
     * Creates an instance of ManagedNetworkSettingsProperties class.
     */
    public ManagedNetworkSettingsProperties() {
    }

    /**
     * Get the managedNetwork property: Managed Network settings for a machine learning workspace.
     * 
     * @return the managedNetwork value.
     */
    public ManagedNetworkSettingsEx managedNetwork() {
        return this.managedNetwork;
    }

    /**
     * Set the managedNetwork property: Managed Network settings for a machine learning workspace.
     * 
     * @param managedNetwork the managedNetwork value to set.
     * @return the ManagedNetworkSettingsProperties object itself.
     */
    public ManagedNetworkSettingsProperties withManagedNetwork(ManagedNetworkSettingsEx managedNetwork) {
        this.managedNetwork = managedNetwork;
        return this;
    }

    /**
     * Get the provisioningState property: The current deployment state of the managed network resource. The
     * provisioningState is to indicate states for resource provisioning.
     * 
     * @return the provisioningState value.
     */
    public ManagedNetworkProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (managedNetwork() != null) {
            managedNetwork().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("managedNetwork", this.managedNetwork);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedNetworkSettingsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedNetworkSettingsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedNetworkSettingsProperties.
     */
    public static ManagedNetworkSettingsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedNetworkSettingsProperties deserializedManagedNetworkSettingsProperties
                = new ManagedNetworkSettingsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("managedNetwork".equals(fieldName)) {
                    deserializedManagedNetworkSettingsProperties.managedNetwork
                        = ManagedNetworkSettingsEx.fromJson(reader);
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedManagedNetworkSettingsProperties.provisioningState
                        = ManagedNetworkProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedNetworkSettingsProperties;
        });
    }
}

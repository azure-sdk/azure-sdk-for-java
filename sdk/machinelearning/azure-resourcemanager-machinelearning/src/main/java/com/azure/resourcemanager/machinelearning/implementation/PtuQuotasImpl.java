// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearning.fluent.PtuQuotasClient;
import com.azure.resourcemanager.machinelearning.fluent.models.AvailableQuotaInner;
import com.azure.resourcemanager.machinelearning.fluent.models.UsageAndQuotaDetailsInner;
import com.azure.resourcemanager.machinelearning.models.AvailableQuota;
import com.azure.resourcemanager.machinelearning.models.PtuQuotas;
import com.azure.resourcemanager.machinelearning.models.UsageAndQuotaDetails;

public final class PtuQuotasImpl implements PtuQuotas {
    private static final ClientLogger LOGGER = new ClientLogger(PtuQuotasImpl.class);

    private final PtuQuotasClient innerClient;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public PtuQuotasImpl(PtuQuotasClient innerClient,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AvailableQuota> listAvailable(String location) {
        PagedIterable<AvailableQuotaInner> inner = this.serviceClient().listAvailable(location);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AvailableQuotaImpl(inner1, this.manager()));
    }

    public PagedIterable<AvailableQuota> listAvailable(String location, String skip, Context context) {
        PagedIterable<AvailableQuotaInner> inner = this.serviceClient().listAvailable(location, skip, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new AvailableQuotaImpl(inner1, this.manager()));
    }

    public Response<AvailableQuota> getAvailableWithResponse(String location, Context context) {
        Response<AvailableQuotaInner> inner = this.serviceClient().getAvailableWithResponse(location, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new AvailableQuotaImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public AvailableQuota getAvailable(String location) {
        AvailableQuotaInner inner = this.serviceClient().getAvailable(location);
        if (inner != null) {
            return new AvailableQuotaImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<UsageAndQuotaDetails> list(String location) {
        PagedIterable<UsageAndQuotaDetailsInner> inner = this.serviceClient().list(location);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new UsageAndQuotaDetailsImpl(inner1, this.manager()));
    }

    public PagedIterable<UsageAndQuotaDetails> list(String location, String skip, Context context) {
        PagedIterable<UsageAndQuotaDetailsInner> inner = this.serviceClient().list(location, skip, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new UsageAndQuotaDetailsImpl(inner1, this.manager()));
    }

    private PtuQuotasClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }
}

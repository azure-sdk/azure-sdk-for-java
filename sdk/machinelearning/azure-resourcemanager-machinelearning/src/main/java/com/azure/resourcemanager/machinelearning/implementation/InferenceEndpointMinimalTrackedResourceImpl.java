// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.InferenceEndpointMinimalTrackedResourceInner;
import com.azure.resourcemanager.machinelearning.models.InferenceEndpoint;
import com.azure.resourcemanager.machinelearning.models.InferenceEndpointMinimalTrackedResource;
import java.util.Collections;
import java.util.Map;

public final class InferenceEndpointMinimalTrackedResourceImpl
    implements InferenceEndpointMinimalTrackedResource,
        InferenceEndpointMinimalTrackedResource.Definition,
        InferenceEndpointMinimalTrackedResource.Update {
    private InferenceEndpointMinimalTrackedResourceInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String location() {
        return this.innerModel().location();
    }

    public String name() {
        return this.innerModel().name();
    }

    public InferenceEndpoint properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String type() {
        return this.innerModel().type();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public InferenceEndpointMinimalTrackedResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String poolName;

    private String groupName;

    private String name;

    public InferenceEndpointMinimalTrackedResourceImpl withExistingGroup(
        String resourceGroupName, String workspaceName, String poolName, String groupName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        this.poolName = poolName;
        this.groupName = groupName;
        return this;
    }

    public InferenceEndpointMinimalTrackedResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInferenceEndpoints()
                .createOrUpdate(
                    resourceGroupName, workspaceName, poolName, groupName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public InferenceEndpointMinimalTrackedResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInferenceEndpoints()
                .createOrUpdate(
                    resourceGroupName, workspaceName, poolName, groupName, name, this.innerModel(), context);
        return this;
    }

    InferenceEndpointMinimalTrackedResourceImpl(
        String name, com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new InferenceEndpointMinimalTrackedResourceInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public InferenceEndpointMinimalTrackedResourceImpl update() {
        return this;
    }

    public InferenceEndpointMinimalTrackedResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInferenceEndpoints()
                .createOrUpdate(
                    resourceGroupName, workspaceName, poolName, groupName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public InferenceEndpointMinimalTrackedResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInferenceEndpoints()
                .createOrUpdate(
                    resourceGroupName, workspaceName, poolName, groupName, name, this.innerModel(), context);
        return this;
    }

    InferenceEndpointMinimalTrackedResourceImpl(
        InferenceEndpointMinimalTrackedResourceInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.poolName = Utils.getValueFromIdByName(innerObject.id(), "inferencePools");
        this.groupName = Utils.getValueFromIdByName(innerObject.id(), "groups");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "endpoints");
    }

    public InferenceEndpointMinimalTrackedResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInferenceEndpoints()
                .getWithResponse(resourceGroupName, workspaceName, poolName, groupName, name, Context.NONE)
                .getValue();
        return this;
    }

    public InferenceEndpointMinimalTrackedResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getInferenceEndpoints()
                .getWithResponse(resourceGroupName, workspaceName, poolName, groupName, name, context)
                .getValue();
        return this;
    }

    public InferenceEndpointMinimalTrackedResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public InferenceEndpointMinimalTrackedResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public InferenceEndpointMinimalTrackedResourceImpl withProperties(InferenceEndpoint properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public InferenceEndpointMinimalTrackedResourceImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public InferenceEndpointMinimalTrackedResourceImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.IndexVersionInner;
import java.util.Map;

/**
 * An immutable client-side representation of IndexVersion.
 */
public interface IndexVersion {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the storageUri property: Default workspace blob storage Uri. Should work across storage types and auth
     * scenarios.
     * 
     * @return the storageUri value.
     */
    String storageUri();

    /**
     * Gets the indexConfigurations property: Placeholder for extras.
     * 
     * @return the indexConfigurations value.
     */
    Map<String, String> indexConfigurations();

    /**
     * Gets the isArchived property: Is the asset archived? For types where Stage is defined, when Stage is provided it
     * will be used to populate IsArchived.
     * 
     * @return the isArchived value.
     */
    boolean isArchived();

    /**
     * Gets the isAnonymous property: If the name version are system generated (anonymous registration). For types where
     * Stage is defined, when Stage is provided it will be used to populate IsAnonymous.
     * 
     * @return the isAnonymous value.
     */
    boolean isAnonymous();

    /**
     * Gets the tags property: Tag dictionary. Tags can be added, removed, and updated.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the properties property: The asset property dictionary.
     * 
     * @return the properties value.
     */
    Map<String, String> properties();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.machinelearning.fluent.models.IndexVersionInner object.
     * 
     * @return the inner object.
     */
    IndexVersionInner innerModel();

    /**
     * The entirety of the IndexVersion definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The IndexVersion definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the IndexVersion definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the IndexVersion definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName, indexName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName Name of the workspace.
             * @param indexName Name of the index.
             * @return the next definition stage.
             */
            WithCreate withExistingIndexe(String resourceGroupName, String workspaceName, String indexName);
        }

        /**
         * The stage of the IndexVersion definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithStorageUri,
            DefinitionStages.WithIndexConfigurations, DefinitionStages.WithIsArchived, DefinitionStages.WithIsAnonymous,
            DefinitionStages.WithProperties {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            IndexVersion create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IndexVersion create(Context context);
        }

        /**
         * The stage of the IndexVersion definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Tag dictionary. Tags can be added, removed, and updated..
             * 
             * @param tags Tag dictionary. Tags can be added, removed, and updated.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the IndexVersion definition allowing to specify storageUri.
         */
        interface WithStorageUri {
            /**
             * Specifies the storageUri property: Default workspace blob storage Uri. Should work across storage types
             * and auth scenarios..
             * 
             * @param storageUri Default workspace blob storage Uri. Should work across storage types and auth
             * scenarios.
             * @return the next definition stage.
             */
            WithCreate withStorageUri(String storageUri);
        }

        /**
         * The stage of the IndexVersion definition allowing to specify indexConfigurations.
         */
        interface WithIndexConfigurations {
            /**
             * Specifies the indexConfigurations property: Placeholder for extras..
             * 
             * @param indexConfigurations Placeholder for extras.
             * @return the next definition stage.
             */
            WithCreate withIndexConfigurations(Map<String, String> indexConfigurations);
        }

        /**
         * The stage of the IndexVersion definition allowing to specify isArchived.
         */
        interface WithIsArchived {
            /**
             * Specifies the isArchived property: Is the asset archived? For types where Stage is defined, when Stage is
             * provided it will be used to populate IsArchived..
             * 
             * @param isArchived Is the asset archived? For types where Stage is defined, when Stage is provided it will
             * be used to populate IsArchived.
             * @return the next definition stage.
             */
            WithCreate withIsArchived(boolean isArchived);
        }

        /**
         * The stage of the IndexVersion definition allowing to specify isAnonymous.
         */
        interface WithIsAnonymous {
            /**
             * Specifies the isAnonymous property: If the name version are system generated (anonymous registration).
             * For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous..
             * 
             * @param isAnonymous If the name version are system generated (anonymous registration). For types where
             * Stage is defined, when Stage is provided it will be used to populate IsAnonymous.
             * @return the next definition stage.
             */
            WithCreate withIsAnonymous(boolean isAnonymous);
        }

        /**
         * The stage of the IndexVersion definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The asset property dictionary..
             * 
             * @param properties The asset property dictionary.
             * @return the next definition stage.
             */
            WithCreate withProperties(Map<String, String> properties);
        }
    }

    /**
     * Begins update for the IndexVersion resource.
     * 
     * @return the stage of resource update.
     */
    IndexVersion.Update update();

    /**
     * The template for IndexVersion update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithStorageUri, UpdateStages.WithIndexConfigurations,
        UpdateStages.WithIsArchived, UpdateStages.WithIsAnonymous, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        IndexVersion apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IndexVersion apply(Context context);
    }

    /**
     * The IndexVersion update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the IndexVersion update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Tag dictionary. Tags can be added, removed, and updated..
             * 
             * @param tags Tag dictionary. Tags can be added, removed, and updated.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the IndexVersion update allowing to specify storageUri.
         */
        interface WithStorageUri {
            /**
             * Specifies the storageUri property: Default workspace blob storage Uri. Should work across storage types
             * and auth scenarios..
             * 
             * @param storageUri Default workspace blob storage Uri. Should work across storage types and auth
             * scenarios.
             * @return the next definition stage.
             */
            Update withStorageUri(String storageUri);
        }

        /**
         * The stage of the IndexVersion update allowing to specify indexConfigurations.
         */
        interface WithIndexConfigurations {
            /**
             * Specifies the indexConfigurations property: Placeholder for extras..
             * 
             * @param indexConfigurations Placeholder for extras.
             * @return the next definition stage.
             */
            Update withIndexConfigurations(Map<String, String> indexConfigurations);
        }

        /**
         * The stage of the IndexVersion update allowing to specify isArchived.
         */
        interface WithIsArchived {
            /**
             * Specifies the isArchived property: Is the asset archived? For types where Stage is defined, when Stage is
             * provided it will be used to populate IsArchived..
             * 
             * @param isArchived Is the asset archived? For types where Stage is defined, when Stage is provided it will
             * be used to populate IsArchived.
             * @return the next definition stage.
             */
            Update withIsArchived(boolean isArchived);
        }

        /**
         * The stage of the IndexVersion update allowing to specify isAnonymous.
         */
        interface WithIsAnonymous {
            /**
             * Specifies the isAnonymous property: If the name version are system generated (anonymous registration).
             * For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous..
             * 
             * @param isAnonymous If the name version are system generated (anonymous registration). For types where
             * Stage is defined, when Stage is provided it will be used to populate IsAnonymous.
             * @return the next definition stage.
             */
            Update withIsAnonymous(boolean isAnonymous);
        }

        /**
         * The stage of the IndexVersion update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The asset property dictionary..
             * 
             * @param properties The asset property dictionary.
             * @return the next definition stage.
             */
            Update withProperties(Map<String, String> properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    IndexVersion refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IndexVersion refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;

/**
 * Scoring requests configuration.
 */
@Fluent
public final class RequestConfiguration {
    /*
     * The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
     */
    @JsonProperty(value = "maxConcurrentRequestsPerInstance")
    private Integer maxConcurrentRequestsPerInstance;

    /*
     * The scoring timeout in ISO 8601 format.
     * Defaults to 5000ms.
     */
    @JsonProperty(value = "requestTimeout")
    private Duration requestTimeout;

    /**
     * Creates an instance of RequestConfiguration class.
     */
    public RequestConfiguration() {
    }

    /**
     * Get the maxConcurrentRequestsPerInstance property: The number of maximum concurrent requests per node allowed per
     * deployment. Defaults to 1.
     * 
     * @return the maxConcurrentRequestsPerInstance value.
     */
    public Integer maxConcurrentRequestsPerInstance() {
        return this.maxConcurrentRequestsPerInstance;
    }

    /**
     * Set the maxConcurrentRequestsPerInstance property: The number of maximum concurrent requests per node allowed per
     * deployment. Defaults to 1.
     * 
     * @param maxConcurrentRequestsPerInstance the maxConcurrentRequestsPerInstance value to set.
     * @return the RequestConfiguration object itself.
     */
    public RequestConfiguration withMaxConcurrentRequestsPerInstance(Integer maxConcurrentRequestsPerInstance) {
        this.maxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
        return this;
    }

    /**
     * Get the requestTimeout property: The scoring timeout in ISO 8601 format.
     * Defaults to 5000ms.
     * 
     * @return the requestTimeout value.
     */
    public Duration requestTimeout() {
        return this.requestTimeout;
    }

    /**
     * Set the requestTimeout property: The scoring timeout in ISO 8601 format.
     * Defaults to 5000ms.
     * 
     * @param requestTimeout the requestTimeout value to set.
     * @return the RequestConfiguration object itself.
     */
    public RequestConfiguration withRequestTimeout(Duration requestTimeout) {
        this.requestTimeout = requestTimeout;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

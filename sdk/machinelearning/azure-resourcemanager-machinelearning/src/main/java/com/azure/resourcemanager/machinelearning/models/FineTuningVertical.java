// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The FineTuningVertical model.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "modelProvider",
    defaultImpl = FineTuningVertical.class,
    visible = true)
@JsonTypeName("FineTuningVertical")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "AzureOpenAI", value = AzureOpenAiFineTuning.class),
    @JsonSubTypes.Type(name = "Custom", value = CustomModelFineTuning.class) })
@Fluent
public class FineTuningVertical {
    /*
     * [Required] Enum to determine the type of fine tuning.
     */
    @JsonTypeId
    @JsonProperty(value = "modelProvider", required = true)
    private ModelProvider modelProvider;

    /*
     * [Required] Input model for fine tuning.
     */
    @JsonProperty(value = "model", required = true)
    private MLFlowModelJobInput model;

    /*
     * [Required] Fine tuning task type.
     */
    @JsonProperty(value = "taskType", required = true)
    private FineTuningTaskType taskType;

    /*
     * [Required] Training data for fine tuning.
     */
    @JsonProperty(value = "trainingData", required = true)
    private JobInput trainingData;

    /*
     * Validation data for fine tuning.
     */
    @JsonProperty(value = "validationData")
    private JobInput validationData;

    /**
     * Creates an instance of FineTuningVertical class.
     */
    public FineTuningVertical() {
        this.modelProvider = ModelProvider.fromString("FineTuningVertical");
    }

    /**
     * Get the modelProvider property: [Required] Enum to determine the type of fine tuning.
     * 
     * @return the modelProvider value.
     */
    public ModelProvider modelProvider() {
        return this.modelProvider;
    }

    /**
     * Get the model property: [Required] Input model for fine tuning.
     * 
     * @return the model value.
     */
    public MLFlowModelJobInput model() {
        return this.model;
    }

    /**
     * Set the model property: [Required] Input model for fine tuning.
     * 
     * @param model the model value to set.
     * @return the FineTuningVertical object itself.
     */
    public FineTuningVertical withModel(MLFlowModelJobInput model) {
        this.model = model;
        return this;
    }

    /**
     * Get the taskType property: [Required] Fine tuning task type.
     * 
     * @return the taskType value.
     */
    public FineTuningTaskType taskType() {
        return this.taskType;
    }

    /**
     * Set the taskType property: [Required] Fine tuning task type.
     * 
     * @param taskType the taskType value to set.
     * @return the FineTuningVertical object itself.
     */
    public FineTuningVertical withTaskType(FineTuningTaskType taskType) {
        this.taskType = taskType;
        return this;
    }

    /**
     * Get the trainingData property: [Required] Training data for fine tuning.
     * 
     * @return the trainingData value.
     */
    public JobInput trainingData() {
        return this.trainingData;
    }

    /**
     * Set the trainingData property: [Required] Training data for fine tuning.
     * 
     * @param trainingData the trainingData value to set.
     * @return the FineTuningVertical object itself.
     */
    public FineTuningVertical withTrainingData(JobInput trainingData) {
        this.trainingData = trainingData;
        return this;
    }

    /**
     * Get the validationData property: Validation data for fine tuning.
     * 
     * @return the validationData value.
     */
    public JobInput validationData() {
        return this.validationData;
    }

    /**
     * Set the validationData property: Validation data for fine tuning.
     * 
     * @param validationData the validationData value to set.
     * @return the FineTuningVertical object itself.
     */
    public FineTuningVertical withValidationData(JobInput validationData) {
        this.validationData = validationData;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (model() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property model in model FineTuningVertical"));
        } else {
            model().validate();
        }
        if (taskType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property taskType in model FineTuningVertical"));
        }
        if (trainingData() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property trainingData in model FineTuningVertical"));
        } else {
            trainingData().validate();
        }
        if (validationData() != null) {
            validationData().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FineTuningVertical.class);
}

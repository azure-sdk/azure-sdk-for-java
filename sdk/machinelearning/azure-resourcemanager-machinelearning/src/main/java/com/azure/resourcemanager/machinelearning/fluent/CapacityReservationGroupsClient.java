// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.CapacityReservationGroupInner;
import com.azure.resourcemanager.machinelearning.models.PartialMinimalTrackedResourceWithSkuAndIdentity;

/** An instance of this class provides access to all the operations defined in CapacityReservationGroupsClient. */
public interface CapacityReservationGroupsClient {
    /**
     * List all Capacity Reservation Groups in the subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of CapacityReservationGroup entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CapacityReservationGroupInner> list();

    /**
     * List all Capacity Reservation Groups in the subscription.
     *
     * @param skip Continuation token for pagination.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of CapacityReservationGroup entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CapacityReservationGroupInner> list(String skip, Context context);

    /**
     * List all Capacity Reservation Groups in the resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of CapacityReservationGroup entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CapacityReservationGroupInner> listByResourceGroup(String resourceGroupName);

    /**
     * List all Capacity Reservation Groups in the resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param skip Continuation token for pagination.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of CapacityReservationGroup entities as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CapacityReservationGroupInner> listByResourceGroup(
        String resourceGroupName, String skip, Context context);

    /**
     * Delete a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String groupId, Context context);

    /**
     * Delete a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String groupId);

    /**
     * Get a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Capacity Reservation Group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CapacityReservationGroupInner> getByResourceGroupWithResponse(
        String resourceGroupName, String groupId, Context context);

    /**
     * Get a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Capacity Reservation Group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CapacityReservationGroupInner getByResourceGroup(String resourceGroupName, String groupId);

    /**
     * Update a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @param body The partial Capacity Reservation Group to Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CapacityReservationGroupInner> updateWithResponse(
        String resourceGroupName,
        String groupId,
        PartialMinimalTrackedResourceWithSkuAndIdentity body,
        Context context);

    /**
     * Update a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @param body The partial Capacity Reservation Group to Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CapacityReservationGroupInner update(
        String resourceGroupName, String groupId, PartialMinimalTrackedResourceWithSkuAndIdentity body);

    /**
     * Create or Update a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @param body The Capacity Reservation Group to Create or Update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CapacityReservationGroupInner> createOrUpdateWithResponse(
        String resourceGroupName, String groupId, CapacityReservationGroupInner body, Context context);

    /**
     * Create or Update a Capacity Reservation Group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param groupId The ID of the Capacity Reservation Group.
     * @param body The Capacity Reservation Group to Create or Update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CapacityReservationGroupInner createOrUpdate(
        String resourceGroupName, String groupId, CapacityReservationGroupInner body);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The ServerlessEndpointProperties model. */
@Fluent
public final class ServerlessEndpointProperties {
    /*
     * The inference uri to target when making requests against the serverless endpoint
     */
    @JsonProperty(value = "inferenceUri", access = JsonProperty.Access.WRITE_ONLY)
    private String inferenceUri;

    /*
     * [Required] The model profile to configure the serverless endpoint with
     */
    @JsonProperty(value = "modelProfile", required = true)
    private ModelProfile modelProfile;

    /*
     * Provisioning state for the endpoint.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private EndpointProvisioningState provisioningState;

    /** Creates an instance of ServerlessEndpointProperties class. */
    public ServerlessEndpointProperties() {
    }

    /**
     * Get the inferenceUri property: The inference uri to target when making requests against the serverless endpoint.
     *
     * @return the inferenceUri value.
     */
    public String inferenceUri() {
        return this.inferenceUri;
    }

    /**
     * Get the modelProfile property: [Required] The model profile to configure the serverless endpoint with.
     *
     * @return the modelProfile value.
     */
    public ModelProfile modelProfile() {
        return this.modelProfile;
    }

    /**
     * Set the modelProfile property: [Required] The model profile to configure the serverless endpoint with.
     *
     * @param modelProfile the modelProfile value to set.
     * @return the ServerlessEndpointProperties object itself.
     */
    public ServerlessEndpointProperties withModelProfile(ModelProfile modelProfile) {
        this.modelProfile = modelProfile;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state for the endpoint.
     *
     * @return the provisioningState value.
     */
    public EndpointProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (modelProfile() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property modelProfile in model ServerlessEndpointProperties"));
        } else {
            modelProfile().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ServerlessEndpointProperties.class);
}

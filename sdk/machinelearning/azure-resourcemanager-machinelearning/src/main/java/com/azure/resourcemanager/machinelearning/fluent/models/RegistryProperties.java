// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.models.ArmResourceId;
import com.azure.resourcemanager.machinelearning.models.RegistryPrivateEndpointConnection;
import com.azure.resourcemanager.machinelearning.models.RegistryRegionArmDetails;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Details of the Registry. */
@Fluent
public final class RegistryProperties {
    /*
     * Discovery URL for the Registry
     */
    @JsonProperty(value = "discoveryUrl")
    private String discoveryUrl;

    /*
     * IntellectualPropertyPublisher for the registry
     */
    @JsonProperty(value = "intellectualPropertyPublisher")
    private String intellectualPropertyPublisher;

    /*
     * ResourceId of the managed RG if the registry has system created resources
     */
    @JsonProperty(value = "managedResourceGroup")
    private ArmResourceId managedResourceGroup;

    /*
     * MLFlow Registry URI for the Registry
     */
    @JsonProperty(value = "mlFlowRegistryUri")
    private String mlFlowRegistryUri;

    /*
     * Private endpoint connections info used for pending connections in private link portal
     */
    @JsonProperty(value = "privateEndpointConnections")
    private List<RegistryPrivateEndpointConnection> privateEndpointConnections;

    /*
     * Is the Registry accessible from the internet?
     * Possible values: "Enabled" or "Disabled"
     */
    @JsonProperty(value = "publicNetworkAccess")
    private String publicNetworkAccess;

    /*
     * Details of each region the registry is in
     */
    @JsonProperty(value = "regionDetails")
    private List<RegistryRegionArmDetails> regionDetails;

    /** Creates an instance of RegistryProperties class. */
    public RegistryProperties() {
    }

    /**
     * Get the discoveryUrl property: Discovery URL for the Registry.
     *
     * @return the discoveryUrl value.
     */
    public String discoveryUrl() {
        return this.discoveryUrl;
    }

    /**
     * Set the discoveryUrl property: Discovery URL for the Registry.
     *
     * @param discoveryUrl the discoveryUrl value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withDiscoveryUrl(String discoveryUrl) {
        this.discoveryUrl = discoveryUrl;
        return this;
    }

    /**
     * Get the intellectualPropertyPublisher property: IntellectualPropertyPublisher for the registry.
     *
     * @return the intellectualPropertyPublisher value.
     */
    public String intellectualPropertyPublisher() {
        return this.intellectualPropertyPublisher;
    }

    /**
     * Set the intellectualPropertyPublisher property: IntellectualPropertyPublisher for the registry.
     *
     * @param intellectualPropertyPublisher the intellectualPropertyPublisher value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withIntellectualPropertyPublisher(String intellectualPropertyPublisher) {
        this.intellectualPropertyPublisher = intellectualPropertyPublisher;
        return this;
    }

    /**
     * Get the managedResourceGroup property: ResourceId of the managed RG if the registry has system created resources.
     *
     * @return the managedResourceGroup value.
     */
    public ArmResourceId managedResourceGroup() {
        return this.managedResourceGroup;
    }

    /**
     * Set the managedResourceGroup property: ResourceId of the managed RG if the registry has system created resources.
     *
     * @param managedResourceGroup the managedResourceGroup value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withManagedResourceGroup(ArmResourceId managedResourceGroup) {
        this.managedResourceGroup = managedResourceGroup;
        return this;
    }

    /**
     * Get the mlFlowRegistryUri property: MLFlow Registry URI for the Registry.
     *
     * @return the mlFlowRegistryUri value.
     */
    public String mlFlowRegistryUri() {
        return this.mlFlowRegistryUri;
    }

    /**
     * Set the mlFlowRegistryUri property: MLFlow Registry URI for the Registry.
     *
     * @param mlFlowRegistryUri the mlFlowRegistryUri value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withMlFlowRegistryUri(String mlFlowRegistryUri) {
        this.mlFlowRegistryUri = mlFlowRegistryUri;
        return this;
    }

    /**
     * Get the privateEndpointConnections property: Private endpoint connections info used for pending connections in
     * private link portal.
     *
     * @return the privateEndpointConnections value.
     */
    public List<RegistryPrivateEndpointConnection> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * Set the privateEndpointConnections property: Private endpoint connections info used for pending connections in
     * private link portal.
     *
     * @param privateEndpointConnections the privateEndpointConnections value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withPrivateEndpointConnections(
        List<RegistryPrivateEndpointConnection> privateEndpointConnections) {
        this.privateEndpointConnections = privateEndpointConnections;
        return this;
    }

    /**
     * Get the publicNetworkAccess property: Is the Registry accessible from the internet? Possible values: "Enabled" or
     * "Disabled".
     *
     * @return the publicNetworkAccess value.
     */
    public String publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: Is the Registry accessible from the internet? Possible values: "Enabled" or
     * "Disabled".
     *
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withPublicNetworkAccess(String publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get the regionDetails property: Details of each region the registry is in.
     *
     * @return the regionDetails value.
     */
    public List<RegistryRegionArmDetails> regionDetails() {
        return this.regionDetails;
    }

    /**
     * Set the regionDetails property: Details of each region the registry is in.
     *
     * @param regionDetails the regionDetails value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withRegionDetails(List<RegistryRegionArmDetails> regionDetails) {
        this.regionDetails = regionDetails;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (managedResourceGroup() != null) {
            managedResourceGroup().validate();
        }
        if (privateEndpointConnections() != null) {
            privateEndpointConnections().forEach(e -> e.validate());
        }
        if (regionDetails() != null) {
            regionDetails().forEach(e -> e.validate());
        }
    }
}

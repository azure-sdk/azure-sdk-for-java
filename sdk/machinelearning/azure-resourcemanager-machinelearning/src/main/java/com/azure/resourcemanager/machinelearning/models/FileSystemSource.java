// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The FileSystemSource model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "sourceType", defaultImpl = FileSystemSource.class, visible = true)
@JsonTypeName("file_system")
@Fluent
public final class FileSystemSource extends DataImportSource {
    /*
     * [Required] Specifies the type of data.
     */
    @JsonTypeId
    @JsonProperty(value = "sourceType", required = true)
    private DataImportSourceType sourceType = DataImportSourceType.FILE_SYSTEM;

    /*
     * Path on data import FileSystem source
     */
    @JsonProperty(value = "path")
    private String path;

    /**
     * Creates an instance of FileSystemSource class.
     */
    public FileSystemSource() {
    }

    /**
     * Get the sourceType property: [Required] Specifies the type of data.
     * 
     * @return the sourceType value.
     */
    @Override
    public DataImportSourceType sourceType() {
        return this.sourceType;
    }

    /**
     * Get the path property: Path on data import FileSystem source.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Path on data import FileSystem source.
     * 
     * @param path the path value to set.
     * @return the FileSystemSource object itself.
     */
    public FileSystemSource withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileSystemSource withConnection(String connection) {
        super.withConnection(connection);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

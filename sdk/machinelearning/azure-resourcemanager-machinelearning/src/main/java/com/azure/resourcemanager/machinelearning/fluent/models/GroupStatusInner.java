// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.models.ActualCapacityInfo;
import java.io.IOException;

/**
 * The GroupStatus model.
 */
@Fluent
public final class GroupStatusInner implements JsonSerializable<GroupStatusInner> {
    /*
     * Gets or sets the actual capacity info for the group.
     */
    private ActualCapacityInfo actualCapacityInfo;

    /*
     * Gets or sets the actual number of endpoints in the group.
     */
    private Integer endpointCount;

    /*
     * Gets or sets the request number of instances for the group.
     */
    private Integer requestedCapacity;

    /**
     * Creates an instance of GroupStatusInner class.
     */
    public GroupStatusInner() {
    }

    /**
     * Get the actualCapacityInfo property: Gets or sets the actual capacity info for the group.
     * 
     * @return the actualCapacityInfo value.
     */
    public ActualCapacityInfo actualCapacityInfo() {
        return this.actualCapacityInfo;
    }

    /**
     * Set the actualCapacityInfo property: Gets or sets the actual capacity info for the group.
     * 
     * @param actualCapacityInfo the actualCapacityInfo value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withActualCapacityInfo(ActualCapacityInfo actualCapacityInfo) {
        this.actualCapacityInfo = actualCapacityInfo;
        return this;
    }

    /**
     * Get the endpointCount property: Gets or sets the actual number of endpoints in the group.
     * 
     * @return the endpointCount value.
     */
    public Integer endpointCount() {
        return this.endpointCount;
    }

    /**
     * Set the endpointCount property: Gets or sets the actual number of endpoints in the group.
     * 
     * @param endpointCount the endpointCount value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withEndpointCount(Integer endpointCount) {
        this.endpointCount = endpointCount;
        return this;
    }

    /**
     * Get the requestedCapacity property: Gets or sets the request number of instances for the group.
     * 
     * @return the requestedCapacity value.
     */
    public Integer requestedCapacity() {
        return this.requestedCapacity;
    }

    /**
     * Set the requestedCapacity property: Gets or sets the request number of instances for the group.
     * 
     * @param requestedCapacity the requestedCapacity value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withRequestedCapacity(Integer requestedCapacity) {
        this.requestedCapacity = requestedCapacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (actualCapacityInfo() != null) {
            actualCapacityInfo().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("actualCapacityInfo", this.actualCapacityInfo);
        jsonWriter.writeNumberField("endpointCount", this.endpointCount);
        jsonWriter.writeNumberField("requestedCapacity", this.requestedCapacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GroupStatusInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GroupStatusInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the GroupStatusInner.
     */
    public static GroupStatusInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GroupStatusInner deserializedGroupStatusInner = new GroupStatusInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actualCapacityInfo".equals(fieldName)) {
                    deserializedGroupStatusInner.actualCapacityInfo = ActualCapacityInfo.fromJson(reader);
                } else if ("endpointCount".equals(fieldName)) {
                    deserializedGroupStatusInner.endpointCount = reader.getNullable(JsonReader::getInt);
                } else if ("requestedCapacity".equals(fieldName)) {
                    deserializedGroupStatusInner.requestedCapacity = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGroupStatusInner;
        });
    }
}

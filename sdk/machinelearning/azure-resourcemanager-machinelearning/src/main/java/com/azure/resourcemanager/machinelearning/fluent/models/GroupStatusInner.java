// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.models.ActualCapacityInfo;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The GroupStatus model. */
@Fluent
public final class GroupStatusInner {
    /*
     * Gets or sets the actual capacity info for the group.
     */
    @JsonProperty(value = "actualCapacityInfo")
    private ActualCapacityInfo actualCapacityInfo;

    /*
     * Gets or sets capacity used from the pool's reserved capacity.
     */
    @JsonProperty(value = "bonusExtraCapacity")
    private Integer bonusExtraCapacity;

    /*
     * Gets or sets the actual number of endpoints in the group.
     */
    @JsonProperty(value = "endpointCount")
    private Integer endpointCount;

    /*
     * Gets or sets the request number of instances for the group.
     */
    @JsonProperty(value = "requestedCapacity")
    private Integer requestedCapacity;

    /** Creates an instance of GroupStatusInner class. */
    public GroupStatusInner() {
    }

    /**
     * Get the actualCapacityInfo property: Gets or sets the actual capacity info for the group.
     *
     * @return the actualCapacityInfo value.
     */
    public ActualCapacityInfo actualCapacityInfo() {
        return this.actualCapacityInfo;
    }

    /**
     * Set the actualCapacityInfo property: Gets or sets the actual capacity info for the group.
     *
     * @param actualCapacityInfo the actualCapacityInfo value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withActualCapacityInfo(ActualCapacityInfo actualCapacityInfo) {
        this.actualCapacityInfo = actualCapacityInfo;
        return this;
    }

    /**
     * Get the bonusExtraCapacity property: Gets or sets capacity used from the pool's reserved capacity.
     *
     * @return the bonusExtraCapacity value.
     */
    public Integer bonusExtraCapacity() {
        return this.bonusExtraCapacity;
    }

    /**
     * Set the bonusExtraCapacity property: Gets or sets capacity used from the pool's reserved capacity.
     *
     * @param bonusExtraCapacity the bonusExtraCapacity value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withBonusExtraCapacity(Integer bonusExtraCapacity) {
        this.bonusExtraCapacity = bonusExtraCapacity;
        return this;
    }

    /**
     * Get the endpointCount property: Gets or sets the actual number of endpoints in the group.
     *
     * @return the endpointCount value.
     */
    public Integer endpointCount() {
        return this.endpointCount;
    }

    /**
     * Set the endpointCount property: Gets or sets the actual number of endpoints in the group.
     *
     * @param endpointCount the endpointCount value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withEndpointCount(Integer endpointCount) {
        this.endpointCount = endpointCount;
        return this;
    }

    /**
     * Get the requestedCapacity property: Gets or sets the request number of instances for the group.
     *
     * @return the requestedCapacity value.
     */
    public Integer requestedCapacity() {
        return this.requestedCapacity;
    }

    /**
     * Set the requestedCapacity property: Gets or sets the request number of instances for the group.
     *
     * @param requestedCapacity the requestedCapacity value to set.
     * @return the GroupStatusInner object itself.
     */
    public GroupStatusInner withRequestedCapacity(Integer requestedCapacity) {
        this.requestedCapacity = requestedCapacity;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (actualCapacityInfo() != null) {
            actualCapacityInfo().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Managed resource group settings.
 */
@Fluent
public final class ManagedResourceGroupSettings implements JsonSerializable<ManagedResourceGroupSettings> {
    /*
     * List of assigned identities for the managed resource group
     */
    private List<ManagedResourceGroupAssignedIdentities> assignedIdentities;

    /**
     * Creates an instance of ManagedResourceGroupSettings class.
     */
    public ManagedResourceGroupSettings() {
    }

    /**
     * Get the assignedIdentities property: List of assigned identities for the managed resource group.
     * 
     * @return the assignedIdentities value.
     */
    public List<ManagedResourceGroupAssignedIdentities> assignedIdentities() {
        return this.assignedIdentities;
    }

    /**
     * Set the assignedIdentities property: List of assigned identities for the managed resource group.
     * 
     * @param assignedIdentities the assignedIdentities value to set.
     * @return the ManagedResourceGroupSettings object itself.
     */
    public ManagedResourceGroupSettings
        withAssignedIdentities(List<ManagedResourceGroupAssignedIdentities> assignedIdentities) {
        this.assignedIdentities = assignedIdentities;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (assignedIdentities() != null) {
            assignedIdentities().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("assignedIdentities", this.assignedIdentities,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedResourceGroupSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedResourceGroupSettings if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedResourceGroupSettings.
     */
    public static ManagedResourceGroupSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedResourceGroupSettings deserializedManagedResourceGroupSettings = new ManagedResourceGroupSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("assignedIdentities".equals(fieldName)) {
                    List<ManagedResourceGroupAssignedIdentities> assignedIdentities
                        = reader.readArray(reader1 -> ManagedResourceGroupAssignedIdentities.fromJson(reader1));
                    deserializedManagedResourceGroupSettings.assignedIdentities = assignedIdentities;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedResourceGroupSettings;
        });
    }
}

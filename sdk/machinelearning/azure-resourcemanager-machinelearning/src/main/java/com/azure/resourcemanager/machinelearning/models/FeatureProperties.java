// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Dto object representing feature. */
@Fluent
public final class FeatureProperties extends ResourceBase {
    /*
     * Specifies type
     */
    @JsonProperty(value = "dataType")
    private FeatureDataType dataType;

    /*
     * Specifies name
     */
    @JsonProperty(value = "featureName")
    private String featureName;

    /** Creates an instance of FeatureProperties class. */
    public FeatureProperties() {
    }

    /**
     * Get the dataType property: Specifies type.
     *
     * @return the dataType value.
     */
    public FeatureDataType dataType() {
        return this.dataType;
    }

    /**
     * Set the dataType property: Specifies type.
     *
     * @param dataType the dataType value to set.
     * @return the FeatureProperties object itself.
     */
    public FeatureProperties withDataType(FeatureDataType dataType) {
        this.dataType = dataType;
        return this;
    }

    /**
     * Get the featureName property: Specifies name.
     *
     * @return the featureName value.
     */
    public String featureName() {
        return this.featureName;
    }

    /**
     * Set the featureName property: Specifies name.
     *
     * @param featureName the featureName value to set.
     * @return the FeatureProperties object itself.
     */
    public FeatureProperties withFeatureName(String featureName) {
        this.featureName = featureName;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public FeatureProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public FeatureProperties withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public FeatureProperties withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

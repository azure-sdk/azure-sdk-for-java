// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearning.models.InferenceGroup;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The InferenceGroupMinimalTrackedResourceWithSku model. */
@Fluent
public final class InferenceGroupMinimalTrackedResourceWithSkuInner {
    /*
     * The resource URL of the entity (not URL encoded).
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * [Required]
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /*
     * The name of the resource entity.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * [Required] Additional attributes of the entity.
     */
    @JsonProperty(value = "properties", required = true)
    private InferenceGroup properties;

    /*
     * Sku details required for ARM contract for Autoscaling.
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /*
     * System data associated with resource provider
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The resource provider and type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /** Creates an instance of InferenceGroupMinimalTrackedResourceWithSkuInner class. */
    public InferenceGroupMinimalTrackedResourceWithSkuInner() {
    }

    /**
     * Get the id property: The resource URL of the entity (not URL encoded).
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the kind property: Metadata used by portal/tooling/etc to render different UX experiences for resources of
     * the same type.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Metadata used by portal/tooling/etc to render different UX experiences for resources of
     * the same type.
     *
     * @param kind the kind value to set.
     * @return the InferenceGroupMinimalTrackedResourceWithSkuInner object itself.
     */
    public InferenceGroupMinimalTrackedResourceWithSkuInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the location property: [Required].
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: [Required].
     *
     * @param location the location value to set.
     * @return the InferenceGroupMinimalTrackedResourceWithSkuInner object itself.
     */
    public InferenceGroupMinimalTrackedResourceWithSkuInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the name property: The name of the resource entity.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the properties property: [Required] Additional attributes of the entity.
     *
     * @return the properties value.
     */
    public InferenceGroup properties() {
        return this.properties;
    }

    /**
     * Set the properties property: [Required] Additional attributes of the entity.
     *
     * @param properties the properties value to set.
     * @return the InferenceGroupMinimalTrackedResourceWithSkuInner object itself.
     */
    public InferenceGroupMinimalTrackedResourceWithSkuInner withProperties(InferenceGroup properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the sku property: Sku details required for ARM contract for Autoscaling.
     *
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Sku details required for ARM contract for Autoscaling.
     *
     * @param sku the sku value to set.
     * @return the InferenceGroupMinimalTrackedResourceWithSkuInner object itself.
     */
    public InferenceGroupMinimalTrackedResourceWithSkuInner withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the systemData property: System data associated with resource provider.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the InferenceGroupMinimalTrackedResourceWithSkuInner object itself.
     */
    public InferenceGroupMinimalTrackedResourceWithSkuInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the type property: The resource provider and type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (location() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property location in model"
                            + " InferenceGroupMinimalTrackedResourceWithSkuInner"));
        }
        if (properties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property properties in model"
                            + " InferenceGroupMinimalTrackedResourceWithSkuInner"));
        } else {
            properties().validate();
        }
        if (sku() != null) {
            sku().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InferenceGroupMinimalTrackedResourceWithSkuInner.class);
}

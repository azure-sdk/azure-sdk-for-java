// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Specifies settings for autologger.
 */
@Fluent
public final class ComputeInstanceAutologgerSettings implements JsonSerializable<ComputeInstanceAutologgerSettings> {
    /*
     * Indicates whether mlflow autologger is enabled for notebooks.
     */
    private MlflowAutologger mlflowAutologger;

    /**
     * Creates an instance of ComputeInstanceAutologgerSettings class.
     */
    public ComputeInstanceAutologgerSettings() {
    }

    /**
     * Get the mlflowAutologger property: Indicates whether mlflow autologger is enabled for notebooks.
     * 
     * @return the mlflowAutologger value.
     */
    public MlflowAutologger mlflowAutologger() {
        return this.mlflowAutologger;
    }

    /**
     * Set the mlflowAutologger property: Indicates whether mlflow autologger is enabled for notebooks.
     * 
     * @param mlflowAutologger the mlflowAutologger value to set.
     * @return the ComputeInstanceAutologgerSettings object itself.
     */
    public ComputeInstanceAutologgerSettings withMlflowAutologger(MlflowAutologger mlflowAutologger) {
        this.mlflowAutologger = mlflowAutologger;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("mlflowAutologger",
            this.mlflowAutologger == null ? null : this.mlflowAutologger.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputeInstanceAutologgerSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputeInstanceAutologgerSettings if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComputeInstanceAutologgerSettings.
     */
    public static ComputeInstanceAutologgerSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComputeInstanceAutologgerSettings deserializedComputeInstanceAutologgerSettings
                = new ComputeInstanceAutologgerSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("mlflowAutologger".equals(fieldName)) {
                    deserializedComputeInstanceAutologgerSettings.mlflowAutologger
                        = MlflowAutologger.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComputeInstanceAutologgerSettings;
        });
    }
}

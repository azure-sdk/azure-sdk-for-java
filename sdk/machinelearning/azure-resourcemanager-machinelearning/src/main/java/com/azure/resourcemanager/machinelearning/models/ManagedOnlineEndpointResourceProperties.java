// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.machinelearning.fluent.models.EndpointDeploymentResourcePropertiesBasicResourceInner;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * The ManagedOnlineEndpointResourceProperties model.
 */
@Fluent
public final class ManagedOnlineEndpointResourceProperties extends EndpointResourceProperties {
    /*
     * Type of the endpoint.
     */
    private EndpointType endpointType = EndpointType.MANAGED_ONLINE_ENDPOINT;

    /*
     * Enum to determine endpoint authentication mode.
     */
    private EndpointAuthMode authMode;

    /*
     * The compute property.
     */
    private String compute;

    /*
     * The description property.
     */
    private String description;

    /*
     * Dictionary of <integer>
     */
    private Map<String, Integer> mirrorTraffic;

    /*
     * The scoringUri property.
     */
    private String scoringUri;

    /*
     * Dictionary of <integer>
     */
    private Map<String, Integer> traffic;

    /*
     * Read-only provision state status property.
     */
    private DefaultResourceProvisioningState provisioningState;

    /**
     * Creates an instance of ManagedOnlineEndpointResourceProperties class.
     */
    public ManagedOnlineEndpointResourceProperties() {
    }

    /**
     * Get the endpointType property: Type of the endpoint.
     * 
     * @return the endpointType value.
     */
    @Override
    public EndpointType endpointType() {
        return this.endpointType;
    }

    /**
     * Get the authMode property: Enum to determine endpoint authentication mode.
     * 
     * @return the authMode value.
     */
    public EndpointAuthMode authMode() {
        return this.authMode;
    }

    /**
     * Set the authMode property: Enum to determine endpoint authentication mode.
     * 
     * @param authMode the authMode value to set.
     * @return the ManagedOnlineEndpointResourceProperties object itself.
     */
    public ManagedOnlineEndpointResourceProperties withAuthMode(EndpointAuthMode authMode) {
        this.authMode = authMode;
        return this;
    }

    /**
     * Get the compute property: The compute property.
     * 
     * @return the compute value.
     */
    public String compute() {
        return this.compute;
    }

    /**
     * Set the compute property: The compute property.
     * 
     * @param compute the compute value to set.
     * @return the ManagedOnlineEndpointResourceProperties object itself.
     */
    public ManagedOnlineEndpointResourceProperties withCompute(String compute) {
        this.compute = compute;
        return this;
    }

    /**
     * Get the description property: The description property.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description property.
     * 
     * @param description the description value to set.
     * @return the ManagedOnlineEndpointResourceProperties object itself.
     */
    public ManagedOnlineEndpointResourceProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the mirrorTraffic property: Dictionary of &lt;integer&gt;.
     * 
     * @return the mirrorTraffic value.
     */
    public Map<String, Integer> mirrorTraffic() {
        return this.mirrorTraffic;
    }

    /**
     * Set the mirrorTraffic property: Dictionary of &lt;integer&gt;.
     * 
     * @param mirrorTraffic the mirrorTraffic value to set.
     * @return the ManagedOnlineEndpointResourceProperties object itself.
     */
    public ManagedOnlineEndpointResourceProperties withMirrorTraffic(Map<String, Integer> mirrorTraffic) {
        this.mirrorTraffic = mirrorTraffic;
        return this;
    }

    /**
     * Get the scoringUri property: The scoringUri property.
     * 
     * @return the scoringUri value.
     */
    public String scoringUri() {
        return this.scoringUri;
    }

    /**
     * Set the scoringUri property: The scoringUri property.
     * 
     * @param scoringUri the scoringUri value to set.
     * @return the ManagedOnlineEndpointResourceProperties object itself.
     */
    public ManagedOnlineEndpointResourceProperties withScoringUri(String scoringUri) {
        this.scoringUri = scoringUri;
        return this;
    }

    /**
     * Get the traffic property: Dictionary of &lt;integer&gt;.
     * 
     * @return the traffic value.
     */
    public Map<String, Integer> traffic() {
        return this.traffic;
    }

    /**
     * Set the traffic property: Dictionary of &lt;integer&gt;.
     * 
     * @param traffic the traffic value to set.
     * @return the ManagedOnlineEndpointResourceProperties object itself.
     */
    public ManagedOnlineEndpointResourceProperties withTraffic(Map<String, Integer> traffic) {
        this.traffic = traffic;
        return this;
    }

    /**
     * Get the provisioningState property: Read-only provision state status property.
     * 
     * @return the provisioningState value.
     */
    @Override
    public DefaultResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties withAssociatedResourceId(String associatedResourceId) {
        super.withAssociatedResourceId(associatedResourceId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties
        withDeployments(List<EndpointDeploymentResourcePropertiesBasicResourceInner> deployments) {
        super.withDeployments(deployments);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties withEndpointUri(String endpointUri) {
        super.withEndpointUri(endpointUri);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties withFailureReason(String failureReason) {
        super.withFailureReason(failureReason);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties withName(String name) {
        super.withName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ManagedOnlineEndpointResourceProperties
        withShouldCreateAiServicesEndpoint(Boolean shouldCreateAiServicesEndpoint) {
        super.withShouldCreateAiServicesEndpoint(shouldCreateAiServicesEndpoint);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("associatedResourceId", associatedResourceId());
        jsonWriter.writeArrayField("deployments", deployments(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("endpointUri", endpointUri());
        jsonWriter.writeStringField("failureReason", failureReason());
        jsonWriter.writeStringField("location", location());
        jsonWriter.writeStringField("name", name());
        jsonWriter.writeBooleanField("shouldCreateAiServicesEndpoint", shouldCreateAiServicesEndpoint());
        jsonWriter.writeStringField("endpointType", this.endpointType == null ? null : this.endpointType.toString());
        jsonWriter.writeStringField("authMode", this.authMode == null ? null : this.authMode.toString());
        jsonWriter.writeStringField("compute", this.compute);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeMapField("mirrorTraffic", this.mirrorTraffic, (writer, element) -> writer.writeInt(element));
        jsonWriter.writeStringField("scoringUri", this.scoringUri);
        jsonWriter.writeMapField("traffic", this.traffic, (writer, element) -> writer.writeInt(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagedOnlineEndpointResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagedOnlineEndpointResourceProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagedOnlineEndpointResourceProperties.
     */
    public static ManagedOnlineEndpointResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagedOnlineEndpointResourceProperties deserializedManagedOnlineEndpointResourceProperties
                = new ManagedOnlineEndpointResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("associatedResourceId".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.withAssociatedResourceId(reader.getString());
                } else if ("deployments".equals(fieldName)) {
                    List<EndpointDeploymentResourcePropertiesBasicResourceInner> deployments = reader
                        .readArray(reader1 -> EndpointDeploymentResourcePropertiesBasicResourceInner.fromJson(reader1));
                    deserializedManagedOnlineEndpointResourceProperties.withDeployments(deployments);
                } else if ("endpointUri".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.withEndpointUri(reader.getString());
                } else if ("failureReason".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.withFailureReason(reader.getString());
                } else if ("location".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.withLocation(reader.getString());
                } else if ("name".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.withName(reader.getString());
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.provisioningState
                        = DefaultResourceProvisioningState.fromString(reader.getString());
                } else if ("shouldCreateAiServicesEndpoint".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties
                        .withShouldCreateAiServicesEndpoint(reader.getNullable(JsonReader::getBoolean));
                } else if ("endpointType".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.endpointType
                        = EndpointType.fromString(reader.getString());
                } else if ("authMode".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.authMode
                        = EndpointAuthMode.fromString(reader.getString());
                } else if ("compute".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.compute = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.description = reader.getString();
                } else if ("mirrorTraffic".equals(fieldName)) {
                    Map<String, Integer> mirrorTraffic = reader.readMap(reader1 -> reader1.getInt());
                    deserializedManagedOnlineEndpointResourceProperties.mirrorTraffic = mirrorTraffic;
                } else if ("scoringUri".equals(fieldName)) {
                    deserializedManagedOnlineEndpointResourceProperties.scoringUri = reader.getString();
                } else if ("traffic".equals(fieldName)) {
                    Map<String, Integer> traffic = reader.readMap(reader1 -> reader1.getInt());
                    deserializedManagedOnlineEndpointResourceProperties.traffic = traffic;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagedOnlineEndpointResourceProperties;
        });
    }
}

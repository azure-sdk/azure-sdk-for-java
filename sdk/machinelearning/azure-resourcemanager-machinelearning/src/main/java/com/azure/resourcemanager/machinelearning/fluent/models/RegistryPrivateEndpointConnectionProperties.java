// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.models.PrivateEndpointResource;
import com.azure.resourcemanager.machinelearning.models.RegistryPrivateLinkServiceConnectionState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties of the Private Endpoint Connection. */
@Fluent
public final class RegistryPrivateEndpointConnectionProperties {
    /*
     * The group ids
     */
    @JsonProperty(value = "groupIds")
    private List<String> groupIds;

    /*
     * The PE network resource that is linked to this PE connection.
     */
    @JsonProperty(value = "privateEndpoint")
    private PrivateEndpointResource privateEndpoint;

    /*
     * The connection state.
     */
    @JsonProperty(value = "privateLinkServiceConnectionState")
    private RegistryPrivateLinkServiceConnectionState privateLinkServiceConnectionState;

    /*
     * One of null, "Succeeded", "Provisioning", "Failed". While not approved, it's null.
     */
    @JsonProperty(value = "provisioningState")
    private String provisioningState;

    /** Creates an instance of RegistryPrivateEndpointConnectionProperties class. */
    public RegistryPrivateEndpointConnectionProperties() {
    }

    /**
     * Get the groupIds property: The group ids.
     *
     * @return the groupIds value.
     */
    public List<String> groupIds() {
        return this.groupIds;
    }

    /**
     * Set the groupIds property: The group ids.
     *
     * @param groupIds the groupIds value to set.
     * @return the RegistryPrivateEndpointConnectionProperties object itself.
     */
    public RegistryPrivateEndpointConnectionProperties withGroupIds(List<String> groupIds) {
        this.groupIds = groupIds;
        return this;
    }

    /**
     * Get the privateEndpoint property: The PE network resource that is linked to this PE connection.
     *
     * @return the privateEndpoint value.
     */
    public PrivateEndpointResource privateEndpoint() {
        return this.privateEndpoint;
    }

    /**
     * Set the privateEndpoint property: The PE network resource that is linked to this PE connection.
     *
     * @param privateEndpoint the privateEndpoint value to set.
     * @return the RegistryPrivateEndpointConnectionProperties object itself.
     */
    public RegistryPrivateEndpointConnectionProperties withPrivateEndpoint(PrivateEndpointResource privateEndpoint) {
        this.privateEndpoint = privateEndpoint;
        return this;
    }

    /**
     * Get the privateLinkServiceConnectionState property: The connection state.
     *
     * @return the privateLinkServiceConnectionState value.
     */
    public RegistryPrivateLinkServiceConnectionState privateLinkServiceConnectionState() {
        return this.privateLinkServiceConnectionState;
    }

    /**
     * Set the privateLinkServiceConnectionState property: The connection state.
     *
     * @param privateLinkServiceConnectionState the privateLinkServiceConnectionState value to set.
     * @return the RegistryPrivateEndpointConnectionProperties object itself.
     */
    public RegistryPrivateEndpointConnectionProperties withPrivateLinkServiceConnectionState(
        RegistryPrivateLinkServiceConnectionState privateLinkServiceConnectionState) {
        this.privateLinkServiceConnectionState = privateLinkServiceConnectionState;
        return this;
    }

    /**
     * Get the provisioningState property: One of null, "Succeeded", "Provisioning", "Failed". While not approved, it's
     * null.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: One of null, "Succeeded", "Provisioning", "Failed". While not approved, it's
     * null.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the RegistryPrivateEndpointConnectionProperties object itself.
     */
    public RegistryPrivateEndpointConnectionProperties withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (privateEndpoint() != null) {
            privateEndpoint().validate();
        }
        if (privateLinkServiceConnectionState() != null) {
            privateLinkServiceConnectionState().validate();
        }
    }
}

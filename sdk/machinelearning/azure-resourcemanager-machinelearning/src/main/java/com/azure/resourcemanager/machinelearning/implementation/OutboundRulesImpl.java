// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearning.fluent.OutboundRulesClient;
import com.azure.resourcemanager.machinelearning.fluent.models.OutboundRuleBasicResourceInner;
import com.azure.resourcemanager.machinelearning.models.OutboundRuleBasicResource;
import com.azure.resourcemanager.machinelearning.models.OutboundRules;

public final class OutboundRulesImpl implements OutboundRules {
    private static final ClientLogger LOGGER = new ClientLogger(OutboundRulesImpl.class);

    private final OutboundRulesClient innerClient;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public OutboundRulesImpl(OutboundRulesClient innerClient,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void delete(String resourceGroupName, String workspaceName, String managedNetworkName, String ruleName) {
        this.serviceClient().delete(resourceGroupName, workspaceName, managedNetworkName, ruleName);
    }

    public void delete(String resourceGroupName, String workspaceName, String managedNetworkName, String ruleName,
        Context context) {
        this.serviceClient().delete(resourceGroupName, workspaceName, managedNetworkName, ruleName, context);
    }

    public Response<OutboundRuleBasicResource> getWithResponse(String resourceGroupName, String workspaceName,
        String managedNetworkName, String ruleName, Context context) {
        Response<OutboundRuleBasicResourceInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, workspaceName, managedNetworkName, ruleName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new OutboundRuleBasicResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public OutboundRuleBasicResource get(String resourceGroupName, String workspaceName, String managedNetworkName,
        String ruleName) {
        OutboundRuleBasicResourceInner inner
            = this.serviceClient().get(resourceGroupName, workspaceName, managedNetworkName, ruleName);
        if (inner != null) {
            return new OutboundRuleBasicResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OutboundRuleBasicResource createOrUpdate(String resourceGroupName, String workspaceName,
        String managedNetworkName, String ruleName, OutboundRuleBasicResourceInner body) {
        OutboundRuleBasicResourceInner inner
            = this.serviceClient().createOrUpdate(resourceGroupName, workspaceName, managedNetworkName, ruleName, body);
        if (inner != null) {
            return new OutboundRuleBasicResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OutboundRuleBasicResource createOrUpdate(String resourceGroupName, String workspaceName,
        String managedNetworkName, String ruleName, OutboundRuleBasicResourceInner body, Context context) {
        OutboundRuleBasicResourceInner inner = this.serviceClient()
            .createOrUpdate(resourceGroupName, workspaceName, managedNetworkName, ruleName, body, context);
        if (inner != null) {
            return new OutboundRuleBasicResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<OutboundRuleBasicResource> list(String resourceGroupName, String workspaceName,
        String managedNetworkName) {
        PagedIterable<OutboundRuleBasicResourceInner> inner
            = this.serviceClient().list(resourceGroupName, workspaceName, managedNetworkName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new OutboundRuleBasicResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<OutboundRuleBasicResource> list(String resourceGroupName, String workspaceName,
        String managedNetworkName, Context context) {
        PagedIterable<OutboundRuleBasicResourceInner> inner
            = this.serviceClient().list(resourceGroupName, workspaceName, managedNetworkName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new OutboundRuleBasicResourceImpl(inner1, this.manager()));
    }

    private OutboundRulesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }
}

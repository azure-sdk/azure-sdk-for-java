// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The ServerlessInferenceEndpoint model. */
@Fluent
public final class ServerlessInferenceEndpoint {
    /*
     * Specifies any required headers to target this serverless endpoint.
     */
    @JsonProperty(value = "headers", access = JsonProperty.Access.WRITE_ONLY)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> headers;

    /*
     * [Required] The inference uri to target when making requests against the Serverless Endpoint.
     */
    @JsonProperty(value = "uri", required = true)
    private String uri;

    /** Creates an instance of ServerlessInferenceEndpoint class. */
    public ServerlessInferenceEndpoint() {
    }

    /**
     * Get the headers property: Specifies any required headers to target this serverless endpoint.
     *
     * @return the headers value.
     */
    public Map<String, String> headers() {
        return this.headers;
    }

    /**
     * Get the uri property: [Required] The inference uri to target when making requests against the Serverless
     * Endpoint.
     *
     * @return the uri value.
     */
    public String uri() {
        return this.uri;
    }

    /**
     * Set the uri property: [Required] The inference uri to target when making requests against the Serverless
     * Endpoint.
     *
     * @param uri the uri value to set.
     * @return the ServerlessInferenceEndpoint object itself.
     */
    public ServerlessInferenceEndpoint withUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (uri() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property uri in model ServerlessInferenceEndpoint"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ServerlessInferenceEndpoint.class);
}

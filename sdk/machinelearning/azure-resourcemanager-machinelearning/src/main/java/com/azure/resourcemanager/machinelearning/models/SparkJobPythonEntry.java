// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The SparkJobPythonEntry model.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "sparkJobEntryType",
    defaultImpl = SparkJobPythonEntry.class,
    visible = true)
@JsonTypeName("SparkJobPythonEntry")
@Fluent
public final class SparkJobPythonEntry extends SparkJobEntry {
    /*
     * [Required] Type of the job's entry point.
     */
    @JsonTypeId
    @JsonProperty(value = "sparkJobEntryType", required = true)
    private SparkJobEntryType sparkJobEntryType = SparkJobEntryType.SPARK_JOB_PYTHON_ENTRY;

    /*
     * [Required] Relative python file path for job entry point.
     */
    @JsonProperty(value = "file", required = true)
    private String file;

    /**
     * Creates an instance of SparkJobPythonEntry class.
     */
    public SparkJobPythonEntry() {
    }

    /**
     * Get the sparkJobEntryType property: [Required] Type of the job's entry point.
     * 
     * @return the sparkJobEntryType value.
     */
    @Override
    public SparkJobEntryType sparkJobEntryType() {
        return this.sparkJobEntryType;
    }

    /**
     * Get the file property: [Required] Relative python file path for job entry point.
     * 
     * @return the file value.
     */
    public String file() {
        return this.file;
    }

    /**
     * Set the file property: [Required] Relative python file path for job entry point.
     * 
     * @param file the file value to set.
     * @return the SparkJobPythonEntry object itself.
     */
    public SparkJobPythonEntry withFile(String file) {
        this.file = file;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (file() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property file in model SparkJobPythonEntry"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SparkJobPythonEntry.class);
}

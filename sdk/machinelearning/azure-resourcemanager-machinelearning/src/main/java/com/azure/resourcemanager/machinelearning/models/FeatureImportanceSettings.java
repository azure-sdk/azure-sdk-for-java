// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The FeatureImportanceSettings model. */
@Fluent
public final class FeatureImportanceSettings {
    /*
     * The mode of operation for computing feature importance.
     */
    @JsonProperty(value = "mode")
    private FeatureImportanceMode mode;

    /*
     * The name of the target column within the input data asset.
     */
    @JsonProperty(value = "targetColumn")
    private String targetColumn;

    /** Creates an instance of FeatureImportanceSettings class. */
    public FeatureImportanceSettings() {
    }

    /**
     * Get the mode property: The mode of operation for computing feature importance.
     *
     * @return the mode value.
     */
    public FeatureImportanceMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: The mode of operation for computing feature importance.
     *
     * @param mode the mode value to set.
     * @return the FeatureImportanceSettings object itself.
     */
    public FeatureImportanceSettings withMode(FeatureImportanceMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the targetColumn property: The name of the target column within the input data asset.
     *
     * @return the targetColumn value.
     */
    public String targetColumn() {
        return this.targetColumn;
    }

    /**
     * Set the targetColumn property: The name of the target column within the input data asset.
     *
     * @param targetColumn the targetColumn value to set.
     * @return the FeatureImportanceSettings object itself.
     */
    public FeatureImportanceSettings withTargetColumn(String targetColumn) {
        this.targetColumn = targetColumn;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

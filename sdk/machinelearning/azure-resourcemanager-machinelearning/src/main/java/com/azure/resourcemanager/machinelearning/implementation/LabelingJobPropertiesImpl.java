// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.resourcemanager.machinelearning.fluent.models.LabelingJobPropertiesInner;
import com.azure.resourcemanager.machinelearning.models.IdentityConfiguration;
import com.azure.resourcemanager.machinelearning.models.JobProvisioningState;
import com.azure.resourcemanager.machinelearning.models.JobService;
import com.azure.resourcemanager.machinelearning.models.JobStatus;
import com.azure.resourcemanager.machinelearning.models.LabelCategory;
import com.azure.resourcemanager.machinelearning.models.LabelingDataConfiguration;
import com.azure.resourcemanager.machinelearning.models.LabelingJobInstructions;
import com.azure.resourcemanager.machinelearning.models.LabelingJobMediaProperties;
import com.azure.resourcemanager.machinelearning.models.LabelingJobProperties;
import com.azure.resourcemanager.machinelearning.models.MLAssistConfiguration;
import com.azure.resourcemanager.machinelearning.models.NotificationSetting;
import com.azure.resourcemanager.machinelearning.models.ProgressMetrics;
import com.azure.resourcemanager.machinelearning.models.SecretConfiguration;
import com.azure.resourcemanager.machinelearning.models.StatusMessage;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.UUID;

public final class LabelingJobPropertiesImpl implements LabelingJobProperties {
    private LabelingJobPropertiesInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    LabelingJobPropertiesImpl(
        LabelingJobPropertiesInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String description() {
        return this.innerModel().description();
    }

    public Map<String, String> properties() {
        Map<String, String> inner = this.innerModel().properties();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String componentId() {
        return this.innerModel().componentId();
    }

    public String computeId() {
        return this.innerModel().computeId();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String experimentName() {
        return this.innerModel().experimentName();
    }

    public IdentityConfiguration identity() {
        return this.innerModel().identity();
    }

    public Boolean isArchived() {
        return this.innerModel().isArchived();
    }

    public NotificationSetting notificationSetting() {
        return this.innerModel().notificationSetting();
    }

    public Map<String, SecretConfiguration> secretsConfiguration() {
        Map<String, SecretConfiguration> inner = this.innerModel().secretsConfiguration();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Map<String, JobService> services() {
        Map<String, JobService> inner = this.innerModel().services();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public JobStatus status() {
        return this.innerModel().status();
    }

    public OffsetDateTime createdDateTime() {
        return this.innerModel().createdDateTime();
    }

    public LabelingDataConfiguration dataConfiguration() {
        return this.innerModel().dataConfiguration();
    }

    public LabelingJobInstructions jobInstructions() {
        return this.innerModel().jobInstructions();
    }

    public Map<String, LabelCategory> labelCategories() {
        Map<String, LabelCategory> inner = this.innerModel().labelCategories();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public LabelingJobMediaProperties labelingJobMediaProperties() {
        return this.innerModel().labelingJobMediaProperties();
    }

    public MLAssistConfiguration mlAssistConfiguration() {
        return this.innerModel().mlAssistConfiguration();
    }

    public ProgressMetrics progressMetrics() {
        return this.innerModel().progressMetrics();
    }

    public UUID projectId() {
        return this.innerModel().projectId();
    }

    public JobProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<StatusMessage> statusMessages() {
        List<StatusMessage> inner = this.innerModel().statusMessages();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public LabelingJobPropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }
}

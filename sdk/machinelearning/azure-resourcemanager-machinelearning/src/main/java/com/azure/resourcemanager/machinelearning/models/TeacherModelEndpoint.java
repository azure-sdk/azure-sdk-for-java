// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The TeacherModelEndpoint model.
 */
@Fluent
public final class TeacherModelEndpoint implements JsonSerializable<TeacherModelEndpoint> {
    /*
     * The endpointName property.
     */
    private String endpointName;

    /**
     * Creates an instance of TeacherModelEndpoint class.
     */
    public TeacherModelEndpoint() {
    }

    /**
     * Get the endpointName property: The endpointName property.
     * 
     * @return the endpointName value.
     */
    public String endpointName() {
        return this.endpointName;
    }

    /**
     * Set the endpointName property: The endpointName property.
     * 
     * @param endpointName the endpointName value to set.
     * @return the TeacherModelEndpoint object itself.
     */
    public TeacherModelEndpoint withEndpointName(String endpointName) {
        this.endpointName = endpointName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpointName", this.endpointName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TeacherModelEndpoint from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TeacherModelEndpoint if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TeacherModelEndpoint.
     */
    public static TeacherModelEndpoint fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TeacherModelEndpoint deserializedTeacherModelEndpoint = new TeacherModelEndpoint();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpointName".equals(fieldName)) {
                    deserializedTeacherModelEndpoint.endpointName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTeacherModelEndpoint;
        });
    }
}

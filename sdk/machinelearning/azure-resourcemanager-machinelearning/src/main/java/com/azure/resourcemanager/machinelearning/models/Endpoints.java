// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Endpoints.
 */
public interface Endpoints {
    /**
     * List All the endpoints under this workspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<EndpointResourcePropertiesBasicResource> list(String resourceGroupName, String workspaceName);

    /**
     * List All the endpoints under this workspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointType Endpoint type filter.
     * @param includeOnlineEndpoints The includeOnlineEndpoints parameter.
     * @param includeServerlessEndpoints The includeServerlessEndpoints parameter.
     * @param includeConnections The includeConnections parameter.
     * @param skip Continuation token for pagination.
     * @param expand Whether the endpoint resource will be expand to include deployment information, e.g.
     * $expand=deployments.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the paginated response with {@link PagedIterable}.
     */
    PagedIterable<EndpointResourcePropertiesBasicResource> list(String resourceGroupName, String workspaceName,
        EndpointType endpointType, Boolean includeOnlineEndpoints, Boolean includeServerlessEndpoints,
        Boolean includeConnections, String skip, String expand, Context context);

    /**
     * Gets endpoint resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return endpoint resource along with {@link Response}.
     */
    Response<EndpointResourcePropertiesBasicResource> getWithResponse(String resourceGroupName, String workspaceName,
        String endpointName, Context context);

    /**
     * Gets endpoint resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return endpoint resource.
     */
    EndpointResourcePropertiesBasicResource get(String resourceGroupName, String workspaceName, String endpointName);

    /**
     * List keys for the endpoint resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<EndpointKeys> listKeysWithResponse(String resourceGroupName, String workspaceName, String endpointName,
        Context context);

    /**
     * List keys for the endpoint resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    EndpointKeys listKeys(String resourceGroupName, String workspaceName, String endpointName);

    /**
     * Get available models under the endpoint resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return available models under the endpoint resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EndpointModelProperties> getModels(String resourceGroupName, String workspaceName,
        String endpointName);

    /**
     * Get available models under the endpoint resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return available models under the endpoint resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<EndpointModelProperties> getModels(String resourceGroupName, String workspaceName,
        String endpointName, Context context);

    /**
     * Regenerate account keys.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param body The body parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body along with {@link Response}.
     */
    Response<AccountApiKeys> regenerateKeysWithResponse(String resourceGroupName, String workspaceName,
        String endpointName, RegenerateServiceAccountKeyContent body, Context context);

    /**
     * Regenerate account keys.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param body The body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    AccountApiKeys regenerateKeys(String resourceGroupName, String workspaceName, String endpointName,
        RegenerateServiceAccountKeyContent body);

    /**
     * Gets endpoint resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return endpoint resource along with {@link Response}.
     */
    EndpointResourcePropertiesBasicResource getById(String id);

    /**
     * Gets endpoint resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return endpoint resource along with {@link Response}.
     */
    Response<EndpointResourcePropertiesBasicResource> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new EndpointResourcePropertiesBasicResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new EndpointResourcePropertiesBasicResource definition.
     */
    EndpointResourcePropertiesBasicResource.DefinitionStages.Blank define(String name);
}

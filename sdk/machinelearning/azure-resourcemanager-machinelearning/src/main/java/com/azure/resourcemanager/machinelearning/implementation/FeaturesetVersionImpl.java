// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.FeaturesetVersionInner;
import com.azure.resourcemanager.machinelearning.models.FeaturesetJob;
import com.azure.resourcemanager.machinelearning.models.FeaturesetVersion;
import com.azure.resourcemanager.machinelearning.models.FeaturesetVersionBackfillRequest;
import com.azure.resourcemanager.machinelearning.models.FeaturesetVersionProperties;

public final class FeaturesetVersionImpl
    implements FeaturesetVersion, FeaturesetVersion.Definition, FeaturesetVersion.Update {
    private FeaturesetVersionInner innerObject;

    private final com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public FeaturesetVersionProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FeaturesetVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearning.MachineLearningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String name;

    private String version;

    public FeaturesetVersionImpl withExistingFeatureset(String resourceGroupName, String workspaceName, String name) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        this.name = name;
        return this;
    }

    public FeaturesetVersion create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFeaturesetVersions()
                .createOrUpdate(resourceGroupName, workspaceName, name, version, this.innerModel(), Context.NONE);
        return this;
    }

    public FeaturesetVersion create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFeaturesetVersions()
                .createOrUpdate(resourceGroupName, workspaceName, name, version, this.innerModel(), context);
        return this;
    }

    FeaturesetVersionImpl(
        String name, com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = new FeaturesetVersionInner();
        this.serviceManager = serviceManager;
        this.version = name;
    }

    public FeaturesetVersionImpl update() {
        return this;
    }

    public FeaturesetVersion apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFeaturesetVersions()
                .createOrUpdate(resourceGroupName, workspaceName, name, version, this.innerModel(), Context.NONE);
        return this;
    }

    public FeaturesetVersion apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFeaturesetVersions()
                .createOrUpdate(resourceGroupName, workspaceName, name, version, this.innerModel(), context);
        return this;
    }

    FeaturesetVersionImpl(
        FeaturesetVersionInner innerObject,
        com.azure.resourcemanager.machinelearning.MachineLearningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "featuresets");
        this.version = Utils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public FeaturesetVersion refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFeaturesetVersions()
                .getWithResponse(resourceGroupName, workspaceName, name, version, Context.NONE)
                .getValue();
        return this;
    }

    public FeaturesetVersion refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFeaturesetVersions()
                .getWithResponse(resourceGroupName, workspaceName, name, version, context)
                .getValue();
        return this;
    }

    public FeaturesetJob backfill(FeaturesetVersionBackfillRequest body) {
        return serviceManager.featuresetVersions().backfill(resourceGroupName, workspaceName, name, version, body);
    }

    public FeaturesetJob backfill(FeaturesetVersionBackfillRequest body, Context context) {
        return serviceManager
            .featuresetVersions()
            .backfill(resourceGroupName, workspaceName, name, version, body, context);
    }

    public PagedIterable<FeaturesetJob> listMaterializationJobs() {
        return serviceManager
            .featuresetVersions()
            .listMaterializationJobs(resourceGroupName, workspaceName, name, version);
    }

    public PagedIterable<FeaturesetJob> listMaterializationJobs(
        String skip, String filters, String featureWindowStart, String featureWindowEnd, Context context) {
        return serviceManager
            .featuresetVersions()
            .listMaterializationJobs(
                resourceGroupName,
                workspaceName,
                name,
                version,
                skip,
                filters,
                featureWindowStart,
                featureWindowEnd,
                context);
    }

    public FeaturesetVersionImpl withProperties(FeaturesetVersionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

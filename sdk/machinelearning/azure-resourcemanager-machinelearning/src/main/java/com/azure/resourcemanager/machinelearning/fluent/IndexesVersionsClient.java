// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.IndexVersionInner;

/**
 * An instance of this class provides access to all the operations defined in IndexesVersionsClient.
 */
public interface IndexesVersionsClient {
    /**
     * List IndexVersion resources by Index.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of the workspace.
     * @param indexName Name of the index.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IndexVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IndexVersionInner> listByIndex(String resourceGroupName, String workspaceName, String indexName);

    /**
     * List IndexVersion resources by Index.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of the workspace.
     * @param indexName Name of the index.
     * @param label If set to true, $latest provides the latest of each index.
     * @param listViewType Defines what set of entities to return in list, default active only.
     * @param top The number of result items to return.
     * @param skip The number of result items to skip.
     * @param maxPageSize The maximum number of result items per page.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a IndexVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<IndexVersionInner> listByIndex(String resourceGroupName, String workspaceName, String indexName,
        String label, String listViewType, Integer top, Integer skip, Integer maxPageSize, Context context);

    /**
     * Get a Index.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of the workspace.
     * @param indexName Name of the index.
     * @param versionName version of the index.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Index along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IndexVersionInner> getWithResponse(String resourceGroupName, String workspaceName, String indexName,
        String versionName, Context context);

    /**
     * Get a Index.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of the workspace.
     * @param indexName Name of the index.
     * @param versionName version of the index.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Index.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IndexVersionInner get(String resourceGroupName, String workspaceName, String indexName, String versionName);

    /**
     * Create a Index.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of the workspace.
     * @param indexName Name of the index.
     * @param versionName version of the index.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return index Version resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<IndexVersionInner> createOrUpdateWithResponse(String resourceGroupName, String workspaceName,
        String indexName, String versionName, IndexVersionInner resource, Context context);

    /**
     * Create a Index.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of the workspace.
     * @param indexName Name of the index.
     * @param versionName version of the index.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return index Version resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    IndexVersionInner createOrUpdate(String resourceGroupName, String workspaceName, String indexName,
        String versionName, IndexVersionInner resource);
}

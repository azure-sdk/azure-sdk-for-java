// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The EndpointResourceProperties model.
 */
@Fluent
public class EndpointResourceProperties implements JsonSerializable<EndpointResourceProperties> {
    /*
     * Type of the endpoint.
     */
    private EndpointType endpointType = EndpointType.fromString("EndpointResourceProperties");

    /*
     * Byo resource id for creating the built-in model service endpoints.
     */
    private String associatedResourceId;

    /*
     * Uri of the endpoint.
     */
    private String endpointUri;

    /*
     * The failure reason if the creation failed.
     */
    private String failureReason;

    /*
     * Name of the endpoint.
     */
    private String name;

    /*
     * Read-only provision state status property.
     */
    private DefaultResourceProvisioningState provisioningState;

    /*
     * Whether the proxy (non-byo) endpoint is a regular endpoint or a OneKeyV2 AI services account endpoint.
     */
    private Boolean shouldCreateAiServicesEndpoint;

    /**
     * Creates an instance of EndpointResourceProperties class.
     */
    public EndpointResourceProperties() {
    }

    /**
     * Get the endpointType property: Type of the endpoint.
     * 
     * @return the endpointType value.
     */
    public EndpointType endpointType() {
        return this.endpointType;
    }

    /**
     * Get the associatedResourceId property: Byo resource id for creating the built-in model service endpoints.
     * 
     * @return the associatedResourceId value.
     */
    public String associatedResourceId() {
        return this.associatedResourceId;
    }

    /**
     * Set the associatedResourceId property: Byo resource id for creating the built-in model service endpoints.
     * 
     * @param associatedResourceId the associatedResourceId value to set.
     * @return the EndpointResourceProperties object itself.
     */
    public EndpointResourceProperties withAssociatedResourceId(String associatedResourceId) {
        this.associatedResourceId = associatedResourceId;
        return this;
    }

    /**
     * Get the endpointUri property: Uri of the endpoint.
     * 
     * @return the endpointUri value.
     */
    public String endpointUri() {
        return this.endpointUri;
    }

    /**
     * Set the endpointUri property: Uri of the endpoint.
     * 
     * @param endpointUri the endpointUri value to set.
     * @return the EndpointResourceProperties object itself.
     */
    public EndpointResourceProperties withEndpointUri(String endpointUri) {
        this.endpointUri = endpointUri;
        return this;
    }

    /**
     * Get the failureReason property: The failure reason if the creation failed.
     * 
     * @return the failureReason value.
     */
    public String failureReason() {
        return this.failureReason;
    }

    /**
     * Set the failureReason property: The failure reason if the creation failed.
     * 
     * @param failureReason the failureReason value to set.
     * @return the EndpointResourceProperties object itself.
     */
    public EndpointResourceProperties withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }

    /**
     * Get the name property: Name of the endpoint.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the endpoint.
     * 
     * @param name the name value to set.
     * @return the EndpointResourceProperties object itself.
     */
    public EndpointResourceProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the provisioningState property: Read-only provision state status property.
     * 
     * @return the provisioningState value.
     */
    public DefaultResourceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: Read-only provision state status property.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the EndpointResourceProperties object itself.
     */
    EndpointResourceProperties withProvisioningState(DefaultResourceProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the shouldCreateAiServicesEndpoint property: Whether the proxy (non-byo) endpoint is a regular endpoint or a
     * OneKeyV2 AI services account endpoint.
     * 
     * @return the shouldCreateAiServicesEndpoint value.
     */
    public Boolean shouldCreateAiServicesEndpoint() {
        return this.shouldCreateAiServicesEndpoint;
    }

    /**
     * Set the shouldCreateAiServicesEndpoint property: Whether the proxy (non-byo) endpoint is a regular endpoint or a
     * OneKeyV2 AI services account endpoint.
     * 
     * @param shouldCreateAiServicesEndpoint the shouldCreateAiServicesEndpoint value to set.
     * @return the EndpointResourceProperties object itself.
     */
    public EndpointResourceProperties withShouldCreateAiServicesEndpoint(Boolean shouldCreateAiServicesEndpoint) {
        this.shouldCreateAiServicesEndpoint = shouldCreateAiServicesEndpoint;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("endpointType", this.endpointType == null ? null : this.endpointType.toString());
        jsonWriter.writeStringField("associatedResourceId", this.associatedResourceId);
        jsonWriter.writeStringField("endpointUri", this.endpointUri);
        jsonWriter.writeStringField("failureReason", this.failureReason);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeBooleanField("shouldCreateAiServicesEndpoint", this.shouldCreateAiServicesEndpoint);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EndpointResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EndpointResourceProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EndpointResourceProperties.
     */
    public static EndpointResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String discriminatorValue = null;
            try (JsonReader readerToUse = reader.bufferObject()) {
                readerToUse.nextToken(); // Prepare for reading
                while (readerToUse.nextToken() != JsonToken.END_OBJECT) {
                    String fieldName = readerToUse.getFieldName();
                    readerToUse.nextToken();
                    if ("endpointType".equals(fieldName)) {
                        discriminatorValue = readerToUse.getString();
                        break;
                    } else {
                        readerToUse.skipChildren();
                    }
                }
                // Use the discriminator value to determine which subtype should be deserialized.
                if ("Azure.ContentSafety".equals(discriminatorValue)) {
                    return ContentSafetyEndpointResourceProperties.fromJson(readerToUse.reset());
                } else if ("managedOnlineEndpoint".equals(discriminatorValue)) {
                    return ManagedOnlineEndpointResourceProperties.fromJson(readerToUse.reset());
                } else if ("Azure.OpenAI".equals(discriminatorValue)) {
                    return OpenAIEndpointResourceProperties.fromJson(readerToUse.reset());
                } else if ("Azure.Speech".equals(discriminatorValue)) {
                    return SpeechEndpointResourceProperties.fromJson(readerToUse.reset());
                } else {
                    return fromJsonKnownDiscriminator(readerToUse.reset());
                }
            }
        });
    }

    static EndpointResourceProperties fromJsonKnownDiscriminator(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EndpointResourceProperties deserializedEndpointResourceProperties = new EndpointResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("endpointType".equals(fieldName)) {
                    deserializedEndpointResourceProperties.endpointType = EndpointType.fromString(reader.getString());
                } else if ("associatedResourceId".equals(fieldName)) {
                    deserializedEndpointResourceProperties.associatedResourceId = reader.getString();
                } else if ("endpointUri".equals(fieldName)) {
                    deserializedEndpointResourceProperties.endpointUri = reader.getString();
                } else if ("failureReason".equals(fieldName)) {
                    deserializedEndpointResourceProperties.failureReason = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedEndpointResourceProperties.name = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedEndpointResourceProperties.provisioningState
                        = DefaultResourceProvisioningState.fromString(reader.getString());
                } else if ("shouldCreateAiServicesEndpoint".equals(fieldName)) {
                    deserializedEndpointResourceProperties.shouldCreateAiServicesEndpoint
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEndpointResourceProperties;
        });
    }
}

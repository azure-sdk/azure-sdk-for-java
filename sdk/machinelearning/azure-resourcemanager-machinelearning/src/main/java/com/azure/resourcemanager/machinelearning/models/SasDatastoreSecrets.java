// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.machinelearning.fluent.models.DatastoreSecretsInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Datastore SAS secrets.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "secretsType",
    defaultImpl = SasDatastoreSecrets.class,
    visible = true)
@JsonTypeName("Sas")
@Fluent
public final class SasDatastoreSecrets extends DatastoreSecretsInner {
    /*
     * [Required] Credential type used to authentication with storage.
     */
    @JsonTypeId
    @JsonProperty(value = "secretsType", required = true)
    private SecretsType secretsType = SecretsType.SAS;

    /*
     * Storage container SAS token.
     */
    @JsonProperty(value = "sasToken")
    private String sasToken;

    /**
     * Creates an instance of SasDatastoreSecrets class.
     */
    public SasDatastoreSecrets() {
    }

    /**
     * Get the secretsType property: [Required] Credential type used to authentication with storage.
     * 
     * @return the secretsType value.
     */
    @Override
    public SecretsType secretsType() {
        return this.secretsType;
    }

    /**
     * Get the sasToken property: Storage container SAS token.
     * 
     * @return the sasToken value.
     */
    public String sasToken() {
        return this.sasToken;
    }

    /**
     * Set the sasToken property: Storage container SAS token.
     * 
     * @param sasToken the sasToken value to set.
     * @return the SasDatastoreSecrets object itself.
     */
    public SasDatastoreSecrets withSasToken(String sasToken) {
        this.sasToken = sasToken;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

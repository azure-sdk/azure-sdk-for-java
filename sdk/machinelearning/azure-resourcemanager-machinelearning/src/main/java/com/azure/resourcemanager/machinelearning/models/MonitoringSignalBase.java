// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;

/** The MonitoringSignalBase model. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "signalType",
    defaultImpl = MonitoringSignalBase.class)
@JsonTypeName("MonitoringSignalBase")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Custom", value = CustomMonitoringSignal.class),
    @JsonSubTypes.Type(name = "DataDrift", value = DataDriftMonitoringSignal.class),
    @JsonSubTypes.Type(name = "DataQuality", value = DataQualityMonitoringSignal.class),
    @JsonSubTypes.Type(name = "FeatureAttributionDrift", value = FeatureAttributionDriftMonitoringSignal.class),
    @JsonSubTypes.Type(name = "GenerationSafetyQuality", value = GenerationSafetyQualityMonitoringSignal.class),
    @JsonSubTypes.Type(name = "GenerationTokenStatistics", value = GenerationTokenStatisticsSignal.class),
    @JsonSubTypes.Type(name = "ModelPerformance", value = ModelPerformanceSignal.class),
    @JsonSubTypes.Type(name = "PredictionDrift", value = PredictionDriftMonitoringSignal.class)
})
@Fluent
public class MonitoringSignalBase {
    /*
     * The current notification mode for this signal.
     */
    @JsonProperty(value = "mode")
    private MonitoringNotificationMode mode;

    /*
     * Property dictionary. Properties can be added, but not removed or altered.
     */
    @JsonProperty(value = "properties")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> properties;

    /** Creates an instance of MonitoringSignalBase class. */
    public MonitoringSignalBase() {
    }

    /**
     * Get the mode property: The current notification mode for this signal.
     *
     * @return the mode value.
     */
    public MonitoringNotificationMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: The current notification mode for this signal.
     *
     * @param mode the mode value to set.
     * @return the MonitoringSignalBase object itself.
     */
    public MonitoringSignalBase withMode(MonitoringNotificationMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the properties property: Property dictionary. Properties can be added, but not removed or altered.
     *
     * @return the properties value.
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Property dictionary. Properties can be added, but not removed or altered.
     *
     * @param properties the properties value to set.
     * @return the MonitoringSignalBase object itself.
     */
    public MonitoringSignalBase withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

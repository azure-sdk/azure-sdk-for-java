// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.Duration;

/** The MonitoringSignalBase model. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "signalType",
    defaultImpl = MonitoringSignalBase.class)
@JsonTypeName("MonitoringSignalBase")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Custom", value = CustomMonitoringSignal.class),
    @JsonSubTypes.Type(name = "DataDrift", value = DataDriftMonitoringSignal.class),
    @JsonSubTypes.Type(name = "DataQuality", value = DataQualityMonitoringSignal.class),
    @JsonSubTypes.Type(name = "FeatureAttributionDrift", value = FeatureAttributionDriftMonitoringSignal.class),
    @JsonSubTypes.Type(name = "ModelPerformanceSignalBase", value = ModelPerformanceSignalBase.class),
    @JsonSubTypes.Type(name = "PredictionDrift", value = PredictionDriftMonitoringSignal.class)
})
@Fluent
public class MonitoringSignalBase {
    /*
     * The amount of time a single monitor should look back over the target data on a given run.
     */
    @JsonProperty(value = "lookbackPeriod")
    private Duration lookbackPeriod;

    /*
     * The current notification mode for this signal.
     */
    @JsonProperty(value = "mode")
    private MonitoringNotificationMode mode;

    /** Creates an instance of MonitoringSignalBase class. */
    public MonitoringSignalBase() {
    }

    /**
     * Get the lookbackPeriod property: The amount of time a single monitor should look back over the target data on a
     * given run.
     *
     * @return the lookbackPeriod value.
     */
    public Duration lookbackPeriod() {
        return this.lookbackPeriod;
    }

    /**
     * Set the lookbackPeriod property: The amount of time a single monitor should look back over the target data on a
     * given run.
     *
     * @param lookbackPeriod the lookbackPeriod value to set.
     * @return the MonitoringSignalBase object itself.
     */
    public MonitoringSignalBase withLookbackPeriod(Duration lookbackPeriod) {
        this.lookbackPeriod = lookbackPeriod;
        return this;
    }

    /**
     * Get the mode property: The current notification mode for this signal.
     *
     * @return the mode value.
     */
    public MonitoringNotificationMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: The current notification mode for this signal.
     *
     * @param mode the mode value to set.
     * @return the MonitoringSignalBase object itself.
     */
    public MonitoringSignalBase withMode(MonitoringNotificationMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

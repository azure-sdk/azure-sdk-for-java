// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ServerlessEndpointCapacityReservation model.
 */
@Fluent
public final class ServerlessEndpointCapacityReservation
    implements JsonSerializable<ServerlessEndpointCapacityReservation> {
    /*
     * The capacityReservationGroupId property.
     */
    private String capacityReservationGroupId;

    /*
     * The endpointReservedCapacity property.
     */
    private Integer endpointReservedCapacity;

    /**
     * Creates an instance of ServerlessEndpointCapacityReservation class.
     */
    public ServerlessEndpointCapacityReservation() {
    }

    /**
     * Get the capacityReservationGroupId property: The capacityReservationGroupId property.
     * 
     * @return the capacityReservationGroupId value.
     */
    public String capacityReservationGroupId() {
        return this.capacityReservationGroupId;
    }

    /**
     * Set the capacityReservationGroupId property: The capacityReservationGroupId property.
     * 
     * @param capacityReservationGroupId the capacityReservationGroupId value to set.
     * @return the ServerlessEndpointCapacityReservation object itself.
     */
    public ServerlessEndpointCapacityReservation withCapacityReservationGroupId(String capacityReservationGroupId) {
        this.capacityReservationGroupId = capacityReservationGroupId;
        return this;
    }

    /**
     * Get the endpointReservedCapacity property: The endpointReservedCapacity property.
     * 
     * @return the endpointReservedCapacity value.
     */
    public Integer endpointReservedCapacity() {
        return this.endpointReservedCapacity;
    }

    /**
     * Set the endpointReservedCapacity property: The endpointReservedCapacity property.
     * 
     * @param endpointReservedCapacity the endpointReservedCapacity value to set.
     * @return the ServerlessEndpointCapacityReservation object itself.
     */
    public ServerlessEndpointCapacityReservation withEndpointReservedCapacity(Integer endpointReservedCapacity) {
        this.endpointReservedCapacity = endpointReservedCapacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (capacityReservationGroupId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property capacityReservationGroupId in model ServerlessEndpointCapacityReservation"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ServerlessEndpointCapacityReservation.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("capacityReservationGroupId", this.capacityReservationGroupId);
        jsonWriter.writeNumberField("endpointReservedCapacity", this.endpointReservedCapacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServerlessEndpointCapacityReservation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServerlessEndpointCapacityReservation if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ServerlessEndpointCapacityReservation.
     */
    public static ServerlessEndpointCapacityReservation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServerlessEndpointCapacityReservation deserializedServerlessEndpointCapacityReservation
                = new ServerlessEndpointCapacityReservation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("capacityReservationGroupId".equals(fieldName)) {
                    deserializedServerlessEndpointCapacityReservation.capacityReservationGroupId = reader.getString();
                } else if ("endpointReservedCapacity".equals(fieldName)) {
                    deserializedServerlessEndpointCapacityReservation.endpointReservedCapacity
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServerlessEndpointCapacityReservation;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * This connection type covers the account key connection for Azure storage.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "authType")
@JsonTypeName("AccountKey")
@Fluent
public final class AccountKeyAuthTypeWorkspaceConnectionProperties extends WorkspaceConnectionPropertiesV2 {
    /*
     * The credentials property.
     */
    @JsonProperty(value = "credentials")
    private WorkspaceConnectionSharedAccessSignature credentials;

    /**
     * Creates an instance of AccountKeyAuthTypeWorkspaceConnectionProperties class.
     */
    public AccountKeyAuthTypeWorkspaceConnectionProperties() {
    }

    /**
     * Get the credentials property: The credentials property.
     * 
     * @return the credentials value.
     */
    public WorkspaceConnectionSharedAccessSignature credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: The credentials property.
     * 
     * @param credentials the credentials value to set.
     * @return the AccountKeyAuthTypeWorkspaceConnectionProperties object itself.
     */
    public AccountKeyAuthTypeWorkspaceConnectionProperties
        withCredentials(WorkspaceConnectionSharedAccessSignature credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountKeyAuthTypeWorkspaceConnectionProperties withCategory(ConnectionCategory category) {
        super.withCategory(category);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountKeyAuthTypeWorkspaceConnectionProperties withExpiryTime(OffsetDateTime expiryTime) {
        super.withExpiryTime(expiryTime);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountKeyAuthTypeWorkspaceConnectionProperties withIsSharedToAll(Boolean isSharedToAll) {
        super.withIsSharedToAll(isSharedToAll);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountKeyAuthTypeWorkspaceConnectionProperties withMetadata(Object metadata) {
        super.withMetadata(metadata);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountKeyAuthTypeWorkspaceConnectionProperties withSharedUserList(List<String> sharedUserList) {
        super.withSharedUserList(sharedUserList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountKeyAuthTypeWorkspaceConnectionProperties withTarget(String target) {
        super.withTarget(target);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (credentials() != null) {
            credentials().validate();
        }
    }
}

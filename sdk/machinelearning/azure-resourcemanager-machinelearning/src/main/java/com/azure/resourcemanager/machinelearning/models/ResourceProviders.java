// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ResourceProviders.
 */
public interface ResourceProviders {
    /**
     * InferenceGroups_GetDeltaModelsStatus.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param poolName InferencePool name.
     * @param groupName InferenceGroup name.
     * @param body DeltaModelBaseRequest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return contract returning to user the delta models along with {@link Response}.
     */
    Response<DeltaModelStatusResponse> inferenceDeltaModelWithResponse(String resourceGroupName, String workspaceName,
        String poolName, String groupName, DeltaModelStatusRequest body, Context context);

    /**
     * InferenceGroups_GetDeltaModelsStatus.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param poolName InferencePool name.
     * @param groupName InferenceGroup name.
     * @param body DeltaModelBaseRequest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return contract returning to user the delta models.
     */
    DeltaModelStatusResponse inferenceDeltaModel(String resourceGroupName, String workspaceName, String poolName,
        String groupName, DeltaModelStatusRequest body);

    /**
     * InferenceGroups_ListDeltaModels.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param poolName InferencePool name.
     * @param groupName InferenceGroup name.
     * @param body DeltaModelBaseRequest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of String entities as paginated response with {@link PagedIterable}.
     */
    PagedIterable<String> inferenceDeltaModel(String resourceGroupName, String workspaceName, String poolName,
        String groupName, DeltaModelListRequest body);

    /**
     * InferenceGroups_ListDeltaModels.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param poolName InferencePool name.
     * @param groupName InferenceGroup name.
     * @param body DeltaModelBaseRequest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of String entities as paginated response with {@link PagedIterable}.
     */
    PagedIterable<String> inferenceDeltaModel(String resourceGroupName, String workspaceName, String poolName,
        String groupName, DeltaModelListRequest body, Context context);

    /**
     * InferenceGroups_ModifyDeltaModels.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param poolName InferencePool name.
     * @param groupName InferenceGroup name.
     * @param body DeltaModelModifyRequest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> inferenceDeltaModelWithResponse(String resourceGroupName, String workspaceName, String poolName,
        String groupName, DeltaModelModifyRequest body, Context context);

    /**
     * InferenceGroups_ModifyDeltaModels.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param poolName InferencePool name.
     * @param groupName InferenceGroup name.
     * @param body DeltaModelModifyRequest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void inferenceDeltaModel(String resourceGroupName, String workspaceName, String poolName, String groupName,
        DeltaModelModifyRequest body);
}

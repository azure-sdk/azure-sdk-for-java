// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * DTO object representing feature set version.
 */
@Fluent
public final class FeaturesetVersionProperties extends AssetBase {
    /*
     * Specifies list of entities
     */
    @JsonProperty(value = "entities")
    private List<String> entities;

    /*
     * Specifies the materialization settings
     */
    @JsonProperty(value = "materializationSettings")
    private MaterializationSettings materializationSettings;

    /*
     * Provisioning state for the featureset version container.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private AssetProvisioningState provisioningState;

    /*
     * Specifies the feature spec details
     */
    @JsonProperty(value = "specification")
    private FeaturesetSpecification specification;

    /*
     * Specifies the asset stage
     */
    @JsonProperty(value = "stage")
    private String stage;

    /**
     * Creates an instance of FeaturesetVersionProperties class.
     */
    public FeaturesetVersionProperties() {
    }

    /**
     * Get the entities property: Specifies list of entities.
     * 
     * @return the entities value.
     */
    public List<String> entities() {
        return this.entities;
    }

    /**
     * Set the entities property: Specifies list of entities.
     * 
     * @param entities the entities value to set.
     * @return the FeaturesetVersionProperties object itself.
     */
    public FeaturesetVersionProperties withEntities(List<String> entities) {
        this.entities = entities;
        return this;
    }

    /**
     * Get the materializationSettings property: Specifies the materialization settings.
     * 
     * @return the materializationSettings value.
     */
    public MaterializationSettings materializationSettings() {
        return this.materializationSettings;
    }

    /**
     * Set the materializationSettings property: Specifies the materialization settings.
     * 
     * @param materializationSettings the materializationSettings value to set.
     * @return the FeaturesetVersionProperties object itself.
     */
    public FeaturesetVersionProperties withMaterializationSettings(MaterializationSettings materializationSettings) {
        this.materializationSettings = materializationSettings;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state for the featureset version container.
     * 
     * @return the provisioningState value.
     */
    public AssetProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the specification property: Specifies the feature spec details.
     * 
     * @return the specification value.
     */
    public FeaturesetSpecification specification() {
        return this.specification;
    }

    /**
     * Set the specification property: Specifies the feature spec details.
     * 
     * @param specification the specification value to set.
     * @return the FeaturesetVersionProperties object itself.
     */
    public FeaturesetVersionProperties withSpecification(FeaturesetSpecification specification) {
        this.specification = specification;
        return this;
    }

    /**
     * Get the stage property: Specifies the asset stage.
     * 
     * @return the stage value.
     */
    public String stage() {
        return this.stage;
    }

    /**
     * Set the stage property: Specifies the asset stage.
     * 
     * @param stage the stage value to set.
     * @return the FeaturesetVersionProperties object itself.
     */
    public FeaturesetVersionProperties withStage(String stage) {
        this.stage = stage;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeaturesetVersionProperties withIsAnonymous(Boolean isAnonymous) {
        super.withIsAnonymous(isAnonymous);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeaturesetVersionProperties withIsArchived(Boolean isArchived) {
        super.withIsArchived(isArchived);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeaturesetVersionProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeaturesetVersionProperties withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeaturesetVersionProperties withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (materializationSettings() != null) {
            materializationSettings().validate();
        }
        if (specification() != null) {
            specification().validate();
        }
    }
}

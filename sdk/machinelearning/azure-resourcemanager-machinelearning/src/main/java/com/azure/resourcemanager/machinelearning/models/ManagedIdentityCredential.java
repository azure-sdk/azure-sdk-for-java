// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Credential for user managed identity. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "credentialType")
@JsonTypeName("ManagedIdentity")
@Fluent
public final class ManagedIdentityCredential extends DataReferenceCredential {
    /*
     * ManagedIdentityCredential identity type
     */
    @JsonProperty(value = "managedIdentityType")
    private String managedIdentityType;

    /*
     * ClientId for the UAMI. For ManagedIdentityType = SystemManaged, this field is null.
     */
    @JsonProperty(value = "userManagedIdentityClientId")
    private String userManagedIdentityClientId;

    /*
     * PrincipalId for the UAMI. For ManagedIdentityType = SystemManaged, this field is null.
     */
    @JsonProperty(value = "userManagedIdentityPrincipalId")
    private String userManagedIdentityPrincipalId;

    /*
     * Full arm scope for the Id. For ManagedIdentityType = SystemManaged, this field is null.
     */
    @JsonProperty(value = "userManagedIdentityResourceId")
    private String userManagedIdentityResourceId;

    /*
     * TenantId for the UAMI. For ManagedIdentityType = SystemManaged, this field is null.
     */
    @JsonProperty(value = "userManagedIdentityTenantId")
    private String userManagedIdentityTenantId;

    /** Creates an instance of ManagedIdentityCredential class. */
    public ManagedIdentityCredential() {
    }

    /**
     * Get the managedIdentityType property: ManagedIdentityCredential identity type.
     *
     * @return the managedIdentityType value.
     */
    public String managedIdentityType() {
        return this.managedIdentityType;
    }

    /**
     * Set the managedIdentityType property: ManagedIdentityCredential identity type.
     *
     * @param managedIdentityType the managedIdentityType value to set.
     * @return the ManagedIdentityCredential object itself.
     */
    public ManagedIdentityCredential withManagedIdentityType(String managedIdentityType) {
        this.managedIdentityType = managedIdentityType;
        return this;
    }

    /**
     * Get the userManagedIdentityClientId property: ClientId for the UAMI. For ManagedIdentityType = SystemManaged,
     * this field is null.
     *
     * @return the userManagedIdentityClientId value.
     */
    public String userManagedIdentityClientId() {
        return this.userManagedIdentityClientId;
    }

    /**
     * Set the userManagedIdentityClientId property: ClientId for the UAMI. For ManagedIdentityType = SystemManaged,
     * this field is null.
     *
     * @param userManagedIdentityClientId the userManagedIdentityClientId value to set.
     * @return the ManagedIdentityCredential object itself.
     */
    public ManagedIdentityCredential withUserManagedIdentityClientId(String userManagedIdentityClientId) {
        this.userManagedIdentityClientId = userManagedIdentityClientId;
        return this;
    }

    /**
     * Get the userManagedIdentityPrincipalId property: PrincipalId for the UAMI. For ManagedIdentityType =
     * SystemManaged, this field is null.
     *
     * @return the userManagedIdentityPrincipalId value.
     */
    public String userManagedIdentityPrincipalId() {
        return this.userManagedIdentityPrincipalId;
    }

    /**
     * Set the userManagedIdentityPrincipalId property: PrincipalId for the UAMI. For ManagedIdentityType =
     * SystemManaged, this field is null.
     *
     * @param userManagedIdentityPrincipalId the userManagedIdentityPrincipalId value to set.
     * @return the ManagedIdentityCredential object itself.
     */
    public ManagedIdentityCredential withUserManagedIdentityPrincipalId(String userManagedIdentityPrincipalId) {
        this.userManagedIdentityPrincipalId = userManagedIdentityPrincipalId;
        return this;
    }

    /**
     * Get the userManagedIdentityResourceId property: Full arm scope for the Id. For ManagedIdentityType =
     * SystemManaged, this field is null.
     *
     * @return the userManagedIdentityResourceId value.
     */
    public String userManagedIdentityResourceId() {
        return this.userManagedIdentityResourceId;
    }

    /**
     * Set the userManagedIdentityResourceId property: Full arm scope for the Id. For ManagedIdentityType =
     * SystemManaged, this field is null.
     *
     * @param userManagedIdentityResourceId the userManagedIdentityResourceId value to set.
     * @return the ManagedIdentityCredential object itself.
     */
    public ManagedIdentityCredential withUserManagedIdentityResourceId(String userManagedIdentityResourceId) {
        this.userManagedIdentityResourceId = userManagedIdentityResourceId;
        return this;
    }

    /**
     * Get the userManagedIdentityTenantId property: TenantId for the UAMI. For ManagedIdentityType = SystemManaged,
     * this field is null.
     *
     * @return the userManagedIdentityTenantId value.
     */
    public String userManagedIdentityTenantId() {
        return this.userManagedIdentityTenantId;
    }

    /**
     * Set the userManagedIdentityTenantId property: TenantId for the UAMI. For ManagedIdentityType = SystemManaged,
     * this field is null.
     *
     * @param userManagedIdentityTenantId the userManagedIdentityTenantId value to set.
     * @return the ManagedIdentityCredential object itself.
     */
    public ManagedIdentityCredential withUserManagedIdentityTenantId(String userManagedIdentityTenantId) {
        this.userManagedIdentityTenantId = userManagedIdentityTenantId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

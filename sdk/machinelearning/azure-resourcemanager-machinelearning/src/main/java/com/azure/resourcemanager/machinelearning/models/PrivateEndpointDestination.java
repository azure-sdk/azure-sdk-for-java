// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The PrivateEndpointDestination model. */
@Fluent
public final class PrivateEndpointDestination {
    /*
     * The serviceResourceId property.
     */
    @JsonProperty(value = "serviceResourceId")
    private String serviceResourceId;

    /*
     * The sparkEnabled property.
     */
    @JsonProperty(value = "sparkEnabled")
    private Boolean sparkEnabled;

    /*
     * The sparkStatus property.
     */
    @JsonProperty(value = "sparkStatus")
    private RuleStatus sparkStatus;

    /*
     * The subresourceTarget property.
     */
    @JsonProperty(value = "subresourceTarget")
    private String subresourceTarget;

    /** Creates an instance of PrivateEndpointDestination class. */
    public PrivateEndpointDestination() {
    }

    /**
     * Get the serviceResourceId property: The serviceResourceId property.
     *
     * @return the serviceResourceId value.
     */
    public String serviceResourceId() {
        return this.serviceResourceId;
    }

    /**
     * Set the serviceResourceId property: The serviceResourceId property.
     *
     * @param serviceResourceId the serviceResourceId value to set.
     * @return the PrivateEndpointDestination object itself.
     */
    public PrivateEndpointDestination withServiceResourceId(String serviceResourceId) {
        this.serviceResourceId = serviceResourceId;
        return this;
    }

    /**
     * Get the sparkEnabled property: The sparkEnabled property.
     *
     * @return the sparkEnabled value.
     */
    public Boolean sparkEnabled() {
        return this.sparkEnabled;
    }

    /**
     * Set the sparkEnabled property: The sparkEnabled property.
     *
     * @param sparkEnabled the sparkEnabled value to set.
     * @return the PrivateEndpointDestination object itself.
     */
    public PrivateEndpointDestination withSparkEnabled(Boolean sparkEnabled) {
        this.sparkEnabled = sparkEnabled;
        return this;
    }

    /**
     * Get the sparkStatus property: The sparkStatus property.
     *
     * @return the sparkStatus value.
     */
    public RuleStatus sparkStatus() {
        return this.sparkStatus;
    }

    /**
     * Set the sparkStatus property: The sparkStatus property.
     *
     * @param sparkStatus the sparkStatus value to set.
     * @return the PrivateEndpointDestination object itself.
     */
    public PrivateEndpointDestination withSparkStatus(RuleStatus sparkStatus) {
        this.sparkStatus = sparkStatus;
        return this;
    }

    /**
     * Get the subresourceTarget property: The subresourceTarget property.
     *
     * @return the subresourceTarget value.
     */
    public String subresourceTarget() {
        return this.subresourceTarget;
    }

    /**
     * Set the subresourceTarget property: The subresourceTarget property.
     *
     * @param subresourceTarget the subresourceTarget value to set.
     * @return the PrivateEndpointDestination object itself.
     */
    public PrivateEndpointDestination withSubresourceTarget(String subresourceTarget) {
        this.subresourceTarget = subresourceTarget;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.fluent.models.RaiPolicyPropertiesBasicResourceInner;

/**
 * Resource collection API of RaiPolicyOperations.
 */
public interface RaiPolicyOperations {
    /**
     * Deletes the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param raiPolicyName Name of the Rai Policy.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, String endpointName, String raiPolicyName);

    /**
     * Deletes the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param raiPolicyName Name of the Rai Policy.
     * @param proxyApiVersion Api version used by proxy call.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String workspaceName, String endpointName, String raiPolicyName,
        String proxyApiVersion, Context context);

    /**
     * Gets the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param raiPolicyName Name of the Rai Policy.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Content Filters associated with the Azure OpenAI account along with {@link Response}.
     */
    Response<RaiPolicyPropertiesBasicResource> getWithResponse(String resourceGroupName, String workspaceName,
        String endpointName, String raiPolicyName, Context context);

    /**
     * Gets the specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param raiPolicyName Name of the Rai Policy.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified Content Filters associated with the Azure OpenAI account.
     */
    RaiPolicyPropertiesBasicResource get(String resourceGroupName, String workspaceName, String endpointName,
        String raiPolicyName);

    /**
     * Update the state of specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param raiPolicyName Name of the Rai Policy.
     * @param body The body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure OpenAI Content Filters resource.
     */
    RaiPolicyPropertiesBasicResource create(String resourceGroupName, String workspaceName, String endpointName,
        String raiPolicyName, RaiPolicyPropertiesBasicResourceInner body);

    /**
     * Update the state of specified Content Filters associated with the Azure OpenAI account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Azure Machine Learning Workspace Name.
     * @param endpointName Name of the endpoint resource.
     * @param raiPolicyName Name of the Rai Policy.
     * @param body The body parameter.
     * @param proxyApiVersion Api version used by proxy call.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure OpenAI Content Filters resource.
     */
    RaiPolicyPropertiesBasicResource create(String resourceGroupName, String workspaceName, String endpointName,
        String raiPolicyName, RaiPolicyPropertiesBasicResourceInner body, String proxyApiVersion, Context context);
}

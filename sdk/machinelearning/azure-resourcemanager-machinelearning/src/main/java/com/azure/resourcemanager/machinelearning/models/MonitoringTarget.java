// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Monitoring target definition.
 */
@Fluent
public final class MonitoringTarget {
    /*
     * The ARM resource ID of either the deployment targeted by this monitor.
     */
    @JsonProperty(value = "deploymentId")
    private String deploymentId;

    /*
     * The ARM resource ID of either the model targeted by this monitor.
     */
    @JsonProperty(value = "modelId")
    private String modelId;

    /*
     * [Required] The machine learning task type of the model.
     */
    @JsonProperty(value = "taskType", required = true)
    private ModelTaskType taskType;

    /**
     * Creates an instance of MonitoringTarget class.
     */
    public MonitoringTarget() {
    }

    /**
     * Get the deploymentId property: The ARM resource ID of either the deployment targeted by this monitor.
     * 
     * @return the deploymentId value.
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    /**
     * Set the deploymentId property: The ARM resource ID of either the deployment targeted by this monitor.
     * 
     * @param deploymentId the deploymentId value to set.
     * @return the MonitoringTarget object itself.
     */
    public MonitoringTarget withDeploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
        return this;
    }

    /**
     * Get the modelId property: The ARM resource ID of either the model targeted by this monitor.
     * 
     * @return the modelId value.
     */
    public String modelId() {
        return this.modelId;
    }

    /**
     * Set the modelId property: The ARM resource ID of either the model targeted by this monitor.
     * 
     * @param modelId the modelId value to set.
     * @return the MonitoringTarget object itself.
     */
    public MonitoringTarget withModelId(String modelId) {
        this.modelId = modelId;
        return this;
    }

    /**
     * Get the taskType property: [Required] The machine learning task type of the model.
     * 
     * @return the taskType value.
     */
    public ModelTaskType taskType() {
        return this.taskType;
    }

    /**
     * Set the taskType property: [Required] The machine learning task type of the model.
     * 
     * @param taskType the taskType value to set.
     * @return the MonitoringTarget object itself.
     */
    public MonitoringTarget withTaskType(ModelTaskType taskType) {
        this.taskType = taskType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (taskType() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property taskType in model MonitoringTarget"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MonitoringTarget.class);
}

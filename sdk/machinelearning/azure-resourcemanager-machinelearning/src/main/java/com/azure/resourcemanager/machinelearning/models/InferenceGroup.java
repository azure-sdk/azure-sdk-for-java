// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Inference group configuration. */
@Fluent
public final class InferenceGroup extends PropertiesBase {
    /*
     * Capacity to be used from the pool's reserved capacity.
     * optional
     */
    @JsonProperty(value = "bonusExtraCapacity")
    private Integer bonusExtraCapacity;

    /*
     * Metadata for the inference group.
     */
    @JsonProperty(value = "data")
    private String data;

    /*
     * Priority of the group within the
     * N:Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20230801Preview.Pools.InferencePools.
     */
    @JsonProperty(value = "priority")
    private Integer priority;

    /*
     * Provisioning state for the inference group.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private PoolProvisioningState provisioningState;

    /** Creates an instance of InferenceGroup class. */
    public InferenceGroup() {
    }

    /**
     * Get the bonusExtraCapacity property: Capacity to be used from the pool's reserved capacity. optional.
     *
     * @return the bonusExtraCapacity value.
     */
    public Integer bonusExtraCapacity() {
        return this.bonusExtraCapacity;
    }

    /**
     * Set the bonusExtraCapacity property: Capacity to be used from the pool's reserved capacity. optional.
     *
     * @param bonusExtraCapacity the bonusExtraCapacity value to set.
     * @return the InferenceGroup object itself.
     */
    public InferenceGroup withBonusExtraCapacity(Integer bonusExtraCapacity) {
        this.bonusExtraCapacity = bonusExtraCapacity;
        return this;
    }

    /**
     * Get the data property: Metadata for the inference group.
     *
     * @return the data value.
     */
    public String data() {
        return this.data;
    }

    /**
     * Set the data property: Metadata for the inference group.
     *
     * @param data the data value to set.
     * @return the InferenceGroup object itself.
     */
    public InferenceGroup withData(String data) {
        this.data = data;
        return this;
    }

    /**
     * Get the priority property: Priority of the group within the
     * N:Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20230801Preview.Pools.InferencePools.
     *
     * @return the priority value.
     */
    public Integer priority() {
        return this.priority;
    }

    /**
     * Set the priority property: Priority of the group within the
     * N:Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20230801Preview.Pools.InferencePools.
     *
     * @param priority the priority value to set.
     * @return the InferenceGroup object itself.
     */
    public InferenceGroup withPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state for the inference group.
     *
     * @return the provisioningState value.
     */
    public PoolProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /** {@inheritDoc} */
    @Override
    public InferenceGroup withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public InferenceGroup withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

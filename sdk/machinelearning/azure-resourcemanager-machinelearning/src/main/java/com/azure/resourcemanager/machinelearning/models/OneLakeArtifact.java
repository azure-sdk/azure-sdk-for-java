// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** OneLake artifact (data source) configuration. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "artifactType",
    defaultImpl = OneLakeArtifact.class)
@JsonTypeName("OneLakeArtifact")
@JsonSubTypes({@JsonSubTypes.Type(name = "Lakehouse", value = LakehouseArtifact.class)})
@Fluent
public class OneLakeArtifact {
    /*
     * [Required] OneLake artifact name
     */
    @JsonProperty(value = "artifactName", required = true)
    private String artifactName;

    /** Creates an instance of OneLakeArtifact class. */
    public OneLakeArtifact() {
    }

    /**
     * Get the artifactName property: [Required] OneLake artifact name.
     *
     * @return the artifactName value.
     */
    public String artifactName() {
        return this.artifactName;
    }

    /**
     * Set the artifactName property: [Required] OneLake artifact name.
     *
     * @param artifactName the artifactName value to set.
     * @return the OneLakeArtifact object itself.
     */
    public OneLakeArtifact withArtifactName(String artifactName) {
        this.artifactName = artifactName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (artifactName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property artifactName in model OneLakeArtifact"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(OneLakeArtifact.class);
}

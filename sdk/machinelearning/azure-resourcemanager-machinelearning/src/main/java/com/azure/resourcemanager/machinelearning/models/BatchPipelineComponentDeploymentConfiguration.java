// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.Map;

/** Properties for a Batch Pipeline Component Deployment. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "deploymentConfigurationType")
@JsonTypeName("PipelineComponent")
@Fluent
public final class BatchPipelineComponentDeploymentConfiguration extends BatchDeploymentConfiguration {
    /*
     * The ARM id of the component to be run.
     */
    @JsonProperty(value = "componentId")
    private IdAssetReference componentId;

    /*
     * The description which will be applied to the job.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Run-time settings for the pipeline job.
     */
    @JsonProperty(value = "settings")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> settings;

    /*
     * The tags which will be applied to the job.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /** Creates an instance of BatchPipelineComponentDeploymentConfiguration class. */
    public BatchPipelineComponentDeploymentConfiguration() {
    }

    /**
     * Get the componentId property: The ARM id of the component to be run.
     *
     * @return the componentId value.
     */
    public IdAssetReference componentId() {
        return this.componentId;
    }

    /**
     * Set the componentId property: The ARM id of the component to be run.
     *
     * @param componentId the componentId value to set.
     * @return the BatchPipelineComponentDeploymentConfiguration object itself.
     */
    public BatchPipelineComponentDeploymentConfiguration withComponentId(IdAssetReference componentId) {
        this.componentId = componentId;
        return this;
    }

    /**
     * Get the description property: The description which will be applied to the job.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description which will be applied to the job.
     *
     * @param description the description value to set.
     * @return the BatchPipelineComponentDeploymentConfiguration object itself.
     */
    public BatchPipelineComponentDeploymentConfiguration withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the settings property: Run-time settings for the pipeline job.
     *
     * @return the settings value.
     */
    public Map<String, String> settings() {
        return this.settings;
    }

    /**
     * Set the settings property: Run-time settings for the pipeline job.
     *
     * @param settings the settings value to set.
     * @return the BatchPipelineComponentDeploymentConfiguration object itself.
     */
    public BatchPipelineComponentDeploymentConfiguration withSettings(Map<String, String> settings) {
        this.settings = settings;
        return this;
    }

    /**
     * Get the tags property: The tags which will be applied to the job.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: The tags which will be applied to the job.
     *
     * @param tags the tags value to set.
     * @return the BatchPipelineComponentDeploymentConfiguration object itself.
     */
    public BatchPipelineComponentDeploymentConfiguration withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (componentId() != null) {
            componentId().validate();
        }
    }
}

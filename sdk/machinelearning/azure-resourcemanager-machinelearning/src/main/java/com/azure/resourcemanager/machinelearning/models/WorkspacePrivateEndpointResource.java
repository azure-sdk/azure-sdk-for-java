// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Private Endpoint resource.
 */
@Immutable
public final class WorkspacePrivateEndpointResource implements JsonSerializable<WorkspacePrivateEndpointResource> {
    /*
     * e.g.
     * /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{
     * privateEndpointName}
     */
    private String id;

    /*
     * The subnetId that the private endpoint is connected to.
     */
    private String subnetArmId;

    /**
     * Creates an instance of WorkspacePrivateEndpointResource class.
     */
    public WorkspacePrivateEndpointResource() {
    }

    /**
     * Get the id property: e.g.
     * /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the subnetArmId property: The subnetId that the private endpoint is connected to.
     * 
     * @return the subnetArmId value.
     */
    public String subnetArmId() {
        return this.subnetArmId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkspacePrivateEndpointResource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkspacePrivateEndpointResource if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkspacePrivateEndpointResource.
     */
    public static WorkspacePrivateEndpointResource fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkspacePrivateEndpointResource deserializedWorkspacePrivateEndpointResource
                = new WorkspacePrivateEndpointResource();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedWorkspacePrivateEndpointResource.id = reader.getString();
                } else if ("subnetArmId".equals(fieldName)) {
                    deserializedWorkspacePrivateEndpointResource.subnetArmId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkspacePrivateEndpointResource;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Configuration for ScaleUnit pool.
 */
@Fluent
public final class ScaleUnitConfiguration implements JsonSerializable<ScaleUnitConfiguration> {
    /*
     * Gets or sets a value indicating whether PublicEgress is disabled.
     */
    private Boolean disablePublicEgress;

    /*
     * Gets or sets a list of Registry sources that will be used to confirm identity, storage, ACR.
     */
    private List<String> registries;

    /**
     * Creates an instance of ScaleUnitConfiguration class.
     */
    public ScaleUnitConfiguration() {
    }

    /**
     * Get the disablePublicEgress property: Gets or sets a value indicating whether PublicEgress is disabled.
     * 
     * @return the disablePublicEgress value.
     */
    public Boolean disablePublicEgress() {
        return this.disablePublicEgress;
    }

    /**
     * Set the disablePublicEgress property: Gets or sets a value indicating whether PublicEgress is disabled.
     * 
     * @param disablePublicEgress the disablePublicEgress value to set.
     * @return the ScaleUnitConfiguration object itself.
     */
    public ScaleUnitConfiguration withDisablePublicEgress(Boolean disablePublicEgress) {
        this.disablePublicEgress = disablePublicEgress;
        return this;
    }

    /**
     * Get the registries property: Gets or sets a list of Registry sources that will be used to confirm identity,
     * storage, ACR.
     * 
     * @return the registries value.
     */
    public List<String> registries() {
        return this.registries;
    }

    /**
     * Set the registries property: Gets or sets a list of Registry sources that will be used to confirm identity,
     * storage, ACR.
     * 
     * @param registries the registries value to set.
     * @return the ScaleUnitConfiguration object itself.
     */
    public ScaleUnitConfiguration withRegistries(List<String> registries) {
        this.registries = registries;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("disablePublicEgress", this.disablePublicEgress);
        jsonWriter.writeArrayField("registries", this.registries, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScaleUnitConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScaleUnitConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ScaleUnitConfiguration.
     */
    public static ScaleUnitConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScaleUnitConfiguration deserializedScaleUnitConfiguration = new ScaleUnitConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("disablePublicEgress".equals(fieldName)) {
                    deserializedScaleUnitConfiguration.disablePublicEgress = reader.getNullable(JsonReader::getBoolean);
                } else if ("registries".equals(fieldName)) {
                    List<String> registries = reader.readArray(reader1 -> reader1.getString());
                    deserializedScaleUnitConfiguration.registries = registries;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScaleUnitConfiguration;
        });
    }
}

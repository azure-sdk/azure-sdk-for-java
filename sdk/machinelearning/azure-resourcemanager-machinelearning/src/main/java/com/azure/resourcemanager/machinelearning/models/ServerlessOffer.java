// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The ServerlessOffer model.
 */
@Fluent
public final class ServerlessOffer {
    /*
     * [Required] The name of the Serverless Offer
     */
    @JsonProperty(value = "offerName", required = true)
    private String offerName;

    /*
     * [Required] Publisher name of the Serverless Offer
     */
    @JsonProperty(value = "publisher", required = true)
    private String publisher;

    /**
     * Creates an instance of ServerlessOffer class.
     */
    public ServerlessOffer() {
    }

    /**
     * Get the offerName property: [Required] The name of the Serverless Offer.
     * 
     * @return the offerName value.
     */
    public String offerName() {
        return this.offerName;
    }

    /**
     * Set the offerName property: [Required] The name of the Serverless Offer.
     * 
     * @param offerName the offerName value to set.
     * @return the ServerlessOffer object itself.
     */
    public ServerlessOffer withOfferName(String offerName) {
        this.offerName = offerName;
        return this;
    }

    /**
     * Get the publisher property: [Required] Publisher name of the Serverless Offer.
     * 
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Set the publisher property: [Required] Publisher name of the Serverless Offer.
     * 
     * @param publisher the publisher value to set.
     * @return the ServerlessOffer object itself.
     */
    public ServerlessOffer withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (offerName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property offerName in model ServerlessOffer"));
        }
        if (publisher() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property publisher in model ServerlessOffer"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ServerlessOffer.class);
}

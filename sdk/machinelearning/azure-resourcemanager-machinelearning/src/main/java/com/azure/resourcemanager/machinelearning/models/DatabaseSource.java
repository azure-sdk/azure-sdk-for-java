// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/**
 * The DatabaseSource model.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "sourceType", defaultImpl = DatabaseSource.class, visible = true)
@JsonTypeName("database")
@Fluent
public final class DatabaseSource extends DataImportSource {
    /*
     * [Required] Specifies the type of data.
     */
    @JsonTypeId
    @JsonProperty(value = "sourceType", required = true)
    private DataImportSourceType sourceType = DataImportSourceType.DATABASE;

    /*
     * SQL Query statement for data import Database source
     */
    @JsonProperty(value = "query")
    private String query;

    /*
     * SQL StoredProcedure on data import Database source
     */
    @JsonProperty(value = "storedProcedure")
    private String storedProcedure;

    /*
     * SQL StoredProcedure parameters
     */
    @JsonProperty(value = "storedProcedureParams")
    private List<Map<String, String>> storedProcedureParams;

    /*
     * Name of the table on data import Database source
     */
    @JsonProperty(value = "tableName")
    private String tableName;

    /**
     * Creates an instance of DatabaseSource class.
     */
    public DatabaseSource() {
    }

    /**
     * Get the sourceType property: [Required] Specifies the type of data.
     * 
     * @return the sourceType value.
     */
    @Override
    public DataImportSourceType sourceType() {
        return this.sourceType;
    }

    /**
     * Get the query property: SQL Query statement for data import Database source.
     * 
     * @return the query value.
     */
    public String query() {
        return this.query;
    }

    /**
     * Set the query property: SQL Query statement for data import Database source.
     * 
     * @param query the query value to set.
     * @return the DatabaseSource object itself.
     */
    public DatabaseSource withQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get the storedProcedure property: SQL StoredProcedure on data import Database source.
     * 
     * @return the storedProcedure value.
     */
    public String storedProcedure() {
        return this.storedProcedure;
    }

    /**
     * Set the storedProcedure property: SQL StoredProcedure on data import Database source.
     * 
     * @param storedProcedure the storedProcedure value to set.
     * @return the DatabaseSource object itself.
     */
    public DatabaseSource withStoredProcedure(String storedProcedure) {
        this.storedProcedure = storedProcedure;
        return this;
    }

    /**
     * Get the storedProcedureParams property: SQL StoredProcedure parameters.
     * 
     * @return the storedProcedureParams value.
     */
    public List<Map<String, String>> storedProcedureParams() {
        return this.storedProcedureParams;
    }

    /**
     * Set the storedProcedureParams property: SQL StoredProcedure parameters.
     * 
     * @param storedProcedureParams the storedProcedureParams value to set.
     * @return the DatabaseSource object itself.
     */
    public DatabaseSource withStoredProcedureParams(List<Map<String, String>> storedProcedureParams) {
        this.storedProcedureParams = storedProcedureParams;
        return this;
    }

    /**
     * Get the tableName property: Name of the table on data import Database source.
     * 
     * @return the tableName value.
     */
    public String tableName() {
        return this.tableName;
    }

    /**
     * Set the tableName property: Name of the table on data import Database source.
     * 
     * @param tableName the tableName value to set.
     * @return the DatabaseSource object itself.
     */
    public DatabaseSource withTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatabaseSource withConnection(String connection) {
        super.withConnection(connection);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

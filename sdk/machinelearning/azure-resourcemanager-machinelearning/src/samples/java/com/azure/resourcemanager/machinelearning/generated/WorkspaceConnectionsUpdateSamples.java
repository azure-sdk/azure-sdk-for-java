// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.resourcemanager.machinelearning.models.AccessKeyAuthTypeWorkspaceConnectionProperties;
import com.azure.resourcemanager.machinelearning.models.ConnectionCategory;
import com.azure.resourcemanager.machinelearning.models.WorkspaceConnectionAccessKey;
import com.azure.resourcemanager.machinelearning.models.WorkspaceConnectionPropertiesV2BasicResource;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for WorkspaceConnections Update.
 */
public final class WorkspaceConnectionsUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/stable/2024-10-01/
     * examples/WorkspaceConnection/update.json
     */
    /**
     * Sample code: UpdateWorkspaceConnection.
     * 
     * @param manager Entry point to MachineLearningManager.
     */
    public static void
        updateWorkspaceConnection(com.azure.resourcemanager.machinelearning.MachineLearningManager manager) {
        WorkspaceConnectionPropertiesV2BasicResource resource = manager.workspaceConnections()
            .getWithResponse("test-rg", "workspace-1", "connection-1", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withProperties(
                new AccessKeyAuthTypeWorkspaceConnectionProperties().withCategory(ConnectionCategory.ADLSGEN2)
                    .withExpiryTime(OffsetDateTime.parse("2020-01-01T00:00:00Z"))
                    .withTarget("some_string")
                    .withMetadata(mapOf())
                    .withCredentials(new WorkspaceConnectionAccessKey().withAccessKeyId("fakeTokenPlaceholder")
                        .withSecretAccessKey("fakeTokenPlaceholder")))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

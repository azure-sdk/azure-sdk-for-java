// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearning.models.ComputePowerAction;
import com.azure.resourcemanager.machinelearning.models.ComputeSchedules;
import com.azure.resourcemanager.machinelearning.models.ComputeStartStopSchedule;
import com.azure.resourcemanager.machinelearning.models.Recurrence;
import com.azure.resourcemanager.machinelearning.models.RecurrenceFrequency;
import com.azure.resourcemanager.machinelearning.models.RecurrenceSchedule;
import com.azure.resourcemanager.machinelearning.models.ScheduleStatus;
import com.azure.resourcemanager.machinelearning.models.TriggerType;
import java.util.Arrays;

/** Samples for Compute UpdateSchedules. */
public final class ComputeUpdateSchedulesSamples {
    /*
     * x-ms-original-file: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/stable/2022-10-01/examples/Compute/updateSchedules.json
     */
    /**
     * Sample code: Update schedules of ComputeInstance.
     *
     * @param manager Entry point to MachineLearningManager.
     */
    public static void updateSchedulesOfComputeInstance(
        com.azure.resourcemanager.machinelearning.MachineLearningManager manager) {
        manager
            .computes()
            .updateSchedulesWithResponse(
                "testrg123",
                "workspaces123",
                "compute123",
                new ComputeSchedules()
                    .withComputeStartStop(
                        Arrays
                            .asList(
                                new ComputeStartStopSchedule()
                                    .withStatus(ScheduleStatus.ENABLED)
                                    .withAction(ComputePowerAction.START)
                                    .withTriggerType(TriggerType.RECURRENCE)
                                    .withRecurrence(
                                        new Recurrence()
                                            .withFrequency(RecurrenceFrequency.DAY)
                                            .withInterval(1)
                                            .withStartTime("2021-04-23T01:30:00")
                                            .withTimeZone("Pacific Standard Time")
                                            .withSchedule(
                                                new RecurrenceSchedule()
                                                    .withMinutes(Arrays.asList(30))
                                                    .withHours(Arrays.asList(18)))))),
                Context.NONE);
    }
}

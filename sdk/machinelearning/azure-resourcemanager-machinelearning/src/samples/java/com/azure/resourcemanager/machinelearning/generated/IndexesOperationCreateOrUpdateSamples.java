// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.resourcemanager.machinelearning.models.IndexesProperties;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for IndexesOperation CreateOrUpdate.
 */
public final class IndexesOperationCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2024-01-01-
     * preview/examples/Workspace/Indexes/createOrUpdate.json
     */
    /**
     * Sample code: CreateOrUpdate Workspace Indexes.
     * 
     * @param manager Entry point to MachineLearningManager.
     */
    public static void
        createOrUpdateWorkspaceIndexes(com.azure.resourcemanager.machinelearning.MachineLearningManager manager) {
        manager.indexesOperations().define("indexname123").withExistingWorkspace("testrg123", "workspace123")
            .withProperties(new IndexesProperties().withDescription("string")
                .withProperties(mapOf("properties1", "value1", "properties2", "value2"))
                .withTags(mapOf("tag1", "value1", "tag2", "value2"))
                .withIndexConfigurations(mapOf("FieldsMapping", "embeddings")).withStorageUri(
                    "azureml://subscriptions/{{sub}}/resourcegroups/{{rg}}/workspaces/{{workspace}}/datastores/workspaceblobstore/paths/azureml"))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** User assigned managed identity assigned to the platform on which application is deployed. */
@Fluent
public final class UserAssignedManagedIdentityProperties {
    /*
     * client id of the managed identity
     */
    @JsonProperty(value = "clientId", required = true)
    private String clientId;

    /*
     * active directory tenant id in which managed identity is provisioned
     */
    @JsonProperty(value = "tenantId", required = true)
    private String tenantId;

    /*
     * type of managed identity i.e AzureManagedIdentity
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /** Creates an instance of UserAssignedManagedIdentityProperties class. */
    public UserAssignedManagedIdentityProperties() {
    }

    /**
     * Get the clientId property: client id of the managed identity.
     *
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: client id of the managed identity.
     *
     * @param clientId the clientId value to set.
     * @return the UserAssignedManagedIdentityProperties object itself.
     */
    public UserAssignedManagedIdentityProperties withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the tenantId property: active directory tenant id in which managed identity is provisioned.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: active directory tenant id in which managed identity is provisioned.
     *
     * @param tenantId the tenantId value to set.
     * @return the UserAssignedManagedIdentityProperties object itself.
     */
    public UserAssignedManagedIdentityProperties withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the type property: type of managed identity i.e AzureManagedIdentity.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: type of managed identity i.e AzureManagedIdentity.
     *
     * @param type the type value to set.
     * @return the UserAssignedManagedIdentityProperties object itself.
     */
    public UserAssignedManagedIdentityProperties withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (clientId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property clientId in model UserAssignedManagedIdentityProperties"));
        }
        if (tenantId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property tenantId in model UserAssignedManagedIdentityProperties"));
        }
        if (type() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property type in model UserAssignedManagedIdentityProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UserAssignedManagedIdentityProperties.class);
}

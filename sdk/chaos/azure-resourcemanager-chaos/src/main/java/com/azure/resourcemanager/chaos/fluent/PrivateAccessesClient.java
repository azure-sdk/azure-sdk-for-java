// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.chaos.fluent.models.PrivateAccessInner;
import com.azure.resourcemanager.chaos.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.chaos.fluent.models.PrivateLinkResourceInner;
import com.azure.resourcemanager.chaos.models.PrivateAccessPatch;

/**
 * An instance of this class provides access to all the operations defined in PrivateAccessesClient.
 */
public interface PrivateAccessesClient {
    /**
     * Get a list of private access resources in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateAccessInner> list();

    /**
     * Get a list of private access resources in a subscription.
     * 
     * @param continuationToken String that sets the continuation token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateAccessInner> list(String continuationToken, Context context);

    /**
     * Get a list of private access resources in a resource group.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateAccessInner> listByResourceGroup(String resourceGroupName);

    /**
     * Get a list of private access resources in a resource group.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param continuationToken String that sets the continuation token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateAccessInner> listByResourceGroup(String resourceGroupName, String continuationToken,
        Context context);

    /**
     * Get a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a private access resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PrivateAccessInner> getByResourceGroupWithResponse(String resourceGroupName, String privateAccessName,
        Context context);

    /**
     * Get a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a private access resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateAccessInner getByResourceGroup(String resourceGroupName, String privateAccessName);

    /**
     * Create or update a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PrivateAccessInner>, PrivateAccessInner> beginCreateOrUpdate(String resourceGroupName,
        String privateAccessName, PrivateAccessInner privateAccess);

    /**
     * Create or update a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource to be created or updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PrivateAccessInner>, PrivateAccessInner> beginCreateOrUpdate(String resourceGroupName,
        String privateAccessName, PrivateAccessInner privateAccess, Context context);

    /**
     * Create or update a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource to be created or updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateAccessInner createOrUpdate(String resourceGroupName, String privateAccessName,
        PrivateAccessInner privateAccess);

    /**
     * Create or update a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource to be created or updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateAccessInner createOrUpdate(String resourceGroupName, String privateAccessName,
        PrivateAccessInner privateAccess, Context context);

    /**
     * Patch a private access tags.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource's tags to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PrivateAccessInner>, PrivateAccessInner> beginPatch(String resourceGroupName,
        String privateAccessName, PrivateAccessPatch privateAccess);

    /**
     * Patch a private access tags.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource's tags to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PrivateAccessInner>, PrivateAccessInner> beginPatch(String resourceGroupName,
        String privateAccessName, PrivateAccessPatch privateAccess, Context context);

    /**
     * Patch a private access tags.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource's tags to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateAccessInner patch(String resourceGroupName, String privateAccessName, PrivateAccessPatch privateAccess);

    /**
     * Patch a private access tags.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateAccess private access resource's tags to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return privateAccesses tracked resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateAccessInner patch(String resourceGroupName, String privateAccessName, PrivateAccessPatch privateAccess,
        Context context);

    /**
     * Delete a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String privateAccessName);

    /**
     * Delete a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String privateAccessName, Context context);

    /**
     * Delete a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String privateAccessName);

    /**
     * Delete a private access.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String privateAccessName, Context context);

    /**
     * Gets the private link resources possible under private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources possible under private access resource as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateLinkResourceInner> getPrivateLinkResources(String resourceGroupName, String privateAccessName);

    /**
     * Gets the private link resources possible under private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources possible under private access resource as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateLinkResourceInner> getPrivateLinkResources(String resourceGroupName, String privateAccessName,
        Context context);

    /**
     * Gets information about a private endpoint connection under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a private endpoint connection under a private access resource along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PrivateEndpointConnectionInner> getAPrivateEndpointConnectionWithResponse(String resourceGroupName,
        String privateAccessName, String privateEndpointConnectionName, Context context);

    /**
     * Gets information about a private endpoint connection under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a private endpoint connection under a private access resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionInner getAPrivateEndpointConnection(String resourceGroupName, String privateAccessName,
        String privateEndpointConnectionName);

    /**
     * Deletes a private endpoint connection under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDeleteAPrivateEndpointConnection(String resourceGroupName,
        String privateAccessName, String privateEndpointConnectionName);

    /**
     * Deletes a private endpoint connection under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDeleteAPrivateEndpointConnection(String resourceGroupName,
        String privateAccessName, String privateEndpointConnectionName, Context context);

    /**
     * Deletes a private endpoint connection under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void deleteAPrivateEndpointConnection(String resourceGroupName, String privateAccessName,
        String privateEndpointConnectionName);

    /**
     * Deletes a private endpoint connection under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void deleteAPrivateEndpointConnection(String resourceGroupName, String privateAccessName,
        String privateEndpointConnectionName, Context context);

    /**
     * List information about private endpoint connections under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private link resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateEndpointConnectionInner> listPrivateEndpointConnections(String resourceGroupName,
        String privateAccessName);

    /**
     * List information about private endpoint connections under a private access resource.
     * 
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     * the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private link resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateEndpointConnectionInner> listPrivateEndpointConnections(String resourceGroupName,
        String privateAccessName, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.chaos.models.ProvisioningState;
import com.azure.resourcemanager.chaos.models.PublicNetworkAccessOption;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The properties of a private access resource.
 */
@Fluent
public final class PrivateAccessProperties {
    /*
     * Most recent provisioning state for the given privateAccess resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * A readonly collection of private endpoint connection. Currently only one endpoint connection is supported.
     */
    @JsonProperty(value = "privateEndpointConnections", access = JsonProperty.Access.WRITE_ONLY)
    private List<PrivateEndpointConnectionInner> privateEndpointConnections;

    /*
     * Public Network Access Control for PrivateAccess resource.
     */
    @JsonProperty(value = "publicNetworkAccess")
    private PublicNetworkAccessOption publicNetworkAccess;

    /**
     * Creates an instance of PrivateAccessProperties class.
     */
    public PrivateAccessProperties() {
    }

    /**
     * Get the provisioningState property: Most recent provisioning state for the given privateAccess resource.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the privateEndpointConnections property: A readonly collection of private endpoint connection. Currently only
     * one endpoint connection is supported.
     * 
     * @return the privateEndpointConnections value.
     */
    public List<PrivateEndpointConnectionInner> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * Get the publicNetworkAccess property: Public Network Access Control for PrivateAccess resource.
     * 
     * @return the publicNetworkAccess value.
     */
    public PublicNetworkAccessOption publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: Public Network Access Control for PrivateAccess resource.
     * 
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the PrivateAccessProperties object itself.
     */
    public PrivateAccessProperties withPublicNetworkAccess(PublicNetworkAccessOption publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (privateEndpointConnections() != null) {
            privateEndpointConnections().forEach(e -> e.validate());
        }
    }
}

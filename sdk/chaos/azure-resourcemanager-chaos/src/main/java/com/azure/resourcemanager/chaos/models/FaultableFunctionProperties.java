// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Application function in which fault can be injected. */
@Fluent
public final class FaultableFunctionProperties {
    /*
     * Method Signature of the faultable function
     */
    @JsonProperty(value = "signature", required = true)
    private SignatureProperties signature;

    /*
     * SDK or Custom library in which fault is injected
     */
    @JsonProperty(value = "category")
    private String category;

    /*
     * faults supported by torch for the function
     */
    @JsonProperty(value = "faultCapabilities")
    private List<FaultCapabilityProperties> faultCapabilities;

    /** Creates an instance of FaultableFunctionProperties class. */
    public FaultableFunctionProperties() {
    }

    /**
     * Get the signature property: Method Signature of the faultable function.
     *
     * @return the signature value.
     */
    public SignatureProperties signature() {
        return this.signature;
    }

    /**
     * Set the signature property: Method Signature of the faultable function.
     *
     * @param signature the signature value to set.
     * @return the FaultableFunctionProperties object itself.
     */
    public FaultableFunctionProperties withSignature(SignatureProperties signature) {
        this.signature = signature;
        return this;
    }

    /**
     * Get the category property: SDK or Custom library in which fault is injected.
     *
     * @return the category value.
     */
    public String category() {
        return this.category;
    }

    /**
     * Set the category property: SDK or Custom library in which fault is injected.
     *
     * @param category the category value to set.
     * @return the FaultableFunctionProperties object itself.
     */
    public FaultableFunctionProperties withCategory(String category) {
        this.category = category;
        return this;
    }

    /**
     * Get the faultCapabilities property: faults supported by torch for the function.
     *
     * @return the faultCapabilities value.
     */
    public List<FaultCapabilityProperties> faultCapabilities() {
        return this.faultCapabilities;
    }

    /**
     * Set the faultCapabilities property: faults supported by torch for the function.
     *
     * @param faultCapabilities the faultCapabilities value to set.
     * @return the FaultableFunctionProperties object itself.
     */
    public FaultableFunctionProperties withFaultCapabilities(List<FaultCapabilityProperties> faultCapabilities) {
        this.faultCapabilities = faultCapabilities;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (signature() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property signature in model FaultableFunctionProperties"));
        } else {
            signature().validate();
        }
        if (faultCapabilities() != null) {
            faultCapabilities().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(FaultableFunctionProperties.class);
}

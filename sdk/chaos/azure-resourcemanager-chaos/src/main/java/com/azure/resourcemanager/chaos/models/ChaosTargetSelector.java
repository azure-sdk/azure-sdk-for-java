// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Model that represents a selector in the Experiment resource.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "type",
    defaultImpl = ChaosTargetSelector.class)
@JsonTypeName("ChaosTargetSelector")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "List", value = ChaosTargetListSelector.class),
    @JsonSubTypes.Type(name = "Query", value = ChaosTargetQuerySelector.class) })
@Fluent
public class ChaosTargetSelector {
    /*
     * String of the selector ID.
     */
    @JsonProperty(value = "id", required = true)
    private String id;

    /*
     * Model that represents available filter types that can be applied to a targets list.
     */
    @JsonProperty(value = "filter")
    private Filter filter;

    /**
     * Creates an instance of ChaosTargetSelector class.
     */
    public ChaosTargetSelector() {
    }

    /**
     * Get the id property: String of the selector ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: String of the selector ID.
     * 
     * @param id the id value to set.
     * @return the ChaosTargetSelector object itself.
     */
    public ChaosTargetSelector withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the filter property: Model that represents available filter types that can be applied to a targets list.
     * 
     * @return the filter value.
     */
    public Filter filter() {
        return this.filter;
    }

    /**
     * Set the filter property: Model that represents available filter types that can be applied to a targets list.
     * 
     * @param filter the filter value to set.
     * @return the ChaosTargetSelector object itself.
     */
    public ChaosTargetSelector withFilter(Filter filter) {
        this.filter = filter;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (id() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property id in model ChaosTargetSelector"));
        }
        if (filter() != null) {
            filter().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ChaosTargetSelector.class);
}

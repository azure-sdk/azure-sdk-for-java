// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SignaturePropertiesArchive model. */
@Fluent
public final class SignaturePropertiesArchive {
    /*
     * name of an archive which defines the function
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * version of an archive
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * culture of an archive
     */
    @JsonProperty(value = "culture")
    private String culture;

    /*
     * public key token of an archive
     */
    @JsonProperty(value = "publicKeyToken")
    private String publicKeyToken;

    /*
     * defines the type of an archive
     */
    @JsonProperty(value = "type")
    private String type;

    /** Creates an instance of SignaturePropertiesArchive class. */
    public SignaturePropertiesArchive() {
    }

    /**
     * Get the name property: name of an archive which defines the function.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: name of an archive which defines the function.
     *
     * @param name the name value to set.
     * @return the SignaturePropertiesArchive object itself.
     */
    public SignaturePropertiesArchive withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the version property: version of an archive.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: version of an archive.
     *
     * @param version the version value to set.
     * @return the SignaturePropertiesArchive object itself.
     */
    public SignaturePropertiesArchive withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the culture property: culture of an archive.
     *
     * @return the culture value.
     */
    public String culture() {
        return this.culture;
    }

    /**
     * Set the culture property: culture of an archive.
     *
     * @param culture the culture value to set.
     * @return the SignaturePropertiesArchive object itself.
     */
    public SignaturePropertiesArchive withCulture(String culture) {
        this.culture = culture;
        return this;
    }

    /**
     * Get the publicKeyToken property: public key token of an archive.
     *
     * @return the publicKeyToken value.
     */
    public String publicKeyToken() {
        return this.publicKeyToken;
    }

    /**
     * Set the publicKeyToken property: public key token of an archive.
     *
     * @param publicKeyToken the publicKeyToken value to set.
     * @return the SignaturePropertiesArchive object itself.
     */
    public SignaturePropertiesArchive withPublicKeyToken(String publicKeyToken) {
        this.publicKeyToken = publicKeyToken;
        return this;
    }

    /**
     * Get the type property: defines the type of an archive.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: defines the type of an archive.
     *
     * @param type the type value to set.
     * @return the SignaturePropertiesArchive object itself.
     */
    public SignaturePropertiesArchive withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

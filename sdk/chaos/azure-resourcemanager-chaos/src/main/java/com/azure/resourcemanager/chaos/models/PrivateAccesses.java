// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of PrivateAccesses. */
public interface PrivateAccesses {
    /**
     * Get a list of private access resources in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateAccess> list();

    /**
     * Get a list of private access resources in a subscription.
     *
     * @param continuationToken String that sets the continuation token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateAccess> list(String continuationToken, Context context);

    /**
     * Get a list of private access resources in a resource group.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateAccess> listByResourceGroup(String resourceGroupName);

    /**
     * Get a list of private access resources in a resource group.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param continuationToken String that sets the continuation token.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private access resources in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateAccess> listByResourceGroup(
        String resourceGroupName, String continuationToken, Context context);

    /**
     * Get a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a private access resource along with {@link Response}.
     */
    Response<PrivateAccess> getByResourceGroupWithResponse(
        String resourceGroupName, String privateAccessName, Context context);

    /**
     * Get a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a private access resource.
     */
    PrivateAccess getByResourceGroup(String resourceGroupName, String privateAccessName);

    /**
     * Delete a private access.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(
        String resourceGroupName, String privateAccessName, Context context);

    /**
     * Delete a private access.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String privateAccessName);

    /**
     * Gets the private link resources possible under private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources possible under private access resource along with {@link Response}.
     */
    Response<PrivateLinkResourceListResult> getPrivateLinkResourcesWithResponse(
        String resourceGroupName, String privateAccessName, Context context);

    /**
     * Gets the private link resources possible under private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources possible under private access resource.
     */
    PrivateLinkResourceListResult getPrivateLinkResources(String resourceGroupName, String privateAccessName);

    /**
     * Gets information about a private endpoint connection under a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a private endpoint connection under a private access resource along with {@link
     *     Response}.
     */
    Response<PrivateEndpointConnection> getAPrivateEndpointConnectionWithResponse(
        String resourceGroupName, String privateAccessName, String privateEndpointConnectionName, Context context);

    /**
     * Gets information about a private endpoint connection under a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about a private endpoint connection under a private access resource.
     */
    PrivateEndpointConnection getAPrivateEndpointConnection(
        String resourceGroupName, String privateAccessName, String privateEndpointConnectionName);

    /**
     * Deletes a private endpoint connection under a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteAPrivateEndpointConnection(
        String resourceGroupName, String privateAccessName, String privateEndpointConnectionName);

    /**
     * Deletes a private endpoint connection under a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteAPrivateEndpointConnection(
        String resourceGroupName, String privateAccessName, String privateEndpointConnectionName, Context context);

    /**
     * List information about private endpoint connections under a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private link resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateEndpointConnection> listPrivateEndpointConnections(
        String resourceGroupName, String privateAccessName);

    /**
     * List information about private endpoint connections under a private access resource.
     *
     * @param resourceGroupName String that represents an Azure resource group.
     * @param privateAccessName The name of the private access resource that is being created. Supported characters for
     *     the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private link resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<PrivateEndpointConnection> listPrivateEndpointConnections(
        String resourceGroupName, String privateAccessName, Context context);

    /**
     * Get a private access resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a private access resource along with {@link Response}.
     */
    PrivateAccess getById(String id);

    /**
     * Get a private access resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a private access resource along with {@link Response}.
     */
    Response<PrivateAccess> getByIdWithResponse(String id, Context context);

    /**
     * Delete a private access.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a private access.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new PrivateAccess resource.
     *
     * @param name resource name.
     * @return the first stage of the new PrivateAccess definition.
     */
    PrivateAccess.DefinitionStages.Blank define(String name);
}

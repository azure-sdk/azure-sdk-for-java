// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.chaos.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The Metadata model. */
@Fluent
public final class Metadata {
    /*
     * Containing function which includes the call to faultable function
     */
    @JsonProperty(value = "containingFunction")
    private ContainingFunctionProperties containingFunction;

    /*
     * function in which fault is injected
     */
    @JsonProperty(value = "faultableFunction")
    private FaultableFunctionProperties faultableFunction;

    /*
     * defines the location of the code in the class
     */
    @JsonProperty(value = "source")
    private SourceProperties source;

    /** Creates an instance of Metadata class. */
    public Metadata() {
    }

    /**
     * Get the containingFunction property: Containing function which includes the call to faultable function.
     *
     * @return the containingFunction value.
     */
    public ContainingFunctionProperties containingFunction() {
        return this.containingFunction;
    }

    /**
     * Set the containingFunction property: Containing function which includes the call to faultable function.
     *
     * @param containingFunction the containingFunction value to set.
     * @return the Metadata object itself.
     */
    public Metadata withContainingFunction(ContainingFunctionProperties containingFunction) {
        this.containingFunction = containingFunction;
        return this;
    }

    /**
     * Get the faultableFunction property: function in which fault is injected.
     *
     * @return the faultableFunction value.
     */
    public FaultableFunctionProperties faultableFunction() {
        return this.faultableFunction;
    }

    /**
     * Set the faultableFunction property: function in which fault is injected.
     *
     * @param faultableFunction the faultableFunction value to set.
     * @return the Metadata object itself.
     */
    public Metadata withFaultableFunction(FaultableFunctionProperties faultableFunction) {
        this.faultableFunction = faultableFunction;
        return this;
    }

    /**
     * Get the source property: defines the location of the code in the class.
     *
     * @return the source value.
     */
    public SourceProperties source() {
        return this.source;
    }

    /**
     * Set the source property: defines the location of the code in the class.
     *
     * @param source the source value to set.
     * @return the Metadata object itself.
     */
    public Metadata withSource(SourceProperties source) {
        this.source = source;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (containingFunction() != null) {
            containingFunction().validate();
        }
        if (faultableFunction() != null) {
            faultableFunction().validate();
        }
        if (source() != null) {
            source().validate();
        }
    }
}

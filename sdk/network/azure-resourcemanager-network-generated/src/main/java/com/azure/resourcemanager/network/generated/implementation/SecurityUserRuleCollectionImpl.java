// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.SecurityUserRuleCollectionInner;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.SecurityUserGroupItem;
import com.azure.resourcemanager.network.generated.models.SecurityUserRuleCollection;
import java.util.Collections;
import java.util.List;

public final class SecurityUserRuleCollectionImpl
    implements SecurityUserRuleCollection, SecurityUserRuleCollection.Definition, SecurityUserRuleCollection.Update {
    private SecurityUserRuleCollectionInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String description() {
        return this.innerModel().description();
    }

    public List<SecurityUserGroupItem> appliesToGroups() {
        List<SecurityUserGroupItem> inner = this.innerModel().appliesToGroups();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGuid() {
        return this.innerModel().resourceGuid();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SecurityUserRuleCollectionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkManagerName;

    private String configurationName;

    private String ruleCollectionName;

    public SecurityUserRuleCollectionImpl withExistingSecurityUserConfiguration(String resourceGroupName,
        String networkManagerName, String configurationName) {
        this.resourceGroupName = resourceGroupName;
        this.networkManagerName = networkManagerName;
        this.configurationName = configurationName;
        return this;
    }

    public SecurityUserRuleCollection create() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRuleCollections()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SecurityUserRuleCollection create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRuleCollections()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    SecurityUserRuleCollectionImpl(String name,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new SecurityUserRuleCollectionInner();
        this.serviceManager = serviceManager;
        this.ruleCollectionName = name;
    }

    public SecurityUserRuleCollectionImpl update() {
        return this;
    }

    public SecurityUserRuleCollection apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRuleCollections()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SecurityUserRuleCollection apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRuleCollections()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    SecurityUserRuleCollectionImpl(SecurityUserRuleCollectionInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkManagerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkManagers");
        this.configurationName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "securityUserConfigurations");
        this.ruleCollectionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "ruleCollections");
    }

    public SecurityUserRuleCollection refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRuleCollections()
            .getWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName, Context.NONE)
            .getValue();
        return this;
    }

    public SecurityUserRuleCollection refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRuleCollections()
            .getWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName, context)
            .getValue();
        return this;
    }

    public SecurityUserRuleCollectionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public SecurityUserRuleCollectionImpl withAppliesToGroups(List<SecurityUserGroupItem> appliesToGroups) {
        this.innerModel().withAppliesToGroups(appliesToGroups);
        return this;
    }
}

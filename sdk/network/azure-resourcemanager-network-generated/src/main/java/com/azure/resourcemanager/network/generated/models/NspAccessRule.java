// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspAccessRuleInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of NspAccessRule.
 */
public interface NspAccessRule {
    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the id property: Resource ID.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the provisioningState property: The provisioning state of the scope assignment resource.
     * 
     * @return the provisioningState value.
     */
    NspProvisioningState provisioningState();

    /**
     * Gets the direction property: Direction that specifies whether the access rules is inbound/outbound.
     * 
     * @return the direction value.
     */
    AccessRuleDirection direction();

    /**
     * Gets the addressPrefixes property: Inbound address prefixes (IPv4/IPv6).
     * 
     * @return the addressPrefixes value.
     */
    List<String> addressPrefixes();

    /**
     * Gets the fullyQualifiedDomainNames property: Outbound rules fully qualified domain name format.
     * 
     * @return the fullyQualifiedDomainNames value.
     */
    List<String> fullyQualifiedDomainNames();

    /**
     * Gets the subscriptions property: List of subscription ids.
     * 
     * @return the subscriptions value.
     */
    List<SubscriptionId> subscriptions();

    /**
     * Gets the networkSecurityPerimeters property: Rule specified by the perimeter id.
     * 
     * @return the networkSecurityPerimeters value.
     */
    List<PerimeterBasedAccessRule> networkSecurityPerimeters();

    /**
     * Gets the emailAddresses property: Outbound rules email address format.
     * 
     * @return the emailAddresses value.
     */
    List<String> emailAddresses();

    /**
     * Gets the phoneNumbers property: Outbound rules phone number format.
     * 
     * @return the phoneNumbers value.
     */
    List<String> phoneNumbers();

    /**
     * Gets the serviceTags property: Inbound rules service tag names.
     * 
     * @return the serviceTags value.
     */
    List<String> serviceTags();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.NspAccessRuleInner object.
     * 
     * @return the inner object.
     */
    NspAccessRuleInner innerModel();

    /**
     * The entirety of the NspAccessRule definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The NspAccessRule definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the NspAccessRule definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkSecurityPerimeterName, profileName.
             * 
             * @param resourceGroupName The name of the resource group.
             * @param networkSecurityPerimeterName The name of the network security perimeter.
             * @param profileName The name of the NSP profile.
             * @return the next definition stage.
             */
            WithCreate withExistingProfile(String resourceGroupName, String networkSecurityPerimeterName,
                String profileName);
        }

        /**
         * The stage of the NspAccessRule definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithDirection, DefinitionStages.WithAddressPrefixes,
            DefinitionStages.WithFullyQualifiedDomainNames, DefinitionStages.WithSubscriptions,
            DefinitionStages.WithEmailAddresses, DefinitionStages.WithPhoneNumbers, DefinitionStages.WithServiceTags {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            NspAccessRule create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            NspAccessRule create(Context context);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify direction.
         */
        interface WithDirection {
            /**
             * Specifies the direction property: Direction that specifies whether the access rules is inbound/outbound..
             * 
             * @param direction Direction that specifies whether the access rules is inbound/outbound.
             * @return the next definition stage.
             */
            WithCreate withDirection(AccessRuleDirection direction);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify addressPrefixes.
         */
        interface WithAddressPrefixes {
            /**
             * Specifies the addressPrefixes property: Inbound address prefixes (IPv4/IPv6).
             * 
             * @param addressPrefixes Inbound address prefixes (IPv4/IPv6).
             * @return the next definition stage.
             */
            WithCreate withAddressPrefixes(List<String> addressPrefixes);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify fullyQualifiedDomainNames.
         */
        interface WithFullyQualifiedDomainNames {
            /**
             * Specifies the fullyQualifiedDomainNames property: Outbound rules fully qualified domain name format..
             * 
             * @param fullyQualifiedDomainNames Outbound rules fully qualified domain name format.
             * @return the next definition stage.
             */
            WithCreate withFullyQualifiedDomainNames(List<String> fullyQualifiedDomainNames);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify subscriptions.
         */
        interface WithSubscriptions {
            /**
             * Specifies the subscriptions property: List of subscription ids.
             * 
             * @param subscriptions List of subscription ids.
             * @return the next definition stage.
             */
            WithCreate withSubscriptions(List<SubscriptionId> subscriptions);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify emailAddresses.
         */
        interface WithEmailAddresses {
            /**
             * Specifies the emailAddresses property: Outbound rules email address format..
             * 
             * @param emailAddresses Outbound rules email address format.
             * @return the next definition stage.
             */
            WithCreate withEmailAddresses(List<String> emailAddresses);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify phoneNumbers.
         */
        interface WithPhoneNumbers {
            /**
             * Specifies the phoneNumbers property: Outbound rules phone number format..
             * 
             * @param phoneNumbers Outbound rules phone number format.
             * @return the next definition stage.
             */
            WithCreate withPhoneNumbers(List<String> phoneNumbers);
        }

        /**
         * The stage of the NspAccessRule definition allowing to specify serviceTags.
         */
        interface WithServiceTags {
            /**
             * Specifies the serviceTags property: Inbound rules service tag names..
             * 
             * @param serviceTags Inbound rules service tag names.
             * @return the next definition stage.
             */
            WithCreate withServiceTags(List<String> serviceTags);
        }
    }

    /**
     * Begins update for the NspAccessRule resource.
     * 
     * @return the stage of resource update.
     */
    NspAccessRule.Update update();

    /**
     * The template for NspAccessRule update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithDirection, UpdateStages.WithAddressPrefixes,
        UpdateStages.WithFullyQualifiedDomainNames, UpdateStages.WithSubscriptions, UpdateStages.WithEmailAddresses,
        UpdateStages.WithPhoneNumbers, UpdateStages.WithServiceTags {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        NspAccessRule apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        NspAccessRule apply(Context context);
    }

    /**
     * The NspAccessRule update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the NspAccessRule update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify direction.
         */
        interface WithDirection {
            /**
             * Specifies the direction property: Direction that specifies whether the access rules is inbound/outbound..
             * 
             * @param direction Direction that specifies whether the access rules is inbound/outbound.
             * @return the next definition stage.
             */
            Update withDirection(AccessRuleDirection direction);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify addressPrefixes.
         */
        interface WithAddressPrefixes {
            /**
             * Specifies the addressPrefixes property: Inbound address prefixes (IPv4/IPv6).
             * 
             * @param addressPrefixes Inbound address prefixes (IPv4/IPv6).
             * @return the next definition stage.
             */
            Update withAddressPrefixes(List<String> addressPrefixes);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify fullyQualifiedDomainNames.
         */
        interface WithFullyQualifiedDomainNames {
            /**
             * Specifies the fullyQualifiedDomainNames property: Outbound rules fully qualified domain name format..
             * 
             * @param fullyQualifiedDomainNames Outbound rules fully qualified domain name format.
             * @return the next definition stage.
             */
            Update withFullyQualifiedDomainNames(List<String> fullyQualifiedDomainNames);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify subscriptions.
         */
        interface WithSubscriptions {
            /**
             * Specifies the subscriptions property: List of subscription ids.
             * 
             * @param subscriptions List of subscription ids.
             * @return the next definition stage.
             */
            Update withSubscriptions(List<SubscriptionId> subscriptions);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify emailAddresses.
         */
        interface WithEmailAddresses {
            /**
             * Specifies the emailAddresses property: Outbound rules email address format..
             * 
             * @param emailAddresses Outbound rules email address format.
             * @return the next definition stage.
             */
            Update withEmailAddresses(List<String> emailAddresses);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify phoneNumbers.
         */
        interface WithPhoneNumbers {
            /**
             * Specifies the phoneNumbers property: Outbound rules phone number format..
             * 
             * @param phoneNumbers Outbound rules phone number format.
             * @return the next definition stage.
             */
            Update withPhoneNumbers(List<String> phoneNumbers);
        }

        /**
         * The stage of the NspAccessRule update allowing to specify serviceTags.
         */
        interface WithServiceTags {
            /**
             * Specifies the serviceTags property: Inbound rules service tag names..
             * 
             * @param serviceTags Inbound rules service tag names.
             * @return the next definition stage.
             */
            Update withServiceTags(List<String> serviceTags);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    NspAccessRule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    NspAccessRule refresh(Context context);
}

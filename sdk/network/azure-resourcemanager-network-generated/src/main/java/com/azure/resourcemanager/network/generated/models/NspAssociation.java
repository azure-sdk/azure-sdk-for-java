// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspAssociationInner;
import java.util.Map;

/**
 * An immutable client-side representation of NspAssociation.
 */
public interface NspAssociation {
    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the id property: Resource ID.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the provisioningState property: The provisioning state of the resource association resource.
     * 
     * @return the provisioningState value.
     */
    NspProvisioningState provisioningState();

    /**
     * Gets the privateLinkResource property: The PaaS resource to be associated.
     * 
     * @return the privateLinkResource value.
     */
    SubResource privateLinkResource();

    /**
     * Gets the profile property: Profile id to which the PaaS resource is associated.
     * 
     * @return the profile value.
     */
    SubResource profile();

    /**
     * Gets the accessMode property: Access mode on the association.
     * 
     * @return the accessMode value.
     */
    AssociationAccessMode accessMode();

    /**
     * Gets the hasProvisioningIssues property: Specifies if there are provisioning issues.
     * 
     * @return the hasProvisioningIssues value.
     */
    String hasProvisioningIssues();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.NspAssociationInner object.
     * 
     * @return the inner object.
     */
    NspAssociationInner innerModel();

    /**
     * The entirety of the NspAssociation definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The NspAssociation definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the NspAssociation definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the NspAssociation definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the NspAssociation definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkSecurityPerimeterName.
             * 
             * @param resourceGroupName The name of the resource group.
             * @param networkSecurityPerimeterName The name of the network security perimeter.
             * @return the next definition stage.
             */
            WithCreate withExistingNetworkSecurityPerimeter(String resourceGroupName,
                String networkSecurityPerimeterName);
        }

        /**
         * The stage of the NspAssociation definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithPrivateLinkResource,
            DefinitionStages.WithProfile, DefinitionStages.WithAccessMode {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            NspAssociation create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            NspAssociation create(Context context);
        }

        /**
         * The stage of the NspAssociation definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the NspAssociation definition allowing to specify privateLinkResource.
         */
        interface WithPrivateLinkResource {
            /**
             * Specifies the privateLinkResource property: The PaaS resource to be associated..
             * 
             * @param privateLinkResource The PaaS resource to be associated.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkResource(SubResource privateLinkResource);
        }

        /**
         * The stage of the NspAssociation definition allowing to specify profile.
         */
        interface WithProfile {
            /**
             * Specifies the profile property: Profile id to which the PaaS resource is associated..
             * 
             * @param profile Profile id to which the PaaS resource is associated.
             * @return the next definition stage.
             */
            WithCreate withProfile(SubResource profile);
        }

        /**
         * The stage of the NspAssociation definition allowing to specify accessMode.
         */
        interface WithAccessMode {
            /**
             * Specifies the accessMode property: Access mode on the association..
             * 
             * @param accessMode Access mode on the association.
             * @return the next definition stage.
             */
            WithCreate withAccessMode(AssociationAccessMode accessMode);
        }
    }

    /**
     * Begins update for the NspAssociation resource.
     * 
     * @return the stage of resource update.
     */
    NspAssociation.Update update();

    /**
     * The template for NspAssociation update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithPrivateLinkResource, UpdateStages.WithProfile,
        UpdateStages.WithAccessMode {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        NspAssociation apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        NspAssociation apply(Context context);
    }

    /**
     * The NspAssociation update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the NspAssociation update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the NspAssociation update allowing to specify privateLinkResource.
         */
        interface WithPrivateLinkResource {
            /**
             * Specifies the privateLinkResource property: The PaaS resource to be associated..
             * 
             * @param privateLinkResource The PaaS resource to be associated.
             * @return the next definition stage.
             */
            Update withPrivateLinkResource(SubResource privateLinkResource);
        }

        /**
         * The stage of the NspAssociation update allowing to specify profile.
         */
        interface WithProfile {
            /**
             * Specifies the profile property: Profile id to which the PaaS resource is associated..
             * 
             * @param profile Profile id to which the PaaS resource is associated.
             * @return the next definition stage.
             */
            Update withProfile(SubResource profile);
        }

        /**
         * The stage of the NspAssociation update allowing to specify accessMode.
         */
        interface WithAccessMode {
            /**
             * Specifies the accessMode property: Access mode on the association..
             * 
             * @param accessMode Access mode on the association.
             * @return the next definition stage.
             */
            Update withAccessMode(AssociationAccessMode accessMode);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    NspAssociation refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    NspAssociation refresh(Context context);

    /**
     * Reconcile NSP association.
     * 
     * @param parameters Parameters for NSP association reconcile.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object along with {@link Response}.
     */
    Response<Object> postWithResponse(Object parameters, Context context);

    /**
     * Reconcile NSP association.
     * 
     * @param parameters Parameters for NSP association reconcile.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object post(Object parameters);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.network.generated.fluent.models.AnalysisIntentInner;

/** An instance of this class provides access to all the operations defined in AnalysisIntentsClient. */
public interface AnalysisIntentsClient {
    /**
     * Gets the list of Analysis Intent resources.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Analysis Intent resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AnalysisIntentInner> list(String resourceGroupName, String networkVerifierName);

    /**
     * Gets the list of Analysis Intent resources.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Analysis Intent resources as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AnalysisIntentInner> list(String resourceGroupName, String networkVerifierName, Context context);

    /**
     * Gets the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Analysis Intent resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AnalysisIntentInner> getWithResponse(
        String resourceGroupName, String networkVerifierName, String analysisIntentName, Context context);

    /**
     * Gets the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Analysis Intent resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalysisIntentInner get(String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Creates the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of configuration information or intent on which to do the analysis on.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AnalysisIntentInner>, AnalysisIntentInner> beginCreate(
        String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Creates the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param body The Analysis Intent resource object to create/update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of configuration information or intent on which to do the analysis on.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AnalysisIntentInner>, AnalysisIntentInner> beginCreate(
        String resourceGroupName,
        String networkVerifierName,
        String analysisIntentName,
        AnalysisIntentInner body,
        Context context);

    /**
     * Creates the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration information or intent on which to do the analysis on.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalysisIntentInner create(String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Creates the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param body The Analysis Intent resource object to create/update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return configuration information or intent on which to do the analysis on.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalysisIntentInner create(
        String resourceGroupName,
        String networkVerifierName,
        String analysisIntentName,
        AnalysisIntentInner body,
        Context context);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String networkVerifierName, String analysisIntentName, Context context);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkVerifierName, String analysisIntentName, Context context);
}

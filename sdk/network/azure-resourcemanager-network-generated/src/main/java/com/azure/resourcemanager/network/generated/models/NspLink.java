// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspLinkInner;
import java.util.List;

/**
 * An immutable client-side representation of NspLink.
 */
public interface NspLink {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     * 
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the provisioningState property: The provisioning state of the NSP Link resource.
     * 
     * @return the provisioningState value.
     */
    NspLinkProvisioningState provisioningState();

    /**
     * Gets the autoApprovedRemotePerimeterResourceId property: Perimeter ARM Id for the remote NSP with which the link
     * gets created in Auto-approval mode. It should be used when the NSP admin have
     * Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
     * 
     * @return the autoApprovedRemotePerimeterResourceId value.
     */
    String autoApprovedRemotePerimeterResourceId();

    /**
     * Gets the remotePerimeterGuid property: Remote NSP Guid with which the link gets created.
     * 
     * @return the remotePerimeterGuid value.
     */
    String remotePerimeterGuid();

    /**
     * Gets the remotePerimeterLocation property: Remote NSP location with which the link gets created.
     * 
     * @return the remotePerimeterLocation value.
     */
    String remotePerimeterLocation();

    /**
     * Gets the localInboundProfiles property: Local Inbound profile names to which Inbound is allowed. Use ['*'] to
     * allow inbound to all profiles.
     * 
     * @return the localInboundProfiles value.
     */
    List<String> localInboundProfiles();

    /**
     * Gets the localOutboundProfiles property: Local Outbound profile names from which Outbound is allowed. In current
     * version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later
     * version, user will be able to modify it.
     * 
     * @return the localOutboundProfiles value.
     */
    List<String> localOutboundProfiles();

    /**
     * Gets the remoteInboundProfiles property: Remote Inbound profile names to which Inbound is allowed. Use ['*'] to
     * allow inbound to all profiles. This property can only be updated in auto-approval mode.
     * 
     * @return the remoteInboundProfiles value.
     */
    List<String> remoteInboundProfiles();

    /**
     * Gets the remoteOutboundProfiles property: Remote Outbound profile names from which Outbound is allowed. In
     * current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In
     * later version, user will be able to modify it.
     * 
     * @return the remoteOutboundProfiles value.
     */
    List<String> remoteOutboundProfiles();

    /**
     * Gets the description property: A message passed to the owner of the remote NSP link resource with this connection
     * request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the status property: The NSP link state.
     * 
     * @return the status value.
     */
    NspLinkStatus status();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.NspLinkInner object.
     * 
     * @return the inner object.
     */
    NspLinkInner innerModel();

    /**
     * The entirety of the NspLink definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The NspLink definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the NspLink definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the NspLink definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkSecurityPerimeterName.
             * 
             * @param resourceGroupName The name of the resource group.
             * @param networkSecurityPerimeterName The name of the network security perimeter.
             * @return the next definition stage.
             */
            WithCreate withExistingNetworkSecurityPerimeter(String resourceGroupName,
                String networkSecurityPerimeterName);
        }

        /**
         * The stage of the NspLink definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithAutoApprovedRemotePerimeterResourceId,
            DefinitionStages.WithLocalInboundProfiles, DefinitionStages.WithRemoteInboundProfiles,
            DefinitionStages.WithDescription {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            NspLink create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            NspLink create(Context context);
        }

        /**
         * The stage of the NspLink definition allowing to specify autoApprovedRemotePerimeterResourceId.
         */
        interface WithAutoApprovedRemotePerimeterResourceId {
            /**
             * Specifies the autoApprovedRemotePerimeterResourceId property: Perimeter ARM Id for the remote NSP with
             * which the link gets created in Auto-approval mode. It should be used when the NSP admin have
             * Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource..
             * 
             * @param autoApprovedRemotePerimeterResourceId Perimeter ARM Id for the remote NSP with which the link gets
             * created in Auto-approval mode. It should be used when the NSP admin have
             * Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
             * @return the next definition stage.
             */
            WithCreate withAutoApprovedRemotePerimeterResourceId(String autoApprovedRemotePerimeterResourceId);
        }

        /**
         * The stage of the NspLink definition allowing to specify localInboundProfiles.
         */
        interface WithLocalInboundProfiles {
            /**
             * Specifies the localInboundProfiles property: Local Inbound profile names to which Inbound is allowed. Use
             * ['*'] to allow inbound to all profiles..
             * 
             * @param localInboundProfiles Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow
             * inbound to all profiles.
             * @return the next definition stage.
             */
            WithCreate withLocalInboundProfiles(List<String> localInboundProfiles);
        }

        /**
         * The stage of the NspLink definition allowing to specify remoteInboundProfiles.
         */
        interface WithRemoteInboundProfiles {
            /**
             * Specifies the remoteInboundProfiles property: Remote Inbound profile names to which Inbound is allowed.
             * Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode..
             * 
             * @param remoteInboundProfiles Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow
             * inbound to all profiles. This property can only be updated in auto-approval mode.
             * @return the next definition stage.
             */
            WithCreate withRemoteInboundProfiles(List<String> remoteInboundProfiles);
        }

        /**
         * The stage of the NspLink definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: A message passed to the owner of the remote NSP link resource with
             * this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to
             * 140 chars..
             * 
             * @param description A message passed to the owner of the remote NSP link resource with this connection
             * request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
    }

    /**
     * Begins update for the NspLink resource.
     * 
     * @return the stage of resource update.
     */
    NspLink.Update update();

    /**
     * The template for NspLink update.
     */
    interface Update extends UpdateStages.WithLocalInboundProfiles, UpdateStages.WithRemoteInboundProfiles,
        UpdateStages.WithDescription {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        NspLink apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        NspLink apply(Context context);
    }

    /**
     * The NspLink update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the NspLink update allowing to specify localInboundProfiles.
         */
        interface WithLocalInboundProfiles {
            /**
             * Specifies the localInboundProfiles property: Local Inbound profile names to which Inbound is allowed. Use
             * ['*'] to allow inbound to all profiles..
             * 
             * @param localInboundProfiles Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow
             * inbound to all profiles.
             * @return the next definition stage.
             */
            Update withLocalInboundProfiles(List<String> localInboundProfiles);
        }

        /**
         * The stage of the NspLink update allowing to specify remoteInboundProfiles.
         */
        interface WithRemoteInboundProfiles {
            /**
             * Specifies the remoteInboundProfiles property: Remote Inbound profile names to which Inbound is allowed.
             * Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode..
             * 
             * @param remoteInboundProfiles Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow
             * inbound to all profiles. This property can only be updated in auto-approval mode.
             * @return the next definition stage.
             */
            Update withRemoteInboundProfiles(List<String> remoteInboundProfiles);
        }

        /**
         * The stage of the NspLink update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: A message passed to the owner of the remote NSP link resource with
             * this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to
             * 140 chars..
             * 
             * @param description A message passed to the owner of the remote NSP link resource with this connection
             * request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    NspLink refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    NspLink refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The AnalysisRunProperties model. */
@Fluent
public final class AnalysisRunProperties {
    /*
     * The description property.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The snapshotId property.
     */
    @JsonProperty(value = "snapshotId")
    private String snapshotId;

    /*
     * The analysisResult property.
     */
    @JsonProperty(value = "analysisResult")
    private String analysisResult;

    /*
     * The errorMessage property.
     */
    @JsonProperty(value = "errorMessage")
    private String errorMessage;

    /*
     * The current provisioning state.
     */
    @JsonProperty(value = "provisioningState")
    private ProvisioningState provisioningState;

    /** Creates an instance of AnalysisRunProperties class. */
    public AnalysisRunProperties() {
    }

    /**
     * Get the description property: The description property.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description property.
     *
     * @param description the description value to set.
     * @return the AnalysisRunProperties object itself.
     */
    public AnalysisRunProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the snapshotId property: The snapshotId property.
     *
     * @return the snapshotId value.
     */
    public String snapshotId() {
        return this.snapshotId;
    }

    /**
     * Set the snapshotId property: The snapshotId property.
     *
     * @param snapshotId the snapshotId value to set.
     * @return the AnalysisRunProperties object itself.
     */
    public AnalysisRunProperties withSnapshotId(String snapshotId) {
        this.snapshotId = snapshotId;
        return this;
    }

    /**
     * Get the analysisResult property: The analysisResult property.
     *
     * @return the analysisResult value.
     */
    public String analysisResult() {
        return this.analysisResult;
    }

    /**
     * Set the analysisResult property: The analysisResult property.
     *
     * @param analysisResult the analysisResult value to set.
     * @return the AnalysisRunProperties object itself.
     */
    public AnalysisRunProperties withAnalysisResult(String analysisResult) {
        this.analysisResult = analysisResult;
        return this;
    }

    /**
     * Get the errorMessage property: The errorMessage property.
     *
     * @return the errorMessage value.
     */
    public String errorMessage() {
        return this.errorMessage;
    }

    /**
     * Set the errorMessage property: The errorMessage property.
     *
     * @param errorMessage the errorMessage value to set.
     * @return the AnalysisRunProperties object itself.
     */
    public AnalysisRunProperties withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * Get the provisioningState property: The current provisioning state.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: The current provisioning state.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the AnalysisRunProperties object itself.
     */
    public AnalysisRunProperties withProvisioningState(ProvisioningState provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

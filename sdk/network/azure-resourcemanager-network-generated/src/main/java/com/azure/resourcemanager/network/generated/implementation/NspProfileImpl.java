// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspProfileInner;
import com.azure.resourcemanager.network.generated.models.NspProfile;
import java.util.Collections;
import java.util.Map;

public final class NspProfileImpl implements NspProfile, NspProfile.Definition, NspProfile.Update {
    private NspProfileInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String id() {
        return this.innerModel().id();
    }

    public String accessRulesVersion() {
        return this.innerModel().accessRulesVersion();
    }

    public String diagnosticSettingsVersion() {
        return this.innerModel().diagnosticSettingsVersion();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NspProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSecurityPerimeterName;

    private String profileName;

    public NspProfileImpl withExistingNetworkSecurityPerimeter(String resourceGroupName,
        String networkSecurityPerimeterName) {
        this.resourceGroupName = resourceGroupName;
        this.networkSecurityPerimeterName = networkSecurityPerimeterName;
        return this;
    }

    public NspProfile create() {
        this.innerObject = serviceManager.serviceClient()
            .getNspProfiles()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public NspProfile create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNspProfiles()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    NspProfileImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new NspProfileInner();
        this.serviceManager = serviceManager;
        this.profileName = name;
    }

    public NspProfileImpl update() {
        return this;
    }

    public NspProfile apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNspProfiles()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public NspProfile apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNspProfiles()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    NspProfileImpl(NspProfileInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSecurityPerimeterName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkSecurityPerimeters");
        this.profileName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "profiles");
    }

    public NspProfile refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNspProfiles()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, Context.NONE)
            .getValue();
        return this;
    }

    public NspProfile refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNspProfiles()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, context)
            .getValue();
        return this;
    }

    public NspProfileImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NspProfileImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NspProfileImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }
}

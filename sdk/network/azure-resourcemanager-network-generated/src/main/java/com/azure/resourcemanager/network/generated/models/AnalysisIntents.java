// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of AnalysisIntents. */
public interface AnalysisIntents {
    /**
     * Gets the list of Analysis Intent resources.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Analysis Intent resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AnalysisIntent> list(String resourceGroupName, String networkVerifierName);

    /**
     * Gets the list of Analysis Intent resources.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Analysis Intent resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AnalysisIntent> list(String resourceGroupName, String networkVerifierName, Context context);

    /**
     * Gets the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Analysis Intent resource along with {@link Response}.
     */
    Response<AnalysisIntent> getWithResponse(
        String resourceGroupName, String networkVerifierName, String analysisIntentName, Context context);

    /**
     * Gets the specific Analysis Intent resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Analysis Intent resource.
     */
    AnalysisIntent get(String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String networkVerifierName, String analysisIntentName);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param analysisIntentName The name of the Analysis Intent resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String networkVerifierName, String analysisIntentName, Context context);

    /**
     * Gets the specific Analysis Intent resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Analysis Intent resource along with {@link Response}.
     */
    AnalysisIntent getById(String id);

    /**
     * Gets the specific Analysis Intent resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Analysis Intent resource along with {@link Response}.
     */
    Response<AnalysisIntent> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specific Analysis Intent resource asynchronously.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new AnalysisIntent resource.
     *
     * @param name resource name.
     * @return the first stage of the new AnalysisIntent definition.
     */
    AnalysisIntent.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.NspLinkReferencesClient;
import com.azure.resourcemanager.network.generated.fluent.models.NspLinkReferenceInner;
import com.azure.resourcemanager.network.generated.models.NspLinkReference;
import com.azure.resourcemanager.network.generated.models.NspLinkReferences;

public final class NspLinkReferencesImpl implements NspLinkReferences {
    private static final ClientLogger LOGGER = new ClientLogger(NspLinkReferencesImpl.class);

    private final NspLinkReferencesClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public NspLinkReferencesImpl(NspLinkReferencesClient innerClient,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<NspLinkReference> getWithResponse(String resourceGroupName, String networkSecurityPerimeterName,
        String linkReferenceName, Context context) {
        Response<NspLinkReferenceInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, linkReferenceName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new NspLinkReferenceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NspLinkReference get(String resourceGroupName, String networkSecurityPerimeterName,
        String linkReferenceName) {
        NspLinkReferenceInner inner
            = this.serviceClient().get(resourceGroupName, networkSecurityPerimeterName, linkReferenceName);
        if (inner != null) {
            return new NspLinkReferenceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String networkSecurityPerimeterName, String linkReferenceName) {
        this.serviceClient().delete(resourceGroupName, networkSecurityPerimeterName, linkReferenceName);
    }

    public void delete(String resourceGroupName, String networkSecurityPerimeterName, String linkReferenceName,
        Context context) {
        this.serviceClient().delete(resourceGroupName, networkSecurityPerimeterName, linkReferenceName, context);
    }

    public PagedIterable<NspLinkReference> list(String resourceGroupName, String networkSecurityPerimeterName) {
        PagedIterable<NspLinkReferenceInner> inner
            = this.serviceClient().list(resourceGroupName, networkSecurityPerimeterName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new NspLinkReferenceImpl(inner1, this.manager()));
    }

    public PagedIterable<NspLinkReference> list(String resourceGroupName, String networkSecurityPerimeterName,
        Integer top, String skipToken, Context context) {
        PagedIterable<NspLinkReferenceInner> inner
            = this.serviceClient().list(resourceGroupName, networkSecurityPerimeterName, top, skipToken, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new NspLinkReferenceImpl(inner1, this.manager()));
    }

    private NspLinkReferencesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}

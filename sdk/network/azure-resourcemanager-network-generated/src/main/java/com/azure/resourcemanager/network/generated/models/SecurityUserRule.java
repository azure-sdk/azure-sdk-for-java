// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.SecurityUserRuleInner;
import java.util.List;

/**
 * An immutable client-side representation of SecurityUserRule.
 */
public interface SecurityUserRule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     * 
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: The system metadata related to this resource.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the description property: A description for this rule.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the protocol property: Network protocol this rule applies to.
     * 
     * @return the protocol value.
     */
    SecurityConfigurationRuleProtocol protocol();

    /**
     * Gets the sources property: The CIDR or source IP ranges.
     * 
     * @return the sources value.
     */
    List<AddressPrefixItem> sources();

    /**
     * Gets the destinations property: The destination address prefixes. CIDR or destination IP ranges.
     * 
     * @return the destinations value.
     */
    List<AddressPrefixItem> destinations();

    /**
     * Gets the sourcePortRanges property: The source port ranges.
     * 
     * @return the sourcePortRanges value.
     */
    List<String> sourcePortRanges();

    /**
     * Gets the destinationPortRanges property: The destination port ranges.
     * 
     * @return the destinationPortRanges value.
     */
    List<String> destinationPortRanges();

    /**
     * Gets the direction property: Indicates if the traffic matched against the rule in inbound or outbound.
     * 
     * @return the direction value.
     */
    SecurityConfigurationRuleDirection direction();

    /**
     * Gets the provisioningState property: The provisioning state of the security configuration user rule resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the resourceGuid property: Unique identifier for this resource.
     * 
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.SecurityUserRuleInner object.
     * 
     * @return the inner object.
     */
    SecurityUserRuleInner innerModel();

    /**
     * The entirety of the SecurityUserRule definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The SecurityUserRule definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the SecurityUserRule definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkManagerName, configurationName, ruleCollectionName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param networkManagerName The name of the network manager.
             * @param configurationName The name of the network manager Security Configuration.
             * @param ruleCollectionName The name of the network manager security Configuration rule collection.
             * @return the next definition stage.
             */
            WithCreate withExistingRuleCollection(String resourceGroupName, String networkManagerName,
                String configurationName, String ruleCollectionName);
        }

        /**
         * The stage of the SecurityUserRule definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithDescription, DefinitionStages.WithProtocol,
            DefinitionStages.WithSources, DefinitionStages.WithDestinations, DefinitionStages.WithSourcePortRanges,
            DefinitionStages.WithDestinationPortRanges, DefinitionStages.WithDirection {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            SecurityUserRule create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SecurityUserRule create(Context context);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: A description for this rule..
             * 
             * @param description A description for this rule.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify protocol.
         */
        interface WithProtocol {
            /**
             * Specifies the protocol property: Network protocol this rule applies to..
             * 
             * @param protocol Network protocol this rule applies to.
             * @return the next definition stage.
             */
            WithCreate withProtocol(SecurityConfigurationRuleProtocol protocol);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify sources.
         */
        interface WithSources {
            /**
             * Specifies the sources property: The CIDR or source IP ranges..
             * 
             * @param sources The CIDR or source IP ranges.
             * @return the next definition stage.
             */
            WithCreate withSources(List<AddressPrefixItem> sources);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify destinations.
         */
        interface WithDestinations {
            /**
             * Specifies the destinations property: The destination address prefixes. CIDR or destination IP ranges..
             * 
             * @param destinations The destination address prefixes. CIDR or destination IP ranges.
             * @return the next definition stage.
             */
            WithCreate withDestinations(List<AddressPrefixItem> destinations);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify sourcePortRanges.
         */
        interface WithSourcePortRanges {
            /**
             * Specifies the sourcePortRanges property: The source port ranges..
             * 
             * @param sourcePortRanges The source port ranges.
             * @return the next definition stage.
             */
            WithCreate withSourcePortRanges(List<String> sourcePortRanges);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify destinationPortRanges.
         */
        interface WithDestinationPortRanges {
            /**
             * Specifies the destinationPortRanges property: The destination port ranges..
             * 
             * @param destinationPortRanges The destination port ranges.
             * @return the next definition stage.
             */
            WithCreate withDestinationPortRanges(List<String> destinationPortRanges);
        }

        /**
         * The stage of the SecurityUserRule definition allowing to specify direction.
         */
        interface WithDirection {
            /**
             * Specifies the direction property: Indicates if the traffic matched against the rule in inbound or
             * outbound..
             * 
             * @param direction Indicates if the traffic matched against the rule in inbound or outbound.
             * @return the next definition stage.
             */
            WithCreate withDirection(SecurityConfigurationRuleDirection direction);
        }
    }

    /**
     * Begins update for the SecurityUserRule resource.
     * 
     * @return the stage of resource update.
     */
    SecurityUserRule.Update update();

    /**
     * The template for SecurityUserRule update.
     */
    interface Update extends UpdateStages.WithDescription, UpdateStages.WithProtocol, UpdateStages.WithSources,
        UpdateStages.WithDestinations, UpdateStages.WithSourcePortRanges, UpdateStages.WithDestinationPortRanges,
        UpdateStages.WithDirection {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        SecurityUserRule apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SecurityUserRule apply(Context context);
    }

    /**
     * The SecurityUserRule update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the SecurityUserRule update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: A description for this rule..
             * 
             * @param description A description for this rule.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the SecurityUserRule update allowing to specify protocol.
         */
        interface WithProtocol {
            /**
             * Specifies the protocol property: Network protocol this rule applies to..
             * 
             * @param protocol Network protocol this rule applies to.
             * @return the next definition stage.
             */
            Update withProtocol(SecurityConfigurationRuleProtocol protocol);
        }

        /**
         * The stage of the SecurityUserRule update allowing to specify sources.
         */
        interface WithSources {
            /**
             * Specifies the sources property: The CIDR or source IP ranges..
             * 
             * @param sources The CIDR or source IP ranges.
             * @return the next definition stage.
             */
            Update withSources(List<AddressPrefixItem> sources);
        }

        /**
         * The stage of the SecurityUserRule update allowing to specify destinations.
         */
        interface WithDestinations {
            /**
             * Specifies the destinations property: The destination address prefixes. CIDR or destination IP ranges..
             * 
             * @param destinations The destination address prefixes. CIDR or destination IP ranges.
             * @return the next definition stage.
             */
            Update withDestinations(List<AddressPrefixItem> destinations);
        }

        /**
         * The stage of the SecurityUserRule update allowing to specify sourcePortRanges.
         */
        interface WithSourcePortRanges {
            /**
             * Specifies the sourcePortRanges property: The source port ranges..
             * 
             * @param sourcePortRanges The source port ranges.
             * @return the next definition stage.
             */
            Update withSourcePortRanges(List<String> sourcePortRanges);
        }

        /**
         * The stage of the SecurityUserRule update allowing to specify destinationPortRanges.
         */
        interface WithDestinationPortRanges {
            /**
             * Specifies the destinationPortRanges property: The destination port ranges..
             * 
             * @param destinationPortRanges The destination port ranges.
             * @return the next definition stage.
             */
            Update withDestinationPortRanges(List<String> destinationPortRanges);
        }

        /**
         * The stage of the SecurityUserRule update allowing to specify direction.
         */
        interface WithDirection {
            /**
             * Specifies the direction property: Indicates if the traffic matched against the rule in inbound or
             * outbound..
             * 
             * @param direction Indicates if the traffic matched against the rule in inbound or outbound.
             * @return the next definition stage.
             */
            Update withDirection(SecurityConfigurationRuleDirection direction);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    SecurityUserRule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SecurityUserRule refresh(Context context);
}

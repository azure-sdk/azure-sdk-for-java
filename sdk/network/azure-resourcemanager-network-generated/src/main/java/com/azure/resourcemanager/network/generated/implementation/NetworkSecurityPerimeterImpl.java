// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkSecurityPerimeterInner;
import com.azure.resourcemanager.network.generated.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.network.generated.models.NspProvisioningState;
import com.azure.resourcemanager.network.generated.models.SystemDataAutoGenerated;
import com.azure.resourcemanager.network.generated.models.UpdateTagsRequest;
import java.util.Collections;
import java.util.Map;

public final class NetworkSecurityPerimeterImpl
    implements NetworkSecurityPerimeter, NetworkSecurityPerimeter.Definition, NetworkSecurityPerimeter.Update {
    private NetworkSecurityPerimeterInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemDataAutoGenerated systemData() {
        return this.innerModel().systemData();
    }

    public NspProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String perimeterGuid() {
        return this.innerModel().perimeterGuid();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NetworkSecurityPerimeterInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSecurityPerimeterName;

    private UpdateTagsRequest updateParameters;

    public NetworkSecurityPerimeterImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NetworkSecurityPerimeter create() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeters()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public NetworkSecurityPerimeter create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeters()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, this.innerModel(), context)
            .getValue();
        return this;
    }

    NetworkSecurityPerimeterImpl(String name,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new NetworkSecurityPerimeterInner();
        this.serviceManager = serviceManager;
        this.networkSecurityPerimeterName = name;
    }

    public NetworkSecurityPerimeterImpl update() {
        this.updateParameters = new UpdateTagsRequest();
        return this;
    }

    public NetworkSecurityPerimeter apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeters()
            .patchWithResponse(resourceGroupName, networkSecurityPerimeterName, updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public NetworkSecurityPerimeter apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeters()
            .patchWithResponse(resourceGroupName, networkSecurityPerimeterName, updateParameters, context)
            .getValue();
        return this;
    }

    NetworkSecurityPerimeterImpl(NetworkSecurityPerimeterInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSecurityPerimeterName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkSecurityPerimeters");
    }

    public NetworkSecurityPerimeter refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeters()
            .getByResourceGroupWithResponse(resourceGroupName, networkSecurityPerimeterName, Context.NONE)
            .getValue();
        return this;
    }

    public NetworkSecurityPerimeter refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeters()
            .getByResourceGroupWithResponse(resourceGroupName, networkSecurityPerimeterName, context)
            .getValue();
        return this;
    }

    public NetworkSecurityPerimeterImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkSecurityPerimeterImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkSecurityPerimeterImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

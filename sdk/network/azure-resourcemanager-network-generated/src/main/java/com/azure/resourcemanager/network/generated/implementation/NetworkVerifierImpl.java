// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkVerifierInner;
import com.azure.resourcemanager.network.generated.models.NetworkVerifier;
import com.azure.resourcemanager.network.generated.models.NetworkVerifierProperties;
import com.azure.resourcemanager.network.generated.models.NetworkVerifierUpdate;
import java.util.Collections;
import java.util.Map;

public final class NetworkVerifierImpl implements NetworkVerifier, NetworkVerifier.Definition, NetworkVerifier.Update {
    private NetworkVerifierInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NetworkVerifierProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NetworkVerifierInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkVerifierName;

    private NetworkVerifierUpdate updateBody;

    public NetworkVerifierImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NetworkVerifier create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVerifiers()
                .createWithResponse(resourceGroupName, networkVerifierName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public NetworkVerifier create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVerifiers()
                .createWithResponse(resourceGroupName, networkVerifierName, this.innerModel(), context)
                .getValue();
        return this;
    }

    NetworkVerifierImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new NetworkVerifierInner();
        this.serviceManager = serviceManager;
        this.networkVerifierName = name;
    }

    public NetworkVerifierImpl update() {
        this.updateBody = new NetworkVerifierUpdate();
        return this;
    }

    public NetworkVerifier apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVerifiers()
                .updateWithResponse(resourceGroupName, networkVerifierName, updateBody, Context.NONE)
                .getValue();
        return this;
    }

    public NetworkVerifier apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVerifiers()
                .updateWithResponse(resourceGroupName, networkVerifierName, updateBody, context)
                .getValue();
        return this;
    }

    NetworkVerifierImpl(
        NetworkVerifierInner innerObject, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkVerifierName = Utils.getValueFromIdByName(innerObject.id(), "networkVerifiers");
    }

    public NetworkVerifier refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVerifiers()
                .getByResourceGroupWithResponse(resourceGroupName, networkVerifierName, Context.NONE)
                .getValue();
        return this;
    }

    public NetworkVerifier refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVerifiers()
                .getByResourceGroupWithResponse(resourceGroupName, networkVerifierName, context)
                .getValue();
        return this;
    }

    public NetworkVerifierImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkVerifierImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkVerifierImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public NetworkVerifierImpl withProperties(NetworkVerifierProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateBody.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.SecurityUserRuleInner;
import com.azure.resourcemanager.network.generated.models.AddressPrefixItem;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleDirection;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleProtocol;
import com.azure.resourcemanager.network.generated.models.SecurityUserRule;
import java.util.Collections;
import java.util.List;

public final class SecurityUserRuleImpl
    implements SecurityUserRule, SecurityUserRule.Definition, SecurityUserRule.Update {
    private SecurityUserRuleInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String description() {
        return this.innerModel().description();
    }

    public SecurityConfigurationRuleProtocol protocol() {
        return this.innerModel().protocol();
    }

    public List<AddressPrefixItem> sources() {
        List<AddressPrefixItem> inner = this.innerModel().sources();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<AddressPrefixItem> destinations() {
        List<AddressPrefixItem> inner = this.innerModel().destinations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> sourcePortRanges() {
        List<String> inner = this.innerModel().sourcePortRanges();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> destinationPortRanges() {
        List<String> inner = this.innerModel().destinationPortRanges();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SecurityConfigurationRuleDirection direction() {
        return this.innerModel().direction();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGuid() {
        return this.innerModel().resourceGuid();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SecurityUserRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkManagerName;

    private String configurationName;

    private String ruleCollectionName;

    private String ruleName;

    public SecurityUserRuleImpl withExistingRuleCollection(String resourceGroupName, String networkManagerName,
        String configurationName, String ruleCollectionName) {
        this.resourceGroupName = resourceGroupName;
        this.networkManagerName = networkManagerName;
        this.configurationName = configurationName;
        this.ruleCollectionName = ruleCollectionName;
        return this;
    }

    public SecurityUserRule create() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRules()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                ruleName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SecurityUserRule create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRules()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                ruleName, this.innerModel(), context)
            .getValue();
        return this;
    }

    SecurityUserRuleImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new SecurityUserRuleInner();
        this.serviceManager = serviceManager;
        this.ruleName = name;
    }

    public SecurityUserRuleImpl update() {
        return this;
    }

    public SecurityUserRule apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRules()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                ruleName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SecurityUserRule apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRules()
            .createOrUpdateWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName,
                ruleName, this.innerModel(), context)
            .getValue();
        return this;
    }

    SecurityUserRuleImpl(SecurityUserRuleInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkManagerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkManagers");
        this.configurationName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "securityUserConfigurations");
        this.ruleCollectionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "ruleCollections");
        this.ruleName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "rules");
    }

    public SecurityUserRule refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRules()
            .getWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName, ruleName,
                Context.NONE)
            .getValue();
        return this;
    }

    public SecurityUserRule refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSecurityUserRules()
            .getWithResponse(resourceGroupName, networkManagerName, configurationName, ruleCollectionName, ruleName,
                context)
            .getValue();
        return this;
    }

    public SecurityUserRuleImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public SecurityUserRuleImpl withProtocol(SecurityConfigurationRuleProtocol protocol) {
        this.innerModel().withProtocol(protocol);
        return this;
    }

    public SecurityUserRuleImpl withSources(List<AddressPrefixItem> sources) {
        this.innerModel().withSources(sources);
        return this;
    }

    public SecurityUserRuleImpl withDestinations(List<AddressPrefixItem> destinations) {
        this.innerModel().withDestinations(destinations);
        return this;
    }

    public SecurityUserRuleImpl withSourcePortRanges(List<String> sourcePortRanges) {
        this.innerModel().withSourcePortRanges(sourcePortRanges);
        return this;
    }

    public SecurityUserRuleImpl withDestinationPortRanges(List<String> destinationPortRanges) {
        this.innerModel().withDestinationPortRanges(destinationPortRanges);
        return this;
    }

    public SecurityUserRuleImpl withDirection(SecurityConfigurationRuleDirection direction) {
        this.innerModel().withDirection(direction);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspLinkInner;
import com.azure.resourcemanager.network.generated.models.NspLink;
import com.azure.resourcemanager.network.generated.models.NspLinkProvisioningState;
import com.azure.resourcemanager.network.generated.models.NspLinkStatus;
import com.azure.resourcemanager.network.generated.models.SecurityPerimeterSystemData;
import java.util.Collections;
import java.util.List;

public final class NspLinkImpl implements NspLink, NspLink.Definition, NspLink.Update {
    private NspLinkInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SecurityPerimeterSystemData systemData() {
        return this.innerModel().systemData();
    }

    public NspLinkProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String autoApprovedRemotePerimeterResourceId() {
        return this.innerModel().autoApprovedRemotePerimeterResourceId();
    }

    public String remotePerimeterGuid() {
        return this.innerModel().remotePerimeterGuid();
    }

    public String remotePerimeterLocation() {
        return this.innerModel().remotePerimeterLocation();
    }

    public List<String> localInboundProfiles() {
        List<String> inner = this.innerModel().localInboundProfiles();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> localOutboundProfiles() {
        List<String> inner = this.innerModel().localOutboundProfiles();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> remoteInboundProfiles() {
        List<String> inner = this.innerModel().remoteInboundProfiles();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> remoteOutboundProfiles() {
        List<String> inner = this.innerModel().remoteOutboundProfiles();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String description() {
        return this.innerModel().description();
    }

    public NspLinkStatus status() {
        return this.innerModel().status();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NspLinkInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSecurityPerimeterName;

    private String linkName;

    public NspLinkImpl withExistingNetworkSecurityPerimeter(String resourceGroupName,
        String networkSecurityPerimeterName) {
        this.resourceGroupName = resourceGroupName;
        this.networkSecurityPerimeterName = networkSecurityPerimeterName;
        return this;
    }

    public NspLink create() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLinks()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, linkName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public NspLink create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLinks()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, linkName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    NspLinkImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new NspLinkInner();
        this.serviceManager = serviceManager;
        this.linkName = name;
    }

    public NspLinkImpl update() {
        return this;
    }

    public NspLink apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLinks()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, linkName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public NspLink apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLinks()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, linkName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    NspLinkImpl(NspLinkInner innerObject, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSecurityPerimeterName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkSecurityPerimeters");
        this.linkName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "links");
    }

    public NspLink refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLinks()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, linkName, Context.NONE)
            .getValue();
        return this;
    }

    public NspLink refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLinks()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, linkName, context)
            .getValue();
        return this;
    }

    public NspLinkImpl withAutoApprovedRemotePerimeterResourceId(String autoApprovedRemotePerimeterResourceId) {
        this.innerModel().withAutoApprovedRemotePerimeterResourceId(autoApprovedRemotePerimeterResourceId);
        return this;
    }

    public NspLinkImpl withLocalInboundProfiles(List<String> localInboundProfiles) {
        this.innerModel().withLocalInboundProfiles(localInboundProfiles);
        return this;
    }

    public NspLinkImpl withRemoteInboundProfiles(List<String> remoteInboundProfiles) {
        this.innerModel().withRemoteInboundProfiles(remoteInboundProfiles);
        return this;
    }

    public NspLinkImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteFailoverSingleTestDetailsInner;
import com.azure.resourcemanager.network.generated.models.ExpressRouteFailoverRedundantRoute;
import com.azure.resourcemanager.network.generated.models.ExpressRouteFailoverSingleTestDetails;
import com.azure.resourcemanager.network.generated.models.FailoverConnectionDetails;
import com.azure.resourcemanager.network.generated.models.FailoverTestStatusForSingleTest;
import java.util.Collections;
import java.util.List;

public final class ExpressRouteFailoverSingleTestDetailsImpl implements ExpressRouteFailoverSingleTestDetails {
    private ExpressRouteFailoverSingleTestDetailsInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    ExpressRouteFailoverSingleTestDetailsImpl(ExpressRouteFailoverSingleTestDetailsInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String peeringLocation() {
        return this.innerModel().peeringLocation();
    }

    public FailoverTestStatusForSingleTest status() {
        return this.innerModel().status();
    }

    public String startTimeUtc() {
        return this.innerModel().startTimeUtc();
    }

    public String endTimeUtc() {
        return this.innerModel().endTimeUtc();
    }

    public List<ExpressRouteFailoverRedundantRoute> redundantRoutes() {
        List<ExpressRouteFailoverRedundantRoute> inner = this.innerModel().redundantRoutes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> nonRedundantRoutes() {
        List<String> inner = this.innerModel().nonRedundantRoutes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Boolean wasSimulationSuccessful() {
        return this.innerModel().wasSimulationSuccessful();
    }

    public List<FailoverConnectionDetails> failoverConnectionDetails() {
        List<FailoverConnectionDetails> inner = this.innerModel().failoverConnectionDetails();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ExpressRouteFailoverSingleTestDetailsInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}

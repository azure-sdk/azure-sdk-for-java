// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.RoutingRuleInner;

/**
 * An immutable client-side representation of RoutingRule.
 */
public interface RoutingRule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     * 
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: The system metadata related to this resource.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the description property: A description for this rule.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the resourceGuid property: Unique identifier for this resource.
     * 
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the destination property: Indicates the destination for this particular rule.
     * 
     * @return the destination value.
     */
    RoutingRuleRouteDestination destination();

    /**
     * Gets the nextHop property: Indicates the next hop for this particular rule.
     * 
     * @return the nextHop value.
     */
    RoutingRuleNextHop nextHop();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.RoutingRuleInner object.
     * 
     * @return the inner object.
     */
    RoutingRuleInner innerModel();

    /**
     * The entirety of the RoutingRule definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The RoutingRule definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the RoutingRule definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the RoutingRule definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkManagerName, configurationName, ruleCollectionName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param networkManagerName The name of the network manager.
             * @param configurationName The name of the network manager Routing Configuration.
             * @param ruleCollectionName The name of the network manager routing Configuration rule collection.
             * @return the next definition stage.
             */
            WithCreate withExistingRuleCollection(String resourceGroupName, String networkManagerName,
                String configurationName, String ruleCollectionName);
        }

        /**
         * The stage of the RoutingRule definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithDescription, DefinitionStages.WithDestination, DefinitionStages.WithNextHop {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            RoutingRule create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RoutingRule create(Context context);
        }

        /**
         * The stage of the RoutingRule definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: A description for this rule..
             * 
             * @param description A description for this rule.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the RoutingRule definition allowing to specify destination.
         */
        interface WithDestination {
            /**
             * Specifies the destination property: Indicates the destination for this particular rule..
             * 
             * @param destination Indicates the destination for this particular rule.
             * @return the next definition stage.
             */
            WithCreate withDestination(RoutingRuleRouteDestination destination);
        }

        /**
         * The stage of the RoutingRule definition allowing to specify nextHop.
         */
        interface WithNextHop {
            /**
             * Specifies the nextHop property: Indicates the next hop for this particular rule..
             * 
             * @param nextHop Indicates the next hop for this particular rule.
             * @return the next definition stage.
             */
            WithCreate withNextHop(RoutingRuleNextHop nextHop);
        }
    }

    /**
     * Begins update for the RoutingRule resource.
     * 
     * @return the stage of resource update.
     */
    RoutingRule.Update update();

    /**
     * The template for RoutingRule update.
     */
    interface Update extends UpdateStages.WithDescription, UpdateStages.WithDestination, UpdateStages.WithNextHop {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        RoutingRule apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RoutingRule apply(Context context);
    }

    /**
     * The RoutingRule update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the RoutingRule update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: A description for this rule..
             * 
             * @param description A description for this rule.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the RoutingRule update allowing to specify destination.
         */
        interface WithDestination {
            /**
             * Specifies the destination property: Indicates the destination for this particular rule..
             * 
             * @param destination Indicates the destination for this particular rule.
             * @return the next definition stage.
             */
            Update withDestination(RoutingRuleRouteDestination destination);
        }

        /**
         * The stage of the RoutingRule update allowing to specify nextHop.
         */
        interface WithNextHop {
            /**
             * Specifies the nextHop property: Indicates the next hop for this particular rule..
             * 
             * @param nextHop Indicates the next hop for this particular rule.
             * @return the next definition stage.
             */
            Update withNextHop(RoutingRuleNextHop nextHop);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    RoutingRule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RoutingRule refresh(Context context);
}

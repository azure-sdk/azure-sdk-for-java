// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The storage authentication for a packet capture session.
 */
@Fluent
public final class StorageAuthentication implements JsonSerializable<StorageAuthentication> {
    /*
     * The managed identity information for a packet capture session.
     */
    private ManagedIdentityInfo storageAuthentication;

    /**
     * Creates an instance of StorageAuthentication class.
     */
    public StorageAuthentication() {
    }

    /**
     * Get the storageAuthentication property: The managed identity information for a packet capture session.
     * 
     * @return the storageAuthentication value.
     */
    public ManagedIdentityInfo storageAuthentication() {
        return this.storageAuthentication;
    }

    /**
     * Set the storageAuthentication property: The managed identity information for a packet capture session.
     * 
     * @param storageAuthentication the storageAuthentication value to set.
     * @return the StorageAuthentication object itself.
     */
    public StorageAuthentication withStorageAuthentication(ManagedIdentityInfo storageAuthentication) {
        this.storageAuthentication = storageAuthentication;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storageAuthentication() != null) {
            storageAuthentication().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("storageAuthentication", this.storageAuthentication);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StorageAuthentication from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StorageAuthentication if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StorageAuthentication.
     */
    public static StorageAuthentication fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StorageAuthentication deserializedStorageAuthentication = new StorageAuthentication();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("storageAuthentication".equals(fieldName)) {
                    deserializedStorageAuthentication.storageAuthentication = ManagedIdentityInfo.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStorageAuthentication;
        });
    }
}

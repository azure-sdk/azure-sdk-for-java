// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.resourcemanager.network.generated.fluent.models.LoadBalancerHealthPerRulePerBackendAddressInner;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkInterfaceIpConfigurationInner;
import com.azure.resourcemanager.network.generated.models.LoadBalancerHealthPerRulePerBackendAddress;
import com.azure.resourcemanager.network.generated.models.NetworkInterfaceIpConfiguration;

public final class LoadBalancerHealthPerRulePerBackendAddressImpl
    implements LoadBalancerHealthPerRulePerBackendAddress {
    private LoadBalancerHealthPerRulePerBackendAddressInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    LoadBalancerHealthPerRulePerBackendAddressImpl(LoadBalancerHealthPerRulePerBackendAddressInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String ipAddress() {
        return this.innerModel().ipAddress();
    }

    public NetworkInterfaceIpConfiguration networkInterfaceIpConfigurationId() {
        NetworkInterfaceIpConfigurationInner inner = this.innerModel().networkInterfaceIpConfigurationId();
        if (inner != null) {
            return new NetworkInterfaceIpConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public String state() {
        return this.innerModel().state();
    }

    public String reason() {
        return this.innerModel().reason();
    }

    public LoadBalancerHealthPerRulePerBackendAddressInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.VerifierWorkspaceInner;
import com.azure.resourcemanager.network.generated.models.VerifierWorkspace;
import com.azure.resourcemanager.network.generated.models.VerifierWorkspaceProperties;
import com.azure.resourcemanager.network.generated.models.VerifierWorkspaceUpdate;
import com.azure.resourcemanager.network.generated.models.VerifierWorkspaceUpdateProperties;
import java.util.Collections;
import java.util.Map;

public final class VerifierWorkspaceImpl
    implements VerifierWorkspace, VerifierWorkspace.Definition, VerifierWorkspace.Update {
    private VerifierWorkspaceInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String location() {
        return this.innerModel().location();
    }

    public VerifierWorkspaceProperties properties() {
        return this.innerModel().properties();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public VerifierWorkspaceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkManagerName;

    private String workspaceName;

    private VerifierWorkspaceUpdate updateBody;

    public VerifierWorkspaceImpl withExistingNetworkManager(String resourceGroupName, String networkManagerName) {
        this.resourceGroupName = resourceGroupName;
        this.networkManagerName = networkManagerName;
        return this;
    }

    public VerifierWorkspace create() {
        this.innerObject = serviceManager.serviceClient()
            .getVerifierWorkspaces()
            .createWithResponse(resourceGroupName, networkManagerName, workspaceName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public VerifierWorkspace create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getVerifierWorkspaces()
            .createWithResponse(resourceGroupName, networkManagerName, workspaceName, this.innerModel(), context)
            .getValue();
        return this;
    }

    VerifierWorkspaceImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new VerifierWorkspaceInner();
        this.serviceManager = serviceManager;
        this.workspaceName = name;
    }

    public VerifierWorkspaceImpl update() {
        this.updateBody = new VerifierWorkspaceUpdate();
        return this;
    }

    public VerifierWorkspace apply() {
        this.innerObject = serviceManager.serviceClient()
            .getVerifierWorkspaces()
            .updateWithResponse(resourceGroupName, networkManagerName, workspaceName, updateBody, Context.NONE)
            .getValue();
        return this;
    }

    public VerifierWorkspace apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getVerifierWorkspaces()
            .updateWithResponse(resourceGroupName, networkManagerName, workspaceName, updateBody, context)
            .getValue();
        return this;
    }

    VerifierWorkspaceImpl(VerifierWorkspaceInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkManagerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkManagers");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "verifierWorkspaces");
    }

    public VerifierWorkspace refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getVerifierWorkspaces()
            .getWithResponse(resourceGroupName, networkManagerName, workspaceName, Context.NONE)
            .getValue();
        return this;
    }

    public VerifierWorkspace refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getVerifierWorkspaces()
            .getWithResponse(resourceGroupName, networkManagerName, workspaceName, context)
            .getValue();
        return this;
    }

    public VerifierWorkspaceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public VerifierWorkspaceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public VerifierWorkspaceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public VerifierWorkspaceImpl withProperties(VerifierWorkspaceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public VerifierWorkspaceImpl withProperties(VerifierWorkspaceUpdateProperties properties) {
        this.updateBody.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

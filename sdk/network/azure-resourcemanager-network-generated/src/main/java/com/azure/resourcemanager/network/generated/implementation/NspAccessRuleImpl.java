// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspAccessRuleInner;
import com.azure.resourcemanager.network.generated.models.AccessRuleDirection;
import com.azure.resourcemanager.network.generated.models.NspAccessRule;
import com.azure.resourcemanager.network.generated.models.NspProvisioningState;
import com.azure.resourcemanager.network.generated.models.PerimeterBasedAccessRule;
import com.azure.resourcemanager.network.generated.models.SubscriptionId;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class NspAccessRuleImpl implements NspAccessRule, NspAccessRule.Definition, NspAccessRule.Update {
    private NspAccessRuleInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String id() {
        return this.innerModel().id();
    }

    public NspProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public AccessRuleDirection direction() {
        return this.innerModel().direction();
    }

    public List<String> addressPrefixes() {
        List<String> inner = this.innerModel().addressPrefixes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> fullyQualifiedDomainNames() {
        List<String> inner = this.innerModel().fullyQualifiedDomainNames();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubscriptionId> subscriptions() {
        List<SubscriptionId> inner = this.innerModel().subscriptions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<PerimeterBasedAccessRule> networkSecurityPerimeters() {
        List<PerimeterBasedAccessRule> inner = this.innerModel().networkSecurityPerimeters();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> emailAddresses() {
        List<String> inner = this.innerModel().emailAddresses();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> phoneNumbers() {
        List<String> inner = this.innerModel().phoneNumbers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> serviceTags() {
        List<String> inner = this.innerModel().serviceTags();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NspAccessRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSecurityPerimeterName;

    private String profileName;

    private String accessRuleName;

    public NspAccessRuleImpl withExistingProfile(String resourceGroupName, String networkSecurityPerimeterName,
        String profileName) {
        this.resourceGroupName = resourceGroupName;
        this.networkSecurityPerimeterName = networkSecurityPerimeterName;
        this.profileName = profileName;
        return this;
    }

    public NspAccessRule create() {
        this.innerObject = serviceManager.serviceClient()
            .getNspAccessRules()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, accessRuleName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public NspAccessRule create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNspAccessRules()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, accessRuleName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    NspAccessRuleImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new NspAccessRuleInner();
        this.serviceManager = serviceManager;
        this.accessRuleName = name;
    }

    public NspAccessRuleImpl update() {
        return this;
    }

    public NspAccessRule apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNspAccessRules()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, accessRuleName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public NspAccessRule apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNspAccessRules()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, accessRuleName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    NspAccessRuleImpl(NspAccessRuleInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSecurityPerimeterName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkSecurityPerimeters");
        this.profileName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "profiles");
        this.accessRuleName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "accessRules");
    }

    public NspAccessRule refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNspAccessRules()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, accessRuleName, Context.NONE)
            .getValue();
        return this;
    }

    public NspAccessRule refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNspAccessRules()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, profileName, accessRuleName, context)
            .getValue();
        return this;
    }

    public NspAccessRuleImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NspAccessRuleImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NspAccessRuleImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public NspAccessRuleImpl withDirection(AccessRuleDirection direction) {
        this.innerModel().withDirection(direction);
        return this;
    }

    public NspAccessRuleImpl withAddressPrefixes(List<String> addressPrefixes) {
        this.innerModel().withAddressPrefixes(addressPrefixes);
        return this;
    }

    public NspAccessRuleImpl withFullyQualifiedDomainNames(List<String> fullyQualifiedDomainNames) {
        this.innerModel().withFullyQualifiedDomainNames(fullyQualifiedDomainNames);
        return this;
    }

    public NspAccessRuleImpl withSubscriptions(List<SubscriptionId> subscriptions) {
        this.innerModel().withSubscriptions(subscriptions);
        return this;
    }

    public NspAccessRuleImpl withEmailAddresses(List<String> emailAddresses) {
        this.innerModel().withEmailAddresses(emailAddresses);
        return this;
    }

    public NspAccessRuleImpl withPhoneNumbers(List<String> phoneNumbers) {
        this.innerModel().withPhoneNumbers(phoneNumbers);
        return this;
    }

    public NspAccessRuleImpl withServiceTags(List<String> serviceTags) {
        this.innerModel().withServiceTags(serviceTags);
        return this;
    }
}

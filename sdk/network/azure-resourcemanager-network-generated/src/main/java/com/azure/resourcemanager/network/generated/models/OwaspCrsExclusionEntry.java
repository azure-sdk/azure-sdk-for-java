// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Allows exclusion of a variable or the whole request from WAF check when the exclusion condition is satisfied.
 */
@Fluent
public final class OwaspCrsExclusionEntry {
    /*
     * Exclusion type that determines if only a variable is to be excluded or the whole request
     */
    @JsonProperty(value = "exclude")
    private OwaspCrsExclusionEntryExclude exclude;

    /*
     * The variable on which we evaluate the exclusion condition
     */
    @JsonProperty(value = "matchVariable", required = true)
    private OwaspCrsExclusionEntryMatchVariable matchVariable;

    /*
     * When matchVariable is a collection, operate on the selector to specify which elements in the collection this
     * exclusion applies to.
     */
    @JsonProperty(value = "selectorMatchOperator")
    private OwaspCrsExclusionEntrySelectorMatchOperator selectorMatchOperator;

    /*
     * When matchVariable is a collection, operator used to specify which elements in the collection this exclusion
     * applies to.
     */
    @JsonProperty(value = "selector")
    private String selector;

    /*
     * Allowed values for request exclusion
     */
    @JsonProperty(value = "values")
    private List<String> values;

    /*
     * Operates on the allowed values for request exclusion
     */
    @JsonProperty(value = "valueMatchOperator ")
    private OwaspCrsExclusionEntryValueMatchOperator valueMatchOperator;

    /*
     * The managed rule sets that are associated with the exclusion.
     */
    @JsonProperty(value = "exclusionManagedRuleSets")
    private List<ExclusionManagedRuleSet> exclusionManagedRuleSets;

    /**
     * Creates an instance of OwaspCrsExclusionEntry class.
     */
    public OwaspCrsExclusionEntry() {
    }

    /**
     * Get the exclude property: Exclusion type that determines if only a variable is to be excluded or the whole
     * request.
     * 
     * @return the exclude value.
     */
    public OwaspCrsExclusionEntryExclude exclude() {
        return this.exclude;
    }

    /**
     * Set the exclude property: Exclusion type that determines if only a variable is to be excluded or the whole
     * request.
     * 
     * @param exclude the exclude value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry withExclude(OwaspCrsExclusionEntryExclude exclude) {
        this.exclude = exclude;
        return this;
    }

    /**
     * Get the matchVariable property: The variable on which we evaluate the exclusion condition.
     * 
     * @return the matchVariable value.
     */
    public OwaspCrsExclusionEntryMatchVariable matchVariable() {
        return this.matchVariable;
    }

    /**
     * Set the matchVariable property: The variable on which we evaluate the exclusion condition.
     * 
     * @param matchVariable the matchVariable value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry withMatchVariable(OwaspCrsExclusionEntryMatchVariable matchVariable) {
        this.matchVariable = matchVariable;
        return this;
    }

    /**
     * Get the selectorMatchOperator property: When matchVariable is a collection, operate on the selector to specify
     * which elements in the collection this exclusion applies to.
     * 
     * @return the selectorMatchOperator value.
     */
    public OwaspCrsExclusionEntrySelectorMatchOperator selectorMatchOperator() {
        return this.selectorMatchOperator;
    }

    /**
     * Set the selectorMatchOperator property: When matchVariable is a collection, operate on the selector to specify
     * which elements in the collection this exclusion applies to.
     * 
     * @param selectorMatchOperator the selectorMatchOperator value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry
        withSelectorMatchOperator(OwaspCrsExclusionEntrySelectorMatchOperator selectorMatchOperator) {
        this.selectorMatchOperator = selectorMatchOperator;
        return this;
    }

    /**
     * Get the selector property: When matchVariable is a collection, operator used to specify which elements in the
     * collection this exclusion applies to.
     * 
     * @return the selector value.
     */
    public String selector() {
        return this.selector;
    }

    /**
     * Set the selector property: When matchVariable is a collection, operator used to specify which elements in the
     * collection this exclusion applies to.
     * 
     * @param selector the selector value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry withSelector(String selector) {
        this.selector = selector;
        return this;
    }

    /**
     * Get the values property: Allowed values for request exclusion.
     * 
     * @return the values value.
     */
    public List<String> values() {
        return this.values;
    }

    /**
     * Set the values property: Allowed values for request exclusion.
     * 
     * @param values the values value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry withValues(List<String> values) {
        this.values = values;
        return this;
    }

    /**
     * Get the valueMatchOperator property: Operates on the allowed values for request exclusion.
     * 
     * @return the valueMatchOperator value.
     */
    public OwaspCrsExclusionEntryValueMatchOperator valueMatchOperator() {
        return this.valueMatchOperator;
    }

    /**
     * Set the valueMatchOperator property: Operates on the allowed values for request exclusion.
     * 
     * @param valueMatchOperator the valueMatchOperator value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry withValueMatchOperator(OwaspCrsExclusionEntryValueMatchOperator valueMatchOperator) {
        this.valueMatchOperator = valueMatchOperator;
        return this;
    }

    /**
     * Get the exclusionManagedRuleSets property: The managed rule sets that are associated with the exclusion.
     * 
     * @return the exclusionManagedRuleSets value.
     */
    public List<ExclusionManagedRuleSet> exclusionManagedRuleSets() {
        return this.exclusionManagedRuleSets;
    }

    /**
     * Set the exclusionManagedRuleSets property: The managed rule sets that are associated with the exclusion.
     * 
     * @param exclusionManagedRuleSets the exclusionManagedRuleSets value to set.
     * @return the OwaspCrsExclusionEntry object itself.
     */
    public OwaspCrsExclusionEntry withExclusionManagedRuleSets(List<ExclusionManagedRuleSet> exclusionManagedRuleSets) {
        this.exclusionManagedRuleSets = exclusionManagedRuleSets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (matchVariable() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property matchVariable in model OwaspCrsExclusionEntry"));
        }
        if (exclusionManagedRuleSets() != null) {
            exclusionManagedRuleSets().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(OwaspCrsExclusionEntry.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ConfigurationSnapshots. */
public interface ConfigurationSnapshots {
    /**
     * Gets the list of Configuration Snapshot resources.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Configuration Snapshot resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConfigurationSnapshot> list(String resourceGroupName, String networkVerifierName);

    /**
     * Gets the list of Configuration Snapshot resources.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Configuration Snapshot resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConfigurationSnapshot> list(String resourceGroupName, String networkVerifierName, Context context);

    /**
     * Gets the specific Configuration Snapshot resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param configurationSnapshotName The name of the Configuration Snapshot resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Configuration Snapshot resource along with {@link Response}.
     */
    Response<ConfigurationSnapshot> getWithResponse(
        String resourceGroupName, String networkVerifierName, String configurationSnapshotName, Context context);

    /**
     * Gets the specific Configuration Snapshot resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param configurationSnapshotName The name of the Configuration Snapshot resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Configuration Snapshot resource.
     */
    ConfigurationSnapshot get(String resourceGroupName, String networkVerifierName, String configurationSnapshotName);

    /**
     * Deletes the specific Configuration Snapshot resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param configurationSnapshotName The name of the Configuration Snapshot resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String networkVerifierName, String configurationSnapshotName);

    /**
     * Deletes the specific Configuration Snapshot resource asynchronously.
     *
     * @param resourceGroupName The name of the resource group.
     * @param networkVerifierName The name of the Network Verifier resource.
     * @param configurationSnapshotName The name of the Configuration Snapshot resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String resourceGroupName, String networkVerifierName, String configurationSnapshotName, Context context);

    /**
     * Gets the specific Configuration Snapshot resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Configuration Snapshot resource along with {@link Response}.
     */
    ConfigurationSnapshot getById(String id);

    /**
     * Gets the specific Configuration Snapshot resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specific Configuration Snapshot resource along with {@link Response}.
     */
    Response<ConfigurationSnapshot> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the specific Configuration Snapshot resource asynchronously.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the specific Configuration Snapshot resource asynchronously.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConfigurationSnapshot resource.
     *
     * @param name resource name.
     * @return the first stage of the new ConfigurationSnapshot definition.
     */
    ConfigurationSnapshot.DefinitionStages.Blank define(String name);
}

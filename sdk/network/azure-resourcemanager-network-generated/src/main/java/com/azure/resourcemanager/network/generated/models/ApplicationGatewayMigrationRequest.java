// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Details of application gateway migration request.
 */
@Fluent
public final class ApplicationGatewayMigrationRequest {
    /*
     * Migration type of the application gateway resource.
     */
    @JsonProperty(value = "migrationType")
    private ApplicationGatewayMigrationType migrationType;

    /*
     * Subnet Id of the v2 application gateway resource.
     */
    @JsonProperty(value = "subnetId")
    private String subnetId;

    /*
     * Private ip of the v2 application gateway resource.
     */
    @JsonProperty(value = "privateIp")
    private String privateIp;

    /*
     * SKU of the application gateway resource(Accepted value is Basic,applicable only in case of Standard_Small and
     * Standard_Medium with 2 or less instances), otherwise by default standard_v1 is migrated to standard_v2 and
     * waf_v1 is migrated to waf_v2.
     */
    @JsonProperty(value = "sku")
    private ApplicationGatewaySku sku;

    /*
     * Name of the WAF policy to be attached to the v2 gateway(applicable in only case of the waf_v1 to waf_v2
     * migration for converting the waf config associated to wafv1 gateway to a waf policy).
     */
    @JsonProperty(value = "wafPolicyName")
    private String wafPolicyName;

    /*
     * A list of availability zones denoting where the v2 application gateway resource needs to come from.
     */
    @JsonProperty(value = "zones")
    private List<String> zones;

    /**
     * Creates an instance of ApplicationGatewayMigrationRequest class.
     */
    public ApplicationGatewayMigrationRequest() {
    }

    /**
     * Get the migrationType property: Migration type of the application gateway resource.
     * 
     * @return the migrationType value.
     */
    public ApplicationGatewayMigrationType migrationType() {
        return this.migrationType;
    }

    /**
     * Set the migrationType property: Migration type of the application gateway resource.
     * 
     * @param migrationType the migrationType value to set.
     * @return the ApplicationGatewayMigrationRequest object itself.
     */
    public ApplicationGatewayMigrationRequest withMigrationType(ApplicationGatewayMigrationType migrationType) {
        this.migrationType = migrationType;
        return this;
    }

    /**
     * Get the subnetId property: Subnet Id of the v2 application gateway resource.
     * 
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: Subnet Id of the v2 application gateway resource.
     * 
     * @param subnetId the subnetId value to set.
     * @return the ApplicationGatewayMigrationRequest object itself.
     */
    public ApplicationGatewayMigrationRequest withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Get the privateIp property: Private ip of the v2 application gateway resource.
     * 
     * @return the privateIp value.
     */
    public String privateIp() {
        return this.privateIp;
    }

    /**
     * Set the privateIp property: Private ip of the v2 application gateway resource.
     * 
     * @param privateIp the privateIp value to set.
     * @return the ApplicationGatewayMigrationRequest object itself.
     */
    public ApplicationGatewayMigrationRequest withPrivateIp(String privateIp) {
        this.privateIp = privateIp;
        return this;
    }

    /**
     * Get the sku property: SKU of the application gateway resource(Accepted value is Basic,applicable only in case of
     * Standard_Small and Standard_Medium with 2 or less instances), otherwise by default standard_v1 is migrated to
     * standard_v2 and waf_v1 is migrated to waf_v2.
     * 
     * @return the sku value.
     */
    public ApplicationGatewaySku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: SKU of the application gateway resource(Accepted value is Basic,applicable only in case of
     * Standard_Small and Standard_Medium with 2 or less instances), otherwise by default standard_v1 is migrated to
     * standard_v2 and waf_v1 is migrated to waf_v2.
     * 
     * @param sku the sku value to set.
     * @return the ApplicationGatewayMigrationRequest object itself.
     */
    public ApplicationGatewayMigrationRequest withSku(ApplicationGatewaySku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the wafPolicyName property: Name of the WAF policy to be attached to the v2 gateway(applicable in only case
     * of the waf_v1 to waf_v2 migration for converting the waf config associated to wafv1 gateway to a waf policy).
     * 
     * @return the wafPolicyName value.
     */
    public String wafPolicyName() {
        return this.wafPolicyName;
    }

    /**
     * Set the wafPolicyName property: Name of the WAF policy to be attached to the v2 gateway(applicable in only case
     * of the waf_v1 to waf_v2 migration for converting the waf config associated to wafv1 gateway to a waf policy).
     * 
     * @param wafPolicyName the wafPolicyName value to set.
     * @return the ApplicationGatewayMigrationRequest object itself.
     */
    public ApplicationGatewayMigrationRequest withWafPolicyName(String wafPolicyName) {
        this.wafPolicyName = wafPolicyName;
        return this;
    }

    /**
     * Get the zones property: A list of availability zones denoting where the v2 application gateway resource needs to
     * come from.
     * 
     * @return the zones value.
     */
    public List<String> zones() {
        return this.zones;
    }

    /**
     * Set the zones property: A list of availability zones denoting where the v2 application gateway resource needs to
     * come from.
     * 
     * @param zones the zones value to set.
     * @return the ApplicationGatewayMigrationRequest object itself.
     */
    public ApplicationGatewayMigrationRequest withZones(List<String> zones) {
        this.zones = zones;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() != null) {
            sku().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.IpamPoolInner;
import com.azure.resourcemanager.network.generated.models.IpamPool;
import com.azure.resourcemanager.network.generated.models.IpamPoolProperties;
import com.azure.resourcemanager.network.generated.models.IpamPoolUpdate;
import com.azure.resourcemanager.network.generated.models.IpamPoolUpdateProperties;
import com.azure.resourcemanager.network.generated.models.PoolAssociation;
import com.azure.resourcemanager.network.generated.models.PoolUsage;
import java.util.Collections;
import java.util.Map;

public final class IpamPoolImpl implements IpamPool, IpamPool.Definition, IpamPool.Update {
    private IpamPoolInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String location() {
        return this.innerModel().location();
    }

    public IpamPoolProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public IpamPoolInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkManagerName;

    private String poolName;

    private IpamPoolUpdate updateBody;

    public IpamPoolImpl withExistingNetworkManager(String resourceGroupName, String networkManagerName) {
        this.resourceGroupName = resourceGroupName;
        this.networkManagerName = networkManagerName;
        return this;
    }

    public IpamPool create() {
        this.innerObject = serviceManager.serviceClient()
            .getIpamPools()
            .create(resourceGroupName, networkManagerName, poolName, this.innerModel(), Context.NONE);
        return this;
    }

    public IpamPool create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIpamPools()
            .create(resourceGroupName, networkManagerName, poolName, this.innerModel(), context);
        return this;
    }

    IpamPoolImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new IpamPoolInner();
        this.serviceManager = serviceManager;
        this.poolName = name;
    }

    public IpamPoolImpl update() {
        this.updateBody = new IpamPoolUpdate();
        return this;
    }

    public IpamPool apply() {
        this.innerObject = serviceManager.serviceClient()
            .getIpamPools()
            .updateWithResponse(resourceGroupName, networkManagerName, poolName, updateBody, Context.NONE)
            .getValue();
        return this;
    }

    public IpamPool apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIpamPools()
            .updateWithResponse(resourceGroupName, networkManagerName, poolName, updateBody, context)
            .getValue();
        return this;
    }

    IpamPoolImpl(IpamPoolInner innerObject, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkManagerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkManagers");
        this.poolName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "ipamPools");
    }

    public IpamPool refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getIpamPools()
            .getWithResponse(resourceGroupName, networkManagerName, poolName, Context.NONE)
            .getValue();
        return this;
    }

    public IpamPool refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIpamPools()
            .getWithResponse(resourceGroupName, networkManagerName, poolName, context)
            .getValue();
        return this;
    }

    public Response<PoolUsage> getPoolUsageWithResponse(Context context) {
        return serviceManager.ipamPools()
            .getPoolUsageWithResponse(resourceGroupName, networkManagerName, poolName, context);
    }

    public PoolUsage getPoolUsage() {
        return serviceManager.ipamPools().getPoolUsage(resourceGroupName, networkManagerName, poolName);
    }

    public PagedIterable<PoolAssociation> listAssociatedResources() {
        return serviceManager.ipamPools().listAssociatedResources(resourceGroupName, networkManagerName, poolName);
    }

    public PagedIterable<PoolAssociation> listAssociatedResources(Context context) {
        return serviceManager.ipamPools()
            .listAssociatedResources(resourceGroupName, networkManagerName, poolName, context);
    }

    public IpamPoolImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public IpamPoolImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public IpamPoolImpl withProperties(IpamPoolProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public IpamPoolImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public IpamPoolImpl withProperties(IpamPoolUpdateProperties properties) {
        this.updateBody.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

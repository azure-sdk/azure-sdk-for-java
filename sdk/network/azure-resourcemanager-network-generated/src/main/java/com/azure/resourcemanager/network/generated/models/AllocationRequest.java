// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The AllocationRequest model. */
@Fluent
public final class AllocationRequest {
    /*
     * The resourceId property.
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * The numberOfIPAddressesToAllocate property.
     */
    @JsonProperty(value = "numberOfIPAddressesToAllocate")
    private String numberOfIpAddressesToAllocate;

    /** Creates an instance of AllocationRequest class. */
    public AllocationRequest() {
    }

    /**
     * Get the resourceId property: The resourceId property.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The resourceId property.
     *
     * @param resourceId the resourceId value to set.
     * @return the AllocationRequest object itself.
     */
    public AllocationRequest withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the numberOfIpAddressesToAllocate property: The numberOfIPAddressesToAllocate property.
     *
     * @return the numberOfIpAddressesToAllocate value.
     */
    public String numberOfIpAddressesToAllocate() {
        return this.numberOfIpAddressesToAllocate;
    }

    /**
     * Set the numberOfIpAddressesToAllocate property: The numberOfIPAddressesToAllocate property.
     *
     * @param numberOfIpAddressesToAllocate the numberOfIpAddressesToAllocate value to set.
     * @return the AllocationRequest object itself.
     */
    public AllocationRequest withNumberOfIpAddressesToAllocate(String numberOfIpAddressesToAllocate) {
        this.numberOfIpAddressesToAllocate = numberOfIpAddressesToAllocate;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

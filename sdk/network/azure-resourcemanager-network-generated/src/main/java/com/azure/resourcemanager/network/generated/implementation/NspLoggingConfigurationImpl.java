// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.NspLoggingConfigurationInner;
import com.azure.resourcemanager.network.generated.models.NspLoggingConfiguration;
import com.azure.resourcemanager.network.generated.models.SystemDataAutoGenerated;
import java.util.Collections;
import java.util.List;

public final class NspLoggingConfigurationImpl
    implements NspLoggingConfiguration, NspLoggingConfiguration.Definition, NspLoggingConfiguration.Update {
    private NspLoggingConfigurationInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemDataAutoGenerated systemData() {
        return this.innerModel().systemData();
    }

    public List<String> enabledLogCategories() {
        List<String> inner = this.innerModel().enabledLogCategories();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String version() {
        return this.innerModel().version();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NspLoggingConfigurationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSecurityPerimeterName;

    private String loggingConfigurationName;

    public NspLoggingConfigurationImpl withExistingNetworkSecurityPerimeter(String resourceGroupName,
        String networkSecurityPerimeterName) {
        this.resourceGroupName = resourceGroupName;
        this.networkSecurityPerimeterName = networkSecurityPerimeterName;
        return this;
    }

    public NspLoggingConfiguration create() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLoggingConfigurations()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, loggingConfigurationName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public NspLoggingConfiguration create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLoggingConfigurations()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, loggingConfigurationName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    NspLoggingConfigurationImpl(String name,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new NspLoggingConfigurationInner();
        this.serviceManager = serviceManager;
        this.loggingConfigurationName = name;
    }

    public NspLoggingConfigurationImpl update() {
        return this;
    }

    public NspLoggingConfiguration apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLoggingConfigurations()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, loggingConfigurationName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public NspLoggingConfiguration apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLoggingConfigurations()
            .createOrUpdateWithResponse(resourceGroupName, networkSecurityPerimeterName, loggingConfigurationName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    NspLoggingConfigurationImpl(NspLoggingConfigurationInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSecurityPerimeterName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkSecurityPerimeters");
        this.loggingConfigurationName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "loggingConfigurations");
    }

    public NspLoggingConfiguration refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLoggingConfigurations()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, loggingConfigurationName, Context.NONE)
            .getValue();
        return this;
    }

    public NspLoggingConfiguration refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSecurityPerimeterLoggingConfigurations()
            .getWithResponse(resourceGroupName, networkSecurityPerimeterName, loggingConfigurationName, context)
            .getValue();
        return this;
    }

    public NspLoggingConfigurationImpl withEnabledLogCategories(List<String> enabledLogCategories) {
        this.innerModel().withEnabledLogCategories(enabledLogCategories);
        return this;
    }

    public NspLoggingConfigurationImpl withVersion(String version) {
        this.innerModel().withVersion(version);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.generated;

import com.azure.core.management.SubResource;
import com.azure.resourcemanager.network.generated.models.SyncRemoteAddressSpace;
import java.util.Arrays;

/**
 * Samples for VirtualNetworkPeerings CreateOrUpdate.
 */
public final class VirtualNetworkPeeringsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkSubnetPeeringSync.json
     */
    /**
     * Sample code: Sync subnet Peering.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void syncSubnetPeering(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .withPeerCompleteVnets(false)
            .withEnableOnlyIPv6Peering(false)
            .withSyncRemoteAddressSpace(SyncRemoteAddressSpace.TRUE)
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkV6SubnetPeeringCreate.json
     */
    /**
     * Sample code: Create V6 Subnet peering.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void createV6SubnetPeering(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .withPeerCompleteVnets(false)
            .withEnableOnlyIPv6Peering(true)
            .withLocalSubnetNames(Arrays.asList("Subnet1", "Subnet4"))
            .withRemoteSubnetNames(Arrays.asList("Subnet2"))
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkPeeringSync.json
     */
    /**
     * Sample code: Sync Peering.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void syncPeering(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .withSyncRemoteAddressSpace(SyncRemoteAddressSpace.TRUE)
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkPeeringCreate.json
     */
    /**
     * Sample code: Create peering.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void createPeering(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkPeeringCreateWithRemoteVirtualNetworkEncryption.json
     */
    /**
     * Sample code: Create peering with remote virtual network encryption.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void createPeeringWithRemoteVirtualNetworkEncryption(
        com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkSubnetPeeringCreate.json
     */
    /**
     * Sample code: Create subnet peering.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void createSubnetPeering(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .withPeerCompleteVnets(false)
            .withEnableOnlyIPv6Peering(false)
            .withLocalSubnetNames(Arrays.asList("Subnet1", "Subnet4"))
            .withRemoteSubnetNames(Arrays.asList("Subnet2"))
            .create();
    }

    /*
     * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2024-01-01/examples/VirtualNetworkV6SubnetPeeringSync.json
     */
    /**
     * Sample code: Sync V6 Subnet Peering.
     * 
     * @param manager Entry point to NetworkManager.
     */
    public static void syncV6SubnetPeering(com.azure.resourcemanager.network.generated.NetworkManager manager) {
        manager.virtualNetworkPeerings()
            .define("peer")
            .withExistingVirtualNetwork("peerTest", "vnet1")
            .withAllowVirtualNetworkAccess(true)
            .withAllowForwardedTraffic(true)
            .withAllowGatewayTransit(false)
            .withUseRemoteGateways(false)
            .withRemoteVirtualNetwork(new SubResource().withId(
                "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"))
            .withPeerCompleteVnets(false)
            .withEnableOnlyIPv6Peering(true)
            .withSyncRemoteAddressSpace(SyncRemoteAddressSpace.TRUE)
            .create();
    }
}

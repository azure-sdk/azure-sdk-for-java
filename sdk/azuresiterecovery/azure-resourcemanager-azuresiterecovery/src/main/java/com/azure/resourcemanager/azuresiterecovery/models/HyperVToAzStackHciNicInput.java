// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuresiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** HyperVToAzStackHCI NIC properties. */
@Fluent
public final class HyperVToAzStackHciNicInput {
    /*
     * Gets or sets the NIC Id.
     */
    @JsonProperty(value = "nicId", required = true)
    private String nicId;

    /*
     * Gets or sets the network name.
     */
    @JsonProperty(value = "networkName", access = JsonProperty.Access.WRITE_ONLY)
    private String networkName;

    /*
     * Gets or sets the target network Id within AzStackHCI Cluster.
     */
    @JsonProperty(value = "targetNetworkId", access = JsonProperty.Access.WRITE_ONLY)
    private String targetNetworkId;

    /*
     * Gets or sets the target test network Id within AzStackHCI Cluster.
     */
    @JsonProperty(value = "testNetworkId", access = JsonProperty.Access.WRITE_ONLY)
    private String testNetworkId;

    /*
     * Gets or sets the selection type of the NIC.
     */
    @JsonProperty(value = "selectionTypeForFailover", required = true)
    private VMNicSelection selectionTypeForFailover;

    /** Creates an instance of HyperVToAzStackHciNicInput class. */
    public HyperVToAzStackHciNicInput() {
    }

    /**
     * Get the nicId property: Gets or sets the NIC Id.
     *
     * @return the nicId value.
     */
    public String nicId() {
        return this.nicId;
    }

    /**
     * Set the nicId property: Gets or sets the NIC Id.
     *
     * @param nicId the nicId value to set.
     * @return the HyperVToAzStackHciNicInput object itself.
     */
    public HyperVToAzStackHciNicInput withNicId(String nicId) {
        this.nicId = nicId;
        return this;
    }

    /**
     * Get the networkName property: Gets or sets the network name.
     *
     * @return the networkName value.
     */
    public String networkName() {
        return this.networkName;
    }

    /**
     * Get the targetNetworkId property: Gets or sets the target network Id within AzStackHCI Cluster.
     *
     * @return the targetNetworkId value.
     */
    public String targetNetworkId() {
        return this.targetNetworkId;
    }

    /**
     * Get the testNetworkId property: Gets or sets the target test network Id within AzStackHCI Cluster.
     *
     * @return the testNetworkId value.
     */
    public String testNetworkId() {
        return this.testNetworkId;
    }

    /**
     * Get the selectionTypeForFailover property: Gets or sets the selection type of the NIC.
     *
     * @return the selectionTypeForFailover value.
     */
    public VMNicSelection selectionTypeForFailover() {
        return this.selectionTypeForFailover;
    }

    /**
     * Set the selectionTypeForFailover property: Gets or sets the selection type of the NIC.
     *
     * @param selectionTypeForFailover the selectionTypeForFailover value to set.
     * @return the HyperVToAzStackHciNicInput object itself.
     */
    public HyperVToAzStackHciNicInput withSelectionTypeForFailover(VMNicSelection selectionTypeForFailover) {
        this.selectionTypeForFailover = selectionTypeForFailover;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (nicId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property nicId in model HyperVToAzStackHciNicInput"));
        }
        if (selectionTypeForFailover() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property selectionTypeForFailover in model HyperVToAzStackHciNicInput"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(HyperVToAzStackHciNicInput.class);
}

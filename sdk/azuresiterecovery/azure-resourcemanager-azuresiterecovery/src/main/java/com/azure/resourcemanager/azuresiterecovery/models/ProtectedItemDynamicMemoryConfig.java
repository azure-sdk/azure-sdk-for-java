// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuresiterecovery.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Protected item dynamic memory config. */
@Immutable
public final class ProtectedItemDynamicMemoryConfig {
    /*
     * Gets or sets maximum memory in MB.
     */
    @JsonProperty(value = "maximumMemoryInMegaBytes", access = JsonProperty.Access.WRITE_ONLY)
    private Long maximumMemoryInMegaBytes;

    /*
     * Gets or sets minimum memory in MB.
     */
    @JsonProperty(value = "minimumMemoryInMegaBytes", access = JsonProperty.Access.WRITE_ONLY)
    private Long minimumMemoryInMegaBytes;

    /*
     * Gets or sets target memory buffer in %.
     */
    @JsonProperty(value = "targetMemoryBufferPercentage", access = JsonProperty.Access.WRITE_ONLY)
    private Integer targetMemoryBufferPercentage;

    /** Creates an instance of ProtectedItemDynamicMemoryConfig class. */
    public ProtectedItemDynamicMemoryConfig() {
    }

    /**
     * Get the maximumMemoryInMegaBytes property: Gets or sets maximum memory in MB.
     *
     * @return the maximumMemoryInMegaBytes value.
     */
    public Long maximumMemoryInMegaBytes() {
        return this.maximumMemoryInMegaBytes;
    }

    /**
     * Get the minimumMemoryInMegaBytes property: Gets or sets minimum memory in MB.
     *
     * @return the minimumMemoryInMegaBytes value.
     */
    public Long minimumMemoryInMegaBytes() {
        return this.minimumMemoryInMegaBytes;
    }

    /**
     * Get the targetMemoryBufferPercentage property: Gets or sets target memory buffer in %.
     *
     * @return the targetMemoryBufferPercentage value.
     */
    public Integer targetMemoryBufferPercentage() {
        return this.targetMemoryBufferPercentage;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuresiterecovery.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.azuresiterecovery.fluent.models.PolicyModelInner;
import com.azure.resourcemanager.azuresiterecovery.models.PolicyModel;
import com.azure.resourcemanager.azuresiterecovery.models.PolicyModelProperties;
import com.azure.resourcemanager.azuresiterecovery.models.PolicyModelSystemData;
import java.util.Collections;
import java.util.Map;

public final class PolicyModelImpl implements PolicyModel, PolicyModel.Definition {
    private PolicyModelInner innerObject;

    private final com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager serviceManager;

    PolicyModelImpl(
        PolicyModelInner innerObject,
        com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public PolicyModelProperties properties() {
        return this.innerModel().properties();
    }

    public PolicyModelSystemData systemData() {
        return this.innerModel().systemData();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public PolicyModelInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager manager() {
        return this.serviceManager;
    }

    private String subscriptionId;

    private String resourceGroupName;

    private String vaultName;

    private String policyName;

    public PolicyModelImpl withExistingReplicationVault(
        String subscriptionId, String resourceGroupName, String vaultName) {
        this.subscriptionId = subscriptionId;
        this.resourceGroupName = resourceGroupName;
        this.vaultName = vaultName;
        return this;
    }

    public PolicyModel create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .create(subscriptionId, resourceGroupName, vaultName, policyName, this.innerModel(), Context.NONE);
        return this;
    }

    public PolicyModel create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .create(subscriptionId, resourceGroupName, vaultName, policyName, this.innerModel(), context);
        return this;
    }

    PolicyModelImpl(String name, com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager serviceManager) {
        this.innerObject = new PolicyModelInner();
        this.serviceManager = serviceManager;
        this.policyName = name;
    }

    public PolicyModel refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .getWithResponse(subscriptionId, resourceGroupName, vaultName, policyName, Context.NONE)
                .getValue();
        return this;
    }

    public PolicyModel refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicies()
                .getWithResponse(subscriptionId, resourceGroupName, vaultName, policyName, context)
                .getValue();
        return this;
    }

    public PolicyModelImpl withProperties(PolicyModelProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public PolicyModelImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }
}

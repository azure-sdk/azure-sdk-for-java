// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuresiterecovery.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of RecoveryPoints. */
public interface RecoveryPoints {
    /**
     * Gets the recovery point.
     *
     * <p>Gets the details of the recovery point of a protected item.
     *
     * @param subscriptionId The subscription Id.
     * @param resourceGroupName Resource group name.
     * @param vaultName Vault name.
     * @param protectedItemName Protected item name.
     * @param recoveryPointName Recovery point name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the recovery point of a protected item along with {@link Response}.
     */
    Response<RecoveryPointModel> getWithResponse(
        String subscriptionId,
        String resourceGroupName,
        String vaultName,
        String protectedItemName,
        String recoveryPointName,
        Context context);

    /**
     * Gets the recovery point.
     *
     * <p>Gets the details of the recovery point of a protected item.
     *
     * @param subscriptionId The subscription Id.
     * @param resourceGroupName Resource group name.
     * @param vaultName Vault name.
     * @param protectedItemName Protected item name.
     * @param recoveryPointName Recovery point name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the recovery point of a protected item.
     */
    RecoveryPointModel get(
        String subscriptionId,
        String resourceGroupName,
        String vaultName,
        String protectedItemName,
        String recoveryPointName);

    /**
     * Lists the recovery points.
     *
     * <p>Gets the list of recovery points of the given protected item.
     *
     * @param subscriptionId The subscription Id.
     * @param resourceGroupName Resource group name.
     * @param vaultName Vault name.
     * @param protectedItemName Protected item name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of recovery points of the given protected item as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RecoveryPointModel> list(
        String subscriptionId, String resourceGroupName, String vaultName, String protectedItemName);

    /**
     * Lists the recovery points.
     *
     * <p>Gets the list of recovery points of the given protected item.
     *
     * @param subscriptionId The subscription Id.
     * @param resourceGroupName Resource group name.
     * @param vaultName Vault name.
     * @param protectedItemName Protected item name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of recovery points of the given protected item as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RecoveryPointModel> list(
        String subscriptionId, String resourceGroupName, String vaultName, String protectedItemName, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuresiterecovery.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azuresiterecovery.fluent.WorkflowsClient;
import com.azure.resourcemanager.azuresiterecovery.fluent.models.WorkflowModelInner;
import com.azure.resourcemanager.azuresiterecovery.models.WorkflowModel;
import com.azure.resourcemanager.azuresiterecovery.models.Workflows;

public final class WorkflowsImpl implements Workflows {
    private static final ClientLogger LOGGER = new ClientLogger(WorkflowsImpl.class);

    private final WorkflowsClient innerClient;

    private final com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager serviceManager;

    public WorkflowsImpl(
        WorkflowsClient innerClient,
        com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<WorkflowModel> getWithResponse(
        String subscriptionId, String resourceGroupName, String vaultName, String workflowName, Context context) {
        Response<WorkflowModelInner> inner =
            this.serviceClient().getWithResponse(subscriptionId, resourceGroupName, vaultName, workflowName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new WorkflowModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public WorkflowModel get(String subscriptionId, String resourceGroupName, String vaultName, String workflowName) {
        WorkflowModelInner inner = this.serviceClient().get(subscriptionId, resourceGroupName, vaultName, workflowName);
        if (inner != null) {
            return new WorkflowModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<WorkflowModel> list(String subscriptionId, String resourceGroupName, String vaultName) {
        PagedIterable<WorkflowModelInner> inner =
            this.serviceClient().list(subscriptionId, resourceGroupName, vaultName);
        return Utils.mapPage(inner, inner1 -> new WorkflowModelImpl(inner1, this.manager()));
    }

    public PagedIterable<WorkflowModel> list(
        String subscriptionId,
        String resourceGroupName,
        String vaultName,
        String filter,
        String continuationToken,
        Context context) {
        PagedIterable<WorkflowModelInner> inner =
            this.serviceClient().list(subscriptionId, resourceGroupName, vaultName, filter, continuationToken, context);
        return Utils.mapPage(inner, inner1 -> new WorkflowModelImpl(inner1, this.manager()));
    }

    private WorkflowsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.azuresiterecovery.AzureSiteRecoveryManager manager() {
        return this.serviceManager;
    }
}

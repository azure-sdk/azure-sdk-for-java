// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbmongoclusters.generated;

import com.azure.resourcemanager.cosmosdbmongoclusters.models.MongoCluster;
import com.azure.resourcemanager.cosmosdbmongoclusters.models.NodeGroupSpec;
import com.azure.resourcemanager.cosmosdbmongoclusters.models.NodeKind;
import com.azure.resourcemanager.cosmosdbmongoclusters.models.PublicNetworkAccess;
import java.util.Arrays;

/**
 * Samples for MongoClusters Update.
 */
public final class MongoClustersUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/cosmosdbmongoclusters/resource-manager/Microsoft.DocumentDB/preview/2024-03-01-preview/examples/
     * CosmosDBMongoClusterPatchDiskSize.json
     */
    /**
     * Sample code: Updates the disk size on a Mongo Cluster resource.
     * 
     * @param manager Entry point to CosmosDBMongoClusterManager.
     */
    public static void updatesTheDiskSizeOnAMongoClusterResource(
        com.azure.resourcemanager.cosmosdbmongoclusters.CosmosDBMongoClusterManager manager) {
        MongoCluster resource = manager.mongoClusters()
            .getByResourceGroupWithResponse("TestResourceGroup", "myMongoCluster", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withNodeGroupSpecs(Arrays.asList(new NodeGroupSpec().withDiskSizeGB(256L).withKind(NodeKind.SHARD)))
            .apply();
    }

    /*
     * x-ms-original-file:
     * specification/cosmosdbmongoclusters/resource-manager/Microsoft.DocumentDB/preview/2024-03-01-preview/examples/
     * CosmosDBMongoClusterPatchPrivateNetworkAccess.json
     */
    /**
     * Sample code: Disables public network access on a Mongo Cluster resource with a private endpoint connection.
     * 
     * @param manager Entry point to CosmosDBMongoClusterManager.
     */
    public static void disablesPublicNetworkAccessOnAMongoClusterResourceWithAPrivateEndpointConnection(
        com.azure.resourcemanager.cosmosdbmongoclusters.CosmosDBMongoClusterManager manager) {
        MongoCluster resource = manager.mongoClusters()
            .getByResourceGroupWithResponse("TestResourceGroup", "myMongoCluster", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update().withPublicNetworkAccess(PublicNetworkAccess.DISABLED).apply();
    }

    /*
     * x-ms-original-file:
     * specification/cosmosdbmongoclusters/resource-manager/Microsoft.DocumentDB/preview/2024-03-01-preview/examples/
     * CosmosDBMongoClusterUpdate.json
     */
    /**
     * Sample code: Updates a Mongo Cluster resource.
     * 
     * @param manager Entry point to CosmosDBMongoClusterManager.
     */
    public static void updatesAMongoClusterResource(
        com.azure.resourcemanager.cosmosdbmongoclusters.CosmosDBMongoClusterManager manager) {
        MongoCluster resource = manager.mongoClusters()
            .getByResourceGroupWithResponse("TestResourceGroup", "myMongoCluster", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update().withAdministratorLogin("mongoAdmin").withAdministratorLoginPassword("password")
            .withServerVersion("5.0").withPublicNetworkAccess(PublicNetworkAccess.ENABLED)
            .withNodeGroupSpecs(Arrays.asList(new NodeGroupSpec().withSku("M50").withDiskSizeGB(256L).withEnableHa(true)
                .withKind(NodeKind.SHARD).withNodeCount(1)))
            .apply();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recoveryservices.fluent.models.DeletedVaultInner;
import com.azure.resourcemanager.recoveryservices.fluent.models.OperationResourceInner;
import com.azure.resourcemanager.recoveryservices.models.DeletedVaultUndeleteInput;

/**
 * An instance of this class provides access to all the operations defined in DeletedVaultsClient.
 */
public interface DeletedVaultsClient {
    /**
     * List of all DeletedVaults in the subscription.
     * 
     * @param location The name of the Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for a list of DeletedVaults as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeletedVaultInner> listBySubscriptionId(String location);

    /**
     * List of all DeletedVaults in the subscription.
     * 
     * @param location The name of the Azure region.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response model for a list of DeletedVaults as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeletedVaultInner> listBySubscriptionId(String location, Context context);

    /**
     * Get the DeletedVault details.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the DeletedVault details along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeletedVaultInner> getWithResponse(String location, String deletedVaultName, Context context);

    /**
     * Get the DeletedVault details.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the DeletedVault details.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeletedVaultInner get(String location, String deletedVaultName);

    /**
     * Undelete the DeletedVault.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param undeleteInput Undelete input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of deletedVault information as returned by the resource provider.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeletedVaultInner>, DeletedVaultInner> beginUndelete(String location, String deletedVaultName,
        DeletedVaultUndeleteInput undeleteInput);

    /**
     * Undelete the DeletedVault.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param undeleteInput Undelete input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of deletedVault information as returned by the resource provider.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeletedVaultInner>, DeletedVaultInner> beginUndelete(String location, String deletedVaultName,
        DeletedVaultUndeleteInput undeleteInput, Context context);

    /**
     * Undelete the DeletedVault.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param undeleteInput Undelete input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deletedVault information as returned by the resource provider.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeletedVaultInner undelete(String location, String deletedVaultName, DeletedVaultUndeleteInput undeleteInput);

    /**
     * Undelete the DeletedVault.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param undeleteInput Undelete input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deletedVault information as returned by the resource provider.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeletedVaultInner undelete(String location, String deletedVaultName, DeletedVaultUndeleteInput undeleteInput,
        Context context);

    /**
     * Gets the operation status for a DeletedVault.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param operationId The ID of an ongoing async operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the operation status for a DeletedVault along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OperationResourceInner> getOperationStatusWithResponse(String location, String deletedVaultName,
        String operationId, Context context);

    /**
     * Gets the operation status for a DeletedVault.
     * 
     * @param location The name of the Azure region.
     * @param deletedVaultName The name of the deleted recovery services vault.
     * @param operationId The ID of an ongoing async operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the operation status for a DeletedVault.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationResourceInner getOperationStatus(String location, String deletedVaultName, String operationId);
}

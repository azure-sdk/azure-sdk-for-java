// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.toolchainorchestrator.fluent.models.SolutionVersionInner;
import com.azure.resourcemanager.toolchainorchestrator.models.SolutionVersionTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in SolutionVersionsClient.
 */
public interface SolutionVersionsClient {
    /**
     * Returns details of specified SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionVersion resource belonging to a Solution resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SolutionVersionInner> getWithResponse(String resourceGroupName, String solutionName, String versionName,
        Context context);

    /**
     * Returns details of specified SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SolutionVersionInner get(String resourceGroupName, String solutionName, String versionName);

    /**
     * Creates new or updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SolutionVersionInner>, SolutionVersionInner> beginCreateOrUpdate(String resourceGroupName,
        String solutionName, String versionName, SolutionVersionInner resource);

    /**
     * Creates new or updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SolutionVersionInner>, SolutionVersionInner> beginCreateOrUpdate(String resourceGroupName,
        String solutionName, String versionName, SolutionVersionInner resource, Context context);

    /**
     * Creates new or updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SolutionVersionInner createOrUpdate(String resourceGroupName, String solutionName, String versionName,
        SolutionVersionInner resource);

    /**
     * Creates new or updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SolutionVersionInner createOrUpdate(String resourceGroupName, String solutionName, String versionName,
        SolutionVersionInner resource, Context context);

    /**
     * Updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SolutionVersionInner>, SolutionVersionInner> beginUpdate(String resourceGroupName,
        String solutionName, String versionName, SolutionVersionTagsUpdate properties);

    /**
     * Updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SolutionVersionInner>, SolutionVersionInner> beginUpdate(String resourceGroupName,
        String solutionName, String versionName, SolutionVersionTagsUpdate properties, Context context);

    /**
     * Updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SolutionVersionInner update(String resourceGroupName, String solutionName, String versionName,
        SolutionVersionTagsUpdate properties);

    /**
     * Updates existing SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SolutionVersion resource belonging to a Solution resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SolutionVersionInner update(String resourceGroupName, String solutionName, String versionName,
        SolutionVersionTagsUpdate properties, Context context);

    /**
     * Deletes specified SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String solutionName, String versionName);

    /**
     * Deletes specified SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String solutionName, String versionName,
        Context context);

    /**
     * Deletes specified SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String solutionName, String versionName);

    /**
     * Deletes specified SolutionVersion resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param versionName Name of SolutionVersion resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String solutionName, String versionName, Context context);

    /**
     * Returns a collection of SolutionVersion resources belonging to a Solution resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SolutionVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SolutionVersionInner> listBySolution(String resourceGroupName, String solutionName);

    /**
     * Returns a collection of SolutionVersion resources belonging to a Solution resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param solutionName Name of solution.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SolutionVersion list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SolutionVersionInner> listBySolution(String resourceGroupName, String solutionName, Context context);
}

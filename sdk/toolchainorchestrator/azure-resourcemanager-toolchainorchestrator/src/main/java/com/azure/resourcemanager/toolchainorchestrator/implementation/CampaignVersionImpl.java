// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.toolchainorchestrator.fluent.models.CampaignVersionInner;
import com.azure.resourcemanager.toolchainorchestrator.models.CampaignVersion;
import com.azure.resourcemanager.toolchainorchestrator.models.CampaignVersionProperties;
import com.azure.resourcemanager.toolchainorchestrator.models.CampaignVersionTagsUpdate;
import com.azure.resourcemanager.toolchainorchestrator.models.ExtendedLocation;
import java.util.Collections;
import java.util.Map;

public final class CampaignVersionImpl implements CampaignVersion, CampaignVersion.Definition, CampaignVersion.Update {
    private CampaignVersionInner innerObject;

    private final com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public CampaignVersionProperties properties() {
        return this.innerModel().properties();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CampaignVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String campaignName;

    private String versionName;

    private CampaignVersionTagsUpdate updateProperties;

    public CampaignVersionImpl withExistingCampaign(String resourceGroupName, String campaignName) {
        this.resourceGroupName = resourceGroupName;
        this.campaignName = campaignName;
        return this;
    }

    public CampaignVersion create() {
        this.innerObject = serviceManager.serviceClient()
            .getCampaignVersions()
            .createOrUpdate(resourceGroupName, campaignName, versionName, this.innerModel(), Context.NONE);
        return this;
    }

    public CampaignVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCampaignVersions()
            .createOrUpdate(resourceGroupName, campaignName, versionName, this.innerModel(), context);
        return this;
    }

    CampaignVersionImpl(String name,
        com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager serviceManager) {
        this.innerObject = new CampaignVersionInner();
        this.serviceManager = serviceManager;
        this.versionName = name;
    }

    public CampaignVersionImpl update() {
        this.updateProperties = new CampaignVersionTagsUpdate();
        return this;
    }

    public CampaignVersion apply() {
        this.innerObject = serviceManager.serviceClient()
            .getCampaignVersions()
            .update(resourceGroupName, campaignName, versionName, updateProperties, Context.NONE);
        return this;
    }

    public CampaignVersion apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCampaignVersions()
            .update(resourceGroupName, campaignName, versionName, updateProperties, context);
        return this;
    }

    CampaignVersionImpl(CampaignVersionInner innerObject,
        com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.campaignName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "campaigns");
        this.versionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public CampaignVersion refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getCampaignVersions()
            .getWithResponse(resourceGroupName, campaignName, versionName, Context.NONE)
            .getValue();
        return this;
    }

    public CampaignVersion refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCampaignVersions()
            .getWithResponse(resourceGroupName, campaignName, versionName, context)
            .getValue();
        return this;
    }

    public CampaignVersionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CampaignVersionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CampaignVersionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public CampaignVersionImpl withProperties(CampaignVersionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public CampaignVersionImpl withExtendedLocation(ExtendedLocation extendedLocation) {
        this.innerModel().withExtendedLocation(extendedLocation);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

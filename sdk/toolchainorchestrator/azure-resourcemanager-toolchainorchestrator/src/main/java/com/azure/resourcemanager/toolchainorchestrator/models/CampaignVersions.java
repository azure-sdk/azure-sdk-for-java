// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of CampaignVersions.
 */
public interface CampaignVersions {
    /**
     * Returns the details of the campaignVersion.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param campaignName The name of the campaign.
     * @param versionName The name of the campaignVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the campaignVersion entity along with {@link Response}.
     */
    Response<CampaignVersion> getWithResponse(String resourceGroupName, String campaignName, String versionName,
        Context context);

    /**
     * Returns the details of the campaignVersion.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param campaignName The name of the campaign.
     * @param versionName The name of the campaignVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the campaignVersion entity.
     */
    CampaignVersion get(String resourceGroupName, String campaignName, String versionName);

    /**
     * Deletes a specified campaignVersion.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param campaignName The name of the campaign.
     * @param versionName The name of the campaignVersion.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String campaignName, String versionName);

    /**
     * Deletes a specified campaignVersion.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param campaignName The name of the campaign.
     * @param versionName The name of the campaignVersion.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String campaignName, String versionName, Context context);

    /**
     * Lists CampaignVersions within a Campaign.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param campaignName The name of the campaign.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CampaignVersion list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CampaignVersion> listByCampaign(String resourceGroupName, String campaignName);

    /**
     * Lists CampaignVersions within a Campaign.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param campaignName The name of the campaign.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a CampaignVersion list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<CampaignVersion> listByCampaign(String resourceGroupName, String campaignName, Context context);

    /**
     * Returns the details of the campaignVersion.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the campaignVersion entity along with {@link Response}.
     */
    CampaignVersion getById(String id);

    /**
     * Returns the details of the campaignVersion.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the campaignVersion entity along with {@link Response}.
     */
    Response<CampaignVersion> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a specified campaignVersion.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a specified campaignVersion.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new CampaignVersion resource.
     * 
     * @param name resource name.
     * @return the first stage of the new CampaignVersion definition.
     */
    CampaignVersion.DefinitionStages.Blank define(String name);
}

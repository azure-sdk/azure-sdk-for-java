// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.toolchainorchestrator.fluent.models.CatalogInner;
import com.azure.resourcemanager.toolchainorchestrator.models.CatalogTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in CatalogsClient.
 */
public interface CatalogsClient {
    /**
     * Returns details of the Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Catalog entity along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CatalogInner> getByResourceGroupWithResponse(String resourceGroupName, String catalogName,
        Context context);

    /**
     * Returns details of the Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CatalogInner getByResourceGroup(String resourceGroupName, String catalogName);

    /**
     * Creates new or updates the Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CatalogInner>, CatalogInner> beginCreateOrUpdate(String resourceGroupName, String catalogName,
        CatalogInner resource);

    /**
     * Creates new or updates the Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CatalogInner>, CatalogInner> beginCreateOrUpdate(String resourceGroupName, String catalogName,
        CatalogInner resource, Context context);

    /**
     * Creates new or updates the Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CatalogInner createOrUpdate(String resourceGroupName, String catalogName, CatalogInner resource);

    /**
     * Creates new or updates the Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CatalogInner createOrUpdate(String resourceGroupName, String catalogName, CatalogInner resource, Context context);

    /**
     * Updates the existing Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CatalogInner>, CatalogInner> beginUpdate(String resourceGroupName, String catalogName,
        CatalogTagsUpdate properties);

    /**
     * Updates the existing Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<CatalogInner>, CatalogInner> beginUpdate(String resourceGroupName, String catalogName,
        CatalogTagsUpdate properties, Context context);

    /**
     * Updates the existing Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CatalogInner update(String resourceGroupName, String catalogName, CatalogTagsUpdate properties);

    /**
     * Updates the existing Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the Catalog entity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CatalogInner update(String resourceGroupName, String catalogName, CatalogTagsUpdate properties, Context context);

    /**
     * Deletes specified Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String catalogName);

    /**
     * Deletes specified Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String catalogName, Context context);

    /**
     * Deletes specified Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String catalogName);

    /**
     * Deletes specified Catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param catalogName The name of Azure API Center service.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String catalogName, Context context);

    /**
     * Returns a collection of Catalogs within the resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Catalog list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CatalogInner> listByResourceGroup(String resourceGroupName);

    /**
     * Returns a collection of Catalogs within the resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Catalog list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CatalogInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists Catalogs within an Azure subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Catalog list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CatalogInner> list();

    /**
     * Lists Catalogs within an Azure subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Catalog list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<CatalogInner> list(Context context);
}

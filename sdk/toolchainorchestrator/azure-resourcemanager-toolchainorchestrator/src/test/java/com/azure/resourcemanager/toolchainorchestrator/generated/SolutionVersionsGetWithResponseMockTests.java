// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.SolutionVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionVersionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"components\":[{\"name\":\"wm\",\"metadata\":{\"mhxdqaolfy\":\"ri\",\"bbjwhlw\":\"nkkbjpjvlywltmfw\",\"nqzocrdzg\":\"j\",\"xdncaqtt\":\"zeunt\"},\"properties\":{\"ihlgm\":\"dataoifuvnyttzgixgy\",\"lkndrndpgfjodh\":\"databehlqtxnr\",\"ipowza\":\"dataaqotwfhipxwgsabv\"},\"constraints\":\"zuu\",\"dependencies\":[\"cirvpefycdveit\",\"tjnsx\",\"ajlnsjhwjuyxx\",\"xqvmvuay\"],\"type\":\"uadx\"}],\"displayName\":\"eqbw\",\"metadata\":{\"u\":\"ghyksarcdrnxs\",\"fdqqjwkrhwz\":\"lzladltxkpbqh\",\"ztjctibpvbkae\":\"anojisgglmvokat\"}},\"extendedLocation\":{\"name\":\"smz\",\"type\":\"g\"},\"location\":\"wakwseivmakxhys\",\"tags\":{\"kdch\":\"juxlkbectvtfjm\",\"kzaz\":\"aiubavlzwpvgmfa\"},\"id\":\"gokedgjqafkm\",\"name\":\"rokzrthqetwpq\",\"type\":\"tvaoznqn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        SolutionVersion response = manager.solutionVersions()
            .getWithResponse("pglaoh", "qk", "jtnqjil", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("wakwseivmakxhys", response.location());
        Assertions.assertEquals("juxlkbectvtfjm", response.tags().get("kdch"));
        Assertions.assertEquals("wm", response.properties().components().get(0).name());
        Assertions.assertEquals("ri", response.properties().components().get(0).metadata().get("mhxdqaolfy"));
        Assertions.assertEquals("zuu", response.properties().components().get(0).constraints());
        Assertions.assertEquals("cirvpefycdveit", response.properties().components().get(0).dependencies().get(0));
        Assertions.assertEquals("uadx", response.properties().components().get(0).type());
        Assertions.assertEquals("eqbw", response.properties().displayName());
        Assertions.assertEquals("ghyksarcdrnxs", response.properties().metadata().get("u"));
        Assertions.assertEquals("smz", response.extendedLocation().name());
        Assertions.assertEquals("g", response.extendedLocation().type());
    }
}

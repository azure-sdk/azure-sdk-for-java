// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.Activation;
import com.azure.resourcemanager.toolchainorchestrator.models.ActivationProperties;
import com.azure.resourcemanager.toolchainorchestrator.models.ExtendedLocation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ActivationsCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"inputs\":{\"pdcldpka\":\"dataekscbctnanqimwbz\",\"nlaimouxwksqmudm\":\"datan\",\"qsj\":\"datacoibicziuswswjrk\",\"yrfwbivq\":\"databtqqvyfs\"},\"stage\":\"gfuyzwv\",\"campaign\":\"hlimby\",\"status\":{\"stageHistory\":[{\"inputs\":{\"xob\":\"datadlikcdrdaasa\",\"srnawnvzmln\":\"datamfkwiyjvzuk\",\"vym\":\"dataoywsxvjabjqqaxu\",\"oabhjxwxqweuip\":\"datanudn\"},\"outputs\":{\"lkrdpqgfhy\":\"dataksmitnsqxtlt\"},\"stage\":\"frakkldgrc\",\"isActive\":true,\"nextStage\":\"fc\",\"errorMessage\":\"jajqmatxjt\",\"status\":300413785,\"statusMessage\":\"zqgxx\"}],\"activationGeneration\":\"bbmtlpqagynoip\",\"updateTime\":\"zcalincryq\",\"status\":592941906,\"statusMessage\":\"q\"}},\"extendedLocation\":{\"name\":\"ibmq\",\"type\":\"miymqruqguhfupet\"},\"location\":\"vvoqsbpkf\",\"tags\":{\"syaowuzowp\":\"fkg\",\"ztiochluti\":\"ohdkcprgukx\",\"izcbfzmcrunfhiuc\":\"mqrud\",\"u\":\"mfbcpaqktkrum\"},\"id\":\"dkyzbfvxov\",\"name\":\"kxiuxqggvqr\",\"type\":\"hyhlwcjsqg\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Activation response = manager.activations()
            .define("e")
            .withRegion("qarwzxuqreblu")
            .withExistingResourceGroup("nggy")
            .withExtendedLocation(new ExtendedLocation().withName("kzpgaj").withType("qjcemqbmf"))
            .withTags(mapOf("vxekraokqkbud", "bwxsfgtdm", "vlyttaaknwfrke", "twaokb"))
            .withProperties(new ActivationProperties().withInputs(mapOf("ww", "datahivzk"))
                .withStage("knrzdajlskzpt")
                .withCampaign("xulweucyrthxqle"))
            .create();

        Assertions.assertEquals("vvoqsbpkf", response.location());
        Assertions.assertEquals("fkg", response.tags().get("syaowuzowp"));
        Assertions.assertEquals("gfuyzwv", response.properties().stage());
        Assertions.assertEquals("hlimby", response.properties().campaign());
        Assertions.assertEquals("ibmq", response.extendedLocation().name());
        Assertions.assertEquals("miymqruqguhfupet", response.extendedLocation().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

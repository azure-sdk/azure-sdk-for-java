// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.Catalog;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CatalogsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\"},\"extendedLocation\":{\"name\":\"wmjswenaww\",\"type\":\"me\"},\"location\":\"eq\",\"tags\":{\"yoeojhtollhs\":\"lndh\",\"lxpnovyoanf\":\"idmytzln\",\"ywv\":\"cswqa\"},\"id\":\"xigvjrktpgaeuk\",\"name\":\"awohpmw\",\"type\":\"qnucs\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Catalog response = manager.catalogs()
            .getByResourceGroupWithResponse("jhffbxrqrkij", "euqlsdxeqztv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eq", response.location());
        Assertions.assertEquals("lndh", response.tags().get("yoeojhtollhs"));
        Assertions.assertEquals("wmjswenaww", response.extendedLocation().name());
        Assertions.assertEquals("me", response.extendedLocation().type());
    }
}

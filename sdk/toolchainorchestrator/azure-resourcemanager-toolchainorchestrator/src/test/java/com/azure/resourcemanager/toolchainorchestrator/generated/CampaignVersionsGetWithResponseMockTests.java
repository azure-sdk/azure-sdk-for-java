// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.CampaignVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CampaignVersionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"firstStage\":\"qxjoshohtotryeg\",\"selfDriving\":false,\"stages\":{\"d\":{\"contexts\":\"exznlwkbfokxkhup\",\"config\":{\"yfcemftz\":\"dataufgjblcdr\",\"ekdfqnhttwd\":\"datayykyalu\",\"mhmnulwemp\":\"datawrczfjjnnuxxrk\",\"usnaw\":\"datacifrhjulrsulwzpf\"},\"inputs\":{\"xxyxhighctxbxm\":\"datagzotfriyrgkoekvz\"},\"name\":\"pcqydeykvsk\",\"provider\":\"zdfrjeizikgq\",\"stageSelector\":\"oohxbmsgycqs\",\"schedule\":\"2021-07-30T06:05:47Z\"},\"raabmdlqjb\":{\"contexts\":\"wuyqaeo\",\"config\":{\"oxae\":\"datahgejkbvhhdaurgh\"},\"inputs\":{\"obektmbozo\":\"datahxjxjoezlqxrkdkn\"},\"name\":\"zamicb\",\"provider\":\"wcdgzsez\",\"stageSelector\":\"xke\",\"schedule\":\"2021-10-25T10:03:54Z\"},\"jzlquz\":{\"contexts\":\"pfixlhupmo\",\"config\":{\"dnpxpkcdpr\":\"dataz\",\"fss\":\"datayxelyicghflr\",\"rkbhammgmqfm\":\"datayghsf\"},\"inputs\":{\"ysla\":\"datavqcpdwjgquxw\",\"cgawnrrnquo\":\"datadkdcdjhunhg\"},\"name\":\"otire\",\"provider\":\"seob\",\"stageSelector\":\"xstcyilbvzm\",\"schedule\":\"2020-12-24T16:35:27Z\"}}},\"extendedLocation\":{\"name\":\"okjxebjvb\",\"type\":\"inzabwmvoglj\"},\"location\":\"lpgidn\",\"tags\":{\"pepiaeapfs\":\"haqidoyzltgiomqo\",\"pqqncju\":\"rgdtpeqnacyheqw\",\"ymc\":\"khjoz\",\"upyvqyvliq\":\"m\"},\"id\":\"ipsejbsvsia\",\"name\":\"eswhd\",\"type\":\"zydisnuep\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        CampaignVersion response = manager.campaignVersions()
            .getWithResponse("lrlohewjjmajnkdf", "q", "onswae", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("lpgidn", response.location());
        Assertions.assertEquals("haqidoyzltgiomqo", response.tags().get("pepiaeapfs"));
        Assertions.assertEquals("qxjoshohtotryeg", response.properties().firstStage());
        Assertions.assertEquals(false, response.properties().selfDriving());
        Assertions.assertEquals("exznlwkbfokxkhup", response.properties().stages().get("d").contexts());
        Assertions.assertEquals("pcqydeykvsk", response.properties().stages().get("d").name());
        Assertions.assertEquals("zdfrjeizikgq", response.properties().stages().get("d").provider());
        Assertions.assertEquals("oohxbmsgycqs", response.properties().stages().get("d").stageSelector());
        Assertions.assertEquals(OffsetDateTime.parse("2021-07-30T06:05:47Z"),
            response.properties().stages().get("d").schedule());
        Assertions.assertEquals("okjxebjvb", response.extendedLocation().name());
        Assertions.assertEquals("inzabwmvoglj", response.extendedLocation().type());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.toolchainorchestrator.fluent.models.ActivationInner;
import com.azure.resourcemanager.toolchainorchestrator.models.ActivationProperties;
import com.azure.resourcemanager.toolchainorchestrator.models.ExtendedLocation;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ActivationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ActivationInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Failed\",\"inputs\":{\"gnyhmossxkkg\":\"dataxkr\",\"rghxjb\":\"datah\",\"rnsvbuswd\":\"datahqxvcxgfrpdsofbs\",\"ybycnunvj\":\"dataz\"},\"stage\":\"tkfa\",\"campaign\":\"nopqgikyzirtx\",\"status\":{\"stageHistory\":[{\"inputs\":{\"rydxtqm\":\"datajntpsewgioilqu\"},\"outputs\":{\"f\":\"dataxorgg\"},\"stage\":\"yaomtb\",\"isActive\":false,\"nextStage\":\"vgrvkffo\",\"errorMessage\":\"zh\",\"status\":557877366,\"statusMessage\":\"bgj\"}],\"activationGeneration\":\"xumvfcluyovw\",\"updateTime\":\"bkfezzxscyhwzdgi\",\"status\":1345497000,\"statusMessage\":\"zbomvzzbtdcqvpni\"}},\"extendedLocation\":{\"name\":\"ujviylwdshfs\",\"type\":\"n\"},\"location\":\"gy\",\"tags\":{\"tmr\":\"ymsgaojfmwnc\",\"yczuhxacpq\":\"hirctymoxoftpipi\",\"wdgzxulucv\":\"lihhyuspskasdvlm\"},\"id\":\"amrsreuzv\",\"name\":\"urisjnhnytxifqj\",\"type\":\"gxmrhublwp\"}")
            .toObject(ActivationInner.class);
        Assertions.assertEquals("gy", model.location());
        Assertions.assertEquals("ymsgaojfmwnc", model.tags().get("tmr"));
        Assertions.assertEquals("tkfa", model.properties().stage());
        Assertions.assertEquals("nopqgikyzirtx", model.properties().campaign());
        Assertions.assertEquals("ujviylwdshfs", model.extendedLocation().name());
        Assertions.assertEquals("n", model.extendedLocation().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ActivationInner model = new ActivationInner().withLocation("gy")
            .withTags(mapOf("tmr", "ymsgaojfmwnc", "yczuhxacpq", "hirctymoxoftpipi", "wdgzxulucv", "lihhyuspskasdvlm"))
            .withProperties(new ActivationProperties()
                .withInputs(mapOf("gnyhmossxkkg", "dataxkr", "rghxjb", "datah", "rnsvbuswd", "datahqxvcxgfrpdsofbs",
                    "ybycnunvj", "dataz"))
                .withStage("tkfa")
                .withCampaign("nopqgikyzirtx"))
            .withExtendedLocation(new ExtendedLocation().withName("ujviylwdshfs").withType("n"));
        model = BinaryData.fromObject(model).toObject(ActivationInner.class);
        Assertions.assertEquals("gy", model.location());
        Assertions.assertEquals("ymsgaojfmwnc", model.tags().get("tmr"));
        Assertions.assertEquals("tkfa", model.properties().stage());
        Assertions.assertEquals("nopqgikyzirtx", model.properties().campaign());
        Assertions.assertEquals("ujviylwdshfs", model.extendedLocation().name());
        Assertions.assertEquals("n", model.extendedLocation().type());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

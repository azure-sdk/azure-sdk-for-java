// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.SolutionVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SolutionVersionsListBySolutionMockTests {
    @Test
    public void testListBySolution() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"components\":[{\"name\":\"zmblsyjdeol\",\"metadata\":{\"ledjcustbvtqigd\":\"ebfsy\",\"xezppk\":\"zvsgeafgfosehxlz\",\"zeqtoyrplixlajml\":\"waaeskyfjl\"},\"properties\":{\"gwb\":\"datauevhamfo\",\"qovchiqbp\":\"datamkekxpkzwaqxo\"},\"constraints\":\"fidusztekxbyjgm\",\"dependencies\":[\"pxyihpqadagr\"],\"type\":\"rdi\"}],\"displayName\":\"dw\",\"metadata\":{\"ukdveksbuhoduc\":\"owxwyovcxjsgbip\",\"scrdp\":\"v\",\"yszekbhwlka\":\"bfdyjduss\",\"n\":\"ggkrehbf\"}},\"extendedLocation\":{\"name\":\"bffljfiimreoag\",\"type\":\"qtaadusrexxfavsq\"},\"location\":\"d\",\"tags\":{\"fmnlikpsims\":\"i\",\"hyqgsdrmmttjx\":\"eypofqpm\",\"wzm\":\"phgerhsmvgoh\"},\"id\":\"ilrixysf\",\"name\":\"imsqywwwmhk\",\"type\":\"uwaedrympmlqoi\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<SolutionVersion> response
            = manager.solutionVersions().listBySolution("xiezeagmceit", "ugedh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("d", response.iterator().next().location());
        Assertions.assertEquals("i", response.iterator().next().tags().get("fmnlikpsims"));
        Assertions.assertEquals("zmblsyjdeol", response.iterator().next().properties().components().get(0).name());
        Assertions.assertEquals("ebfsy",
            response.iterator().next().properties().components().get(0).metadata().get("ledjcustbvtqigd"));
        Assertions.assertEquals("fidusztekxbyjgm",
            response.iterator().next().properties().components().get(0).constraints());
        Assertions.assertEquals("pxyihpqadagr",
            response.iterator().next().properties().components().get(0).dependencies().get(0));
        Assertions.assertEquals("rdi", response.iterator().next().properties().components().get(0).type());
        Assertions.assertEquals("dw", response.iterator().next().properties().displayName());
        Assertions.assertEquals("owxwyovcxjsgbip",
            response.iterator().next().properties().metadata().get("ukdveksbuhoduc"));
        Assertions.assertEquals("bffljfiimreoag", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("qtaadusrexxfavsq", response.iterator().next().extendedLocation().type());
    }
}

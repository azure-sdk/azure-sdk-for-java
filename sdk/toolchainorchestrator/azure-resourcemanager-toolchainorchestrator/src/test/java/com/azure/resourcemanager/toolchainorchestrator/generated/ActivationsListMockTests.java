// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.Activation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ActivationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"inputs\":{\"ctkwmuqqoajxeiyg\":\"datalxri\",\"aexhdctrceqnk\":\"dataesrw\"},\"stage\":\"upobehdmljz\",\"campaign\":\"cvumepjpbi\",\"status\":{\"stageHistory\":[{\"inputs\":{\"ykcgxvrpjlvcz\":\"dataepifexleqirccjc\"},\"outputs\":{\"u\":\"dataac\"},\"stage\":\"ettepdjxqe\",\"isActive\":false,\"nextStage\":\"nuiylpckaewsedv\",\"errorMessage\":\"kwxe\",\"status\":610531541,\"statusMessage\":\"rgfnz\"},{\"inputs\":{\"bcbcpz\":\"datamjtsgh\",\"ldtzmpypefcp\":\"datarpzeqac\"},\"outputs\":{\"fkhuytu\":\"datahnuqndaizu\",\"mtvtvegwqiukvzwy\":\"datazx\"},\"stage\":\"wtthaokgksk\",\"isActive\":false,\"nextStage\":\"sshajqfukpee\",\"errorMessage\":\"geumil\",\"status\":839717237,\"statusMessage\":\"trdexyionofnin\"},{\"inputs\":{\"rsmpcbbprtuga\":\"datazsxcwq\"},\"outputs\":{\"tbfcm\":\"databcyksivmfogd\",\"mb\":\"datarftsjcwjjxs\"},\"stage\":\"wvif\",\"isActive\":true,\"nextStage\":\"cifhocjxwkl\",\"errorMessage\":\"zrvtx\",\"status\":1229839837,\"statusMessage\":\"funlcpxxvi\"}],\"activationGeneration\":\"eyngjg\",\"updateTime\":\"quv\",\"status\":1319500024,\"statusMessage\":\"lpmcrdc\"}},\"extendedLocation\":{\"name\":\"eljtiahxmfqryarv\",\"type\":\"x\"},\"location\":\"bglcjkayspthzodu\",\"tags\":{\"djxyxgbkkqvjcteo\":\"mjtgblioskkfmkm\",\"pxvjnzd\":\"dlrslskk\"},\"id\":\"vocoj\",\"name\":\"pcnab\",\"type\":\"zf\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Activation> response = manager.activations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("bglcjkayspthzodu", response.iterator().next().location());
        Assertions.assertEquals("mjtgblioskkfmkm", response.iterator().next().tags().get("djxyxgbkkqvjcteo"));
        Assertions.assertEquals("upobehdmljz", response.iterator().next().properties().stage());
        Assertions.assertEquals("cvumepjpbi", response.iterator().next().properties().campaign());
        Assertions.assertEquals("eljtiahxmfqryarv", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("x", response.iterator().next().extendedLocation().type());
    }
}

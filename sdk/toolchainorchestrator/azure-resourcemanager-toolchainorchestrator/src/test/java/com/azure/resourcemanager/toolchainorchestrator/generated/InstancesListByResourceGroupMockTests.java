// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.Instance;
import com.azure.resourcemanager.toolchainorchestrator.models.ReconciliationState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InstancesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"metadata\":{\"cxmxeatkdb\":\"dbanfznd\"},\"displayName\":\"nrd\",\"scope\":\"ibqbnaomhjrm\",\"solution\":\"u\",\"target\":{\"name\":\"xljalfihc\",\"selector\":{\"nc\":\"bc\",\"xf\":\"exxqcwg\",\"r\":\"vaknokzwjj\",\"x\":\"tixldzyyfytpqs\"}},\"reconciliationPolicy\":{\"state\":\"inactive\",\"interval\":\"puj\"},\"isDryRun\":false,\"status\":{\"lastModified\":\"2021-11-13T15:58:13Z\",\"properties\":{\"slzoyov\":\"vsmb\",\"befgvmxn\":\"zdbpqv\"}}},\"extendedLocation\":{\"name\":\"kcvtl\",\"type\":\"bse\"},\"location\":\"vcuartrhun\",\"tags\":{\"uykbbmn\":\"rykycndzfqivjr\",\"xoe\":\"aglt\"},\"id\":\"onql\",\"name\":\"fwmyymv\",\"type\":\"dbpb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Instance> response
            = manager.instances().listByResourceGroup("gitsqh", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("vcuartrhun", response.iterator().next().location());
        Assertions.assertEquals("rykycndzfqivjr", response.iterator().next().tags().get("uykbbmn"));
        Assertions.assertEquals("dbanfznd", response.iterator().next().properties().metadata().get("cxmxeatkdb"));
        Assertions.assertEquals("nrd", response.iterator().next().properties().displayName());
        Assertions.assertEquals("ibqbnaomhjrm", response.iterator().next().properties().scope());
        Assertions.assertEquals("u", response.iterator().next().properties().solution());
        Assertions.assertEquals("xljalfihc", response.iterator().next().properties().target().name());
        Assertions.assertEquals("bc", response.iterator().next().properties().target().selector().get("nc"));
        Assertions.assertEquals(ReconciliationState.INACTIVE,
            response.iterator().next().properties().reconciliationPolicy().state());
        Assertions.assertEquals("puj", response.iterator().next().properties().reconciliationPolicy().interval());
        Assertions.assertEquals(false, response.iterator().next().properties().isDryRun());
        Assertions.assertEquals("kcvtl", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("bse", response.iterator().next().extendedLocation().type());
    }
}

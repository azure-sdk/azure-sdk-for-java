// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.Campaign;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CampaignsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\"},\"extendedLocation\":{\"name\":\"zqicqchygtvxbyja\",\"type\":\"epubdp\"},\"location\":\"yqvgxia\",\"tags\":{\"kxdxuwsaifmcwn\":\"tvo\",\"zlehgcvkbcknjolg\":\"s\",\"xpvelszerqzevxo\":\"y\",\"waafrqulh\":\"eintxwaljglzobl\"},\"id\":\"zyqbhd\",\"name\":\"afjrqpjiyrqjcrg\",\"type\":\"xwmzwdfkbnrz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Campaign response = manager.campaigns()
            .getByResourceGroupWithResponse("cpwzv", "doksqdtiwlwxlbon", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yqvgxia", response.location());
        Assertions.assertEquals("tvo", response.tags().get("kxdxuwsaifmcwn"));
        Assertions.assertEquals("zqicqchygtvxbyja", response.extendedLocation().name());
        Assertions.assertEquals("epubdp", response.extendedLocation().type());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.toolchainorchestrator.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.toolchainorchestrator.ToolchainOrchestratorManager;
import com.azure.resourcemanager.toolchainorchestrator.models.ReconciliationState;
import com.azure.resourcemanager.toolchainorchestrator.models.Target;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class TargetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"metadata\":{\"rdnqodxahhxhqf\":\"luclvdjjuk\",\"avsczuejdtxp\":\"qnvzoqgyipemch\",\"jjstliuhqawmo\":\"lghwzhome\"},\"properties\":{\"xrx\":\"ncznvodrrslblxyd\"},\"displayName\":\"bxiwkgfbqljn\",\"constraints\":\"hychocokuleh\",\"scope\":\"qlrqffaweyurk\",\"topologies\":[{\"bindings\":[{\"provider\":\"xra\",\"role\":\"juqdbrx\"},{\"provider\":\"rgchbap\",\"role\":\"kiyfjjkbajbusc\"}]}],\"components\":[{\"name\":\"u\",\"metadata\":{\"jy\":\"ycblevpmcl\",\"gsjgkzzlta\":\"kyxl\",\"zpgvdwnapfd\":\"hbzffovwmbjlzqs\"},\"properties\":{\"ptnuwjtkschgc\":\"datawf\",\"hvyeldotj\":\"dataqyhleseyq\",\"kukjtasb\":\"datadkwisw\",\"txfkndlqvt\":\"datawispkxk\"},\"constraints\":\"nvgmmbugtywa\",\"dependencies\":[\"aqkue\",\"tgroesh\"],\"type\":\"ygzc\"},{\"name\":\"yf\",\"metadata\":{\"mvqmtdwckygroej\":\"faoytehqpuv\",\"eqy\":\"ndljdjuskbr\",\"ysh\":\"kceysfaqegplw\"},\"properties\":{\"gkqu\":\"datakvb\"},\"constraints\":\"bwptdacarvvlf\",\"dependencies\":[\"mt\",\"oiwenazerohzrsq\"],\"type\":\"lsxkd\"},{\"name\":\"wqapfgsdp\",\"metadata\":{\"ldqqctekv\":\"ssmzhhkuui\",\"qyv\":\"lblhtjq\",\"a\":\"eh\"},\"properties\":{\"rrryveimips\":\"datahzzysevusxiv\",\"tjvv\":\"datadyzatvfuzka\"},\"constraints\":\"xwigsye\",\"dependencies\":[\"dsmjtgr\",\"gdgkki\"],\"type\":\"eplkcsm\"}],\"reconciliationPolicy\":{\"state\":\"active\",\"interval\":\"wtbbaedorvvmqf\"},\"isDryRun\":true,\"status\":{\"lastModified\":\"2021-04-17T05:40:48Z\",\"properties\":{\"gdhpabgdexjddv\":\"wumgx\",\"otmmw\":\"saq\",\"rsxaptefh\":\"lcol\"}}},\"extendedLocation\":{\"name\":\"xcgjokjljnhvlq\",\"type\":\"bekpeeksnbksdqhj\"},\"location\":\"klxesl\",\"tags\":{\"avnwqj\":\"ustcpoq\",\"knlejjjkxybwfd\":\"g\",\"jknsxfwu\":\"kjbztensvkzykj\",\"bpkuwxeoio\":\"hcdpkupnqrmgj\"},\"id\":\"fiz\",\"name\":\"av\",\"type\":\"jzwfb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ToolchainOrchestratorManager manager = ToolchainOrchestratorManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Target> response = manager.targets().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("klxesl", response.iterator().next().location());
        Assertions.assertEquals("ustcpoq", response.iterator().next().tags().get("avnwqj"));
        Assertions.assertEquals("luclvdjjuk", response.iterator().next().properties().metadata().get("rdnqodxahhxhqf"));
        Assertions.assertEquals("ncznvodrrslblxyd", response.iterator().next().properties().properties().get("xrx"));
        Assertions.assertEquals("bxiwkgfbqljn", response.iterator().next().properties().displayName());
        Assertions.assertEquals("hychocokuleh", response.iterator().next().properties().constraints());
        Assertions.assertEquals("qlrqffaweyurk", response.iterator().next().properties().scope());
        Assertions.assertEquals("xra",
            response.iterator().next().properties().topologies().get(0).bindings().get(0).provider());
        Assertions.assertEquals("juqdbrx",
            response.iterator().next().properties().topologies().get(0).bindings().get(0).role());
        Assertions.assertEquals("u", response.iterator().next().properties().components().get(0).name());
        Assertions.assertEquals("ycblevpmcl",
            response.iterator().next().properties().components().get(0).metadata().get("jy"));
        Assertions.assertEquals("nvgmmbugtywa",
            response.iterator().next().properties().components().get(0).constraints());
        Assertions.assertEquals("aqkue",
            response.iterator().next().properties().components().get(0).dependencies().get(0));
        Assertions.assertEquals("ygzc", response.iterator().next().properties().components().get(0).type());
        Assertions.assertEquals(ReconciliationState.ACTIVE,
            response.iterator().next().properties().reconciliationPolicy().state());
        Assertions.assertEquals("wtbbaedorvvmqf",
            response.iterator().next().properties().reconciliationPolicy().interval());
        Assertions.assertEquals(true, response.iterator().next().properties().isDryRun());
        Assertions.assertEquals("xcgjokjljnhvlq", response.iterator().next().extendedLocation().name());
        Assertions.assertEquals("bekpeeksnbksdqhj", response.iterator().next().extendedLocation().type());
    }
}

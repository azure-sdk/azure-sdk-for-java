// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cts.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Flows. */
public interface Flows {
    /**
     * Gets flow resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource.
     */
    Flow getByResourceGroup(String resourceGroupName, String flowName);

    /**
     * Gets flow resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource along with {@link Response}.
     */
    Response<Flow> getByResourceGroupWithResponse(String resourceGroupName, String flowName, Context context);

    /**
     * Deletes the flow resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String flowName);

    /**
     * Deletes the flow resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String flowName, Context context);

    /**
     * Enables the specified flow.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow enable(String resourceGroupName, String flowName);

    /**
     * Enables the specified flow.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow enable(String resourceGroupName, String flowName, Context context);

    /**
     * Disables the specified flow.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow disable(String resourceGroupName, String flowName);

    /**
     * Disables the specified flow.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param flowName The name for the flow that is to be onboarded.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow disable(String resourceGroupName, String flowName, Context context);

    /**
     * Gets flows in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flows in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Flow> listByResourceGroup(String resourceGroupName);

    /**
     * Gets flows in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flows in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Flow> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets flows in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flows in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Flow> list();

    /**
     * Gets flows in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flows in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Flow> list(Context context);

    /**
     * Gets flow resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource along with {@link Response}.
     */
    Flow getById(String id);

    /**
     * Gets flow resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource along with {@link Response}.
     */
    Response<Flow> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the flow resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the flow resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Flow resource.
     *
     * @param name resource name.
     * @return the first stage of the new Flow definition.
     */
    Flow.DefinitionStages.Blank define(String name);
}

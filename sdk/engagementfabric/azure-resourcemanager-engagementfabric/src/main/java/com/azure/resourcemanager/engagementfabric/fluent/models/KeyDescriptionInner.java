// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.engagementfabric.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.engagementfabric.models.KeyRank;
import java.io.IOException;

/**
 * The description of the EngagementFabric account key.
 */
@Immutable
public final class KeyDescriptionInner implements JsonSerializable<KeyDescriptionInner> {
    /*
     * The name of the key
     */
    private String name;

    /*
     * The rank of the key
     */
    private KeyRank rank;

    /*
     * The value of the key
     */
    private String value;

    /**
     * Creates an instance of KeyDescriptionInner class.
     */
    public KeyDescriptionInner() {
    }

    /**
     * Get the name property: The name of the key.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the rank property: The rank of the key.
     * 
     * @return the rank value.
     */
    public KeyRank rank() {
        return this.rank;
    }

    /**
     * Get the value property: The value of the key.
     * 
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KeyDescriptionInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KeyDescriptionInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the KeyDescriptionInner.
     */
    public static KeyDescriptionInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KeyDescriptionInner deserializedKeyDescriptionInner = new KeyDescriptionInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedKeyDescriptionInner.name = reader.getString();
                } else if ("rank".equals(fieldName)) {
                    deserializedKeyDescriptionInner.rank = KeyRank.fromString(reader.getString());
                } else if ("value".equals(fieldName)) {
                    deserializedKeyDescriptionInner.value = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKeyDescriptionInner;
        });
    }
}

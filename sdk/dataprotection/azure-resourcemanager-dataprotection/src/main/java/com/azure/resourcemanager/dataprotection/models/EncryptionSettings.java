// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Class containing encryption settings of vault. */
@Fluent
public final class EncryptionSettings {
    /*
     * State of encryption
     */
    @JsonProperty(value = "state")
    private EncryptionState state;

    /*
     * Key Vault Details
     */
    @JsonProperty(value = "keyVaultProperties")
    private CmkKeyVaultProperties keyVaultProperties;

    /*
     * Identity Details
     */
    @JsonProperty(value = "kekIdentity")
    private CmkKekIdentity kekIdentity;

    /*
     * State of Infrastructure encryption
     */
    @JsonProperty(value = "infrastructureEncryption")
    private InfrastructureEncryptionState infrastructureEncryption;

    /** Creates an instance of EncryptionSettings class. */
    public EncryptionSettings() {
    }

    /**
     * Get the state property: State of encryption.
     *
     * @return the state value.
     */
    public EncryptionState state() {
        return this.state;
    }

    /**
     * Set the state property: State of encryption.
     *
     * @param state the state value to set.
     * @return the EncryptionSettings object itself.
     */
    public EncryptionSettings withState(EncryptionState state) {
        this.state = state;
        return this;
    }

    /**
     * Get the keyVaultProperties property: Key Vault Details.
     *
     * @return the keyVaultProperties value.
     */
    public CmkKeyVaultProperties keyVaultProperties() {
        return this.keyVaultProperties;
    }

    /**
     * Set the keyVaultProperties property: Key Vault Details.
     *
     * @param keyVaultProperties the keyVaultProperties value to set.
     * @return the EncryptionSettings object itself.
     */
    public EncryptionSettings withKeyVaultProperties(CmkKeyVaultProperties keyVaultProperties) {
        this.keyVaultProperties = keyVaultProperties;
        return this;
    }

    /**
     * Get the kekIdentity property: Identity Details.
     *
     * @return the kekIdentity value.
     */
    public CmkKekIdentity kekIdentity() {
        return this.kekIdentity;
    }

    /**
     * Set the kekIdentity property: Identity Details.
     *
     * @param kekIdentity the kekIdentity value to set.
     * @return the EncryptionSettings object itself.
     */
    public EncryptionSettings withKekIdentity(CmkKekIdentity kekIdentity) {
        this.kekIdentity = kekIdentity;
        return this;
    }

    /**
     * Get the infrastructureEncryption property: State of Infrastructure encryption.
     *
     * @return the infrastructureEncryption value.
     */
    public InfrastructureEncryptionState infrastructureEncryption() {
        return this.infrastructureEncryption;
    }

    /**
     * Set the infrastructureEncryption property: State of Infrastructure encryption.
     *
     * @param infrastructureEncryption the infrastructureEncryption value to set.
     * @return the EncryptionSettings object itself.
     */
    public EncryptionSettings withInfrastructureEncryption(InfrastructureEncryptionState infrastructureEncryption) {
        this.infrastructureEncryption = infrastructureEncryption;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (keyVaultProperties() != null) {
            keyVaultProperties().validate();
        }
        if (kekIdentity() != null) {
            kekIdentity().validate();
        }
    }
}

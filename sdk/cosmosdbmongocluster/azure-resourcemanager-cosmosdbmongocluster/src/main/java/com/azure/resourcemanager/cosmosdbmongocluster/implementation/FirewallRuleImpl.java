// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmosdbmongocluster.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmosdbmongocluster.fluent.models.FirewallRuleInner;
import com.azure.resourcemanager.cosmosdbmongocluster.models.FirewallRule;
import com.azure.resourcemanager.cosmosdbmongocluster.models.ProvisioningState;

public final class FirewallRuleImpl implements FirewallRule, FirewallRule.Definition, FirewallRule.Update {
    private FirewallRuleInner innerObject;

    private final com.azure.resourcemanager.cosmosdbmongocluster.CosmosDBMongoClusterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String startIpAddress() {
        return this.innerModel().startIpAddress();
    }

    public String endIpAddress() {
        return this.innerModel().endIpAddress();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FirewallRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cosmosdbmongocluster.CosmosDBMongoClusterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String mongoClusterName;

    private String firewallRuleName;

    public FirewallRuleImpl withExistingMongoCluster(String resourceGroupName, String mongoClusterName) {
        this.resourceGroupName = resourceGroupName;
        this.mongoClusterName = mongoClusterName;
        return this;
    }

    public FirewallRule create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMongoClusters()
                .createOrUpdateFirewallRule(
                    resourceGroupName, mongoClusterName, firewallRuleName, this.innerModel(), Context.NONE);
        return this;
    }

    public FirewallRule create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMongoClusters()
                .createOrUpdateFirewallRule(
                    resourceGroupName, mongoClusterName, firewallRuleName, this.innerModel(), context);
        return this;
    }

    FirewallRuleImpl(
        String name, com.azure.resourcemanager.cosmosdbmongocluster.CosmosDBMongoClusterManager serviceManager) {
        this.innerObject = new FirewallRuleInner();
        this.serviceManager = serviceManager;
        this.firewallRuleName = name;
    }

    public FirewallRuleImpl update() {
        return this;
    }

    public FirewallRule apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMongoClusters()
                .createOrUpdateFirewallRule(
                    resourceGroupName, mongoClusterName, firewallRuleName, this.innerModel(), Context.NONE);
        return this;
    }

    public FirewallRule apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMongoClusters()
                .createOrUpdateFirewallRule(
                    resourceGroupName, mongoClusterName, firewallRuleName, this.innerModel(), context);
        return this;
    }

    FirewallRuleImpl(
        FirewallRuleInner innerObject,
        com.azure.resourcemanager.cosmosdbmongocluster.CosmosDBMongoClusterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.mongoClusterName = Utils.getValueFromIdByName(innerObject.id(), "mongoClusters");
        this.firewallRuleName = Utils.getValueFromIdByName(innerObject.id(), "firewallRules");
    }

    public FirewallRule refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMongoClusters()
                .getFirewallRuleWithResponse(resourceGroupName, mongoClusterName, firewallRuleName, Context.NONE)
                .getValue();
        return this;
    }

    public FirewallRule refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMongoClusters()
                .getFirewallRuleWithResponse(resourceGroupName, mongoClusterName, firewallRuleName, context)
                .getValue();
        return this;
    }

    public FirewallRuleImpl withStartIpAddress(String startIpAddress) {
        this.innerModel().withStartIpAddress(startIpAddress);
        return this;
    }

    public FirewallRuleImpl withEndIpAddress(String endIpAddress) {
        this.innerModel().withEndIpAddress(endIpAddress);
        return this;
    }
}

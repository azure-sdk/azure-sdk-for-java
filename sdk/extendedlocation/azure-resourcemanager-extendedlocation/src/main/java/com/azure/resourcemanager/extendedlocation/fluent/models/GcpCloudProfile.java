// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.extendedlocation.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Cloud profile for GCP. */
@Fluent
public final class GcpCloudProfile {
    /*
     * Project details for an organization project in GCP account
     */
    @JsonProperty(value = "organizationProject")
    private OrganizationProject innerOrganizationProject;

    /*
     * Project details for a single project in GCP account
     */
    @JsonProperty(value = "singleProject")
    private SingleProject innerSingleProject;

    /** Creates an instance of GcpCloudProfile class. */
    public GcpCloudProfile() {
    }

    /**
     * Get the innerOrganizationProject property: Project details for an organization project in GCP account.
     *
     * @return the innerOrganizationProject value.
     */
    private OrganizationProject innerOrganizationProject() {
        return this.innerOrganizationProject;
    }

    /**
     * Get the innerSingleProject property: Project details for a single project in GCP account.
     *
     * @return the innerSingleProject value.
     */
    private SingleProject innerSingleProject() {
        return this.innerSingleProject;
    }

    /**
     * Get the excludedFolderIds property: List of folder id's that needs to be excluded.
     *
     * @return the excludedFolderIds value.
     */
    public List<String> excludedFolderIds() {
        return this.innerOrganizationProject() == null ? null : this.innerOrganizationProject().excludedFolderIds();
    }

    /**
     * Set the excludedFolderIds property: List of folder id's that needs to be excluded.
     *
     * @param excludedFolderIds the excludedFolderIds value to set.
     * @return the GcpCloudProfile object itself.
     */
    public GcpCloudProfile withExcludedFolderIds(List<String> excludedFolderIds) {
        if (this.innerOrganizationProject() == null) {
            this.innerOrganizationProject = new OrganizationProject();
        }
        this.innerOrganizationProject().withExcludedFolderIds(excludedFolderIds);
        return this;
    }

    /**
     * Get the excludedProjectNumbers property: List of project numbers that needs to be excluded.
     *
     * @return the excludedProjectNumbers value.
     */
    public List<String> excludedProjectNumbers() {
        return this.innerOrganizationProject() == null
            ? null
            : this.innerOrganizationProject().excludedProjectNumbers();
    }

    /**
     * Set the excludedProjectNumbers property: List of project numbers that needs to be excluded.
     *
     * @param excludedProjectNumbers the excludedProjectNumbers value to set.
     * @return the GcpCloudProfile object itself.
     */
    public GcpCloudProfile withExcludedProjectNumbers(List<String> excludedProjectNumbers) {
        if (this.innerOrganizationProject() == null) {
            this.innerOrganizationProject = new OrganizationProject();
        }
        this.innerOrganizationProject().withExcludedProjectNumbers(excludedProjectNumbers);
        return this;
    }

    /**
     * Get the organizationId property: Organization id for the GCP organization.
     *
     * @return the organizationId value.
     */
    public String organizationId() {
        return this.innerOrganizationProject() == null ? null : this.innerOrganizationProject().organizationId();
    }

    /**
     * Set the organizationId property: Organization id for the GCP organization.
     *
     * @param organizationId the organizationId value to set.
     * @return the GcpCloudProfile object itself.
     */
    public GcpCloudProfile withOrganizationId(String organizationId) {
        if (this.innerOrganizationProject() == null) {
            this.innerOrganizationProject = new OrganizationProject();
        }
        this.innerOrganizationProject().withOrganizationId(organizationId);
        return this;
    }

    /**
     * Get the projectId property: Project id for the GCP single account.
     *
     * @return the projectId value.
     */
    public String projectId() {
        return this.innerSingleProject() == null ? null : this.innerSingleProject().projectId();
    }

    /**
     * Set the projectId property: Project id for the GCP single account.
     *
     * @param projectId the projectId value to set.
     * @return the GcpCloudProfile object itself.
     */
    public GcpCloudProfile withProjectId(String projectId) {
        if (this.innerSingleProject() == null) {
            this.innerSingleProject = new SingleProject();
        }
        this.innerSingleProject().withProjectId(projectId);
        return this;
    }

    /**
     * Get the projectNumber property: Project number for GCP single account.
     *
     * @return the projectNumber value.
     */
    public String projectNumber() {
        return this.innerSingleProject() == null ? null : this.innerSingleProject().projectNumber();
    }

    /**
     * Set the projectNumber property: Project number for GCP single account.
     *
     * @param projectNumber the projectNumber value to set.
     * @return the GcpCloudProfile object itself.
     */
    public GcpCloudProfile withProjectNumber(String projectNumber) {
        if (this.innerSingleProject() == null) {
            this.innerSingleProject = new SingleProject();
        }
        this.innerSingleProject().withProjectNumber(projectNumber);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerOrganizationProject() != null) {
            innerOrganizationProject().validate();
        }
        if (innerSingleProject() != null) {
            innerSingleProject().validate();
        }
    }
}

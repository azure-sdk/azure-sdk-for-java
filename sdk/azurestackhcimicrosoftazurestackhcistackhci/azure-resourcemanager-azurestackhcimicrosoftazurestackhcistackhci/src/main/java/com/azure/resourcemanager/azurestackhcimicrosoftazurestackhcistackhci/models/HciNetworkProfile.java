// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The network profile of a device.
 */
@Immutable
public final class HciNetworkProfile {
    /*
     * List of NIC Details of device.
     */
    @JsonProperty(value = "nicDetails", access = JsonProperty.Access.WRITE_ONLY)
    private List<HciNicDetail> nicDetails;

    /*
     * List of switch details for edge device.
     */
    @JsonProperty(value = "switchDetails", access = JsonProperty.Access.WRITE_ONLY)
    private List<SwitchDetail> switchDetails;

    /*
     * HostNetwork config to deploy AzureStackHCI Cluster.
     */
    @JsonProperty(value = "hostNetwork", access = JsonProperty.Access.WRITE_ONLY)
    private HostNetworkAutoGenerated hostNetwork;

    /**
     * Creates an instance of HciNetworkProfile class.
     */
    public HciNetworkProfile() {
    }

    /**
     * Get the nicDetails property: List of NIC Details of device.
     * 
     * @return the nicDetails value.
     */
    public List<HciNicDetail> nicDetails() {
        return this.nicDetails;
    }

    /**
     * Get the switchDetails property: List of switch details for edge device.
     * 
     * @return the switchDetails value.
     */
    public List<SwitchDetail> switchDetails() {
        return this.switchDetails;
    }

    /**
     * Get the hostNetwork property: HostNetwork config to deploy AzureStackHCI Cluster.
     * 
     * @return the hostNetwork value.
     */
    public HostNetworkAutoGenerated hostNetwork() {
        return this.hostNetwork;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (nicDetails() != null) {
            nicDetails().forEach(e -> e.validate());
        }
        if (switchDetails() != null) {
            switchDetails().forEach(e -> e.validate());
        }
        if (hostNetwork() != null) {
            hostNetwork().validate();
        }
    }
}

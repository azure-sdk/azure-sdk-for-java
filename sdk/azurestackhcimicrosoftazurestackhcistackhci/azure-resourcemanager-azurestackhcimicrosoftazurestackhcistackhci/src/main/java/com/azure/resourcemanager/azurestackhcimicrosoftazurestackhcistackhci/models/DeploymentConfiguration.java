// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Deployment Configuration.
 */
@Fluent
public final class DeploymentConfiguration {
    /*
     * deployment template version 
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Scale units will contains list of deployment data
     */
    @JsonProperty(value = "scaleUnits", required = true)
    private List<ScaleUnits> scaleUnits;

    /**
     * Creates an instance of DeploymentConfiguration class.
     */
    public DeploymentConfiguration() {
    }

    /**
     * Get the version property: deployment template version.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: deployment template version.
     * 
     * @param version the version value to set.
     * @return the DeploymentConfiguration object itself.
     */
    public DeploymentConfiguration withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the scaleUnits property: Scale units will contains list of deployment data.
     * 
     * @return the scaleUnits value.
     */
    public List<ScaleUnits> scaleUnits() {
        return this.scaleUnits;
    }

    /**
     * Set the scaleUnits property: Scale units will contains list of deployment data.
     * 
     * @param scaleUnits the scaleUnits value to set.
     * @return the DeploymentConfiguration object itself.
     */
    public DeploymentConfiguration withScaleUnits(List<ScaleUnits> scaleUnits) {
        this.scaleUnits = scaleUnits;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scaleUnits() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property scaleUnits in model DeploymentConfiguration"));
        } else {
            scaleUnits().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DeploymentConfiguration.class);
}

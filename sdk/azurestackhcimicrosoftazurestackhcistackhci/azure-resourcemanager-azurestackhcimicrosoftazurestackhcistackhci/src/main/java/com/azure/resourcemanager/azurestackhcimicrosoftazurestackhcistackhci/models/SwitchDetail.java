// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * List of switch details for edge device.
 */
@Immutable
public final class SwitchDetail {
    /*
     * The name of the switch.
     */
    @JsonProperty(value = "switchName", access = JsonProperty.Access.WRITE_ONLY)
    private String switchName;

    /*
     * The type of the switch. e.g. external, internal.
     */
    @JsonProperty(value = "switchType", access = JsonProperty.Access.WRITE_ONLY)
    private String switchType;

    /*
     * This represents extensions installed on virtualSwitch.
     */
    @JsonProperty(value = "extensions", access = JsonProperty.Access.WRITE_ONLY)
    private List<SwitchExtension> extensions;

    /**
     * Creates an instance of SwitchDetail class.
     */
    public SwitchDetail() {
    }

    /**
     * Get the switchName property: The name of the switch.
     * 
     * @return the switchName value.
     */
    public String switchName() {
        return this.switchName;
    }

    /**
     * Get the switchType property: The type of the switch. e.g. external, internal.
     * 
     * @return the switchType value.
     */
    public String switchType() {
        return this.switchType;
    }

    /**
     * Get the extensions property: This represents extensions installed on virtualSwitch.
     * 
     * @return the extensions value.
     */
    public List<SwitchExtension> extensions() {
        return this.extensions;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (extensions() != null) {
            extensions().forEach(e -> e.validate());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Properties for Log Collection Request.
 */
@Fluent
public final class LogCollectionRequestProperties {
    /*
     * From DateTimeStamp from when logs need to be connected
     */
    @JsonProperty(value = "fromDate", required = true)
    private OffsetDateTime fromDate;

    /*
     * To DateTimeStamp till when logs need to be connected
     */
    @JsonProperty(value = "toDate", required = true)
    private OffsetDateTime toDate;

    /**
     * Creates an instance of LogCollectionRequestProperties class.
     */
    public LogCollectionRequestProperties() {
    }

    /**
     * Get the fromDate property: From DateTimeStamp from when logs need to be connected.
     * 
     * @return the fromDate value.
     */
    public OffsetDateTime fromDate() {
        return this.fromDate;
    }

    /**
     * Set the fromDate property: From DateTimeStamp from when logs need to be connected.
     * 
     * @param fromDate the fromDate value to set.
     * @return the LogCollectionRequestProperties object itself.
     */
    public LogCollectionRequestProperties withFromDate(OffsetDateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }

    /**
     * Get the toDate property: To DateTimeStamp till when logs need to be connected.
     * 
     * @return the toDate value.
     */
    public OffsetDateTime toDate() {
        return this.toDate;
    }

    /**
     * Set the toDate property: To DateTimeStamp till when logs need to be connected.
     * 
     * @param toDate the toDate value to set.
     * @return the LogCollectionRequestProperties object itself.
     */
    public LogCollectionRequestProperties withToDate(OffsetDateTime toDate) {
        this.toDate = toDate;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (fromDate() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property fromDate in model LogCollectionRequestProperties"));
        }
        if (toDate() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property toDate in model LogCollectionRequestProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(LogCollectionRequestProperties.class);
}

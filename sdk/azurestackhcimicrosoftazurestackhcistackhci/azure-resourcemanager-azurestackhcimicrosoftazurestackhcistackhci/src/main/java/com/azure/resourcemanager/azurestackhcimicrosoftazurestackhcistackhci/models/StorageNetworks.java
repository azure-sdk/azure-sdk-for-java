// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The StorageNetworks of a cluster.
 */
@Fluent
public final class StorageNetworks {
    /*
     * Name of the storage network.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Name of the storage network adapter.
     */
    @JsonProperty(value = "networkAdapterName")
    private String networkAdapterName;

    /*
     * ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. 
     */
    @JsonProperty(value = "vlanId")
    private String vlanId;

    /*
     * List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.
     */
    @JsonProperty(value = "storageAdapterIPInfo")
    private List<StorageAdapterIpInfo> storageAdapterIpInfo;

    /**
     * Creates an instance of StorageNetworks class.
     */
    public StorageNetworks() {
    }

    /**
     * Get the name property: Name of the storage network.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the storage network.
     * 
     * @param name the name value to set.
     * @return the StorageNetworks object itself.
     */
    public StorageNetworks withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the networkAdapterName property: Name of the storage network adapter.
     * 
     * @return the networkAdapterName value.
     */
    public String networkAdapterName() {
        return this.networkAdapterName;
    }

    /**
     * Set the networkAdapterName property: Name of the storage network adapter.
     * 
     * @param networkAdapterName the networkAdapterName value to set.
     * @return the StorageNetworks object itself.
     */
    public StorageNetworks withNetworkAdapterName(String networkAdapterName) {
        this.networkAdapterName = networkAdapterName;
        return this;
    }

    /**
     * Get the vlanId property: ID specified for the VLAN storage network. This setting is applied to the network
     * interfaces that route the storage and VM migration traffic.
     * 
     * @return the vlanId value.
     */
    public String vlanId() {
        return this.vlanId;
    }

    /**
     * Set the vlanId property: ID specified for the VLAN storage network. This setting is applied to the network
     * interfaces that route the storage and VM migration traffic.
     * 
     * @param vlanId the vlanId value to set.
     * @return the StorageNetworks object itself.
     */
    public StorageNetworks withVlanId(String vlanId) {
        this.vlanId = vlanId;
        return this;
    }

    /**
     * Get the storageAdapterIpInfo property: List of Storage adapter physical nodes config to deploy AzureStackHCI
     * Cluster.
     * 
     * @return the storageAdapterIpInfo value.
     */
    public List<StorageAdapterIpInfo> storageAdapterIpInfo() {
        return this.storageAdapterIpInfo;
    }

    /**
     * Set the storageAdapterIpInfo property: List of Storage adapter physical nodes config to deploy AzureStackHCI
     * Cluster.
     * 
     * @param storageAdapterIpInfo the storageAdapterIpInfo value to set.
     * @return the StorageNetworks object itself.
     */
    public StorageNetworks withStorageAdapterIpInfo(List<StorageAdapterIpInfo> storageAdapterIpInfo) {
        this.storageAdapterIpInfo = storageAdapterIpInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (storageAdapterIpInfo() != null) {
            storageAdapterIpInfo().forEach(e -> e.validate());
        }
    }
}

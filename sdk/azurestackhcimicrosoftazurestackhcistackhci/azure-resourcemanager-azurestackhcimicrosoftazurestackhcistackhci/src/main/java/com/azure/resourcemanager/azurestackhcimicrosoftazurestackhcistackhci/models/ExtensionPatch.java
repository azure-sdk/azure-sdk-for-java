// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.fluent.models.ExtensionPatchProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Extension Details to update.
 */
@Fluent
public final class ExtensionPatch {
    /*
     * Describes Machine Extension Properties that can be updated.
     */
    @JsonProperty(value = "properties")
    private ExtensionPatchProperties innerProperties;

    /**
     * Creates an instance of ExtensionPatch class.
     */
    public ExtensionPatch() {
    }

    /**
     * Get the innerProperties property: Describes Machine Extension Properties that can be updated.
     * 
     * @return the innerProperties value.
     */
    private ExtensionPatchProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the extensionParameters property: Describes the properties of a Machine Extension that can be updated.
     * 
     * @return the extensionParameters value.
     */
    public ExtensionPatchParameters extensionParameters() {
        return this.innerProperties() == null ? null : this.innerProperties().extensionParameters();
    }

    /**
     * Set the extensionParameters property: Describes the properties of a Machine Extension that can be updated.
     * 
     * @param extensionParameters the extensionParameters value to set.
     * @return the ExtensionPatch object itself.
     */
    public ExtensionPatch withExtensionParameters(ExtensionPatchParameters extensionParameters) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ExtensionPatchProperties();
        }
        this.innerProperties().withExtensionParameters(extensionParameters);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

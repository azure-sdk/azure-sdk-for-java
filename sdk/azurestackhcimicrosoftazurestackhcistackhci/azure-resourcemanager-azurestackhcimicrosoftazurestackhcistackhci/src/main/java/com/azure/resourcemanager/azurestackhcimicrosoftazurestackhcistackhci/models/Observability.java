// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Observability of AzureStackHCI Cluster.
 */
@Fluent
public final class Observability {
    /*
     * Enables telemetry data to be sent to Microsoft
     */
    @JsonProperty(value = "streamingDataClient")
    private Boolean streamingDataClient;

    /*
     * Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
     */
    @JsonProperty(value = "euLocation")
    private Boolean euLocation;

    /*
     * When set to true, collects log data to facilitate quicker issue resolution.
     */
    @JsonProperty(value = "episodicDataUpload")
    private Boolean episodicDataUpload;

    /**
     * Creates an instance of Observability class.
     */
    public Observability() {
    }

    /**
     * Get the streamingDataClient property: Enables telemetry data to be sent to Microsoft.
     * 
     * @return the streamingDataClient value.
     */
    public Boolean streamingDataClient() {
        return this.streamingDataClient;
    }

    /**
     * Set the streamingDataClient property: Enables telemetry data to be sent to Microsoft.
     * 
     * @param streamingDataClient the streamingDataClient value to set.
     * @return the Observability object itself.
     */
    public Observability withStreamingDataClient(Boolean streamingDataClient) {
        this.streamingDataClient = streamingDataClient;
        return this;
    }

    /**
     * Get the euLocation property: Location of your cluster. The log and diagnostic data is sent to the appropriate
     * diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to
     * Microsoft to be stored outside of the EU.
     * 
     * @return the euLocation value.
     */
    public Boolean euLocation() {
        return this.euLocation;
    }

    /**
     * Set the euLocation property: Location of your cluster. The log and diagnostic data is sent to the appropriate
     * diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to
     * Microsoft to be stored outside of the EU.
     * 
     * @param euLocation the euLocation value to set.
     * @return the Observability object itself.
     */
    public Observability withEuLocation(Boolean euLocation) {
        this.euLocation = euLocation;
        return this;
    }

    /**
     * Get the episodicDataUpload property: When set to true, collects log data to facilitate quicker issue resolution.
     * 
     * @return the episodicDataUpload value.
     */
    public Boolean episodicDataUpload() {
        return this.episodicDataUpload;
    }

    /**
     * Set the episodicDataUpload property: When set to true, collects log data to facilitate quicker issue resolution.
     * 
     * @param episodicDataUpload the episodicDataUpload value to set.
     * @return the Observability object itself.
     */
    public Observability withEpisodicDataUpload(Boolean episodicDataUpload) {
        this.episodicDataUpload = episodicDataUpload;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhcimicrosoftazurestackhcistackhci.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Remote Support properties of the cluster.
 */
@Immutable
public final class RemoteSupportProperties {
    /*
     * Remote Support Access Level
     */
    @JsonProperty(value = "accessLevel", access = JsonProperty.Access.WRITE_ONLY)
    private AccessLevel accessLevel;

    /*
     * Expiration DateTimeStamp when Remote Support Access will be expired
     */
    @JsonProperty(value = "expirationTimeStamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime expirationTimestamp;

    /*
     * Remote Support Type for cluster
     */
    @JsonProperty(value = "remoteSupportType", access = JsonProperty.Access.WRITE_ONLY)
    private RemoteSupportType remoteSupportType;

    /*
     * The remoteSupportNodeSettings property.
     */
    @JsonProperty(value = "remoteSupportNodeSettings", access = JsonProperty.Access.WRITE_ONLY)
    private List<RemoteSupportNodeSettings> remoteSupportNodeSettings;

    /*
     * The remoteSupportSessionDetails property.
     */
    @JsonProperty(value = "remoteSupportSessionDetails", access = JsonProperty.Access.WRITE_ONLY)
    private List<PerNodeRemoteSupportSession> remoteSupportSessionDetails;

    /**
     * Creates an instance of RemoteSupportProperties class.
     */
    public RemoteSupportProperties() {
    }

    /**
     * Get the accessLevel property: Remote Support Access Level.
     * 
     * @return the accessLevel value.
     */
    public AccessLevel accessLevel() {
        return this.accessLevel;
    }

    /**
     * Get the expirationTimestamp property: Expiration DateTimeStamp when Remote Support Access will be expired.
     * 
     * @return the expirationTimestamp value.
     */
    public OffsetDateTime expirationTimestamp() {
        return this.expirationTimestamp;
    }

    /**
     * Get the remoteSupportType property: Remote Support Type for cluster.
     * 
     * @return the remoteSupportType value.
     */
    public RemoteSupportType remoteSupportType() {
        return this.remoteSupportType;
    }

    /**
     * Get the remoteSupportNodeSettings property: The remoteSupportNodeSettings property.
     * 
     * @return the remoteSupportNodeSettings value.
     */
    public List<RemoteSupportNodeSettings> remoteSupportNodeSettings() {
        return this.remoteSupportNodeSettings;
    }

    /**
     * Get the remoteSupportSessionDetails property: The remoteSupportSessionDetails property.
     * 
     * @return the remoteSupportSessionDetails value.
     */
    public List<PerNodeRemoteSupportSession> remoteSupportSessionDetails() {
        return this.remoteSupportSessionDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (remoteSupportNodeSettings() != null) {
            remoteSupportNodeSettings().forEach(e -> e.validate());
        }
        if (remoteSupportSessionDetails() != null) {
            remoteSupportSessionDetails().forEach(e -> e.validate());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.Context;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.healthcareapis.models.AggregateErrors;
import com.azure.resourcemanager.healthcareapis.models.IotMappingProperties;
import com.azure.resourcemanager.healthcareapis.models.ValidateMedtechMappingsParameters;
import java.io.IOException;
import java.util.Arrays;

/** Samples for Services ValidateMedtechMappings. */
public final class ServicesValidateMedtechMappingsSamples {
    /*
     * x-ms-original-file: specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/preview/2022-07-01-preview/examples/ValidateMedtechMappings.json
     */
    /**
     * Sample code: Medtech Validate Mappings.
     *
     * @param manager Entry point to HealthcareApisManager.
     */
    public static void medtechValidateMappings(com.azure.resourcemanager.healthcareapis.HealthcareApisManager manager)
        throws IOException {
        manager
            .services()
            .validateMedtechMappingsWithResponse(
                new ValidateMedtechMappingsParameters()
                    .withAggregateErrors(AggregateErrors.FALSE)
                    .withDeviceMapping(
                        new IotMappingProperties()
                            .withContent(
                                SerializerFactory
                                    .createDefaultManagementSerializerAdapter()
                                    .deserialize(
                                        "{\"template\":[{\"template\":{\"deviceIdExpression\":\"$.deviceId\",\"timestampExpression\":\"$.endDate\",\"typeMatchExpression\":\"$..[?(@heartrate)]\",\"typeName\":\"heartrate\"},\"templateType\":\"JsonPathContent\"}],\"templateType\":\"CollectionContent\"}",
                                        Object.class,
                                        SerializerEncoding.JSON)))
                    .withFhirMapping(
                        new IotMappingProperties()
                            .withContent(
                                SerializerFactory
                                    .createDefaultManagementSerializerAdapter()
                                    .deserialize(
                                        "{\"template\":[{\"template\":{\"codes\":[{\"code\":\"85354-9\",\"display\":\"Blood"
                                            + " pressure"
                                            + " panel\",\"system\":\"http://loinc.org\"}],\"components\":[{\"codes\":[{\"code\":\"85354-9\",\"display\":\"Blood"
                                            + " pressure"
                                            + " panel\",\"system\":\"http://loinc.org\"}],\"value\":{\"defaultPeriod\":1000,\"unit\":\"mmHg\",\"valueName\":\"diastolic\",\"valueType\":\"SampledData\"}}],\"periodInterval\":60,\"typeName\":\"bloodpressure\"},\"templateType\":\"CodeValueFhir\"}],\"templateType\":\"CollectionFhir\"}",
                                        Object.class,
                                        SerializerEncoding.JSON)))
                    .withDeviceEvents(
                        Arrays
                            .asList(
                                SerializerFactory
                                    .createDefaultManagementSerializerAdapter()
                                    .deserialize(
                                        "{\"deviceId\":\"abc1\",\"endDate\":\"2022-04-01T21:23:23.8429459Z\",\"heartrate\":\"100\",\"patient\":\"patient123\",\"session\":\"abcdefg\"}",
                                        Object.class,
                                        SerializerEncoding.JSON),
                                SerializerFactory
                                    .createDefaultManagementSerializerAdapter()
                                    .deserialize(
                                        "{\"deviceId\":\"abc2\",\"endDate\":\"2022-04-01T21:23:23.8429459Z\",\"heartrate\":\"100\",\"patient\":\"patient123\",\"session\":\"abcdefg\"}",
                                        Object.class,
                                        SerializerEncoding.JSON))),
                Context.NONE);
    }
}

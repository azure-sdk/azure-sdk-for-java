// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.resourcemanager.healthcareapis.models.StorageConfiguration;
import com.azure.resourcemanager.healthcareapis.models.StorageMonitorConfiguration;
import com.azure.resourcemanager.healthcareapis.models.StorageMonitorQueue;

/**
 * Samples for DicomServices CreateOrUpdate.
 */
public final class DicomServicesCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/preview/2025-03-01-preview/examples/
     * dicomservices/DicomServices_Create.json
     */
    /**
     * Sample code: Create or update a Dicom Service.
     * 
     * @param manager Entry point to HealthcareApisManager.
     */
    public static void
        createOrUpdateADicomService(com.azure.resourcemanager.healthcareapis.HealthcareApisManager manager) {
        manager.dicomServices()
            .define("blue")
            .withExistingWorkspace("testRG", "workspace1")
            .withRegion("westus")
            .withStorageConfiguration(new StorageConfiguration().withStorageResourceId(
                "/subscriptions/aa39e6f9-c22e-4935-9ef1-1e4c9aa3c130/resourceGroups/rgname/providers/Microsoft.Storage/storageAccounts/accountname")
                .withFileSystemName("fileSystemName")
                .withStorageMonitorConfiguration(new StorageMonitorConfiguration().withSystemTopicResourceId(
                    "/subscriptions/aa39e6f9-c22e-4935-9ef1-1e4c9aa3c130/resourceGroups/rgname/providers/Microsoft.EventGrid/systemTopics/topicname")
                    .withMessageQueue(
                        new StorageMonitorQueue().withName("queuename1").withTimeToLiveInSeconds(2592000L))
                    .withPoisonQueue(
                        new StorageMonitorQueue().withName("queuename2").withTimeToLiveInSeconds(2592000L))))
            .withEnableDataPartitions(false)
            .create();
    }
}

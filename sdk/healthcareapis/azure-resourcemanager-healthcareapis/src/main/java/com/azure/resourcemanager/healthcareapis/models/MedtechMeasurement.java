// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** A measurement extracted during the Medtech device event normalization process. */
@Fluent
public final class MedtechMeasurement {
    /*
     * The type of measurement being collected.
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * The id used to group values into a single observation.
     */
    @JsonProperty(value = "correlationId")
    private String correlationId;

    /*
     * The id of the device that collected the measurement.
     */
    @JsonProperty(value = "deviceId")
    private String deviceId;

    /*
     * The id of the encounter.
     */
    @JsonProperty(value = "encounterId")
    private String encounterId;

    /*
     * The time that device collected the measurement.
     */
    @JsonProperty(value = "occurrenceTimeUtc")
    private String occurrenceTimeUtc;

    /*
     * The properties property.
     */
    @JsonProperty(value = "properties")
    private List<MedtechMeasurementProperty> properties;

    /** Creates an instance of MedtechMeasurement class. */
    public MedtechMeasurement() {
    }

    /**
     * Get the type property: The type of measurement being collected.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The type of measurement being collected.
     *
     * @param type the type value to set.
     * @return the MedtechMeasurement object itself.
     */
    public MedtechMeasurement withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the correlationId property: The id used to group values into a single observation.
     *
     * @return the correlationId value.
     */
    public String correlationId() {
        return this.correlationId;
    }

    /**
     * Set the correlationId property: The id used to group values into a single observation.
     *
     * @param correlationId the correlationId value to set.
     * @return the MedtechMeasurement object itself.
     */
    public MedtechMeasurement withCorrelationId(String correlationId) {
        this.correlationId = correlationId;
        return this;
    }

    /**
     * Get the deviceId property: The id of the device that collected the measurement.
     *
     * @return the deviceId value.
     */
    public String deviceId() {
        return this.deviceId;
    }

    /**
     * Set the deviceId property: The id of the device that collected the measurement.
     *
     * @param deviceId the deviceId value to set.
     * @return the MedtechMeasurement object itself.
     */
    public MedtechMeasurement withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }

    /**
     * Get the encounterId property: The id of the encounter.
     *
     * @return the encounterId value.
     */
    public String encounterId() {
        return this.encounterId;
    }

    /**
     * Set the encounterId property: The id of the encounter.
     *
     * @param encounterId the encounterId value to set.
     * @return the MedtechMeasurement object itself.
     */
    public MedtechMeasurement withEncounterId(String encounterId) {
        this.encounterId = encounterId;
        return this;
    }

    /**
     * Get the occurrenceTimeUtc property: The time that device collected the measurement.
     *
     * @return the occurrenceTimeUtc value.
     */
    public String occurrenceTimeUtc() {
        return this.occurrenceTimeUtc;
    }

    /**
     * Set the occurrenceTimeUtc property: The time that device collected the measurement.
     *
     * @param occurrenceTimeUtc the occurrenceTimeUtc value to set.
     * @return the MedtechMeasurement object itself.
     */
    public MedtechMeasurement withOccurrenceTimeUtc(String occurrenceTimeUtc) {
        this.occurrenceTimeUtc = occurrenceTimeUtc;
        return this;
    }

    /**
     * Get the properties property: The properties property.
     *
     * @return the properties value.
     */
    public List<MedtechMeasurementProperty> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The properties property.
     *
     * @param properties the properties value to set.
     * @return the MedtechMeasurement object itself.
     */
    public MedtechMeasurement withProperties(List<MedtechMeasurementProperty> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().forEach(e -> e.validate());
        }
    }
}

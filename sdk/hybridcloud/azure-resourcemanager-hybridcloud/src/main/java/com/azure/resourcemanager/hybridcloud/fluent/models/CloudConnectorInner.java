// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcloud.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.hybridcloud.models.ClientSecret;
import com.azure.resourcemanager.hybridcloud.models.CloudConnectorIdentity;
import com.azure.resourcemanager.hybridcloud.models.ProvisioningState;
import com.azure.resourcemanager.hybridcloud.models.ResourceReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Cloud Connector resource. */
@Fluent
public final class CloudConnectorInner extends Resource {
    /*
     * Properties of the Cloud Connector.
     */
    @JsonProperty(value = "properties")
    private CloudConnectorPropertiesFormat innerProperties;

    /*
     * The identity property.
     */
    @JsonProperty(value = "identity")
    private CloudConnectorIdentity identity;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /** Creates an instance of CloudConnectorInner class. */
    public CloudConnectorInner() {
    }

    /**
     * Get the innerProperties property: Properties of the Cloud Connector.
     *
     * @return the innerProperties value.
     */
    private CloudConnectorPropertiesFormat innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the identity property: The identity property.
     *
     * @return the identity value.
     */
    public CloudConnectorIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The identity property.
     *
     * @param identity the identity value to set.
     * @return the CloudConnectorInner object itself.
     */
    public CloudConnectorInner withIdentity(CloudConnectorIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public CloudConnectorInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CloudConnectorInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the tenantUri property: AAD Tenant URI (containing AAD URI and Directory ID). URI is needed for cloud
     * Identification.
     *
     * @return the tenantUri value.
     */
    public String tenantUri() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantUri();
    }

    /**
     * Set the tenantUri property: AAD Tenant URI (containing AAD URI and Directory ID). URI is needed for cloud
     * Identification.
     *
     * @param tenantUri the tenantUri value to set.
     * @return the CloudConnectorInner object itself.
     */
    public CloudConnectorInner withTenantUri(String tenantUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudConnectorPropertiesFormat();
        }
        this.innerProperties().withTenantUri(tenantUri);
        return this;
    }

    /**
     * Get the applicationId property: AAD Application ID (aka Client ID). There can be multiple Applications replicated
     * in the same AAD Tenant.
     *
     * @return the applicationId value.
     */
    public String applicationId() {
        return this.innerProperties() == null ? null : this.innerProperties().applicationId();
    }

    /**
     * Set the applicationId property: AAD Application ID (aka Client ID). There can be multiple Applications replicated
     * in the same AAD Tenant.
     *
     * @param applicationId the applicationId value to set.
     * @return the CloudConnectorInner object itself.
     */
    public CloudConnectorInner withApplicationId(String applicationId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudConnectorPropertiesFormat();
        }
        this.innerProperties().withApplicationId(applicationId);
        return this;
    }

    /**
     * Get the clientSecret property: Secret to access the AAD Application ID and Customer KeyVault.
     *
     * @return the clientSecret value.
     */
    public ClientSecret clientSecret() {
        return this.innerProperties() == null ? null : this.innerProperties().clientSecret();
    }

    /**
     * Set the clientSecret property: Secret to access the AAD Application ID and Customer KeyVault.
     *
     * @param clientSecret the clientSecret value to set.
     * @return the CloudConnectorInner object itself.
     */
    public CloudConnectorInner withClientSecret(ClientSecret clientSecret) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudConnectorPropertiesFormat();
        }
        this.innerProperties().withClientSecret(clientSecret);
        return this;
    }

    /**
     * Get the cloudConnections property: List of authorized Resources which have access to this connector.
     *
     * @return the cloudConnections value.
     */
    public List<ResourceReference> cloudConnections() {
        return this.innerProperties() == null ? null : this.innerProperties().cloudConnections();
    }

    /**
     * Set the cloudConnections property: List of authorized Resources which have access to this connector.
     *
     * @param cloudConnections the cloudConnections value to set.
     * @return the CloudConnectorInner object itself.
     */
    public CloudConnectorInner withCloudConnections(List<ResourceReference> cloudConnections) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CloudConnectorPropertiesFormat();
        }
        this.innerProperties().withCloudConnections(cloudConnections);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the application rule collection resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }
}

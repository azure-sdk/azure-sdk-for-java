// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcloud.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridcloud.fluent.models.CloudConnectorInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of CloudConnector. */
public interface CloudConnector {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The identity property.
     *
     * @return the identity value.
     */
    CloudConnectorIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the tenantUri property: AAD Tenant URI (containing AAD URI and Directory ID). URI is needed for cloud
     * Identification.
     *
     * @return the tenantUri value.
     */
    String tenantUri();

    /**
     * Gets the applicationId property: AAD Application ID (aka Client ID). There can be multiple Applications
     * replicated in the same AAD Tenant.
     *
     * @return the applicationId value.
     */
    String applicationId();

    /**
     * Gets the clientSecret property: Secret to access the AAD Application ID and Customer KeyVault.
     *
     * @return the clientSecret value.
     */
    ClientSecret clientSecret();

    /**
     * Gets the cloudConnections property: List of authorized Resources which have access to this connector.
     *
     * @return the cloudConnections value.
     */
    List<ResourceReference> cloudConnections();

    /**
     * Gets the provisioningState property: The provisioning state of the application rule collection resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.hybridcloud.fluent.models.CloudConnectorInner object.
     *
     * @return the inner object.
     */
    CloudConnectorInner innerModel();

    /** The entirety of the CloudConnector definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The CloudConnector definition stages. */
    interface DefinitionStages {
        /** The first stage of the CloudConnector definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the CloudConnector definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the CloudConnector definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the CloudConnector definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithIdentity,
                DefinitionStages.WithTenantUri,
                DefinitionStages.WithApplicationId,
                DefinitionStages.WithClientSecret,
                DefinitionStages.WithCloudConnections {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            CloudConnector create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            CloudConnector create(Context context);
        }
        /** The stage of the CloudConnector definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the CloudConnector definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identity property..
             *
             * @param identity The identity property.
             * @return the next definition stage.
             */
            WithCreate withIdentity(CloudConnectorIdentity identity);
        }
        /** The stage of the CloudConnector definition allowing to specify tenantUri. */
        interface WithTenantUri {
            /**
             * Specifies the tenantUri property: AAD Tenant URI (containing AAD URI and Directory ID). URI is needed for
             * cloud Identification.
             *
             * @param tenantUri AAD Tenant URI (containing AAD URI and Directory ID). URI is needed for cloud
             *     Identification.
             * @return the next definition stage.
             */
            WithCreate withTenantUri(String tenantUri);
        }
        /** The stage of the CloudConnector definition allowing to specify applicationId. */
        interface WithApplicationId {
            /**
             * Specifies the applicationId property: AAD Application ID (aka Client ID). There can be multiple
             * Applications replicated in the same AAD Tenant..
             *
             * @param applicationId AAD Application ID (aka Client ID). There can be multiple Applications replicated in
             *     the same AAD Tenant.
             * @return the next definition stage.
             */
            WithCreate withApplicationId(String applicationId);
        }
        /** The stage of the CloudConnector definition allowing to specify clientSecret. */
        interface WithClientSecret {
            /**
             * Specifies the clientSecret property: Secret to access the AAD Application ID and Customer KeyVault.
             *
             * @param clientSecret Secret to access the AAD Application ID and Customer KeyVault.
             * @return the next definition stage.
             */
            WithCreate withClientSecret(ClientSecret clientSecret);
        }
        /** The stage of the CloudConnector definition allowing to specify cloudConnections. */
        interface WithCloudConnections {
            /**
             * Specifies the cloudConnections property: List of authorized Resources which have access to this
             * connector.
             *
             * @param cloudConnections List of authorized Resources which have access to this connector.
             * @return the next definition stage.
             */
            WithCreate withCloudConnections(List<ResourceReference> cloudConnections);
        }
    }
    /**
     * Begins update for the CloudConnector resource.
     *
     * @return the stage of resource update.
     */
    CloudConnector.Update update();

    /** The template for CloudConnector update. */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        CloudConnector apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        CloudConnector apply(Context context);
    }
    /** The CloudConnector update stages. */
    interface UpdateStages {
        /** The stage of the CloudConnector update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the CloudConnector update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: The identity property..
             *
             * @param identity The identity property.
             * @return the next definition stage.
             */
            Update withIdentity(CloudConnectorTagsObjectIdentity identity);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    CloudConnector refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    CloudConnector refresh(Context context);

    /**
     * Given the name of a cloud connector find the return a list of the remote cloud resources that are attached to
     * that name.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resource that represents resources found in remote cloud environments along with {@link Response}.
     */
    Response<DiscoverResources> discoverResourcesWithResponse(Context context);

    /**
     * Given the name of a cloud connector find the return a list of the remote cloud resources that are attached to
     * that name.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resource that represents resources found in remote cloud environments.
     */
    DiscoverResources discoverResources();
}

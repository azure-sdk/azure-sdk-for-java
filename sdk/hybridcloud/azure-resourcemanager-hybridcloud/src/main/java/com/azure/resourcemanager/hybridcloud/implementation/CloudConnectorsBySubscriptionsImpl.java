// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcloud.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridcloud.fluent.CloudConnectorsBySubscriptionsClient;
import com.azure.resourcemanager.hybridcloud.fluent.models.CloudConnectorInner;
import com.azure.resourcemanager.hybridcloud.models.CloudConnector;
import com.azure.resourcemanager.hybridcloud.models.CloudConnectorsBySubscriptions;

public final class CloudConnectorsBySubscriptionsImpl implements CloudConnectorsBySubscriptions {
    private static final ClientLogger LOGGER = new ClientLogger(CloudConnectorsBySubscriptionsImpl.class);

    private final CloudConnectorsBySubscriptionsClient innerClient;

    private final com.azure.resourcemanager.hybridcloud.HybridcloudManager serviceManager;

    public CloudConnectorsBySubscriptionsImpl(
        CloudConnectorsBySubscriptionsClient innerClient,
        com.azure.resourcemanager.hybridcloud.HybridcloudManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<CloudConnector> list() {
        PagedIterable<CloudConnectorInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new CloudConnectorImpl(inner1, this.manager()));
    }

    public PagedIterable<CloudConnector> list(Context context) {
        PagedIterable<CloudConnectorInner> inner = this.serviceClient().list(context);
        return Utils.mapPage(inner, inner1 -> new CloudConnectorImpl(inner1, this.manager()));
    }

    private CloudConnectorsBySubscriptionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybridcloud.HybridcloudManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vi.generated;

import com.azure.resourcemanager.vi.models.GenerateAccessTokenParameters;
import com.azure.resourcemanager.vi.models.PermissionType;
import com.azure.resourcemanager.vi.models.Scope;

/** Samples for Generate AccessToken. */
public final class GenerateAccessTokenSamples {
    /*
     * x-ms-original-file: specification/vi/resource-manager/Microsoft.VideoIndexer/stable/2024-01-01/examples/ViGenerateAccessToken/ViGenerateProjectContributerAccessToken.json
     */
    /**
     * Sample code: Generate accessToken for project contributor.
     *
     * @param manager Entry point to ViManager.
     */
    public static void generateAccessTokenForProjectContributor(com.azure.resourcemanager.vi.ViManager manager) {
        manager
            .generates()
            .accessTokenWithResponse(
                "contosto-videoanalyzer-rg",
                "contosto-videoanalyzer",
                new GenerateAccessTokenParameters()
                    .withPermissionType(PermissionType.CONTRIBUTOR)
                    .withScope(Scope.PROJECT)
                    .withProjectId("07ec9e38d4"),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: specification/vi/resource-manager/Microsoft.VideoIndexer/stable/2024-01-01/examples/ViGenerateAccessToken/ViGenerateProjectReaderAccessToken.json
     */
    /**
     * Sample code: Generate accessToken for project reader.
     *
     * @param manager Entry point to ViManager.
     */
    public static void generateAccessTokenForProjectReader(com.azure.resourcemanager.vi.ViManager manager) {
        manager
            .generates()
            .accessTokenWithResponse(
                "contosto-videoanalyzer-rg",
                "contosto-videoanalyzer",
                new GenerateAccessTokenParameters()
                    .withPermissionType(PermissionType.READER)
                    .withScope(Scope.PROJECT)
                    .withProjectId("07ec9e38d4"),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: specification/vi/resource-manager/Microsoft.VideoIndexer/stable/2024-01-01/examples/ViGenerateAccessToken/ViGenerateAccountContributerAccessToken.json
     */
    /**
     * Sample code: Generate accessToken for account contributor.
     *
     * @param manager Entry point to ViManager.
     */
    public static void generateAccessTokenForAccountContributor(com.azure.resourcemanager.vi.ViManager manager) {
        manager
            .generates()
            .accessTokenWithResponse(
                "contosto-videoanalyzer-rg",
                "contosto-videoanalyzer",
                new GenerateAccessTokenParameters()
                    .withPermissionType(PermissionType.CONTRIBUTOR)
                    .withScope(Scope.ACCOUNT),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: specification/vi/resource-manager/Microsoft.VideoIndexer/stable/2024-01-01/examples/ViGenerateAccessToken/ViGenerateAccountReaderAccessToken.json
     */
    /**
     * Sample code: Generate accessToken for account reader.
     *
     * @param manager Entry point to ViManager.
     */
    public static void generateAccessTokenForAccountReader(com.azure.resourcemanager.vi.ViManager manager) {
        manager
            .generates()
            .accessTokenWithResponse(
                "contosto-videoanalyzer-rg",
                "contosto-videoanalyzer",
                new GenerateAccessTokenParameters().withPermissionType(PermissionType.READER).withScope(Scope.ACCOUNT),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: specification/vi/resource-manager/Microsoft.VideoIndexer/stable/2024-01-01/examples/ViGenerateAccessToken/ViGenerateVideoContributerAccessToken.json
     */
    /**
     * Sample code: Generate accessToken for video contributor.
     *
     * @param manager Entry point to ViManager.
     */
    public static void generateAccessTokenForVideoContributor(com.azure.resourcemanager.vi.ViManager manager) {
        manager
            .generates()
            .accessTokenWithResponse(
                "contosto-videoanalyzer-rg",
                "contosto-videoanalyzer",
                new GenerateAccessTokenParameters()
                    .withPermissionType(PermissionType.CONTRIBUTOR)
                    .withScope(Scope.VIDEO)
                    .withVideoId("07ec9e38d4"),
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file: specification/vi/resource-manager/Microsoft.VideoIndexer/stable/2024-01-01/examples/ViGenerateAccessToken/ViGenerateVideoReaderAccessToken.json
     */
    /**
     * Sample code: Generate accessToken for video reader.
     *
     * @param manager Entry point to ViManager.
     */
    public static void generateAccessTokenForVideoReader(com.azure.resourcemanager.vi.ViManager manager) {
        manager
            .generates()
            .accessTokenWithResponse(
                "contosto-videoanalyzer-rg",
                "contosto-videoanalyzer",
                new GenerateAccessTokenParameters()
                    .withPermissionType(PermissionType.READER)
                    .withScope(Scope.VIDEO)
                    .withVideoId("07ec9e38d4"),
                com.azure.core.util.Context.NONE);
    }
}

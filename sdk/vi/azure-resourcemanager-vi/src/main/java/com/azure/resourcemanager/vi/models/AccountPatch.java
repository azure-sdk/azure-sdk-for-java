// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vi.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.vi.fluent.models.AccountPropertiesForPatchRequest;
import java.io.IOException;
import java.util.Map;

/**
 * Azure Video Indexer account.
 */
@Fluent
public final class AccountPatch extends Tags {
    /*
     * List of account properties
     */
    private AccountPropertiesForPatchRequest innerProperties;

    /*
     * Managed service identity (system assigned and/or user assigned identities)
     */
    private ManagedServiceIdentity identity;

    /**
     * Creates an instance of AccountPatch class.
     */
    public AccountPatch() {
    }

    /**
     * Get the innerProperties property: List of account properties.
     * 
     * @return the innerProperties value.
     */
    private AccountPropertiesForPatchRequest innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the identity property: Managed service identity (system assigned and/or user assigned identities).
     * 
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Managed service identity (system assigned and/or user assigned identities).
     * 
     * @param identity the identity value to set.
     * @return the AccountPatch object itself.
     */
    public AccountPatch withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountPatch withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the tenantId property: The account's tenant id.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Get the accountId property: The account's data-plane ID.
     * 
     * @return the accountId value.
     */
    public String accountId() {
        return this.innerProperties() == null ? null : this.innerProperties().accountId();
    }

    /**
     * Get the storageServices property: The storage services details.
     * 
     * @return the storageServices value.
     */
    public StorageServicesForPatchRequest storageServices() {
        return this.innerProperties() == null ? null : this.innerProperties().storageServices();
    }

    /**
     * Set the storageServices property: The storage services details.
     * 
     * @param storageServices the storageServices value to set.
     * @return the AccountPatch object itself.
     */
    public AccountPatch withStorageServices(StorageServicesForPatchRequest storageServices) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AccountPropertiesForPatchRequest();
        }
        this.innerProperties().withStorageServices(storageServices);
        return this;
    }

    /**
     * Get the openAiServices property: The openAi services details.
     * 
     * @return the openAiServices value.
     */
    public OpenAiServicesForPatchRequest openAiServices() {
        return this.innerProperties() == null ? null : this.innerProperties().openAiServices();
    }

    /**
     * Set the openAiServices property: The openAi services details.
     * 
     * @param openAiServices the openAiServices value to set.
     * @return the AccountPatch object itself.
     */
    public AccountPatch withOpenAiServices(OpenAiServicesForPatchRequest openAiServices) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AccountPropertiesForPatchRequest();
        }
        this.innerProperties().withOpenAiServices(openAiServices);
        return this;
    }

    /**
     * Get the provisioningState property: Gets the status of the account at the time the operation was called.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("tags", tags(), (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("properties", this.innerProperties);
        jsonWriter.writeJsonField("identity", this.identity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AccountPatch from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AccountPatch if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AccountPatch.
     */
    public static AccountPatch fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AccountPatch deserializedAccountPatch = new AccountPatch();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedAccountPatch.withTags(tags);
                } else if ("properties".equals(fieldName)) {
                    deserializedAccountPatch.innerProperties = AccountPropertiesForPatchRequest.fromJson(reader);
                } else if ("identity".equals(fieldName)) {
                    deserializedAccountPatch.identity = ManagedServiceIdentity.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAccountPatch;
        });
    }
}

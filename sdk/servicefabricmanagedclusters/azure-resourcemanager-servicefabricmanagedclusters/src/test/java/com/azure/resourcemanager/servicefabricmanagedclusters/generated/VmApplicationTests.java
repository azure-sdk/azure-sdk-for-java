// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.VmApplication;
import org.junit.jupiter.api.Assertions;

public final class VmApplicationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VmApplication model = BinaryData.fromString(
            "{\"configurationReference\":\"lcrpw\",\"enableAutomaticUpgrade\":false,\"order\":879908926,\"packageReferenceId\":\"oi\",\"vmGalleryTags\":\"rnjwmw\",\"treatFailureAsDeploymentFailure\":true}")
            .toObject(VmApplication.class);
        Assertions.assertEquals("lcrpw", model.configurationReference());
        Assertions.assertEquals(false, model.enableAutomaticUpgrade());
        Assertions.assertEquals(879908926, model.order());
        Assertions.assertEquals("oi", model.packageReferenceId());
        Assertions.assertEquals("rnjwmw", model.vmGalleryTags());
        Assertions.assertEquals(true, model.treatFailureAsDeploymentFailure());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VmApplication model = new VmApplication().withConfigurationReference("lcrpw")
            .withEnableAutomaticUpgrade(false)
            .withOrder(879908926)
            .withPackageReferenceId("oi")
            .withVmGalleryTags("rnjwmw")
            .withTreatFailureAsDeploymentFailure(true);
        model = BinaryData.fromObject(model).toObject(VmApplication.class);
        Assertions.assertEquals("lcrpw", model.configurationReference());
        Assertions.assertEquals(false, model.enableAutomaticUpgrade());
        Assertions.assertEquals(879908926, model.order());
        Assertions.assertEquals("oi", model.packageReferenceId());
        Assertions.assertEquals("rnjwmw", model.vmGalleryTags());
        Assertions.assertEquals(true, model.treatFailureAsDeploymentFailure());
    }
}

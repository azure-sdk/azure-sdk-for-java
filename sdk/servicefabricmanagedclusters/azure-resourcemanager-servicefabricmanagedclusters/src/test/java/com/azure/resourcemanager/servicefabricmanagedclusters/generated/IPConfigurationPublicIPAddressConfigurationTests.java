// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.IPConfigurationPublicIPAddressConfiguration;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.IpTag;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.PublicIPAddressVersion;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class IPConfigurationPublicIPAddressConfigurationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        IPConfigurationPublicIPAddressConfiguration model = BinaryData.fromString(
            "{\"name\":\"nzm\",\"ipTags\":[{\"ipTagType\":\"fipns\",\"tag\":\"kmcwaekrrjreafx\"},{\"ipTagType\":\"sgumhjglikkxwsl\",\"tag\":\"lbqpvuzlmvfelf\"}],\"publicIPAddressVersion\":\"IPv6\"}")
            .toObject(IPConfigurationPublicIPAddressConfiguration.class);
        Assertions.assertEquals("nzm", model.name());
        Assertions.assertEquals("fipns", model.ipTags().get(0).ipTagType());
        Assertions.assertEquals("kmcwaekrrjreafx", model.ipTags().get(0).tag());
        Assertions.assertEquals(PublicIPAddressVersion.IPV6, model.publicIPAddressVersion());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        IPConfigurationPublicIPAddressConfiguration model
            = new IPConfigurationPublicIPAddressConfiguration().withName("nzm")
                .withIpTags(Arrays.asList(new IpTag().withIpTagType("fipns").withTag("kmcwaekrrjreafx"),
                    new IpTag().withIpTagType("sgumhjglikkxwsl").withTag("lbqpvuzlmvfelf")))
                .withPublicIPAddressVersion(PublicIPAddressVersion.IPV6);
        model = BinaryData.fromObject(model).toObject(IPConfigurationPublicIPAddressConfiguration.class);
        Assertions.assertEquals("nzm", model.name());
        Assertions.assertEquals("fipns", model.ipTags().get(0).ipTagType());
        Assertions.assertEquals("kmcwaekrrjreafx", model.ipTags().get(0).tag());
        Assertions.assertEquals(PublicIPAddressVersion.IPV6, model.publicIPAddressVersion());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceLoadMetric;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ServiceLoadMetricWeight;
import org.junit.jupiter.api.Assertions;

public final class ServiceLoadMetricTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceLoadMetric model = BinaryData.fromString(
            "{\"name\":\"awjvzunluthnnp\",\"weight\":\"High\",\"primaryDefaultLoad\":1539688741,\"secondaryDefaultLoad\":1381337865,\"defaultLoad\":1073043267}")
            .toObject(ServiceLoadMetric.class);
        Assertions.assertEquals("awjvzunluthnnp", model.name());
        Assertions.assertEquals(ServiceLoadMetricWeight.HIGH, model.weight());
        Assertions.assertEquals(1539688741, model.primaryDefaultLoad());
        Assertions.assertEquals(1381337865, model.secondaryDefaultLoad());
        Assertions.assertEquals(1073043267, model.defaultLoad());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceLoadMetric model = new ServiceLoadMetric().withName("awjvzunluthnnp")
            .withWeight(ServiceLoadMetricWeight.HIGH)
            .withPrimaryDefaultLoad(1539688741)
            .withSecondaryDefaultLoad(1381337865)
            .withDefaultLoad(1073043267);
        model = BinaryData.fromObject(model).toObject(ServiceLoadMetric.class);
        Assertions.assertEquals("awjvzunluthnnp", model.name());
        Assertions.assertEquals(ServiceLoadMetricWeight.HIGH, model.weight());
        Assertions.assertEquals(1539688741, model.primaryDefaultLoad());
        Assertions.assertEquals(1381337865, model.secondaryDefaultLoad());
        Assertions.assertEquals(1073043267, model.defaultLoad());
    }
}

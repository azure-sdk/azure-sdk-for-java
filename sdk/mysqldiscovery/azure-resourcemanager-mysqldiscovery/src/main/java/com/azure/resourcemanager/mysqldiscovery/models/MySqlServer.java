// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqldiscovery.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mysqldiscovery.fluent.models.MySqlServerInner;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of MySqlServer.
 */
public interface MySqlServer {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the hostname property: The Server IP/host name.
     * 
     * @return the hostname value.
     */
    String hostname();

    /**
     * Gets the hostIp property: The Server IP/host name.
     * 
     * @return the hostIp value.
     */
    List<String> hostIp();

    /**
     * Gets the machineId property: discovery Machine Id.
     * 
     * @return the machineId value.
     */
    String machineId();

    /**
     * Gets the portNumber property: MySQL Server port number.
     * 
     * @return the portNumber value.
     */
    String portNumber();

    /**
     * Gets the mysqlVersion property: The mysql server version.
     * 
     * @return the mysqlVersion value.
     */
    String mysqlVersion();

    /**
     * Gets the numberOfDatabase property: The number of database.
     * 
     * @return the numberOfDatabase value.
     */
    Long numberOfDatabase();

    /**
     * Gets the supportStatus property: mysql version support status.
     * 
     * @return the supportStatus value.
     */
    SupportStatus supportStatus();

    /**
     * Gets the edition property: mysql server edition.
     * 
     * @return the edition value.
     */
    Edition edition();

    /**
     * Gets the supportEndIn property: Time when mysql version support end.
     * 
     * @return the supportEndIn value.
     */
    LocalDate supportEndIn();

    /**
     * Gets the errors property: The list of errors.
     * 
     * @return the errors value.
     */
    List<Error> errors();

    /**
     * Gets the provisioningState property: Gets or sets the provisioning state.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the labels property: Resource labels.
     * 
     * @return the labels value.
     */
    Map<String, String> labels();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.mysqldiscovery.fluent.models.MySqlServerInner object.
     * 
     * @return the inner object.
     */
    MySqlServerInner innerModel();

    /**
     * The entirety of the MySqlServer definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithParentResource,
        DefinitionStages.WithHostname, DefinitionStages.WithPortNumber, DefinitionStages.WithCreate {
    }

    /**
     * The MySqlServer definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the MySqlServer definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the MySqlServer definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, siteName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param siteName The name of Site.
             * @return the next definition stage.
             */
            WithHostname withExistingMySQLSite(String resourceGroupName, String siteName);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify hostname.
         */
        interface WithHostname {
            /**
             * Specifies the hostname property: The Server IP/host name..
             * 
             * @param hostname The Server IP/host name.
             * @return the next definition stage.
             */
            WithPortNumber withHostname(String hostname);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify portNumber.
         */
        interface WithPortNumber {
            /**
             * Specifies the portNumber property: MySQL Server port number.
             * 
             * @param portNumber MySQL Server port number.
             * @return the next definition stage.
             */
            WithCreate withPortNumber(String portNumber);
        }

        /**
         * The stage of the MySqlServer definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithHostIp,
            DefinitionStages.WithMachineId, DefinitionStages.WithMysqlVersion, DefinitionStages.WithNumberOfDatabase,
            DefinitionStages.WithSupportStatus, DefinitionStages.WithEdition, DefinitionStages.WithSupportEndIn,
            DefinitionStages.WithErrors, DefinitionStages.WithLabels {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            MySqlServer create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            MySqlServer create(Context context);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify hostIp.
         */
        interface WithHostIp {
            /**
             * Specifies the hostIp property: The Server IP/host name..
             * 
             * @param hostIp The Server IP/host name.
             * @return the next definition stage.
             */
            WithCreate withHostIp(List<String> hostIp);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify machineId.
         */
        interface WithMachineId {
            /**
             * Specifies the machineId property: discovery Machine Id.
             * 
             * @param machineId discovery Machine Id.
             * @return the next definition stage.
             */
            WithCreate withMachineId(String machineId);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify mysqlVersion.
         */
        interface WithMysqlVersion {
            /**
             * Specifies the mysqlVersion property: The mysql server version..
             * 
             * @param mysqlVersion The mysql server version.
             * @return the next definition stage.
             */
            WithCreate withMysqlVersion(String mysqlVersion);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify numberOfDatabase.
         */
        interface WithNumberOfDatabase {
            /**
             * Specifies the numberOfDatabase property: The number of database..
             * 
             * @param numberOfDatabase The number of database.
             * @return the next definition stage.
             */
            WithCreate withNumberOfDatabase(Long numberOfDatabase);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify supportStatus.
         */
        interface WithSupportStatus {
            /**
             * Specifies the supportStatus property: mysql version support status..
             * 
             * @param supportStatus mysql version support status.
             * @return the next definition stage.
             */
            WithCreate withSupportStatus(SupportStatus supportStatus);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify edition.
         */
        interface WithEdition {
            /**
             * Specifies the edition property: mysql server edition..
             * 
             * @param edition mysql server edition.
             * @return the next definition stage.
             */
            WithCreate withEdition(Edition edition);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify supportEndIn.
         */
        interface WithSupportEndIn {
            /**
             * Specifies the supportEndIn property: Time when mysql version support end..
             * 
             * @param supportEndIn Time when mysql version support end.
             * @return the next definition stage.
             */
            WithCreate withSupportEndIn(LocalDate supportEndIn);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify errors.
         */
        interface WithErrors {
            /**
             * Specifies the errors property: The list of errors..
             * 
             * @param errors The list of errors.
             * @return the next definition stage.
             */
            WithCreate withErrors(List<Error> errors);
        }

        /**
         * The stage of the MySqlServer definition allowing to specify labels.
         */
        interface WithLabels {
            /**
             * Specifies the labels property: Resource labels..
             * 
             * @param labels Resource labels.
             * @return the next definition stage.
             */
            WithCreate withLabels(Map<String, String> labels);
        }
    }

    /**
     * Begins update for the MySqlServer resource.
     * 
     * @return the stage of resource update.
     */
    MySqlServer.Update update();

    /**
     * The template for MySqlServer update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithHostname, UpdateStages.WithHostIp,
        UpdateStages.WithMachineId, UpdateStages.WithPortNumber, UpdateStages.WithMysqlVersion,
        UpdateStages.WithNumberOfDatabase, UpdateStages.WithSupportStatus, UpdateStages.WithEdition,
        UpdateStages.WithSupportEndIn, UpdateStages.WithErrors, UpdateStages.WithLabels {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        MySqlServer apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        MySqlServer apply(Context context);
    }

    /**
     * The MySqlServer update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the MySqlServer update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the MySqlServer update allowing to specify hostname.
         */
        interface WithHostname {
            /**
             * Specifies the hostname property: The Server IP/host name..
             * 
             * @param hostname The Server IP/host name.
             * @return the next definition stage.
             */
            Update withHostname(String hostname);
        }

        /**
         * The stage of the MySqlServer update allowing to specify hostIp.
         */
        interface WithHostIp {
            /**
             * Specifies the hostIp property: The Server IP/host name..
             * 
             * @param hostIp The Server IP/host name.
             * @return the next definition stage.
             */
            Update withHostIp(List<String> hostIp);
        }

        /**
         * The stage of the MySqlServer update allowing to specify machineId.
         */
        interface WithMachineId {
            /**
             * Specifies the machineId property: discovery Machine Id.
             * 
             * @param machineId discovery Machine Id.
             * @return the next definition stage.
             */
            Update withMachineId(String machineId);
        }

        /**
         * The stage of the MySqlServer update allowing to specify portNumber.
         */
        interface WithPortNumber {
            /**
             * Specifies the portNumber property: MySQL Server port number.
             * 
             * @param portNumber MySQL Server port number.
             * @return the next definition stage.
             */
            Update withPortNumber(String portNumber);
        }

        /**
         * The stage of the MySqlServer update allowing to specify mysqlVersion.
         */
        interface WithMysqlVersion {
            /**
             * Specifies the mysqlVersion property: The mysql server version..
             * 
             * @param mysqlVersion The mysql server version.
             * @return the next definition stage.
             */
            Update withMysqlVersion(String mysqlVersion);
        }

        /**
         * The stage of the MySqlServer update allowing to specify numberOfDatabase.
         */
        interface WithNumberOfDatabase {
            /**
             * Specifies the numberOfDatabase property: The number of database..
             * 
             * @param numberOfDatabase The number of database.
             * @return the next definition stage.
             */
            Update withNumberOfDatabase(Long numberOfDatabase);
        }

        /**
         * The stage of the MySqlServer update allowing to specify supportStatus.
         */
        interface WithSupportStatus {
            /**
             * Specifies the supportStatus property: mysql version support status..
             * 
             * @param supportStatus mysql version support status.
             * @return the next definition stage.
             */
            Update withSupportStatus(SupportStatus supportStatus);
        }

        /**
         * The stage of the MySqlServer update allowing to specify edition.
         */
        interface WithEdition {
            /**
             * Specifies the edition property: mysql server edition..
             * 
             * @param edition mysql server edition.
             * @return the next definition stage.
             */
            Update withEdition(Edition edition);
        }

        /**
         * The stage of the MySqlServer update allowing to specify supportEndIn.
         */
        interface WithSupportEndIn {
            /**
             * Specifies the supportEndIn property: Time when mysql version support end..
             * 
             * @param supportEndIn Time when mysql version support end.
             * @return the next definition stage.
             */
            Update withSupportEndIn(LocalDate supportEndIn);
        }

        /**
         * The stage of the MySqlServer update allowing to specify errors.
         */
        interface WithErrors {
            /**
             * Specifies the errors property: The list of errors..
             * 
             * @param errors The list of errors.
             * @return the next definition stage.
             */
            Update withErrors(List<Error> errors);
        }

        /**
         * The stage of the MySqlServer update allowing to specify labels.
         */
        interface WithLabels {
            /**
             * Specifies the labels property: Resource labels..
             * 
             * @param labels Resource labels.
             * @return the next definition stage.
             */
            Update withLabels(Map<String, String> labels);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    MySqlServer refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    MySqlServer refresh(Context context);
}

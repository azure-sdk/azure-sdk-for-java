// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqldiscovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mysqldiscovery.fluent.models.MysqlServerInner;
import com.azure.resourcemanager.mysqldiscovery.models.MysqlServerResourcePatch;

/**
 * An instance of this class provides access to all the operations defined in MysqlServersClient.
 */
public interface MysqlServersClient {
    /**
     * Lists the MysqlServers resource in MysqlSites.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Servers as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MysqlServerInner> listBySite(String resourceGroupName, String siteName);

    /**
     * Lists the MysqlServers resource in MysqlSites.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Servers as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MysqlServerInner> listBySite(String resourceGroupName, String siteName, Context context);

    /**
     * Gets the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the MysqlServers resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MysqlServerInner> getWithResponse(String resourceGroupName, String siteName, String serverName,
        Context context);

    /**
     * Gets the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the MysqlServers resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MysqlServerInner get(String resourceGroupName, String siteName, String serverName);

    /**
     * Puts the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param resource The machines to add to the assessment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the MysqlServer resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MysqlServerInner> createOrUpdateWithResponse(String resourceGroupName, String siteName, String serverName,
        MysqlServerInner resource, Context context);

    /**
     * Puts the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param resource The machines to add to the assessment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the MysqlServer resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MysqlServerInner createOrUpdate(String resourceGroupName, String siteName, String serverName,
        MysqlServerInner resource);

    /**
     * Patch the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param properties Clouds patch payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the MysqlServer resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MysqlServerInner>, MysqlServerInner> beginUpdate(String resourceGroupName, String siteName,
        String serverName, MysqlServerResourcePatch properties);

    /**
     * Patch the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param properties Clouds patch payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the MysqlServer resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MysqlServerInner>, MysqlServerInner> beginUpdate(String resourceGroupName, String siteName,
        String serverName, MysqlServerResourcePatch properties, Context context);

    /**
     * Patch the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param properties Clouds patch payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the MysqlServer resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MysqlServerInner update(String resourceGroupName, String siteName, String serverName,
        MysqlServerResourcePatch properties);

    /**
     * Patch the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param properties Clouds patch payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the MysqlServer resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MysqlServerInner update(String resourceGroupName, String siteName, String serverName,
        MysqlServerResourcePatch properties, Context context);

    /**
     * Deletes the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String siteName, String serverName, Context context);

    /**
     * Deletes the MysqlServers resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param siteName The name of Site.
     * @param serverName The name of Server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String siteName, String serverName);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.vision.face.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Options for detectFromUrl API.
 */
@Fluent
public final class DetectFromUrlOptions implements JsonSerializable<DetectFromUrlOptions> {
    /*
     * Return faceIds of the detected faces or not. The default value is true.
     */
    @Generated
    private Boolean returnFaceId;

    /*
     * Return face landmarks of the detected faces or not. The default value is false.
     */
    @Generated
    private Boolean returnFaceLandmarks;

    /*
     * Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost.
     */
    @Generated
    private List<FaceAttributeType> returnFaceAttributes;

    /*
     * The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.
     */
    @Generated
    private FaceRecognitionModel recognitionModel;

    /*
     * Return 'recognitionModel' or not. The default value is false.
     */
    @Generated
    private Boolean returnRecognitionModel;

    /*
     * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.
     */
    @Generated
    private FaceDetectionModel detectionModel;

    /*
     * The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).
     */
    @Generated
    private Integer faceIdTimeToLive;

    /*
     * URL of input image.
     */
    @Generated
    private final String url;

    /**
     * Creates an instance of DetectFromUrlOptions class.
     * 
     * @param url the url value to set.
     */
    @Generated
    public DetectFromUrlOptions(String url) {
        this.url = url;
    }

    /**
     * Get the returnFaceId property: Return faceIds of the detected faces or not. The default value is true.
     * 
     * @return the returnFaceId value.
     */
    @Generated
    public Boolean isReturnFaceId() {
        return this.returnFaceId;
    }

    /**
     * Set the returnFaceId property: Return faceIds of the detected faces or not. The default value is true.
     * 
     * @param returnFaceId the returnFaceId value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setReturnFaceId(Boolean returnFaceId) {
        this.returnFaceId = returnFaceId;
        return this;
    }

    /**
     * Get the returnFaceLandmarks property: Return face landmarks of the detected faces or not. The default value is
     * false.
     * 
     * @return the returnFaceLandmarks value.
     */
    @Generated
    public Boolean isReturnFaceLandmarks() {
        return this.returnFaceLandmarks;
    }

    /**
     * Set the returnFaceLandmarks property: Return face landmarks of the detected faces or not. The default value is
     * false.
     * 
     * @param returnFaceLandmarks the returnFaceLandmarks value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setReturnFaceLandmarks(Boolean returnFaceLandmarks) {
        this.returnFaceLandmarks = returnFaceLandmarks;
        return this;
    }

    /**
     * Get the returnFaceAttributes property: Analyze and return the one or more specified face attributes in the
     * comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional
     * computational and time cost.
     * 
     * @return the returnFaceAttributes value.
     */
    @Generated
    public List<FaceAttributeType> getReturnFaceAttributes() {
        return this.returnFaceAttributes;
    }

    /**
     * Set the returnFaceAttributes property: Analyze and return the one or more specified face attributes in the
     * comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional
     * computational and time cost.
     * 
     * @param returnFaceAttributes the returnFaceAttributes value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setReturnFaceAttributes(List<FaceAttributeType> returnFaceAttributes) {
        this.returnFaceAttributes = returnFaceAttributes;
        return this;
    }

    /**
     * Get the recognitionModel property: The 'recognitionModel' associated with the detected faceIds. Supported
     * 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The
     * default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces
     * wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01'
     * and 'recognition_02'.
     * 
     * @return the recognitionModel value.
     */
    @Generated
    public FaceRecognitionModel getRecognitionModel() {
        return this.recognitionModel;
    }

    /**
     * Set the recognitionModel property: The 'recognitionModel' associated with the detected faceIds. Supported
     * 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The
     * default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces
     * wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01'
     * and 'recognition_02'.
     * 
     * @param recognitionModel the recognitionModel value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setRecognitionModel(FaceRecognitionModel recognitionModel) {
        this.recognitionModel = recognitionModel;
        return this;
    }

    /**
     * Get the returnRecognitionModel property: Return 'recognitionModel' or not. The default value is false.
     * 
     * @return the returnRecognitionModel value.
     */
    @Generated
    public Boolean isReturnRecognitionModel() {
        return this.returnRecognitionModel;
    }

    /**
     * Set the returnRecognitionModel property: Return 'recognitionModel' or not. The default value is false.
     * 
     * @param returnRecognitionModel the returnRecognitionModel value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setReturnRecognitionModel(Boolean returnRecognitionModel) {
        this.returnRecognitionModel = returnRecognitionModel;
        return this;
    }

    /**
     * Get the detectionModel property: The 'detectionModel' associated with the detected faceIds. Supported
     * 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is
     * 'detection_01'.
     * 
     * @return the detectionModel value.
     */
    @Generated
    public FaceDetectionModel getDetectionModel() {
        return this.detectionModel;
    }

    /**
     * Set the detectionModel property: The 'detectionModel' associated with the detected faceIds. Supported
     * 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is
     * 'detection_01'.
     * 
     * @param detectionModel the detectionModel value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setDetectionModel(FaceDetectionModel detectionModel) {
        this.detectionModel = detectionModel;
        return this;
    }

    /**
     * Get the faceIdTimeToLive property: The number of seconds for the face ID being cached. Supported range from 60
     * seconds up to 86400 seconds. The default value is 86400 (24 hours).
     * 
     * @return the faceIdTimeToLive value.
     */
    @Generated
    public Integer getFaceIdTimeToLive() {
        return this.faceIdTimeToLive;
    }

    /**
     * Set the faceIdTimeToLive property: The number of seconds for the face ID being cached. Supported range from 60
     * seconds up to 86400 seconds. The default value is 86400 (24 hours).
     * 
     * @param faceIdTimeToLive the faceIdTimeToLive value to set.
     * @return the DetectFromUrlOptions object itself.
     */
    @Generated
    public DetectFromUrlOptions setFaceIdTimeToLive(Integer faceIdTimeToLive) {
        this.faceIdTimeToLive = faceIdTimeToLive;
        return this;
    }

    /**
     * Get the url property: URL of input image.
     * 
     * @return the url value.
     */
    @Generated
    public String getUrl() {
        return this.url;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("url", this.url);
        jsonWriter.writeBooleanField("returnFaceId", this.returnFaceId);
        jsonWriter.writeBooleanField("returnFaceLandmarks", this.returnFaceLandmarks);
        jsonWriter.writeArrayField("returnFaceAttributes", this.returnFaceAttributes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeStringField("recognitionModel",
            this.recognitionModel == null ? null : this.recognitionModel.toString());
        jsonWriter.writeBooleanField("returnRecognitionModel", this.returnRecognitionModel);
        jsonWriter.writeStringField("detectionModel",
            this.detectionModel == null ? null : this.detectionModel.toString());
        jsonWriter.writeNumberField("faceIdTimeToLive", this.faceIdTimeToLive);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DetectFromUrlOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DetectFromUrlOptions if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DetectFromUrlOptions.
     */
    @Generated
    public static DetectFromUrlOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String url = null;
            Boolean returnFaceId = null;
            Boolean returnFaceLandmarks = null;
            List<FaceAttributeType> returnFaceAttributes = null;
            FaceRecognitionModel recognitionModel = null;
            Boolean returnRecognitionModel = null;
            FaceDetectionModel detectionModel = null;
            Integer faceIdTimeToLive = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("url".equals(fieldName)) {
                    url = reader.getString();
                } else if ("returnFaceId".equals(fieldName)) {
                    returnFaceId = reader.getNullable(JsonReader::getBoolean);
                } else if ("returnFaceLandmarks".equals(fieldName)) {
                    returnFaceLandmarks = reader.getNullable(JsonReader::getBoolean);
                } else if ("returnFaceAttributes".equals(fieldName)) {
                    returnFaceAttributes
                        = reader.readArray(reader1 -> FaceAttributeType.fromString(reader1.getString()));
                } else if ("recognitionModel".equals(fieldName)) {
                    recognitionModel = FaceRecognitionModel.fromString(reader.getString());
                } else if ("returnRecognitionModel".equals(fieldName)) {
                    returnRecognitionModel = reader.getNullable(JsonReader::getBoolean);
                } else if ("detectionModel".equals(fieldName)) {
                    detectionModel = FaceDetectionModel.fromString(reader.getString());
                } else if ("faceIdTimeToLive".equals(fieldName)) {
                    faceIdTimeToLive = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }
            DetectFromUrlOptions deserializedDetectFromUrlOptions = new DetectFromUrlOptions(url);
            deserializedDetectFromUrlOptions.returnFaceId = returnFaceId;
            deserializedDetectFromUrlOptions.returnFaceLandmarks = returnFaceLandmarks;
            deserializedDetectFromUrlOptions.returnFaceAttributes = returnFaceAttributes;
            deserializedDetectFromUrlOptions.recognitionModel = recognitionModel;
            deserializedDetectFromUrlOptions.returnRecognitionModel = returnRecognitionModel;
            deserializedDetectFromUrlOptions.detectionModel = detectionModel;
            deserializedDetectFromUrlOptions.faceIdTimeToLive = faceIdTimeToLive;

            return deserializedDetectFromUrlOptions;
        });
    }
}

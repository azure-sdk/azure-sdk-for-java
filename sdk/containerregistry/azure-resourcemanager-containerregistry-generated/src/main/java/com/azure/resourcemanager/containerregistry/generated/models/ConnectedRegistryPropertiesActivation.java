// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ConnectedRegistryPropertiesActivation model.
 */
@Immutable
public final class ConnectedRegistryPropertiesActivation extends ActivationProperties {
    /*
     * The activation status of the connected registry.
     */
    private ActivationStatus status;

    /**
     * Creates an instance of ConnectedRegistryPropertiesActivation class.
     */
    public ConnectedRegistryPropertiesActivation() {
    }

    /**
     * Get the status property: The activation status of the connected registry.
     * 
     * @return the status value.
     */
    @Override
    public ActivationStatus status() {
        return this.status;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConnectedRegistryPropertiesActivation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConnectedRegistryPropertiesActivation if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ConnectedRegistryPropertiesActivation.
     */
    public static ConnectedRegistryPropertiesActivation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ConnectedRegistryPropertiesActivation deserializedConnectedRegistryPropertiesActivation
                = new ConnectedRegistryPropertiesActivation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedConnectedRegistryPropertiesActivation.status
                        = ActivationStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConnectedRegistryPropertiesActivation;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.containerregistry.generated.models.ArtifactSyncEstimateResult;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The result of a request to check the cache rule artifact sync estimate.
 */
@Fluent
public final class CacheRuleArtifactSyncEstimateResultInner {
    /*
     * The name of the repository.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The total count of results belonging to the repository.
     */
    @JsonProperty(value = "totalCount")
    private Integer totalCount;

    /*
     * The filtered count of results after processing the query.
     */
    @JsonProperty(value = "filteredCount")
    private Integer filteredCount;

    /*
     * A sample of results processed by the query.
     */
    @JsonProperty(value = "results")
    private List<ArtifactSyncEstimateResult> results;

    /**
     * Creates an instance of CacheRuleArtifactSyncEstimateResultInner class.
     */
    public CacheRuleArtifactSyncEstimateResultInner() {
    }

    /**
     * Get the name property: The name of the repository.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the repository.
     * 
     * @param name the name value to set.
     * @return the CacheRuleArtifactSyncEstimateResultInner object itself.
     */
    public CacheRuleArtifactSyncEstimateResultInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the totalCount property: The total count of results belonging to the repository.
     * 
     * @return the totalCount value.
     */
    public Integer totalCount() {
        return this.totalCount;
    }

    /**
     * Set the totalCount property: The total count of results belonging to the repository.
     * 
     * @param totalCount the totalCount value to set.
     * @return the CacheRuleArtifactSyncEstimateResultInner object itself.
     */
    public CacheRuleArtifactSyncEstimateResultInner withTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }

    /**
     * Get the filteredCount property: The filtered count of results after processing the query.
     * 
     * @return the filteredCount value.
     */
    public Integer filteredCount() {
        return this.filteredCount;
    }

    /**
     * Set the filteredCount property: The filtered count of results after processing the query.
     * 
     * @param filteredCount the filteredCount value to set.
     * @return the CacheRuleArtifactSyncEstimateResultInner object itself.
     */
    public CacheRuleArtifactSyncEstimateResultInner withFilteredCount(Integer filteredCount) {
        this.filteredCount = filteredCount;
        return this;
    }

    /**
     * Get the results property: A sample of results processed by the query.
     * 
     * @return the results value.
     */
    public List<ArtifactSyncEstimateResult> results() {
        return this.results;
    }

    /**
     * Set the results property: A sample of results processed by the query.
     * 
     * @param results the results value to set.
     * @return the CacheRuleArtifactSyncEstimateResultInner object itself.
     */
    public CacheRuleArtifactSyncEstimateResultInner withResults(List<ArtifactSyncEstimateResult> results) {
        this.results = results;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (results() != null) {
            results().forEach(e -> e.validate());
        }
    }
}

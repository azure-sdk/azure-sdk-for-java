// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerregistry.generated.fluent.models.ArchiveInner;
import com.azure.resourcemanager.containerregistry.generated.models.Archive;
import com.azure.resourcemanager.containerregistry.generated.models.ArchiveProperties;
import com.azure.resourcemanager.containerregistry.generated.models.ArchiveUpdateParameters;

public final class ArchiveImpl implements Archive, Archive.Definition, Archive.Update {
    private ArchiveInner innerObject;

    private final com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ArchiveProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ArchiveInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registryName;

    private String packageType;

    private String archiveName;

    private ArchiveUpdateParameters updateArchiveUpdateParameters;

    public ArchiveImpl withExistingPackage(String resourceGroupName, String registryName, String packageType) {
        this.resourceGroupName = resourceGroupName;
        this.registryName = registryName;
        this.packageType = packageType;
        return this;
    }

    public Archive create() {
        this.innerObject = serviceManager.serviceClient().getArchives().create(resourceGroupName, registryName,
            packageType, archiveName, this.innerModel(), Context.NONE);
        return this;
    }

    public Archive create(Context context) {
        this.innerObject = serviceManager.serviceClient().getArchives().create(resourceGroupName, registryName,
            packageType, archiveName, this.innerModel(), context);
        return this;
    }

    ArchiveImpl(String name,
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager serviceManager) {
        this.innerObject = new ArchiveInner();
        this.serviceManager = serviceManager;
        this.archiveName = name;
    }

    public ArchiveImpl update() {
        this.updateArchiveUpdateParameters = new ArchiveUpdateParameters();
        return this;
    }

    public Archive apply() {
        this.innerObject = serviceManager.serviceClient().getArchives().updateWithResponse(resourceGroupName,
            registryName, packageType, archiveName, updateArchiveUpdateParameters, Context.NONE).getValue();
        return this;
    }

    public Archive apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getArchives().updateWithResponse(resourceGroupName,
            registryName, packageType, archiveName, updateArchiveUpdateParameters, context).getValue();
        return this;
    }

    ArchiveImpl(ArchiveInner innerObject,
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registryName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "registries");
        this.packageType = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "packages");
        this.archiveName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "archives");
    }

    public Archive refresh() {
        this.innerObject = serviceManager.serviceClient().getArchives()
            .getWithResponse(resourceGroupName, registryName, packageType, archiveName, Context.NONE).getValue();
        return this;
    }

    public Archive refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getArchives()
            .getWithResponse(resourceGroupName, registryName, packageType, archiveName, context).getValue();
        return this;
    }

    public ArchiveImpl withProperties(ArchiveProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public ArchiveImpl withPublishedVersion(String publishedVersion) {
        this.updateArchiveUpdateParameters.withPublishedVersion(publishedVersion);
        return this;
    }
}

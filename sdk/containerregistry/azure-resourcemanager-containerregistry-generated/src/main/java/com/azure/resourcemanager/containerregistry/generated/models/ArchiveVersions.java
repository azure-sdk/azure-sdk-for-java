// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ArchiveVersions.
 */
public interface ArchiveVersions {
    /**
     * Gets the properties of the archive version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param archiveVersionName The name of the archive version resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the archive version along with {@link Response}.
     */
    Response<ArchiveVersion> getWithResponse(String resourceGroupName, String registryName, String packageType,
        String archiveName, String archiveVersionName, Context context);

    /**
     * Gets the properties of the archive version.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param archiveVersionName The name of the archive version resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the archive version.
     */
    ArchiveVersion get(String resourceGroupName, String registryName, String packageType, String archiveName,
        String archiveVersionName);

    /**
     * Creates a archive for a container registry with the specified parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param archiveVersionName The name of the archive version resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents an export pipeline for a container registry.
     */
    ArchiveVersion create(String resourceGroupName, String registryName, String packageType, String archiveName,
        String archiveVersionName);

    /**
     * Creates a archive for a container registry with the specified parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param archiveVersionName The name of the archive version resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents an export pipeline for a container registry.
     */
    ArchiveVersion create(String resourceGroupName, String registryName, String packageType, String archiveName,
        String archiveVersionName, Context context);

    /**
     * Deletes a archive version from a container registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param archiveVersionName The name of the archive version resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String registryName, String packageType, String archiveName,
        String archiveVersionName);

    /**
     * Deletes a archive version from a container registry.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param archiveVersionName The name of the archive version resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String registryName, String packageType, String archiveName,
        String archiveVersionName, Context context);

    /**
     * Lists all archive versions for the specified container registry, repository type and archive name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a request to list export pipelines for a container registry as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ArchiveVersion> list(String resourceGroupName, String registryName, String packageType,
        String archiveName);

    /**
     * Lists all archive versions for the specified container registry, repository type and archive name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param registryName The name of the container registry.
     * @param packageType The type of the repository resource.
     * @param archiveName The name of the archive resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a request to list export pipelines for a container registry as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<ArchiveVersion> list(String resourceGroupName, String registryName, String packageType,
        String archiveName, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mysqlflexibleserver.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.mysqlflexibleserver.models.ServerEditionCapability;
import com.azure.resourcemanager.mysqlflexibleserver.models.ServerVersionCapability;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Location capabilities. */
@Immutable
public final class CapabilityPropertiesInner {
    /*
     * supported geo backup regions
     */
    @JsonProperty(value = "supportedGeoBackupRegions", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> supportedGeoBackupRegions;

    /*
     * A list of supported flexible server editions.
     */
    @JsonProperty(value = "supportedFlexibleServerEditions", access = JsonProperty.Access.WRITE_ONLY)
    private List<ServerEditionCapability> supportedFlexibleServerEditions;

    /*
     * A list of supported server versions.
     */
    @JsonProperty(value = "supportedServerVersions", access = JsonProperty.Access.WRITE_ONLY)
    private List<ServerVersionCapability> supportedServerVersions;

    /** Creates an instance of CapabilityPropertiesInner class. */
    public CapabilityPropertiesInner() {
    }

    /**
     * Get the supportedGeoBackupRegions property: supported geo backup regions.
     *
     * @return the supportedGeoBackupRegions value.
     */
    public List<String> supportedGeoBackupRegions() {
        return this.supportedGeoBackupRegions;
    }

    /**
     * Get the supportedFlexibleServerEditions property: A list of supported flexible server editions.
     *
     * @return the supportedFlexibleServerEditions value.
     */
    public List<ServerEditionCapability> supportedFlexibleServerEditions() {
        return this.supportedFlexibleServerEditions;
    }

    /**
     * Get the supportedServerVersions property: A list of supported server versions.
     *
     * @return the supportedServerVersions value.
     */
    public List<ServerVersionCapability> supportedServerVersions() {
        return this.supportedServerVersions;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (supportedFlexibleServerEditions() != null) {
            supportedFlexibleServerEditions().forEach(e -> e.validate());
        }
        if (supportedServerVersions() != null) {
            supportedServerVersions().forEach(e -> e.validate());
        }
    }
}

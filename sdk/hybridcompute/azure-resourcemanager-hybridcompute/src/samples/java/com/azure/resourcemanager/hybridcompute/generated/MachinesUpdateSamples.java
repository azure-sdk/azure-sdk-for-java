// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.generated;

import com.azure.resourcemanager.hybridcompute.models.AssessmentModeTypes;
import com.azure.resourcemanager.hybridcompute.models.Identity;
import com.azure.resourcemanager.hybridcompute.models.LocationData;
import com.azure.resourcemanager.hybridcompute.models.Machine;
import com.azure.resourcemanager.hybridcompute.models.OSProfile;
import com.azure.resourcemanager.hybridcompute.models.OSProfileLinuxConfiguration;
import com.azure.resourcemanager.hybridcompute.models.OSProfileWindowsConfiguration;
import com.azure.resourcemanager.hybridcompute.models.PatchModeTypes;
import com.azure.resourcemanager.hybridcompute.models.ResourceIdentityType;

/**
 * Samples for Machines Update.
 */
public final class MachinesUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/hybridcompute/resource-manager/Microsoft.HybridCompute/preview/2023-10-03-preview/examples/machine/
     * Machines_Update.json
     */
    /**
     * Sample code: Update a Machine.
     * 
     * @param manager Entry point to HybridComputeManager.
     */
    public static void updateAMachine(com.azure.resourcemanager.hybridcompute.HybridComputeManager manager) {
        Machine resource = manager.machines()
            .getByResourceGroupWithResponse("myResourceGroup", "myMachine", null, com.azure.core.util.Context.NONE)
            .getValue();
        resource.update().withIdentity(new Identity().withType(ResourceIdentityType.SYSTEM_ASSIGNED))
            .withLocationData(new LocationData().withName("Redmond"))
            .withOsProfile(new OSProfile()
                .withWindowsConfiguration(new OSProfileWindowsConfiguration()
                    .withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT).withPatchMode(PatchModeTypes.MANUAL))
                .withLinuxConfiguration(new OSProfileLinuxConfiguration()
                    .withAssessmentMode(AssessmentModeTypes.IMAGE_DEFAULT).withPatchMode(PatchModeTypes.MANUAL)))
            .withParentClusterResourceId("{AzureStackHCIResourceId}")
            .withPrivateLinkScopeResourceId(
                "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.HybridCompute/privateLinkScopes/privateLinkScopeName")
            .apply();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.hybridcompute.models.LicenseProfileSubscriptionStatus;
import com.azure.resourcemanager.hybridcompute.models.ProductFeature;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Describes the properties of a Windows IoT Enterprise License Profile ARM model. */
@Fluent
public final class LicenseProfileArmIoTEnterpriseProperties {
    /*
     * Indicates the subscription status of the Windows IoT Enterprise.
     */
    @JsonProperty(value = "subscriptionStatus")
    private LicenseProfileSubscriptionStatus subscriptionStatus;

    /*
     * The timestamp in UTC when the billing starts.
     */
    @JsonProperty(value = "billingStartDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime billingStartDate;

    /*
     * The timestamp in UTC when the user disenrolled the feature.
     */
    @JsonProperty(value = "disenrollmentDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime disenrollmentDate;

    /*
     * The list of product features.
     */
    @JsonProperty(value = "productFeatures")
    private List<ProductFeature> productFeatures;

    /** Creates an instance of LicenseProfileArmIoTEnterpriseProperties class. */
    public LicenseProfileArmIoTEnterpriseProperties() {
    }

    /**
     * Get the subscriptionStatus property: Indicates the subscription status of the Windows IoT Enterprise.
     *
     * @return the subscriptionStatus value.
     */
    public LicenseProfileSubscriptionStatus subscriptionStatus() {
        return this.subscriptionStatus;
    }

    /**
     * Set the subscriptionStatus property: Indicates the subscription status of the Windows IoT Enterprise.
     *
     * @param subscriptionStatus the subscriptionStatus value to set.
     * @return the LicenseProfileArmIoTEnterpriseProperties object itself.
     */
    public LicenseProfileArmIoTEnterpriseProperties withSubscriptionStatus(
        LicenseProfileSubscriptionStatus subscriptionStatus) {
        this.subscriptionStatus = subscriptionStatus;
        return this;
    }

    /**
     * Get the billingStartDate property: The timestamp in UTC when the billing starts.
     *
     * @return the billingStartDate value.
     */
    public OffsetDateTime billingStartDate() {
        return this.billingStartDate;
    }

    /**
     * Get the disenrollmentDate property: The timestamp in UTC when the user disenrolled the feature.
     *
     * @return the disenrollmentDate value.
     */
    public OffsetDateTime disenrollmentDate() {
        return this.disenrollmentDate;
    }

    /**
     * Get the productFeatures property: The list of product features.
     *
     * @return the productFeatures value.
     */
    public List<ProductFeature> productFeatures() {
        return this.productFeatures;
    }

    /**
     * Set the productFeatures property: The list of product features.
     *
     * @param productFeatures the productFeatures value to set.
     * @return the LicenseProfileArmIoTEnterpriseProperties object itself.
     */
    public LicenseProfileArmIoTEnterpriseProperties withProductFeatures(List<ProductFeature> productFeatures) {
        this.productFeatures = productFeatures;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (productFeatures() != null) {
            productFeatures().forEach(e -> e.validate());
        }
    }
}

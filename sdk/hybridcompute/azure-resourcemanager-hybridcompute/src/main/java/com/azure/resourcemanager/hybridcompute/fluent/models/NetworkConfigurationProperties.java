// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybridcompute.models.KeyProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Network configuration properties. */
@Fluent
public final class NetworkConfigurationProperties {
    /*
     * Resource location
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Azure resource tenant Id
     */
    @JsonProperty(value = "tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String tenantId;

    /*
     * Associated Network Configuration Scope Id (GUID)
     */
    @JsonProperty(value = "networkConfigurationScopeId")
    private String networkConfigurationScopeId;

    /*
     * Associated Network Configuration Scope Resource Id
     */
    @JsonProperty(value = "networkConfigurationScopeResourceId", required = true)
    private String networkConfigurationScopeResourceId;

    /*
     * Public key information for client authentication
     */
    @JsonProperty(value = "keyProperties", access = JsonProperty.Access.WRITE_ONLY)
    private KeyProperties keyProperties;

    /** Creates an instance of NetworkConfigurationProperties class. */
    public NetworkConfigurationProperties() {
    }

    /**
     * Get the location property: Resource location.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Resource location.
     *
     * @param location the location value to set.
     * @return the NetworkConfigurationProperties object itself.
     */
    public NetworkConfigurationProperties withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the tenantId property: Azure resource tenant Id.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Get the networkConfigurationScopeId property: Associated Network Configuration Scope Id (GUID).
     *
     * @return the networkConfigurationScopeId value.
     */
    public String networkConfigurationScopeId() {
        return this.networkConfigurationScopeId;
    }

    /**
     * Set the networkConfigurationScopeId property: Associated Network Configuration Scope Id (GUID).
     *
     * @param networkConfigurationScopeId the networkConfigurationScopeId value to set.
     * @return the NetworkConfigurationProperties object itself.
     */
    public NetworkConfigurationProperties withNetworkConfigurationScopeId(String networkConfigurationScopeId) {
        this.networkConfigurationScopeId = networkConfigurationScopeId;
        return this;
    }

    /**
     * Get the networkConfigurationScopeResourceId property: Associated Network Configuration Scope Resource Id.
     *
     * @return the networkConfigurationScopeResourceId value.
     */
    public String networkConfigurationScopeResourceId() {
        return this.networkConfigurationScopeResourceId;
    }

    /**
     * Set the networkConfigurationScopeResourceId property: Associated Network Configuration Scope Resource Id.
     *
     * @param networkConfigurationScopeResourceId the networkConfigurationScopeResourceId value to set.
     * @return the NetworkConfigurationProperties object itself.
     */
    public NetworkConfigurationProperties withNetworkConfigurationScopeResourceId(
        String networkConfigurationScopeResourceId) {
        this.networkConfigurationScopeResourceId = networkConfigurationScopeResourceId;
        return this;
    }

    /**
     * Get the keyProperties property: Public key information for client authentication.
     *
     * @return the keyProperties value.
     */
    public KeyProperties keyProperties() {
        return this.keyProperties;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (networkConfigurationScopeResourceId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property networkConfigurationScopeResourceId in model"
                            + " NetworkConfigurationProperties"));
        }
        if (keyProperties() != null) {
            keyProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(NetworkConfigurationProperties.class);
}

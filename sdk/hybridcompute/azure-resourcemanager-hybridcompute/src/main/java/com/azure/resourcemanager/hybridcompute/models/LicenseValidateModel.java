// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcompute.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.hybridcompute.fluent.models.LicenseProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes a license in a hybrid machine, as needed for the validation api.
 */
@Fluent
public final class LicenseValidateModel {
    /*
     * The name of the resource
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The geo-location where the resource lives
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Hybrid Compute License properties
     */
    @JsonProperty(value = "properties")
    private LicenseProperties innerProperties;

    /**
     * Creates an instance of LicenseValidateModel class.
     */
    public LicenseValidateModel() {
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the resource.
     * 
     * @param name the name value to set.
     * @return the LicenseValidateModel object itself.
     */
    public LicenseValidateModel withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The geo-location where the resource lives.
     * 
     * @param location the location value to set.
     * @return the LicenseValidateModel object itself.
     */
    public LicenseValidateModel withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the innerProperties property: Hybrid Compute License properties.
     * 
     * @return the innerProperties value.
     */
    private LicenseProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the provisioningState property: The provisioning state, which only appears in the response.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the tenantId property: Describes the tenant id.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Set the tenantId property: Describes the tenant id.
     * 
     * @param tenantId the tenantId value to set.
     * @return the LicenseValidateModel object itself.
     */
    public LicenseValidateModel withTenantId(String tenantId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new LicenseProperties();
        }
        this.innerProperties().withTenantId(tenantId);
        return this;
    }

    /**
     * Get the licenseType property: The type of the license resource.
     * 
     * @return the licenseType value.
     */
    public LicenseType licenseType() {
        return this.innerProperties() == null ? null : this.innerProperties().licenseType();
    }

    /**
     * Set the licenseType property: The type of the license resource.
     * 
     * @param licenseType the licenseType value to set.
     * @return the LicenseValidateModel object itself.
     */
    public LicenseValidateModel withLicenseType(LicenseType licenseType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new LicenseProperties();
        }
        this.innerProperties().withLicenseType(licenseType);
        return this;
    }

    /**
     * Get the licenseDetails property: Describes the properties of a License.
     * 
     * @return the licenseDetails value.
     */
    public LicenseDetails licenseDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().licenseDetails();
    }

    /**
     * Set the licenseDetails property: Describes the properties of a License.
     * 
     * @param licenseDetails the licenseDetails value to set.
     * @return the LicenseValidateModel object itself.
     */
    public LicenseValidateModel withLicenseDetails(LicenseDetails licenseDetails) {
        if (this.innerProperties() == null) {
            this.innerProperties = new LicenseProperties();
        }
        this.innerProperties().withLicenseDetails(licenseDetails);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

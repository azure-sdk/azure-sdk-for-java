// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iotfirmwaredefense.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Activities for which the cryptographic certificate can be used.
 */
public final class CertificateUsage extends ExpandableStringEnum<CertificateUsage> {
    /**
     * Static value digitalSignature for CertificateUsage.
     */
    public static final CertificateUsage DIGITAL_SIGNATURE = fromString("digitalSignature");

    /**
     * Static value nonRepudiation for CertificateUsage.
     */
    public static final CertificateUsage NON_REPUDIATION = fromString("nonRepudiation");

    /**
     * Static value contentCommitment for CertificateUsage.
     */
    public static final CertificateUsage CONTENT_COMMITMENT = fromString("contentCommitment");

    /**
     * Static value keyEncipherment for CertificateUsage.
     */
    public static final CertificateUsage KEY_ENCIPHERMENT = fromString("keyEncipherment");

    /**
     * Static value dataEncipherment for CertificateUsage.
     */
    public static final CertificateUsage DATA_ENCIPHERMENT = fromString("dataEncipherment");

    /**
     * Static value keyAgreement for CertificateUsage.
     */
    public static final CertificateUsage KEY_AGREEMENT = fromString("keyAgreement");

    /**
     * Static value keyCertSign for CertificateUsage.
     */
    public static final CertificateUsage KEY_CERT_SIGN = fromString("keyCertSign");

    /**
     * Static value crlSign for CertificateUsage.
     */
    public static final CertificateUsage CRL_SIGN = fromString("crlSign");

    /**
     * Static value encipherOnly for CertificateUsage.
     */
    public static final CertificateUsage ENCIPHER_ONLY = fromString("encipherOnly");

    /**
     * Static value decipherOnly for CertificateUsage.
     */
    public static final CertificateUsage DECIPHER_ONLY = fromString("decipherOnly");

    /**
     * Static value serverAuth for CertificateUsage.
     */
    public static final CertificateUsage SERVER_AUTH = fromString("serverAuth");

    /**
     * Static value clientAuth for CertificateUsage.
     */
    public static final CertificateUsage CLIENT_AUTH = fromString("clientAuth");

    /**
     * Static value codeSigning for CertificateUsage.
     */
    public static final CertificateUsage CODE_SIGNING = fromString("codeSigning");

    /**
     * Static value emailProtection for CertificateUsage.
     */
    public static final CertificateUsage EMAIL_PROTECTION = fromString("emailProtection");

    /**
     * Static value timeStamping for CertificateUsage.
     */
    public static final CertificateUsage TIME_STAMPING = fromString("timeStamping");

    /**
     * Static value ocspSigning for CertificateUsage.
     */
    public static final CertificateUsage OCSP_SIGNING = fromString("ocspSigning");

    /**
     * Creates a new instance of CertificateUsage value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public CertificateUsage() {
    }

    /**
     * Creates or finds a CertificateUsage from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding CertificateUsage.
     */
    public static CertificateUsage fromString(String name) {
        return fromString(name, CertificateUsage.class);
    }

    /**
     * Gets known CertificateUsage values.
     * 
     * @return known CertificateUsage values.
     */
    public static Collection<CertificateUsage> values() {
        return values(CertificateUsage.class);
    }
}

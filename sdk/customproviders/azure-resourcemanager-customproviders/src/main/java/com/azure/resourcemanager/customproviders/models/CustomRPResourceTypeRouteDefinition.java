// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The route definition for a resource implemented by the custom resource provider.
 */
@Fluent
public final class CustomRPResourceTypeRouteDefinition extends CustomRPRouteDefinition {
    /*
     * The routing types that are supported for resource requests.
     */
    private ResourceTypeRouting routingType;

    /**
     * Creates an instance of CustomRPResourceTypeRouteDefinition class.
     */
    public CustomRPResourceTypeRouteDefinition() {
    }

    /**
     * Get the routingType property: The routing types that are supported for resource requests.
     * 
     * @return the routingType value.
     */
    public ResourceTypeRouting routingType() {
        return this.routingType;
    }

    /**
     * Set the routingType property: The routing types that are supported for resource requests.
     * 
     * @param routingType the routingType value to set.
     * @return the CustomRPResourceTypeRouteDefinition object itself.
     */
    public CustomRPResourceTypeRouteDefinition withRoutingType(ResourceTypeRouting routingType) {
        this.routingType = routingType;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomRPResourceTypeRouteDefinition withName(String name) {
        super.withName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomRPResourceTypeRouteDefinition withEndpoint(String endpoint) {
        super.withEndpoint(endpoint);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (name() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property name in model CustomRPResourceTypeRouteDefinition"));
        }
        if (endpoint() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property endpoint in model CustomRPResourceTypeRouteDefinition"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CustomRPResourceTypeRouteDefinition.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", name());
        jsonWriter.writeStringField("endpoint", endpoint());
        jsonWriter.writeStringField("routingType", this.routingType == null ? null : this.routingType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomRPResourceTypeRouteDefinition from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomRPResourceTypeRouteDefinition if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomRPResourceTypeRouteDefinition.
     */
    public static CustomRPResourceTypeRouteDefinition fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomRPResourceTypeRouteDefinition deserializedCustomRPResourceTypeRouteDefinition
                = new CustomRPResourceTypeRouteDefinition();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedCustomRPResourceTypeRouteDefinition.withName(reader.getString());
                } else if ("endpoint".equals(fieldName)) {
                    deserializedCustomRPResourceTypeRouteDefinition.withEndpoint(reader.getString());
                } else if ("routingType".equals(fieldName)) {
                    deserializedCustomRPResourceTypeRouteDefinition.routingType
                        = ResourceTypeRouting.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomRPResourceTypeRouteDefinition;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A validation to apply on custom resource provider requests.
 */
@Fluent
public final class CustomRPValidations implements JsonSerializable<CustomRPValidations> {
    /*
     * The type of validation to run against a matching request.
     */
    private ValidationType validationType;

    /*
     * A link to the validation specification. The specification must be hosted on raw.githubusercontent.com.
     */
    private String specification;

    /**
     * Creates an instance of CustomRPValidations class.
     */
    public CustomRPValidations() {
    }

    /**
     * Get the validationType property: The type of validation to run against a matching request.
     * 
     * @return the validationType value.
     */
    public ValidationType validationType() {
        return this.validationType;
    }

    /**
     * Set the validationType property: The type of validation to run against a matching request.
     * 
     * @param validationType the validationType value to set.
     * @return the CustomRPValidations object itself.
     */
    public CustomRPValidations withValidationType(ValidationType validationType) {
        this.validationType = validationType;
        return this;
    }

    /**
     * Get the specification property: A link to the validation specification. The specification must be hosted on
     * raw.githubusercontent.com.
     * 
     * @return the specification value.
     */
    public String specification() {
        return this.specification;
    }

    /**
     * Set the specification property: A link to the validation specification. The specification must be hosted on
     * raw.githubusercontent.com.
     * 
     * @param specification the specification value to set.
     * @return the CustomRPValidations object itself.
     */
    public CustomRPValidations withSpecification(String specification) {
        this.specification = specification;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (specification() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property specification in model CustomRPValidations"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CustomRPValidations.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("specification", this.specification);
        jsonWriter.writeStringField("validationType",
            this.validationType == null ? null : this.validationType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomRPValidations from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomRPValidations if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomRPValidations.
     */
    public static CustomRPValidations fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomRPValidations deserializedCustomRPValidations = new CustomRPValidations();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("specification".equals(fieldName)) {
                    deserializedCustomRPValidations.specification = reader.getString();
                } else if ("validationType".equals(fieldName)) {
                    deserializedCustomRPValidations.validationType = ValidationType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomRPValidations;
        });
    }
}

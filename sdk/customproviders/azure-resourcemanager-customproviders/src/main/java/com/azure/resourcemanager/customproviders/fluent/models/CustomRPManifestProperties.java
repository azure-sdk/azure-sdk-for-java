// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.customproviders.models.CustomRPActionRouteDefinition;
import com.azure.resourcemanager.customproviders.models.CustomRPResourceTypeRouteDefinition;
import com.azure.resourcemanager.customproviders.models.CustomRPValidations;
import com.azure.resourcemanager.customproviders.models.ProvisioningState;
import java.io.IOException;
import java.util.List;

/**
 * The manifest for the custom resource provider.
 */
@Fluent
public final class CustomRPManifestProperties implements JsonSerializable<CustomRPManifestProperties> {
    /*
     * A list of actions that the custom resource provider implements.
     */
    private List<CustomRPActionRouteDefinition> actions;

    /*
     * A list of resource types that the custom resource provider implements.
     */
    private List<CustomRPResourceTypeRouteDefinition> resourceTypes;

    /*
     * A list of validations to run on the custom resource provider's requests.
     */
    private List<CustomRPValidations> validations;

    /*
     * The provisioning state of the resource provider.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of CustomRPManifestProperties class.
     */
    public CustomRPManifestProperties() {
    }

    /**
     * Get the actions property: A list of actions that the custom resource provider implements.
     * 
     * @return the actions value.
     */
    public List<CustomRPActionRouteDefinition> actions() {
        return this.actions;
    }

    /**
     * Set the actions property: A list of actions that the custom resource provider implements.
     * 
     * @param actions the actions value to set.
     * @return the CustomRPManifestProperties object itself.
     */
    public CustomRPManifestProperties withActions(List<CustomRPActionRouteDefinition> actions) {
        this.actions = actions;
        return this;
    }

    /**
     * Get the resourceTypes property: A list of resource types that the custom resource provider implements.
     * 
     * @return the resourceTypes value.
     */
    public List<CustomRPResourceTypeRouteDefinition> resourceTypes() {
        return this.resourceTypes;
    }

    /**
     * Set the resourceTypes property: A list of resource types that the custom resource provider implements.
     * 
     * @param resourceTypes the resourceTypes value to set.
     * @return the CustomRPManifestProperties object itself.
     */
    public CustomRPManifestProperties withResourceTypes(List<CustomRPResourceTypeRouteDefinition> resourceTypes) {
        this.resourceTypes = resourceTypes;
        return this;
    }

    /**
     * Get the validations property: A list of validations to run on the custom resource provider's requests.
     * 
     * @return the validations value.
     */
    public List<CustomRPValidations> validations() {
        return this.validations;
    }

    /**
     * Set the validations property: A list of validations to run on the custom resource provider's requests.
     * 
     * @param validations the validations value to set.
     * @return the CustomRPManifestProperties object itself.
     */
    public CustomRPManifestProperties withValidations(List<CustomRPValidations> validations) {
        this.validations = validations;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource provider.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (actions() != null) {
            actions().forEach(e -> e.validate());
        }
        if (resourceTypes() != null) {
            resourceTypes().forEach(e -> e.validate());
        }
        if (validations() != null) {
            validations().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("actions", this.actions, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("resourceTypes", this.resourceTypes, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("validations", this.validations, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomRPManifestProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomRPManifestProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomRPManifestProperties.
     */
    public static CustomRPManifestProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomRPManifestProperties deserializedCustomRPManifestProperties = new CustomRPManifestProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actions".equals(fieldName)) {
                    List<CustomRPActionRouteDefinition> actions
                        = reader.readArray(reader1 -> CustomRPActionRouteDefinition.fromJson(reader1));
                    deserializedCustomRPManifestProperties.actions = actions;
                } else if ("resourceTypes".equals(fieldName)) {
                    List<CustomRPResourceTypeRouteDefinition> resourceTypes
                        = reader.readArray(reader1 -> CustomRPResourceTypeRouteDefinition.fromJson(reader1));
                    deserializedCustomRPManifestProperties.resourceTypes = resourceTypes;
                } else if ("validations".equals(fieldName)) {
                    List<CustomRPValidations> validations
                        = reader.readArray(reader1 -> CustomRPValidations.fromJson(reader1));
                    deserializedCustomRPManifestProperties.validations = validations;
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedCustomRPManifestProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomRPManifestProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.customproviders.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.customproviders.models.CustomRPActionRouteDefinition;
import com.azure.resourcemanager.customproviders.models.CustomRPResourceTypeRouteDefinition;
import com.azure.resourcemanager.customproviders.models.CustomRPValidations;
import com.azure.resourcemanager.customproviders.models.ProvisioningState;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * A manifest file that defines the custom resource provider resources.
 */
@Fluent
public final class CustomRPManifestInner extends Resource {
    /*
     * The manifest for the custom resource provider
     */
    private CustomRPManifestProperties innerProperties;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of CustomRPManifestInner class.
     */
    public CustomRPManifestInner() {
    }

    /**
     * Get the innerProperties property: The manifest for the custom resource provider.
     * 
     * @return the innerProperties value.
     */
    private CustomRPManifestProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomRPManifestInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomRPManifestInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the actions property: A list of actions that the custom resource provider implements.
     * 
     * @return the actions value.
     */
    public List<CustomRPActionRouteDefinition> actions() {
        return this.innerProperties() == null ? null : this.innerProperties().actions();
    }

    /**
     * Set the actions property: A list of actions that the custom resource provider implements.
     * 
     * @param actions the actions value to set.
     * @return the CustomRPManifestInner object itself.
     */
    public CustomRPManifestInner withActions(List<CustomRPActionRouteDefinition> actions) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomRPManifestProperties();
        }
        this.innerProperties().withActions(actions);
        return this;
    }

    /**
     * Get the resourceTypes property: A list of resource types that the custom resource provider implements.
     * 
     * @return the resourceTypes value.
     */
    public List<CustomRPResourceTypeRouteDefinition> resourceTypes() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceTypes();
    }

    /**
     * Set the resourceTypes property: A list of resource types that the custom resource provider implements.
     * 
     * @param resourceTypes the resourceTypes value to set.
     * @return the CustomRPManifestInner object itself.
     */
    public CustomRPManifestInner withResourceTypes(List<CustomRPResourceTypeRouteDefinition> resourceTypes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomRPManifestProperties();
        }
        this.innerProperties().withResourceTypes(resourceTypes);
        return this;
    }

    /**
     * Get the validations property: A list of validations to run on the custom resource provider's requests.
     * 
     * @return the validations value.
     */
    public List<CustomRPValidations> validations() {
        return this.innerProperties() == null ? null : this.innerProperties().validations();
    }

    /**
     * Set the validations property: A list of validations to run on the custom resource provider's requests.
     * 
     * @param validations the validations value to set.
     * @return the CustomRPManifestInner object itself.
     */
    public CustomRPManifestInner withValidations(List<CustomRPValidations> validations) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CustomRPManifestProperties();
        }
        this.innerProperties().withValidations(validations);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the resource provider.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("location", location());
        jsonWriter.writeMapField("tags", tags(), (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomRPManifestInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomRPManifestInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CustomRPManifestInner.
     */
    public static CustomRPManifestInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomRPManifestInner deserializedCustomRPManifestInner = new CustomRPManifestInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedCustomRPManifestInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedCustomRPManifestInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedCustomRPManifestInner.type = reader.getString();
                } else if ("location".equals(fieldName)) {
                    deserializedCustomRPManifestInner.withLocation(reader.getString());
                } else if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedCustomRPManifestInner.withTags(tags);
                } else if ("properties".equals(fieldName)) {
                    deserializedCustomRPManifestInner.innerProperties = CustomRPManifestProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomRPManifestInner;
        });
    }
}

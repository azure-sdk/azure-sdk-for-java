// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Evaluation details of policy language expressions. */
@Fluent
public final class ComponentExpressionEvaluationDetails {
    /*
     * Evaluation result.
     */
    @JsonProperty(value = "result")
    private String result;

    /*
     * Expression evaluated.
     */
    @JsonProperty(value = "expression", access = JsonProperty.Access.WRITE_ONLY)
    private String expression;

    /*
     * The kind of expression that was evaluated.
     */
    @JsonProperty(value = "expressionKind", access = JsonProperty.Access.WRITE_ONLY)
    private String expressionKind;

    /*
     * Property path if the expression is a field or an alias.
     */
    @JsonProperty(value = "path", access = JsonProperty.Access.WRITE_ONLY)
    private String path;

    /*
     * Value of the expression.
     */
    @JsonProperty(value = "expressionValue", access = JsonProperty.Access.WRITE_ONLY)
    private Object expressionValue;

    /*
     * Target value to be compared with the expression value.
     */
    @JsonProperty(value = "targetValue", access = JsonProperty.Access.WRITE_ONLY)
    private Object targetValue;

    /*
     * Operator to compare the expression value and the target value.
     */
    @JsonProperty(value = "operator", access = JsonProperty.Access.WRITE_ONLY)
    private String operator;

    /** Creates an instance of ComponentExpressionEvaluationDetails class. */
    public ComponentExpressionEvaluationDetails() {
    }

    /**
     * Get the result property: Evaluation result.
     *
     * @return the result value.
     */
    public String result() {
        return this.result;
    }

    /**
     * Set the result property: Evaluation result.
     *
     * @param result the result value to set.
     * @return the ComponentExpressionEvaluationDetails object itself.
     */
    public ComponentExpressionEvaluationDetails withResult(String result) {
        this.result = result;
        return this;
    }

    /**
     * Get the expression property: Expression evaluated.
     *
     * @return the expression value.
     */
    public String expression() {
        return this.expression;
    }

    /**
     * Get the expressionKind property: The kind of expression that was evaluated.
     *
     * @return the expressionKind value.
     */
    public String expressionKind() {
        return this.expressionKind;
    }

    /**
     * Get the path property: Property path if the expression is a field or an alias.
     *
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Get the expressionValue property: Value of the expression.
     *
     * @return the expressionValue value.
     */
    public Object expressionValue() {
        return this.expressionValue;
    }

    /**
     * Get the targetValue property: Target value to be compared with the expression value.
     *
     * @return the targetValue value.
     */
    public Object targetValue() {
        return this.targetValue;
    }

    /**
     * Get the operator property: Operator to compare the expression value and the target value.
     *
     * @return the operator value.
     */
    public String operator() {
        return this.operator;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

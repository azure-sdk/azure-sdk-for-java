// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policyinsights.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Policy evaluation details. */
@Fluent
public final class ComponentPolicyEvaluationDetails {
    /*
     * Details of the evaluated expressions.
     */
    @JsonProperty(value = "evaluatedExpressions", access = JsonProperty.Access.WRITE_ONLY)
    private List<ComponentExpressionEvaluationDetails> evaluatedExpressions;

    /*
     * Additional textual reason for the evaluation outcome.
     */
    @JsonProperty(value = "reason")
    private String reason;

    /** Creates an instance of ComponentPolicyEvaluationDetails class. */
    public ComponentPolicyEvaluationDetails() {
    }

    /**
     * Get the evaluatedExpressions property: Details of the evaluated expressions.
     *
     * @return the evaluatedExpressions value.
     */
    public List<ComponentExpressionEvaluationDetails> evaluatedExpressions() {
        return this.evaluatedExpressions;
    }

    /**
     * Get the reason property: Additional textual reason for the evaluation outcome.
     *
     * @return the reason value.
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Set the reason property: Additional textual reason for the evaluation outcome.
     *
     * @param reason the reason value to set.
     * @return the ComponentPolicyEvaluationDetails object itself.
     */
    public ComponentPolicyEvaluationDetails withReason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (evaluatedExpressions() != null) {
            evaluatedExpressions().forEach(e -> e.validate());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.relationships.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DependencyOfRelationships.
 */
public interface DependencyOfRelationships {
    /**
     * Get a DependencyOfRelationship.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param name Name of dependencyOf relationship.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DependencyOfRelationship along with {@link Response}.
     */
    Response<DependencyOfRelationship> getWithResponse(String resourceUri, String name, Context context);

    /**
     * Get a DependencyOfRelationship.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param name Name of dependencyOf relationship.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DependencyOfRelationship.
     */
    DependencyOfRelationship get(String resourceUri, String name);

    /**
     * Delete a DependencyOfRelationship.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param name Name of dependencyOf relationship.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceUri, String name);

    /**
     * Delete a DependencyOfRelationship.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param name Name of dependencyOf relationship.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceUri, String name, Context context);

    /**
     * Get a DependencyOfRelationship.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DependencyOfRelationship along with {@link Response}.
     */
    DependencyOfRelationship getById(String id);

    /**
     * Get a DependencyOfRelationship.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a DependencyOfRelationship along with {@link Response}.
     */
    Response<DependencyOfRelationship> getByIdWithResponse(String id, Context context);

    /**
     * Delete a DependencyOfRelationship.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a DependencyOfRelationship.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DependencyOfRelationship resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DependencyOfRelationship definition.
     */
    DependencyOfRelationship.DefinitionStages.Blank define(String name);
}

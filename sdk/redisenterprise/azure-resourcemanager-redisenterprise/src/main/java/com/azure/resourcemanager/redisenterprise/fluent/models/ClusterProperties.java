// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.redisenterprise.models.ProvisioningState;
import com.azure.resourcemanager.redisenterprise.models.ResourceState;
import com.azure.resourcemanager.redisenterprise.models.TlsVersion;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of a RedisEnterprise cluster. */
@Fluent
public final class ClusterProperties {
    /*
     * DNS name of the cluster endpoint
     */
    @JsonProperty(value = "hostName", access = JsonProperty.Access.WRITE_ONLY)
    private String hostname;

    /*
     * The minimum TLS version for the cluster to support, e.g. the default of '1.2'.
     */
    @JsonProperty(value = "minTlsVersion")
    private TlsVersion minTlsVersion;

    /*
     * Current provisioning status of the last operation on the cluster.
     */
    @JsonProperty(value = "provisioningState", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Current resource status of the cluster.
     */
    @JsonProperty(value = "resourceState", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceState resourceState;

    /*
     * Version of redis the cluster supports, e.g. '6'
     */
    @JsonProperty(value = "redisVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String redisVersion;

    /** Creates an instance of ClusterProperties class. */
    public ClusterProperties() {
    }

    /**
     * Get the hostname property: DNS name of the cluster endpoint.
     *
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Get the minTlsVersion property: The minimum TLS version for the cluster to support, e.g. the default of '1.2'.
     *
     * @return the minTlsVersion value.
     */
    public TlsVersion minTlsVersion() {
        return this.minTlsVersion;
    }

    /**
     * Set the minTlsVersion property: The minimum TLS version for the cluster to support, e.g. the default of '1.2'.
     *
     * @param minTlsVersion the minTlsVersion value to set.
     * @return the ClusterProperties object itself.
     */
    public ClusterProperties withMinTlsVersion(TlsVersion minTlsVersion) {
        this.minTlsVersion = minTlsVersion;
        return this;
    }

    /**
     * Get the provisioningState property: Current provisioning status of the last operation on the cluster.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the resourceState property: Current resource status of the cluster.
     *
     * @return the resourceState value.
     */
    public ResourceState resourceState() {
        return this.resourceState;
    }

    /**
     * Get the redisVersion property: Version of redis the cluster supports, e.g. '6'.
     *
     * @return the redisVersion value.
     */
    public String redisVersion() {
        return this.redisVersion;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

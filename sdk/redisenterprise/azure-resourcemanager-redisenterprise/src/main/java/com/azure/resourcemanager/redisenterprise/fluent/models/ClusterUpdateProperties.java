// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.redisenterprise.models.SkuUpdate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The updatable properties of the Cluster. */
@Fluent
public final class ClusterUpdateProperties {
    /*
     * The SKU to create, which affects price, performance, and features.
     */
    @JsonProperty(value = "sku")
    private SkuUpdate sku;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /** Creates an instance of ClusterUpdateProperties class. */
    public ClusterUpdateProperties() {
    }

    /**
     * Get the sku property: The SKU to create, which affects price, performance, and features.
     *
     * @return the sku value.
     */
    public SkuUpdate sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The SKU to create, which affects price, performance, and features.
     *
     * @param sku the sku value to set.
     * @return the ClusterUpdateProperties object itself.
     */
    public ClusterUpdateProperties withSku(SkuUpdate sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the ClusterUpdateProperties object itself.
     */
    public ClusterUpdateProperties withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() != null) {
            sku().validate();
        }
    }
}

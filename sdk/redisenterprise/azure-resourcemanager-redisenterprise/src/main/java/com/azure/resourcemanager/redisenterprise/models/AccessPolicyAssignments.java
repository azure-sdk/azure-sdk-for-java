// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redisenterprise.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.redisenterprise.fluent.models.AccessPolicyAssignmentInner;

/**
 * Resource collection API of AccessPolicyAssignments.
 */
public interface AccessPolicyAssignments {
    /**
     * Creates access policy assignment for database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param parameters Parameters supplied to the create access policy assignment for database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the access policy assignment of Redis Enterprise database.
     */
    AccessPolicyAssignment create(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName, AccessPolicyAssignmentInner parameters);

    /**
     * Creates access policy assignment for database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param parameters Parameters supplied to the create access policy assignment for database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes the access policy assignment of Redis Enterprise database.
     */
    AccessPolicyAssignment create(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName, AccessPolicyAssignmentInner parameters, Context context);

    /**
     * Gets information about access policy assignment for database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about access policy assignment for database along with {@link Response}.
     */
    Response<AccessPolicyAssignment> getWithResponse(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName, Context context);

    /**
     * Gets information about access policy assignment for database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about access policy assignment for database.
     */
    AccessPolicyAssignment get(String resourceGroupName, String clusterName, String databaseName,
        String accessPolicyAssignmentName);

    /**
     * Deletes a single access policy assignment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String clusterName, String databaseName, String accessPolicyAssignmentName);

    /**
     * Deletes a single access policy assignment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Redis Enterprise cluster.
     * @param databaseName The name of the Redis Enterprise database.
     * @param accessPolicyAssignmentName The name of the Redis Enterprise database access policy assignment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String clusterName, String databaseName, String accessPolicyAssignmentName,
        Context context);
}

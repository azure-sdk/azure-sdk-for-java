// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resources.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Resource provider information. */
@Fluent
public final class DeploymentsProvider {
    /*
     * The namespace of the resource provider.
     */
    @JsonProperty(value = "namespace")
    private String namespace;

    /*
     * The collection of provider resource types.
     */
    @JsonProperty(value = "resourceTypes", access = JsonProperty.Access.WRITE_ONLY)
    private List<DeploymentsResourceType> resourceTypes;

    /** Creates an instance of DeploymentsProvider class. */
    public DeploymentsProvider() {
    }

    /**
     * Get the namespace property: The namespace of the resource provider.
     *
     * @return the namespace value.
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * Set the namespace property: The namespace of the resource provider.
     *
     * @param namespace the namespace value to set.
     * @return the DeploymentsProvider object itself.
     */
    public DeploymentsProvider withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }

    /**
     * Get the resourceTypes property: The collection of provider resource types.
     *
     * @return the resourceTypes value.
     */
    public List<DeploymentsResourceType> resourceTypes() {
        return this.resourceTypes;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resourceTypes() != null) {
            resourceTypes().forEach(e -> e.validate());
        }
    }
}

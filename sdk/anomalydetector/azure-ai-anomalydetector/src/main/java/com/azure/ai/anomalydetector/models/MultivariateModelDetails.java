// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.anomalydetector.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Training result of a model, including its status, errors, and diagnostics information. */
@Fluent
public final class MultivariateModelDetails {
    /*
     * Source link to the input data to indicate an accessible Azure Storage URI.
     * It either points to an Azure Blob Storage folder or points to a CSV file in
     * Azure Blob Storage, based on your data schema selection.
     */
    @Generated
    @JsonProperty(value = "dataSource")
    private String dataSourceUrl;

    /*
     * Data schema of the input data source. The default
     * is OneTable.
     */
    @Generated
    @JsonProperty(value = "dataSchema")
    private MultivariateDataSchema dataSchema;

    /*
     * Start date/time of training data, which should be
     * in ISO 8601 format.
     */
    @Generated
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * End date/time of training data, which should be
     * in ISO 8601 format.
     */
    @Generated
    @JsonProperty(value = "endTime")
    private OffsetDateTime endTime;

    /*
     * Display name of the model. Maximum length is 24
     * characters.
     */
    @Generated
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Number of previous time stamps that will be used to
     * detect whether the time stamp is an anomaly or not.
     */
    @Generated
    @JsonProperty(value = "slidingWindow")
    private Integer slidingWindow;

    /*
     * Manner of aligning multiple variables.
     */
    @Generated
    @JsonProperty(value = "alignPolicy")
    private AlignPolicy alignPolicy;

    /*
     * Model status.
     */
    @Generated
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private MultivariateModelStatus status;

    /*
     * Error messages after failure to create a model.
     */
    @Generated
    @JsonProperty(value = "errors", access = JsonProperty.Access.WRITE_ONLY)
    private List<ErrorResponse> errors;

    /*
     * Diagnostics information to help inspect the states of a model or variable.
     */
    @Generated
    @JsonProperty(value = "diagnosticsInfo", access = JsonProperty.Access.WRITE_ONLY)
    private MultivariateDiagnosticDetails diagnosticsInfo;

    /**
     * Creates an instance of MultivariateModelDetails class.
     *
     * @param dataSourceUrl the dataSourceUrl value to set.
     * @param startTime the startTime value to set.
     * @param endTime the endTime value to set.
     */
    @Generated
    @JsonCreator
    public MultivariateModelDetails(
            @JsonProperty(value = "dataSource") String dataSourceUrl,
            @JsonProperty(value = "startTime") OffsetDateTime startTime,
            @JsonProperty(value = "endTime") OffsetDateTime endTime) {
        this.dataSourceUrl = dataSourceUrl;
        this.startTime = startTime;
        this.endTime = endTime;
    }

    /**
     * Get the dataSourceUrl property: Source link to the input data to indicate an accessible Azure Storage URI. It
     * either points to an Azure Blob Storage folder or points to a CSV file in Azure Blob Storage, based on your data
     * schema selection.
     *
     * @return the dataSourceUrl value.
     */
    @Generated
    public String getDataSourceUrl() {
        return this.dataSourceUrl;
    }

    /**
     * Get the dataSchema property: Data schema of the input data source. The default is OneTable.
     *
     * @return the dataSchema value.
     */
    @Generated
    public MultivariateDataSchema getDataSchema() {
        return this.dataSchema;
    }

    /**
     * Set the dataSchema property: Data schema of the input data source. The default is OneTable.
     *
     * @param dataSchema the dataSchema value to set.
     * @return the MultivariateModelDetails object itself.
     */
    @Generated
    public MultivariateModelDetails setDataSchema(MultivariateDataSchema dataSchema) {
        this.dataSchema = dataSchema;
        return this;
    }

    /**
     * Get the startTime property: Start date/time of training data, which should be in ISO 8601 format.
     *
     * @return the startTime value.
     */
    @Generated
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: End date/time of training data, which should be in ISO 8601 format.
     *
     * @return the endTime value.
     */
    @Generated
    public OffsetDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Get the displayName property: Display name of the model. Maximum length is 24 characters.
     *
     * @return the displayName value.
     */
    @Generated
    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of the model. Maximum length is 24 characters.
     *
     * @param displayName the displayName value to set.
     * @return the MultivariateModelDetails object itself.
     */
    @Generated
    public MultivariateModelDetails setDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the slidingWindow property: Number of previous time stamps that will be used to detect whether the time stamp
     * is an anomaly or not.
     *
     * @return the slidingWindow value.
     */
    @Generated
    public Integer getSlidingWindow() {
        return this.slidingWindow;
    }

    /**
     * Set the slidingWindow property: Number of previous time stamps that will be used to detect whether the time stamp
     * is an anomaly or not.
     *
     * @param slidingWindow the slidingWindow value to set.
     * @return the MultivariateModelDetails object itself.
     */
    @Generated
    public MultivariateModelDetails setSlidingWindow(Integer slidingWindow) {
        this.slidingWindow = slidingWindow;
        return this;
    }

    /**
     * Get the alignPolicy property: Manner of aligning multiple variables.
     *
     * @return the alignPolicy value.
     */
    @Generated
    public AlignPolicy getAlignPolicy() {
        return this.alignPolicy;
    }

    /**
     * Set the alignPolicy property: Manner of aligning multiple variables.
     *
     * @param alignPolicy the alignPolicy value to set.
     * @return the MultivariateModelDetails object itself.
     */
    @Generated
    public MultivariateModelDetails setAlignPolicy(AlignPolicy alignPolicy) {
        this.alignPolicy = alignPolicy;
        return this;
    }

    /**
     * Get the status property: Model status.
     *
     * @return the status value.
     */
    @Generated
    public MultivariateModelStatus getStatus() {
        return this.status;
    }

    /**
     * Get the errors property: Error messages after failure to create a model.
     *
     * @return the errors value.
     */
    @Generated
    public List<ErrorResponse> getErrors() {
        return this.errors;
    }

    /**
     * Get the diagnosticsInfo property: Diagnostics information to help inspect the states of a model or variable.
     *
     * @return the diagnosticsInfo value.
     */
    @Generated
    public MultivariateDiagnosticDetails getDiagnosticsInfo() {
        return this.diagnosticsInfo;
    }
}

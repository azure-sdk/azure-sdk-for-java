// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.anomalydetector.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;
import java.util.List;

/** Model state. */
@Immutable
public final class MultivariateModelState {
    /*
     * Number of passes of the entire training dataset that the
     * algorithm has completed.
     */
    @Generated
    @JsonProperty(value = "epochIds")
    private List<Integer> epochIds;

    /*
     * List of metrics used to assess how the model fits the training data for each
     * epoch.
     */
    @Generated
    @JsonProperty(value = "trainLosses")
    private List<Double> trainLosses;

    /*
     * List of metrics used to assess how the model fits the validation set for each
     * epoch.
     */
    @Generated
    @JsonProperty(value = "validationLosses")
    private List<Double> validationLosses;

    /*
     * Latency for each epoch.
     */
    @Generated
    @JsonProperty(value = "latenciesInSeconds")
    private List<Double> latenciesInSeconds;

    /** Creates an instance of MultivariateModelState class. */
    @Generated
    private MultivariateModelState() {}

    /**
     * Get the epochIds property: Number of passes of the entire training dataset that the algorithm has completed.
     *
     * @return the epochIds value.
     */
    @Generated
    public List<Integer> getEpochIds() {
        return this.epochIds;
    }

    /**
     * Get the trainLosses property: List of metrics used to assess how the model fits the training data for each epoch.
     *
     * @return the trainLosses value.
     */
    @Generated
    public List<Double> getTrainLosses() {
        return this.trainLosses;
    }

    /**
     * Get the validationLosses property: List of metrics used to assess how the model fits the validation set for each
     * epoch.
     *
     * @return the validationLosses value.
     */
    @Generated
    public List<Double> getValidationLosses() {
        return this.validationLosses;
    }

    /**
     * Get the latenciesInSeconds property: Latency for each epoch.
     *
     * @return the latenciesInSeconds value.
     */
    @Generated
    public List<Duration> getLatenciesInSeconds() {
        if (this.latenciesInSeconds == null) {
            return null;
        }
        return this.latenciesInSeconds.stream()
                .map(el -> Duration.ofNanos((long) (el * 1000_000_000L)))
                .collect(java.util.stream.Collectors.toList());
    }
}

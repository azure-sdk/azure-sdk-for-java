// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
 */
@Fluent
public final class PostBuildPatchDefinition {
    /*
     * Key/value pairs holding the variables to be substituted in this Kustomization.
     */
    @JsonProperty(value = "substitute")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> substitute;

    /*
     * Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
     */
    @JsonProperty(value = "substituteFrom")
    private List<SubstituteFromPatchDefinition> substituteFrom;

    /**
     * Creates an instance of PostBuildPatchDefinition class.
     */
    public PostBuildPatchDefinition() {
    }

    /**
     * Get the substitute property: Key/value pairs holding the variables to be substituted in this Kustomization.
     * 
     * @return the substitute value.
     */
    public Map<String, String> substitute() {
        return this.substitute;
    }

    /**
     * Set the substitute property: Key/value pairs holding the variables to be substituted in this Kustomization.
     * 
     * @param substitute the substitute value to set.
     * @return the PostBuildPatchDefinition object itself.
     */
    public PostBuildPatchDefinition withSubstitute(Map<String, String> substitute) {
        this.substitute = substitute;
        return this;
    }

    /**
     * Get the substituteFrom property: Array of ConfigMaps/Secrets from which the variables are substituted for this
     * Kustomization.
     * 
     * @return the substituteFrom value.
     */
    public List<SubstituteFromPatchDefinition> substituteFrom() {
        return this.substituteFrom;
    }

    /**
     * Set the substituteFrom property: Array of ConfigMaps/Secrets from which the variables are substituted for this
     * Kustomization.
     * 
     * @param substituteFrom the substituteFrom value to set.
     * @return the PostBuildPatchDefinition object itself.
     */
    public PostBuildPatchDefinition withSubstituteFrom(List<SubstituteFromPatchDefinition> substituteFrom) {
        this.substituteFrom = substituteFrom;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (substituteFrom() != null) {
            substituteFrom().forEach(e -> e.validate());
        }
    }
}

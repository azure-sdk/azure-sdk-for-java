// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Parameters to reconcile to the OCIRepository source kind type.
 */
@Fluent
public final class OciRepositoryDefinition {
    /*
     * The URL to sync for the flux configuration OCI repository.
     */
    @JsonProperty(value = "url")
    private String url;

    /*
     * The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
     */
    @JsonProperty(value = "timeoutInSeconds")
    private Long timeoutInSeconds;

    /*
     * The interval at which to re-reconcile the cluster OCI repository source with the remote.
     */
    @JsonProperty(value = "syncIntervalInSeconds")
    private Long syncIntervalInSeconds;

    /*
     * The source reference for the OCIRepository object.
     */
    @JsonProperty(value = "repositoryRef")
    private OciRepositoryRefDefinition repositoryRef;

    /*
     * The layer to be pulled from the OCI artifact.
     */
    @JsonProperty(value = "layerSelector")
    private OciRepositoryLayerSelectorDefinition layerSelector;

    /*
     * Verification of the authenticity of an OCI Artifact.
     */
    @JsonProperty(value = "verify")
    private OciRepositoryVerifyDefinition verify;

    /*
     * The service account name to authenticate with the OCI repository.
     */
    @JsonProperty(value = "serviceAccountName")
    private String serviceAccountName;

    /*
     * The name of the Secret containing client certificate and private key or CA certificate for connecting to the
     * registry.
     */
    @JsonProperty(value = "certSecretRef")
    private String certSecretRef;

    /*
     * Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or
     * user-provided configuration secrets.
     */
    @JsonProperty(value = "localAuthRef")
    private String localAuthRef;

    /**
     * Creates an instance of OciRepositoryDefinition class.
     */
    public OciRepositoryDefinition() {
    }

    /**
     * Get the url property: The URL to sync for the flux configuration OCI repository.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: The URL to sync for the flux configuration OCI repository.
     * 
     * @param url the url value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the timeoutInSeconds property: The maximum time to attempt to reconcile the cluster OCI repository source
     * with the remote.
     * 
     * @return the timeoutInSeconds value.
     */
    public Long timeoutInSeconds() {
        return this.timeoutInSeconds;
    }

    /**
     * Set the timeoutInSeconds property: The maximum time to attempt to reconcile the cluster OCI repository source
     * with the remote.
     * 
     * @param timeoutInSeconds the timeoutInSeconds value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withTimeoutInSeconds(Long timeoutInSeconds) {
        this.timeoutInSeconds = timeoutInSeconds;
        return this;
    }

    /**
     * Get the syncIntervalInSeconds property: The interval at which to re-reconcile the cluster OCI repository source
     * with the remote.
     * 
     * @return the syncIntervalInSeconds value.
     */
    public Long syncIntervalInSeconds() {
        return this.syncIntervalInSeconds;
    }

    /**
     * Set the syncIntervalInSeconds property: The interval at which to re-reconcile the cluster OCI repository source
     * with the remote.
     * 
     * @param syncIntervalInSeconds the syncIntervalInSeconds value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withSyncIntervalInSeconds(Long syncIntervalInSeconds) {
        this.syncIntervalInSeconds = syncIntervalInSeconds;
        return this;
    }

    /**
     * Get the repositoryRef property: The source reference for the OCIRepository object.
     * 
     * @return the repositoryRef value.
     */
    public OciRepositoryRefDefinition repositoryRef() {
        return this.repositoryRef;
    }

    /**
     * Set the repositoryRef property: The source reference for the OCIRepository object.
     * 
     * @param repositoryRef the repositoryRef value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withRepositoryRef(OciRepositoryRefDefinition repositoryRef) {
        this.repositoryRef = repositoryRef;
        return this;
    }

    /**
     * Get the layerSelector property: The layer to be pulled from the OCI artifact.
     * 
     * @return the layerSelector value.
     */
    public OciRepositoryLayerSelectorDefinition layerSelector() {
        return this.layerSelector;
    }

    /**
     * Set the layerSelector property: The layer to be pulled from the OCI artifact.
     * 
     * @param layerSelector the layerSelector value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withLayerSelector(OciRepositoryLayerSelectorDefinition layerSelector) {
        this.layerSelector = layerSelector;
        return this;
    }

    /**
     * Get the verify property: Verification of the authenticity of an OCI Artifact.
     * 
     * @return the verify value.
     */
    public OciRepositoryVerifyDefinition verify() {
        return this.verify;
    }

    /**
     * Set the verify property: Verification of the authenticity of an OCI Artifact.
     * 
     * @param verify the verify value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withVerify(OciRepositoryVerifyDefinition verify) {
        this.verify = verify;
        return this;
    }

    /**
     * Get the serviceAccountName property: The service account name to authenticate with the OCI repository.
     * 
     * @return the serviceAccountName value.
     */
    public String serviceAccountName() {
        return this.serviceAccountName;
    }

    /**
     * Set the serviceAccountName property: The service account name to authenticate with the OCI repository.
     * 
     * @param serviceAccountName the serviceAccountName value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withServiceAccountName(String serviceAccountName) {
        this.serviceAccountName = serviceAccountName;
        return this;
    }

    /**
     * Get the certSecretRef property: The name of the Secret containing client certificate and private key or CA
     * certificate for connecting to the registry.
     * 
     * @return the certSecretRef value.
     */
    public String certSecretRef() {
        return this.certSecretRef;
    }

    /**
     * Set the certSecretRef property: The name of the Secret containing client certificate and private key or CA
     * certificate for connecting to the registry.
     * 
     * @param certSecretRef the certSecretRef value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withCertSecretRef(String certSecretRef) {
        this.certSecretRef = certSecretRef;
        return this;
    }

    /**
     * Get the localAuthRef property: Name of a local secret on the Kubernetes cluster to use as the authentication
     * secret rather than the managed or user-provided configuration secrets.
     * 
     * @return the localAuthRef value.
     */
    public String localAuthRef() {
        return this.localAuthRef;
    }

    /**
     * Set the localAuthRef property: Name of a local secret on the Kubernetes cluster to use as the authentication
     * secret rather than the managed or user-provided configuration secrets.
     * 
     * @param localAuthRef the localAuthRef value to set.
     * @return the OciRepositoryDefinition object itself.
     */
    public OciRepositoryDefinition withLocalAuthRef(String localAuthRef) {
        this.localAuthRef = localAuthRef;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (repositoryRef() != null) {
            repositoryRef().validate();
        }
        if (layerSelector() != null) {
            layerSelector().validate();
        }
        if (verify() != null) {
            verify().validate();
        }
    }
}

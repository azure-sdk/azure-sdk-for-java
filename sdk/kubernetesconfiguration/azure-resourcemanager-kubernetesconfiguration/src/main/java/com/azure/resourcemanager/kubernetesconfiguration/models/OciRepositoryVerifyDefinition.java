// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Parameters to verify the authenticity of an OCI Artifact.
 */
@Fluent
public final class OciRepositoryVerifyDefinition {
    /*
     * Verification provider name.
     */
    @JsonProperty(value = "provider")
    private String provider;

    /*
     * Kubernetes Secret that contains the trusted public keys of trusted authors.
     */
    @JsonProperty(value = "secretRef")
    private String secretRef;

    /*
     * Array defining the criteria for matching the identity while verifying an OCI artifact.
     */
    @JsonProperty(value = "matchOIDCIdentity")
    private List<MatchOidcIdentityDefinition> matchOidcIdentity;

    /**
     * Creates an instance of OciRepositoryVerifyDefinition class.
     */
    public OciRepositoryVerifyDefinition() {
    }

    /**
     * Get the provider property: Verification provider name.
     * 
     * @return the provider value.
     */
    public String provider() {
        return this.provider;
    }

    /**
     * Set the provider property: Verification provider name.
     * 
     * @param provider the provider value to set.
     * @return the OciRepositoryVerifyDefinition object itself.
     */
    public OciRepositoryVerifyDefinition withProvider(String provider) {
        this.provider = provider;
        return this;
    }

    /**
     * Get the secretRef property: Kubernetes Secret that contains the trusted public keys of trusted authors.
     * 
     * @return the secretRef value.
     */
    public String secretRef() {
        return this.secretRef;
    }

    /**
     * Set the secretRef property: Kubernetes Secret that contains the trusted public keys of trusted authors.
     * 
     * @param secretRef the secretRef value to set.
     * @return the OciRepositoryVerifyDefinition object itself.
     */
    public OciRepositoryVerifyDefinition withSecretRef(String secretRef) {
        this.secretRef = secretRef;
        return this;
    }

    /**
     * Get the matchOidcIdentity property: Array defining the criteria for matching the identity while verifying an OCI
     * artifact.
     * 
     * @return the matchOidcIdentity value.
     */
    public List<MatchOidcIdentityDefinition> matchOidcIdentity() {
        return this.matchOidcIdentity;
    }

    /**
     * Set the matchOidcIdentity property: Array defining the criteria for matching the identity while verifying an OCI
     * artifact.
     * 
     * @param matchOidcIdentity the matchOidcIdentity value to set.
     * @return the OciRepositoryVerifyDefinition object itself.
     */
    public OciRepositoryVerifyDefinition withMatchOidcIdentity(List<MatchOidcIdentityDefinition> matchOidcIdentity) {
        this.matchOidcIdentity = matchOidcIdentity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (matchOidcIdentity() != null) {
            matchOidcIdentity().forEach(e -> e.validate());
        }
    }
}

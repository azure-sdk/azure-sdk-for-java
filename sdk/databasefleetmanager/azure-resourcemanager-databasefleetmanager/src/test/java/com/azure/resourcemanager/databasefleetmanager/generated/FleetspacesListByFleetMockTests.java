// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager;
import com.azure.resourcemanager.databasefleetmanager.models.Fleetspace;
import com.azure.resourcemanager.databasefleetmanager.models.PrincipalType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetspacesListByFleetMockTests {
    @Test
    public void testListByFleet() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"capacityMax\":397011465,\"mainPrincipal\":{\"login\":\"txhdzh\",\"applicationId\":\"qj\",\"objectId\":\"ck\",\"tenantId\":\"lhrxsbkyvpyc\",\"principalType\":\"User\"}},\"id\":\"bpzkafkuwbc\",\"name\":\"nwbmeh\",\"type\":\"seyvj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabasefleetmanagerManager manager = DatabasefleetmanagerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Fleetspace> response = manager.fleetspaces()
            .listByFleet("xywpmueefjzwfqkq", "jidsuyonobglaoc", 6109729315906421159L, 2903733515306491145L,
                "mgyudxytlmoyrxv", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(397011465, response.iterator().next().properties().capacityMax());
        Assertions.assertEquals("txhdzh", response.iterator().next().properties().mainPrincipal().login());
        Assertions.assertEquals("qj", response.iterator().next().properties().mainPrincipal().applicationId());
        Assertions.assertEquals("ck", response.iterator().next().properties().mainPrincipal().objectId());
        Assertions.assertEquals("lhrxsbkyvpyc", response.iterator().next().properties().mainPrincipal().tenantId());
        Assertions.assertEquals(PrincipalType.USER,
            response.iterator().next().properties().mainPrincipal().principalType());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager;
import com.azure.resourcemanager.databasefleetmanager.models.Fleetspace;
import com.azure.resourcemanager.databasefleetmanager.models.PrincipalType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetspacesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Canceled\",\"capacityMax\":636252983,\"mainPrincipal\":{\"login\":\"fcnj\",\"applicationId\":\"cn\",\"objectId\":\"hbttkphyw\",\"tenantId\":\"vjtoqnermclfp\",\"principalType\":\"Application\"}},\"id\":\"xus\",\"name\":\"rpabg\",\"type\":\"epsbjtazqu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabasefleetmanagerManager manager = DatabasefleetmanagerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Fleetspace response = manager.fleetspaces()
            .getWithResponse("wrupqsxvnmicykvc", "o", "eil", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(636252983, response.properties().capacityMax());
        Assertions.assertEquals("fcnj", response.properties().mainPrincipal().login());
        Assertions.assertEquals("cn", response.properties().mainPrincipal().applicationId());
        Assertions.assertEquals("hbttkphyw", response.properties().mainPrincipal().objectId());
        Assertions.assertEquals("vjtoqnermclfp", response.properties().mainPrincipal().tenantId());
        Assertions.assertEquals(PrincipalType.APPLICATION, response.properties().mainPrincipal().principalType());
    }
}

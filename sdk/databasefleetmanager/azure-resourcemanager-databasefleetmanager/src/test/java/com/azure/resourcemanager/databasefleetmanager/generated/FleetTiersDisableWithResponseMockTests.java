// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager;
import com.azure.resourcemanager.databasefleetmanager.models.FleetTier;
import com.azure.resourcemanager.databasefleetmanager.models.ZoneRedundancy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetTiersDisableWithResponseMockTests {
    @Test
    public void testDisableWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"disabled\":false,\"serverless\":false,\"pooled\":false,\"serviceTier\":\"thhqzonosggbh\",\"family\":\"hfwdsjnkaljutiis\",\"capacity\":559440936,\"poolNumOfDatabasesMax\":1975902978,\"highAvailabilityReplicaCount\":2043531661,\"zoneRedundancy\":\"Disabled\",\"databaseCapacityMin\":65.27270342322805,\"databaseCapacityMax\":26.544754948691327,\"databaseSizeGbMax\":1769895546,\"provisioningState\":\"Provisioning\"},\"id\":\"ilvpnppfuflrwd\",\"name\":\"hdlxyjrxsagafcn\",\"type\":\"hgw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabasefleetmanagerManager manager = DatabasefleetmanagerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetTier response = manager.fleetTiers()
            .disableWithResponse("el", "phsdyhto", "fikdowwqu", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertFalse(response.properties().serverless());
        Assertions.assertFalse(response.properties().pooled());
        Assertions.assertEquals("thhqzonosggbh", response.properties().serviceTier());
        Assertions.assertEquals("hfwdsjnkaljutiis", response.properties().family());
        Assertions.assertEquals(559440936, response.properties().capacity());
        Assertions.assertEquals(1975902978, response.properties().poolNumOfDatabasesMax());
        Assertions.assertEquals(2043531661, response.properties().highAvailabilityReplicaCount());
        Assertions.assertEquals(ZoneRedundancy.DISABLED, response.properties().zoneRedundancy());
        Assertions.assertEquals(65.27270342322805D, response.properties().databaseCapacityMin());
        Assertions.assertEquals(26.544754948691327D, response.properties().databaseCapacityMax());
        Assertions.assertEquals(1769895546, response.properties().databaseSizeGbMax());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databasefleetmanager.models.FleetspaceProperties;
import com.azure.resourcemanager.databasefleetmanager.models.MainPrincipal;
import com.azure.resourcemanager.databasefleetmanager.models.PrincipalType;
import org.junit.jupiter.api.Assertions;

public final class FleetspacePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetspaceProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Accepted\",\"capacityMax\":1695010462,\"mainPrincipal\":{\"login\":\"vtb\",\"applicationId\":\"ysszdnrujqguh\",\"objectId\":\"ouqfprwz\",\"tenantId\":\"nguitnwuizgazxu\",\"principalType\":\"Application\"}}")
            .toObject(FleetspaceProperties.class);
        Assertions.assertEquals(1695010462, model.capacityMax());
        Assertions.assertEquals("vtb", model.mainPrincipal().login());
        Assertions.assertEquals("ysszdnrujqguh", model.mainPrincipal().applicationId());
        Assertions.assertEquals("ouqfprwz", model.mainPrincipal().objectId());
        Assertions.assertEquals("nguitnwuizgazxu", model.mainPrincipal().tenantId());
        Assertions.assertEquals(PrincipalType.APPLICATION, model.mainPrincipal().principalType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FleetspaceProperties model = new FleetspaceProperties().withCapacityMax(1695010462)
            .withMainPrincipal(new MainPrincipal().withLogin("vtb")
                .withApplicationId("ysszdnrujqguh")
                .withObjectId("ouqfprwz")
                .withTenantId("nguitnwuizgazxu")
                .withPrincipalType(PrincipalType.APPLICATION));
        model = BinaryData.fromObject(model).toObject(FleetspaceProperties.class);
        Assertions.assertEquals(1695010462, model.capacityMax());
        Assertions.assertEquals("vtb", model.mainPrincipal().login());
        Assertions.assertEquals("ysszdnrujqguh", model.mainPrincipal().applicationId());
        Assertions.assertEquals("ouqfprwz", model.mainPrincipal().objectId());
        Assertions.assertEquals("nguitnwuizgazxu", model.mainPrincipal().tenantId());
        Assertions.assertEquals(PrincipalType.APPLICATION, model.mainPrincipal().principalType());
    }
}

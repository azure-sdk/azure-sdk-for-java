// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.databasefleetmanager.fluent.models.FleetTierInner;
import com.azure.resourcemanager.databasefleetmanager.models.FleetTierProperties;
import com.azure.resourcemanager.databasefleetmanager.models.ZoneRedundancy;
import org.junit.jupiter.api.Assertions;

public final class FleetTierInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetTierInner model = BinaryData.fromString(
            "{\"properties\":{\"disabled\":true,\"serverless\":false,\"pooled\":true,\"serviceTier\":\"yvxyqjp\",\"family\":\"attpngjcrcczsq\",\"capacity\":1452431495,\"poolNumOfDatabasesMax\":1112494803,\"highAvailabilityReplicaCount\":747144042,\"zoneRedundancy\":\"Enabled\",\"databaseCapacityMin\":23.812542535217762,\"databaseCapacityMax\":57.931778810567735,\"databaseSizeGbMax\":104525492,\"provisioningState\":\"Provisioning\"},\"id\":\"oaeupfhyhltrpmo\",\"name\":\"jmcmatuokthfu\",\"type\":\"uaodsfcpk\"}")
            .toObject(FleetTierInner.class);
        Assertions.assertFalse(model.properties().serverless());
        Assertions.assertTrue(model.properties().pooled());
        Assertions.assertEquals("yvxyqjp", model.properties().serviceTier());
        Assertions.assertEquals("attpngjcrcczsq", model.properties().family());
        Assertions.assertEquals(1452431495, model.properties().capacity());
        Assertions.assertEquals(1112494803, model.properties().poolNumOfDatabasesMax());
        Assertions.assertEquals(747144042, model.properties().highAvailabilityReplicaCount());
        Assertions.assertEquals(ZoneRedundancy.ENABLED, model.properties().zoneRedundancy());
        Assertions.assertEquals(23.812542535217762D, model.properties().databaseCapacityMin());
        Assertions.assertEquals(57.931778810567735D, model.properties().databaseCapacityMax());
        Assertions.assertEquals(104525492, model.properties().databaseSizeGbMax());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FleetTierInner model = new FleetTierInner().withProperties(new FleetTierProperties().withServerless(false)
            .withPooled(true)
            .withServiceTier("yvxyqjp")
            .withFamily("attpngjcrcczsq")
            .withCapacity(1452431495)
            .withPoolNumOfDatabasesMax(1112494803)
            .withHighAvailabilityReplicaCount(747144042)
            .withZoneRedundancy(ZoneRedundancy.ENABLED)
            .withDatabaseCapacityMin(23.812542535217762D)
            .withDatabaseCapacityMax(57.931778810567735D)
            .withDatabaseSizeGbMax(104525492));
        model = BinaryData.fromObject(model).toObject(FleetTierInner.class);
        Assertions.assertFalse(model.properties().serverless());
        Assertions.assertTrue(model.properties().pooled());
        Assertions.assertEquals("yvxyqjp", model.properties().serviceTier());
        Assertions.assertEquals("attpngjcrcczsq", model.properties().family());
        Assertions.assertEquals(1452431495, model.properties().capacity());
        Assertions.assertEquals(1112494803, model.properties().poolNumOfDatabasesMax());
        Assertions.assertEquals(747144042, model.properties().highAvailabilityReplicaCount());
        Assertions.assertEquals(ZoneRedundancy.ENABLED, model.properties().zoneRedundancy());
        Assertions.assertEquals(23.812542535217762D, model.properties().databaseCapacityMin());
        Assertions.assertEquals(57.931778810567735D, model.properties().databaseCapacityMax());
        Assertions.assertEquals(104525492, model.properties().databaseSizeGbMax());
    }
}

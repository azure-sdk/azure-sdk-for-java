// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager;
import com.azure.resourcemanager.databasefleetmanager.models.Fleet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"description\":\"savjcbpwxqps\",\"provisioningState\":\"Provisioning\"},\"location\":\"tguvriuhp\",\"tags\":{\"oyq\":\"dyvxqtayriww\",\"mefqsgzvahapjyzh\":\"exrmcqibycnojvk\",\"zlmwlxkvugfhz\":\"vgqzcjrvxd\"},\"id\":\"vawjvzunlu\",\"name\":\"hnnpr\",\"type\":\"xipeilpjzuaejx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabasefleetmanagerManager manager = DatabasefleetmanagerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Fleet> response = manager.fleets()
            .listByResourceGroup("zg", 2493734222555395016L, 7617156723683268552L, "txon",
                com.azure.core.util.Context.NONE);

        Assertions.assertEquals("tguvriuhp", response.iterator().next().location());
        Assertions.assertEquals("dyvxqtayriww", response.iterator().next().tags().get("oyq"));
        Assertions.assertEquals("savjcbpwxqps", response.iterator().next().properties().description());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager;
import com.azure.resourcemanager.databasefleetmanager.models.FleetTier;
import com.azure.resourcemanager.databasefleetmanager.models.FleetTierProperties;
import com.azure.resourcemanager.databasefleetmanager.models.ZoneRedundancy;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetTiersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"disabled\":true,\"serverless\":true,\"pooled\":true,\"serviceTier\":\"taakc\",\"family\":\"iyzvqtmnub\",\"capacity\":908407782,\"poolNumOfDatabasesMax\":1989438546,\"highAvailabilityReplicaCount\":1254452597,\"zoneRedundancy\":\"Enabled\",\"databaseCapacityMin\":20.0417737626587,\"databaseCapacityMax\":73.46157561550241,\"databaseSizeGbMax\":1083170526,\"provisioningState\":\"Succeeded\"},\"id\":\"mg\",\"name\":\"opkwhojv\",\"type\":\"ajqgxy\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DatabasefleetmanagerManager manager = DatabasefleetmanagerManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetTier response = manager.fleetTiers()
            .define("pkeqdcvdrhvoo")
            .withExistingFleet("apnedgfbcvkc", "q")
            .withProperties(new FleetTierProperties().withServerless(true)
                .withPooled(true)
                .withServiceTier("opcjwvnhd")
                .withFamily("wmgxcxrsl")
                .withCapacity(1073132708)
                .withPoolNumOfDatabasesMax(2107317095)
                .withHighAvailabilityReplicaCount(306696017)
                .withZoneRedundancy(ZoneRedundancy.DISABLED)
                .withDatabaseCapacityMin(42.563397154526115D)
                .withDatabaseCapacityMax(8.13951448981184D)
                .withDatabaseSizeGbMax(726839595))
            .create();

        Assertions.assertEquals(true, response.properties().serverless());
        Assertions.assertEquals(true, response.properties().pooled());
        Assertions.assertEquals("taakc", response.properties().serviceTier());
        Assertions.assertEquals("iyzvqtmnub", response.properties().family());
        Assertions.assertEquals(908407782, response.properties().capacity());
        Assertions.assertEquals(1989438546, response.properties().poolNumOfDatabasesMax());
        Assertions.assertEquals(1254452597, response.properties().highAvailabilityReplicaCount());
        Assertions.assertEquals(ZoneRedundancy.ENABLED, response.properties().zoneRedundancy());
        Assertions.assertEquals(20.0417737626587D, response.properties().databaseCapacityMin());
        Assertions.assertEquals(73.46157561550241D, response.properties().databaseCapacityMax());
        Assertions.assertEquals(1083170526, response.properties().databaseSizeGbMax());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databasefleetmanager.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of FleetTiers.
 */
public interface FleetTiers {
    /**
     * List tiers in a fleet.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FleetTier list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FleetTier> listByFleet(String resourceGroupName, String fleetName);

    /**
     * List tiers in a fleet.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param skip The number of elements in the collection to skip.
     * @param top The number of elements to return from the collection.
     * @param skiptoken An opaque token that identifies a starting point in the collection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FleetTier list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FleetTier> listByFleet(String resourceGroupName, String fleetName, Long skip, Long top,
        String skiptoken, Context context);

    /**
     * Gets a tier resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param tierName Name of the tier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tier resource along with {@link Response}.
     */
    Response<FleetTier> getWithResponse(String resourceGroupName, String fleetName, String tierName, Context context);

    /**
     * Gets a tier resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param tierName Name of the tier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tier resource.
     */
    FleetTier get(String resourceGroupName, String fleetName, String tierName);

    /**
     * Deletes a tier.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param tierName Name of the tier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fleetName, String tierName);

    /**
     * Deletes a tier.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param tierName Name of the tier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fleetName, String tierName, Context context);

    /**
     * Disables a tier.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param tierName Name of the tier.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SQL Database Fleet tier along with {@link Response}.
     */
    Response<FleetTier> disableWithResponse(String resourceGroupName, String fleetName, String tierName,
        Context context);

    /**
     * Disables a tier.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param tierName Name of the tier.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SQL Database Fleet tier.
     */
    FleetTier disable(String resourceGroupName, String fleetName, String tierName);

    /**
     * Gets a tier resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tier resource along with {@link Response}.
     */
    FleetTier getById(String id);

    /**
     * Gets a tier resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tier resource along with {@link Response}.
     */
    Response<FleetTier> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a tier.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a tier.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new FleetTier resource.
     * 
     * @param name resource name.
     * @return the first stage of the new FleetTier definition.
     */
    FleetTier.DefinitionStages.Blank define(String name);
}

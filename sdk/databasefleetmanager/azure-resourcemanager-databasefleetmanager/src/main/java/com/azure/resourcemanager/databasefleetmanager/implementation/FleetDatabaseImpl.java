// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databasefleetmanager.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.databasefleetmanager.fluent.models.FleetDatabaseInner;
import com.azure.resourcemanager.databasefleetmanager.models.DatabaseChangeTierProperties;
import com.azure.resourcemanager.databasefleetmanager.models.DatabaseRenameProperties;
import com.azure.resourcemanager.databasefleetmanager.models.FleetDatabase;
import com.azure.resourcemanager.databasefleetmanager.models.FleetDatabaseProperties;

public final class FleetDatabaseImpl implements FleetDatabase, FleetDatabase.Definition, FleetDatabase.Update {
    private FleetDatabaseInner innerObject;

    private final com.azure.resourcemanager.databasefleetmanager.DatabaseFleetManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public FleetDatabaseProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FleetDatabaseInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.databasefleetmanager.DatabaseFleetManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String fleetName;

    private String fleetspaceName;

    private String databaseName;

    public FleetDatabaseImpl withExistingFleetspace(String resourceGroupName, String fleetName, String fleetspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.fleetName = fleetName;
        this.fleetspaceName = fleetspaceName;
        return this;
    }

    public FleetDatabase create() {
        this.innerObject = serviceManager.serviceClient()
            .getFleetDatabases()
            .createOrUpdate(resourceGroupName, fleetName, fleetspaceName, databaseName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public FleetDatabase create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFleetDatabases()
            .createOrUpdate(resourceGroupName, fleetName, fleetspaceName, databaseName, this.innerModel(), context);
        return this;
    }

    FleetDatabaseImpl(String name, com.azure.resourcemanager.databasefleetmanager.DatabaseFleetManager serviceManager) {
        this.innerObject = new FleetDatabaseInner();
        this.serviceManager = serviceManager;
        this.databaseName = name;
    }

    public FleetDatabaseImpl update() {
        return this;
    }

    public FleetDatabase apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFleetDatabases()
            .update(resourceGroupName, fleetName, fleetspaceName, databaseName, this.innerModel(), Context.NONE);
        return this;
    }

    public FleetDatabase apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFleetDatabases()
            .update(resourceGroupName, fleetName, fleetspaceName, databaseName, this.innerModel(), context);
        return this;
    }

    FleetDatabaseImpl(FleetDatabaseInner innerObject,
        com.azure.resourcemanager.databasefleetmanager.DatabaseFleetManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.fleetName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fleets");
        this.fleetspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fleetspaces");
        this.databaseName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "databases");
    }

    public FleetDatabase refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFleetDatabases()
            .getWithResponse(resourceGroupName, fleetName, fleetspaceName, databaseName, Context.NONE)
            .getValue();
        return this;
    }

    public FleetDatabase refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFleetDatabases()
            .getWithResponse(resourceGroupName, fleetName, fleetspaceName, databaseName, context)
            .getValue();
        return this;
    }

    public void changeTier(DatabaseChangeTierProperties body) {
        serviceManager.fleetDatabases().changeTier(resourceGroupName, fleetName, fleetspaceName, databaseName, body);
    }

    public void changeTier(DatabaseChangeTierProperties body, Context context) {
        serviceManager.fleetDatabases()
            .changeTier(resourceGroupName, fleetName, fleetspaceName, databaseName, body, context);
    }

    public void rename(DatabaseRenameProperties body) {
        serviceManager.fleetDatabases().rename(resourceGroupName, fleetName, fleetspaceName, databaseName, body);
    }

    public void rename(DatabaseRenameProperties body, Context context) {
        serviceManager.fleetDatabases()
            .rename(resourceGroupName, fleetName, fleetspaceName, databaseName, body, context);
    }

    public void revert() {
        serviceManager.fleetDatabases().revert(resourceGroupName, fleetName, fleetspaceName, databaseName);
    }

    public void revert(Context context) {
        serviceManager.fleetDatabases().revert(resourceGroupName, fleetName, fleetspaceName, databaseName, context);
    }

    public FleetDatabaseImpl withProperties(FleetDatabaseProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

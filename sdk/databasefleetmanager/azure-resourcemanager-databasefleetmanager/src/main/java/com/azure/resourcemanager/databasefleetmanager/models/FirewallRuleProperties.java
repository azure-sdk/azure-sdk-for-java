// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databasefleetmanager.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A Firewall rule properties.
 */
@Fluent
public final class FirewallRuleProperties implements JsonSerializable<FirewallRuleProperties> {
    /*
     * Start IP address.
     */
    private String startIpAddress;

    /*
     * End IP address.
     */
    private String endIpAddress;

    /*
     * Provisioning state.
     */
    private AzureProvisioningState provisioningState;

    /**
     * Creates an instance of FirewallRuleProperties class.
     */
    public FirewallRuleProperties() {
    }

    /**
     * Get the startIpAddress property: Start IP address.
     * 
     * @return the startIpAddress value.
     */
    public String startIpAddress() {
        return this.startIpAddress;
    }

    /**
     * Set the startIpAddress property: Start IP address.
     * 
     * @param startIpAddress the startIpAddress value to set.
     * @return the FirewallRuleProperties object itself.
     */
    public FirewallRuleProperties withStartIpAddress(String startIpAddress) {
        this.startIpAddress = startIpAddress;
        return this;
    }

    /**
     * Get the endIpAddress property: End IP address.
     * 
     * @return the endIpAddress value.
     */
    public String endIpAddress() {
        return this.endIpAddress;
    }

    /**
     * Set the endIpAddress property: End IP address.
     * 
     * @param endIpAddress the endIpAddress value to set.
     * @return the FirewallRuleProperties object itself.
     */
    public FirewallRuleProperties withEndIpAddress(String endIpAddress) {
        this.endIpAddress = endIpAddress;
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning state.
     * 
     * @return the provisioningState value.
     */
    public AzureProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("startIpAddress", this.startIpAddress);
        jsonWriter.writeStringField("endIpAddress", this.endIpAddress);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FirewallRuleProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FirewallRuleProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FirewallRuleProperties.
     */
    public static FirewallRuleProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FirewallRuleProperties deserializedFirewallRuleProperties = new FirewallRuleProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("startIpAddress".equals(fieldName)) {
                    deserializedFirewallRuleProperties.startIpAddress = reader.getString();
                } else if ("endIpAddress".equals(fieldName)) {
                    deserializedFirewallRuleProperties.endIpAddress = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedFirewallRuleProperties.provisioningState
                        = AzureProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFirewallRuleProperties;
        });
    }
}

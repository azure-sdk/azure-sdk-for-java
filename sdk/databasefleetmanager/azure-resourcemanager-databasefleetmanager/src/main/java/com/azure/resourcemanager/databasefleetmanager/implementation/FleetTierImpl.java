// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.databasefleetmanager.fluent.models.FleetTierInner;
import com.azure.resourcemanager.databasefleetmanager.models.FleetTier;
import com.azure.resourcemanager.databasefleetmanager.models.FleetTierProperties;

public final class FleetTierImpl implements FleetTier, FleetTier.Definition, FleetTier.Update {
    private FleetTierInner innerObject;

    private final com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public FleetTierProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public FleetTierInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String fleetName;

    private String tierName;

    public FleetTierImpl withExistingFleet(String resourceGroupName, String fleetName) {
        this.resourceGroupName = resourceGroupName;
        this.fleetName = fleetName;
        return this;
    }

    public FleetTier create() {
        this.innerObject = serviceManager.serviceClient()
            .getFleetTiers()
            .createOrUpdate(resourceGroupName, fleetName, tierName, this.innerModel(), Context.NONE);
        return this;
    }

    public FleetTier create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFleetTiers()
            .createOrUpdate(resourceGroupName, fleetName, tierName, this.innerModel(), context);
        return this;
    }

    FleetTierImpl(String name,
        com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager serviceManager) {
        this.innerObject = new FleetTierInner();
        this.serviceManager = serviceManager;
        this.tierName = name;
    }

    public FleetTierImpl update() {
        return this;
    }

    public FleetTier apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFleetTiers()
            .update(resourceGroupName, fleetName, tierName, this.innerModel(), Context.NONE);
        return this;
    }

    public FleetTier apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFleetTiers()
            .update(resourceGroupName, fleetName, tierName, this.innerModel(), context);
        return this;
    }

    FleetTierImpl(FleetTierInner innerObject,
        com.azure.resourcemanager.databasefleetmanager.DatabasefleetmanagerManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.fleetName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fleets");
        this.tierName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "tiers");
    }

    public FleetTier refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFleetTiers()
            .getWithResponse(resourceGroupName, fleetName, tierName, Context.NONE)
            .getValue();
        return this;
    }

    public FleetTier refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFleetTiers()
            .getWithResponse(resourceGroupName, fleetName, tierName, context)
            .getValue();
        return this;
    }

    public Response<FleetTier> disableWithResponse(Context context) {
        return serviceManager.fleetTiers().disableWithResponse(resourceGroupName, fleetName, tierName, context);
    }

    public FleetTier disable() {
        return serviceManager.fleetTiers().disable(resourceGroupName, fleetName, tierName);
    }

    public FleetTierImpl withProperties(FleetTierProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

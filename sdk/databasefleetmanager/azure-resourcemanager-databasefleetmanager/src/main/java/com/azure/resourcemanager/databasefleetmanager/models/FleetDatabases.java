// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.databasefleetmanager.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of FleetDatabases.
 */
public interface FleetDatabases {
    /**
     * Gets a fleet database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a fleet database along with {@link Response}.
     */
    Response<FleetDatabase> getWithResponse(String resourceGroupName, String fleetName, String fleetspaceName,
        String databaseName, Context context);

    /**
     * Gets a fleet database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a fleet database.
     */
    FleetDatabase get(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName);

    /**
     * Deletes a fleet database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName);

    /**
     * Deletes a fleet database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName,
        Context context);

    /**
     * Gets all fleet databases in a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all fleet databases in a fleetspace as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FleetDatabase> listByFleetspace(String resourceGroupName, String fleetName, String fleetspaceName);

    /**
     * Gets all fleet databases in a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param skip The number of elements in the collection to skip.
     * @param top The number of elements to return from the collection.
     * @param filter An OData filter expression that filters elements in the collection.
     * @param skiptoken An opaque token that identifies a starting point in the collection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all fleet databases in a fleetspace as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FleetDatabase> listByFleetspace(String resourceGroupName, String fleetName, String fleetspaceName,
        Long skip, Long top, String filter, String skiptoken, Context context);

    /**
     * Moves database to a different tier.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @param body The details of the change tier operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void changeTier(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName,
        DatabaseChangeTierProperties body);

    /**
     * Moves database to a different tier.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @param body The details of the change tier operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void changeTier(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName,
        DatabaseChangeTierProperties body, Context context);

    /**
     * Renames a database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @param body The details of the rename operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void rename(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName,
        DatabaseRenameProperties body);

    /**
     * Renames a database.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Name of the database fleet.
     * @param fleetspaceName Name of the fleetspace.
     * @param databaseName Name of the database.
     * @param body The details of the rename operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void rename(String resourceGroupName, String fleetName, String fleetspaceName, String databaseName,
        DatabaseRenameProperties body, Context context);

    /**
     * Gets a fleet database.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a fleet database along with {@link Response}.
     */
    FleetDatabase getById(String id);

    /**
     * Gets a fleet database.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a fleet database along with {@link Response}.
     */
    Response<FleetDatabase> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a fleet database.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a fleet database.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new FleetDatabase resource.
     * 
     * @param name resource name.
     * @return the first stage of the new FleetDatabase definition.
     */
    FleetDatabase.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.githubnetwork.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.githubnetwork.fluent.models.NetworkSettingsResourceInner;
import com.azure.resourcemanager.githubnetwork.models.NetworkSettingsResource;
import com.azure.resourcemanager.githubnetwork.models.NetworkSettingsResourceProperties;
import com.azure.resourcemanager.githubnetwork.models.NetworkSettingsResourceUpdate;
import java.util.Collections;
import java.util.Map;

public final class NetworkSettingsResourceImpl
    implements NetworkSettingsResource, NetworkSettingsResource.Definition, NetworkSettingsResource.Update {
    private NetworkSettingsResourceInner innerObject;

    private final com.azure.resourcemanager.githubnetwork.GitHubNetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public NetworkSettingsResourceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NetworkSettingsResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.githubnetwork.GitHubNetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSettingsName;

    private NetworkSettingsResourceUpdate updateNetworkSettings;

    public NetworkSettingsResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NetworkSettingsResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSettings()
            .createWithResponse(resourceGroupName, networkSettingsName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public NetworkSettingsResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSettings()
            .createWithResponse(resourceGroupName, networkSettingsName, this.innerModel(), context)
            .getValue();
        return this;
    }

    NetworkSettingsResourceImpl(String name,
        com.azure.resourcemanager.githubnetwork.GitHubNetworkManager serviceManager) {
        this.innerObject = new NetworkSettingsResourceInner();
        this.serviceManager = serviceManager;
        this.networkSettingsName = name;
    }

    public NetworkSettingsResourceImpl update() {
        this.updateNetworkSettings = new NetworkSettingsResourceUpdate();
        return this;
    }

    public NetworkSettingsResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSettings()
            .updateWithResponse(resourceGroupName, networkSettingsName, updateNetworkSettings, Context.NONE)
            .getValue();
        return this;
    }

    public NetworkSettingsResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSettings()
            .updateWithResponse(resourceGroupName, networkSettingsName, updateNetworkSettings, context)
            .getValue();
        return this;
    }

    NetworkSettingsResourceImpl(NetworkSettingsResourceInner innerObject,
        com.azure.resourcemanager.githubnetwork.GitHubNetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSettingsName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "networkSettings");
    }

    public NetworkSettingsResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSettings()
            .getByResourceGroupWithResponse(resourceGroupName, networkSettingsName, Context.NONE)
            .getValue();
        return this;
    }

    public NetworkSettingsResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNetworkSettings()
            .getByResourceGroupWithResponse(resourceGroupName, networkSettingsName, context)
            .getValue();
        return this;
    }

    public NetworkSettingsResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkSettingsResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkSettingsResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateNetworkSettings.withTags(tags);
            return this;
        }
    }

    public NetworkSettingsResourceImpl withProperties(NetworkSettingsResourceProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateNetworkSettings.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

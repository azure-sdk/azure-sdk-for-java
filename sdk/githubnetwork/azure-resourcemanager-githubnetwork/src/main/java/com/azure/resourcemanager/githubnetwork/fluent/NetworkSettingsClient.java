// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.githubnetwork.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.githubnetwork.fluent.models.NetworkSettingsResourceInner;
import com.azure.resourcemanager.githubnetwork.models.NetworkSettingsResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in NetworkSettingsClient.
 */
public interface NetworkSettingsClient {
    /**
     * Retrieves the properties of all GitHub.Network networkSettings resources.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkSettingsResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkSettingsResourceInner> list();

    /**
     * Retrieves the properties of all GitHub.Network networkSettings resources.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkSettingsResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkSettingsResourceInner> list(Context context);

    /**
     * Retrieves the properties of all GitHub.Network networkSettings resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkSettingsResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkSettingsResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Retrieves the properties of all GitHub.Network networkSettings resources.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NetworkSettingsResource list operation as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkSettingsResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Retrieves the properties of a GitHub.Network networkSettings resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return gitHub.Network networkSettings resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkSettingsResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String networkSettingsName, Context context);

    /**
     * Retrieves the properties of a GitHub.Network networkSettings resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return gitHub.Network networkSettings resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkSettingsResourceInner getByResourceGroup(String resourceGroupName, String networkSettingsName);

    /**
     * Creates a GitHub.Network networkSettings resource with the specified create parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @param networkSettings GitHub.Network networkSettings resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return gitHub.Network networkSettings resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkSettingsResourceInner> createWithResponse(String resourceGroupName, String networkSettingsName,
        NetworkSettingsResourceInner networkSettings, Context context);

    /**
     * Creates a GitHub.Network networkSettings resource with the specified create parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @param networkSettings GitHub.Network networkSettings resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return gitHub.Network networkSettings resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkSettingsResourceInner create(String resourceGroupName, String networkSettingsName,
        NetworkSettingsResourceInner networkSettings);

    /**
     * Updates the properties of an existing GitHub.Network networkSettings resource with the specified update
     * parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @param networkSettings Parameters for updating the properties of the GitHub.Network resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return gitHub.Network networkSettings resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkSettingsResourceInner> updateWithResponse(String resourceGroupName, String networkSettingsName,
        NetworkSettingsResourceUpdate networkSettings, Context context);

    /**
     * Updates the properties of an existing GitHub.Network networkSettings resource with the specified update
     * parameters.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @param networkSettings Parameters for updating the properties of the GitHub.Network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return gitHub.Network networkSettings resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkSettingsResourceInner update(String resourceGroupName, String networkSettingsName,
        NetworkSettingsResourceUpdate networkSettings);

    /**
     * Deletes an existing GitHub.Network networkSettings resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String networkSettingsName, Context context);

    /**
     * Deletes an existing GitHub.Network networkSettings resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param networkSettingsName Name of the GitHub.Network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String networkSettingsName);
}

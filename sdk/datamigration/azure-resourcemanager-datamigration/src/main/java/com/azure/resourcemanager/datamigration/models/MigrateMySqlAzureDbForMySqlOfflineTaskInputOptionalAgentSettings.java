// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/** Optional parameters for fine tuning the data migration. */
@Fluent
public final class MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings {
    /*
     * Setting to enable transactional consistency
     */
    @JsonProperty(value = "enableConsistentBackup")
    private Boolean enableConsistentBackup;

    /*
     * Optional parameters for fine tuning the data migration
     */
    @JsonIgnore private Map<String, String> additionalProperties;

    /** Creates an instance of MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings class. */
    public MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings() {
    }

    /**
     * Get the enableConsistentBackup property: Setting to enable transactional consistency.
     *
     * @return the enableConsistentBackup value.
     */
    public Boolean enableConsistentBackup() {
        return this.enableConsistentBackup;
    }

    /**
     * Set the enableConsistentBackup property: Setting to enable transactional consistency.
     *
     * @param enableConsistentBackup the enableConsistentBackup value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings withEnableConsistentBackup(
        Boolean enableConsistentBackup) {
        this.enableConsistentBackup = enableConsistentBackup;
        return this;
    }

    /**
     * Get the additionalProperties property: Optional parameters for fine tuning the data migration.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, String> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Optional parameters for fine tuning the data migration.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineTaskInputOptionalAgentSettings withAdditionalProperties(
        Map<String, String> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, String value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

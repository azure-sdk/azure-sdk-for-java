// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** MySQL binlog reference. */
@Fluent
public final class MySqlBinlogPositionOutput {
    /*
     * Specifies the MySQL binlog file name
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Specifies the position in the binlog file
     */
    @JsonProperty(value = "position", access = JsonProperty.Access.WRITE_ONLY)
    private Long position;

    /*
     * Specifies the the sequential number of the binlog fie, extracted from the file name
     */
    @JsonProperty(value = "fileSeqNum")
    private Integer fileSeqNum;

    /** Creates an instance of MySqlBinlogPositionOutput class. */
    public MySqlBinlogPositionOutput() {
    }

    /**
     * Get the name property: Specifies the MySQL binlog file name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the position property: Specifies the position in the binlog file.
     *
     * @return the position value.
     */
    public Long position() {
        return this.position;
    }

    /**
     * Get the fileSeqNum property: Specifies the the sequential number of the binlog fie, extracted from the file name.
     *
     * @return the fileSeqNum value.
     */
    public Integer fileSeqNum() {
        return this.fileSeqNum;
    }

    /**
     * Set the fileSeqNum property: Specifies the the sequential number of the binlog fie, extracted from the file name.
     *
     * @param fileSeqNum the fileSeqNum value to set.
     * @return the MySqlBinlogPositionOutput object itself.
     */
    public MySqlBinlogPositionOutput withFileSeqNum(Integer fileSeqNum) {
        this.fileSeqNum = fileSeqNum;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

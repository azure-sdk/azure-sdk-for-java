// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Mongo source and target database and collection details.
 */
@Fluent
public final class MongoMigrationCollection {
    /*
     * Source database name.
     */
    @JsonProperty(value = "sourceDatabase")
    private String sourceDatabase;

    /*
     * Source collection name.
     */
    @JsonProperty(value = "sourceCollection")
    private String sourceCollection;

    /*
     * Target database name.
     */
    @JsonProperty(value = "targetDatabase")
    private String targetDatabase;

    /*
     * Target collection name.
     */
    @JsonProperty(value = "targetCollection")
    private String targetCollection;

    /*
     * Detailed migration status. Not included by default.
     */
    @JsonProperty(value = "migrationProgressDetails", access = JsonProperty.Access.WRITE_ONLY)
    private MongoMigrationProgressDetails migrationProgressDetails;

    /**
     * Creates an instance of MongoMigrationCollection class.
     */
    public MongoMigrationCollection() {
    }

    /**
     * Get the sourceDatabase property: Source database name.
     * 
     * @return the sourceDatabase value.
     */
    public String sourceDatabase() {
        return this.sourceDatabase;
    }

    /**
     * Set the sourceDatabase property: Source database name.
     * 
     * @param sourceDatabase the sourceDatabase value to set.
     * @return the MongoMigrationCollection object itself.
     */
    public MongoMigrationCollection withSourceDatabase(String sourceDatabase) {
        this.sourceDatabase = sourceDatabase;
        return this;
    }

    /**
     * Get the sourceCollection property: Source collection name.
     * 
     * @return the sourceCollection value.
     */
    public String sourceCollection() {
        return this.sourceCollection;
    }

    /**
     * Set the sourceCollection property: Source collection name.
     * 
     * @param sourceCollection the sourceCollection value to set.
     * @return the MongoMigrationCollection object itself.
     */
    public MongoMigrationCollection withSourceCollection(String sourceCollection) {
        this.sourceCollection = sourceCollection;
        return this;
    }

    /**
     * Get the targetDatabase property: Target database name.
     * 
     * @return the targetDatabase value.
     */
    public String targetDatabase() {
        return this.targetDatabase;
    }

    /**
     * Set the targetDatabase property: Target database name.
     * 
     * @param targetDatabase the targetDatabase value to set.
     * @return the MongoMigrationCollection object itself.
     */
    public MongoMigrationCollection withTargetDatabase(String targetDatabase) {
        this.targetDatabase = targetDatabase;
        return this;
    }

    /**
     * Get the targetCollection property: Target collection name.
     * 
     * @return the targetCollection value.
     */
    public String targetCollection() {
        return this.targetCollection;
    }

    /**
     * Set the targetCollection property: Target collection name.
     * 
     * @param targetCollection the targetCollection value to set.
     * @return the MongoMigrationCollection object itself.
     */
    public MongoMigrationCollection withTargetCollection(String targetCollection) {
        this.targetCollection = targetCollection;
        return this;
    }

    /**
     * Get the migrationProgressDetails property: Detailed migration status. Not included by default.
     * 
     * @return the migrationProgressDetails value.
     */
    public MongoMigrationProgressDetails migrationProgressDetails() {
        return this.migrationProgressDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (migrationProgressDetails() != null) {
            migrationProgressDetails().validate();
        }
    }
}

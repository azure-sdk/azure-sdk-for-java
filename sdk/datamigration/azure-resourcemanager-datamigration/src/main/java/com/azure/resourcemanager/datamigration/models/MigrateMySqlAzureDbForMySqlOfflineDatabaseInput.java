// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Database specific information for offline MySQL to Azure Database for MySQL migration task inputs. */
@Fluent
public final class MigrateMySqlAzureDbForMySqlOfflineDatabaseInput {
    /*
     * Name of the database
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Name of target database. Note: Target database will be truncated before starting migration.
     */
    @JsonProperty(value = "targetDatabaseName")
    private String targetDatabaseName;

    /*
     * Mapping of source to target tables
     */
    @JsonProperty(value = "tableMap")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tableMap;

    /*
     * Mapping of source to target tables for schema migration
     */
    @JsonProperty(value = "tablesToMigrateSchema")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tablesToMigrateSchema;

    /*
     * List of views to migrate
     */
    @JsonProperty(value = "selectedViews")
    private List<String> selectedViews;

    /*
     * List of triggers to migrate
     */
    @JsonProperty(value = "selectedTriggers")
    private List<String> selectedTriggers;

    /*
     * List of routines to migrate
     */
    @JsonProperty(value = "selectedRoutines")
    private List<String> selectedRoutines;

    /*
     * List of events to migrate
     */
    @JsonProperty(value = "selectedEvents")
    private List<String> selectedEvents;

    /** Creates an instance of MigrateMySqlAzureDbForMySqlOfflineDatabaseInput class. */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput() {
    }

    /**
     * Get the name property: Name of the database.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the database.
     *
     * @param name the name value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the targetDatabaseName property: Name of target database. Note: Target database will be truncated before
     * starting migration.
     *
     * @return the targetDatabaseName value.
     */
    public String targetDatabaseName() {
        return this.targetDatabaseName;
    }

    /**
     * Set the targetDatabaseName property: Name of target database. Note: Target database will be truncated before
     * starting migration.
     *
     * @param targetDatabaseName the targetDatabaseName value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withTargetDatabaseName(String targetDatabaseName) {
        this.targetDatabaseName = targetDatabaseName;
        return this;
    }

    /**
     * Get the tableMap property: Mapping of source to target tables.
     *
     * @return the tableMap value.
     */
    public Map<String, String> tableMap() {
        return this.tableMap;
    }

    /**
     * Set the tableMap property: Mapping of source to target tables.
     *
     * @param tableMap the tableMap value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withTableMap(Map<String, String> tableMap) {
        this.tableMap = tableMap;
        return this;
    }

    /**
     * Get the tablesToMigrateSchema property: Mapping of source to target tables for schema migration.
     *
     * @return the tablesToMigrateSchema value.
     */
    public Map<String, String> tablesToMigrateSchema() {
        return this.tablesToMigrateSchema;
    }

    /**
     * Set the tablesToMigrateSchema property: Mapping of source to target tables for schema migration.
     *
     * @param tablesToMigrateSchema the tablesToMigrateSchema value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withTablesToMigrateSchema(
        Map<String, String> tablesToMigrateSchema) {
        this.tablesToMigrateSchema = tablesToMigrateSchema;
        return this;
    }

    /**
     * Get the selectedViews property: List of views to migrate.
     *
     * @return the selectedViews value.
     */
    public List<String> selectedViews() {
        return this.selectedViews;
    }

    /**
     * Set the selectedViews property: List of views to migrate.
     *
     * @param selectedViews the selectedViews value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withSelectedViews(List<String> selectedViews) {
        this.selectedViews = selectedViews;
        return this;
    }

    /**
     * Get the selectedTriggers property: List of triggers to migrate.
     *
     * @return the selectedTriggers value.
     */
    public List<String> selectedTriggers() {
        return this.selectedTriggers;
    }

    /**
     * Set the selectedTriggers property: List of triggers to migrate.
     *
     * @param selectedTriggers the selectedTriggers value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withSelectedTriggers(List<String> selectedTriggers) {
        this.selectedTriggers = selectedTriggers;
        return this;
    }

    /**
     * Get the selectedRoutines property: List of routines to migrate.
     *
     * @return the selectedRoutines value.
     */
    public List<String> selectedRoutines() {
        return this.selectedRoutines;
    }

    /**
     * Set the selectedRoutines property: List of routines to migrate.
     *
     * @param selectedRoutines the selectedRoutines value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withSelectedRoutines(List<String> selectedRoutines) {
        this.selectedRoutines = selectedRoutines;
        return this;
    }

    /**
     * Get the selectedEvents property: List of events to migrate.
     *
     * @return the selectedEvents value.
     */
    public List<String> selectedEvents() {
        return this.selectedEvents;
    }

    /**
     * Set the selectedEvents property: List of events to migrate.
     *
     * @param selectedEvents the selectedEvents value to set.
     * @return the MigrateMySqlAzureDbForMySqlOfflineDatabaseInput object itself.
     */
    public MigrateMySqlAzureDbForMySqlOfflineDatabaseInput withSelectedEvents(List<String> selectedEvents) {
        this.selectedEvents = selectedEvents;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

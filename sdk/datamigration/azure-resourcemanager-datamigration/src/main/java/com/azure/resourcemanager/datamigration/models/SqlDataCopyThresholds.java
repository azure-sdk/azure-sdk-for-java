// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datamigration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Minimum Row count and size of a table with a clustered index required to perform parallel data copy. */
@Fluent
public final class SqlDataCopyThresholds {
    /*
     * Minimum row count of a table with clustered index to perform parallel data copy
     */
    @JsonProperty(value = "cidxRowThreshold")
    private Integer cidxRowThreshold;

    /*
     * Minimum required size in kbs of a table with a clustered index to perform parallel data copy
     */
    @JsonProperty(value = "cidxKbsThreshold")
    private Integer cidxKbsThreshold;

    /** Creates an instance of SqlDataCopyThresholds class. */
    public SqlDataCopyThresholds() {
    }

    /**
     * Get the cidxRowThreshold property: Minimum row count of a table with clustered index to perform parallel data
     * copy.
     *
     * @return the cidxRowThreshold value.
     */
    public Integer cidxRowThreshold() {
        return this.cidxRowThreshold;
    }

    /**
     * Set the cidxRowThreshold property: Minimum row count of a table with clustered index to perform parallel data
     * copy.
     *
     * @param cidxRowThreshold the cidxRowThreshold value to set.
     * @return the SqlDataCopyThresholds object itself.
     */
    public SqlDataCopyThresholds withCidxRowThreshold(Integer cidxRowThreshold) {
        this.cidxRowThreshold = cidxRowThreshold;
        return this;
    }

    /**
     * Get the cidxKbsThreshold property: Minimum required size in kbs of a table with a clustered index to perform
     * parallel data copy.
     *
     * @return the cidxKbsThreshold value.
     */
    public Integer cidxKbsThreshold() {
        return this.cidxKbsThreshold;
    }

    /**
     * Set the cidxKbsThreshold property: Minimum required size in kbs of a table with a clustered index to perform
     * parallel data copy.
     *
     * @param cidxKbsThreshold the cidxKbsThreshold value to set.
     * @return the SqlDataCopyThresholds object itself.
     */
    public SqlDataCopyThresholds withCidxKbsThreshold(Integer cidxKbsThreshold) {
        this.cidxKbsThreshold = cidxKbsThreshold;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

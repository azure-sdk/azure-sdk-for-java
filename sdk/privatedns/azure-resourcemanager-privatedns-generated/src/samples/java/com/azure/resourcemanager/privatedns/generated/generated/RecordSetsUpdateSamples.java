// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.privatedns.generated.generated;

import com.azure.resourcemanager.privatedns.generated.fluent.models.RecordSetInner;
import com.azure.resourcemanager.privatedns.generated.models.RecordType;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for RecordSets Update.
 */
public final class RecordSetsUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetTXTPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone TXT Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneTXTRecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "recordTXT", RecordType.TXT,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetSOAPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone SOA Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneSOARecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "@", RecordType.SOA,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetAPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone A Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneARecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "recordA", RecordType.A,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetCNAMEPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone CNAME Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneCNAMERecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "recordCNAME", RecordType.CNAME,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetPTRPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone PTR Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZonePTRRecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "0.0.127.in-addr.arpa", "1", RecordType.PTR,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetSRVPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone SRV Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneSRVRecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "recordSRV", RecordType.SRV,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetAAAAPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone AAAA Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneAAAARecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "recordAAAA", RecordType.AAAA,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    /*
     * x-ms-original-file:
     * specification/privatedns/resource-manager/Microsoft.Network/stable/2024-06-01/examples/RecordSetMXPatch.json
     */
    /**
     * Sample code: PATCH Private DNS Zone MX Record Set.
     * 
     * @param manager Entry point to PrivateDnsManager.
     */
    public static void
        pATCHPrivateDNSZoneMXRecordSet(com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager) {
        manager.recordSets()
            .updateWithResponse("resourceGroup1", "privatezone1.com", "recordMX", RecordType.MX,
                new RecordSetInner().withMetadata(mapOf("key2", "fakeTokenPlaceholder")), null,
                com.azure.core.util.Context.NONE);
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

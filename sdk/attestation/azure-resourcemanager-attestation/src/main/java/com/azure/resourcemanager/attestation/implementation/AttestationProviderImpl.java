// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.attestation.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.attestation.fluent.models.AttestationProviderInner;
import com.azure.resourcemanager.attestation.models.AttestationProvider;
import com.azure.resourcemanager.attestation.models.AttestationProviderUpdate;
import com.azure.resourcemanager.attestation.models.AttestationServiceStatus;
import com.azure.resourcemanager.attestation.models.AzureResourceManagerPrivateEndpointConnection;
import com.azure.resourcemanager.attestation.models.PublicNetworkAccessType;
import com.azure.resourcemanager.attestation.models.TpmAttestationAuthenticationType;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class AttestationProviderImpl
    implements AttestationProvider, AttestationProvider.Definition, AttestationProvider.Update {
    private AttestationProviderInner innerObject;

    private final com.azure.resourcemanager.attestation.AttestationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String trustModel() {
        return this.innerModel().trustModel();
    }

    public AttestationServiceStatus status() {
        return this.innerModel().status();
    }

    public String attestUri() {
        return this.innerModel().attestUri();
    }

    public PublicNetworkAccessType publicNetworkAccess() {
        return this.innerModel().publicNetworkAccess();
    }

    public List<AzureResourceManagerPrivateEndpointConnection> privateEndpointConnections() {
        List<AzureResourceManagerPrivateEndpointConnection> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public TpmAttestationAuthenticationType tpmAttestationAuthentication() {
        return this.innerModel().tpmAttestationAuthentication();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AttestationProviderInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.attestation.AttestationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String providerName;

    private AttestationProviderUpdate updateProperties;

    public AttestationProviderImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public AttestationProvider create() {
        this.innerObject = serviceManager.serviceClient().getAttestationProviders()
            .createWithResponse(resourceGroupName, providerName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public AttestationProvider create(Context context) {
        this.innerObject = serviceManager.serviceClient().getAttestationProviders()
            .createWithResponse(resourceGroupName, providerName, this.innerModel(), context).getValue();
        return this;
    }

    AttestationProviderImpl(String name, com.azure.resourcemanager.attestation.AttestationManager serviceManager) {
        this.innerObject = new AttestationProviderInner();
        this.serviceManager = serviceManager;
        this.providerName = name;
    }

    public AttestationProviderImpl update() {
        this.updateProperties = new AttestationProviderUpdate();
        return this;
    }

    public AttestationProvider apply() {
        this.innerObject = serviceManager.serviceClient().getAttestationProviders()
            .updateWithResponse(resourceGroupName, providerName, updateProperties, Context.NONE).getValue();
        return this;
    }

    public AttestationProvider apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getAttestationProviders()
            .updateWithResponse(resourceGroupName, providerName, updateProperties, context).getValue();
        return this;
    }

    AttestationProviderImpl(AttestationProviderInner innerObject,
        com.azure.resourcemanager.attestation.AttestationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.providerName = Utils.getValueFromIdByName(innerObject.id(), "attestationProviders");
    }

    public AttestationProvider refresh() {
        this.innerObject = serviceManager.serviceClient().getAttestationProviders()
            .getByResourceGroupWithResponse(resourceGroupName, providerName, Context.NONE).getValue();
        return this;
    }

    public AttestationProvider refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getAttestationProviders()
            .getByResourceGroupWithResponse(resourceGroupName, providerName, context).getValue();
        return this;
    }

    public AttestationProviderImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AttestationProviderImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AttestationProviderImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public AttestationProviderImpl withTrustModel(String trustModel) {
        if (isInCreateMode()) {
            this.innerModel().withTrustModel(trustModel);
            return this;
        } else {
            this.updateProperties.withTrustModel(trustModel);
            return this;
        }
    }

    public AttestationProviderImpl withStatus(AttestationServiceStatus status) {
        if (isInCreateMode()) {
            this.innerModel().withStatus(status);
            return this;
        } else {
            this.updateProperties.withStatus(status);
            return this;
        }
    }

    public AttestationProviderImpl withAttestUri(String attestUri) {
        if (isInCreateMode()) {
            this.innerModel().withAttestUri(attestUri);
            return this;
        } else {
            this.updateProperties.withAttestUri(attestUri);
            return this;
        }
    }

    public AttestationProviderImpl withPublicNetworkAccess(PublicNetworkAccessType publicNetworkAccess) {
        if (isInCreateMode()) {
            this.innerModel().withPublicNetworkAccess(publicNetworkAccess);
            return this;
        } else {
            this.updateProperties.withPublicNetworkAccess(publicNetworkAccess);
            return this;
        }
    }

    public AttestationProviderImpl
        withTpmAttestationAuthentication(TpmAttestationAuthenticationType tpmAttestationAuthentication) {
        if (isInCreateMode()) {
            this.innerModel().withTpmAttestationAuthentication(tpmAttestationAuthentication);
            return this;
        } else {
            this.updateProperties.withTpmAttestationAuthentication(tpmAttestationAuthentication);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.attestation.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.attestation.fluent.models.AttestationProviderUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The type used for update operations of the AttestationProvider.
 */
@Fluent
public final class AttestationProviderUpdate {
    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the AttestationProvider.
     */
    @JsonProperty(value = "properties")
    private AttestationProviderUpdateProperties innerProperties;

    /**
     * Creates an instance of AttestationProviderUpdate class.
     */
    public AttestationProviderUpdate() {
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the AttestationProviderUpdate object itself.
     */
    public AttestationProviderUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the AttestationProvider.
     * 
     * @return the innerProperties value.
     */
    private AttestationProviderUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the trustModel property: Trust model for the attestation provider.
     * 
     * @return the trustModel value.
     */
    public String trustModel() {
        return this.innerProperties() == null ? null : this.innerProperties().trustModel();
    }

    /**
     * Set the trustModel property: Trust model for the attestation provider.
     * 
     * @param trustModel the trustModel value to set.
     * @return the AttestationProviderUpdate object itself.
     */
    public AttestationProviderUpdate withTrustModel(String trustModel) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AttestationProviderUpdateProperties();
        }
        this.innerProperties().withTrustModel(trustModel);
        return this;
    }

    /**
     * Get the status property: Status of attestation service.
     * 
     * @return the status value.
     */
    public AttestationServiceStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: Status of attestation service.
     * 
     * @param status the status value to set.
     * @return the AttestationProviderUpdate object itself.
     */
    public AttestationProviderUpdate withStatus(AttestationServiceStatus status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AttestationProviderUpdateProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the attestUri property: Gets the uri of attestation service.
     * 
     * @return the attestUri value.
     */
    public String attestUri() {
        return this.innerProperties() == null ? null : this.innerProperties().attestUri();
    }

    /**
     * Set the attestUri property: Gets the uri of attestation service.
     * 
     * @param attestUri the attestUri value to set.
     * @return the AttestationProviderUpdate object itself.
     */
    public AttestationProviderUpdate withAttestUri(String attestUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AttestationProviderUpdateProperties();
        }
        this.innerProperties().withAttestUri(attestUri);
        return this;
    }

    /**
     * Get the publicNetworkAccess property: Controls whether traffic from the public network is allowed to access the
     * Attestation Provider APIs.
     * 
     * @return the publicNetworkAccess value.
     */
    public PublicNetworkAccessType publicNetworkAccess() {
        return this.innerProperties() == null ? null : this.innerProperties().publicNetworkAccess();
    }

    /**
     * Set the publicNetworkAccess property: Controls whether traffic from the public network is allowed to access the
     * Attestation Provider APIs.
     * 
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the AttestationProviderUpdate object itself.
     */
    public AttestationProviderUpdate withPublicNetworkAccess(PublicNetworkAccessType publicNetworkAccess) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AttestationProviderUpdateProperties();
        }
        this.innerProperties().withPublicNetworkAccess(publicNetworkAccess);
        return this;
    }

    /**
     * Get the tpmAttestationAuthentication property: The setting that controls whether authentication is enabled or
     * disabled for TPM Attestation REST APIs.
     * 
     * @return the tpmAttestationAuthentication value.
     */
    public TpmAttestationAuthenticationType tpmAttestationAuthentication() {
        return this.innerProperties() == null ? null : this.innerProperties().tpmAttestationAuthentication();
    }

    /**
     * Set the tpmAttestationAuthentication property: The setting that controls whether authentication is enabled or
     * disabled for TPM Attestation REST APIs.
     * 
     * @param tpmAttestationAuthentication the tpmAttestationAuthentication value to set.
     * @return the AttestationProviderUpdate object itself.
     */
    public AttestationProviderUpdate
        withTpmAttestationAuthentication(TpmAttestationAuthenticationType tpmAttestationAuthentication) {
        if (this.innerProperties() == null) {
            this.innerProperties = new AttestationProviderUpdateProperties();
        }
        this.innerProperties().withTpmAttestationAuthentication(tpmAttestationAuthentication);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

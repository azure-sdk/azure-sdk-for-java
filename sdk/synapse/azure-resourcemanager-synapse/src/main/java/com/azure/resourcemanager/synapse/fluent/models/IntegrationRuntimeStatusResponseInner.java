// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.synapse.models.IntegrationRuntimeState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Integration runtime status response. */
@Immutable
public final class IntegrationRuntimeStatusResponseInner {
    /*
     * The integration runtime name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Integration runtime properties.
     */
    @JsonProperty(value = "properties", required = true)
    private IntegrationRuntimeStatus innerProperties = new IntegrationRuntimeStatus();

    /** Creates an instance of IntegrationRuntimeStatusResponseInner class. */
    public IntegrationRuntimeStatusResponseInner() {
    }

    /**
     * Get the name property: The integration runtime name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the innerProperties property: Integration runtime properties.
     *
     * @return the innerProperties value.
     */
    private IntegrationRuntimeStatus innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the dataFactoryName property: The workspace name which the integration runtime belong to.
     *
     * @return the dataFactoryName value.
     */
    public String dataFactoryName() {
        return this.innerProperties() == null ? null : this.innerProperties().dataFactoryName();
    }

    /**
     * Get the state property: The state of integration runtime.
     *
     * @return the state value.
     */
    public IntegrationRuntimeState state() {
        return this.innerProperties() == null ? null : this.innerProperties().state();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model IntegrationRuntimeStatusResponseInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(IntegrationRuntimeStatusResponseInner.class);
}

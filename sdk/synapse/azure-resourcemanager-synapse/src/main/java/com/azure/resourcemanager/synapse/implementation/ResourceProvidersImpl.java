// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.synapse.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.synapse.fluent.models.IntegrationRuntimeOperationStatusInner;
import com.azure.resourcemanager.synapse.models.IntegrationRuntimeOperationStatus;
import com.azure.resourcemanager.synapse.models.ResourceProviders;

public final class ResourceProvidersImpl implements ResourceProviders {
    private static final ClientLogger LOGGER = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final com.azure.resourcemanager.synapse.SynapseManager serviceManager;

    public ResourceProvidersImpl(
        ResourceProvidersClient innerClient, com.azure.resourcemanager.synapse.SynapseManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<IntegrationRuntimeOperationStatus> integrationRuntimeStartOperationStatusWithResponse(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeAction,
        String integrationRuntimeOperationId,
        String ifNoneMatch,
        Context context) {
        Response<IntegrationRuntimeOperationStatusInner> inner =
            this
                .serviceClient()
                .integrationRuntimeStartOperationStatusWithResponse(
                    resourceGroupName,
                    workspaceName,
                    integrationRuntimeName,
                    integrationRuntimeAction,
                    integrationRuntimeOperationId,
                    ifNoneMatch,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IntegrationRuntimeOperationStatusImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public IntegrationRuntimeOperationStatus integrationRuntimeStartOperationStatus(
        String resourceGroupName,
        String workspaceName,
        String integrationRuntimeName,
        String integrationRuntimeAction,
        String integrationRuntimeOperationId) {
        IntegrationRuntimeOperationStatusInner inner =
            this
                .serviceClient()
                .integrationRuntimeStartOperationStatus(
                    resourceGroupName,
                    workspaceName,
                    integrationRuntimeName,
                    integrationRuntimeAction,
                    integrationRuntimeOperationId);
        if (inner != null) {
            return new IntegrationRuntimeOperationStatusImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.synapse.SynapseManager manager() {
        return this.serviceManager;
    }
}

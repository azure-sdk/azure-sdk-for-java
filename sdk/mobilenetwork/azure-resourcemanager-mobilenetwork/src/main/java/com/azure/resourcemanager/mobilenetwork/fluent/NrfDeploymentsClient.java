// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mobilenetwork.fluent.models.NrfDeploymentResourceInner;
import com.azure.resourcemanager.mobilenetwork.models.NrfDeploymentResourceTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in NrfDeploymentsClient.
 */
public interface NrfDeploymentsClient {
    /**
     * List all Network Repository Function Deployments by Subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NrfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NrfDeploymentResourceInner> list();

    /**
     * List all Network Repository Function Deployments by Subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NrfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NrfDeploymentResourceInner> list(Context context);

    /**
     * List all Network Repository Function Deployments by Resource Group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NrfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NrfDeploymentResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List all Network Repository Function Deployments by Resource Group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a NrfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NrfDeploymentResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NrfDeploymentResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NrfDeploymentResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String nrfDeploymentName, Context context);

    /**
     * Get a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a NrfDeploymentResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NrfDeploymentResourceInner getByResourceGroup(String resourceGroupName, String nrfDeploymentName);

    /**
     * Create a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure for Operators 5G Core Network Repository Function (NRF)
     * Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NrfDeploymentResourceInner>, NrfDeploymentResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String nrfDeploymentName, NrfDeploymentResourceInner resource);

    /**
     * Create a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure for Operators 5G Core Network Repository Function (NRF)
     * Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<NrfDeploymentResourceInner>, NrfDeploymentResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String nrfDeploymentName, NrfDeploymentResourceInner resource, Context context);

    /**
     * Create a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Network Repository Function (NRF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NrfDeploymentResourceInner createOrUpdate(String resourceGroupName, String nrfDeploymentName,
        NrfDeploymentResourceInner resource);

    /**
     * Create a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Network Repository Function (NRF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NrfDeploymentResourceInner createOrUpdate(String resourceGroupName, String nrfDeploymentName,
        NrfDeploymentResourceInner resource, Context context);

    /**
     * Update a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Network Repository Function (NRF) Deployment Resource along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NrfDeploymentResourceInner> updateTagsWithResponse(String resourceGroupName, String nrfDeploymentName,
        NrfDeploymentResourceTagsUpdate properties, Context context);

    /**
     * Update a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Network Repository Function (NRF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NrfDeploymentResourceInner updateTags(String resourceGroupName, String nrfDeploymentName,
        NrfDeploymentResourceTagsUpdate properties);

    /**
     * Delete a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String nrfDeploymentName);

    /**
     * Delete a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String nrfDeploymentName, Context context);

    /**
     * Delete a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String nrfDeploymentName);

    /**
     * Delete a NrfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nrfDeploymentName The name of the NRF Deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String nrfDeploymentName, Context context);
}

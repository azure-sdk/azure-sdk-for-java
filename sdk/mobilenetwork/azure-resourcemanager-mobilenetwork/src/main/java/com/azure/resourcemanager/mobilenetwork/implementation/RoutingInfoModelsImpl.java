// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mobilenetwork.fluent.RoutingInfoModelsClient;
import com.azure.resourcemanager.mobilenetwork.fluent.models.RoutingInfoModelInner;
import com.azure.resourcemanager.mobilenetwork.models.RoutingInfoModel;
import com.azure.resourcemanager.mobilenetwork.models.RoutingInfoModels;

public final class RoutingInfoModelsImpl implements RoutingInfoModels {
    private static final ClientLogger LOGGER = new ClientLogger(RoutingInfoModelsImpl.class);

    private final RoutingInfoModelsClient innerClient;

    private final com.azure.resourcemanager.mobilenetwork.MobileNetworkManager serviceManager;

    public RoutingInfoModelsImpl(RoutingInfoModelsClient innerClient,
        com.azure.resourcemanager.mobilenetwork.MobileNetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<RoutingInfoModel> listByPacketCoreControlPlane(String resourceGroupName,
        String packetCoreControlPlaneName) {
        PagedIterable<RoutingInfoModelInner> inner
            = this.serviceClient().listByPacketCoreControlPlane(resourceGroupName, packetCoreControlPlaneName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new RoutingInfoModelImpl(inner1, this.manager()));
    }

    public PagedIterable<RoutingInfoModel> listByPacketCoreControlPlane(String resourceGroupName,
        String packetCoreControlPlaneName, Context context) {
        PagedIterable<RoutingInfoModelInner> inner
            = this.serviceClient().listByPacketCoreControlPlane(resourceGroupName, packetCoreControlPlaneName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new RoutingInfoModelImpl(inner1, this.manager()));
    }

    public Response<RoutingInfoModel> getWithResponse(String resourceGroupName, String packetCoreControlPlaneName,
        Context context) {
        Response<RoutingInfoModelInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, packetCoreControlPlaneName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new RoutingInfoModelImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public RoutingInfoModel get(String resourceGroupName, String packetCoreControlPlaneName) {
        RoutingInfoModelInner inner = this.serviceClient().get(resourceGroupName, packetCoreControlPlaneName);
        if (inner != null) {
            return new RoutingInfoModelImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private RoutingInfoModelsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.mobilenetwork.MobileNetworkManager manager() {
        return this.serviceManager;
    }
}

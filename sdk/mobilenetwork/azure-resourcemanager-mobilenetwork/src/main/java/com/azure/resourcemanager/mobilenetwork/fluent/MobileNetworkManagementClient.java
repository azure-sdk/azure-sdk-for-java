// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilenetwork.fluent;

import com.azure.core.http.HttpPipeline;
import java.time.Duration;

/**
 * The interface for MobileNetworkManagementClient class.
 */
public interface MobileNetworkManagementClient {
    /**
     * Gets The ID of the target subscription. The value must be an UUID.
     * 
     * @return the subscriptionId value.
     */
    String getSubscriptionId();

    /**
     * Gets server parameter.
     * 
     * @return the endpoint value.
     */
    String getEndpoint();

    /**
     * Gets Api Version.
     * 
     * @return the apiVersion value.
     */
    String getApiVersion();

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    HttpPipeline getHttpPipeline();

    /**
     * Gets The default poll interval for long-running operation.
     * 
     * @return the defaultPollInterval value.
     */
    Duration getDefaultPollInterval();

    /**
     * Gets the OperationsClient object to access its operations.
     * 
     * @return the OperationsClient object.
     */
    OperationsClient getOperations();

    /**
     * Gets the PacketCoreControlPlaneVersionsTenantResourcesClient object to access its operations.
     * 
     * @return the PacketCoreControlPlaneVersionsTenantResourcesClient object.
     */
    PacketCoreControlPlaneVersionsTenantResourcesClient getPacketCoreControlPlaneVersionsTenantResources();

    /**
     * Gets the AmfDeploymentsClient object to access its operations.
     * 
     * @return the AmfDeploymentsClient object.
     */
    AmfDeploymentsClient getAmfDeployments();

    /**
     * Gets the ClusterServicesClient object to access its operations.
     * 
     * @return the ClusterServicesClient object.
     */
    ClusterServicesClient getClusterServices();

    /**
     * Gets the MobileNetworksClient object to access its operations.
     * 
     * @return the MobileNetworksClient object.
     */
    MobileNetworksClient getMobileNetworks();

    /**
     * Gets the NrfDeploymentsClient object to access its operations.
     * 
     * @return the NrfDeploymentsClient object.
     */
    NrfDeploymentsClient getNrfDeployments();

    /**
     * Gets the NssfDeploymentsClient object to access its operations.
     * 
     * @return the NssfDeploymentsClient object.
     */
    NssfDeploymentsClient getNssfDeployments();

    /**
     * Gets the ObservabilityServicesClient object to access its operations.
     * 
     * @return the ObservabilityServicesClient object.
     */
    ObservabilityServicesClient getObservabilityServices();

    /**
     * Gets the PacketCoreControlPlaneVersionsClient object to access its operations.
     * 
     * @return the PacketCoreControlPlaneVersionsClient object.
     */
    PacketCoreControlPlaneVersionsClient getPacketCoreControlPlaneVersions();

    /**
     * Gets the PacketCoreControlPlanesClient object to access its operations.
     * 
     * @return the PacketCoreControlPlanesClient object.
     */
    PacketCoreControlPlanesClient getPacketCoreControlPlanes();

    /**
     * Gets the SimGroupsClient object to access its operations.
     * 
     * @return the SimGroupsClient object.
     */
    SimGroupsClient getSimGroups();

    /**
     * Gets the SmfDeploymentsClient object to access its operations.
     * 
     * @return the SmfDeploymentsClient object.
     */
    SmfDeploymentsClient getSmfDeployments();

    /**
     * Gets the UpfDeploymentsClient object to access its operations.
     * 
     * @return the UpfDeploymentsClient object.
     */
    UpfDeploymentsClient getUpfDeployments();

    /**
     * Gets the DataNetworksClient object to access its operations.
     * 
     * @return the DataNetworksClient object.
     */
    DataNetworksClient getDataNetworks();

    /**
     * Gets the ServicesClient object to access its operations.
     * 
     * @return the ServicesClient object.
     */
    ServicesClient getServices();

    /**
     * Gets the SimPoliciesClient object to access its operations.
     * 
     * @return the SimPoliciesClient object.
     */
    SimPoliciesClient getSimPolicies();

    /**
     * Gets the SitesClient object to access its operations.
     * 
     * @return the SitesClient object.
     */
    SitesClient getSites();

    /**
     * Gets the SlicesClient object to access its operations.
     * 
     * @return the SlicesClient object.
     */
    SlicesClient getSlices();

    /**
     * Gets the DiagnosticsPackagesClient object to access its operations.
     * 
     * @return the DiagnosticsPackagesClient object.
     */
    DiagnosticsPackagesClient getDiagnosticsPackages();

    /**
     * Gets the PacketCapturesClient object to access its operations.
     * 
     * @return the PacketCapturesClient object.
     */
    PacketCapturesClient getPacketCaptures();

    /**
     * Gets the PacketCoreDataPlanesClient object to access its operations.
     * 
     * @return the PacketCoreDataPlanesClient object.
     */
    PacketCoreDataPlanesClient getPacketCoreDataPlanes();

    /**
     * Gets the AttachedDataNetworksClient object to access its operations.
     * 
     * @return the AttachedDataNetworksClient object.
     */
    AttachedDataNetworksClient getAttachedDataNetworks();

    /**
     * Gets the RoutingInfoModelsClient object to access its operations.
     * 
     * @return the RoutingInfoModelsClient object.
     */
    RoutingInfoModelsClient getRoutingInfoModels();

    /**
     * Gets the UesClient object to access its operations.
     * 
     * @return the UesClient object.
     */
    UesClient getUes();

    /**
     * Gets the ExtendedUeInfosClient object to access its operations.
     * 
     * @return the ExtendedUeInfosClient object.
     */
    ExtendedUeInfosClient getExtendedUeInfos();

    /**
     * Gets the SimsClient object to access its operations.
     * 
     * @return the SimsClient object.
     */
    SimsClient getSims();
}

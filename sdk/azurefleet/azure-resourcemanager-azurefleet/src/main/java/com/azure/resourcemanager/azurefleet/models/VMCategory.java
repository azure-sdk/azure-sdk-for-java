// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurefleet.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * VMCategories defined for Azure VMs.
 * See:
 * https://learn.microsoft.com/en-us/azure/virtual-machines/sizes/overview?tabs=breakdownseries%2Cgeneralsizelist%2Ccomputesizelist%2Cmemorysizelist%2Cstoragesizelist%2Cgpusizelist%2Cfpgasizelist%2Chpcsizelist#general-purpose.
 */
public final class VMCategory extends ExpandableStringEnum<VMCategory> {
    /**
     * Static value GeneralPurpose for VMCategory.
     */
    public static final VMCategory GENERAL_PURPOSE = fromString("GeneralPurpose");

    /**
     * Static value ComputeOptimized for VMCategory.
     */
    public static final VMCategory COMPUTE_OPTIMIZED = fromString("ComputeOptimized");

    /**
     * Static value MemoryOptimized for VMCategory.
     */
    public static final VMCategory MEMORY_OPTIMIZED = fromString("MemoryOptimized");

    /**
     * Static value StorageOptimized for VMCategory.
     */
    public static final VMCategory STORAGE_OPTIMIZED = fromString("StorageOptimized");

    /**
     * Static value GpuAccelerated for VMCategory.
     */
    public static final VMCategory GPU_ACCELERATED = fromString("GpuAccelerated");

    /**
     * Static value FpgaAccelerated for VMCategory.
     */
    public static final VMCategory FPGA_ACCELERATED = fromString("FpgaAccelerated");

    /**
     * Static value HighPerformanceCompute for VMCategory.
     */
    public static final VMCategory HIGH_PERFORMANCE_COMPUTE = fromString("HighPerformanceCompute");

    /**
     * Creates a new instance of VMCategory value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public VMCategory() {
    }

    /**
     * Creates or finds a VMCategory from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding VMCategory.
     */
    public static VMCategory fromString(String name) {
        return fromString(name, VMCategory.class);
    }

    /**
     * Gets known VMCategory values.
     * 
     * @return known VMCategory values.
     */
    public static Collection<VMCategory> values() {
        return values(VMCategory.class);
    }
}

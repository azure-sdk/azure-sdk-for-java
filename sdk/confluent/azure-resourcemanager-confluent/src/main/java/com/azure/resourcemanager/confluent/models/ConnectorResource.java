// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.confluent.fluent.models.ConnectorResourceInner;

/**
 * An immutable client-side representation of ConnectorResource.
 */
public interface ConnectorResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the connectorBasicInfo property: Connector Info Base.
     * 
     * @return the connectorBasicInfo value.
     */
    ConnectorInfoBase connectorBasicInfo();

    /**
     * Gets the connectorServiceTypeInfo property: Connector Service type info base properties.
     * 
     * @return the connectorServiceTypeInfo value.
     */
    ConnectorServiceTypeInfoBase connectorServiceTypeInfo();

    /**
     * Gets the partnerConnectorInfo property: The connection information consumed by applications.
     * 
     * @return the partnerConnectorInfo value.
     */
    PartnerInfoBase partnerConnectorInfo();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.confluent.fluent.models.ConnectorResourceInner object.
     * 
     * @return the inner object.
     */
    ConnectorResourceInner innerModel();

    /**
     * The entirety of the ConnectorResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ConnectorResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ConnectorResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ConnectorResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, organizationName, environmentId, clusterId.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param organizationName Organization resource name.
             * @param environmentId Confluent environment id.
             * @param clusterId Confluent kafka or schema registry cluster id.
             * @return the next definition stage.
             */
            WithCreate withExistingCluster(String resourceGroupName, String organizationName, String environmentId,
                String clusterId);
        }

        /**
         * The stage of the ConnectorResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithConnectorBasicInfo,
            DefinitionStages.WithConnectorServiceTypeInfo, DefinitionStages.WithPartnerConnectorInfo {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ConnectorResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ConnectorResource create(Context context);
        }

        /**
         * The stage of the ConnectorResource definition allowing to specify connectorBasicInfo.
         */
        interface WithConnectorBasicInfo {
            /**
             * Specifies the connectorBasicInfo property: Connector Info Base.
             * 
             * @param connectorBasicInfo Connector Info Base.
             * @return the next definition stage.
             */
            WithCreate withConnectorBasicInfo(ConnectorInfoBase connectorBasicInfo);
        }

        /**
         * The stage of the ConnectorResource definition allowing to specify connectorServiceTypeInfo.
         */
        interface WithConnectorServiceTypeInfo {
            /**
             * Specifies the connectorServiceTypeInfo property: Connector Service type info base properties..
             * 
             * @param connectorServiceTypeInfo Connector Service type info base properties.
             * @return the next definition stage.
             */
            WithCreate withConnectorServiceTypeInfo(ConnectorServiceTypeInfoBase connectorServiceTypeInfo);
        }

        /**
         * The stage of the ConnectorResource definition allowing to specify partnerConnectorInfo.
         */
        interface WithPartnerConnectorInfo {
            /**
             * Specifies the partnerConnectorInfo property: The connection information consumed by applications..
             * 
             * @param partnerConnectorInfo The connection information consumed by applications.
             * @return the next definition stage.
             */
            WithCreate withPartnerConnectorInfo(PartnerInfoBase partnerConnectorInfo);
        }
    }

    /**
     * Begins update for the ConnectorResource resource.
     * 
     * @return the stage of resource update.
     */
    ConnectorResource.Update update();

    /**
     * The template for ConnectorResource update.
     */
    interface Update extends UpdateStages.WithConnectorBasicInfo, UpdateStages.WithConnectorServiceTypeInfo,
        UpdateStages.WithPartnerConnectorInfo {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ConnectorResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ConnectorResource apply(Context context);
    }

    /**
     * The ConnectorResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ConnectorResource update allowing to specify connectorBasicInfo.
         */
        interface WithConnectorBasicInfo {
            /**
             * Specifies the connectorBasicInfo property: Connector Info Base.
             * 
             * @param connectorBasicInfo Connector Info Base.
             * @return the next definition stage.
             */
            Update withConnectorBasicInfo(ConnectorInfoBase connectorBasicInfo);
        }

        /**
         * The stage of the ConnectorResource update allowing to specify connectorServiceTypeInfo.
         */
        interface WithConnectorServiceTypeInfo {
            /**
             * Specifies the connectorServiceTypeInfo property: Connector Service type info base properties..
             * 
             * @param connectorServiceTypeInfo Connector Service type info base properties.
             * @return the next definition stage.
             */
            Update withConnectorServiceTypeInfo(ConnectorServiceTypeInfoBase connectorServiceTypeInfo);
        }

        /**
         * The stage of the ConnectorResource update allowing to specify partnerConnectorInfo.
         */
        interface WithPartnerConnectorInfo {
            /**
             * Specifies the partnerConnectorInfo property: The connection information consumed by applications..
             * 
             * @param partnerConnectorInfo The connection information consumed by applications.
             * @return the next definition stage.
             */
            Update withPartnerConnectorInfo(PartnerInfoBase partnerConnectorInfo);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ConnectorResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ConnectorResource refresh(Context context);
}

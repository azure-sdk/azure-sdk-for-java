// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.confluent.fluent.models.SCClusterRecordInner;
import com.azure.resourcemanager.confluent.models.ClusterStatusEntity;
import com.azure.resourcemanager.confluent.models.SCClusterRecord;
import com.azure.resourcemanager.confluent.models.SCClusterSpecEntity;
import com.azure.resourcemanager.confluent.models.SCMetadataEntity;

public final class SCClusterRecordImpl implements SCClusterRecord, SCClusterRecord.Definition, SCClusterRecord.Update {
    private SCClusterRecordInner innerObject;

    private final com.azure.resourcemanager.confluent.ConfluentManager serviceManager;

    public String kind() {
        return this.innerModel().kind();
    }

    public String id() {
        return this.innerModel().id();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String name() {
        return this.innerModel().name();
    }

    public SCMetadataEntity metadata() {
        return this.innerModel().metadata();
    }

    public SCClusterSpecEntity spec() {
        return this.innerModel().spec();
    }

    public ClusterStatusEntity status() {
        return this.innerModel().status();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SCClusterRecordInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.confluent.ConfluentManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String organizationName;

    private String environmentId;

    private String clusterId;

    public SCClusterRecordImpl withExistingEnvironment(String resourceGroupName, String organizationName,
        String environmentId) {
        this.resourceGroupName = resourceGroupName;
        this.organizationName = organizationName;
        this.environmentId = environmentId;
        return this;
    }

    public SCClusterRecord create() {
        this.innerObject = serviceManager.serviceClient()
            .getClusters()
            .createOrUpdateWithResponse(resourceGroupName, organizationName, environmentId, clusterId,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SCClusterRecord create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getClusters()
            .createOrUpdateWithResponse(resourceGroupName, organizationName, environmentId, clusterId,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    SCClusterRecordImpl(String name, com.azure.resourcemanager.confluent.ConfluentManager serviceManager) {
        this.innerObject = new SCClusterRecordInner();
        this.serviceManager = serviceManager;
        this.clusterId = name;
    }

    public SCClusterRecordImpl update() {
        return this;
    }

    public SCClusterRecord apply() {
        this.innerObject = serviceManager.serviceClient()
            .getClusters()
            .createOrUpdateWithResponse(resourceGroupName, organizationName, environmentId, clusterId,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public SCClusterRecord apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getClusters()
            .createOrUpdateWithResponse(resourceGroupName, organizationName, environmentId, clusterId,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    SCClusterRecordImpl(SCClusterRecordInner innerObject,
        com.azure.resourcemanager.confluent.ConfluentManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.organizationName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "organizations");
        this.environmentId = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "environments");
        this.clusterId = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "clusters");
    }

    public SCClusterRecordImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public SCClusterRecordImpl withType(String type) {
        this.innerModel().withType(type);
        return this;
    }

    public SCClusterRecordImpl withName(String name) {
        this.innerModel().withName(name);
        return this;
    }

    public SCClusterRecordImpl withMetadata(SCMetadataEntity metadata) {
        this.innerModel().withMetadata(metadata);
        return this;
    }

    public SCClusterRecordImpl withSpec(SCClusterSpecEntity spec) {
        this.innerModel().withSpec(spec);
        return this;
    }

    public SCClusterRecordImpl withStatus(ClusterStatusEntity status) {
        this.innerModel().withStatus(status);
        return this;
    }
}

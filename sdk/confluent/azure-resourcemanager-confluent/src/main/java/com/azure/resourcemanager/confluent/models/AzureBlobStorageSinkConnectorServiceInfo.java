// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.confluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The authentication info when auth_type is azureBlobStorageSinkConnector.
 */
@Fluent
public final class AzureBlobStorageSinkConnectorServiceInfo extends ConnectorServiceTypeInfoBase {
    /*
     * The connector service type.
     */
    private ConnectorServiceType connectorServiceType = ConnectorServiceType.AZURE_BLOB_STORAGE_SINK_CONNECTOR;

    /*
     * Azure Blob Storage Account Name
     */
    private String storageAccountName;

    /*
     * Azure Blob Storage Account Key
     */
    private String storageAccountKey;

    /*
     * Azure Blob Storage Account Container Name
     */
    private String storageContainerName;

    /**
     * Creates an instance of AzureBlobStorageSinkConnectorServiceInfo class.
     */
    public AzureBlobStorageSinkConnectorServiceInfo() {
    }

    /**
     * Get the connectorServiceType property: The connector service type.
     * 
     * @return the connectorServiceType value.
     */
    @Override
    public ConnectorServiceType connectorServiceType() {
        return this.connectorServiceType;
    }

    /**
     * Get the storageAccountName property: Azure Blob Storage Account Name.
     * 
     * @return the storageAccountName value.
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    /**
     * Set the storageAccountName property: Azure Blob Storage Account Name.
     * 
     * @param storageAccountName the storageAccountName value to set.
     * @return the AzureBlobStorageSinkConnectorServiceInfo object itself.
     */
    public AzureBlobStorageSinkConnectorServiceInfo withStorageAccountName(String storageAccountName) {
        this.storageAccountName = storageAccountName;
        return this;
    }

    /**
     * Get the storageAccountKey property: Azure Blob Storage Account Key.
     * 
     * @return the storageAccountKey value.
     */
    public String storageAccountKey() {
        return this.storageAccountKey;
    }

    /**
     * Set the storageAccountKey property: Azure Blob Storage Account Key.
     * 
     * @param storageAccountKey the storageAccountKey value to set.
     * @return the AzureBlobStorageSinkConnectorServiceInfo object itself.
     */
    public AzureBlobStorageSinkConnectorServiceInfo withStorageAccountKey(String storageAccountKey) {
        this.storageAccountKey = storageAccountKey;
        return this;
    }

    /**
     * Get the storageContainerName property: Azure Blob Storage Account Container Name.
     * 
     * @return the storageContainerName value.
     */
    public String storageContainerName() {
        return this.storageContainerName;
    }

    /**
     * Set the storageContainerName property: Azure Blob Storage Account Container Name.
     * 
     * @param storageContainerName the storageContainerName value to set.
     * @return the AzureBlobStorageSinkConnectorServiceInfo object itself.
     */
    public AzureBlobStorageSinkConnectorServiceInfo withStorageContainerName(String storageContainerName) {
        this.storageContainerName = storageContainerName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("connectorServiceType",
            this.connectorServiceType == null ? null : this.connectorServiceType.toString());
        jsonWriter.writeStringField("storageAccountName", this.storageAccountName);
        jsonWriter.writeStringField("storageAccountKey", this.storageAccountKey);
        jsonWriter.writeStringField("storageContainerName", this.storageContainerName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureBlobStorageSinkConnectorServiceInfo from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureBlobStorageSinkConnectorServiceInfo if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureBlobStorageSinkConnectorServiceInfo.
     */
    public static AzureBlobStorageSinkConnectorServiceInfo fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureBlobStorageSinkConnectorServiceInfo deserializedAzureBlobStorageSinkConnectorServiceInfo
                = new AzureBlobStorageSinkConnectorServiceInfo();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("connectorServiceType".equals(fieldName)) {
                    deserializedAzureBlobStorageSinkConnectorServiceInfo.connectorServiceType
                        = ConnectorServiceType.fromString(reader.getString());
                } else if ("storageAccountName".equals(fieldName)) {
                    deserializedAzureBlobStorageSinkConnectorServiceInfo.storageAccountName = reader.getString();
                } else if ("storageAccountKey".equals(fieldName)) {
                    deserializedAzureBlobStorageSinkConnectorServiceInfo.storageAccountKey = reader.getString();
                } else if ("storageContainerName".equals(fieldName)) {
                    deserializedAzureBlobStorageSinkConnectorServiceInfo.storageContainerName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureBlobStorageSinkConnectorServiceInfo;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthbot.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HealthBotProperties
 * 
 * The properties of a Azure Health Bot. The Health Bot Service is a cloud platform that empowers developers in
 * Healthcare organizations to build and deploy their compliant, AI-powered virtual health assistants and health bots,
 * that help them improve processes and reduce costs.
 */
@Fluent
public final class HealthBotProperties {
    /*
     * The provisioning state of the Azure Health Bot resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The link.
     */
    @JsonProperty(value = "botManagementPortalLink", access = JsonProperty.Access.WRITE_ONLY)
    private String botManagementPortalLink;

    /*
     * KeyVault properties for the resource encryption.
     */
    @JsonProperty(value = "keyVaultProperties")
    private KeyVaultProperties keyVaultProperties;

    /**
     * Creates an instance of HealthBotProperties class.
     */
    public HealthBotProperties() {
    }

    /**
     * Get the provisioningState property: The provisioning state of the Azure Health Bot resource.
     * 
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the botManagementPortalLink property: The link.
     * 
     * @return the botManagementPortalLink value.
     */
    public String botManagementPortalLink() {
        return this.botManagementPortalLink;
    }

    /**
     * Get the keyVaultProperties property: KeyVault properties for the resource encryption.
     * 
     * @return the keyVaultProperties value.
     */
    public KeyVaultProperties keyVaultProperties() {
        return this.keyVaultProperties;
    }

    /**
     * Set the keyVaultProperties property: KeyVault properties for the resource encryption.
     * 
     * @param keyVaultProperties the keyVaultProperties value to set.
     * @return the HealthBotProperties object itself.
     */
    public HealthBotProperties withKeyVaultProperties(KeyVaultProperties keyVaultProperties) {
        this.keyVaultProperties = keyVaultProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (keyVaultProperties() != null) {
            keyVaultProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Unify content model.
 */
@Fluent
public final class UnifyContent implements JsonSerializable<UnifyContent> {
    /*
     * The kind of the content.
     */
    @Generated
    private final Modality kind;

    /*
     * The text content.
     */
    @Generated
    private String text;

    /*
     * The base64 encoded image content.
     */
    @Generated
    private String imageBase64;

    /*
     * The blob URL of the image content.
     */
    @Generated
    private String imageBlob;

    /**
     * Creates an instance of UnifyContent class.
     * 
     * @param kind the kind value to set.
     */
    @Generated
    public UnifyContent(Modality kind) {
        this.kind = kind;
    }

    /**
     * Get the kind property: The kind of the content.
     * 
     * @return the kind value.
     */
    @Generated
    public Modality getKind() {
        return this.kind;
    }

    /**
     * Get the text property: The text content.
     * 
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Set the text property: The text content.
     * 
     * @param text the text value to set.
     * @return the UnifyContent object itself.
     */
    @Generated
    public UnifyContent setText(String text) {
        this.text = text;
        return this;
    }

    /**
     * Get the imageBase64 property: The base64 encoded image content.
     * 
     * @return the imageBase64 value.
     */
    @Generated
    public String getImageBase64() {
        return this.imageBase64;
    }

    /**
     * Set the imageBase64 property: The base64 encoded image content.
     * 
     * @param imageBase64 the imageBase64 value to set.
     * @return the UnifyContent object itself.
     */
    @Generated
    public UnifyContent setImageBase64(String imageBase64) {
        this.imageBase64 = imageBase64;
        return this;
    }

    /**
     * Get the imageBlob property: The blob URL of the image content.
     * 
     * @return the imageBlob value.
     */
    @Generated
    public String getImageBlob() {
        return this.imageBlob;
    }

    /**
     * Set the imageBlob property: The blob URL of the image content.
     * 
     * @param imageBlob the imageBlob value to set.
     * @return the UnifyContent object itself.
     */
    @Generated
    public UnifyContent setImageBlob(String imageBlob) {
        this.imageBlob = imageBlob;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeStringField("imageBase64", this.imageBase64);
        jsonWriter.writeStringField("imageBlob", this.imageBlob);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UnifyContent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UnifyContent if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the UnifyContent.
     */
    @Generated
    public static UnifyContent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Modality kind = null;
            String text = null;
            String imageBase64 = null;
            String imageBlob = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kind".equals(fieldName)) {
                    kind = Modality.fromString(reader.getString());
                } else if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("imageBase64".equals(fieldName)) {
                    imageBase64 = reader.getString();
                } else if ("imageBlob".equals(fieldName)) {
                    imageBlob = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            UnifyContent deserializedUnifyContent = new UnifyContent(kind);
            deserializedUnifyContent.text = text;
            deserializedUnifyContent.imageBase64 = imageBase64;
            deserializedUnifyContent.imageBlob = imageBlob;

            return deserializedUnifyContent;
        });
    }
}

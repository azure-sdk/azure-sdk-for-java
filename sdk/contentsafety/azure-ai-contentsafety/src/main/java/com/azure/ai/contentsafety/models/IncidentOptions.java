// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The text analysis request.
 */
@Fluent
public final class IncidentOptions {
    /*
     * The accept decision made by service.
     */
    @Generated
    @JsonProperty(value = "incidentNames")
    private List<String> incidentNames;

    /*
     * When set to true, further analyses of harmful content will not be performed in cases where incidents are hit.
     * When set to false, all analyses of harmful content will be performed, whether or not incidents are hit.
     */
    @Generated
    @JsonProperty(value = "haltOnIncidentHit")
    private Boolean haltOnIncidentHit;

    /**
     * Creates an instance of IncidentOptions class.
     */
    @Generated
    public IncidentOptions() {
    }

    /**
     * Get the incidentNames property: The accept decision made by service.
     * 
     * @return the incidentNames value.
     */
    @Generated
    public List<String> getIncidentNames() {
        return this.incidentNames;
    }

    /**
     * Set the incidentNames property: The accept decision made by service.
     * 
     * @param incidentNames the incidentNames value to set.
     * @return the IncidentOptions object itself.
     */
    @Generated
    public IncidentOptions setIncidentNames(List<String> incidentNames) {
        this.incidentNames = incidentNames;
        return this;
    }

    /**
     * Get the haltOnIncidentHit property: When set to true, further analyses of harmful content will not be performed
     * in cases where incidents are hit. When set to false, all analyses of harmful content will be performed, whether
     * or not incidents are hit.
     * 
     * @return the haltOnIncidentHit value.
     */
    @Generated
    public Boolean isHaltOnIncidentHit() {
        return this.haltOnIncidentHit;
    }

    /**
     * Set the haltOnIncidentHit property: When set to true, further analyses of harmful content will not be performed
     * in cases where incidents are hit. When set to false, all analyses of harmful content will be performed, whether
     * or not incidents are hit.
     * 
     * @param haltOnIncidentHit the haltOnIncidentHit value to set.
     * @return the IncidentOptions object itself.
     */
    @Generated
    public IncidentOptions setHaltOnIncidentHit(Boolean haltOnIncidentHit) {
        this.haltOnIncidentHit = haltOnIncidentHit;
        return this;
    }
}

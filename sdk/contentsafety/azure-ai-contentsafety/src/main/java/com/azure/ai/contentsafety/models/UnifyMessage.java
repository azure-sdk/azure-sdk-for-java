// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Unify message model.
 */
@Immutable
public final class UnifyMessage implements JsonSerializable<UnifyMessage> {
    /*
     * The source type of the message.
     */
    @Generated
    private final SourceType source;

    /*
     * The role of the message.
     */
    @Generated
    private final RoleType role;

    /*
     * The contents of the message.
     */
    @Generated
    private final List<UnifyContent> contents;

    /**
     * Creates an instance of UnifyMessage class.
     * 
     * @param source the source value to set.
     * @param role the role value to set.
     * @param contents the contents value to set.
     */
    @Generated
    public UnifyMessage(SourceType source, RoleType role, List<UnifyContent> contents) {
        this.source = source;
        this.role = role;
        this.contents = contents;
    }

    /**
     * Get the source property: The source type of the message.
     * 
     * @return the source value.
     */
    @Generated
    public SourceType getSource() {
        return this.source;
    }

    /**
     * Get the role property: The role of the message.
     * 
     * @return the role value.
     */
    @Generated
    public RoleType getRole() {
        return this.role;
    }

    /**
     * Get the contents property: The contents of the message.
     * 
     * @return the contents value.
     */
    @Generated
    public List<UnifyContent> getContents() {
        return this.contents;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("source", this.source == null ? null : this.source.toString());
        jsonWriter.writeStringField("role", this.role == null ? null : this.role.toString());
        jsonWriter.writeArrayField("contents", this.contents, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UnifyMessage from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UnifyMessage if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the UnifyMessage.
     */
    @Generated
    public static UnifyMessage fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SourceType source = null;
            RoleType role = null;
            List<UnifyContent> contents = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("source".equals(fieldName)) {
                    source = SourceType.fromString(reader.getString());
                } else if ("role".equals(fieldName)) {
                    role = RoleType.fromString(reader.getString());
                } else if ("contents".equals(fieldName)) {
                    contents = reader.readArray(reader1 -> UnifyContent.fromJson(reader1));
                } else {
                    reader.skipChildren();
                }
            }
            return new UnifyMessage(source, role, contents);
        });
    }
}

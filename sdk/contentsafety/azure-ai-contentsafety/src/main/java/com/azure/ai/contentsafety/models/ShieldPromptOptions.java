// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The request of analyzing potential direct or indirect injection attacks.
 */
@Fluent
public final class ShieldPromptOptions implements JsonSerializable<ShieldPromptOptions> {
    /*
     * The user prompt to be analyzed, which may contain direct injection attacks.
     */
    @Generated
    private String userPrompt;

    /*
     * The documents to be analyzed, which may contain direct or indirect injection attacks.
     */
    @Generated
    private List<String> documents;

    /**
     * Creates an instance of ShieldPromptOptions class.
     */
    @Generated
    public ShieldPromptOptions() {
    }

    /**
     * Get the userPrompt property: The user prompt to be analyzed, which may contain direct injection attacks.
     * 
     * @return the userPrompt value.
     */
    @Generated
    public String getUserPrompt() {
        return this.userPrompt;
    }

    /**
     * Set the userPrompt property: The user prompt to be analyzed, which may contain direct injection attacks.
     * 
     * @param userPrompt the userPrompt value to set.
     * @return the ShieldPromptOptions object itself.
     */
    @Generated
    public ShieldPromptOptions setUserPrompt(String userPrompt) {
        this.userPrompt = userPrompt;
        return this;
    }

    /**
     * Get the documents property: The documents to be analyzed, which may contain direct or indirect injection attacks.
     * 
     * @return the documents value.
     */
    @Generated
    public List<String> getDocuments() {
        return this.documents;
    }

    /**
     * Set the documents property: The documents to be analyzed, which may contain direct or indirect injection attacks.
     * 
     * @param documents the documents value to set.
     * @return the ShieldPromptOptions object itself.
     */
    @Generated
    public ShieldPromptOptions setDocuments(List<String> documents) {
        this.documents = documents;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("userPrompt", this.userPrompt);
        jsonWriter.writeArrayField("documents", this.documents, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ShieldPromptOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ShieldPromptOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ShieldPromptOptions.
     */
    @Generated
    public static ShieldPromptOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ShieldPromptOptions deserializedShieldPromptOptions = new ShieldPromptOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("userPrompt".equals(fieldName)) {
                    deserializedShieldPromptOptions.userPrompt = reader.getString();
                } else if ("documents".equals(fieldName)) {
                    List<String> documents = reader.readArray(reader1 -> reader1.getString());
                    deserializedShieldPromptOptions.documents = documents;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedShieldPromptOptions;
        });
    }
}

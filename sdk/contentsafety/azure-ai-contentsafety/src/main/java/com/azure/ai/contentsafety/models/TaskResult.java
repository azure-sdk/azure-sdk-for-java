// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.contentsafety.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Task result model.
 */
@Immutable
public final class TaskResult implements JsonSerializable<TaskResult> {
    /*
     * The setting ID.
     */
    @Generated
    private final String settingId;

    /*
     * The result code.
     */
    @Generated
    private final ResultCode resultCode;

    /*
     * The result code detail.
     */
    @Generated
    private final String resultCodeDetail;

    /*
     * Indicates if blocking criteria is met.
     */
    @Generated
    private final boolean isBlockingCriteriaMet;

    /*
     * The task kind.
     */
    @Generated
    private final TaskType kind;

    /*
     * The harm category task result.
     */
    @Generated
    private HarmCategoryTaskResult harmCategoryTaskResult;

    /*
     * The blocklist task result.
     */
    @Generated
    private BlocklistTaskResult blocklistTaskResult;

    /*
     * The safety incident task result.
     */
    @Generated
    private SafetyIncidentTaskResult safetyIncidentTaskResult;

    /*
     * The custom category task result.
     */
    @Generated
    private CustomCategoryTaskResult customCategoryTaskResult;

    /**
     * Creates an instance of TaskResult class.
     * 
     * @param settingId the settingId value to set.
     * @param resultCode the resultCode value to set.
     * @param resultCodeDetail the resultCodeDetail value to set.
     * @param isBlockingCriteriaMet the isBlockingCriteriaMet value to set.
     * @param kind the kind value to set.
     */
    @Generated
    private TaskResult(String settingId, ResultCode resultCode, String resultCodeDetail, boolean isBlockingCriteriaMet,
        TaskType kind) {
        this.settingId = settingId;
        this.resultCode = resultCode;
        this.resultCodeDetail = resultCodeDetail;
        this.isBlockingCriteriaMet = isBlockingCriteriaMet;
        this.kind = kind;
    }

    /**
     * Get the settingId property: The setting ID.
     * 
     * @return the settingId value.
     */
    @Generated
    public String getSettingId() {
        return this.settingId;
    }

    /**
     * Get the resultCode property: The result code.
     * 
     * @return the resultCode value.
     */
    @Generated
    public ResultCode getResultCode() {
        return this.resultCode;
    }

    /**
     * Get the resultCodeDetail property: The result code detail.
     * 
     * @return the resultCodeDetail value.
     */
    @Generated
    public String getResultCodeDetail() {
        return this.resultCodeDetail;
    }

    /**
     * Get the isBlockingCriteriaMet property: Indicates if blocking criteria is met.
     * 
     * @return the isBlockingCriteriaMet value.
     */
    @Generated
    public boolean isBlockingCriteriaMet() {
        return this.isBlockingCriteriaMet;
    }

    /**
     * Get the kind property: The task kind.
     * 
     * @return the kind value.
     */
    @Generated
    public TaskType getKind() {
        return this.kind;
    }

    /**
     * Get the harmCategoryTaskResult property: The harm category task result.
     * 
     * @return the harmCategoryTaskResult value.
     */
    @Generated
    public HarmCategoryTaskResult getHarmCategoryTaskResult() {
        return this.harmCategoryTaskResult;
    }

    /**
     * Get the blocklistTaskResult property: The blocklist task result.
     * 
     * @return the blocklistTaskResult value.
     */
    @Generated
    public BlocklistTaskResult getBlocklistTaskResult() {
        return this.blocklistTaskResult;
    }

    /**
     * Get the safetyIncidentTaskResult property: The safety incident task result.
     * 
     * @return the safetyIncidentTaskResult value.
     */
    @Generated
    public SafetyIncidentTaskResult getSafetyIncidentTaskResult() {
        return this.safetyIncidentTaskResult;
    }

    /**
     * Get the customCategoryTaskResult property: The custom category task result.
     * 
     * @return the customCategoryTaskResult value.
     */
    @Generated
    public CustomCategoryTaskResult getCustomCategoryTaskResult() {
        return this.customCategoryTaskResult;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("settingId", this.settingId);
        jsonWriter.writeStringField("resultCode", this.resultCode == null ? null : this.resultCode.toString());
        jsonWriter.writeStringField("resultCodeDetail", this.resultCodeDetail);
        jsonWriter.writeBooleanField("isBlockingCriteriaMet", this.isBlockingCriteriaMet);
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeJsonField("harmCategoryTaskResult", this.harmCategoryTaskResult);
        jsonWriter.writeJsonField("blocklistTaskResult", this.blocklistTaskResult);
        jsonWriter.writeJsonField("safetyIncidentTaskResult", this.safetyIncidentTaskResult);
        jsonWriter.writeJsonField("customCategoryTaskResult", this.customCategoryTaskResult);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TaskResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TaskResult if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TaskResult.
     */
    @Generated
    public static TaskResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String settingId = null;
            ResultCode resultCode = null;
            String resultCodeDetail = null;
            boolean isBlockingCriteriaMet = false;
            TaskType kind = null;
            HarmCategoryTaskResult harmCategoryTaskResult = null;
            BlocklistTaskResult blocklistTaskResult = null;
            SafetyIncidentTaskResult safetyIncidentTaskResult = null;
            CustomCategoryTaskResult customCategoryTaskResult = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("settingId".equals(fieldName)) {
                    settingId = reader.getString();
                } else if ("resultCode".equals(fieldName)) {
                    resultCode = ResultCode.fromString(reader.getString());
                } else if ("resultCodeDetail".equals(fieldName)) {
                    resultCodeDetail = reader.getString();
                } else if ("isBlockingCriteriaMet".equals(fieldName)) {
                    isBlockingCriteriaMet = reader.getBoolean();
                } else if ("kind".equals(fieldName)) {
                    kind = TaskType.fromString(reader.getString());
                } else if ("harmCategoryTaskResult".equals(fieldName)) {
                    harmCategoryTaskResult = HarmCategoryTaskResult.fromJson(reader);
                } else if ("blocklistTaskResult".equals(fieldName)) {
                    blocklistTaskResult = BlocklistTaskResult.fromJson(reader);
                } else if ("safetyIncidentTaskResult".equals(fieldName)) {
                    safetyIncidentTaskResult = SafetyIncidentTaskResult.fromJson(reader);
                } else if ("customCategoryTaskResult".equals(fieldName)) {
                    customCategoryTaskResult = CustomCategoryTaskResult.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            TaskResult deserializedTaskResult
                = new TaskResult(settingId, resultCode, resultCodeDetail, isBlockingCriteriaMet, kind);
            deserializedTaskResult.harmCategoryTaskResult = harmCategoryTaskResult;
            deserializedTaskResult.blocklistTaskResult = blocklistTaskResult;
            deserializedTaskResult.safetyIncidentTaskResult = safetyIncidentTaskResult;
            deserializedTaskResult.customCategoryTaskResult = customCategoryTaskResult;

            return deserializedTaskResult;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.generated;

import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.DateSpan;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.MaintenanceWindow;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.RelativeMonthlySchedule;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.Schedule;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.TimeInWeek;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.TimeSpan;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.Type;
import com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models.WeekDay;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;

/** Samples for MaintenanceConfigurations CreateOrUpdate. */
public final class MaintenanceCon {
    /*
     * x-ms-original-file: specification/containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2023-09-02-preview/examples/MaintenanceConfigurationsCreate_Update.json
     */
    /**
     * Sample code: Create/Update Maintenance Configuration.
     *
     * @param manager Entry point to ContainerServiceManager.
     */
    public static void createUpdateMaintenanceConfiguration(
        com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.ContainerServiceManager
            manager) {
        manager
            .maintenanceConfigurations()
            .define("default")
            .withExistingManagedCluster("rg1", "clustername1")
            .withTimeInWeek(Arrays.asList(new TimeInWeek().withDay(WeekDay.MONDAY).withHourSlots(Arrays.asList(1, 2))))
            .withNotAllowedTime(
                Arrays
                    .asList(
                        new TimeSpan()
                            .withStart(OffsetDateTime.parse("2020-11-26T03:00:00Z"))
                            .withEnd(OffsetDateTime.parse("2020-11-30T12:00:00Z"))))
            .create();
    }

    /*
     * x-ms-original-file: specification/containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2023-09-02-preview/examples/MaintenanceConfigurationsCreate_Update_MaintenanceWindow.json
     */
    /**
     * Sample code: Create/Update Maintenance Configuration with Maintenance Window.
     *
     * @param manager Entry point to ContainerServiceManager.
     */
    public static void createUpdateMaintenanceConfigurationWithMaintenanceWindow(
        com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.ContainerServiceManager
            manager) {
        manager
            .maintenanceConfigurations()
            .define("aksManagedAutoUpgradeSchedule")
            .withExistingManagedCluster("rg1", "clustername1")
            .withMaintenanceWindow(
                new MaintenanceWindow()
                    .withSchedule(
                        new Schedule()
                            .withRelativeMonthly(
                                new RelativeMonthlySchedule()
                                    .withIntervalMonths(3)
                                    .withWeekIndex(Type.FIRST)
                                    .withDayOfWeek(WeekDay.MONDAY)))
                    .withDurationHours(10)
                    .withUtcOffset("+05:30")
                    .withStartDate(LocalDate.parse("2023-01-01"))
                    .withStartTime("08:30")
                    .withNotAllowedDates(
                        Arrays
                            .asList(
                                new DateSpan()
                                    .withStart(LocalDate.parse("2023-02-18"))
                                    .withEnd(LocalDate.parse("2023-02-25")),
                                new DateSpan()
                                    .withStart(LocalDate.parse("2023-12-23"))
                                    .withEnd(LocalDate.parse("2024-01-05")))))
            .create();
    }
}

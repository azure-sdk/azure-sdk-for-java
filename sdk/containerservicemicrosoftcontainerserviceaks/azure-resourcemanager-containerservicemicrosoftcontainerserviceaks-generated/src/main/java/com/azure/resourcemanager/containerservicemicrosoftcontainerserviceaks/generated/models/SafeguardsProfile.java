// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicemicrosoftcontainerserviceaks.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The Safeguards profile.
 */
@Fluent
public final class SafeguardsProfile {
    /*
     * List of namespaces specified by AKS to be excluded from Safeguards
     */
    @JsonProperty(value = "systemExcludedNamespaces", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> systemExcludedNamespaces;

    /*
     * The version of constraints to use
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS
     * excludes via systemExcludedNamespaces
     */
    @JsonProperty(value = "level", required = true)
    private Level level;

    /*
     * List of namespaces excluded from Safeguards checks
     */
    @JsonProperty(value = "excludedNamespaces")
    private List<String> excludedNamespaces;

    /**
     * Creates an instance of SafeguardsProfile class.
     */
    public SafeguardsProfile() {
    }

    /**
     * Get the systemExcludedNamespaces property: List of namespaces specified by AKS to be excluded from Safeguards.
     * 
     * @return the systemExcludedNamespaces value.
     */
    public List<String> systemExcludedNamespaces() {
        return this.systemExcludedNamespaces;
    }

    /**
     * Get the version property: The version of constraints to use.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: The version of constraints to use.
     * 
     * @param version the version value to set.
     * @return the SafeguardsProfile object itself.
     */
    public SafeguardsProfile withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the level property: The Safeguards level to be used. By default, Safeguards is enabled for all namespaces
     * except those that AKS excludes via systemExcludedNamespaces.
     * 
     * @return the level value.
     */
    public Level level() {
        return this.level;
    }

    /**
     * Set the level property: The Safeguards level to be used. By default, Safeguards is enabled for all namespaces
     * except those that AKS excludes via systemExcludedNamespaces.
     * 
     * @param level the level value to set.
     * @return the SafeguardsProfile object itself.
     */
    public SafeguardsProfile withLevel(Level level) {
        this.level = level;
        return this;
    }

    /**
     * Get the excludedNamespaces property: List of namespaces excluded from Safeguards checks.
     * 
     * @return the excludedNamespaces value.
     */
    public List<String> excludedNamespaces() {
        return this.excludedNamespaces;
    }

    /**
     * Set the excludedNamespaces property: List of namespaces excluded from Safeguards checks.
     * 
     * @param excludedNamespaces the excludedNamespaces value to set.
     * @return the SafeguardsProfile object itself.
     */
    public SafeguardsProfile withExcludedNamespaces(List<String> excludedNamespaces) {
        this.excludedNamespaces = excludedNamespaces;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (level() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property level in model SafeguardsProfile"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SafeguardsProfile.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.carbon.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.carbon.fluent.models.CarbonEmissionDataInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response for detailed carbon emissions.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "dataType")
@JsonTypeName("ItemDetailsData")
@Fluent
public final class CarbonEmissionItemDetailData extends CarbonEmissionDataInner {
    /*
     * Item name
     */
    @JsonProperty(value = "itemName", required = true)
    private String itemName;

    /*
     * Item group name
     */
    @JsonProperty(value = "groupName", required = true)
    private String groupName;

    /*
     * Item category
     */
    @JsonProperty(value = "categoryType", required = true)
    private CategoryTypeEnum categoryType;

    /**
     * Creates an instance of CarbonEmissionItemDetailData class.
     */
    public CarbonEmissionItemDetailData() {
    }

    /**
     * Get the itemName property: Item name.
     * 
     * @return the itemName value.
     */
    public String itemName() {
        return this.itemName;
    }

    /**
     * Set the itemName property: Item name.
     * 
     * @param itemName the itemName value to set.
     * @return the CarbonEmissionItemDetailData object itself.
     */
    public CarbonEmissionItemDetailData withItemName(String itemName) {
        this.itemName = itemName;
        return this;
    }

    /**
     * Get the groupName property: Item group name.
     * 
     * @return the groupName value.
     */
    public String groupName() {
        return this.groupName;
    }

    /**
     * Set the groupName property: Item group name.
     * 
     * @param groupName the groupName value to set.
     * @return the CarbonEmissionItemDetailData object itself.
     */
    public CarbonEmissionItemDetailData withGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }

    /**
     * Get the categoryType property: Item category.
     * 
     * @return the categoryType value.
     */
    public CategoryTypeEnum categoryType() {
        return this.categoryType;
    }

    /**
     * Set the categoryType property: Item category.
     * 
     * @param categoryType the categoryType value to set.
     * @return the CarbonEmissionItemDetailData object itself.
     */
    public CarbonEmissionItemDetailData withCategoryType(CategoryTypeEnum categoryType) {
        this.categoryType = categoryType;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionItemDetailData withTotalCarbonEmission(double totalCarbonEmission) {
        super.withTotalCarbonEmission(totalCarbonEmission);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionItemDetailData withTotalCarbonEmissionLastMonth(double totalCarbonEmissionLastMonth) {
        super.withTotalCarbonEmissionLastMonth(totalCarbonEmissionLastMonth);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionItemDetailData withChangeRatioForLastMonth(double changeRatioForLastMonth) {
        super.withChangeRatioForLastMonth(changeRatioForLastMonth);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionItemDetailData withTotalCarbonEmission12MonthsAgo(double totalCarbonEmission12MonthsAgo) {
        super.withTotalCarbonEmission12MonthsAgo(totalCarbonEmission12MonthsAgo);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionItemDetailData withChangeRatioFor12Months(double changeRatioFor12Months) {
        super.withChangeRatioFor12Months(changeRatioFor12Months);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionItemDetailData withChangeValueMonthOverMonth(Double changeValueMonthOverMonth) {
        super.withChangeValueMonthOverMonth(changeValueMonthOverMonth);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (itemName() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property itemName in model CarbonEmissionItemDetailData"));
        }
        if (groupName() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property groupName in model CarbonEmissionItemDetailData"));
        }
        if (categoryType() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property categoryType in model CarbonEmissionItemDetailData"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CarbonEmissionItemDetailData.class);
}

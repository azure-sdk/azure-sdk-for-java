// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.carbon.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.carbon.fluent.models.CarbonEmissionDataInner;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response for Resource detailed carbon emissions.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "dataType")
@JsonTypeName("ResourceItemDetailsData")
@Fluent
public final class ResourceCarbonEmissionItemDetailData extends CarbonEmissionDataInner {
    /*
     * Item name
     */
    @JsonProperty(value = "itemName", required = true)
    private String itemName;

    /*
     * Item group name
     */
    @JsonProperty(value = "groupName", required = true)
    private String groupName;

    /*
     * Item category
     */
    @JsonProperty(value = "categoryType", required = true)
    private CategoryTypeEnum categoryType;

    /*
     * Subscription Id
     */
    @JsonProperty(value = "subscriptionId", required = true)
    private String subscriptionId;

    /*
     * Resource Group
     */
    @JsonProperty(value = "resourceGroup", required = true)
    private String resourceGroup;

    /*
     * Resource Id Url
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * Resource Location
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Resource Type
     */
    @JsonProperty(value = "resourceType")
    private String resourceType;

    /*
     * Friendly name of Resource Type
     */
    @JsonProperty(value = "resourceTypeFriendlyName")
    private String resourceTypeFriendlyName;

    /*
     * Resource Provider
     */
    @JsonProperty(value = "resourceProvider")
    private String resourceProvider;

    /**
     * Creates an instance of ResourceCarbonEmissionItemDetailData class.
     */
    public ResourceCarbonEmissionItemDetailData() {
    }

    /**
     * Get the itemName property: Item name.
     * 
     * @return the itemName value.
     */
    public String itemName() {
        return this.itemName;
    }

    /**
     * Set the itemName property: Item name.
     * 
     * @param itemName the itemName value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withItemName(String itemName) {
        this.itemName = itemName;
        return this;
    }

    /**
     * Get the groupName property: Item group name.
     * 
     * @return the groupName value.
     */
    public String groupName() {
        return this.groupName;
    }

    /**
     * Set the groupName property: Item group name.
     * 
     * @param groupName the groupName value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }

    /**
     * Get the categoryType property: Item category.
     * 
     * @return the categoryType value.
     */
    public CategoryTypeEnum categoryType() {
        return this.categoryType;
    }

    /**
     * Set the categoryType property: Item category.
     * 
     * @param categoryType the categoryType value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withCategoryType(CategoryTypeEnum categoryType) {
        this.categoryType = categoryType;
        return this;
    }

    /**
     * Get the subscriptionId property: Subscription Id.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Set the subscriptionId property: Subscription Id.
     * 
     * @param subscriptionId the subscriptionId value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /**
     * Get the resourceGroup property: Resource Group.
     * 
     * @return the resourceGroup value.
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * Set the resourceGroup property: Resource Group.
     * 
     * @param resourceGroup the resourceGroup value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withResourceGroup(String resourceGroup) {
        this.resourceGroup = resourceGroup;
        return this;
    }

    /**
     * Get the resourceId property: Resource Id Url.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Resource Id Url.
     * 
     * @param resourceId the resourceId value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the location property: Resource Location.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Resource Location.
     * 
     * @param location the location value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the resourceType property: Resource Type.
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Set the resourceType property: Resource Type.
     * 
     * @param resourceType the resourceType value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }

    /**
     * Get the resourceTypeFriendlyName property: Friendly name of Resource Type.
     * 
     * @return the resourceTypeFriendlyName value.
     */
    public String resourceTypeFriendlyName() {
        return this.resourceTypeFriendlyName;
    }

    /**
     * Set the resourceTypeFriendlyName property: Friendly name of Resource Type.
     * 
     * @param resourceTypeFriendlyName the resourceTypeFriendlyName value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withResourceTypeFriendlyName(String resourceTypeFriendlyName) {
        this.resourceTypeFriendlyName = resourceTypeFriendlyName;
        return this;
    }

    /**
     * Get the resourceProvider property: Resource Provider.
     * 
     * @return the resourceProvider value.
     */
    public String resourceProvider() {
        return this.resourceProvider;
    }

    /**
     * Set the resourceProvider property: Resource Provider.
     * 
     * @param resourceProvider the resourceProvider value to set.
     * @return the ResourceCarbonEmissionItemDetailData object itself.
     */
    public ResourceCarbonEmissionItemDetailData withResourceProvider(String resourceProvider) {
        this.resourceProvider = resourceProvider;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceCarbonEmissionItemDetailData withTotalCarbonEmission(double totalCarbonEmission) {
        super.withTotalCarbonEmission(totalCarbonEmission);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceCarbonEmissionItemDetailData withTotalCarbonEmissionLastMonth(double totalCarbonEmissionLastMonth) {
        super.withTotalCarbonEmissionLastMonth(totalCarbonEmissionLastMonth);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceCarbonEmissionItemDetailData withChangeRatioForLastMonth(double changeRatioForLastMonth) {
        super.withChangeRatioForLastMonth(changeRatioForLastMonth);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceCarbonEmissionItemDetailData
        withTotalCarbonEmission12MonthsAgo(double totalCarbonEmission12MonthsAgo) {
        super.withTotalCarbonEmission12MonthsAgo(totalCarbonEmission12MonthsAgo);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceCarbonEmissionItemDetailData withChangeRatioFor12Months(double changeRatioFor12Months) {
        super.withChangeRatioFor12Months(changeRatioFor12Months);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceCarbonEmissionItemDetailData withChangeValueMonthOverMonth(Double changeValueMonthOverMonth) {
        super.withChangeValueMonthOverMonth(changeValueMonthOverMonth);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (itemName() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property itemName in model ResourceCarbonEmissionItemDetailData"));
        }
        if (groupName() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property groupName in model ResourceCarbonEmissionItemDetailData"));
        }
        if (categoryType() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property categoryType in model ResourceCarbonEmissionItemDetailData"));
        }
        if (subscriptionId() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property subscriptionId in model ResourceCarbonEmissionItemDetailData"));
        }
        if (resourceGroup() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property resourceGroup in model ResourceCarbonEmissionItemDetailData"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ResourceCarbonEmissionItemDetailData.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.carbon.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Date range to be used with QueryParameter.
 */
@Fluent
public final class DateRange {
    /*
     * Start date parameter, format is yyyy-MM-dd
     */
    @JsonProperty(value = "start", required = true)
    private LocalDate start;

    /*
     * End date parameter, format is yyyy-MM-dd
     */
    @JsonProperty(value = "end", required = true)
    private LocalDate end;

    /**
     * Creates an instance of DateRange class.
     */
    public DateRange() {
    }

    /**
     * Get the start property: Start date parameter, format is yyyy-MM-dd.
     * 
     * @return the start value.
     */
    public LocalDate start() {
        return this.start;
    }

    /**
     * Set the start property: Start date parameter, format is yyyy-MM-dd.
     * 
     * @param start the start value to set.
     * @return the DateRange object itself.
     */
    public DateRange withStart(LocalDate start) {
        this.start = start;
        return this;
    }

    /**
     * Get the end property: End date parameter, format is yyyy-MM-dd.
     * 
     * @return the end value.
     */
    public LocalDate end() {
        return this.end;
    }

    /**
     * Set the end property: End date parameter, format is yyyy-MM-dd.
     * 
     * @param end the end value to set.
     * @return the DateRange object itself.
     */
    public DateRange withEnd(LocalDate end) {
        this.end = end;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (start() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property start in model DateRange"));
        }
        if (end() == null) {
            throw LOGGER
                .logExceptionAsError(new IllegalArgumentException("Missing required property end in model DateRange"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DateRange.class);
}

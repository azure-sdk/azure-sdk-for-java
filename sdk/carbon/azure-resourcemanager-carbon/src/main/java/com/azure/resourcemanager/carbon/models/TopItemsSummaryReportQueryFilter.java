// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.carbon.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Query Parameters for Top Items Carbon Emission by Category Type.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "reportType")
@JsonTypeName("TopItemsSummaryReport")
@Fluent
public final class TopItemsSummaryReportQueryFilter extends QueryFilter {
    /*
     * Item Category type
     */
    @JsonProperty(value = "categoryType", required = true)
    private CategoryTypeEnum categoryType;

    /*
     * Number of top items to return. The value should be between 5 and 100
     */
    @JsonProperty(value = "topItems", required = true)
    private int topItems;

    /**
     * Creates an instance of TopItemsSummaryReportQueryFilter class.
     */
    public TopItemsSummaryReportQueryFilter() {
    }

    /**
     * Get the categoryType property: Item Category type.
     * 
     * @return the categoryType value.
     */
    public CategoryTypeEnum categoryType() {
        return this.categoryType;
    }

    /**
     * Set the categoryType property: Item Category type.
     * 
     * @param categoryType the categoryType value to set.
     * @return the TopItemsSummaryReportQueryFilter object itself.
     */
    public TopItemsSummaryReportQueryFilter withCategoryType(CategoryTypeEnum categoryType) {
        this.categoryType = categoryType;
        return this;
    }

    /**
     * Get the topItems property: Number of top items to return. The value should be between 5 and 100.
     * 
     * @return the topItems value.
     */
    public int topItems() {
        return this.topItems;
    }

    /**
     * Set the topItems property: Number of top items to return. The value should be between 5 and 100.
     * 
     * @param topItems the topItems value to set.
     * @return the TopItemsSummaryReportQueryFilter object itself.
     */
    public TopItemsSummaryReportQueryFilter withTopItems(int topItems) {
        this.topItems = topItems;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopItemsSummaryReportQueryFilter withDateRange(DateRange dateRange) {
        super.withDateRange(dateRange);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopItemsSummaryReportQueryFilter withSubscriptionList(List<String> subscriptionList) {
        super.withSubscriptionList(subscriptionList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopItemsSummaryReportQueryFilter withResourceGroupUrlList(List<String> resourceGroupUrlList) {
        super.withResourceGroupUrlList(resourceGroupUrlList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopItemsSummaryReportQueryFilter withResourceTypeList(List<String> resourceTypeList) {
        super.withResourceTypeList(resourceTypeList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopItemsSummaryReportQueryFilter withLocationList(List<String> locationList) {
        super.withLocationList(locationList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopItemsSummaryReportQueryFilter withCarbonScopeList(List<EmissionScopeEnum> carbonScopeList) {
        super.withCarbonScopeList(carbonScopeList);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (categoryType() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property categoryType in model TopItemsSummaryReportQueryFilter"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(TopItemsSummaryReportQueryFilter.class);
}

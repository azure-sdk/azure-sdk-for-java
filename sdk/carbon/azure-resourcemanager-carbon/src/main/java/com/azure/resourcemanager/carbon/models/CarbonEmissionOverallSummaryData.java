// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.carbon.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.carbon.fluent.models.CarbonEmissionDataInner;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response for Overall Carbon Emissions Summary.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "dataType")
@JsonTypeName("OverallSummaryData")
@Fluent
public final class CarbonEmissionOverallSummaryData extends CarbonEmissionDataInner {
    /**
     * Creates an instance of CarbonEmissionOverallSummaryData class.
     */
    public CarbonEmissionOverallSummaryData() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionOverallSummaryData withTotalCarbonEmission(double totalCarbonEmission) {
        super.withTotalCarbonEmission(totalCarbonEmission);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionOverallSummaryData withTotalCarbonEmissionLastMonth(double totalCarbonEmissionLastMonth) {
        super.withTotalCarbonEmissionLastMonth(totalCarbonEmissionLastMonth);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionOverallSummaryData withChangeRatioForLastMonth(double changeRatioForLastMonth) {
        super.withChangeRatioForLastMonth(changeRatioForLastMonth);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionOverallSummaryData withTotalCarbonEmission12MonthsAgo(double totalCarbonEmission12MonthsAgo) {
        super.withTotalCarbonEmission12MonthsAgo(totalCarbonEmission12MonthsAgo);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionOverallSummaryData withChangeRatioFor12Months(double changeRatioFor12Months) {
        super.withChangeRatioFor12Months(changeRatioFor12Months);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CarbonEmissionOverallSummaryData withChangeValueMonthOverMonth(Double changeValueMonthOverMonth) {
        super.withChangeValueMonthOverMonth(changeValueMonthOverMonth);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.carbon.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/**
 * Query Parameters for Overall Carbon Emissions Summary.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "reportType")
@JsonTypeName("OverallSummaryReport")
@Fluent
public final class OverallSummaryReportQueryFilter extends QueryFilter {
    /**
     * Creates an instance of OverallSummaryReportQueryFilter class.
     */
    public OverallSummaryReportQueryFilter() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OverallSummaryReportQueryFilter withDateRange(DateRange dateRange) {
        super.withDateRange(dateRange);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OverallSummaryReportQueryFilter withSubscriptionList(List<String> subscriptionList) {
        super.withSubscriptionList(subscriptionList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OverallSummaryReportQueryFilter withResourceGroupUrlList(List<String> resourceGroupUrlList) {
        super.withResourceGroupUrlList(resourceGroupUrlList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OverallSummaryReportQueryFilter withResourceTypeList(List<String> resourceTypeList) {
        super.withResourceTypeList(resourceTypeList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OverallSummaryReportQueryFilter withLocationList(List<String> locationList) {
        super.withLocationList(locationList);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OverallSummaryReportQueryFilter withCarbonScopeList(List<EmissionScopeEnum> carbonScopeList) {
        super.withCarbonScopeList(carbonScopeList);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

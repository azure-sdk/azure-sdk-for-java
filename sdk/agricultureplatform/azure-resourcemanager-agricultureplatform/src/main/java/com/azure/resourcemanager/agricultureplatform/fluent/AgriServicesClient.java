// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.agricultureplatform.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.agricultureplatform.fluent.models.AgriServiceResourceInner;
import com.azure.resourcemanager.agricultureplatform.fluent.models.AvailableAgriSolutionListResultInner;
import com.azure.resourcemanager.agricultureplatform.models.AgriServiceResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in AgriServicesClient.
 */
public interface AgriServicesClient {
    /**
     * Get a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AgriServiceResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AgriServiceResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String agriServiceResourceName, Context context);

    /**
     * Get a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AgriServiceResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgriServiceResourceInner getByResourceGroup(String resourceGroupName, String agriServiceResourceName);

    /**
     * Create a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of schema of the AgriService resource from
     * Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgriServiceResourceInner>, AgriServiceResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String agriServiceResourceName, AgriServiceResourceInner resource);

    /**
     * Create a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of schema of the AgriService resource from
     * Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgriServiceResourceInner>, AgriServiceResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String agriServiceResourceName, AgriServiceResourceInner resource, Context context);

    /**
     * Create a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgriServiceResourceInner createOrUpdate(String resourceGroupName, String agriServiceResourceName,
        AgriServiceResourceInner resource);

    /**
     * Create a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgriServiceResourceInner createOrUpdate(String resourceGroupName, String agriServiceResourceName,
        AgriServiceResourceInner resource, Context context);

    /**
     * Update a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of schema of the AgriService resource from
     * Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgriServiceResourceInner>, AgriServiceResourceInner> beginUpdate(String resourceGroupName,
        String agriServiceResourceName, AgriServiceResourceUpdate properties);

    /**
     * Update a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of schema of the AgriService resource from
     * Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AgriServiceResourceInner>, AgriServiceResourceInner> beginUpdate(String resourceGroupName,
        String agriServiceResourceName, AgriServiceResourceUpdate properties, Context context);

    /**
     * Update a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgriServiceResourceInner update(String resourceGroupName, String agriServiceResourceName,
        AgriServiceResourceUpdate properties);

    /**
     * Update a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return schema of the AgriService resource from Microsoft.AgriculturePlatform resource provider.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AgriServiceResourceInner update(String resourceGroupName, String agriServiceResourceName,
        AgriServiceResourceUpdate properties, Context context);

    /**
     * Delete a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String agriServiceResourceName);

    /**
     * Delete a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String agriServiceResourceName,
        Context context);

    /**
     * Delete a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String agriServiceResourceName);

    /**
     * Delete a AgriServiceResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String agriServiceResourceName, Context context);

    /**
     * List AgriServiceResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AgriServiceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AgriServiceResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List AgriServiceResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AgriServiceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AgriServiceResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List AgriServiceResource resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AgriServiceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AgriServiceResourceInner> list();

    /**
     * List AgriServiceResource resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AgriServiceResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AgriServiceResourceInner> list(Context context);

    /**
     * Returns the list of available agri solutions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of available agri solutions along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AvailableAgriSolutionListResultInner> listAvailableSolutionsWithResponse(String resourceGroupName,
        String agriServiceResourceName, Context context);

    /**
     * Returns the list of available agri solutions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param agriServiceResourceName The name of the AgriService resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of available agri solutions.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailableAgriSolutionListResultInner listAvailableSolutions(String resourceGroupName,
        String agriServiceResourceName);
}

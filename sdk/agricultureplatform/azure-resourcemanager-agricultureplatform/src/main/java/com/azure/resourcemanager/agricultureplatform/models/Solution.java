// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.agricultureplatform.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Installed data manager for Agriculture solution detail.
 */
@Fluent
public final class Solution implements JsonSerializable<Solution> {
    /*
     * Application name of the solution.
     */
    private String applicationName;

    /*
     * Partner Id.
     */
    private String partnerId;

    /*
     * Marketplace publisher Id.
     */
    private String marketPlacePublisherId;

    /*
     * Saas subscription Id.
     */
    private String saasSubscriptionId;

    /*
     * Saas subscription name.
     */
    private String saasSubscriptionName;

    /*
     * Plan Id.
     */
    private String planId;

    /**
     * Creates an instance of Solution class.
     */
    public Solution() {
    }

    /**
     * Get the applicationName property: Application name of the solution.
     * 
     * @return the applicationName value.
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the applicationName property: Application name of the solution.
     * 
     * @param applicationName the applicationName value to set.
     * @return the Solution object itself.
     */
    public Solution withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the partnerId property: Partner Id.
     * 
     * @return the partnerId value.
     */
    public String partnerId() {
        return this.partnerId;
    }

    /**
     * Set the partnerId property: Partner Id.
     * 
     * @param partnerId the partnerId value to set.
     * @return the Solution object itself.
     */
    public Solution withPartnerId(String partnerId) {
        this.partnerId = partnerId;
        return this;
    }

    /**
     * Get the marketPlacePublisherId property: Marketplace publisher Id.
     * 
     * @return the marketPlacePublisherId value.
     */
    public String marketPlacePublisherId() {
        return this.marketPlacePublisherId;
    }

    /**
     * Set the marketPlacePublisherId property: Marketplace publisher Id.
     * 
     * @param marketPlacePublisherId the marketPlacePublisherId value to set.
     * @return the Solution object itself.
     */
    public Solution withMarketPlacePublisherId(String marketPlacePublisherId) {
        this.marketPlacePublisherId = marketPlacePublisherId;
        return this;
    }

    /**
     * Get the saasSubscriptionId property: Saas subscription Id.
     * 
     * @return the saasSubscriptionId value.
     */
    public String saasSubscriptionId() {
        return this.saasSubscriptionId;
    }

    /**
     * Set the saasSubscriptionId property: Saas subscription Id.
     * 
     * @param saasSubscriptionId the saasSubscriptionId value to set.
     * @return the Solution object itself.
     */
    public Solution withSaasSubscriptionId(String saasSubscriptionId) {
        this.saasSubscriptionId = saasSubscriptionId;
        return this;
    }

    /**
     * Get the saasSubscriptionName property: Saas subscription name.
     * 
     * @return the saasSubscriptionName value.
     */
    public String saasSubscriptionName() {
        return this.saasSubscriptionName;
    }

    /**
     * Set the saasSubscriptionName property: Saas subscription name.
     * 
     * @param saasSubscriptionName the saasSubscriptionName value to set.
     * @return the Solution object itself.
     */
    public Solution withSaasSubscriptionName(String saasSubscriptionName) {
        this.saasSubscriptionName = saasSubscriptionName;
        return this;
    }

    /**
     * Get the planId property: Plan Id.
     * 
     * @return the planId value.
     */
    public String planId() {
        return this.planId;
    }

    /**
     * Set the planId property: Plan Id.
     * 
     * @param planId the planId value to set.
     * @return the Solution object itself.
     */
    public Solution withPlanId(String planId) {
        this.planId = planId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("applicationName", this.applicationName);
        jsonWriter.writeStringField("partnerId", this.partnerId);
        jsonWriter.writeStringField("marketPlacePublisherId", this.marketPlacePublisherId);
        jsonWriter.writeStringField("saasSubscriptionId", this.saasSubscriptionId);
        jsonWriter.writeStringField("saasSubscriptionName", this.saasSubscriptionName);
        jsonWriter.writeStringField("planId", this.planId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Solution from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Solution if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the Solution.
     */
    public static Solution fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Solution deserializedSolution = new Solution();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("applicationName".equals(fieldName)) {
                    deserializedSolution.applicationName = reader.getString();
                } else if ("partnerId".equals(fieldName)) {
                    deserializedSolution.partnerId = reader.getString();
                } else if ("marketPlacePublisherId".equals(fieldName)) {
                    deserializedSolution.marketPlacePublisherId = reader.getString();
                } else if ("saasSubscriptionId".equals(fieldName)) {
                    deserializedSolution.saasSubscriptionId = reader.getString();
                } else if ("saasSubscriptionName".equals(fieldName)) {
                    deserializedSolution.saasSubscriptionName = reader.getString();
                } else if ("planId".equals(fieldName)) {
                    deserializedSolution.planId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSolution;
        });
    }
}

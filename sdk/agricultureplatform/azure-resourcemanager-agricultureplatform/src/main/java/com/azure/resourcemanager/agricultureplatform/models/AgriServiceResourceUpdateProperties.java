// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.agricultureplatform.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The updatable properties of the AgriServiceResource.
 */
@Fluent
public final class AgriServiceResourceUpdateProperties
    implements JsonSerializable<AgriServiceResourceUpdateProperties> {
    /*
     * Config of the AgriService instance.
     */
    private AgriServiceConfig config;

    /*
     * Data connector credentials of AgriService instance.
     */
    private List<DataConnectorCredentialMap> dataConnectorCredentials;

    /*
     * AgriService installed solutions.
     */
    private List<InstalledSolutionMap> installedSolutions;

    /**
     * Creates an instance of AgriServiceResourceUpdateProperties class.
     */
    public AgriServiceResourceUpdateProperties() {
    }

    /**
     * Get the config property: Config of the AgriService instance.
     * 
     * @return the config value.
     */
    public AgriServiceConfig config() {
        return this.config;
    }

    /**
     * Set the config property: Config of the AgriService instance.
     * 
     * @param config the config value to set.
     * @return the AgriServiceResourceUpdateProperties object itself.
     */
    public AgriServiceResourceUpdateProperties withConfig(AgriServiceConfig config) {
        this.config = config;
        return this;
    }

    /**
     * Get the dataConnectorCredentials property: Data connector credentials of AgriService instance.
     * 
     * @return the dataConnectorCredentials value.
     */
    public List<DataConnectorCredentialMap> dataConnectorCredentials() {
        return this.dataConnectorCredentials;
    }

    /**
     * Set the dataConnectorCredentials property: Data connector credentials of AgriService instance.
     * 
     * @param dataConnectorCredentials the dataConnectorCredentials value to set.
     * @return the AgriServiceResourceUpdateProperties object itself.
     */
    public AgriServiceResourceUpdateProperties
        withDataConnectorCredentials(List<DataConnectorCredentialMap> dataConnectorCredentials) {
        this.dataConnectorCredentials = dataConnectorCredentials;
        return this;
    }

    /**
     * Get the installedSolutions property: AgriService installed solutions.
     * 
     * @return the installedSolutions value.
     */
    public List<InstalledSolutionMap> installedSolutions() {
        return this.installedSolutions;
    }

    /**
     * Set the installedSolutions property: AgriService installed solutions.
     * 
     * @param installedSolutions the installedSolutions value to set.
     * @return the AgriServiceResourceUpdateProperties object itself.
     */
    public AgriServiceResourceUpdateProperties withInstalledSolutions(List<InstalledSolutionMap> installedSolutions) {
        this.installedSolutions = installedSolutions;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (config() != null) {
            config().validate();
        }
        if (dataConnectorCredentials() != null) {
            dataConnectorCredentials().forEach(e -> e.validate());
        }
        if (installedSolutions() != null) {
            installedSolutions().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("config", this.config);
        jsonWriter.writeArrayField("dataConnectorCredentials", this.dataConnectorCredentials,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("installedSolutions", this.installedSolutions,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AgriServiceResourceUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AgriServiceResourceUpdateProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AgriServiceResourceUpdateProperties.
     */
    public static AgriServiceResourceUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AgriServiceResourceUpdateProperties deserializedAgriServiceResourceUpdateProperties
                = new AgriServiceResourceUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("config".equals(fieldName)) {
                    deserializedAgriServiceResourceUpdateProperties.config = AgriServiceConfig.fromJson(reader);
                } else if ("dataConnectorCredentials".equals(fieldName)) {
                    List<DataConnectorCredentialMap> dataConnectorCredentials
                        = reader.readArray(reader1 -> DataConnectorCredentialMap.fromJson(reader1));
                    deserializedAgriServiceResourceUpdateProperties.dataConnectorCredentials = dataConnectorCredentials;
                } else if ("installedSolutions".equals(fieldName)) {
                    List<InstalledSolutionMap> installedSolutions
                        = reader.readArray(reader1 -> InstalledSolutionMap.fromJson(reader1));
                    deserializedAgriServiceResourceUpdateProperties.installedSolutions = installedSolutions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAgriServiceResourceUpdateProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Options for searchItems API.
 */
@Fluent
public final class SearchItemsOptions {
    /*
     * Maximum number of items needed (inclusive). Minimum = 1, Maximum = 100, Default
     * value = 10.
     */
    @Generated
    private Integer maxpagesize;

    /*
     * Skip token for getting next set of results.
     */
    @Generated
    private Integer skip;

    /*
     * Start datetime of the time interval in which to search for Items.
     */
    @Generated
    private OffsetDateTime startDateTime;

    /*
     * OAuthClientCredentials for clientId clientSecret auth.
     */
    @Generated
    private final OauthClientCredentials credentials;

    /*
     * Provider of satellite data. Available Value: SentinelHub.
     */
    @Generated
    private final String provider;

    /*
     * End datetime of the time interval in which to search for Items.
     */
    @Generated
    private OffsetDateTime endDateTime;

    /*
     * GeoJSON (For more details: https://geojson.org/). Note: Coordinates are
     * expected in [Longitude, Latitude] format.
     */
    @Generated
    private GeoJsonObject intersects;

    /*
     * Only items that have a geometry that intersects the bounding box are selected.
     * The bounding box is provided as four numbers. The coordinate reference system
     * of the values is WGS84 longitude/latitude.
     */
    @Generated
    private List<Double> bbox;

    /*
     * Array of feature ids to return.
     */
    @Generated
    private List<String> featureIds;

    /*
     * Collection of satellite data. Available Value: sentinel-2-l2a, sentinel-2-l1c.
     */
    @Generated
    private final String providerCollectionId;

    /**
     * Creates an instance of SearchItemsOptions class.
     * 
     * @param credentials the credentials value to set.
     * @param provider the provider value to set.
     * @param providerCollectionId the providerCollectionId value to set.
     */
    @Generated
    public SearchItemsOptions(OauthClientCredentials credentials, String provider, String providerCollectionId) {
        this.credentials = credentials;
        this.provider = provider;
        this.providerCollectionId = providerCollectionId;
    }

    /**
     * Get the maxpagesize property: Maximum number of items needed (inclusive). Minimum = 1, Maximum = 100, Default
     * value = 10.
     * 
     * @return the maxpagesize value.
     */
    @Generated
    public Integer getMaxpagesize() {
        return this.maxpagesize;
    }

    /**
     * Set the maxpagesize property: Maximum number of items needed (inclusive). Minimum = 1, Maximum = 100, Default
     * value = 10.
     * 
     * @param maxpagesize the maxpagesize value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setMaxpagesize(Integer maxpagesize) {
        this.maxpagesize = maxpagesize;
        return this;
    }

    /**
     * Get the skip property: Skip token for getting next set of results.
     * 
     * @return the skip value.
     */
    @Generated
    public Integer getSkip() {
        return this.skip;
    }

    /**
     * Set the skip property: Skip token for getting next set of results.
     * 
     * @param skip the skip value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setSkip(Integer skip) {
        this.skip = skip;
        return this;
    }

    /**
     * Get the startDateTime property: Start datetime of the time interval in which to search for Items.
     * 
     * @return the startDateTime value.
     */
    @Generated
    public OffsetDateTime getStartDateTime() {
        return this.startDateTime;
    }

    /**
     * Set the startDateTime property: Start datetime of the time interval in which to search for Items.
     * 
     * @param startDateTime the startDateTime value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setStartDateTime(OffsetDateTime startDateTime) {
        this.startDateTime = startDateTime;
        return this;
    }

    /**
     * Get the credentials property: OAuthClientCredentials for clientId clientSecret auth.
     * 
     * @return the credentials value.
     */
    @Generated
    public OauthClientCredentials getCredentials() {
        return this.credentials;
    }

    /**
     * Get the provider property: Provider of satellite data. Available Value: SentinelHub.
     * 
     * @return the provider value.
     */
    @Generated
    public String getProvider() {
        return this.provider;
    }

    /**
     * Get the endDateTime property: End datetime of the time interval in which to search for Items.
     * 
     * @return the endDateTime value.
     */
    @Generated
    public OffsetDateTime getEndDateTime() {
        return this.endDateTime;
    }

    /**
     * Set the endDateTime property: End datetime of the time interval in which to search for Items.
     * 
     * @param endDateTime the endDateTime value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setEndDateTime(OffsetDateTime endDateTime) {
        this.endDateTime = endDateTime;
        return this;
    }

    /**
     * Get the intersects property: GeoJSON (For more details: https://geojson.org/). Note: Coordinates are
     * expected in [Longitude, Latitude] format.
     * 
     * @return the intersects value.
     */
    @Generated
    public GeoJsonObject getIntersects() {
        return this.intersects;
    }

    /**
     * Set the intersects property: GeoJSON (For more details: https://geojson.org/). Note: Coordinates are
     * expected in [Longitude, Latitude] format.
     * 
     * @param intersects the intersects value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setIntersects(GeoJsonObject intersects) {
        this.intersects = intersects;
        return this;
    }

    /**
     * Get the bbox property: Only items that have a geometry that intersects the bounding box are selected.
     * The bounding box is provided as four numbers. The coordinate reference system
     * of the values is WGS84 longitude/latitude.
     * 
     * @return the bbox value.
     */
    @Generated
    public List<Double> getBbox() {
        return this.bbox;
    }

    /**
     * Set the bbox property: Only items that have a geometry that intersects the bounding box are selected.
     * The bounding box is provided as four numbers. The coordinate reference system
     * of the values is WGS84 longitude/latitude.
     * 
     * @param bbox the bbox value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setBbox(List<Double> bbox) {
        this.bbox = bbox;
        return this;
    }

    /**
     * Get the featureIds property: Array of feature ids to return.
     * 
     * @return the featureIds value.
     */
    @Generated
    public List<String> getFeatureIds() {
        return this.featureIds;
    }

    /**
     * Set the featureIds property: Array of feature ids to return.
     * 
     * @param featureIds the featureIds value to set.
     * @return the SearchItemsOptions object itself.
     */
    @Generated
    public SearchItemsOptions setFeatureIds(List<String> featureIds) {
        this.featureIds = featureIds;
        return this;
    }

    /**
     * Get the providerCollectionId property: Collection of satellite data. Available Value: sentinel-2-l2a,
     * sentinel-2-l1c.
     * 
     * @return the providerCollectionId value.
     */
    @Generated
    public String getProviderCollectionId() {
        return this.providerCollectionId;
    }
}

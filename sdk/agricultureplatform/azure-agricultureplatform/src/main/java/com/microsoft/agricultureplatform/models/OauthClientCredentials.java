// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * OAuthClientCredentials for clientId clientSecret auth.
 */
@Immutable
public final class OauthClientCredentials extends AuthCredentials {
    /*
     * Enum for different types of AuthCredentials supported.
     */
    @Generated
    private AuthCredentialsKind kind = AuthCredentialsKind.OAUTH_CLIENT_CREDENTIALS;

    /*
     * ClientId associated with the provider.
     */
    @Generated
    private final String clientId;

    /*
     * Properties of the key vault.
     */
    @Generated
    private final KeyVaultProperties clientSecret;

    /**
     * Creates an instance of OauthClientCredentials class.
     * 
     * @param clientId the clientId value to set.
     * @param clientSecret the clientSecret value to set.
     */
    @Generated
    public OauthClientCredentials(String clientId, KeyVaultProperties clientSecret) {
        this.clientId = clientId;
        this.clientSecret = clientSecret;
    }

    /**
     * Get the kind property: Enum for different types of AuthCredentials supported.
     * 
     * @return the kind value.
     */
    @Generated
    @Override
    public AuthCredentialsKind getKind() {
        return this.kind;
    }

    /**
     * Get the clientId property: ClientId associated with the provider.
     * 
     * @return the clientId value.
     */
    @Generated
    public String getClientId() {
        return this.clientId;
    }

    /**
     * Get the clientSecret property: Properties of the key vault.
     * 
     * @return the clientSecret value.
     */
    @Generated
    public KeyVaultProperties getClientSecret() {
        return this.clientSecret;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("clientId", this.clientId);
        jsonWriter.writeJsonField("clientSecret", this.clientSecret);
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OauthClientCredentials from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OauthClientCredentials if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the OauthClientCredentials.
     */
    @Generated
    public static OauthClientCredentials fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String clientId = null;
            KeyVaultProperties clientSecret = null;
            AuthCredentialsKind kind = AuthCredentialsKind.OAUTH_CLIENT_CREDENTIALS;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("clientId".equals(fieldName)) {
                    clientId = reader.getString();
                } else if ("clientSecret".equals(fieldName)) {
                    clientSecret = KeyVaultProperties.fromJson(reader);
                } else if ("kind".equals(fieldName)) {
                    kind = AuthCredentialsKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            OauthClientCredentials deserializedOauthClientCredentials
                = new OauthClientCredentials(clientId, clientSecret);
            deserializedOauthClientCredentials.kind = kind;

            return deserializedOauthClientCredentials;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties of the key vault.
 */
@Immutable
public final class KeyVaultProperties implements JsonSerializable<KeyVaultProperties> {
    /*
     * Uri of the key vault.
     */
    @Generated
    private final String keyVaultUri;

    /*
     * Name of Key Vault key.
     */
    @Generated
    private final String keyName;

    /*
     * Version of Key Vault key.
     */
    @Generated
    private final String keyVersion;

    /**
     * Creates an instance of KeyVaultProperties class.
     * 
     * @param keyVaultUri the keyVaultUri value to set.
     * @param keyName the keyName value to set.
     * @param keyVersion the keyVersion value to set.
     */
    @Generated
    public KeyVaultProperties(String keyVaultUri, String keyName, String keyVersion) {
        this.keyVaultUri = keyVaultUri;
        this.keyName = keyName;
        this.keyVersion = keyVersion;
    }

    /**
     * Get the keyVaultUri property: Uri of the key vault.
     * 
     * @return the keyVaultUri value.
     */
    @Generated
    public String getKeyVaultUri() {
        return this.keyVaultUri;
    }

    /**
     * Get the keyName property: Name of Key Vault key.
     * 
     * @return the keyName value.
     */
    @Generated
    public String getKeyName() {
        return this.keyName;
    }

    /**
     * Get the keyVersion property: Version of Key Vault key.
     * 
     * @return the keyVersion value.
     */
    @Generated
    public String getKeyVersion() {
        return this.keyVersion;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("keyVaultUri", this.keyVaultUri);
        jsonWriter.writeStringField("keyName", this.keyName);
        jsonWriter.writeStringField("keyVersion", this.keyVersion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KeyVaultProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KeyVaultProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the KeyVaultProperties.
     */
    @Generated
    public static KeyVaultProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String keyVaultUri = null;
            String keyName = null;
            String keyVersion = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("keyVaultUri".equals(fieldName)) {
                    keyVaultUri = reader.getString();
                } else if ("keyName".equals(fieldName)) {
                    keyName = reader.getString();
                } else if ("keyVersion".equals(fieldName)) {
                    keyVersion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new KeyVaultProperties(keyVaultUri, keyName, keyVersion);
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Options for getAllUnderCollection API.
 */
@Fluent
public final class GetAllUnderCollectionOptions {
    /*
     * Id of the Catalog.
     */
    @Generated
    private final String catalogId;

    /*
     * Unique resource ID.
     */
    @Generated
    private final String collectionId;

    /*
     * Maximum number of items needed (inclusive). Minimum = 10, Maximum = 1000,
     * Default Value = 50.
     */
    @Generated
    private Integer maximumPageSize;

    /*
     * Owner Item Ids of the resource.
     */
    @Generated
    private List<String> ownerItemIds;

    /*
     * Filters on key-value pairs within the Data object.
     * e.g. "{testKey} eq {testValue}".
     */
    @Generated
    private List<String> dataFilters;

    /*
     * GeoJSON (For more details: https://geojson.org/). Note: Coordinates are
     * expected in [Longitude, Latitude] format.
     */
    @Generated
    private GeoJsonObject intersectsWithGeometry;

    /*
     * Ids of the resource.
     */
    @Generated
    private List<String> ids;

    /*
     * Minimum creation date of resource (inclusive).
     */
    @Generated
    private OffsetDateTime minCreatedDateTime;

    /*
     * Maximum creation date of resource (inclusive).
     */
    @Generated
    private OffsetDateTime maxCreatedDateTime;

    /*
     * Minimum last modified date of resource (inclusive).
     */
    @Generated
    private OffsetDateTime minLastModifiedDateTime;

    /*
     * Maximum last modified date of resource (inclusive).
     */
    @Generated
    private OffsetDateTime maxLastModifiedDateTime;

    /*
     * Maximum number of items needed (inclusive).
     * Minimum = 10, Maximum = 1000, Default value = 50.
     */
    @Generated
    private Integer maxPageSize;

    /*
     * Skip token for getting next set of results.
     */
    @Generated
    private String skipToken;

    /**
     * Creates an instance of GetAllUnderCollectionOptions class.
     * 
     * @param catalogId the catalogId value to set.
     * @param collectionId the collectionId value to set.
     */
    @Generated
    public GetAllUnderCollectionOptions(String catalogId, String collectionId) {
        this.catalogId = catalogId;
        this.collectionId = collectionId;
    }

    /**
     * Get the catalogId property: Id of the Catalog.
     * 
     * @return the catalogId value.
     */
    @Generated
    public String getCatalogId() {
        return this.catalogId;
    }

    /**
     * Get the collectionId property: Unique resource ID.
     * 
     * @return the collectionId value.
     */
    @Generated
    public String getCollectionId() {
        return this.collectionId;
    }

    /**
     * Get the maximumPageSize property: Maximum number of items needed (inclusive). Minimum = 10, Maximum = 1000,
     * Default Value = 50.
     * 
     * @return the maximumPageSize value.
     */
    @Generated
    public Integer getMaximumPageSize() {
        return this.maximumPageSize;
    }

    /**
     * Set the maximumPageSize property: Maximum number of items needed (inclusive). Minimum = 10, Maximum = 1000,
     * Default Value = 50.
     * 
     * @param maximumPageSize the maximumPageSize value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setMaximumPageSize(Integer maximumPageSize) {
        this.maximumPageSize = maximumPageSize;
        return this;
    }

    /**
     * Get the ownerItemIds property: Owner Item Ids of the resource.
     * 
     * @return the ownerItemIds value.
     */
    @Generated
    public List<String> getOwnerItemIds() {
        return this.ownerItemIds;
    }

    /**
     * Set the ownerItemIds property: Owner Item Ids of the resource.
     * 
     * @param ownerItemIds the ownerItemIds value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setOwnerItemIds(List<String> ownerItemIds) {
        this.ownerItemIds = ownerItemIds;
        return this;
    }

    /**
     * Get the dataFilters property: Filters on key-value pairs within the Data object.
     * e.g. "{testKey} eq {testValue}".
     * 
     * @return the dataFilters value.
     */
    @Generated
    public List<String> getDataFilters() {
        return this.dataFilters;
    }

    /**
     * Set the dataFilters property: Filters on key-value pairs within the Data object.
     * e.g. "{testKey} eq {testValue}".
     * 
     * @param dataFilters the dataFilters value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setDataFilters(List<String> dataFilters) {
        this.dataFilters = dataFilters;
        return this;
    }

    /**
     * Get the intersectsWithGeometry property: GeoJSON (For more details: https://geojson.org/). Note: Coordinates are
     * expected in [Longitude, Latitude] format.
     * 
     * @return the intersectsWithGeometry value.
     */
    @Generated
    public GeoJsonObject getIntersectsWithGeometry() {
        return this.intersectsWithGeometry;
    }

    /**
     * Set the intersectsWithGeometry property: GeoJSON (For more details: https://geojson.org/). Note: Coordinates are
     * expected in [Longitude, Latitude] format.
     * 
     * @param intersectsWithGeometry the intersectsWithGeometry value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setIntersectsWithGeometry(GeoJsonObject intersectsWithGeometry) {
        this.intersectsWithGeometry = intersectsWithGeometry;
        return this;
    }

    /**
     * Get the ids property: Ids of the resource.
     * 
     * @return the ids value.
     */
    @Generated
    public List<String> getIds() {
        return this.ids;
    }

    /**
     * Set the ids property: Ids of the resource.
     * 
     * @param ids the ids value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setIds(List<String> ids) {
        this.ids = ids;
        return this;
    }

    /**
     * Get the minCreatedDateTime property: Minimum creation date of resource (inclusive).
     * 
     * @return the minCreatedDateTime value.
     */
    @Generated
    public OffsetDateTime getMinCreatedDateTime() {
        return this.minCreatedDateTime;
    }

    /**
     * Set the minCreatedDateTime property: Minimum creation date of resource (inclusive).
     * 
     * @param minCreatedDateTime the minCreatedDateTime value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setMinCreatedDateTime(OffsetDateTime minCreatedDateTime) {
        this.minCreatedDateTime = minCreatedDateTime;
        return this;
    }

    /**
     * Get the maxCreatedDateTime property: Maximum creation date of resource (inclusive).
     * 
     * @return the maxCreatedDateTime value.
     */
    @Generated
    public OffsetDateTime getMaxCreatedDateTime() {
        return this.maxCreatedDateTime;
    }

    /**
     * Set the maxCreatedDateTime property: Maximum creation date of resource (inclusive).
     * 
     * @param maxCreatedDateTime the maxCreatedDateTime value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setMaxCreatedDateTime(OffsetDateTime maxCreatedDateTime) {
        this.maxCreatedDateTime = maxCreatedDateTime;
        return this;
    }

    /**
     * Get the minLastModifiedDateTime property: Minimum last modified date of resource (inclusive).
     * 
     * @return the minLastModifiedDateTime value.
     */
    @Generated
    public OffsetDateTime getMinLastModifiedDateTime() {
        return this.minLastModifiedDateTime;
    }

    /**
     * Set the minLastModifiedDateTime property: Minimum last modified date of resource (inclusive).
     * 
     * @param minLastModifiedDateTime the minLastModifiedDateTime value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setMinLastModifiedDateTime(OffsetDateTime minLastModifiedDateTime) {
        this.minLastModifiedDateTime = minLastModifiedDateTime;
        return this;
    }

    /**
     * Get the maxLastModifiedDateTime property: Maximum last modified date of resource (inclusive).
     * 
     * @return the maxLastModifiedDateTime value.
     */
    @Generated
    public OffsetDateTime getMaxLastModifiedDateTime() {
        return this.maxLastModifiedDateTime;
    }

    /**
     * Set the maxLastModifiedDateTime property: Maximum last modified date of resource (inclusive).
     * 
     * @param maxLastModifiedDateTime the maxLastModifiedDateTime value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setMaxLastModifiedDateTime(OffsetDateTime maxLastModifiedDateTime) {
        this.maxLastModifiedDateTime = maxLastModifiedDateTime;
        return this;
    }

    /**
     * Get the maxPageSize property: Maximum number of items needed (inclusive).
     * Minimum = 10, Maximum = 1000, Default value = 50.
     * 
     * @return the maxPageSize value.
     */
    @Generated
    public Integer getMaxPageSize() {
        return this.maxPageSize;
    }

    /**
     * Set the maxPageSize property: Maximum number of items needed (inclusive).
     * Minimum = 10, Maximum = 1000, Default value = 50.
     * 
     * @param maxPageSize the maxPageSize value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setMaxPageSize(Integer maxPageSize) {
        this.maxPageSize = maxPageSize;
        return this;
    }

    /**
     * Get the skipToken property: Skip token for getting next set of results.
     * 
     * @return the skipToken value.
     */
    @Generated
    public String getSkipToken() {
        return this.skipToken;
    }

    /**
     * Set the skipToken property: Skip token for getting next set of results.
     * 
     * @param skipToken the skipToken value to set.
     * @return the GetAllUnderCollectionOptions object itself.
     */
    @Generated
    public GetAllUnderCollectionOptions setSkipToken(String skipToken) {
        this.skipToken = skipToken;
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.generated;

import com.microsoft.agricultureplatform.models.Asset;
import com.microsoft.agricultureplatform.models.DataFormat;
import com.microsoft.agricultureplatform.models.DestinationType;
import com.microsoft.agricultureplatform.models.GetAllUnderCollectionOptions;
import com.microsoft.agricultureplatform.models.Item;
import com.microsoft.agricultureplatform.models.ItemListResponse;
import com.microsoft.agricultureplatform.models.Link;
import com.microsoft.agricultureplatform.models.RelationshipType;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ItemsGetAllUnderCollectionTests extends AgriculturePlatformClientTestBase {
    @Test
    @Disabled
    public void testItemsGetAllUnderCollectionTests() {
        // method invocation
        ItemListResponse response = itemsOperationsClient
            .getAllUnderCollection(new GetAllUnderCollectionOptions("CATALOG123", "COLLECTION123"));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "value"
        List<Item> responseValue = response.getValue();
        Item responseValueFirstItem = responseValue.iterator().next();
        Assertions.assertNotNull(responseValueFirstItem);
        List<Link> responseValueFirstItemLinks = responseValueFirstItem.getLinks();
        Link responseValueFirstItemLinksFirstItem = responseValueFirstItemLinks.iterator().next();
        Assertions.assertNotNull(responseValueFirstItemLinksFirstItem);
        Assertions.assertEquals(RelationshipType.DERIVED_FROM, responseValueFirstItemLinksFirstItem.getRel());
        Assertions.assertEquals("string", responseValueFirstItemLinksFirstItem.getHref());
        Assertions.assertEquals(DestinationType.CATALOG, responseValueFirstItemLinksFirstItem.getType());
        Assertions.assertEquals("0f009dc6-0000-0100-0000-66ffb1c00000", responseValueFirstItem.getETag());
        Assertions.assertEquals("string", responseValueFirstItem.getStatus());
        Assertions.assertNotNull(responseValueFirstItem.getCreatedDateTime());
        Assertions.assertNotNull(responseValueFirstItem.getModifiedDateTime());
        Assertions.assertEquals("string", responseValueFirstItem.getSource());
        Assertions.assertEquals("string", responseValueFirstItem.getName());
        Assertions.assertEquals("string", responseValueFirstItem.getDescription());
        Assertions.assertNotNull(responseValueFirstItem.getProperties());
        Assertions.assertNotNull(responseValueFirstItem.getData());
        Assertions.assertEquals("lavi-item", responseValueFirstItem.getOwnerItemId());
        Assertions.assertEquals("CATALOG123", responseValueFirstItem.getCatalogId());
        Assertions.assertEquals("COLLECTION123", responseValueFirstItem.getCollectionId());
        List<Asset> responseValueFirstItemAssets = responseValueFirstItem.getAssets();
        Asset responseValueFirstItemAssetsFirstItem = responseValueFirstItemAssets.iterator().next();
        Assertions.assertNotNull(responseValueFirstItemAssetsFirstItem);
        Assertions.assertEquals(DataFormat.IMAGE, responseValueFirstItemAssetsFirstItem.getType());
        Assertions.assertEquals("string", responseValueFirstItemAssetsFirstItem.getName());
        Assertions.assertEquals("string", responseValueFirstItemAssetsFirstItem.getHref());
        Assertions.assertEquals("ITEM123", responseValueFirstItem.getId());
    }
}

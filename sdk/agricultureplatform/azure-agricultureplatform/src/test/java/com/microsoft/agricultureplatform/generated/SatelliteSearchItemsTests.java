// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.generated;

import com.microsoft.agricultureplatform.models.KeyVaultProperties;
import com.microsoft.agricultureplatform.models.OauthClientCredentials;
import com.microsoft.agricultureplatform.models.Polygon;
import com.microsoft.agricultureplatform.models.SearchFeaturesResponse;
import com.microsoft.agricultureplatform.models.SearchItemsOptions;
import com.microsoft.agricultureplatform.models.StacItem;
import com.microsoft.agricultureplatform.models.StacLink;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SatelliteSearchItemsTests extends AgriculturePlatformClientTestBase {
    @Test
    @Disabled
    public void testSatelliteSearchItemsTests() {
        // method invocation
        SearchFeaturesResponse response
            = satelliteOperationsClient
                .searchItems(new SearchItemsOptions(
                    new OauthClientCredentials("ed16ee3f-9742-42cc-a71b-dcd90c3b6c03",
                        new KeyVaultProperties("fakeTokenPlaceholder", "fakeTokenPlaceholder", "fakeTokenPlaceholder")),
                    "SentinelHub", "sentinel-2-l2a").setStartDateTime(OffsetDateTime.parse("2024-06-15T12:42:29.217Z"))
                        .setEndDateTime(OffsetDateTime.parse("2024-06-22T12:42:29.217Z"))
                        .setIntersects(new Polygon(
                            Arrays.asList(Arrays.asList(Arrays.asList(73.70457172393799, 20.545385304358106),
                                Arrays.asList(73.70457172393799, 20.545385304358106),
                                Arrays.asList(73.70448589324951, 20.542411534243367),
                                Arrays.asList(73.70877742767334, 20.541688176010233),
                                Arrays.asList(73.71023654937744, 20.545083911372505),
                                Arrays.asList(73.70663166046143, 20.546992723579137),
                                Arrays.asList(73.70457172393799, 20.545385304358106))))));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "features"
        List<StacItem> responseFeatures = response.getFeatures();
        StacItem responseFeaturesFirstItem = responseFeatures.iterator().next();
        Assertions.assertNotNull(responseFeaturesFirstItem);
        Assertions.assertEquals("1.0.0", responseFeaturesFirstItem.getStacVersion());
        List<String> responseFeaturesFirstItemStacExtensions = responseFeaturesFirstItem.getStacExtensions();
        Assertions.assertEquals("https://stac-extensions.github.io/eo/v1.0.0/schema.json",
            responseFeaturesFirstItemStacExtensions.iterator().next());
        Assertions.assertEquals("S2A_MSIL2A_20240622T052751_N0510_R105_T43QCC_20240622T091951",
            responseFeaturesFirstItem.getId());
        Assertions.assertEquals("Feature", responseFeaturesFirstItem.getType());
        Assertions.assertNotNull(responseFeaturesFirstItem.getGeometry());
        List<Double> responseFeaturesFirstItemBbox = responseFeaturesFirstItem.getBbox();
        Assertions.assertEquals(73.29042380185452, responseFeaturesFirstItemBbox.iterator().next());
        Assertions.assertNotNull(responseFeaturesFirstItem.getProperties());
        List<StacLink> responseFeaturesFirstItemLinks = responseFeaturesFirstItem.getLinks();
        StacLink responseFeaturesFirstItemLinksFirstItem = responseFeaturesFirstItemLinks.iterator().next();
        Assertions.assertNotNull(responseFeaturesFirstItemLinksFirstItem);
        Assertions.assertEquals("https://services.sentinel-hub.com/api/v1/catalog/1.0.0/",
            responseFeaturesFirstItemLinksFirstItem.getHref());
        Assertions.assertEquals("root", responseFeaturesFirstItemLinksFirstItem.getRel());
        Assertions.assertEquals("application/json", responseFeaturesFirstItemLinksFirstItem.getType());
        Assertions.assertNotNull(responseFeaturesFirstItem.getAssets());
        Assertions.assertEquals("sentinel-2-l2a", responseFeaturesFirstItem.getProviderCollectionId());
    }
}

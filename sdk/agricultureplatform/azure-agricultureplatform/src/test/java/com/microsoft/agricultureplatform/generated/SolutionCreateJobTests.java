// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.generated;

import com.microsoft.agricultureplatform.models.SamplePartnerResponse;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SolutionCreateJobTests extends AgriculturePlatformClientTestBase {
    @Test
    @Disabled
    public void testSolutionCreateJobTests() {
        // method invocation
        SamplePartnerResponse response
            = solutionsOperationsClient.createJob("string", "string", mapOf(), mapOf(), mapOf());

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("ITEM123", response.getId());
        // verify property "message"
        Assertions.assertEquals("Success", response.getMessage());
        // verify property "status"
        Assertions.assertEquals("Completed", response.getStatus());
        // verify property "jobCreatedDateTime"
        Assertions.assertNotNull(response.getJobCreatedDateTime());
        // verify property "jobLastActionDateTime"
        Assertions.assertNotNull(response.getJobLastActionDateTime());
        // verify property "e2Eid"
        Assertions.assertEquals("E2E-123456", response.getE2Eid());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.microsoft.agricultureplatform.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.util.Configuration;
import com.microsoft.agricultureplatform.AgriculturePlatformClientBuilder;
import com.microsoft.agricultureplatform.CatalogsOperationsClient;
import com.microsoft.agricultureplatform.CollectionsOperationsClient;
import com.microsoft.agricultureplatform.FileOperationsClient;
import com.microsoft.agricultureplatform.ItemsOperationsClient;
import com.microsoft.agricultureplatform.SatelliteOperationsClient;
import com.microsoft.agricultureplatform.SchemasOperationsClient;
import com.microsoft.agricultureplatform.SolutionsOperationsClient;
import com.microsoft.agricultureplatform.WeatherOperationsClient;

class AgriculturePlatformClientTestBase extends TestProxyTestBase {
    protected CatalogsOperationsClient catalogsOperationsClient;

    protected CollectionsOperationsClient collectionsOperationsClient;

    protected FileOperationsClient fileOperationsClient;

    protected ItemsOperationsClient itemsOperationsClient;

    protected SatelliteOperationsClient satelliteOperationsClient;

    protected SchemasOperationsClient schemasOperationsClient;

    protected SolutionsOperationsClient solutionsOperationsClient;

    protected WeatherOperationsClient weatherOperationsClient;

    @Override
    protected void beforeTest() {
        AgriculturePlatformClientBuilder catalogsOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            catalogsOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        catalogsOperationsClient = catalogsOperationsClientbuilder.buildCatalogsOperationsClient();

        AgriculturePlatformClientBuilder collectionsOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            collectionsOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        collectionsOperationsClient = collectionsOperationsClientbuilder.buildCollectionsOperationsClient();

        AgriculturePlatformClientBuilder fileOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            fileOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        fileOperationsClient = fileOperationsClientbuilder.buildFileOperationsClient();

        AgriculturePlatformClientBuilder itemsOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            itemsOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        itemsOperationsClient = itemsOperationsClientbuilder.buildItemsOperationsClient();

        AgriculturePlatformClientBuilder satelliteOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            satelliteOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        satelliteOperationsClient = satelliteOperationsClientbuilder.buildSatelliteOperationsClient();

        AgriculturePlatformClientBuilder schemasOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            schemasOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        schemasOperationsClient = schemasOperationsClientbuilder.buildSchemasOperationsClient();

        AgriculturePlatformClientBuilder solutionsOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            solutionsOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        solutionsOperationsClient = solutionsOperationsClientbuilder.buildSolutionsOperationsClient();

        AgriculturePlatformClientBuilder weatherOperationsClientbuilder = new AgriculturePlatformClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            weatherOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        weatherOperationsClient = weatherOperationsClientbuilder.buildWeatherOperationsClient();

    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.resourcehealth.fluent.ImpactedResourcesClient;
import com.azure.resourcemanager.resourcehealth.fluent.models.ImpactedResourceStatusInner;
import com.azure.resourcemanager.resourcehealth.models.ImpactedResourceStatus;
import com.azure.resourcemanager.resourcehealth.models.ImpactedResources;

public final class ImpactedResourcesImpl implements ImpactedResources {
    private static final ClientLogger LOGGER = new ClientLogger(ImpactedResourcesImpl.class);

    private final ImpactedResourcesClient innerClient;

    private final com.azure.resourcemanager.resourcehealth.ResourceHealthManager serviceManager;

    public ImpactedResourcesImpl(
        ImpactedResourcesClient innerClient,
        com.azure.resourcemanager.resourcehealth.ResourceHealthManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ImpactedResourceStatus> list() {
        PagedIterable<ImpactedResourceStatusInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new ImpactedResourceStatusImpl(inner1, this.manager()));
    }

    public PagedIterable<ImpactedResourceStatus> list(String filter, Context context) {
        PagedIterable<ImpactedResourceStatusInner> inner = this.serviceClient().list(filter, context);
        return Utils.mapPage(inner, inner1 -> new ImpactedResourceStatusImpl(inner1, this.manager()));
    }

    private ImpactedResourcesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.resourcehealth.ResourceHealthManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.generated;

import com.azure.core.util.Configuration;
import com.azure.spatio.CollectionOperationsClient;
import com.azure.spatio.MicrosoftPlanetaryComputerProClientBuilder;
import com.azure.spatio.models.GeoCatalogCollection;
import com.azure.spatio.models.GeoCatalogCollectionType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class CollectionOperationsCreateOrReplace {
    public static void main(String[] args) {
        CollectionOperationsClient collectionOperationsClient = new MicrosoftPlanetaryComputerProClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
            .buildCollectionOperationsClient();
        // BEGIN:com.azure.spatio.generated.collectionoperationscreateorreplace.collectionoperationscreateorreplace
        GeoCatalogCollection response = collectionOperationsClient.createOrReplace("test-collection-568725878606",
            new GeoCatalogCollection(GeoCatalogCollectionType.COLLECTION, "1.0.0", "test-collection-d45537668d06",
                "A collection for integration tests purposes", Arrays.asList(), "CC-BY-4.0", mapOf("spatial",
                    "{bbox=[[-180, -90, 180, 90]]}", "temporal", "{interval=[[2020-01-01T00:00:00Z, null]]}"))
                        .setTitle("Test Collection d45537668d06"));
        // END:com.azure.spatio.generated.collectionoperationscreateorreplace.collectionoperationscreateorreplace
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

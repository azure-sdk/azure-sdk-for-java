// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.generated;

import com.azure.spatio.models.Link1;
import com.azure.spatio.models.LinkType;
import com.azure.spatio.models.Metadata;
import com.azure.spatio.models.MetadataType;
import com.azure.spatio.models.Search;
import com.azure.spatio.models.TitilerPgstacModelInfo;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class InfoSearchGetTests extends MicrosoftPlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testInfoSearchGetTests() {
        // method invocation
        TitilerPgstacModelInfo response = infoSearchClient.get("e32e0b12176246816953d75e3356d613");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "search"
        Search responseSearch = response.getSearch();
        Assertions.assertNotNull(responseSearch);
        Assertions.assertEquals("e32e0b12176246816953d75e3356d613", responseSearch.getHash());
        Assertions.assertNotNull(responseSearch.getSearch());
        Assertions.assertEquals("(collection = 'maxar')", responseSearch.getWhere());
        Assertions.assertEquals("datetime DESC, id DESC", responseSearch.getOrderby());
        Assertions.assertNotNull(responseSearch.getLastused());
        Assertions.assertEquals(1, responseSearch.getUsecount());
        Metadata responseSearchMetadata = responseSearch.getMetadata();
        Assertions.assertNotNull(responseSearchMetadata);
        Assertions.assertEquals(MetadataType.MOSAIC, responseSearchMetadata.getType());
        // verify property "links"
        List<Link1> responseLinks = response.getLinks();
        Link1 responseLinksFirstItem = responseLinks.iterator().next();
        Assertions.assertNotNull(responseLinksFirstItem);
        Assertions.assertEquals("self", responseLinksFirstItem.getRel());
        Assertions.assertEquals("Mosaic metadata", responseLinksFirstItem.getTitle());
        Assertions.assertEquals(LinkType.APPLICATION_JSON, responseLinksFirstItem.getType());
        Assertions.assertEquals("http://localhost:8080/api/mosaic/e32e0b12176246816953d75e3356d613/info",
            responseLinksFirstItem.getHref());
    }
}

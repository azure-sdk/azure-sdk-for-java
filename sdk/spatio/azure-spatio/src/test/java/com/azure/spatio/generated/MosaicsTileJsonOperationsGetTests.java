// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.generated;

import com.azure.spatio.models.TileJson;
import com.azure.spatio.models.TileJsonScheme;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class MosaicsTileJsonOperationsGetTests extends MicrosoftPlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testMosaicsTileJsonOperationsGetTests() {
        // method invocation
        TileJson response = mosaicsTileJsonOperationsClient.get(null, null, null, null, 9, null, null, null,
            Arrays.asList("B04"), null, null, null, "sentinel-2-l2a-tutorial-7", "0", null, null, null, null, null,
            null, null, null, null, null, null, null, null, null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "tilejson"
        Assertions.assertEquals("2.2.0", response.getTilejson());
        // verify property "name"
        Assertions.assertEquals("cec534a6472abf1bc9d4968b5392807e", response.getName());
        // verify property "version"
        Assertions.assertEquals("1.0.0", response.getVersion());
        // verify property "scheme"
        Assertions.assertEquals(TileJsonScheme.XYZ, response.getScheme());
        // verify property "tiles"
        List<String> responseTiles = response.getTiles();
        Assertions.assertEquals(
            "https://kungeocatalog1.ahaga9h8fpdxb5gz.uksouth.geocatalog.spatio.azure.com/api/mosaic/cec534a6472abf1bc9d4968b5392807e/tiles/WebMercatorQuad/{z}/{x}/{y}?assets=B04&assets=B03&assets=B02&color_formula=Gamma+RGB+3.2+Saturation+0.8+Sigmoidal+RGB+25+0.35&nodata=0&collection=sentinel-2-l2a-tutorial-7&format=png&api-version=2024-01-31-preview",
            responseTiles.iterator().next());
        // verify property "minzoom"
        Assertions.assertEquals(9, response.getMinzoom());
        // verify property "maxzoom"
        Assertions.assertEquals(24, response.getMaxzoom());
        // verify property "bounds"
        List<Double> responseBounds = response.getBounds();
        Assertions.assertEquals(-180.0, responseBounds.iterator().next());
        // verify property "center"
        List<Double> responseCenter = response.getCenter();
        Assertions.assertEquals(4.263256414560601E-14, responseCenter.iterator().next());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.generated;

import com.azure.spatio.models.Collection;
import com.azure.spatio.models.Extent;
import com.azure.spatio.models.LinksItem;
import com.azure.spatio.models.SpatialExtent;
import com.azure.spatio.models.TimeInterval;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class CollectionOperationsGetTests extends MicrosoftPlanetaryComputerProClientTestBase {
    @Test
    @Disabled
    public void testCollectionOperationsGetTests() {
        // method invocation
        Collection response = collectionOperationsClient.get("test-collection-568725878606", null, null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("test-collection-568725878606", response.getId());
        // verify property "description"
        Assertions.assertEquals("A collection for integration tests purposes", response.getDescription());
        // verify property "stacVersion"
        Assertions.assertEquals("1.0.0", response.getStacVersion());
        // verify property "links"
        List<LinksItem> responseLinks = response.getLinks();
        LinksItem responseLinksFirstItem = responseLinks.iterator().next();
        Assertions.assertNotNull(responseLinksFirstItem);
        // verify property "title"
        Assertions.assertEquals("Test Collection 568725878606", response.getTitle());
        // verify property "type"
        Assertions.assertEquals("Collection", response.getType());
        // verify property "license"
        Assertions.assertEquals("CC-BY-4.0", response.getLicense());
        // verify property "extent"
        Extent responseExtent = response.getExtent();
        Assertions.assertNotNull(responseExtent);
        SpatialExtent responseExtentSpatial = responseExtent.getSpatial();
        Assertions.assertNotNull(responseExtentSpatial);
        List<List<String>> responseExtentSpatialBbox = responseExtentSpatial.getBbox();
        List<String> responseExtentSpatialBboxFirstItem = responseExtentSpatialBbox.iterator().next();
        Assertions.assertEquals("-180", responseExtentSpatialBboxFirstItem.iterator().next());
        TimeInterval responseExtentTemporal = responseExtent.getTemporal();
        Assertions.assertNotNull(responseExtentTemporal);
        List<List<String>> responseExtentTemporalInterval = responseExtentTemporal.getInterval();
        List<String> responseExtentTemporalIntervalFirstItem = responseExtentTemporalInterval.iterator().next();
        Assertions.assertEquals("2020-01-01T00:00:00Z", responseExtentTemporalIntervalFirstItem.iterator().next());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * TODO: add description for SasTokenConnectionCreation.
 */
@Immutable
public final class SasTokenConnectionCreation implements JsonSerializable<SasTokenConnectionCreation> {
    /*
     * Azure Blob Storage container URL
     */
    @Generated
    private final String containerUrl;

    /*
     * Azure Blob Storage SAS token SAS token
     */
    @Generated
    private final String sasToken;

    /**
     * Creates an instance of SasTokenConnectionCreation class.
     * 
     * @param containerUrl the containerUrl value to set.
     * @param sasToken the sasToken value to set.
     */
    @Generated
    public SasTokenConnectionCreation(String containerUrl, String sasToken) {
        this.containerUrl = containerUrl;
        this.sasToken = sasToken;
    }

    /**
     * Get the containerUrl property: Azure Blob Storage container URL.
     * 
     * @return the containerUrl value.
     */
    @Generated
    public String getContainerUrl() {
        return this.containerUrl;
    }

    /**
     * Get the sasToken property: Azure Blob Storage SAS token SAS token.
     * 
     * @return the sasToken value.
     */
    @Generated
    public String getSasToken() {
        return this.sasToken;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("containerUrl", this.containerUrl);
        jsonWriter.writeStringField("sasToken", this.sasToken);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SasTokenConnectionCreation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SasTokenConnectionCreation if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SasTokenConnectionCreation.
     */
    @Generated
    public static SasTokenConnectionCreation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String containerUrl = null;
            String sasToken = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("containerUrl".equals(fieldName)) {
                    containerUrl = reader.getString();
                } else if ("sasToken".equals(fieldName)) {
                    sasToken = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new SasTokenConnectionCreation(containerUrl, sasToken);
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.implementation;

import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.spatio.MicrosoftPlanetaryComputerProServiceVersion;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in AssetsForTiles.
 */
public final class AssetsForTilesImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final AssetsForTilesService service;

    /**
     * The service client containing this operation class.
     */
    private final MicrosoftPlanetaryComputerProClientImpl client;

    /**
     * Initializes an instance of AssetsForTilesImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    AssetsForTilesImpl(MicrosoftPlanetaryComputerProClientImpl client) {
        this.service
            = RestProxy.create(AssetsForTilesService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public MicrosoftPlanetaryComputerProServiceVersion getServiceVersion() {
        return client.getServiceVersion();
    }

    /**
     * The interface defining all the services for MicrosoftPlanetaryComputerProClientAssetsForTiles to be used by the
     * proxy service to perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "MicrosoftPlanetaryCo")
    public interface AssetsForTilesService {
        @Get("/api/mosaic/{searchid}/tiles/{z}/{x}/{y}/assets")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getZxyAssets(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("searchid") String searchid,
            @PathParam("z") String z, @PathParam("x") String x, @PathParam("y") String y,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/api/mosaic/{searchid}/tiles/{z}/{x}/{y}/assets")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getZxyAssetsSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("searchid") String searchid,
            @PathParam("z") String z, @PathParam("x") String x, @PathParam("y") String y,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
    }

    /**
     * Assets For Tile
     * 
     * Return a list of assets which overlap a given tile.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>tileMatrixSetId</td><td>String</td><td>No</td><td>Identifier selecting one of the TileMatrixSetId
     * supported (default:
     * 'WebMercatorQuad'). Allowed values: "CanadianNAD83_LCC", "EuropeanETRS89_LAEAQuad", "LINZAntarticaMapTilegrid",
     * "NZTM2000Quad", "UPSAntarcticWGS84Quad", "UPSArcticWGS84Quad", "UTM31WGS84Quad", "WGS1984Quad",
     * "WebMercatorQuad", "WorldCRS84Quad", "WorldMercatorWGS84Quad".</td></tr>
     * <tr><td>scanLimit</td><td>Integer</td><td>No</td><td>Return as soon as we scan N items (defaults to 10000 in
     * PgSTAC).</td></tr>
     * <tr><td>itemsLimit</td><td>Integer</td><td>No</td><td>Return as soon as we have N items per geometry (defaults to
     * 100 in PgSTAC).</td></tr>
     * <tr><td>timeLimit</td><td>Integer</td><td>No</td><td>Return after N seconds to avoid long requests (defaults to 5
     * in PgSTAC).</td></tr>
     * <tr><td>exitwhenfull</td><td>Boolean</td><td>No</td><td>Return as soon as the geometry is fully covered (defaults
     * to True in PgSTAC).</td></tr>
     * <tr><td>skipcovered</td><td>Boolean</td><td>No</td><td>Skip any items that would show up completely under the
     * previous items (defaults
     * to True in PgSTAC).</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * [
     *      (Required){
     *     }
     * ]
     * }
     * </pre>
     * 
     * @param searchid Search Id (pgSTAC Search Hash).
     * @param z Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
     * representing the scaleDenominator the tile.
     * @param x Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
     * MatrixHeight-1 for the selected TileMatrix.
     * @param y Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
     * MatrixWidth-1 for the selected TileMatrix.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getZxyAssetsWithResponseAsync(String searchid, String z, String x, String y,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.getZxyAssets(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), searchid, z, x, y, accept, requestOptions, context));
    }

    /**
     * Assets For Tile
     * 
     * Return a list of assets which overlap a given tile.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>tileMatrixSetId</td><td>String</td><td>No</td><td>Identifier selecting one of the TileMatrixSetId
     * supported (default:
     * 'WebMercatorQuad'). Allowed values: "CanadianNAD83_LCC", "EuropeanETRS89_LAEAQuad", "LINZAntarticaMapTilegrid",
     * "NZTM2000Quad", "UPSAntarcticWGS84Quad", "UPSArcticWGS84Quad", "UTM31WGS84Quad", "WGS1984Quad",
     * "WebMercatorQuad", "WorldCRS84Quad", "WorldMercatorWGS84Quad".</td></tr>
     * <tr><td>scanLimit</td><td>Integer</td><td>No</td><td>Return as soon as we scan N items (defaults to 10000 in
     * PgSTAC).</td></tr>
     * <tr><td>itemsLimit</td><td>Integer</td><td>No</td><td>Return as soon as we have N items per geometry (defaults to
     * 100 in PgSTAC).</td></tr>
     * <tr><td>timeLimit</td><td>Integer</td><td>No</td><td>Return after N seconds to avoid long requests (defaults to 5
     * in PgSTAC).</td></tr>
     * <tr><td>exitwhenfull</td><td>Boolean</td><td>No</td><td>Return as soon as the geometry is fully covered (defaults
     * to True in PgSTAC).</td></tr>
     * <tr><td>skipcovered</td><td>Boolean</td><td>No</td><td>Skip any items that would show up completely under the
     * previous items (defaults
     * to True in PgSTAC).</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * [
     *      (Required){
     *     }
     * ]
     * }
     * </pre>
     * 
     * @param searchid Search Id (pgSTAC Search Hash).
     * @param z Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
     * representing the scaleDenominator the tile.
     * @param x Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
     * MatrixHeight-1 for the selected TileMatrix.
     * @param y Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
     * MatrixWidth-1 for the selected TileMatrix.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getZxyAssetsWithResponse(String searchid, String z, String x, String y,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.getZxyAssetsSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(),
            searchid, z, x, y, accept, requestOptions, Context.NONE);
    }
}

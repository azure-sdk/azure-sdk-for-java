// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.implementation;

import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.spatio.MicrosoftPlanetaryComputerProServiceVersion;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in MatrixDefinitions.
 */
public final class MatrixDefinitionsImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final MatrixDefinitionsService service;

    /**
     * The service client containing this operation class.
     */
    private final MicrosoftPlanetaryComputerProClientImpl client;

    /**
     * Initializes an instance of MatrixDefinitionsImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    MatrixDefinitionsImpl(MicrosoftPlanetaryComputerProClientImpl client) {
        this.service
            = RestProxy.create(MatrixDefinitionsService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public MicrosoftPlanetaryComputerProServiceVersion getServiceVersion() {
        return client.getServiceVersion();
    }

    /**
     * The interface defining all the services for MicrosoftPlanetaryComputerProClientMatrixDefinitions to be used by
     * the proxy service to perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "MicrosoftPlanetaryCo")
    public interface MatrixDefinitionsService {
        @Get("/api/tile-matrix-sets/{tileMatrixSetId}")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> get(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("tileMatrixSetId") String tileMatrixSetId,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/api/tile-matrix-sets/{tileMatrixSetId}")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("tileMatrixSetId") String tileMatrixSetId,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);
    }

    /**
     * Matrix Definition.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     title: String (Optional)
     *     description: String (Optional)
     *     keywords (Optional): [
     *         String (Optional)
     *     ]
     *     id: String (Optional)
     *     uri: String (Optional)
     *     orderedAxes (Optional): [
     *         String (Optional)
     *     ]
     *     crs (Required): {
     *     }
     *     wellKnownScaleSet: String (Optional)
     *     boundingBox (Optional): {
     *         lowerLeft (Required): [
     *             String (Required)
     *         ]
     *         upperRight (Required): [
     *             String (Required)
     *         ]
     *         crs: String (Optional)
     *         orderedAxes (Optional): [
     *             String (Optional)
     *         ]
     *     }
     *     tileMatrices (Required): [
     *          (Required){
     *             title: String (Optional)
     *             description: String (Optional)
     *             keywords (Optional): [
     *                 String (Optional)
     *             ]
     *             id: String (Required)
     *             scaleDenominator: double (Required)
     *             cellSize: double (Required)
     *             cornerOfOrigin: String(topLeft/bottomLeft) (Optional)
     *             pointOfOrigin (Required): [
     *                 String (Required)
     *             ]
     *             tileWidth: int (Required)
     *             tileHeight: int (Required)
     *             matrixWidth: int (Required)
     *             matrixHeight: int (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param tileMatrixSetId TODO: add description for "tileMatrixSetId".
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return tile Matrix Set Definition
     * 
     * A definition of a tile matrix set following the Tile Matrix Set standard.
     * For tileset metadata, such a description (in `tileMatrixSet` property) is only
     * required for offline use,
     * as an alternative to a link with a
     * `http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme` relation type.
     * 
     * ref:
     * https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/tileMatrixSet.jsonTODO: add
     * description for TileMatrixSet along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getWithResponseAsync(String tileMatrixSetId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.get(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), tileMatrixSetId, accept, requestOptions, context));
    }

    /**
     * Matrix Definition.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     title: String (Optional)
     *     description: String (Optional)
     *     keywords (Optional): [
     *         String (Optional)
     *     ]
     *     id: String (Optional)
     *     uri: String (Optional)
     *     orderedAxes (Optional): [
     *         String (Optional)
     *     ]
     *     crs (Required): {
     *     }
     *     wellKnownScaleSet: String (Optional)
     *     boundingBox (Optional): {
     *         lowerLeft (Required): [
     *             String (Required)
     *         ]
     *         upperRight (Required): [
     *             String (Required)
     *         ]
     *         crs: String (Optional)
     *         orderedAxes (Optional): [
     *             String (Optional)
     *         ]
     *     }
     *     tileMatrices (Required): [
     *          (Required){
     *             title: String (Optional)
     *             description: String (Optional)
     *             keywords (Optional): [
     *                 String (Optional)
     *             ]
     *             id: String (Required)
     *             scaleDenominator: double (Required)
     *             cellSize: double (Required)
     *             cornerOfOrigin: String(topLeft/bottomLeft) (Optional)
     *             pointOfOrigin (Required): [
     *                 String (Required)
     *             ]
     *             tileWidth: int (Required)
     *             tileHeight: int (Required)
     *             matrixWidth: int (Required)
     *             matrixHeight: int (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param tileMatrixSetId TODO: add description for "tileMatrixSetId".
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return tile Matrix Set Definition
     * 
     * A definition of a tile matrix set following the Tile Matrix Set standard.
     * For tileset metadata, such a description (in `tileMatrixSet` property) is only
     * required for offline use,
     * as an alternative to a link with a
     * `http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme` relation type.
     * 
     * ref:
     * https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/tileMatrixSet.jsonTODO: add
     * description for TileMatrixSet along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getWithResponse(String tileMatrixSetId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.getSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(), tileMatrixSetId,
            accept, requestOptions, Context.NONE);
    }
}

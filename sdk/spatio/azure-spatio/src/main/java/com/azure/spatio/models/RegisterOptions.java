// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.spatio.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import java.util.List;
import java.util.Map;

/**
 * Options for register API.
 */
@Fluent
public final class RegisterOptions {
    /*
     * CollectionsTODO: add description for collections
     */
    @Generated
    private List<String> collections;

    /*
     * IdsTODO: add description for ids
     */
    @Generated
    private List<String> ids;

    /*
     * BboxTODO: add description for bbox
     */
    @Generated
    private String bbox;

    /*
     * IntersectsTODO: add description for intersects
     */
    @Generated
    private RegisterMosaicIntersects intersects;

    /*
     * Query
     */
    @Generated
    private Map<String, Map<String, String>> query;

    /*
     * Filter
     */
    @Generated
    private Map<String, String> filter;

    /*
     * DatetimeTODO: add description for datetime
     */
    @Generated
    private String datetime;

    /*
     * SortbyTODO: add description for sortby
     */
    @Generated
    private String sortby;

    /*
     * Filter-LangTODO: add description for filterLang
     */
    @Generated
    private RegisterMosaicFilterLang filterLang;

    /*
     * Metadata Model.TODO: add description for metadata
     */
    @Generated
    private Metadata metadata;

    /**
     * Creates an instance of RegisterOptions class.
     */
    @Generated
    public RegisterOptions() {
    }

    /**
     * Get the collections property: CollectionsTODO: add description for collections.
     * 
     * @return the collections value.
     */
    @Generated
    public List<String> getCollections() {
        return this.collections;
    }

    /**
     * Set the collections property: CollectionsTODO: add description for collections.
     * 
     * @param collections the collections value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setCollections(List<String> collections) {
        this.collections = collections;
        return this;
    }

    /**
     * Get the ids property: IdsTODO: add description for ids.
     * 
     * @return the ids value.
     */
    @Generated
    public List<String> getIds() {
        return this.ids;
    }

    /**
     * Set the ids property: IdsTODO: add description for ids.
     * 
     * @param ids the ids value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setIds(List<String> ids) {
        this.ids = ids;
        return this;
    }

    /**
     * Get the bbox property: BboxTODO: add description for bbox.
     * 
     * @return the bbox value.
     */
    @Generated
    public String getBbox() {
        return this.bbox;
    }

    /**
     * Set the bbox property: BboxTODO: add description for bbox.
     * 
     * @param bbox the bbox value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setBbox(String bbox) {
        this.bbox = bbox;
        return this;
    }

    /**
     * Get the intersects property: IntersectsTODO: add description for intersects.
     * 
     * @return the intersects value.
     */
    @Generated
    public RegisterMosaicIntersects getIntersects() {
        return this.intersects;
    }

    /**
     * Set the intersects property: IntersectsTODO: add description for intersects.
     * 
     * @param intersects the intersects value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setIntersects(RegisterMosaicIntersects intersects) {
        this.intersects = intersects;
        return this;
    }

    /**
     * Get the query property: Query.
     * 
     * @return the query value.
     */
    @Generated
    public Map<String, Map<String, String>> getQuery() {
        return this.query;
    }

    /**
     * Set the query property: Query.
     * 
     * @param query the query value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setQuery(Map<String, Map<String, String>> query) {
        this.query = query;
        return this;
    }

    /**
     * Get the filter property: Filter.
     * 
     * @return the filter value.
     */
    @Generated
    public Map<String, String> getFilter() {
        return this.filter;
    }

    /**
     * Set the filter property: Filter.
     * 
     * @param filter the filter value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setFilter(Map<String, String> filter) {
        this.filter = filter;
        return this;
    }

    /**
     * Get the datetime property: DatetimeTODO: add description for datetime.
     * 
     * @return the datetime value.
     */
    @Generated
    public String getDatetime() {
        return this.datetime;
    }

    /**
     * Set the datetime property: DatetimeTODO: add description for datetime.
     * 
     * @param datetime the datetime value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setDatetime(String datetime) {
        this.datetime = datetime;
        return this;
    }

    /**
     * Get the sortby property: SortbyTODO: add description for sortby.
     * 
     * @return the sortby value.
     */
    @Generated
    public String getSortby() {
        return this.sortby;
    }

    /**
     * Set the sortby property: SortbyTODO: add description for sortby.
     * 
     * @param sortby the sortby value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setSortby(String sortby) {
        this.sortby = sortby;
        return this;
    }

    /**
     * Get the filterLang property: Filter-LangTODO: add description for filterLang.
     * 
     * @return the filterLang value.
     */
    @Generated
    public RegisterMosaicFilterLang getFilterLang() {
        return this.filterLang;
    }

    /**
     * Set the filterLang property: Filter-LangTODO: add description for filterLang.
     * 
     * @param filterLang the filterLang value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setFilterLang(RegisterMosaicFilterLang filterLang) {
        this.filterLang = filterLang;
        return this;
    }

    /**
     * Get the metadata property: Metadata Model.TODO: add description for metadata.
     * 
     * @return the metadata value.
     */
    @Generated
    public Metadata getMetadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Metadata Model.TODO: add description for metadata.
     * 
     * @param metadata the metadata value to set.
     * @return the RegisterOptions object itself.
     */
    @Generated
    public RegisterOptions setMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
}

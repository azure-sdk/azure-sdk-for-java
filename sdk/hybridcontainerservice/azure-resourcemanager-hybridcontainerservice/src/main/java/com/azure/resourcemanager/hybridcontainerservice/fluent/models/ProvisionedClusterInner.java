// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.hybridcontainerservice.models.CloudProviderProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ClusterVMAccessProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ExtendedLocation;
import com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties;
import com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedClusterLicenseProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedClusterPropertiesAutoScalerProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedClusterPropertiesStatus;
import com.azure.resourcemanager.hybridcontainerservice.models.ResourceProvisioningState;
import com.azure.resourcemanager.hybridcontainerservice.models.StorageProfile;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The provisioned cluster resource definition.
 */
@Fluent
public final class ProvisionedClusterInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private ProvisionedClusterProperties innerProperties;

    /*
     * Extended location pointing to the underlying infrastructure
     */
    @JsonProperty(value = "extendedLocation")
    private ExtendedLocation extendedLocation;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of ProvisionedClusterInner class.
     */
    public ProvisionedClusterInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private ProvisionedClusterProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the extendedLocation property: Extended location pointing to the underlying infrastructure.
     * 
     * @return the extendedLocation value.
     */
    public ExtendedLocation extendedLocation() {
        return this.extendedLocation;
    }

    /**
     * Set the extendedLocation property: Extended location pointing to the underlying infrastructure.
     * 
     * @param extendedLocation the extendedLocation value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withExtendedLocation(ExtendedLocation extendedLocation) {
        this.extendedLocation = extendedLocation;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the linuxProfile property: The profile for Linux VMs in the provisioned cluster.
     * 
     * @return the linuxProfile value.
     */
    public LinuxProfileProperties linuxProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().linuxProfile();
    }

    /**
     * Set the linuxProfile property: The profile for Linux VMs in the provisioned cluster.
     * 
     * @param linuxProfile the linuxProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withLinuxProfile(LinuxProfileProperties linuxProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withLinuxProfile(linuxProfile);
        return this;
    }

    /**
     * Get the controlPlane property: The profile for control plane of the provisioned cluster.
     * 
     * @return the controlPlane value.
     */
    public ControlPlaneProfile controlPlane() {
        return this.innerProperties() == null ? null : this.innerProperties().controlPlane();
    }

    /**
     * Set the controlPlane property: The profile for control plane of the provisioned cluster.
     * 
     * @param controlPlane the controlPlane value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withControlPlane(ControlPlaneProfile controlPlane) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withControlPlane(controlPlane);
        return this;
    }

    /**
     * Get the kubernetesVersion property: The version of Kubernetes in use by the provisioned cluster.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().kubernetesVersion();
    }

    /**
     * Set the kubernetesVersion property: The version of Kubernetes in use by the provisioned cluster.
     * 
     * @param kubernetesVersion the kubernetesVersion value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withKubernetesVersion(String kubernetesVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withKubernetesVersion(kubernetesVersion);
        return this;
    }

    /**
     * Get the networkProfile property: The network configuration profile for the provisioned cluster.
     * 
     * @return the networkProfile value.
     */
    public NetworkProfile networkProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().networkProfile();
    }

    /**
     * Set the networkProfile property: The network configuration profile for the provisioned cluster.
     * 
     * @param networkProfile the networkProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withNetworkProfile(NetworkProfile networkProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withNetworkProfile(networkProfile);
        return this;
    }

    /**
     * Get the storageProfile property: The storage configuration profile for the provisioned cluster.
     * 
     * @return the storageProfile value.
     */
    public StorageProfile storageProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().storageProfile();
    }

    /**
     * Set the storageProfile property: The storage configuration profile for the provisioned cluster.
     * 
     * @param storageProfile the storageProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withStorageProfile(StorageProfile storageProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withStorageProfile(storageProfile);
        return this;
    }

    /**
     * Get the clusterVMAccessProfile property: The SSH restricted access profile for the VMs in the provisioned
     * cluster.
     * 
     * @return the clusterVMAccessProfile value.
     */
    public ClusterVMAccessProfile clusterVMAccessProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterVMAccessProfile();
    }

    /**
     * Set the clusterVMAccessProfile property: The SSH restricted access profile for the VMs in the provisioned
     * cluster.
     * 
     * @param clusterVMAccessProfile the clusterVMAccessProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withClusterVMAccessProfile(ClusterVMAccessProfile clusterVMAccessProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withClusterVMAccessProfile(clusterVMAccessProfile);
        return this;
    }

    /**
     * Get the agentPoolProfiles property: The agent pool properties for the provisioned cluster.
     * 
     * @return the agentPoolProfiles value.
     */
    public List<NamedAgentPoolProfile> agentPoolProfiles() {
        return this.innerProperties() == null ? null : this.innerProperties().agentPoolProfiles();
    }

    /**
     * Set the agentPoolProfiles property: The agent pool properties for the provisioned cluster.
     * 
     * @param agentPoolProfiles the agentPoolProfiles value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withAgentPoolProfiles(List<NamedAgentPoolProfile> agentPoolProfiles) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withAgentPoolProfiles(agentPoolProfiles);
        return this;
    }

    /**
     * Get the cloudProviderProfile property: The profile for the underlying cloud infrastructure provider for the
     * provisioned cluster.
     * 
     * @return the cloudProviderProfile value.
     */
    public CloudProviderProfile cloudProviderProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().cloudProviderProfile();
    }

    /**
     * Set the cloudProviderProfile property: The profile for the underlying cloud infrastructure provider for the
     * provisioned cluster.
     * 
     * @param cloudProviderProfile the cloudProviderProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withCloudProviderProfile(CloudProviderProfile cloudProviderProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withCloudProviderProfile(cloudProviderProfile);
        return this;
    }

    /**
     * Get the provisioningState property: The status of the latest long running operation for the provisioned cluster.
     * 
     * @return the provisioningState value.
     */
    public ResourceProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the status property: The observed status of the provisioned cluster.
     * 
     * @return the status value.
     */
    public ProvisionedClusterPropertiesStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the licenseProfile property: The license profile of the provisioned cluster.
     * 
     * @return the licenseProfile value.
     */
    public ProvisionedClusterLicenseProfile licenseProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().licenseProfile();
    }

    /**
     * Set the licenseProfile property: The license profile of the provisioned cluster.
     * 
     * @param licenseProfile the licenseProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner withLicenseProfile(ProvisionedClusterLicenseProfile licenseProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withLicenseProfile(licenseProfile);
        return this;
    }

    /**
     * Get the autoScalerProfile property: Parameters to be applied to the cluster-autoscaler when auto scaling is
     * enabled for the provisioned cluster.
     * 
     * @return the autoScalerProfile value.
     */
    public ProvisionedClusterPropertiesAutoScalerProfile autoScalerProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().autoScalerProfile();
    }

    /**
     * Set the autoScalerProfile property: Parameters to be applied to the cluster-autoscaler when auto scaling is
     * enabled for the provisioned cluster.
     * 
     * @param autoScalerProfile the autoScalerProfile value to set.
     * @return the ProvisionedClusterInner object itself.
     */
    public ProvisionedClusterInner
        withAutoScalerProfile(ProvisionedClusterPropertiesAutoScalerProfile autoScalerProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ProvisionedClusterProperties();
        }
        this.innerProperties().withAutoScalerProfile(autoScalerProfile);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (extendedLocation() != null) {
            extendedLocation().validate();
        }
    }
}

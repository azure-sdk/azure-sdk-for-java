// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.ProvisionedClusterInner;
import com.azure.resourcemanager.hybridcontainerservice.models.CloudProviderProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ClusterVMAccessProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ControlPlaneProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ExtendedLocation;
import com.azure.resourcemanager.hybridcontainerservice.models.LinuxProfileProperties;
import com.azure.resourcemanager.hybridcontainerservice.models.NamedAgentPoolProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.NetworkProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedCluster;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedClusterLicenseProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedClusterPropertiesAutoScalerProfile;
import com.azure.resourcemanager.hybridcontainerservice.models.ProvisionedClusterPropertiesStatus;
import com.azure.resourcemanager.hybridcontainerservice.models.ResourceProvisioningState;
import com.azure.resourcemanager.hybridcontainerservice.models.StorageProfile;
import java.util.Collections;
import java.util.List;

public final class ProvisionedClusterImpl implements ProvisionedCluster {
    private ProvisionedClusterInner innerObject;

    private final com.azure.resourcemanager.hybridcontainerservice.HybridContainerServiceManager serviceManager;

    ProvisionedClusterImpl(ProvisionedClusterInner innerObject,
        com.azure.resourcemanager.hybridcontainerservice.HybridContainerServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ExtendedLocation extendedLocation() {
        return this.innerModel().extendedLocation();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public LinuxProfileProperties linuxProfile() {
        return this.innerModel().linuxProfile();
    }

    public ControlPlaneProfile controlPlane() {
        return this.innerModel().controlPlane();
    }

    public String kubernetesVersion() {
        return this.innerModel().kubernetesVersion();
    }

    public NetworkProfile networkProfile() {
        return this.innerModel().networkProfile();
    }

    public StorageProfile storageProfile() {
        return this.innerModel().storageProfile();
    }

    public ClusterVMAccessProfile clusterVMAccessProfile() {
        return this.innerModel().clusterVMAccessProfile();
    }

    public List<NamedAgentPoolProfile> agentPoolProfiles() {
        List<NamedAgentPoolProfile> inner = this.innerModel().agentPoolProfiles();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public CloudProviderProfile cloudProviderProfile() {
        return this.innerModel().cloudProviderProfile();
    }

    public ResourceProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ProvisionedClusterPropertiesStatus status() {
        return this.innerModel().status();
    }

    public ProvisionedClusterLicenseProfile licenseProfile() {
        return this.innerModel().licenseProfile();
    }

    public ProvisionedClusterPropertiesAutoScalerProfile autoScalerProfile() {
        return this.innerModel().autoScalerProfile();
    }

    public ProvisionedClusterInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybridcontainerservice.HybridContainerServiceManager manager() {
        return this.serviceManager;
    }
}

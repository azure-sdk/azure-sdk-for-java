// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridcontainerservice.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridcontainerservice.fluent.models.AgentPoolInner;

/**
 * An immutable client-side representation of AgentPool.
 */
public interface AgentPool {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: The resource-specific properties for this resource.
     * 
     * @return the properties value.
     */
    AgentPoolProperties properties();

    /**
     * Gets the extendedLocation property: Extended location pointing to the underlying infrastructure.
     * 
     * @return the extendedLocation value.
     */
    ExtendedLocation extendedLocation();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the inner com.azure.resourcemanager.hybridcontainerservice.fluent.models.AgentPoolInner object.
     * 
     * @return the inner object.
     */
    AgentPoolInner innerModel();

    /**
     * The entirety of the AgentPool definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }

    /**
     * The AgentPool definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the AgentPool definition.
         */
        interface Blank extends WithScope {
        }

        /**
         * The stage of the AgentPool definition allowing to specify parent resource.
         */
        interface WithScope {
            /**
             * Specifies resourceUri.
             * 
             * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceUri(String resourceUri);
        }

        /**
         * The stage of the AgentPool definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProperties, DefinitionStages.WithExtendedLocation {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            AgentPool create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AgentPool create(Context context);
        }

        /**
         * The stage of the AgentPool definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: The resource-specific properties for this resource..
             * 
             * @param properties The resource-specific properties for this resource.
             * @return the next definition stage.
             */
            WithCreate withProperties(AgentPoolProperties properties);
        }

        /**
         * The stage of the AgentPool definition allowing to specify extendedLocation.
         */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: Extended location pointing to the underlying infrastructure.
             * 
             * @param extendedLocation Extended location pointing to the underlying infrastructure.
             * @return the next definition stage.
             */
            WithCreate withExtendedLocation(ExtendedLocation extendedLocation);
        }
    }

    /**
     * Begins update for the AgentPool resource.
     * 
     * @return the stage of resource update.
     */
    AgentPool.Update update();

    /**
     * The template for AgentPool update.
     */
    interface Update extends UpdateStages.WithExtendedLocation {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        AgentPool apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AgentPool apply(Context context);
    }

    /**
     * The AgentPool update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the AgentPool update allowing to specify extendedLocation.
         */
        interface WithExtendedLocation {
            /**
             * Specifies the extendedLocation property: Extended location pointing to the underlying infrastructure.
             * 
             * @param extendedLocation Extended location pointing to the underlying infrastructure.
             * @return the next definition stage.
             */
            Update withExtendedLocation(ExtendedLocation extendedLocation);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    AgentPool refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AgentPool refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.codesigning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties of the certificate. */
@Fluent
public final class Certificate {
    /*
     * Serial number of the certificate
     */
    @JsonProperty(value = "serialNumber")
    private String serialNumber;

    /*
     * Subject name of the certificate
     */
    @JsonProperty(value = "subjectName")
    private String subjectName;

    /*
     * Thumbprint of the certificate
     */
    @JsonProperty(value = "thumbprint")
    private String thumbprint;

    /*
     * Certificate created date
     */
    @JsonProperty(value = "createdDate")
    private String createdDate;

    /*
     * Certificate expiry date
     */
    @JsonProperty(value = "expiryDate")
    private String expiryDate;

    /*
     * Status of the certificate
     */
    @JsonProperty(value = "status")
    private CertificateStatus status;

    /*
     * The revocations property.
     */
    @JsonProperty(value = "revocations")
    private List<Revocation> revocations;

    /** Creates an instance of Certificate class. */
    public Certificate() {
    }

    /**
     * Get the serialNumber property: Serial number of the certificate.
     *
     * @return the serialNumber value.
     */
    public String serialNumber() {
        return this.serialNumber;
    }

    /**
     * Set the serialNumber property: Serial number of the certificate.
     *
     * @param serialNumber the serialNumber value to set.
     * @return the Certificate object itself.
     */
    public Certificate withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }

    /**
     * Get the subjectName property: Subject name of the certificate.
     *
     * @return the subjectName value.
     */
    public String subjectName() {
        return this.subjectName;
    }

    /**
     * Set the subjectName property: Subject name of the certificate.
     *
     * @param subjectName the subjectName value to set.
     * @return the Certificate object itself.
     */
    public Certificate withSubjectName(String subjectName) {
        this.subjectName = subjectName;
        return this;
    }

    /**
     * Get the thumbprint property: Thumbprint of the certificate.
     *
     * @return the thumbprint value.
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Set the thumbprint property: Thumbprint of the certificate.
     *
     * @param thumbprint the thumbprint value to set.
     * @return the Certificate object itself.
     */
    public Certificate withThumbprint(String thumbprint) {
        this.thumbprint = thumbprint;
        return this;
    }

    /**
     * Get the createdDate property: Certificate created date.
     *
     * @return the createdDate value.
     */
    public String createdDate() {
        return this.createdDate;
    }

    /**
     * Set the createdDate property: Certificate created date.
     *
     * @param createdDate the createdDate value to set.
     * @return the Certificate object itself.
     */
    public Certificate withCreatedDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    /**
     * Get the expiryDate property: Certificate expiry date.
     *
     * @return the expiryDate value.
     */
    public String expiryDate() {
        return this.expiryDate;
    }

    /**
     * Set the expiryDate property: Certificate expiry date.
     *
     * @param expiryDate the expiryDate value to set.
     * @return the Certificate object itself.
     */
    public Certificate withExpiryDate(String expiryDate) {
        this.expiryDate = expiryDate;
        return this;
    }

    /**
     * Get the status property: Status of the certificate.
     *
     * @return the status value.
     */
    public CertificateStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the certificate.
     *
     * @param status the status value to set.
     * @return the Certificate object itself.
     */
    public Certificate withStatus(CertificateStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the revocations property: The revocations property.
     *
     * @return the revocations value.
     */
    public List<Revocation> revocations() {
        return this.revocations;
    }

    /**
     * Set the revocations property: The revocations property.
     *
     * @param revocations the revocations value to set.
     * @return the Certificate object itself.
     */
    public Certificate withRevocations(List<Revocation> revocations) {
        this.revocations = revocations;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (revocations() != null) {
            revocations().forEach(e -> e.validate());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.codesigning.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.codesigning.fluent.models.CodeSigningAccountInner;
import com.azure.resourcemanager.codesigning.models.CodeSigningAccount;
import com.azure.resourcemanager.codesigning.models.CodeSigningAccountPatch;
import com.azure.resourcemanager.codesigning.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class CodeSigningAccountImpl
    implements CodeSigningAccount, CodeSigningAccount.Definition, CodeSigningAccount.Update {
    private CodeSigningAccountInner innerObject;

    private final com.azure.resourcemanager.codesigning.CodeSigningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String accountUri() {
        return this.innerModel().accountUri();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CodeSigningAccountInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.codesigning.CodeSigningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private CodeSigningAccountPatch updateCodeSigningAccountPatch;

    public CodeSigningAccountImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public CodeSigningAccount create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCodeSigningAccountOperations()
                .create(resourceGroupName, accountName, this.innerModel(), Context.NONE);
        return this;
    }

    public CodeSigningAccount create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCodeSigningAccountOperations()
                .create(resourceGroupName, accountName, this.innerModel(), context);
        return this;
    }

    CodeSigningAccountImpl(String name, com.azure.resourcemanager.codesigning.CodeSigningManager serviceManager) {
        this.innerObject = new CodeSigningAccountInner();
        this.serviceManager = serviceManager;
        this.accountName = name;
    }

    public CodeSigningAccountImpl update() {
        this.updateCodeSigningAccountPatch = new CodeSigningAccountPatch();
        return this;
    }

    public CodeSigningAccount apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCodeSigningAccountOperations()
                .updateWithResponse(resourceGroupName, accountName, updateCodeSigningAccountPatch, Context.NONE)
                .getValue();
        return this;
    }

    public CodeSigningAccount apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCodeSigningAccountOperations()
                .updateWithResponse(resourceGroupName, accountName, updateCodeSigningAccountPatch, context)
                .getValue();
        return this;
    }

    CodeSigningAccountImpl(
        CodeSigningAccountInner innerObject, com.azure.resourcemanager.codesigning.CodeSigningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "codeSigningAccounts");
    }

    public CodeSigningAccount refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCodeSigningAccountOperations()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, Context.NONE)
                .getValue();
        return this;
    }

    public CodeSigningAccount refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCodeSigningAccountOperations()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, context)
                .getValue();
        return this;
    }

    public CodeSigningAccountImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CodeSigningAccountImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CodeSigningAccountImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateCodeSigningAccountPatch.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

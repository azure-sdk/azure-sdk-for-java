// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.codesigning.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.codesigning.models.AccountSku;
import com.azure.resourcemanager.codesigning.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Code signing account resource.
 */
@Fluent
public final class CodeSigningAccountInner extends Resource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private CodeSigningAccountProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of CodeSigningAccountInner class.
     */
    public CodeSigningAccountInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private CodeSigningAccountProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeSigningAccountInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeSigningAccountInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the accountUri property: The URI of the code signing account for performing operations on certificate
     * profiles.
     * 
     * @return the accountUri value.
     */
    public String accountUri() {
        return this.innerProperties() == null ? null : this.innerProperties().accountUri();
    }

    /**
     * Get the sku property: SKU of the code signing account.
     * 
     * @return the sku value.
     */
    public AccountSku sku() {
        return this.innerProperties() == null ? null : this.innerProperties().sku();
    }

    /**
     * Set the sku property: SKU of the code signing account.
     * 
     * @param sku the sku value to set.
     * @return the CodeSigningAccountInner object itself.
     */
    public CodeSigningAccountInner withSku(AccountSku sku) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CodeSigningAccountProperties();
        }
        this.innerProperties().withSku(sku);
        return this;
    }

    /**
     * Get the provisioningState property: Status of the current operation on code signing account.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.codesigning.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.codesigning.fluent.models.CertificateProfileInner;
import com.azure.resourcemanager.codesigning.models.Certificate;
import com.azure.resourcemanager.codesigning.models.CertificateProfile;
import com.azure.resourcemanager.codesigning.models.CertificateProfilePatch;
import com.azure.resourcemanager.codesigning.models.CertificateProfileStatus;
import com.azure.resourcemanager.codesigning.models.ProfileType;
import com.azure.resourcemanager.codesigning.models.ProvisioningState;
import com.azure.resourcemanager.codesigning.models.RotationPolicy;
import java.util.Collections;
import java.util.List;

public final class CertificateProfileImpl
    implements CertificateProfile, CertificateProfile.Definition, CertificateProfile.Update {
    private CertificateProfileInner innerObject;

    private final com.azure.resourcemanager.codesigning.CodeSigningManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProfileType profileType() {
        return this.innerModel().profileType();
    }

    public RotationPolicy rotationPolicy() {
        return this.innerModel().rotationPolicy();
    }

    public String commonName() {
        return this.innerModel().commonName();
    }

    public String organization() {
        return this.innerModel().organization();
    }

    public String organizationUnit() {
        return this.innerModel().organizationUnit();
    }

    public String streetAddress() {
        return this.innerModel().streetAddress();
    }

    public Boolean includeStreetAddress() {
        return this.innerModel().includeStreetAddress();
    }

    public String state() {
        return this.innerModel().state();
    }

    public Boolean includeState() {
        return this.innerModel().includeState();
    }

    public String city() {
        return this.innerModel().city();
    }

    public Boolean includeCity() {
        return this.innerModel().includeCity();
    }

    public String postalCode() {
        return this.innerModel().postalCode();
    }

    public Boolean includePostalCode() {
        return this.innerModel().includePostalCode();
    }

    public String country() {
        return this.innerModel().country();
    }

    public Boolean includeCountry() {
        return this.innerModel().includeCountry();
    }

    public String enhancedKeyUsage() {
        return this.innerModel().enhancedKeyUsage();
    }

    public String identityValidationId() {
        return this.innerModel().identityValidationId();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public CertificateProfileStatus status() {
        return this.innerModel().status();
    }

    public List<Certificate> certificates() {
        List<Certificate> inner = this.innerModel().certificates();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CertificateProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.codesigning.CodeSigningManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private String profileName;

    private CertificateProfilePatch updateCertificateProfilePatch;

    public CertificateProfileImpl withExistingCodeSigningAccount(String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    public CertificateProfile create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateProfileOperations()
                .create(resourceGroupName, accountName, profileName, this.innerModel(), Context.NONE);
        return this;
    }

    public CertificateProfile create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateProfileOperations()
                .create(resourceGroupName, accountName, profileName, this.innerModel(), context);
        return this;
    }

    CertificateProfileImpl(String name, com.azure.resourcemanager.codesigning.CodeSigningManager serviceManager) {
        this.innerObject = new CertificateProfileInner();
        this.serviceManager = serviceManager;
        this.profileName = name;
    }

    public CertificateProfileImpl update() {
        this.updateCertificateProfilePatch = new CertificateProfilePatch();
        return this;
    }

    public CertificateProfile apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateProfileOperations()
                .updateWithResponse(
                    resourceGroupName, accountName, profileName, updateCertificateProfilePatch, Context.NONE)
                .getValue();
        return this;
    }

    public CertificateProfile apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateProfileOperations()
                .updateWithResponse(resourceGroupName, accountName, profileName, updateCertificateProfilePatch, context)
                .getValue();
        return this;
    }

    CertificateProfileImpl(
        CertificateProfileInner innerObject, com.azure.resourcemanager.codesigning.CodeSigningManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "codeSigningAccounts");
        this.profileName = Utils.getValueFromIdByName(innerObject.id(), "certificateProfiles");
    }

    public CertificateProfile refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateProfileOperations()
                .getWithResponse(resourceGroupName, accountName, profileName, Context.NONE)
                .getValue();
        return this;
    }

    public CertificateProfile refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateProfileOperations()
                .getWithResponse(resourceGroupName, accountName, profileName, context)
                .getValue();
        return this;
    }

    public CertificateProfileImpl withProfileType(ProfileType profileType) {
        this.innerModel().withProfileType(profileType);
        return this;
    }

    public CertificateProfileImpl withRotationPolicy(RotationPolicy rotationPolicy) {
        this.innerModel().withRotationPolicy(rotationPolicy);
        return this;
    }

    public CertificateProfileImpl withCommonName(String commonName) {
        this.innerModel().withCommonName(commonName);
        return this;
    }

    public CertificateProfileImpl withOrganization(String organization) {
        this.innerModel().withOrganization(organization);
        return this;
    }

    public CertificateProfileImpl withOrganizationUnit(String organizationUnit) {
        this.innerModel().withOrganizationUnit(organizationUnit);
        return this;
    }

    public CertificateProfileImpl withIncludeStreetAddress(Boolean includeStreetAddress) {
        this.innerModel().withIncludeStreetAddress(includeStreetAddress);
        return this;
    }

    public CertificateProfileImpl withIncludeState(Boolean includeState) {
        this.innerModel().withIncludeState(includeState);
        return this;
    }

    public CertificateProfileImpl withIncludeCity(Boolean includeCity) {
        this.innerModel().withIncludeCity(includeCity);
        return this;
    }

    public CertificateProfileImpl withIncludePostalCode(Boolean includePostalCode) {
        this.innerModel().withIncludePostalCode(includePostalCode);
        return this;
    }

    public CertificateProfileImpl withIncludeCountry(Boolean includeCountry) {
        this.innerModel().withIncludeCountry(includeCountry);
        return this;
    }

    public CertificateProfileImpl withCertificates(List<Certificate> certificates) {
        this.updateCertificateProfilePatch.withCertificates(certificates);
        return this;
    }
}

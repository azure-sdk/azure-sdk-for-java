// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.codesigning.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.codesigning.fluent.models.CertificateProfilePatchProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Certificate Profile Patch Properties. */
@Fluent
public final class CertificateProfilePatch {
    /*
     * Properties of the certificate profile
     */
    @JsonProperty(value = "properties")
    private CertificateProfilePatchProperties innerProperties;

    /** Creates an instance of CertificateProfilePatch class. */
    public CertificateProfilePatch() {
    }

    /**
     * Get the innerProperties property: Properties of the certificate profile.
     *
     * @return the innerProperties value.
     */
    private CertificateProfilePatchProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the certificates property: The certificates property.
     *
     * @return the certificates value.
     */
    public List<Certificate> certificates() {
        return this.innerProperties() == null ? null : this.innerProperties().certificates();
    }

    /**
     * Set the certificates property: The certificates property.
     *
     * @param certificates the certificates value to set.
     * @return the CertificateProfilePatch object itself.
     */
    public CertificateProfilePatch withCertificates(List<Certificate> certificates) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CertificateProfilePatchProperties();
        }
        this.innerProperties().withCertificates(certificates);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

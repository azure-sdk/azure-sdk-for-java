// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.generated;

import com.azure.resourcemanager.hybridnetwork.models.ArtifactReplicationStrategy;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStorePropertiesFormat;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStorePropertiesFormatManagedResourceGroupConfiguration;
import com.azure.resourcemanager.hybridnetwork.models.ArtifactStoreType;
import com.azure.resourcemanager.hybridnetwork.models.BackingResourcePublicNetworkAccess;

/**
 * Samples for ArtifactStores CreateOrUpdate.
 */
public final class ArtifactStoresCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/hybridnetwork/resource-manager/Microsoft.HybridNetwork/stable/2024-04-15/examples/
     * ArtifactStoreCreateContainer.json
     */
    /**
     * Sample code: Create or update an artifact store of publisher resource with container registry.
     * 
     * @param manager Entry point to HybridNetworkManager.
     */
    public static void createOrUpdateAnArtifactStoreOfPublisherResourceWithContainerRegistry(
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager) {
        manager.artifactStores()
            .define("TestArtifactStore")
            .withRegion("eastus")
            .withExistingPublisher("rg", "TestPublisher")
            .withProperties(
                new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.AZURE_CONTAINER_REGISTRY)
                    .withBackingResourcePublicNetworkAccess(BackingResourcePublicNetworkAccess.DISABLED)
                    .withReplicationStrategy(ArtifactReplicationStrategy.SINGLE_REPLICATION)
                    .withManagedResourceGroupConfiguration(
                        new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("testRg")
                            .withLocation("eastus")))
            .create();
    }

    /*
     * x-ms-original-file:
     * specification/hybridnetwork/resource-manager/Microsoft.HybridNetwork/stable/2024-04-15/examples/
     * ArtifactStoreCreate.json
     */
    /**
     * Sample code: Create or update an artifact store of publisher resource.
     * 
     * @param manager Entry point to HybridNetworkManager.
     */
    public static void createOrUpdateAnArtifactStoreOfPublisherResource(
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager) {
        manager.artifactStores()
            .define("TestArtifactStore")
            .withRegion("eastus")
            .withExistingPublisher("rg", "TestPublisher")
            .withProperties(
                new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.AZURE_CONTAINER_REGISTRY)
                    .withReplicationStrategy(ArtifactReplicationStrategy.SINGLE_REPLICATION)
                    .withManagedResourceGroupConfiguration(
                        new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("testRg")
                            .withLocation("eastus")))
            .create();
    }

    /*
     * x-ms-original-file:
     * specification/hybridnetwork/resource-manager/Microsoft.HybridNetwork/stable/2024-04-15/examples/
     * ArtifactStoreCreateStorage.json
     */
    /**
     * Sample code: Create or update an artifact store of publisher resource with storage.
     * 
     * @param manager Entry point to HybridNetworkManager.
     */
    public static void createOrUpdateAnArtifactStoreOfPublisherResourceWithStorage(
        com.azure.resourcemanager.hybridnetwork.HybridNetworkManager manager) {
        manager.artifactStores()
            .define("TestArtifactStore")
            .withRegion("eastus")
            .withExistingPublisher("rg", "TestPublisher")
            .withProperties(new ArtifactStorePropertiesFormat().withStoreType(ArtifactStoreType.AZURE_STORAGE_ACCOUNT)
                .withBackingResourcePublicNetworkAccess(BackingResourcePublicNetworkAccess.ENABLED)
                .withReplicationStrategy(ArtifactReplicationStrategy.SINGLE_REPLICATION)
                .withManagedResourceGroupConfiguration(
                    new ArtifactStorePropertiesFormatManagedResourceGroupConfiguration().withName("testRg")
                        .withLocation("eastus")))
            .create();
    }
}

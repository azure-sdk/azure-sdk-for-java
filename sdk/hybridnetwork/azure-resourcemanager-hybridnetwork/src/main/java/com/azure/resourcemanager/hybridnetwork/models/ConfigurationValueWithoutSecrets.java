// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridnetwork.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ConfigurationValue with no secrets.
 */
@Fluent
public final class ConfigurationValueWithoutSecrets extends ConfigurationGroupValuePropertiesFormat {
    /*
     * The value which indicates if configuration values are secrets
     */
    private ConfigurationGroupValueConfigurationType configurationType = ConfigurationGroupValueConfigurationType.OPEN;

    /*
     * Name and value pairs that define the configuration value. It can be a well formed escaped JSON string.
     */
    private String configurationValue;

    /*
     * The location of the configuration group schema offering.
     */
    private String configurationGroupSchemaOfferingLocation;

    /*
     * The configuration group schema name.
     */
    private String configurationGroupSchemaName;

    /*
     * The scope of the publisher.
     */
    private PublisherScope publisherScope;

    /*
     * The publisher name for the configuration group schema.
     */
    private String publisherName;

    /*
     * The provisioning state of the site resource.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of ConfigurationValueWithoutSecrets class.
     */
    public ConfigurationValueWithoutSecrets() {
    }

    /**
     * Get the configurationType property: The value which indicates if configuration values are secrets.
     * 
     * @return the configurationType value.
     */
    @Override
    public ConfigurationGroupValueConfigurationType configurationType() {
        return this.configurationType;
    }

    /**
     * Get the configurationValue property: Name and value pairs that define the configuration value. It can be a well
     * formed escaped JSON string.
     * 
     * @return the configurationValue value.
     */
    public String configurationValue() {
        return this.configurationValue;
    }

    /**
     * Set the configurationValue property: Name and value pairs that define the configuration value. It can be a well
     * formed escaped JSON string.
     * 
     * @param configurationValue the configurationValue value to set.
     * @return the ConfigurationValueWithoutSecrets object itself.
     */
    public ConfigurationValueWithoutSecrets withConfigurationValue(String configurationValue) {
        this.configurationValue = configurationValue;
        return this;
    }

    /**
     * Get the configurationGroupSchemaOfferingLocation property: The location of the configuration group schema
     * offering.
     * 
     * @return the configurationGroupSchemaOfferingLocation value.
     */
    @Override
    public String configurationGroupSchemaOfferingLocation() {
        return this.configurationGroupSchemaOfferingLocation;
    }

    /**
     * Get the configurationGroupSchemaName property: The configuration group schema name.
     * 
     * @return the configurationGroupSchemaName value.
     */
    @Override
    public String configurationGroupSchemaName() {
        return this.configurationGroupSchemaName;
    }

    /**
     * Get the publisherScope property: The scope of the publisher.
     * 
     * @return the publisherScope value.
     */
    @Override
    public PublisherScope publisherScope() {
        return this.publisherScope;
    }

    /**
     * Get the publisherName property: The publisher name for the configuration group schema.
     * 
     * @return the publisherName value.
     */
    @Override
    public String publisherName() {
        return this.publisherName;
    }

    /**
     * Get the provisioningState property: The provisioning state of the site resource.
     * 
     * @return the provisioningState value.
     */
    @Override
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigurationValueWithoutSecrets withConfigurationGroupSchemaResourceReference(
        DeploymentResourceIdReference configurationGroupSchemaResourceReference) {
        super.withConfigurationGroupSchemaResourceReference(configurationGroupSchemaResourceReference);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (configurationGroupSchemaResourceReference() != null) {
            configurationGroupSchemaResourceReference().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("configurationGroupSchemaResourceReference",
            configurationGroupSchemaResourceReference());
        jsonWriter.writeStringField("configurationType",
            this.configurationType == null ? null : this.configurationType.toString());
        jsonWriter.writeStringField("configurationValue", this.configurationValue);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ConfigurationValueWithoutSecrets from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ConfigurationValueWithoutSecrets if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ConfigurationValueWithoutSecrets.
     */
    public static ConfigurationValueWithoutSecrets fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ConfigurationValueWithoutSecrets deserializedConfigurationValueWithoutSecrets
                = new ConfigurationValueWithoutSecrets();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("publisherName".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.publisherName = reader.getString();
                } else if ("publisherScope".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.publisherScope
                        = PublisherScope.fromString(reader.getString());
                } else if ("configurationGroupSchemaName".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.configurationGroupSchemaName = reader.getString();
                } else if ("configurationGroupSchemaOfferingLocation".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.configurationGroupSchemaOfferingLocation
                        = reader.getString();
                } else if ("configurationGroupSchemaResourceReference".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets
                        .withConfigurationGroupSchemaResourceReference(DeploymentResourceIdReference.fromJson(reader));
                } else if ("configurationType".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.configurationType
                        = ConfigurationGroupValueConfigurationType.fromString(reader.getString());
                } else if ("configurationValue".equals(fieldName)) {
                    deserializedConfigurationValueWithoutSecrets.configurationValue = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedConfigurationValueWithoutSecrets;
        });
    }
}

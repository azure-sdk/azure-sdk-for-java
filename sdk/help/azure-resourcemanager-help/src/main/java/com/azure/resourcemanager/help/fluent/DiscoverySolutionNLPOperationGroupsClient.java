// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.help.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.help.fluent.models.DiscoveryNlpResponseInner;
import com.azure.resourcemanager.help.models.DiscoveryNlpRequest;

/**
 * An instance of this class provides access to all the operations defined in DiscoverySolutionNLPOperationGroupsClient.
 */
public interface DiscoverySolutionNLPOperationGroupsClient {
    /**
     * Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
     * 
     * @param discoverSolutionRequest The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return successfully fetched list of solution metadata along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DiscoveryNlpResponseInner> discoverSolutionsWithResponse(DiscoveryNlpRequest discoverSolutionRequest,
        Context context);

    /**
     * Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary.
     * 
     * @param discoverSolutionRequest The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return successfully fetched list of solution metadata.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoveryNlpResponseInner discoverSolutions(DiscoveryNlpRequest discoverSolutionRequest);

    /**
     * Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary and
     * subscription.
     * 
     * @param discoverSolutionRequest The request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return successfully fetched list of solution metadata along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DiscoveryNlpResponseInner>
        discoverSolutionsBySubscriptionWithResponse(DiscoveryNlpRequest discoverSolutionRequest, Context context);

    /**
     * Search for relevant Azure Diagnostics, Solutions and Troubleshooters using a natural language issue summary and
     * subscription.
     * 
     * @param discoverSolutionRequest The request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return successfully fetched list of solution metadata.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DiscoveryNlpResponseInner discoverSolutionsBySubscription(DiscoveryNlpRequest discoverSolutionRequest);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.help.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Only for AutomatedStep type.
 */
@Immutable
public final class AutomatedCheckResult implements JsonSerializable<AutomatedCheckResult> {
    /*
     * Version for automated check result
     */
    private String version;

    /*
     * Status for automated check result
     */
    private String status;

    /*
     * Insight Article Content
     */
    private String result;

    /*
     * Type of Result.
     */
    private AutomatedCheckResultType type;

    /**
     * Creates an instance of AutomatedCheckResult class.
     */
    private AutomatedCheckResult() {
    }

    /**
     * Get the version property: Version for automated check result.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Get the status property: Status for automated check result.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the result property: Insight Article Content.
     * 
     * @return the result value.
     */
    public String result() {
        return this.result;
    }

    /**
     * Get the type property: Type of Result.
     * 
     * @return the type value.
     */
    public AutomatedCheckResultType type() {
        return this.type;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("version", this.version);
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("result", this.result);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutomatedCheckResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutomatedCheckResult if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutomatedCheckResult.
     */
    public static AutomatedCheckResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutomatedCheckResult deserializedAutomatedCheckResult = new AutomatedCheckResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("version".equals(fieldName)) {
                    deserializedAutomatedCheckResult.version = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedAutomatedCheckResult.status = reader.getString();
                } else if ("result".equals(fieldName)) {
                    deserializedAutomatedCheckResult.result = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedAutomatedCheckResult.type = AutomatedCheckResultType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutomatedCheckResult;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.help.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Status of diagnostic provisioning.
 */
public final class DiagnosticProvisioningState extends ExpandableStringEnum<DiagnosticProvisioningState> {
    /**
     * All Diagnostics in the Batch succeeded.
     */
    public static final DiagnosticProvisioningState SUCCEEDED = fromString("Succeeded");

    /**
     * Some Diagnostics are still running or failed.
     */
    public static final DiagnosticProvisioningState PARTIAL_COMPLETE = fromString("PartialComplete");

    /**
     * All Diagnostics failed to run.
     */
    public static final DiagnosticProvisioningState FAILED = fromString("Failed");

    /**
     * All Diagnostics are still running.
     */
    public static final DiagnosticProvisioningState RUNNING = fromString("Running");

    /**
     * When Diagnostic request gets canceled.
     */
    public static final DiagnosticProvisioningState CANCELED = fromString("Canceled");

    /**
     * Creates a new instance of DiagnosticProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public DiagnosticProvisioningState() {
    }

    /**
     * Creates or finds a DiagnosticProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding DiagnosticProvisioningState.
     */
    public static DiagnosticProvisioningState fromString(String name) {
        return fromString(name, DiagnosticProvisioningState.class);
    }

    /**
     * Gets known DiagnosticProvisioningState values.
     * 
     * @return known DiagnosticProvisioningState values.
     */
    public static Collection<DiagnosticProvisioningState> values() {
        return values(DiagnosticProvisioningState.class);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentscripts.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentscripts.fluent.models.DeploymentScriptInner;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentscripts.fluent.models.ScriptLogInner;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentscripts.fluent.models.ScriptLogsListInner;
import com.azure.resourcemanager.resourcesmicrosoftresourcesdeploymentscripts.models.DeploymentScriptUpdateParameter;

/**
 * An instance of this class provides access to all the operations defined in DeploymentScriptsClient.
 */
public interface DeploymentScriptsClient {
    /**
     * Creates a deployment script.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param deploymentScript Deployment script supplied to the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of deployment script object.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeploymentScriptInner>, DeploymentScriptInner> beginCreate(String resourceGroupName,
        String scriptName, DeploymentScriptInner deploymentScript);

    /**
     * Creates a deployment script.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param deploymentScript Deployment script supplied to the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of deployment script object.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DeploymentScriptInner>, DeploymentScriptInner> beginCreate(String resourceGroupName,
        String scriptName, DeploymentScriptInner deploymentScript, Context context);

    /**
     * Creates a deployment script.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param deploymentScript Deployment script supplied to the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeploymentScriptInner create(String resourceGroupName, String scriptName, DeploymentScriptInner deploymentScript);

    /**
     * Creates a deployment script.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param deploymentScript Deployment script supplied to the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeploymentScriptInner create(String resourceGroupName, String scriptName, DeploymentScriptInner deploymentScript,
        Context context);

    /**
     * Updates deployment script tags with specified values.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param deploymentScript Deployment script resource with the tags to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script object along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeploymentScriptInner> updateWithResponse(String resourceGroupName, String scriptName,
        DeploymentScriptUpdateParameter deploymentScript, Context context);

    /**
     * Updates deployment script tags with specified values.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeploymentScriptInner update(String resourceGroupName, String scriptName);

    /**
     * Gets a deployment script with a given name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a deployment script with a given name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DeploymentScriptInner> getByResourceGroupWithResponse(String resourceGroupName, String scriptName,
        Context context);

    /**
     * Gets a deployment script with a given name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a deployment script with a given name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DeploymentScriptInner getByResourceGroup(String resourceGroupName, String scriptName);

    /**
     * Deletes a deployment script. When operation completes, status code 200 returned without content.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String scriptName, Context context);

    /**
     * Deletes a deployment script. When operation completes, status code 200 returned without content.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String scriptName);

    /**
     * Lists all deployment scripts for a given subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of deployment scripts as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeploymentScriptInner> list();

    /**
     * Lists all deployment scripts for a given subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of deployment scripts as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeploymentScriptInner> list(Context context);

    /**
     * Gets deployment script logs for a given deployment script name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script logs for a given deployment script name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScriptLogsListInner> getLogsWithResponse(String resourceGroupName, String scriptName, Context context);

    /**
     * Gets deployment script logs for a given deployment script name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script logs for a given deployment script name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScriptLogsListInner getLogs(String resourceGroupName, String scriptName);

    /**
     * Gets deployment script logs for a given deployment script name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @param tail The number of lines to show from the tail of the deployment script log. Valid value is a positive
     * number up to 1000. If 'tail' is not provided, all available logs are shown up to container instance log capacity
     * of 4mb.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script logs for a given deployment script name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScriptLogInner> getLogsDefaultWithResponse(String resourceGroupName, String scriptName, Integer tail,
        Context context);

    /**
     * Gets deployment script logs for a given deployment script name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scriptName Name of the deployment script.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return deployment script logs for a given deployment script name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScriptLogInner getLogsDefault(String resourceGroupName, String scriptName);

    /**
     * Lists deployments scripts.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of deployment scripts as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeploymentScriptInner> listByResourceGroup(String resourceGroupName);

    /**
     * Lists deployments scripts.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of deployment scripts as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DeploymentScriptInner> listByResourceGroup(String resourceGroupName, Context context);
}

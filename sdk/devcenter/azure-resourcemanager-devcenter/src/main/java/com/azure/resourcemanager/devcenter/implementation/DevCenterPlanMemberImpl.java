// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterPlanMemberInner;
import com.azure.resourcemanager.devcenter.models.DevCenterPlanMember;
import com.azure.resourcemanager.devcenter.models.PlanMemberSyncStatus;
import com.azure.resourcemanager.devcenter.models.PlanMemberType;
import com.azure.resourcemanager.devcenter.models.PlanMemberUpdate;
import com.azure.resourcemanager.devcenter.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class DevCenterPlanMemberImpl
    implements DevCenterPlanMember, DevCenterPlanMember.Definition, DevCenterPlanMember.Update {
    private DevCenterPlanMemberInner innerObject;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String memberId() {
        return this.innerModel().memberId();
    }

    public PlanMemberType memberType() {
        return this.innerModel().memberType();
    }

    public PlanMemberSyncStatus syncStatus() {
        return this.innerModel().syncStatus();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String tier() {
        return this.innerModel().tier();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DevCenterPlanMemberInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String planName;

    private String memberName;

    private PlanMemberUpdate updateBody;

    public DevCenterPlanMemberImpl withExistingPlan(String resourceGroupName, String planName) {
        this.resourceGroupName = resourceGroupName;
        this.planName = planName;
        return this;
    }

    public DevCenterPlanMember create() {
        this.innerObject = serviceManager.serviceClient()
            .getPlanMembers()
            .createOrUpdate(resourceGroupName, planName, memberName, this.innerModel(), Context.NONE);
        return this;
    }

    public DevCenterPlanMember create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPlanMembers()
            .createOrUpdate(resourceGroupName, planName, memberName, this.innerModel(), context);
        return this;
    }

    DevCenterPlanMemberImpl(String name, com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerObject = new DevCenterPlanMemberInner();
        this.serviceManager = serviceManager;
        this.memberName = name;
    }

    public DevCenterPlanMemberImpl update() {
        this.updateBody = new PlanMemberUpdate();
        return this;
    }

    public DevCenterPlanMember apply() {
        this.innerObject = serviceManager.serviceClient()
            .getPlanMembers()
            .update(resourceGroupName, planName, memberName, updateBody, Context.NONE);
        return this;
    }

    public DevCenterPlanMember apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPlanMembers()
            .update(resourceGroupName, planName, memberName, updateBody, context);
        return this;
    }

    DevCenterPlanMemberImpl(DevCenterPlanMemberInner innerObject,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.planName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "plans");
        this.memberName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "members");
    }

    public DevCenterPlanMember refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getPlanMembers()
            .getWithResponse(resourceGroupName, planName, memberName, Context.NONE)
            .getValue();
        return this;
    }

    public DevCenterPlanMember refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPlanMembers()
            .getWithResponse(resourceGroupName, planName, memberName, context)
            .getValue();
        return this;
    }

    public DevCenterPlanMemberImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public DevCenterPlanMemberImpl withMemberId(String memberId) {
        this.innerModel().withMemberId(memberId);
        return this;
    }

    public DevCenterPlanMemberImpl withMemberType(PlanMemberType memberType) {
        this.innerModel().withMemberType(memberType);
        return this;
    }

    public DevCenterPlanMemberImpl withTier(String tier) {
        if (isInCreateMode()) {
            this.innerModel().withTier(tier);
            return this;
        } else {
            this.updateBody.withTier(tier);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

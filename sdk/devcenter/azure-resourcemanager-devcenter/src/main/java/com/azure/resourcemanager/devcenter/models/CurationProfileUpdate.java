// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.devcenter.fluent.models.CurationProfileUpdateProperties;
import java.io.IOException;
import java.util.List;

/**
 * The curation profile properties for partial update. Properties not provided in the update request will not be
 * changed.
 */
@Fluent
public final class CurationProfileUpdate implements JsonSerializable<CurationProfileUpdate> {
    /*
     * Properties of an curation profile to be updated.
     */
    private CurationProfileUpdateProperties innerProperties;

    /**
     * Creates an instance of CurationProfileUpdate class.
     */
    public CurationProfileUpdate() {
    }

    /**
     * Get the innerProperties property: Properties of an curation profile to be updated.
     * 
     * @return the innerProperties value.
     */
    private CurationProfileUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the resourcePolicies property: Resource policies that are a part of this curation profile.
     * 
     * @return the resourcePolicies value.
     */
    public List<ResourcePolicy> resourcePolicies() {
        return this.innerProperties() == null ? null : this.innerProperties().resourcePolicies();
    }

    /**
     * Set the resourcePolicies property: Resource policies that are a part of this curation profile.
     * 
     * @param resourcePolicies the resourcePolicies value to set.
     * @return the CurationProfileUpdate object itself.
     */
    public CurationProfileUpdate withResourcePolicies(List<ResourcePolicy> resourcePolicies) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CurationProfileUpdateProperties();
        }
        this.innerProperties().withResourcePolicies(resourcePolicies);
        return this;
    }

    /**
     * Get the scopes property: Resources that have access to the shared resources that are a part of this curation
     * profile.
     * 
     * @return the scopes value.
     */
    public List<String> scopes() {
        return this.innerProperties() == null ? null : this.innerProperties().scopes();
    }

    /**
     * Set the scopes property: Resources that have access to the shared resources that are a part of this curation
     * profile.
     * 
     * @param scopes the scopes value to set.
     * @return the CurationProfileUpdate object itself.
     */
    public CurationProfileUpdate withScopes(List<String> scopes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CurationProfileUpdateProperties();
        }
        this.innerProperties().withScopes(scopes);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CurationProfileUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CurationProfileUpdate if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CurationProfileUpdate.
     */
    public static CurationProfileUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CurationProfileUpdate deserializedCurationProfileUpdate = new CurationProfileUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedCurationProfileUpdate.innerProperties
                        = CurationProfileUpdateProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCurationProfileUpdate;
        });
    }
}

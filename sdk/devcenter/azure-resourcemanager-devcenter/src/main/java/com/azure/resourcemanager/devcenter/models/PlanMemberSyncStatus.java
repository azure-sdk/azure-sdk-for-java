// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * The sync status of the plan member.
 */
@Fluent
public final class PlanMemberSyncStatus implements JsonSerializable<PlanMemberSyncStatus> {
    /*
     * The synchronization state of the plan member.
     */
    private PlanMemberSyncState syncState;

    /*
     * Error response describing why the sync failed.
     */
    private ManagementError lastSyncError;

    /*
     * When the plan member was last synced.
     */
    private OffsetDateTime lastSyncTime;

    /**
     * Creates an instance of PlanMemberSyncStatus class.
     */
    public PlanMemberSyncStatus() {
    }

    /**
     * Get the syncState property: The synchronization state of the plan member.
     * 
     * @return the syncState value.
     */
    public PlanMemberSyncState syncState() {
        return this.syncState;
    }

    /**
     * Get the lastSyncError property: Error response describing why the sync failed.
     * 
     * @return the lastSyncError value.
     */
    public ManagementError lastSyncError() {
        return this.lastSyncError;
    }

    /**
     * Set the lastSyncError property: Error response describing why the sync failed.
     * 
     * @param lastSyncError the lastSyncError value to set.
     * @return the PlanMemberSyncStatus object itself.
     */
    public PlanMemberSyncStatus withLastSyncError(ManagementError lastSyncError) {
        this.lastSyncError = lastSyncError;
        return this;
    }

    /**
     * Get the lastSyncTime property: When the plan member was last synced.
     * 
     * @return the lastSyncTime value.
     */
    public OffsetDateTime lastSyncTime() {
        return this.lastSyncTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("lastSyncError", this.lastSyncError);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PlanMemberSyncStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PlanMemberSyncStatus if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PlanMemberSyncStatus.
     */
    public static PlanMemberSyncStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PlanMemberSyncStatus deserializedPlanMemberSyncStatus = new PlanMemberSyncStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("syncState".equals(fieldName)) {
                    deserializedPlanMemberSyncStatus.syncState = PlanMemberSyncState.fromString(reader.getString());
                } else if ("lastSyncError".equals(fieldName)) {
                    deserializedPlanMemberSyncStatus.lastSyncError = ManagementError.fromJson(reader);
                } else if ("lastSyncTime".equals(fieldName)) {
                    deserializedPlanMemberSyncStatus.lastSyncTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPlanMemberSyncStatus;
        });
    }
}

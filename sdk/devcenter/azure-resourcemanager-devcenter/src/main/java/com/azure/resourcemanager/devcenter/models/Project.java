// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectInner;
import java.util.Map;

/**
 * An immutable client-side representation of Project.
 */
public interface Project {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: Managed identity properties.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the devCenterUri property: The URI of the Dev Center resource this project is associated with.
     * 
     * @return the devCenterUri value.
     */
    String devCenterUri();

    /**
     * Gets the devCenterId property: Resource Id of an associated DevCenter.
     * 
     * @return the devCenterId value.
     */
    String devCenterId();

    /**
     * Gets the description property: Description of the project.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the maxDevBoxesPerUser property: When specified, limits the maximum number of Dev Boxes a single user can
     * create across all pools in the project. This will have no effect on existing Dev Boxes when reduced.
     * 
     * @return the maxDevBoxesPerUser value.
     */
    Integer maxDevBoxesPerUser();

    /**
     * Gets the displayName property: The display name of the project.
     * 
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the catalogSettings property: Settings to be used when associating a project with a catalog.
     * 
     * @return the catalogSettings value.
     */
    ProjectCatalogSettings catalogSettings();

    /**
     * Gets the customizationSettings property: Settings to be used for customizations.
     * 
     * @return the customizationSettings value.
     */
    ProjectCustomizationSettings customizationSettings();

    /**
     * Gets the devBoxAutoDeleteSettings property: Dev Box Auto Delete settings.
     * 
     * @return the devBoxAutoDeleteSettings value.
     */
    DevBoxAutoDeleteSettings devBoxAutoDeleteSettings();

    /**
     * Gets the azureAiServicesSettings property: Indicates whether Azure AI services are enabled for a project.
     * 
     * @return the azureAiServicesSettings value.
     */
    AzureAiServicesSettings azureAiServicesSettings();

    /**
     * Gets the serverlessGpuSessionsSettings property: Settings to be used for serverless GPU.
     * 
     * @return the serverlessGpuSessionsSettings value.
     */
    ServerlessGpuSessionsSettings serverlessGpuSessionsSettings();

    /**
     * Gets the workspaceStorageSettings property: Settings to be used for workspace storage.
     * 
     * @return the workspaceStorageSettings value.
     */
    WorkspaceStorageSettings workspaceStorageSettings();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.devcenter.fluent.models.ProjectInner object.
     * 
     * @return the inner object.
     */
    ProjectInner innerModel();

    /**
     * The entirety of the Project definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The Project definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Project definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the Project definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the Project definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the Project definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithIdentity, DefinitionStages.WithDevCenterId,
            DefinitionStages.WithDescription, DefinitionStages.WithMaxDevBoxesPerUser, DefinitionStages.WithDisplayName,
            DefinitionStages.WithCatalogSettings, DefinitionStages.WithCustomizationSettings,
            DefinitionStages.WithDevBoxAutoDeleteSettings, DefinitionStages.WithAzureAiServicesSettings,
            DefinitionStages.WithServerlessGpuSessionsSettings, DefinitionStages.WithWorkspaceStorageSettings {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Project create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Project create(Context context);
        }

        /**
         * The stage of the Project definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the Project definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed identity properties.
             * 
             * @param identity Managed identity properties.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the Project definition allowing to specify devCenterId.
         */
        interface WithDevCenterId {
            /**
             * Specifies the devCenterId property: Resource Id of an associated DevCenter.
             * 
             * @param devCenterId Resource Id of an associated DevCenter.
             * @return the next definition stage.
             */
            WithCreate withDevCenterId(String devCenterId);
        }

        /**
         * The stage of the Project definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: Description of the project..
             * 
             * @param description Description of the project.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the Project definition allowing to specify maxDevBoxesPerUser.
         */
        interface WithMaxDevBoxesPerUser {
            /**
             * Specifies the maxDevBoxesPerUser property: When specified, limits the maximum number of Dev Boxes a
             * single user can create across all pools in the project. This will have no effect on existing Dev Boxes
             * when reduced..
             * 
             * @param maxDevBoxesPerUser When specified, limits the maximum number of Dev Boxes a single user can create
             * across all pools in the project. This will have no effect on existing Dev Boxes when reduced.
             * @return the next definition stage.
             */
            WithCreate withMaxDevBoxesPerUser(Integer maxDevBoxesPerUser);
        }

        /**
         * The stage of the Project definition allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the project..
             * 
             * @param displayName The display name of the project.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }

        /**
         * The stage of the Project definition allowing to specify catalogSettings.
         */
        interface WithCatalogSettings {
            /**
             * Specifies the catalogSettings property: Settings to be used when associating a project with a catalog..
             * 
             * @param catalogSettings Settings to be used when associating a project with a catalog.
             * @return the next definition stage.
             */
            WithCreate withCatalogSettings(ProjectCatalogSettings catalogSettings);
        }

        /**
         * The stage of the Project definition allowing to specify customizationSettings.
         */
        interface WithCustomizationSettings {
            /**
             * Specifies the customizationSettings property: Settings to be used for customizations..
             * 
             * @param customizationSettings Settings to be used for customizations.
             * @return the next definition stage.
             */
            WithCreate withCustomizationSettings(ProjectCustomizationSettings customizationSettings);
        }

        /**
         * The stage of the Project definition allowing to specify devBoxAutoDeleteSettings.
         */
        interface WithDevBoxAutoDeleteSettings {
            /**
             * Specifies the devBoxAutoDeleteSettings property: Dev Box Auto Delete settings..
             * 
             * @param devBoxAutoDeleteSettings Dev Box Auto Delete settings.
             * @return the next definition stage.
             */
            WithCreate withDevBoxAutoDeleteSettings(DevBoxAutoDeleteSettings devBoxAutoDeleteSettings);
        }

        /**
         * The stage of the Project definition allowing to specify azureAiServicesSettings.
         */
        interface WithAzureAiServicesSettings {
            /**
             * Specifies the azureAiServicesSettings property: Indicates whether Azure AI services are enabled for a
             * project..
             * 
             * @param azureAiServicesSettings Indicates whether Azure AI services are enabled for a project.
             * @return the next definition stage.
             */
            WithCreate withAzureAiServicesSettings(AzureAiServicesSettings azureAiServicesSettings);
        }

        /**
         * The stage of the Project definition allowing to specify serverlessGpuSessionsSettings.
         */
        interface WithServerlessGpuSessionsSettings {
            /**
             * Specifies the serverlessGpuSessionsSettings property: Settings to be used for serverless GPU..
             * 
             * @param serverlessGpuSessionsSettings Settings to be used for serverless GPU.
             * @return the next definition stage.
             */
            WithCreate withServerlessGpuSessionsSettings(ServerlessGpuSessionsSettings serverlessGpuSessionsSettings);
        }

        /**
         * The stage of the Project definition allowing to specify workspaceStorageSettings.
         */
        interface WithWorkspaceStorageSettings {
            /**
             * Specifies the workspaceStorageSettings property: Settings to be used for workspace storage..
             * 
             * @param workspaceStorageSettings Settings to be used for workspace storage.
             * @return the next definition stage.
             */
            WithCreate withWorkspaceStorageSettings(WorkspaceStorageSettings workspaceStorageSettings);
        }
    }

    /**
     * Begins update for the Project resource.
     * 
     * @return the stage of resource update.
     */
    Project.Update update();

    /**
     * The template for Project update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithDevCenterId,
        UpdateStages.WithDescription, UpdateStages.WithMaxDevBoxesPerUser, UpdateStages.WithDisplayName,
        UpdateStages.WithCatalogSettings, UpdateStages.WithCustomizationSettings,
        UpdateStages.WithDevBoxAutoDeleteSettings, UpdateStages.WithAzureAiServicesSettings,
        UpdateStages.WithServerlessGpuSessionsSettings, UpdateStages.WithWorkspaceStorageSettings {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        Project apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Project apply(Context context);
    }

    /**
     * The Project update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the Project update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the Project update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed identity properties.
             * 
             * @param identity Managed identity properties.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the Project update allowing to specify devCenterId.
         */
        interface WithDevCenterId {
            /**
             * Specifies the devCenterId property: Resource Id of an associated DevCenter.
             * 
             * @param devCenterId Resource Id of an associated DevCenter.
             * @return the next definition stage.
             */
            Update withDevCenterId(String devCenterId);
        }

        /**
         * The stage of the Project update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: Description of the project..
             * 
             * @param description Description of the project.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the Project update allowing to specify maxDevBoxesPerUser.
         */
        interface WithMaxDevBoxesPerUser {
            /**
             * Specifies the maxDevBoxesPerUser property: When specified, limits the maximum number of Dev Boxes a
             * single user can create across all pools in the project. This will have no effect on existing Dev Boxes
             * when reduced..
             * 
             * @param maxDevBoxesPerUser When specified, limits the maximum number of Dev Boxes a single user can create
             * across all pools in the project. This will have no effect on existing Dev Boxes when reduced.
             * @return the next definition stage.
             */
            Update withMaxDevBoxesPerUser(Integer maxDevBoxesPerUser);
        }

        /**
         * The stage of the Project update allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the project..
             * 
             * @param displayName The display name of the project.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }

        /**
         * The stage of the Project update allowing to specify catalogSettings.
         */
        interface WithCatalogSettings {
            /**
             * Specifies the catalogSettings property: Settings to be used when associating a project with a catalog..
             * 
             * @param catalogSettings Settings to be used when associating a project with a catalog.
             * @return the next definition stage.
             */
            Update withCatalogSettings(ProjectCatalogSettings catalogSettings);
        }

        /**
         * The stage of the Project update allowing to specify customizationSettings.
         */
        interface WithCustomizationSettings {
            /**
             * Specifies the customizationSettings property: Settings to be used for customizations..
             * 
             * @param customizationSettings Settings to be used for customizations.
             * @return the next definition stage.
             */
            Update withCustomizationSettings(ProjectCustomizationSettings customizationSettings);
        }

        /**
         * The stage of the Project update allowing to specify devBoxAutoDeleteSettings.
         */
        interface WithDevBoxAutoDeleteSettings {
            /**
             * Specifies the devBoxAutoDeleteSettings property: Dev Box Auto Delete settings..
             * 
             * @param devBoxAutoDeleteSettings Dev Box Auto Delete settings.
             * @return the next definition stage.
             */
            Update withDevBoxAutoDeleteSettings(DevBoxAutoDeleteSettings devBoxAutoDeleteSettings);
        }

        /**
         * The stage of the Project update allowing to specify azureAiServicesSettings.
         */
        interface WithAzureAiServicesSettings {
            /**
             * Specifies the azureAiServicesSettings property: Indicates whether Azure AI services are enabled for a
             * project..
             * 
             * @param azureAiServicesSettings Indicates whether Azure AI services are enabled for a project.
             * @return the next definition stage.
             */
            Update withAzureAiServicesSettings(AzureAiServicesSettings azureAiServicesSettings);
        }

        /**
         * The stage of the Project update allowing to specify serverlessGpuSessionsSettings.
         */
        interface WithServerlessGpuSessionsSettings {
            /**
             * Specifies the serverlessGpuSessionsSettings property: Settings to be used for serverless GPU..
             * 
             * @param serverlessGpuSessionsSettings Settings to be used for serverless GPU.
             * @return the next definition stage.
             */
            Update withServerlessGpuSessionsSettings(ServerlessGpuSessionsSettings serverlessGpuSessionsSettings);
        }

        /**
         * The stage of the Project update allowing to specify workspaceStorageSettings.
         */
        interface WithWorkspaceStorageSettings {
            /**
             * Specifies the workspaceStorageSettings property: Settings to be used for workspace storage..
             * 
             * @param workspaceStorageSettings Settings to be used for workspace storage.
             * @return the next definition stage.
             */
            Update withWorkspaceStorageSettings(WorkspaceStorageSettings workspaceStorageSettings);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    Project refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Project refresh(Context context);

    /**
     * Gets applicable inherited settings for this project.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return applicable inherited settings for this project along with {@link Response}.
     */
    Response<InheritedSettingsForProject> getInheritedSettingsWithResponse(Context context);

    /**
     * Gets applicable inherited settings for this project.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return applicable inherited settings for this project.
     */
    InheritedSettingsForProject getInheritedSettings();
}

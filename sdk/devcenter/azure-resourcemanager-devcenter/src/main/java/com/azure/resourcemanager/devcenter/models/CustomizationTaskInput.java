// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Input for a Task.
 */
@Immutable
public final class CustomizationTaskInput implements JsonSerializable<CustomizationTaskInput> {
    /*
     * Description of the input.
     */
    private String description;

    /*
     * Type of the input.
     */
    private CustomizationTaskInputType type;

    /*
     * Whether or not the input is required.
     */
    private Boolean required;

    /**
     * Creates an instance of CustomizationTaskInput class.
     */
    public CustomizationTaskInput() {
    }

    /**
     * Get the description property: Description of the input.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the type property: Type of the input.
     * 
     * @return the type value.
     */
    public CustomizationTaskInputType type() {
        return this.type;
    }

    /**
     * Get the required property: Whether or not the input is required.
     * 
     * @return the required value.
     */
    public Boolean required() {
        return this.required;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CustomizationTaskInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CustomizationTaskInput if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CustomizationTaskInput.
     */
    public static CustomizationTaskInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CustomizationTaskInput deserializedCustomizationTaskInput = new CustomizationTaskInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("description".equals(fieldName)) {
                    deserializedCustomizationTaskInput.description = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedCustomizationTaskInput.type = CustomizationTaskInputType.fromString(reader.getString());
                } else if ("required".equals(fieldName)) {
                    deserializedCustomizationTaskInput.required = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCustomizationTaskInput;
        });
    }
}

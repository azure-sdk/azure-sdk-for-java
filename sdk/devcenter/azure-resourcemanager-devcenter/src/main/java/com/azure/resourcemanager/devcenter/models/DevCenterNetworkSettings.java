// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Network settings for the Dev Center.
 */
@Fluent
public final class DevCenterNetworkSettings implements JsonSerializable<DevCenterNetworkSettings> {
    /*
     * Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
     */
    private MicrosoftHostedNetworkEnableStatus microsoftHostedNetworkEnableStatus;

    /**
     * Creates an instance of DevCenterNetworkSettings class.
     */
    public DevCenterNetworkSettings() {
    }

    /**
     * Get the microsoftHostedNetworkEnableStatus property: Indicates whether pools in this Dev Center can use Microsoft
     * Hosted Networks. Defaults to Enabled if not set.
     * 
     * @return the microsoftHostedNetworkEnableStatus value.
     */
    public MicrosoftHostedNetworkEnableStatus microsoftHostedNetworkEnableStatus() {
        return this.microsoftHostedNetworkEnableStatus;
    }

    /**
     * Set the microsoftHostedNetworkEnableStatus property: Indicates whether pools in this Dev Center can use Microsoft
     * Hosted Networks. Defaults to Enabled if not set.
     * 
     * @param microsoftHostedNetworkEnableStatus the microsoftHostedNetworkEnableStatus value to set.
     * @return the DevCenterNetworkSettings object itself.
     */
    public DevCenterNetworkSettings
        withMicrosoftHostedNetworkEnableStatus(MicrosoftHostedNetworkEnableStatus microsoftHostedNetworkEnableStatus) {
        this.microsoftHostedNetworkEnableStatus = microsoftHostedNetworkEnableStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("microsoftHostedNetworkEnableStatus",
            this.microsoftHostedNetworkEnableStatus == null
                ? null
                : this.microsoftHostedNetworkEnableStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DevCenterNetworkSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DevCenterNetworkSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DevCenterNetworkSettings.
     */
    public static DevCenterNetworkSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DevCenterNetworkSettings deserializedDevCenterNetworkSettings = new DevCenterNetworkSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("microsoftHostedNetworkEnableStatus".equals(fieldName)) {
                    deserializedDevCenterNetworkSettings.microsoftHostedNetworkEnableStatus
                        = MicrosoftHostedNetworkEnableStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDevCenterNetworkSettings;
        });
    }
}

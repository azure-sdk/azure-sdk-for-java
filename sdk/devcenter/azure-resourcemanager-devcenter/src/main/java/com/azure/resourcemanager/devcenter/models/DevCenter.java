// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of DevCenter.
 */
public interface DevCenter {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: Managed identity properties.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the devCenterUri property: The URI of the Dev Center.
     * 
     * @return the devCenterUri value.
     */
    String devCenterUri();

    /**
     * Gets the planId property: Resource Id of an associated Plan.
     * 
     * @return the planId value.
     */
    String planId();

    /**
     * Gets the encryption property: Encryption settings to be used for server-side encryption for proprietary content
     * (such as catalogs, logs, customizations).
     * 
     * @return the encryption value.
     */
    Encryption encryption();

    /**
     * Gets the displayName property: The display name of the devcenter.
     * 
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the projectCatalogSettings property: Dev Center settings to be used when associating a project with a
     * catalog.
     * 
     * @return the projectCatalogSettings value.
     */
    DevCenterProjectCatalogSettings projectCatalogSettings();

    /**
     * Gets the networkSettings property: Network settings that will be enforced on network resources associated with
     * the Dev Center.
     * 
     * @return the networkSettings value.
     */
    DevCenterNetworkSettings networkSettings();

    /**
     * Gets the devBoxProvisioningSettings property: Settings to be used in the provisioning of all Dev Boxes that
     * belong to this dev center.
     * 
     * @return the devBoxProvisioningSettings value.
     */
    DevBoxProvisioningSettings devBoxProvisioningSettings();

    /**
     * Gets the restrictedResourceTypes property: Indicates the resource types that are restricted from being accessed
     * by a project unless allowed by a project policy.
     * 
     * @return the restrictedResourceTypes value.
     */
    List<DevCenterResourceType> restrictedResourceTypes();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.devcenter.fluent.models.DevCenterInner object.
     * 
     * @return the inner object.
     */
    DevCenterInner innerModel();

    /**
     * The entirety of the DevCenter definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The DevCenter definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DevCenter definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the DevCenter definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the DevCenter definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the DevCenter definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithIdentity,
            DefinitionStages.WithPlanId, DefinitionStages.WithEncryption, DefinitionStages.WithDisplayName,
            DefinitionStages.WithProjectCatalogSettings, DefinitionStages.WithNetworkSettings,
            DefinitionStages.WithDevBoxProvisioningSettings, DefinitionStages.WithRestrictedResourceTypes {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DevCenter create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DevCenter create(Context context);
        }

        /**
         * The stage of the DevCenter definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the DevCenter definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed identity properties.
             * 
             * @param identity Managed identity properties.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the DevCenter definition allowing to specify planId.
         */
        interface WithPlanId {
            /**
             * Specifies the planId property: Resource Id of an associated Plan.
             * 
             * @param planId Resource Id of an associated Plan.
             * @return the next definition stage.
             */
            WithCreate withPlanId(String planId);
        }

        /**
         * The stage of the DevCenter definition allowing to specify encryption.
         */
        interface WithEncryption {
            /**
             * Specifies the encryption property: Encryption settings to be used for server-side encryption for
             * proprietary content (such as catalogs, logs, customizations)..
             * 
             * @param encryption Encryption settings to be used for server-side encryption for proprietary content (such
             * as catalogs, logs, customizations).
             * @return the next definition stage.
             */
            WithCreate withEncryption(Encryption encryption);
        }

        /**
         * The stage of the DevCenter definition allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the devcenter..
             * 
             * @param displayName The display name of the devcenter.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }

        /**
         * The stage of the DevCenter definition allowing to specify projectCatalogSettings.
         */
        interface WithProjectCatalogSettings {
            /**
             * Specifies the projectCatalogSettings property: Dev Center settings to be used when associating a project
             * with a catalog..
             * 
             * @param projectCatalogSettings Dev Center settings to be used when associating a project with a catalog.
             * @return the next definition stage.
             */
            WithCreate withProjectCatalogSettings(DevCenterProjectCatalogSettings projectCatalogSettings);
        }

        /**
         * The stage of the DevCenter definition allowing to specify networkSettings.
         */
        interface WithNetworkSettings {
            /**
             * Specifies the networkSettings property: Network settings that will be enforced on network resources
             * associated with the Dev Center..
             * 
             * @param networkSettings Network settings that will be enforced on network resources associated with the
             * Dev Center.
             * @return the next definition stage.
             */
            WithCreate withNetworkSettings(DevCenterNetworkSettings networkSettings);
        }

        /**
         * The stage of the DevCenter definition allowing to specify devBoxProvisioningSettings.
         */
        interface WithDevBoxProvisioningSettings {
            /**
             * Specifies the devBoxProvisioningSettings property: Settings to be used in the provisioning of all Dev
             * Boxes that belong to this dev center..
             * 
             * @param devBoxProvisioningSettings Settings to be used in the provisioning of all Dev Boxes that belong to
             * this dev center.
             * @return the next definition stage.
             */
            WithCreate withDevBoxProvisioningSettings(DevBoxProvisioningSettings devBoxProvisioningSettings);
        }

        /**
         * The stage of the DevCenter definition allowing to specify restrictedResourceTypes.
         */
        interface WithRestrictedResourceTypes {
            /**
             * Specifies the restrictedResourceTypes property: Indicates the resource types that are restricted from
             * being accessed by a project unless allowed by a project policy..
             * 
             * @param restrictedResourceTypes Indicates the resource types that are restricted from being accessed by a
             * project unless allowed by a project policy.
             * @return the next definition stage.
             */
            WithCreate withRestrictedResourceTypes(List<DevCenterResourceType> restrictedResourceTypes);
        }
    }

    /**
     * Begins update for the DevCenter resource.
     * 
     * @return the stage of resource update.
     */
    DevCenter.Update update();

    /**
     * The template for DevCenter update.
     */
    interface Update
        extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithPlanId, UpdateStages.WithEncryption,
        UpdateStages.WithDisplayName, UpdateStages.WithProjectCatalogSettings, UpdateStages.WithNetworkSettings,
        UpdateStages.WithDevBoxProvisioningSettings, UpdateStages.WithRestrictedResourceTypes {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        DevCenter apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DevCenter apply(Context context);
    }

    /**
     * The DevCenter update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the DevCenter update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the DevCenter update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed identity properties.
             * 
             * @param identity Managed identity properties.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the DevCenter update allowing to specify planId.
         */
        interface WithPlanId {
            /**
             * Specifies the planId property: Resource Id of an associated Plan.
             * 
             * @param planId Resource Id of an associated Plan.
             * @return the next definition stage.
             */
            Update withPlanId(String planId);
        }

        /**
         * The stage of the DevCenter update allowing to specify encryption.
         */
        interface WithEncryption {
            /**
             * Specifies the encryption property: Encryption settings to be used for server-side encryption for
             * proprietary content (such as catalogs, logs, customizations)..
             * 
             * @param encryption Encryption settings to be used for server-side encryption for proprietary content (such
             * as catalogs, logs, customizations).
             * @return the next definition stage.
             */
            Update withEncryption(Encryption encryption);
        }

        /**
         * The stage of the DevCenter update allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The display name of the devcenter..
             * 
             * @param displayName The display name of the devcenter.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }

        /**
         * The stage of the DevCenter update allowing to specify projectCatalogSettings.
         */
        interface WithProjectCatalogSettings {
            /**
             * Specifies the projectCatalogSettings property: Dev Center settings to be used when associating a project
             * with a catalog..
             * 
             * @param projectCatalogSettings Dev Center settings to be used when associating a project with a catalog.
             * @return the next definition stage.
             */
            Update withProjectCatalogSettings(DevCenterProjectCatalogSettings projectCatalogSettings);
        }

        /**
         * The stage of the DevCenter update allowing to specify networkSettings.
         */
        interface WithNetworkSettings {
            /**
             * Specifies the networkSettings property: Network settings that will be enforced on network resources
             * associated with the Dev Center..
             * 
             * @param networkSettings Network settings that will be enforced on network resources associated with the
             * Dev Center.
             * @return the next definition stage.
             */
            Update withNetworkSettings(DevCenterNetworkSettings networkSettings);
        }

        /**
         * The stage of the DevCenter update allowing to specify devBoxProvisioningSettings.
         */
        interface WithDevBoxProvisioningSettings {
            /**
             * Specifies the devBoxProvisioningSettings property: Settings to be used in the provisioning of all Dev
             * Boxes that belong to this dev center..
             * 
             * @param devBoxProvisioningSettings Settings to be used in the provisioning of all Dev Boxes that belong to
             * this dev center.
             * @return the next definition stage.
             */
            Update withDevBoxProvisioningSettings(DevBoxProvisioningSettings devBoxProvisioningSettings);
        }

        /**
         * The stage of the DevCenter update allowing to specify restrictedResourceTypes.
         */
        interface WithRestrictedResourceTypes {
            /**
             * Specifies the restrictedResourceTypes property: Indicates the resource types that are restricted from
             * being accessed by a project unless allowed by a project policy..
             * 
             * @param restrictedResourceTypes Indicates the resource types that are restricted from being accessed by a
             * project unless allowed by a project policy.
             * @return the next definition stage.
             */
            Update withRestrictedResourceTypes(List<DevCenterResourceType> restrictedResourceTypes);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DevCenter refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DevCenter refresh(Context context);
}

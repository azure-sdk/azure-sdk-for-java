// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devcenter.fluent.DevCenterCatalogImageDefinitionBuildsClient;
import com.azure.resourcemanager.devcenter.fluent.models.ImageDefinitionBuildInner;
import com.azure.resourcemanager.devcenter.models.DevCenterCatalogImageDefinitionBuilds;
import com.azure.resourcemanager.devcenter.models.ImageDefinitionBuild;

public final class DevCenterCatalogImageDefinitionBuildsImpl implements DevCenterCatalogImageDefinitionBuilds {
    private static final ClientLogger LOGGER = new ClientLogger(DevCenterCatalogImageDefinitionBuildsImpl.class);

    private final DevCenterCatalogImageDefinitionBuildsClient innerClient;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public DevCenterCatalogImageDefinitionBuildsImpl(DevCenterCatalogImageDefinitionBuildsClient innerClient,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ImageDefinitionBuild> listByImageDefinition(String resourceGroupName, String devCenterName,
        String catalogName, String imageDefinitionName) {
        PagedIterable<ImageDefinitionBuildInner> inner = this.serviceClient()
            .listByImageDefinition(resourceGroupName, devCenterName, catalogName, imageDefinitionName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ImageDefinitionBuildImpl(inner1, this.manager()));
    }

    public PagedIterable<ImageDefinitionBuild> listByImageDefinition(String resourceGroupName, String devCenterName,
        String catalogName, String imageDefinitionName, Context context) {
        PagedIterable<ImageDefinitionBuildInner> inner = this.serviceClient()
            .listByImageDefinition(resourceGroupName, devCenterName, catalogName, imageDefinitionName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ImageDefinitionBuildImpl(inner1, this.manager()));
    }

    private DevCenterCatalogImageDefinitionBuildsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }
}

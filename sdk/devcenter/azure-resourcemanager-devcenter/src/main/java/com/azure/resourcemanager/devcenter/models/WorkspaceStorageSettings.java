// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Settings to be used for workspace storage.
 */
@Fluent
public final class WorkspaceStorageSettings implements JsonSerializable<WorkspaceStorageSettings> {
    /*
     * Indicates whether workspace storage is enabled.
     */
    private WorkspaceStorageEnableStatus workspaceStorageEnableStatus;

    /**
     * Creates an instance of WorkspaceStorageSettings class.
     */
    public WorkspaceStorageSettings() {
    }

    /**
     * Get the workspaceStorageEnableStatus property: Indicates whether workspace storage is enabled.
     * 
     * @return the workspaceStorageEnableStatus value.
     */
    public WorkspaceStorageEnableStatus workspaceStorageEnableStatus() {
        return this.workspaceStorageEnableStatus;
    }

    /**
     * Set the workspaceStorageEnableStatus property: Indicates whether workspace storage is enabled.
     * 
     * @param workspaceStorageEnableStatus the workspaceStorageEnableStatus value to set.
     * @return the WorkspaceStorageSettings object itself.
     */
    public WorkspaceStorageSettings
        withWorkspaceStorageEnableStatus(WorkspaceStorageEnableStatus workspaceStorageEnableStatus) {
        this.workspaceStorageEnableStatus = workspaceStorageEnableStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("workspaceStorageEnableStatus",
            this.workspaceStorageEnableStatus == null ? null : this.workspaceStorageEnableStatus.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkspaceStorageSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkspaceStorageSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkspaceStorageSettings.
     */
    public static WorkspaceStorageSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkspaceStorageSettings deserializedWorkspaceStorageSettings = new WorkspaceStorageSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("workspaceStorageEnableStatus".equals(fieldName)) {
                    deserializedWorkspaceStorageSettings.workspaceStorageEnableStatus
                        = WorkspaceStorageEnableStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkspaceStorageSettings;
        });
    }
}

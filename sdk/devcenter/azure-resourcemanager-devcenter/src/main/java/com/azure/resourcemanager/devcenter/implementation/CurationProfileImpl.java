// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.CurationProfileInner;
import com.azure.resourcemanager.devcenter.models.CurationProfile;
import com.azure.resourcemanager.devcenter.models.CurationProfileUpdate;
import com.azure.resourcemanager.devcenter.models.ProvisioningState;
import com.azure.resourcemanager.devcenter.models.ResourcePolicy;
import java.util.Collections;
import java.util.List;

public final class CurationProfileImpl implements CurationProfile, CurationProfile.Definition, CurationProfile.Update {
    private CurationProfileInner innerObject;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<ResourcePolicy> resourcePolicies() {
        List<ResourcePolicy> inner = this.innerModel().resourcePolicies();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> scopes() {
        List<String> inner = this.innerModel().scopes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CurationProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String devCenterName;

    private String curationProfileName;

    private CurationProfileUpdate updateBody;

    public CurationProfileImpl withExistingDevcenter(String resourceGroupName, String devCenterName) {
        this.resourceGroupName = resourceGroupName;
        this.devCenterName = devCenterName;
        return this;
    }

    public CurationProfile create() {
        this.innerObject = serviceManager.serviceClient()
            .getCurationProfiles()
            .createOrUpdate(resourceGroupName, devCenterName, curationProfileName, this.innerModel(), Context.NONE);
        return this;
    }

    public CurationProfile create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCurationProfiles()
            .createOrUpdate(resourceGroupName, devCenterName, curationProfileName, this.innerModel(), context);
        return this;
    }

    CurationProfileImpl(String name, com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerObject = new CurationProfileInner();
        this.serviceManager = serviceManager;
        this.curationProfileName = name;
    }

    public CurationProfileImpl update() {
        this.updateBody = new CurationProfileUpdate();
        return this;
    }

    public CurationProfile apply() {
        this.innerObject = serviceManager.serviceClient()
            .getCurationProfiles()
            .update(resourceGroupName, devCenterName, curationProfileName, updateBody, Context.NONE);
        return this;
    }

    public CurationProfile apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCurationProfiles()
            .update(resourceGroupName, devCenterName, curationProfileName, updateBody, context);
        return this;
    }

    CurationProfileImpl(CurationProfileInner innerObject,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.devCenterName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "devcenters");
        this.curationProfileName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "curationProfiles");
    }

    public CurationProfile refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getCurationProfiles()
            .getWithResponse(resourceGroupName, devCenterName, curationProfileName, Context.NONE)
            .getValue();
        return this;
    }

    public CurationProfile refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getCurationProfiles()
            .getWithResponse(resourceGroupName, devCenterName, curationProfileName, context)
            .getValue();
        return this;
    }

    public CurationProfileImpl withResourcePolicies(List<ResourcePolicy> resourcePolicies) {
        if (isInCreateMode()) {
            this.innerModel().withResourcePolicies(resourcePolicies);
            return this;
        } else {
            this.updateBody.withResourcePolicies(resourcePolicies);
            return this;
        }
    }

    public CurationProfileImpl withScopes(List<String> scopes) {
        if (isInCreateMode()) {
            this.innerModel().withScopes(scopes);
            return this;
        } else {
            this.updateBody.withScopes(scopes);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

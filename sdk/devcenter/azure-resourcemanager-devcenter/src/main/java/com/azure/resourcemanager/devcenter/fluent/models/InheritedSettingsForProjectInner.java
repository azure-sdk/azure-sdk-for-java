// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.devcenter.models.DevCenterProjectCatalogSettings;
import com.azure.resourcemanager.devcenter.models.ProjectNetworkSettings;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Applicable inherited settings for a project.
 */
@Immutable
public final class InheritedSettingsForProjectInner {
    /*
     * Dev Center settings to be used when associating a project with a catalog.
     */
    @JsonProperty(value = "projectCatalogSettings", access = JsonProperty.Access.WRITE_ONLY)
    private DevCenterProjectCatalogSettings projectCatalogSettings;

    /*
     * Network settings that will be enforced on this project.
     */
    @JsonProperty(value = "networkSettings", access = JsonProperty.Access.WRITE_ONLY)
    private ProjectNetworkSettings networkSettings;

    /**
     * Creates an instance of InheritedSettingsForProjectInner class.
     */
    public InheritedSettingsForProjectInner() {
    }

    /**
     * Get the projectCatalogSettings property: Dev Center settings to be used when associating a project with a
     * catalog.
     * 
     * @return the projectCatalogSettings value.
     */
    public DevCenterProjectCatalogSettings projectCatalogSettings() {
        return this.projectCatalogSettings;
    }

    /**
     * Get the networkSettings property: Network settings that will be enforced on this project.
     * 
     * @return the networkSettings value.
     */
    public ProjectNetworkSettings networkSettings() {
        return this.networkSettings;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (projectCatalogSettings() != null) {
            projectCatalogSettings().validate();
        }
        if (networkSettings() != null) {
            networkSettings().validate();
        }
    }
}

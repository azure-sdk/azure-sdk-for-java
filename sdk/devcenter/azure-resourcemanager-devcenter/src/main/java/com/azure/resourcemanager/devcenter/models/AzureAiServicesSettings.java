// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Configures Azure AI related services for the project.
 */
@Fluent
public final class AzureAiServicesSettings implements JsonSerializable<AzureAiServicesSettings> {
    /*
     * The property indicates whether Azure AI services is enabled.
     */
    private AzureAiServicesMode azureAiServicesMode;

    /**
     * Creates an instance of AzureAiServicesSettings class.
     */
    public AzureAiServicesSettings() {
    }

    /**
     * Get the azureAiServicesMode property: The property indicates whether Azure AI services is enabled.
     * 
     * @return the azureAiServicesMode value.
     */
    public AzureAiServicesMode azureAiServicesMode() {
        return this.azureAiServicesMode;
    }

    /**
     * Set the azureAiServicesMode property: The property indicates whether Azure AI services is enabled.
     * 
     * @param azureAiServicesMode the azureAiServicesMode value to set.
     * @return the AzureAiServicesSettings object itself.
     */
    public AzureAiServicesSettings withAzureAiServicesMode(AzureAiServicesMode azureAiServicesMode) {
        this.azureAiServicesMode = azureAiServicesMode;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureAiServicesMode",
            this.azureAiServicesMode == null ? null : this.azureAiServicesMode.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureAiServicesSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureAiServicesSettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureAiServicesSettings.
     */
    public static AzureAiServicesSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureAiServicesSettings deserializedAzureAiServicesSettings = new AzureAiServicesSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureAiServicesMode".equals(fieldName)) {
                    deserializedAzureAiServicesSettings.azureAiServicesMode
                        = AzureAiServicesMode.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureAiServicesSettings;
        });
    }
}

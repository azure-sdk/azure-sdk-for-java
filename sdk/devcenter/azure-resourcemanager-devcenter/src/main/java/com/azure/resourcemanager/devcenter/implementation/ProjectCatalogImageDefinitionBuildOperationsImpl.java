// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devcenter.fluent.ProjectCatalogImageDefinitionBuildOperationsClient;
import com.azure.resourcemanager.devcenter.fluent.models.ImageDefinitionBuildDetailsInner;
import com.azure.resourcemanager.devcenter.fluent.models.ImageDefinitionBuildInner;
import com.azure.resourcemanager.devcenter.models.ImageDefinitionBuild;
import com.azure.resourcemanager.devcenter.models.ImageDefinitionBuildDetails;
import com.azure.resourcemanager.devcenter.models.ProjectCatalogImageDefinitionBuildOperations;

public final class ProjectCatalogImageDefinitionBuildOperationsImpl
    implements ProjectCatalogImageDefinitionBuildOperations {
    private static final ClientLogger LOGGER = new ClientLogger(ProjectCatalogImageDefinitionBuildOperationsImpl.class);

    private final ProjectCatalogImageDefinitionBuildOperationsClient innerClient;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public ProjectCatalogImageDefinitionBuildOperationsImpl(
        ProjectCatalogImageDefinitionBuildOperationsClient innerClient,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ImageDefinitionBuild> getWithResponse(String resourceGroupName, String projectName,
        String catalogName, String imageDefinitionName, String buildName, Context context) {
        Response<ImageDefinitionBuildInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, projectName, catalogName, imageDefinitionName, buildName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ImageDefinitionBuildImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ImageDefinitionBuild get(String resourceGroupName, String projectName, String catalogName,
        String imageDefinitionName, String buildName) {
        ImageDefinitionBuildInner inner
            = this.serviceClient().get(resourceGroupName, projectName, catalogName, imageDefinitionName, buildName);
        if (inner != null) {
            return new ImageDefinitionBuildImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void cancel(String resourceGroupName, String projectName, String catalogName, String imageDefinitionName,
        String buildName) {
        this.serviceClient().cancel(resourceGroupName, projectName, catalogName, imageDefinitionName, buildName);
    }

    public void cancel(String resourceGroupName, String projectName, String catalogName, String imageDefinitionName,
        String buildName, Context context) {
        this.serviceClient()
            .cancel(resourceGroupName, projectName, catalogName, imageDefinitionName, buildName, context);
    }

    public Response<ImageDefinitionBuildDetails> getBuildDetailsWithResponse(String resourceGroupName,
        String projectName, String catalogName, String imageDefinitionName, String buildName, Context context) {
        Response<ImageDefinitionBuildDetailsInner> inner = this.serviceClient()
            .getBuildDetailsWithResponse(resourceGroupName, projectName, catalogName, imageDefinitionName, buildName,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ImageDefinitionBuildDetailsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ImageDefinitionBuildDetails getBuildDetails(String resourceGroupName, String projectName, String catalogName,
        String imageDefinitionName, String buildName) {
        ImageDefinitionBuildDetailsInner inner = this.serviceClient()
            .getBuildDetails(resourceGroupName, projectName, catalogName, imageDefinitionName, buildName);
        if (inner != null) {
            return new ImageDefinitionBuildDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ProjectCatalogImageDefinitionBuildOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }
}

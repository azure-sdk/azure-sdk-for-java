// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of EncryptionSets.
 */
public interface EncryptionSets {
    /**
     * Lists all encryption sets in the devcenter.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the list devcenter encryption set operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DevCenterEncryptionSet> list(String resourceGroupName, String devCenterName);

    /**
     * Lists all encryption sets in the devcenter.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the list devcenter encryption set operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<DevCenterEncryptionSet> list(String resourceGroupName, String devCenterName, Integer top,
        Context context);

    /**
     * Gets a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter encryption set along with {@link Response}.
     */
    Response<DevCenterEncryptionSet> getWithResponse(String resourceGroupName, String devCenterName,
        String encryptionSetName, Context context);

    /**
     * Gets a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter encryption set.
     */
    DevCenterEncryptionSet get(String resourceGroupName, String devCenterName, String encryptionSetName);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String devCenterName, String encryptionSetName);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String devCenterName, String encryptionSetName, Context context);

    /**
     * Gets a devcenter encryption set.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter encryption set along with {@link Response}.
     */
    DevCenterEncryptionSet getById(String id);

    /**
     * Gets a devcenter encryption set.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter encryption set along with {@link Response}.
     */
    Response<DevCenterEncryptionSet> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DevCenterEncryptionSet resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DevCenterEncryptionSet definition.
     */
    DevCenterEncryptionSet.DefinitionStages.Blank define(String name);
}

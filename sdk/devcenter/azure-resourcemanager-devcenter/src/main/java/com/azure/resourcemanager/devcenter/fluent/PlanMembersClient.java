// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterPlanMemberInner;
import com.azure.resourcemanager.devcenter.models.PlanMemberUpdate;

/**
 * An instance of this class provides access to all the operations defined in PlanMembersClient.
 */
public interface PlanMembersClient {
    /**
     * Lists all of the members assigned to a devcenter plan.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the list devcenter plan members operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DevCenterPlanMemberInner> list(String resourceGroupName, String planName);

    /**
     * Lists all of the members assigned to a devcenter plan.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the list devcenter plan members operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DevCenterPlanMemberInner> list(String resourceGroupName, String planName, Integer top,
        Context context);

    /**
     * Gets a devcenter plan member.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter plan member along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DevCenterPlanMemberInner> getWithResponse(String resourceGroupName, String planName, String memberName,
        Context context);

    /**
     * Gets a devcenter plan member.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter plan member.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterPlanMemberInner get(String resourceGroupName, String planName, String memberName);

    /**
     * Creates or updates a devcenter plan member resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Represents a devcenter plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterPlanMemberInner>, DevCenterPlanMemberInner> beginCreateOrUpdate(
        String resourceGroupName, String planName, String memberName, DevCenterPlanMemberInner body);

    /**
     * Creates or updates a devcenter plan member resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Represents a devcenter plan.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterPlanMemberInner>, DevCenterPlanMemberInner> beginCreateOrUpdate(
        String resourceGroupName, String planName, String memberName, DevCenterPlanMemberInner body, Context context);

    /**
     * Creates or updates a devcenter plan member resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Represents a devcenter plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterPlanMemberInner createOrUpdate(String resourceGroupName, String planName, String memberName,
        DevCenterPlanMemberInner body);

    /**
     * Creates or updates a devcenter plan member resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Represents a devcenter plan.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterPlanMemberInner createOrUpdate(String resourceGroupName, String planName, String memberName,
        DevCenterPlanMemberInner body, Context context);

    /**
     * Partially updates a devcenter plan.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Updatable devcenter plan properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterPlanMemberInner>, DevCenterPlanMemberInner> beginUpdate(String resourceGroupName,
        String planName, String memberName, PlanMemberUpdate body);

    /**
     * Partially updates a devcenter plan.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Updatable devcenter plan properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterPlanMemberInner>, DevCenterPlanMemberInner> beginUpdate(String resourceGroupName,
        String planName, String memberName, PlanMemberUpdate body, Context context);

    /**
     * Partially updates a devcenter plan.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Updatable devcenter plan properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterPlanMemberInner update(String resourceGroupName, String planName, String memberName,
        PlanMemberUpdate body);

    /**
     * Partially updates a devcenter plan.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param body Updatable devcenter plan properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter plan member resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterPlanMemberInner update(String resourceGroupName, String planName, String memberName, PlanMemberUpdate body,
        Context context);

    /**
     * Deletes a devcenter plan member.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String planName, String memberName);

    /**
     * Deletes a devcenter plan member.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String planName, String memberName,
        Context context);

    /**
     * Deletes a devcenter plan member.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String planName, String memberName);

    /**
     * Deletes a devcenter plan member.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param planName The name of the devcenter plan.
     * @param memberName The name of a devcenter plan member.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String planName, String memberName, Context context);
}

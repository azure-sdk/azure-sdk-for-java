// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Settings controlling the auto deletion of inactive dev boxes.
 */
@Fluent
public final class DevBoxAutoDeleteSettings implements JsonSerializable<DevBoxAutoDeleteSettings> {
    /*
     * The property indicates whether auto delete is enabled.
     */
    private DevBoxAutoDeleteEnableStatus enableStatus;

    /*
     * ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion. ISO8601
     * format PT[n]H[n]M[n]S.
     */
    private String inactiveThreshold;

    /*
     * ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted. ISO8601 format
     * PT[n]H[n]M[n]S.
     */
    private String gracePeriod;

    /**
     * Creates an instance of DevBoxAutoDeleteSettings class.
     */
    public DevBoxAutoDeleteSettings() {
    }

    /**
     * Get the enableStatus property: The property indicates whether auto delete is enabled.
     * 
     * @return the enableStatus value.
     */
    public DevBoxAutoDeleteEnableStatus enableStatus() {
        return this.enableStatus;
    }

    /**
     * Set the enableStatus property: The property indicates whether auto delete is enabled.
     * 
     * @param enableStatus the enableStatus value to set.
     * @return the DevBoxAutoDeleteSettings object itself.
     */
    public DevBoxAutoDeleteSettings withEnableStatus(DevBoxAutoDeleteEnableStatus enableStatus) {
        this.enableStatus = enableStatus;
        return this;
    }

    /**
     * Get the inactiveThreshold property: ISO8601 duration required for the dev box to not be inactive prior to it
     * being scheduled for deletion. ISO8601 format PT[n]H[n]M[n]S.
     * 
     * @return the inactiveThreshold value.
     */
    public String inactiveThreshold() {
        return this.inactiveThreshold;
    }

    /**
     * Set the inactiveThreshold property: ISO8601 duration required for the dev box to not be inactive prior to it
     * being scheduled for deletion. ISO8601 format PT[n]H[n]M[n]S.
     * 
     * @param inactiveThreshold the inactiveThreshold value to set.
     * @return the DevBoxAutoDeleteSettings object itself.
     */
    public DevBoxAutoDeleteSettings withInactiveThreshold(String inactiveThreshold) {
        this.inactiveThreshold = inactiveThreshold;
        return this;
    }

    /**
     * Get the gracePeriod property: ISO8601 duration required for the dev box to be marked for deletion prior to it
     * being deleted. ISO8601 format PT[n]H[n]M[n]S.
     * 
     * @return the gracePeriod value.
     */
    public String gracePeriod() {
        return this.gracePeriod;
    }

    /**
     * Set the gracePeriod property: ISO8601 duration required for the dev box to be marked for deletion prior to it
     * being deleted. ISO8601 format PT[n]H[n]M[n]S.
     * 
     * @param gracePeriod the gracePeriod value to set.
     * @return the DevBoxAutoDeleteSettings object itself.
     */
    public DevBoxAutoDeleteSettings withGracePeriod(String gracePeriod) {
        this.gracePeriod = gracePeriod;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("enableStatus", this.enableStatus == null ? null : this.enableStatus.toString());
        jsonWriter.writeStringField("inactiveThreshold", this.inactiveThreshold);
        jsonWriter.writeStringField("gracePeriod", this.gracePeriod);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DevBoxAutoDeleteSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DevBoxAutoDeleteSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DevBoxAutoDeleteSettings.
     */
    public static DevBoxAutoDeleteSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DevBoxAutoDeleteSettings deserializedDevBoxAutoDeleteSettings = new DevBoxAutoDeleteSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enableStatus".equals(fieldName)) {
                    deserializedDevBoxAutoDeleteSettings.enableStatus
                        = DevBoxAutoDeleteEnableStatus.fromString(reader.getString());
                } else if ("inactiveThreshold".equals(fieldName)) {
                    deserializedDevBoxAutoDeleteSettings.inactiveThreshold = reader.getString();
                } else if ("gracePeriod".equals(fieldName)) {
                    deserializedDevBoxAutoDeleteSettings.gracePeriod = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDevBoxAutoDeleteSettings;
        });
    }
}

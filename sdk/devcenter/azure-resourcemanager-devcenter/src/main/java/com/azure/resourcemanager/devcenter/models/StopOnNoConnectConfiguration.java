// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Stop on no connect configuration settings for Dev Boxes created in this pool.
 */
@Fluent
public final class StopOnNoConnectConfiguration implements JsonSerializable<StopOnNoConnectConfiguration> {
    /*
     * Enables the feature to stop a started Dev Box when it has not been connected to, once the grace period has
     * lapsed.
     */
    private StopOnNoConnectEnableStatus status;

    /*
     * The specified time in minutes to wait before stopping a Dev Box if no connection is made.
     */
    private Integer gracePeriodMinutes;

    /**
     * Creates an instance of StopOnNoConnectConfiguration class.
     */
    public StopOnNoConnectConfiguration() {
    }

    /**
     * Get the status property: Enables the feature to stop a started Dev Box when it has not been connected to, once
     * the grace period has lapsed.
     * 
     * @return the status value.
     */
    public StopOnNoConnectEnableStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Enables the feature to stop a started Dev Box when it has not been connected to, once
     * the grace period has lapsed.
     * 
     * @param status the status value to set.
     * @return the StopOnNoConnectConfiguration object itself.
     */
    public StopOnNoConnectConfiguration withStatus(StopOnNoConnectEnableStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the gracePeriodMinutes property: The specified time in minutes to wait before stopping a Dev Box if no
     * connection is made.
     * 
     * @return the gracePeriodMinutes value.
     */
    public Integer gracePeriodMinutes() {
        return this.gracePeriodMinutes;
    }

    /**
     * Set the gracePeriodMinutes property: The specified time in minutes to wait before stopping a Dev Box if no
     * connection is made.
     * 
     * @param gracePeriodMinutes the gracePeriodMinutes value to set.
     * @return the StopOnNoConnectConfiguration object itself.
     */
    public StopOnNoConnectConfiguration withGracePeriodMinutes(Integer gracePeriodMinutes) {
        this.gracePeriodMinutes = gracePeriodMinutes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        jsonWriter.writeNumberField("gracePeriodMinutes", this.gracePeriodMinutes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of StopOnNoConnectConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of StopOnNoConnectConfiguration if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the StopOnNoConnectConfiguration.
     */
    public static StopOnNoConnectConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            StopOnNoConnectConfiguration deserializedStopOnNoConnectConfiguration = new StopOnNoConnectConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedStopOnNoConnectConfiguration.status
                        = StopOnNoConnectEnableStatus.fromString(reader.getString());
                } else if ("gracePeriodMinutes".equals(fieldName)) {
                    deserializedStopOnNoConnectConfiguration.gracePeriodMinutes
                        = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedStopOnNoConnectConfiguration;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterEncryptionSetInner;
import java.util.Map;

/**
 * An immutable client-side representation of DevCenterEncryptionSet.
 */
public interface DevCenterEncryptionSet {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: Managed identity properties.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentityAutoGenerated identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the devboxDisksEncryptionEnableStatus property: Devbox disk encryption enable or disable status. Indicates
     * if Devbox disks encryption using DevCenter CMK is enabled or not.
     * 
     * @return the devboxDisksEncryptionEnableStatus value.
     */
    DevboxDisksEncryptionEnableStatus devboxDisksEncryptionEnableStatus();

    /**
     * Gets the keyEncryptionKeyUrl property: Key encryption key Url, versioned or non-versioned. Ex:
     * https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or
     * https://contosovault.vault.azure.net/keys/contosokek.
     * 
     * @return the keyEncryptionKeyUrl value.
     */
    String keyEncryptionKeyUrl();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.devcenter.fluent.models.DevCenterEncryptionSetInner object.
     * 
     * @return the inner object.
     */
    DevCenterEncryptionSetInner innerModel();

    /**
     * The entirety of the DevCenterEncryptionSet definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The DevCenterEncryptionSet definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DevCenterEncryptionSet definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the DevCenterEncryptionSet definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the DevCenterEncryptionSet definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, devCenterName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param devCenterName The name of the devcenter.
             * @return the next definition stage.
             */
            WithCreate withExistingDevcenter(String resourceGroupName, String devCenterName);
        }

        /**
         * The stage of the DevCenterEncryptionSet definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithIdentity,
            DefinitionStages.WithDevboxDisksEncryptionEnableStatus, DefinitionStages.WithKeyEncryptionKeyUrl {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DevCenterEncryptionSet create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DevCenterEncryptionSet create(Context context);
        }

        /**
         * The stage of the DevCenterEncryptionSet definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the DevCenterEncryptionSet definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed identity properties.
             * 
             * @param identity Managed identity properties.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentityAutoGenerated identity);
        }

        /**
         * The stage of the DevCenterEncryptionSet definition allowing to specify devboxDisksEncryptionEnableStatus.
         */
        interface WithDevboxDisksEncryptionEnableStatus {
            /**
             * Specifies the devboxDisksEncryptionEnableStatus property: Devbox disk encryption enable or disable
             * status. Indicates if Devbox disks encryption using DevCenter CMK is enabled or not..
             * 
             * @param devboxDisksEncryptionEnableStatus Devbox disk encryption enable or disable status. Indicates if
             * Devbox disks encryption using DevCenter CMK is enabled or not.
             * @return the next definition stage.
             */
            WithCreate withDevboxDisksEncryptionEnableStatus(
                DevboxDisksEncryptionEnableStatus devboxDisksEncryptionEnableStatus);
        }

        /**
         * The stage of the DevCenterEncryptionSet definition allowing to specify keyEncryptionKeyUrl.
         */
        interface WithKeyEncryptionKeyUrl {
            /**
             * Specifies the keyEncryptionKeyUrl property: Key encryption key Url, versioned or non-versioned. Ex:
             * https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or
             * https://contosovault.vault.azure.net/keys/contosokek..
             * 
             * @param keyEncryptionKeyUrl Key encryption key Url, versioned or non-versioned. Ex:
             * https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or
             * https://contosovault.vault.azure.net/keys/contosokek.
             * @return the next definition stage.
             */
            WithCreate withKeyEncryptionKeyUrl(String keyEncryptionKeyUrl);
        }
    }

    /**
     * Begins update for the DevCenterEncryptionSet resource.
     * 
     * @return the stage of resource update.
     */
    DevCenterEncryptionSet.Update update();

    /**
     * The template for DevCenterEncryptionSet update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity,
        UpdateStages.WithDevboxDisksEncryptionEnableStatus, UpdateStages.WithKeyEncryptionKeyUrl {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        DevCenterEncryptionSet apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DevCenterEncryptionSet apply(Context context);
    }

    /**
     * The DevCenterEncryptionSet update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the DevCenterEncryptionSet update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the DevCenterEncryptionSet update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed identity properties.
             * 
             * @param identity Managed identity properties.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the DevCenterEncryptionSet update allowing to specify devboxDisksEncryptionEnableStatus.
         */
        interface WithDevboxDisksEncryptionEnableStatus {
            /**
             * Specifies the devboxDisksEncryptionEnableStatus property: Devbox disk encryption enable or disable
             * status. Indicates if Devbox disks encryption using DevCenter CMK is enabled or not..
             * 
             * @param devboxDisksEncryptionEnableStatus Devbox disk encryption enable or disable status. Indicates if
             * Devbox disks encryption using DevCenter CMK is enabled or not.
             * @return the next definition stage.
             */
            Update withDevboxDisksEncryptionEnableStatus(
                DevboxDisksEncryptionEnableStatus devboxDisksEncryptionEnableStatus);
        }

        /**
         * The stage of the DevCenterEncryptionSet update allowing to specify keyEncryptionKeyUrl.
         */
        interface WithKeyEncryptionKeyUrl {
            /**
             * Specifies the keyEncryptionKeyUrl property: Key encryption key Url, versioned or non-versioned. Ex:
             * https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or
             * https://contosovault.vault.azure.net/keys/contosokek..
             * 
             * @param keyEncryptionKeyUrl Key encryption key Url, versioned or non-versioned. Ex:
             * https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or
             * https://contosovault.vault.azure.net/keys/contosokek.
             * @return the next definition stage.
             */
            Update withKeyEncryptionKeyUrl(String keyEncryptionKeyUrl);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DevCenterEncryptionSet refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DevCenterEncryptionSet refresh(Context context);
}

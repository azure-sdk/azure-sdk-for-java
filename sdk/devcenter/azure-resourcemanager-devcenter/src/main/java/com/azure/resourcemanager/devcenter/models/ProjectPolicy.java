// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.ProjectPolicyInner;
import java.util.List;

/**
 * An immutable client-side representation of ProjectPolicy.
 */
public interface ProjectPolicy {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the resourcePolicies property: Resource policies that are a part of this project policy.
     * 
     * @return the resourcePolicies value.
     */
    List<ResourcePolicy> resourcePolicies();

    /**
     * Gets the scopes property: Resources that have access to the shared resources that are a part of this project
     * policy.
     * 
     * @return the scopes value.
     */
    List<String> scopes();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.devcenter.fluent.models.ProjectPolicyInner object.
     * 
     * @return the inner object.
     */
    ProjectPolicyInner innerModel();

    /**
     * The entirety of the ProjectPolicy definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ProjectPolicy definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ProjectPolicy definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ProjectPolicy definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, devCenterName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param devCenterName The name of the devcenter.
             * @return the next definition stage.
             */
            WithCreate withExistingDevcenter(String resourceGroupName, String devCenterName);
        }

        /**
         * The stage of the ProjectPolicy definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithResourcePolicies, DefinitionStages.WithScopes {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ProjectPolicy create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ProjectPolicy create(Context context);
        }

        /**
         * The stage of the ProjectPolicy definition allowing to specify resourcePolicies.
         */
        interface WithResourcePolicies {
            /**
             * Specifies the resourcePolicies property: Resource policies that are a part of this project policy..
             * 
             * @param resourcePolicies Resource policies that are a part of this project policy.
             * @return the next definition stage.
             */
            WithCreate withResourcePolicies(List<ResourcePolicy> resourcePolicies);
        }

        /**
         * The stage of the ProjectPolicy definition allowing to specify scopes.
         */
        interface WithScopes {
            /**
             * Specifies the scopes property: Resources that have access to the shared resources that are a part of this
             * project policy..
             * 
             * @param scopes Resources that have access to the shared resources that are a part of this project policy.
             * @return the next definition stage.
             */
            WithCreate withScopes(List<String> scopes);
        }
    }

    /**
     * Begins update for the ProjectPolicy resource.
     * 
     * @return the stage of resource update.
     */
    ProjectPolicy.Update update();

    /**
     * The template for ProjectPolicy update.
     */
    interface Update extends UpdateStages.WithResourcePolicies, UpdateStages.WithScopes {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ProjectPolicy apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ProjectPolicy apply(Context context);
    }

    /**
     * The ProjectPolicy update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ProjectPolicy update allowing to specify resourcePolicies.
         */
        interface WithResourcePolicies {
            /**
             * Specifies the resourcePolicies property: Resource policies that are a part of this project policy..
             * 
             * @param resourcePolicies Resource policies that are a part of this project policy.
             * @return the next definition stage.
             */
            Update withResourcePolicies(List<ResourcePolicy> resourcePolicies);
        }

        /**
         * The stage of the ProjectPolicy update allowing to specify scopes.
         */
        interface WithScopes {
            /**
             * Specifies the scopes property: Resources that have access to the shared resources that are a part of this
             * project policy..
             * 
             * @param scopes Resources that have access to the shared resources that are a part of this project policy.
             * @return the next definition stage.
             */
            Update withScopes(List<String> scopes);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ProjectPolicy refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ProjectPolicy refresh(Context context);
}

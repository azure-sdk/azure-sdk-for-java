// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterPlanInner;
import com.azure.resourcemanager.devcenter.models.DevCenterPlan;
import com.azure.resourcemanager.devcenter.models.PlanUpdate;
import com.azure.resourcemanager.devcenter.models.ProvisioningState;
import com.azure.resourcemanager.devcenter.models.Sku;
import java.util.Collections;
import java.util.Map;

public final class DevCenterPlanImpl implements DevCenterPlan, DevCenterPlan.Definition, DevCenterPlan.Update {
    private DevCenterPlanInner innerObject;

    private final com.azure.resourcemanager.devcenter.DevCenterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DevCenterPlanInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.devcenter.DevCenterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String planName;

    private PlanUpdate updateBody;

    public DevCenterPlanImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public DevCenterPlan create() {
        this.innerObject = serviceManager.serviceClient()
            .getPlans()
            .createOrUpdate(resourceGroupName, planName, this.innerModel(), Context.NONE);
        return this;
    }

    public DevCenterPlan create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPlans()
            .createOrUpdate(resourceGroupName, planName, this.innerModel(), context);
        return this;
    }

    DevCenterPlanImpl(String name, com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerObject = new DevCenterPlanInner();
        this.serviceManager = serviceManager;
        this.planName = name;
    }

    public DevCenterPlanImpl update() {
        this.updateBody = new PlanUpdate();
        return this;
    }

    public DevCenterPlan apply() {
        this.innerObject
            = serviceManager.serviceClient().getPlans().update(resourceGroupName, planName, updateBody, Context.NONE);
        return this;
    }

    public DevCenterPlan apply(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getPlans().update(resourceGroupName, planName, updateBody, context);
        return this;
    }

    DevCenterPlanImpl(DevCenterPlanInner innerObject,
        com.azure.resourcemanager.devcenter.DevCenterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.planName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "plans");
    }

    public DevCenterPlan refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getPlans()
            .getByResourceGroupWithResponse(resourceGroupName, planName, Context.NONE)
            .getValue();
        return this;
    }

    public DevCenterPlan refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getPlans()
            .getByResourceGroupWithResponse(resourceGroupName, planName, context)
            .getValue();
        return this;
    }

    public DevCenterPlanImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public DevCenterPlanImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public DevCenterPlanImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public DevCenterPlanImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.updateBody.withSku(sku);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

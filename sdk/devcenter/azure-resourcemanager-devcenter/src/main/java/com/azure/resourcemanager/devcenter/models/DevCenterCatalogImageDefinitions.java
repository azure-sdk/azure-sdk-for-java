// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DevCenterCatalogImageDefinitions.
 */
public interface DevCenterCatalogImageDefinitions {
    /**
     * List Image Definitions in the catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return results of the Image Definition list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ImageDefinition> listByDevCenterCatalog(String resourceGroupName, String devCenterName,
        String catalogName);

    /**
     * List Image Definitions in the catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return results of the Image Definition list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ImageDefinition> listByDevCenterCatalog(String resourceGroupName, String devCenterName,
        String catalogName, Integer top, Context context);

    /**
     * Gets an Image Definition from the catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param imageDefinitionName The name of the Image Definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Image Definition from the catalog along with {@link Response}.
     */
    Response<ImageDefinition> getByDevCenterCatalogWithResponse(String resourceGroupName, String devCenterName,
        String catalogName, String imageDefinitionName, Context context);

    /**
     * Gets an Image Definition from the catalog.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param imageDefinitionName The name of the Image Definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Image Definition from the catalog.
     */
    ImageDefinition getByDevCenterCatalog(String resourceGroupName, String devCenterName, String catalogName,
        String imageDefinitionName);

    /**
     * Gets Image Definition error details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param imageDefinitionName The name of the Image Definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return image Definition error details along with {@link Response}.
     */
    Response<CatalogResourceValidationErrorDetails> getErrorDetailsWithResponse(String resourceGroupName,
        String devCenterName, String catalogName, String imageDefinitionName, Context context);

    /**
     * Gets Image Definition error details.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param imageDefinitionName The name of the Image Definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return image Definition error details.
     */
    CatalogResourceValidationErrorDetails getErrorDetails(String resourceGroupName, String devCenterName,
        String catalogName, String imageDefinitionName);

    /**
     * Builds an image for the specified Image Definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param imageDefinitionName The name of the Image Definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void buildImage(String resourceGroupName, String devCenterName, String catalogName, String imageDefinitionName);

    /**
     * Builds an image for the specified Image Definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param catalogName The name of the Catalog.
     * @param imageDefinitionName The name of the Image Definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void buildImage(String resourceGroupName, String devCenterName, String catalogName, String imageDefinitionName,
        Context context);
}

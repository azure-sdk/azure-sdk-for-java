// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devcenter.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.devcenter.fluent.models.DevCenterEncryptionSetInner;
import com.azure.resourcemanager.devcenter.models.EncryptionSetUpdate;

/**
 * An instance of this class provides access to all the operations defined in EncryptionSetsClient.
 */
public interface EncryptionSetsClient {
    /**
     * Lists all encryption sets in the devcenter.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the list devcenter encryption set operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DevCenterEncryptionSetInner> list(String resourceGroupName, String devCenterName);

    /**
     * Lists all encryption sets in the devcenter.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param top The maximum number of resources to return from the operation. Example: '$top=10'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the list devcenter encryption set operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DevCenterEncryptionSetInner> list(String resourceGroupName, String devCenterName, Integer top,
        Context context);

    /**
     * Gets a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter encryption set along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DevCenterEncryptionSetInner> getWithResponse(String resourceGroupName, String devCenterName,
        String encryptionSetName, Context context);

    /**
     * Gets a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a devcenter encryption set.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterEncryptionSetInner get(String resourceGroupName, String devCenterName, String encryptionSetName);

    /**
     * Creates or updates a devcenter encryption set resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Represents a devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterEncryptionSetInner>, DevCenterEncryptionSetInner> beginCreateOrUpdate(
        String resourceGroupName, String devCenterName, String encryptionSetName, DevCenterEncryptionSetInner body);

    /**
     * Creates or updates a devcenter encryption set resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Represents a devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterEncryptionSetInner>, DevCenterEncryptionSetInner> beginCreateOrUpdate(
        String resourceGroupName, String devCenterName, String encryptionSetName, DevCenterEncryptionSetInner body,
        Context context);

    /**
     * Creates or updates a devcenter encryption set resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Represents a devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterEncryptionSetInner createOrUpdate(String resourceGroupName, String devCenterName, String encryptionSetName,
        DevCenterEncryptionSetInner body);

    /**
     * Creates or updates a devcenter encryption set resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Represents a devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterEncryptionSetInner createOrUpdate(String resourceGroupName, String devCenterName, String encryptionSetName,
        DevCenterEncryptionSetInner body, Context context);

    /**
     * Partially updates a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Updatable devcenter encryption set properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterEncryptionSetInner>, DevCenterEncryptionSetInner>
        beginUpdate(String resourceGroupName, String devCenterName, String encryptionSetName, EncryptionSetUpdate body);

    /**
     * Partially updates a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Updatable devcenter encryption set properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DevCenterEncryptionSetInner>, DevCenterEncryptionSetInner> beginUpdate(
        String resourceGroupName, String devCenterName, String encryptionSetName, EncryptionSetUpdate body,
        Context context);

    /**
     * Partially updates a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Updatable devcenter encryption set properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterEncryptionSetInner update(String resourceGroupName, String devCenterName, String encryptionSetName,
        EncryptionSetUpdate body);

    /**
     * Partially updates a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param body Updatable devcenter encryption set properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a devcenter encryption set resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DevCenterEncryptionSetInner update(String resourceGroupName, String devCenterName, String encryptionSetName,
        EncryptionSetUpdate body, Context context);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String devCenterName,
        String encryptionSetName);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String devCenterName,
        String encryptionSetName, Context context);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String devCenterName, String encryptionSetName);

    /**
     * Deletes a devcenter encryption set.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param devCenterName The name of the devcenter.
     * @param encryptionSetName The name of the devcenter encryption set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String devCenterName, String encryptionSetName, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package microsoft.security.copilot.skillsetauthoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The descriptor of a skill input.
 */
@Immutable
public final class SkillInputDescriptor {
    /*
     * The name of the skill input
     */
    @Generated
    @JsonProperty(value = "name")
    private String name;

    /*
     * The type of the skill input
     */
    @Generated
    @JsonProperty(value = "type")
    private SkillTypeDescriptor type;

    /*
     * The description of the skill
     */
    @Generated
    @JsonProperty(value = "description")
    private String description;

    /*
     * Whether a skill input is required
     */
    @Generated
    @JsonProperty(value = "required")
    private boolean required;

    /*
     * The default value of the skill input
     */
    @Generated
    @JsonProperty(value = "defaultValue")
    private String defaultValue;

    /*
     * The placeholder value of the skill input TODO how is this different than the default
     */
    @Generated
    @JsonProperty(value = "placeholderValue")
    private String placeholderValue;

    /*
     * Enum
     */
    @Generated
    @JsonProperty(value = "enum")
    private List<String> enumProperty;

    /**
     * Creates an instance of SkillInputDescriptor class.
     * 
     * @param type the type value to set.
     * @param required the required value to set.
     * @param placeholderValue the placeholderValue value to set.
     * @param enumProperty the enumProperty value to set.
     */
    @Generated
    @JsonCreator
    private SkillInputDescriptor(@JsonProperty(value = "type") SkillTypeDescriptor type,
        @JsonProperty(value = "required") boolean required,
        @JsonProperty(value = "placeholderValue") String placeholderValue,
        @JsonProperty(value = "enum") List<String> enumProperty) {
        this.type = type;
        this.required = required;
        this.placeholderValue = placeholderValue;
        this.enumProperty = enumProperty;
    }

    /**
     * Get the name property: The name of the skill input.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the type property: The type of the skill input.
     * 
     * @return the type value.
     */
    @Generated
    public SkillTypeDescriptor getType() {
        return this.type;
    }

    /**
     * Get the description property: The description of the skill.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the required property: Whether a skill input is required.
     * 
     * @return the required value.
     */
    @Generated
    public boolean isRequired() {
        return this.required;
    }

    /**
     * Get the defaultValue property: The default value of the skill input.
     * 
     * @return the defaultValue value.
     */
    @Generated
    public String getDefaultValue() {
        return this.defaultValue;
    }

    /**
     * Get the placeholderValue property: The placeholder value of the skill input TODO how is this different than the
     * default.
     * 
     * @return the placeholderValue value.
     */
    @Generated
    public String getPlaceholderValue() {
        return this.placeholderValue;
    }

    /**
     * Get the enumProperty property: Enum.
     * 
     * @return the enumProperty value.
     */
    @Generated
    public List<String> getEnumProperty() {
        return this.enumProperty;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * API source properties.
 */
@Fluent
public final class ApiSourceProperties implements JsonSerializable<ApiSourceProperties> {
    /*
     * Indicates if the specification should be imported along with metadata.
     */
    private ShouldImportSpec shouldImportSpec;

    /*
     * API source configuration for Azure API Management.
     */
    private ApimSource apimSource;

    /**
     * Creates an instance of ApiSourceProperties class.
     */
    public ApiSourceProperties() {
    }

    /**
     * Get the shouldImportSpec property: Indicates if the specification should be imported along with metadata.
     * 
     * @return the shouldImportSpec value.
     */
    public ShouldImportSpec shouldImportSpec() {
        return this.shouldImportSpec;
    }

    /**
     * Set the shouldImportSpec property: Indicates if the specification should be imported along with metadata.
     * 
     * @param shouldImportSpec the shouldImportSpec value to set.
     * @return the ApiSourceProperties object itself.
     */
    public ApiSourceProperties withShouldImportSpec(ShouldImportSpec shouldImportSpec) {
        this.shouldImportSpec = shouldImportSpec;
        return this;
    }

    /**
     * Get the apimSource property: API source configuration for Azure API Management.
     * 
     * @return the apimSource value.
     */
    public ApimSource apimSource() {
        return this.apimSource;
    }

    /**
     * Set the apimSource property: API source configuration for Azure API Management.
     * 
     * @param apimSource the apimSource value to set.
     * @return the ApiSourceProperties object itself.
     */
    public ApiSourceProperties withApimSource(ApimSource apimSource) {
        this.apimSource = apimSource;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (apimSource() != null) {
            apimSource().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("shouldImportSpec",
            this.shouldImportSpec == null ? null : this.shouldImportSpec.toString());
        jsonWriter.writeJsonField("apimSource", this.apimSource);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiSourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiSourceProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiSourceProperties.
     */
    public static ApiSourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiSourceProperties deserializedApiSourceProperties = new ApiSourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("shouldImportSpec".equals(fieldName)) {
                    deserializedApiSourceProperties.shouldImportSpec = ShouldImportSpec.fromString(reader.getString());
                } else if ("apimSource".equals(fieldName)) {
                    deserializedApiSourceProperties.apimSource = ApimSource.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiSourceProperties;
        });
    }
}

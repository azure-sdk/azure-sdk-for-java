// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.apicenter.fluent.models.AnalyzerConfigInner;
import com.azure.resourcemanager.apicenter.fluent.models.OperationStatusResultInner;
import com.azure.resourcemanager.apicenter.fluent.models.RulesetExportResultInner;
import com.azure.resourcemanager.apicenter.models.AnalyzerConfigsCreateOrUpdateResponse;
import com.azure.resourcemanager.apicenter.models.AnalyzerConfigsGetResponse;
import com.azure.resourcemanager.apicenter.models.RulesetImportRequest;

/**
 * An instance of this class provides access to all the operations defined in AnalyzerConfigsClient.
 */
public interface AnalyzerConfigsClient {
    /**
     * Lists API analyzer configurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AnalyzerConfig list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AnalyzerConfigInner> list(String resourceGroupName, String serviceName, String workspaceName);

    /**
     * Lists API analyzer configurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param filter OData filter parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AnalyzerConfig list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AnalyzerConfigInner> list(String resourceGroupName, String serviceName, String workspaceName,
        String filter, Context context);

    /**
     * Returns details of the API analyzer configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI analyzer configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalyzerConfigsGetResponse getWithResponse(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName, Context context);

    /**
     * Returns details of the API analyzer configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI analyzer configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalyzerConfigInner get(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName);

    /**
     * Creates new or updates existing API analyzer configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI analyzer configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalyzerConfigsCreateOrUpdateResponse createOrUpdateWithResponse(String resourceGroupName, String serviceName,
        String workspaceName, String analyzerConfigName, AnalyzerConfigInner resource, Context context);

    /**
     * Creates new or updates existing API analyzer configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI analyzer configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalyzerConfigInner createOrUpdate(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName, AnalyzerConfigInner resource);

    /**
     * Permanently deletes API analyzer configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName, Context context);

    /**
     * Permanently deletes API analyzer configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String serviceName, String workspaceName, String analyzerConfigName);

    /**
     * Exports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the ruleset export result.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RulesetExportResultInner>, RulesetExportResultInner> beginExportRuleset(
        String resourceGroupName, String serviceName, String workspaceName, String analyzerConfigName);

    /**
     * Exports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the ruleset export result.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<RulesetExportResultInner>, RulesetExportResultInner> beginExportRuleset(
        String resourceGroupName, String serviceName, String workspaceName, String analyzerConfigName, Context context);

    /**
     * Exports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ruleset export result.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RulesetExportResultInner exportRuleset(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName);

    /**
     * Exports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ruleset export result.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RulesetExportResultInner exportRuleset(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName, Context context);

    /**
     * Imports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginImportRuleset(
        String resourceGroupName, String serviceName, String workspaceName, String analyzerConfigName,
        RulesetImportRequest body);

    /**
     * Imports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<OperationStatusResultInner>, OperationStatusResultInner> beginImportRuleset(
        String resourceGroupName, String serviceName, String workspaceName, String analyzerConfigName,
        RulesetImportRequest body, Context context);

    /**
     * Imports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner importRuleset(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName, RulesetImportRequest body);

    /**
     * Imports the API analyzer ruleset.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param analyzerConfigName The name of the configuration.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the current status of an async operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OperationStatusResultInner importRuleset(String resourceGroupName, String serviceName, String workspaceName,
        String analyzerConfigName, RulesetImportRequest body, Context context);
}

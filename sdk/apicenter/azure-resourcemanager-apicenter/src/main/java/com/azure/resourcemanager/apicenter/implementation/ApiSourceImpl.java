// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.apicenter.fluent.models.ApiSourceInner;
import com.azure.resourcemanager.apicenter.models.ApiSource;
import com.azure.resourcemanager.apicenter.models.ApiSourceProperties;

public final class ApiSourceImpl implements ApiSource, ApiSource.Definition, ApiSource.Update {
    private ApiSourceInner innerObject;

    private final com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ApiSourceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApiSourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.apicenter.ApiCenterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String workspaceName;

    private String apiSourceName;

    public ApiSourceImpl withExistingWorkspace(String resourceGroupName, String serviceName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        this.workspaceName = workspaceName;
        return this;
    }

    public ApiSource create() {
        this.innerObject = serviceManager.serviceClient()
            .getApiSources()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiSourceName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public ApiSource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApiSources()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiSourceName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    ApiSourceImpl(String name, com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager) {
        this.innerObject = new ApiSourceInner();
        this.serviceManager = serviceManager;
        this.apiSourceName = name;
    }

    public ApiSourceImpl update() {
        return this;
    }

    public ApiSource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getApiSources()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiSourceName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public ApiSource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApiSources()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiSourceName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    ApiSourceImpl(ApiSourceInner innerObject, com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "services");
        this.workspaceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.apiSourceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "apiSources");
    }

    public ApiSource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getApiSources()
            .getWithResponse(resourceGroupName, serviceName, workspaceName, apiSourceName, Context.NONE)
            .getValue();
        return this;
    }

    public ApiSource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApiSources()
            .getWithResponse(resourceGroupName, serviceName, workspaceName, apiSourceName, context)
            .getValue();
        return this;
    }

    public ApiSourceImpl withProperties(ApiSourceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

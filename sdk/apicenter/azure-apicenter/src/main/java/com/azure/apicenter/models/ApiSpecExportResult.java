// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.apicenter.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Export specification result model.
 */
@Immutable
public final class ApiSpecExportResult implements JsonSerializable<ApiSpecExportResult> {
    /*
     * API definition identifier.
     */
    @Generated
    private String definitionName;

    /*
     * The result of the specification export.
     */
    @Generated
    private final String value;

    /*
     * The format of the specification export result.
     */
    @Generated
    private final ApiSpecExportResultFormat format;

    /**
     * Creates an instance of ApiSpecExportResult class.
     * 
     * @param value the value value to set.
     * @param format the format value to set.
     */
    @Generated
    private ApiSpecExportResult(String value, ApiSpecExportResultFormat format) {
        this.value = value;
        this.format = format;
    }

    /**
     * Get the definitionName property: API definition identifier.
     * 
     * @return the definitionName value.
     */
    @Generated
    public String getDefinitionName() {
        return this.definitionName;
    }

    /**
     * Get the value property: The result of the specification export.
     * 
     * @return the value value.
     */
    @Generated
    public String getValue() {
        return this.value;
    }

    /**
     * Get the format property: The format of the specification export result.
     * 
     * @return the format value.
     */
    @Generated
    public ApiSpecExportResultFormat getFormat() {
        return this.format;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("value", this.value);
        jsonWriter.writeStringField("format", this.format == null ? null : this.format.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiSpecExportResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiSpecExportResult if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ApiSpecExportResult.
     */
    @Generated
    public static ApiSpecExportResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String definitionName = null;
            String value = null;
            ApiSpecExportResultFormat format = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("definitionName".equals(fieldName)) {
                    definitionName = reader.getString();
                } else if ("value".equals(fieldName)) {
                    value = reader.getString();
                } else if ("format".equals(fieldName)) {
                    format = ApiSpecExportResultFormat.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            ApiSpecExportResult deserializedApiSpecExportResult = new ApiSpecExportResult(value, format);
            deserializedApiSpecExportResult.definitionName = definitionName;

            return deserializedApiSpecExportResult;
        });
    }
}

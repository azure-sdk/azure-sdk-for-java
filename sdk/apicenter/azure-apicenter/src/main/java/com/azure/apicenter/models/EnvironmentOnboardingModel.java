// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.apicenter.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Environment Onboarding Model.
 */
@Immutable
public final class EnvironmentOnboardingModel implements JsonSerializable<EnvironmentOnboardingModel> {
    /*
     * Instructions how to onboard to the environment.
     */
    @Generated
    private final String instructions;

    /*
     * Developer portal URIs of the environment.
     */
    @Generated
    private final List<String> developerPortalUris;

    /**
     * Creates an instance of EnvironmentOnboardingModel class.
     * 
     * @param instructions the instructions value to set.
     * @param developerPortalUris the developerPortalUris value to set.
     */
    @Generated
    private EnvironmentOnboardingModel(String instructions, List<String> developerPortalUris) {
        this.instructions = instructions;
        this.developerPortalUris = developerPortalUris;
    }

    /**
     * Get the instructions property: Instructions how to onboard to the environment.
     * 
     * @return the instructions value.
     */
    @Generated
    public String getInstructions() {
        return this.instructions;
    }

    /**
     * Get the developerPortalUris property: Developer portal URIs of the environment.
     * 
     * @return the developerPortalUris value.
     */
    @Generated
    public List<String> getDeveloperPortalUris() {
        return this.developerPortalUris;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("instructions", this.instructions);
        jsonWriter.writeArrayField("developerPortalUris", this.developerPortalUris,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EnvironmentOnboardingModel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EnvironmentOnboardingModel if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EnvironmentOnboardingModel.
     */
    @Generated
    public static EnvironmentOnboardingModel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String instructions = null;
            List<String> developerPortalUris = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("instructions".equals(fieldName)) {
                    instructions = reader.getString();
                } else if ("developerPortalUris".equals(fieldName)) {
                    developerPortalUris = reader.readArray(reader1 -> reader1.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return new EnvironmentOnboardingModel(instructions, developerPortalUris);
        });
    }
}

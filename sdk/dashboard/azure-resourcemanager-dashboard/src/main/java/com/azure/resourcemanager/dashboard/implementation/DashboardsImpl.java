// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dashboard.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.dashboard.fluent.DashboardsClient;
import com.azure.resourcemanager.dashboard.fluent.models.ManagedDashboardInner;
import com.azure.resourcemanager.dashboard.models.Dashboards;
import com.azure.resourcemanager.dashboard.models.ManagedDashboard;

public final class DashboardsImpl implements Dashboards {
    private static final ClientLogger LOGGER = new ClientLogger(DashboardsImpl.class);

    private final DashboardsClient innerClient;

    private final com.azure.resourcemanager.dashboard.DashboardManager serviceManager;

    public DashboardsImpl(DashboardsClient innerClient,
        com.azure.resourcemanager.dashboard.DashboardManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ManagedDashboard> list() {
        PagedIterable<ManagedDashboardInner> inner = this.serviceClient().list();
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ManagedDashboardImpl(inner1, this.manager()));
    }

    public PagedIterable<ManagedDashboard> list(Context context) {
        PagedIterable<ManagedDashboardInner> inner = this.serviceClient().list(context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ManagedDashboardImpl(inner1, this.manager()));
    }

    public PagedIterable<ManagedDashboard> listByResourceGroup(String resourceGroupName) {
        PagedIterable<ManagedDashboardInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ManagedDashboardImpl(inner1, this.manager()));
    }

    public PagedIterable<ManagedDashboard> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<ManagedDashboardInner> inner
            = this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new ManagedDashboardImpl(inner1, this.manager()));
    }

    public Response<ManagedDashboard> getByResourceGroupWithResponse(String resourceGroupName, String dashboardName,
        Context context) {
        Response<ManagedDashboardInner> inner
            = this.serviceClient().getByResourceGroupWithResponse(resourceGroupName, dashboardName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ManagedDashboardImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ManagedDashboard getByResourceGroup(String resourceGroupName, String dashboardName) {
        ManagedDashboardInner inner = this.serviceClient().getByResourceGroup(resourceGroupName, dashboardName);
        if (inner != null) {
            return new ManagedDashboardImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DashboardsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.dashboard.DashboardManager manager() {
        return this.serviceManager;
    }
}

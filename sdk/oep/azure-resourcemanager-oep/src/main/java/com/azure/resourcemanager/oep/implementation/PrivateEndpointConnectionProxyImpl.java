// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.oep.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.oep.fluent.models.PrivateEndpointConnectionProxyInner;
import com.azure.resourcemanager.oep.models.PrivateEndpointConnectionProxy;
import com.azure.resourcemanager.oep.models.PrivateEndpointConnectionProxyProvisioningState;
import com.azure.resourcemanager.oep.models.RemotePrivateEndpoint;

public final class PrivateEndpointConnectionProxyImpl
    implements PrivateEndpointConnectionProxy,
        PrivateEndpointConnectionProxy.Definition,
        PrivateEndpointConnectionProxy.Update {
    private PrivateEndpointConnectionProxyInner innerObject;

    private final com.azure.resourcemanager.oep.OepManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public RemotePrivateEndpoint remotePrivateEndpoint() {
        return this.innerModel().remotePrivateEndpoint();
    }

    public String status() {
        return this.innerModel().status();
    }

    public PrivateEndpointConnectionProxyProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public PrivateEndpointConnectionProxyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.oep.OepManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String resourceName;

    private String privateEndpointConnectionProxyId;

    public PrivateEndpointConnectionProxyImpl withExistingEnergyService(String resourceGroupName, String resourceName) {
        this.resourceGroupName = resourceGroupName;
        this.resourceName = resourceName;
        return this;
    }

    public PrivateEndpointConnectionProxy create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateEndpointConnectionProxies()
                .createOrUpdate(
                    resourceGroupName, resourceName, privateEndpointConnectionProxyId, this.innerModel(), Context.NONE);
        return this;
    }

    public PrivateEndpointConnectionProxy create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateEndpointConnectionProxies()
                .createOrUpdate(
                    resourceGroupName, resourceName, privateEndpointConnectionProxyId, this.innerModel(), context);
        return this;
    }

    PrivateEndpointConnectionProxyImpl(String name, com.azure.resourcemanager.oep.OepManager serviceManager) {
        this.innerObject = new PrivateEndpointConnectionProxyInner();
        this.serviceManager = serviceManager;
        this.privateEndpointConnectionProxyId = name;
    }

    public PrivateEndpointConnectionProxyImpl update() {
        return this;
    }

    public PrivateEndpointConnectionProxy apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateEndpointConnectionProxies()
                .createOrUpdate(
                    resourceGroupName, resourceName, privateEndpointConnectionProxyId, this.innerModel(), Context.NONE);
        return this;
    }

    public PrivateEndpointConnectionProxy apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateEndpointConnectionProxies()
                .createOrUpdate(
                    resourceGroupName, resourceName, privateEndpointConnectionProxyId, this.innerModel(), context);
        return this;
    }

    PrivateEndpointConnectionProxyImpl(
        PrivateEndpointConnectionProxyInner innerObject, com.azure.resourcemanager.oep.OepManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = Utils.getValueFromIdByName(innerObject.id(), "energyServices");
        this.privateEndpointConnectionProxyId =
            Utils.getValueFromIdByName(innerObject.id(), "privateEndpointConnectionProxies");
    }

    public PrivateEndpointConnectionProxy refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateEndpointConnectionProxies()
                .getWithResponse(resourceGroupName, resourceName, privateEndpointConnectionProxyId, Context.NONE)
                .getValue();
        return this;
    }

    public PrivateEndpointConnectionProxy refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateEndpointConnectionProxies()
                .getWithResponse(resourceGroupName, resourceName, privateEndpointConnectionProxyId, context)
                .getValue();
        return this;
    }

    public Response<Void> validateWithResponse(
        PrivateEndpointConnectionProxyInner privateEndpointConnectionProxy, Context context) {
        return serviceManager
            .privateEndpointConnectionProxies()
            .validateWithResponse(
                resourceGroupName,
                resourceName,
                privateEndpointConnectionProxyId,
                privateEndpointConnectionProxy,
                context);
    }

    public void validate(PrivateEndpointConnectionProxyInner privateEndpointConnectionProxy) {
        serviceManager
            .privateEndpointConnectionProxies()
            .validate(
                resourceGroupName, resourceName, privateEndpointConnectionProxyId, privateEndpointConnectionProxy);
    }

    public PrivateEndpointConnectionProxyImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public PrivateEndpointConnectionProxyImpl withRemotePrivateEndpoint(RemotePrivateEndpoint remotePrivateEndpoint) {
        this.innerModel().withRemotePrivateEndpoint(remotePrivateEndpoint);
        return this;
    }

    public PrivateEndpointConnectionProxyImpl withStatus(String status) {
        this.innerModel().withStatus(status);
        return this;
    }

    public PrivateEndpointConnectionProxyImpl withProvisioningState(
        PrivateEndpointConnectionProxyProvisioningState provisioningState) {
        this.innerModel().withProvisioningState(provisioningState);
        return this;
    }
}

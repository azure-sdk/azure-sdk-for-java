// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DataMaskingPolicies.
 */
public interface DataMaskingPolicies {
    /**
     * Gets the database data masking policy.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param dataMaskingPolicyName The name of the database for which the data masking policy applies.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the database data masking policy along with {@link Response}.
     */
    Response<DataMaskingPolicy> getWithResponse(String resourceGroupName, String serverName, String databaseName,
        DataMaskingPolicyName dataMaskingPolicyName, Context context);

    /**
     * Gets the database data masking policy.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param dataMaskingPolicyName The name of the database for which the data masking policy applies.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the database data masking policy.
     */
    DataMaskingPolicy get(String resourceGroupName, String serverName, String databaseName,
        DataMaskingPolicyName dataMaskingPolicyName);

    /**
     * Gets the database data masking policy.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the database data masking policy along with {@link Response}.
     */
    DataMaskingPolicy getById(String id);

    /**
     * Gets the database data masking policy.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the database data masking policy along with {@link Response}.
     */
    Response<DataMaskingPolicy> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DataMaskingPolicy resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DataMaskingPolicy definition.
     */
    DataMaskingPolicy.DefinitionStages.Blank define(DataMaskingPolicyName name);
}

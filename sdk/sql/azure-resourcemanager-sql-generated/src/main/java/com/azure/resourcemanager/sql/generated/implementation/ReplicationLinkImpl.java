// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ReplicationLinkInner;
import com.azure.resourcemanager.sql.generated.models.ReplicationLink;
import com.azure.resourcemanager.sql.generated.models.ReplicationLinkType;
import com.azure.resourcemanager.sql.generated.models.ReplicationLinkUpdate;
import com.azure.resourcemanager.sql.generated.models.ReplicationRole;
import com.azure.resourcemanager.sql.generated.models.ReplicationState;
import java.time.OffsetDateTime;

public final class ReplicationLinkImpl implements ReplicationLink, ReplicationLink.Definition, ReplicationLink.Update {
    private ReplicationLinkInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String partnerServer() {
        return this.innerModel().partnerServer();
    }

    public String partnerDatabase() {
        return this.innerModel().partnerDatabase();
    }

    public String partnerDatabaseId() {
        return this.innerModel().partnerDatabaseId();
    }

    public String partnerLocation() {
        return this.innerModel().partnerLocation();
    }

    public ReplicationRole role() {
        return this.innerModel().role();
    }

    public ReplicationRole partnerRole() {
        return this.innerModel().partnerRole();
    }

    public String replicationMode() {
        return this.innerModel().replicationMode();
    }

    public OffsetDateTime startTime() {
        return this.innerModel().startTime();
    }

    public Integer percentComplete() {
        return this.innerModel().percentComplete();
    }

    public ReplicationState replicationState() {
        return this.innerModel().replicationState();
    }

    public Boolean isTerminationAllowed() {
        return this.innerModel().isTerminationAllowed();
    }

    public ReplicationLinkType linkType() {
        return this.innerModel().linkType();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ReplicationLinkInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String databaseName;

    private String linkId;

    private ReplicationLinkUpdate updateParameters;

    public ReplicationLinkImpl withExistingDatabase(String resourceGroupName, String serverName, String databaseName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.databaseName = databaseName;
        return this;
    }

    public ReplicationLink create() {
        this.innerObject = serviceManager.serviceClient()
            .getReplicationLinks()
            .createOrUpdate(resourceGroupName, serverName, databaseName, linkId, this.innerModel(), Context.NONE);
        return this;
    }

    public ReplicationLink create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getReplicationLinks()
            .createOrUpdate(resourceGroupName, serverName, databaseName, linkId, this.innerModel(), context);
        return this;
    }

    ReplicationLinkImpl(String name, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new ReplicationLinkInner();
        this.serviceManager = serviceManager;
        this.linkId = name;
    }

    public ReplicationLinkImpl update() {
        this.updateParameters = new ReplicationLinkUpdate();
        return this;
    }

    public ReplicationLink apply() {
        this.innerObject = serviceManager.serviceClient()
            .getReplicationLinks()
            .update(resourceGroupName, serverName, databaseName, linkId, updateParameters, Context.NONE);
        return this;
    }

    public ReplicationLink apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getReplicationLinks()
            .update(resourceGroupName, serverName, databaseName, linkId, updateParameters, context);
        return this;
    }

    ReplicationLinkImpl(ReplicationLinkInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "servers");
        this.databaseName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "databases");
        this.linkId = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "replicationLinks");
    }

    public ReplicationLink refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getReplicationLinks()
            .getWithResponse(resourceGroupName, serverName, databaseName, linkId, Context.NONE)
            .getValue();
        return this;
    }

    public ReplicationLink refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getReplicationLinks()
            .getWithResponse(resourceGroupName, serverName, databaseName, linkId, context)
            .getValue();
        return this;
    }

    public ReplicationLink failover() {
        return serviceManager.replicationLinks().failover(resourceGroupName, serverName, databaseName, linkId);
    }

    public ReplicationLink failover(Context context) {
        return serviceManager.replicationLinks().failover(resourceGroupName, serverName, databaseName, linkId, context);
    }

    public ReplicationLink failoverAllowDataLoss() {
        return serviceManager.replicationLinks()
            .failoverAllowDataLoss(resourceGroupName, serverName, databaseName, linkId);
    }

    public ReplicationLink failoverAllowDataLoss(Context context) {
        return serviceManager.replicationLinks()
            .failoverAllowDataLoss(resourceGroupName, serverName, databaseName, linkId, context);
    }

    public ReplicationLinkImpl withLinkType(ReplicationLinkType linkType) {
        if (isInCreateMode()) {
            this.innerModel().withLinkType(linkType);
            return this;
        } else {
            this.updateParameters.withLinkType(linkType);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

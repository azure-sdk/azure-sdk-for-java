// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.DistributedAvailabilityGroupInner;
import com.azure.resourcemanager.sql.generated.models.DistributedAvailabilityGroup;
import com.azure.resourcemanager.sql.generated.models.DistributedAvailabilityGroupDatabase;
import com.azure.resourcemanager.sql.generated.models.DistributedAvailabilityGroupSetRole;
import com.azure.resourcemanager.sql.generated.models.FailoverModeType;
import com.azure.resourcemanager.sql.generated.models.LinkRole;
import com.azure.resourcemanager.sql.generated.models.ReplicationModeType;
import com.azure.resourcemanager.sql.generated.models.SeedingModeType;
import java.util.Collections;
import java.util.List;
import java.util.UUID;

public final class DistributedAvailabilityGroupImpl
    implements DistributedAvailabilityGroup,
        DistributedAvailabilityGroup.Definition,
        DistributedAvailabilityGroup.Update {
    private DistributedAvailabilityGroupInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String distributedAvailabilityGroupName() {
        return this.innerModel().distributedAvailabilityGroupName();
    }

    public UUID distributedAvailabilityGroupId() {
        return this.innerModel().distributedAvailabilityGroupId();
    }

    public ReplicationModeType replicationMode() {
        return this.innerModel().replicationMode();
    }

    public LinkRole partnerLinkRole() {
        return this.innerModel().partnerLinkRole();
    }

    public String partnerAvailabilityGroupName() {
        return this.innerModel().partnerAvailabilityGroupName();
    }

    public String partnerEndpoint() {
        return this.innerModel().partnerEndpoint();
    }

    public LinkRole instanceLinkRole() {
        return this.innerModel().instanceLinkRole();
    }

    public String instanceAvailabilityGroupName() {
        return this.innerModel().instanceAvailabilityGroupName();
    }

    public FailoverModeType failoverMode() {
        return this.innerModel().failoverMode();
    }

    public SeedingModeType seedingMode() {
        return this.innerModel().seedingMode();
    }

    public List<DistributedAvailabilityGroupDatabase> databases() {
        List<DistributedAvailabilityGroupDatabase> inner = this.innerModel().databases();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DistributedAvailabilityGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private String distributedAvailabilityGroupName;

    public DistributedAvailabilityGroupImpl withExistingManagedInstance(
        String resourceGroupName, String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public DistributedAvailabilityGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDistributedAvailabilityGroups()
                .createOrUpdate(
                    resourceGroupName,
                    managedInstanceName,
                    distributedAvailabilityGroupName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public DistributedAvailabilityGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDistributedAvailabilityGroups()
                .createOrUpdate(
                    resourceGroupName,
                    managedInstanceName,
                    distributedAvailabilityGroupName,
                    this.innerModel(),
                    context);
        return this;
    }

    DistributedAvailabilityGroupImpl(String name, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new DistributedAvailabilityGroupInner();
        this.serviceManager = serviceManager;
        this.distributedAvailabilityGroupName = name;
    }

    public DistributedAvailabilityGroupImpl update() {
        return this;
    }

    public DistributedAvailabilityGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDistributedAvailabilityGroups()
                .update(
                    resourceGroupName,
                    managedInstanceName,
                    distributedAvailabilityGroupName,
                    this.innerModel(),
                    Context.NONE);
        return this;
    }

    public DistributedAvailabilityGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDistributedAvailabilityGroups()
                .update(
                    resourceGroupName,
                    managedInstanceName,
                    distributedAvailabilityGroupName,
                    this.innerModel(),
                    context);
        return this;
    }

    DistributedAvailabilityGroupImpl(
        DistributedAvailabilityGroupInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.distributedAvailabilityGroupName =
            Utils.getValueFromIdByName(innerObject.id(), "distributedAvailabilityGroups");
    }

    public DistributedAvailabilityGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDistributedAvailabilityGroups()
                .getWithResponse(resourceGroupName, managedInstanceName, distributedAvailabilityGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public DistributedAvailabilityGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDistributedAvailabilityGroups()
                .getWithResponse(resourceGroupName, managedInstanceName, distributedAvailabilityGroupName, context)
                .getValue();
        return this;
    }

    public DistributedAvailabilityGroup setRole(DistributedAvailabilityGroupSetRole parameters) {
        return serviceManager
            .distributedAvailabilityGroups()
            .setRole(resourceGroupName, managedInstanceName, distributedAvailabilityGroupName, parameters);
    }

    public DistributedAvailabilityGroup setRole(DistributedAvailabilityGroupSetRole parameters, Context context) {
        return serviceManager
            .distributedAvailabilityGroups()
            .setRole(resourceGroupName, managedInstanceName, distributedAvailabilityGroupName, parameters, context);
    }

    public DistributedAvailabilityGroupImpl withReplicationMode(ReplicationModeType replicationMode) {
        this.innerModel().withReplicationMode(replicationMode);
        return this;
    }

    public DistributedAvailabilityGroupImpl withPartnerAvailabilityGroupName(String partnerAvailabilityGroupName) {
        this.innerModel().withPartnerAvailabilityGroupName(partnerAvailabilityGroupName);
        return this;
    }

    public DistributedAvailabilityGroupImpl withPartnerEndpoint(String partnerEndpoint) {
        this.innerModel().withPartnerEndpoint(partnerEndpoint);
        return this;
    }

    public DistributedAvailabilityGroupImpl withInstanceLinkRole(LinkRole instanceLinkRole) {
        this.innerModel().withInstanceLinkRole(instanceLinkRole);
        return this;
    }

    public DistributedAvailabilityGroupImpl withInstanceAvailabilityGroupName(String instanceAvailabilityGroupName) {
        this.innerModel().withInstanceAvailabilityGroupName(instanceAvailabilityGroupName);
        return this;
    }

    public DistributedAvailabilityGroupImpl withFailoverMode(FailoverModeType failoverMode) {
        this.innerModel().withFailoverMode(failoverMode);
        return this;
    }

    public DistributedAvailabilityGroupImpl withSeedingMode(SeedingModeType seedingMode) {
        this.innerModel().withSeedingMode(seedingMode);
        return this;
    }

    public DistributedAvailabilityGroupImpl withDatabases(List<DistributedAvailabilityGroupDatabase> databases) {
        this.innerModel().withDatabases(databases);
        return this;
    }
}

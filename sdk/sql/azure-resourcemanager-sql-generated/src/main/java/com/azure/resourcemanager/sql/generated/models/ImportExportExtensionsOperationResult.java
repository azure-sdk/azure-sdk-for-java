// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ImportExportExtensionsOperationResultInner;
import java.util.List;
import java.util.UUID;

/**
 * An immutable client-side representation of ImportExportExtensionsOperationResult.
 */
public interface ImportExportExtensionsOperationResult {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the requestId property: Request Id.
     * 
     * @return the requestId value.
     */
    UUID requestId();

    /**
     * Gets the requestType property: Request type.
     * 
     * @return the requestType value.
     */
    String requestType();

    /**
     * Gets the lastModifiedTime property: Last modified time.
     * 
     * @return the lastModifiedTime value.
     */
    String lastModifiedTime();

    /**
     * Gets the serverName property: Server name.
     * 
     * @return the serverName value.
     */
    String serverName();

    /**
     * Gets the databaseName property: Database name.
     * 
     * @return the databaseName value.
     */
    String databaseName();

    /**
     * Gets the status property: Operation status.
     * 
     * @return the status value.
     */
    String status();

    /**
     * Gets the errorMessage property: Error message.
     * 
     * @return the errorMessage value.
     */
    String errorMessage();

    /**
     * Gets the queuedTime property: Queued time.
     * 
     * @return the queuedTime value.
     */
    String queuedTime();

    /**
     * Gets the blobUri property: Blob URI.
     * 
     * @return the blobUri value.
     */
    String blobUri();

    /**
     * Gets the privateEndpointConnections property: Gets the status of private endpoints associated with this request.
     * 
     * @return the privateEndpointConnections value.
     */
    List<PrivateEndpointConnectionRequestStatus> privateEndpointConnections();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.ImportExportExtensionsOperationResultInner
     * object.
     * 
     * @return the inner object.
     */
    ImportExportExtensionsOperationResultInner innerModel();

    /**
     * The entirety of the ImportExportExtensionsOperationResult definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ImportExportExtensionsOperationResult definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ImportExportExtensionsOperationResult definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, serverName, databaseName.
             * 
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             * value from the Azure Resource Manager API or the portal.
             * @param serverName The name of the server.
             * @param databaseName The name of the database.
             * @return the next definition stage.
             */
            WithCreate withExistingDatabase(String resourceGroupName, String serverName, String databaseName);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithOperationMode, DefinitionStages.WithStorageKeyType,
            DefinitionStages.WithStorageKey, DefinitionStages.WithStorageUri, DefinitionStages.WithAdministratorLogin,
            DefinitionStages.WithAdministratorLoginPassword, DefinitionStages.WithAuthenticationType,
            DefinitionStages.WithDatabaseEdition, DefinitionStages.WithServiceObjectiveName,
            DefinitionStages.WithMaxSizeBytes, DefinitionStages.WithNetworkIsolation {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ImportExportExtensionsOperationResult create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ImportExportExtensionsOperationResult create(Context context);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify operationMode.
         */
        interface WithOperationMode {
            /**
             * Specifies the operationMode property: Operation mode of the operation: Import, Export, or
             * PolybaseImport..
             * 
             * @param operationMode Operation mode of the operation: Import, Export, or PolybaseImport.
             * @return the next definition stage.
             */
            WithCreate withOperationMode(OperationMode operationMode);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify storageKeyType.
         */
        interface WithStorageKeyType {
            /**
             * Specifies the storageKeyType property: Storage key type: StorageAccessKey or SharedAccessKey..
             * 
             * @param storageKeyType Storage key type: StorageAccessKey or SharedAccessKey.
             * @return the next definition stage.
             */
            WithCreate withStorageKeyType(StorageKeyType storageKeyType);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify storageKey.
         */
        interface WithStorageKey {
            /**
             * Specifies the storageKey property: Storage key for the storage account..
             * 
             * @param storageKey Storage key for the storage account.
             * @return the next definition stage.
             */
            WithCreate withStorageKey(String storageKey);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify storageUri.
         */
        interface WithStorageUri {
            /**
             * Specifies the storageUri property: Storage Uri for the storage account..
             * 
             * @param storageUri Storage Uri for the storage account.
             * @return the next definition stage.
             */
            WithCreate withStorageUri(String storageUri);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify administratorLogin.
         */
        interface WithAdministratorLogin {
            /**
             * Specifies the administratorLogin property: Administrator login name..
             * 
             * @param administratorLogin Administrator login name.
             * @return the next definition stage.
             */
            WithCreate withAdministratorLogin(String administratorLogin);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify
         * administratorLoginPassword.
         */
        interface WithAdministratorLoginPassword {
            /**
             * Specifies the administratorLoginPassword property: Administrator login password..
             * 
             * @param administratorLoginPassword Administrator login password.
             * @return the next definition stage.
             */
            WithCreate withAdministratorLoginPassword(String administratorLoginPassword);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify authenticationType.
         */
        interface WithAuthenticationType {
            /**
             * Specifies the authenticationType property: Authentication type: SQL authentication or AD password..
             * 
             * @param authenticationType Authentication type: SQL authentication or AD password.
             * @return the next definition stage.
             */
            WithCreate withAuthenticationType(String authenticationType);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify databaseEdition.
         */
        interface WithDatabaseEdition {
            /**
             * Specifies the databaseEdition property: Database edition for the newly created database in the case of an
             * import operation..
             * 
             * @param databaseEdition Database edition for the newly created database in the case of an import
             * operation.
             * @return the next definition stage.
             */
            WithCreate withDatabaseEdition(String databaseEdition);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify serviceObjectiveName.
         */
        interface WithServiceObjectiveName {
            /**
             * Specifies the serviceObjectiveName property: Database service level objective for the newly created
             * database in the case of an import operation..
             * 
             * @param serviceObjectiveName Database service level objective for the newly created database in the case
             * of an import operation.
             * @return the next definition stage.
             */
            WithCreate withServiceObjectiveName(String serviceObjectiveName);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify maxSizeBytes.
         */
        interface WithMaxSizeBytes {
            /**
             * Specifies the maxSizeBytes property: Database max size in bytes for the newly created database in the
             * case of an import operation..
             * 
             * @param maxSizeBytes Database max size in bytes for the newly created database in the case of an import
             * operation.
             * @return the next definition stage.
             */
            WithCreate withMaxSizeBytes(String maxSizeBytes);
        }

        /**
         * The stage of the ImportExportExtensionsOperationResult definition allowing to specify networkIsolation.
         */
        interface WithNetworkIsolation {
            /**
             * Specifies the networkIsolation property: Optional resource information to enable network isolation for
             * request..
             * 
             * @param networkIsolation Optional resource information to enable network isolation for request.
             * @return the next definition stage.
             */
            WithCreate withNetworkIsolation(NetworkIsolationSettings networkIsolation);
        }
    }

    /**
     * Begins update for the ImportExportExtensionsOperationResult resource.
     * 
     * @return the stage of resource update.
     */
    ImportExportExtensionsOperationResult.Update update();

    /**
     * The template for ImportExportExtensionsOperationResult update.
     */
    interface Update {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ImportExportExtensionsOperationResult apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ImportExportExtensionsOperationResult apply(Context context);
    }

    /**
     * The ImportExportExtensionsOperationResult update stages.
     */
    interface UpdateStages {
    }
}

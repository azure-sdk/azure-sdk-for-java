// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ImportExportExtensionsOperationResultInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseExtensions;
import com.azure.resourcemanager.sql.generated.models.ImportExportExtensionsOperationResult;
import com.azure.resourcemanager.sql.generated.models.NetworkIsolationSettings;
import com.azure.resourcemanager.sql.generated.models.OperationMode;
import com.azure.resourcemanager.sql.generated.models.PrivateEndpointConnectionRequestStatus;
import com.azure.resourcemanager.sql.generated.models.StorageKeyType;
import java.util.Collections;
import java.util.List;
import java.util.UUID;

public final class ImportExportExtensionsOperationResultImpl implements ImportExportExtensionsOperationResult,
    ImportExportExtensionsOperationResult.Definition, ImportExportExtensionsOperationResult.Update {
    private ImportExportExtensionsOperationResultInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public UUID requestId() {
        return this.innerModel().requestId();
    }

    public String requestType() {
        return this.innerModel().requestType();
    }

    public String lastModifiedTime() {
        return this.innerModel().lastModifiedTime();
    }

    public String serverName() {
        return this.innerModel().serverName();
    }

    public String databaseName() {
        return this.innerModel().databaseName();
    }

    public String status() {
        return this.innerModel().status();
    }

    public String errorMessage() {
        return this.innerModel().errorMessage();
    }

    public String queuedTime() {
        return this.innerModel().queuedTime();
    }

    public String blobUri() {
        return this.innerModel().blobUri();
    }

    public List<PrivateEndpointConnectionRequestStatus> privateEndpointConnections() {
        List<PrivateEndpointConnectionRequestStatus> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ImportExportExtensionsOperationResultInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String databaseName;

    private String extensionName;

    private DatabaseExtensions createParameters;

    private DatabaseExtensions updateParameters;

    public ImportExportExtensionsOperationResultImpl withExistingDatabase(String resourceGroupName, String serverName,
        String databaseName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.databaseName = databaseName;
        return this;
    }

    public ImportExportExtensionsOperationResult create() {
        this.innerObject = serviceManager.serviceClient().getDatabaseExtensionsOperations()
            .createOrUpdate(resourceGroupName, serverName, databaseName, extensionName, createParameters, Context.NONE);
        return this;
    }

    public ImportExportExtensionsOperationResult create(Context context) {
        this.innerObject = serviceManager.serviceClient().getDatabaseExtensionsOperations()
            .createOrUpdate(resourceGroupName, serverName, databaseName, extensionName, createParameters, context);
        return this;
    }

    ImportExportExtensionsOperationResultImpl(String name,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new ImportExportExtensionsOperationResultInner();
        this.serviceManager = serviceManager;
        this.extensionName = name;
        this.createParameters = new DatabaseExtensions();
    }

    public ImportExportExtensionsOperationResultImpl update() {
        this.updateParameters = new DatabaseExtensions();
        return this;
    }

    public ImportExportExtensionsOperationResult apply() {
        this.innerObject = serviceManager.serviceClient().getDatabaseExtensionsOperations()
            .createOrUpdate(resourceGroupName, serverName, databaseName, extensionName, updateParameters, Context.NONE);
        return this;
    }

    public ImportExportExtensionsOperationResult apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getDatabaseExtensionsOperations()
            .createOrUpdate(resourceGroupName, serverName, databaseName, extensionName, updateParameters, context);
        return this;
    }

    ImportExportExtensionsOperationResultImpl(ImportExportExtensionsOperationResultInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.databaseName = Utils.getValueFromIdByName(innerObject.id(), "databases");
        this.extensionName = Utils.getValueFromIdByName(innerObject.id(), "extensions");
    }

    public ImportExportExtensionsOperationResultImpl withOperationMode(OperationMode operationMode) {
        this.createParameters.withOperationMode(operationMode);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withStorageKeyType(StorageKeyType storageKeyType) {
        this.createParameters.withStorageKeyType(storageKeyType);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withStorageKey(String storageKey) {
        this.createParameters.withStorageKey(storageKey);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withStorageUri(String storageUri) {
        this.createParameters.withStorageUri(storageUri);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withAdministratorLogin(String administratorLogin) {
        this.createParameters.withAdministratorLogin(administratorLogin);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withAdministratorLoginPassword(String administratorLoginPassword) {
        this.createParameters.withAdministratorLoginPassword(administratorLoginPassword);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withAuthenticationType(String authenticationType) {
        this.createParameters.withAuthenticationType(authenticationType);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withDatabaseEdition(String databaseEdition) {
        this.createParameters.withDatabaseEdition(databaseEdition);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withServiceObjectiveName(String serviceObjectiveName) {
        this.createParameters.withServiceObjectiveName(serviceObjectiveName);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withMaxSizeBytes(String maxSizeBytes) {
        this.createParameters.withMaxSizeBytes(maxSizeBytes);
        return this;
    }

    public ImportExportExtensionsOperationResultImpl withNetworkIsolation(NetworkIsolationSettings networkIsolation) {
        this.createParameters.withNetworkIsolation(networkIsolation);
        return this;
    }
}

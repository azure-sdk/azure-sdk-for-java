// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.DistributedAvailabilityGroupInner;
import java.util.List;
import java.util.UUID;

/**
 * An immutable client-side representation of DistributedAvailabilityGroup.
 */
public interface DistributedAvailabilityGroup {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the distributedAvailabilityGroupName property: Name of the distributed availability group.
     * 
     * @return the distributedAvailabilityGroupName value.
     */
    String distributedAvailabilityGroupName();

    /**
     * Gets the distributedAvailabilityGroupId property: ID of the distributed availability group.
     * 
     * @return the distributedAvailabilityGroupId value.
     */
    UUID distributedAvailabilityGroupId();

    /**
     * Gets the replicationMode property: Replication mode of the link.
     * 
     * @return the replicationMode value.
     */
    ReplicationModeType replicationMode();

    /**
     * Gets the partnerLinkRole property: SQL server side link role.
     * 
     * @return the partnerLinkRole value.
     */
    LinkRole partnerLinkRole();

    /**
     * Gets the partnerAvailabilityGroupName property: SQL server side availability group name.
     * 
     * @return the partnerAvailabilityGroupName value.
     */
    String partnerAvailabilityGroupName();

    /**
     * Gets the partnerEndpoint property: SQL server side endpoint - IP or DNS resolvable name.
     * 
     * @return the partnerEndpoint value.
     */
    String partnerEndpoint();

    /**
     * Gets the instanceLinkRole property: Managed instance side link role.
     * 
     * @return the instanceLinkRole value.
     */
    LinkRole instanceLinkRole();

    /**
     * Gets the instanceAvailabilityGroupName property: Managed instance side availability group name.
     * 
     * @return the instanceAvailabilityGroupName value.
     */
    String instanceAvailabilityGroupName();

    /**
     * Gets the failoverMode property: The link failover mode - can be Manual if intended to be used for two-way
     * failover with a supported SQL Server, or None for one-way failover to Azure.
     * 
     * @return the failoverMode value.
     */
    FailoverModeType failoverMode();

    /**
     * Gets the seedingMode property: Database seeding mode – can be Automatic (default), or Manual for supported
     * scenarios.
     * 
     * @return the seedingMode value.
     */
    SeedingModeType seedingMode();

    /**
     * Gets the databases property: Databases in the distributed availability group.
     * 
     * @return the databases value.
     */
    List<DistributedAvailabilityGroupDatabase> databases();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.DistributedAvailabilityGroupInner object.
     * 
     * @return the inner object.
     */
    DistributedAvailabilityGroupInner innerModel();

    /**
     * The entirety of the DistributedAvailabilityGroup definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The DistributedAvailabilityGroup definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DistributedAvailabilityGroup definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, managedInstanceName.
             * 
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             * value from the Azure Resource Manager API or the portal.
             * @param managedInstanceName The name of the managed instance.
             * @return the next definition stage.
             */
            WithCreate withExistingManagedInstance(String resourceGroupName, String managedInstanceName);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithReplicationMode,
            DefinitionStages.WithPartnerAvailabilityGroupName, DefinitionStages.WithPartnerEndpoint,
            DefinitionStages.WithInstanceLinkRole, DefinitionStages.WithInstanceAvailabilityGroupName,
            DefinitionStages.WithFailoverMode, DefinitionStages.WithSeedingMode, DefinitionStages.WithDatabases {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DistributedAvailabilityGroup create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DistributedAvailabilityGroup create(Context context);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify replicationMode.
         */
        interface WithReplicationMode {
            /**
             * Specifies the replicationMode property: Replication mode of the link.
             * 
             * @param replicationMode Replication mode of the link.
             * @return the next definition stage.
             */
            WithCreate withReplicationMode(ReplicationModeType replicationMode);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify partnerAvailabilityGroupName.
         */
        interface WithPartnerAvailabilityGroupName {
            /**
             * Specifies the partnerAvailabilityGroupName property: SQL server side availability group name.
             * 
             * @param partnerAvailabilityGroupName SQL server side availability group name.
             * @return the next definition stage.
             */
            WithCreate withPartnerAvailabilityGroupName(String partnerAvailabilityGroupName);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify partnerEndpoint.
         */
        interface WithPartnerEndpoint {
            /**
             * Specifies the partnerEndpoint property: SQL server side endpoint - IP or DNS resolvable name.
             * 
             * @param partnerEndpoint SQL server side endpoint - IP or DNS resolvable name.
             * @return the next definition stage.
             */
            WithCreate withPartnerEndpoint(String partnerEndpoint);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify instanceLinkRole.
         */
        interface WithInstanceLinkRole {
            /**
             * Specifies the instanceLinkRole property: Managed instance side link role.
             * 
             * @param instanceLinkRole Managed instance side link role.
             * @return the next definition stage.
             */
            WithCreate withInstanceLinkRole(LinkRole instanceLinkRole);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify instanceAvailabilityGroupName.
         */
        interface WithInstanceAvailabilityGroupName {
            /**
             * Specifies the instanceAvailabilityGroupName property: Managed instance side availability group name.
             * 
             * @param instanceAvailabilityGroupName Managed instance side availability group name.
             * @return the next definition stage.
             */
            WithCreate withInstanceAvailabilityGroupName(String instanceAvailabilityGroupName);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify failoverMode.
         */
        interface WithFailoverMode {
            /**
             * Specifies the failoverMode property: The link failover mode - can be Manual if intended to be used for
             * two-way failover with a supported SQL Server, or None for one-way failover to Azure..
             * 
             * @param failoverMode The link failover mode - can be Manual if intended to be used for two-way failover
             * with a supported SQL Server, or None for one-way failover to Azure.
             * @return the next definition stage.
             */
            WithCreate withFailoverMode(FailoverModeType failoverMode);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify seedingMode.
         */
        interface WithSeedingMode {
            /**
             * Specifies the seedingMode property: Database seeding mode – can be Automatic (default), or Manual for
             * supported scenarios..
             * 
             * @param seedingMode Database seeding mode – can be Automatic (default), or Manual for supported scenarios.
             * @return the next definition stage.
             */
            WithCreate withSeedingMode(SeedingModeType seedingMode);
        }

        /**
         * The stage of the DistributedAvailabilityGroup definition allowing to specify databases.
         */
        interface WithDatabases {
            /**
             * Specifies the databases property: Databases in the distributed availability group.
             * 
             * @param databases Databases in the distributed availability group.
             * @return the next definition stage.
             */
            WithCreate withDatabases(List<DistributedAvailabilityGroupDatabase> databases);
        }
    }

    /**
     * Begins update for the DistributedAvailabilityGroup resource.
     * 
     * @return the stage of resource update.
     */
    DistributedAvailabilityGroup.Update update();

    /**
     * The template for DistributedAvailabilityGroup update.
     */
    interface Update extends UpdateStages.WithReplicationMode, UpdateStages.WithPartnerAvailabilityGroupName,
        UpdateStages.WithPartnerEndpoint, UpdateStages.WithInstanceLinkRole,
        UpdateStages.WithInstanceAvailabilityGroupName, UpdateStages.WithFailoverMode, UpdateStages.WithSeedingMode,
        UpdateStages.WithDatabases {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        DistributedAvailabilityGroup apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        DistributedAvailabilityGroup apply(Context context);
    }

    /**
     * The DistributedAvailabilityGroup update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify replicationMode.
         */
        interface WithReplicationMode {
            /**
             * Specifies the replicationMode property: Replication mode of the link.
             * 
             * @param replicationMode Replication mode of the link.
             * @return the next definition stage.
             */
            Update withReplicationMode(ReplicationModeType replicationMode);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify partnerAvailabilityGroupName.
         */
        interface WithPartnerAvailabilityGroupName {
            /**
             * Specifies the partnerAvailabilityGroupName property: SQL server side availability group name.
             * 
             * @param partnerAvailabilityGroupName SQL server side availability group name.
             * @return the next definition stage.
             */
            Update withPartnerAvailabilityGroupName(String partnerAvailabilityGroupName);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify partnerEndpoint.
         */
        interface WithPartnerEndpoint {
            /**
             * Specifies the partnerEndpoint property: SQL server side endpoint - IP or DNS resolvable name.
             * 
             * @param partnerEndpoint SQL server side endpoint - IP or DNS resolvable name.
             * @return the next definition stage.
             */
            Update withPartnerEndpoint(String partnerEndpoint);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify instanceLinkRole.
         */
        interface WithInstanceLinkRole {
            /**
             * Specifies the instanceLinkRole property: Managed instance side link role.
             * 
             * @param instanceLinkRole Managed instance side link role.
             * @return the next definition stage.
             */
            Update withInstanceLinkRole(LinkRole instanceLinkRole);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify instanceAvailabilityGroupName.
         */
        interface WithInstanceAvailabilityGroupName {
            /**
             * Specifies the instanceAvailabilityGroupName property: Managed instance side availability group name.
             * 
             * @param instanceAvailabilityGroupName Managed instance side availability group name.
             * @return the next definition stage.
             */
            Update withInstanceAvailabilityGroupName(String instanceAvailabilityGroupName);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify failoverMode.
         */
        interface WithFailoverMode {
            /**
             * Specifies the failoverMode property: The link failover mode - can be Manual if intended to be used for
             * two-way failover with a supported SQL Server, or None for one-way failover to Azure..
             * 
             * @param failoverMode The link failover mode - can be Manual if intended to be used for two-way failover
             * with a supported SQL Server, or None for one-way failover to Azure.
             * @return the next definition stage.
             */
            Update withFailoverMode(FailoverModeType failoverMode);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify seedingMode.
         */
        interface WithSeedingMode {
            /**
             * Specifies the seedingMode property: Database seeding mode – can be Automatic (default), or Manual for
             * supported scenarios..
             * 
             * @param seedingMode Database seeding mode – can be Automatic (default), or Manual for supported scenarios.
             * @return the next definition stage.
             */
            Update withSeedingMode(SeedingModeType seedingMode);
        }

        /**
         * The stage of the DistributedAvailabilityGroup update allowing to specify databases.
         */
        interface WithDatabases {
            /**
             * Specifies the databases property: Databases in the distributed availability group.
             * 
             * @param databases Databases in the distributed availability group.
             * @return the next definition stage.
             */
            Update withDatabases(List<DistributedAvailabilityGroupDatabase> databases);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DistributedAvailabilityGroup refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DistributedAvailabilityGroup refresh(Context context);

    /**
     * Performs requested failover type in this distributed availability group.
     * 
     * @param parameters The distributed availability group failover request parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return distributed availability group between box and Sql Managed Instance.
     */
    DistributedAvailabilityGroup failover(DistributedAvailabilityGroupsFailoverRequest parameters);

    /**
     * Performs requested failover type in this distributed availability group.
     * 
     * @param parameters The distributed availability group failover request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return distributed availability group between box and Sql Managed Instance.
     */
    DistributedAvailabilityGroup failover(DistributedAvailabilityGroupsFailoverRequest parameters, Context context);

    /**
     * Sets the role for managed instance in a distributed availability group.
     * 
     * @param parameters The distributed availability group set role request parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return distributed availability group between box and Sql Managed Instance.
     */
    DistributedAvailabilityGroup setRole(DistributedAvailabilityGroupSetRole parameters);

    /**
     * Sets the role for managed instance in a distributed availability group.
     * 
     * @param parameters The distributed availability group set role request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return distributed availability group between box and Sql Managed Instance.
     */
    DistributedAvailabilityGroup setRole(DistributedAvailabilityGroupSetRole parameters, Context context);
}

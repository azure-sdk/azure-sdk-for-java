// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.generated;

import com.azure.resourcemanager.sql.generated.models.DistributedAvailabilityGroupDatabase;
import com.azure.resourcemanager.sql.generated.models.FailoverModeType;
import com.azure.resourcemanager.sql.generated.models.LinkRole;
import com.azure.resourcemanager.sql.generated.models.SeedingModeType;
import java.util.Arrays;

/**
 * Samples for DistributedAvailabilityGroups CreateOrUpdate.
 */
public final class DistributedAvailabilityGroupsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2023-08-01-preview/examples/DistributedAvailabilityGroupsCreateMin.json
     */
    /**
     * Sample code: Create a distributed availability group with minimal properties.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void createADistributedAvailabilityGroupWithMinimalProperties(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager.distributedAvailabilityGroups()
            .define("dag")
            .withExistingManagedInstance("testrg", "testcl")
            .withPartnerAvailabilityGroupName("BoxLocalAg1")
            .withPartnerEndpoint("TCP://SERVER:7022")
            .withInstanceAvailabilityGroupName("testcl")
            .withDatabases(Arrays.asList(new DistributedAvailabilityGroupDatabase().withDatabaseName("testdb")))
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2023-08-01-preview/examples/DistributedAvailabilityGroupsCreateMax.json
     */
    /**
     * Sample code: Create a distributed availability group with all properties.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void createADistributedAvailabilityGroupWithAllProperties(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager.distributedAvailabilityGroups()
            .define("dag")
            .withExistingManagedInstance("testrg", "testcl")
            .withPartnerAvailabilityGroupName("BoxLocalAg1")
            .withPartnerEndpoint("TCP://SERVER:7022")
            .withInstanceLinkRole(LinkRole.PRIMARY)
            .withInstanceAvailabilityGroupName("testcl")
            .withFailoverMode(FailoverModeType.NONE)
            .withSeedingMode(SeedingModeType.AUTOMATIC)
            .withDatabases(Arrays.asList(new DistributedAvailabilityGroupDatabase().withDatabaseName("testdb")))
            .create();
    }
}

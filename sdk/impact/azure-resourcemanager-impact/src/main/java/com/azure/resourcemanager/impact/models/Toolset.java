// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.impact.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * List of azure interfaces.
 */
public final class Toolset extends ExpandableStringEnum<Toolset> {
    /**
     * Static value Terraform for Toolset.
     */
    public static final Toolset TERRAFORM = fromString("Terraform");

    /**
     * Static value Puppet for Toolset.
     */
    public static final Toolset PUPPET = fromString("Puppet");

    /**
     * Static value Chef for Toolset.
     */
    public static final Toolset CHEF = fromString("Chef");

    /**
     * Static value SDK for Toolset.
     */
    public static final Toolset SDK = fromString("SDK");

    /**
     * Static value Ansible for Toolset.
     */
    public static final Toolset ANSIBLE = fromString("Ansible");

    /**
     * Static value ARM for Toolset.
     */
    public static final Toolset ARM = fromString("ARM");

    /**
     * Static value Portal for Toolset.
     */
    public static final Toolset PORTAL = fromString("Portal");

    /**
     * Static value Shell for Toolset.
     */
    public static final Toolset SHELL = fromString("Shell");

    /**
     * Static value Other for Toolset.
     */
    public static final Toolset OTHER = fromString("Other");

    /**
     * Creates a new instance of Toolset value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public Toolset() {
    }

    /**
     * Creates or finds a Toolset from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding Toolset.
     */
    public static Toolset fromString(String name) {
        return fromString(name, Toolset.class);
    }

    /**
     * Gets known Toolset values.
     * 
     * @return known Toolset values.
     */
    public static Collection<Toolset> values() {
        return values(Toolset.class);
    }
}

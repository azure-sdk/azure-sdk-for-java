// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.impact.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.impact.fluent.UploadServicesClient;
import com.azure.resourcemanager.impact.fluent.models.UploadTokenResponseInner;
import com.azure.resourcemanager.impact.models.UploadServices;
import com.azure.resourcemanager.impact.models.UploadTokenResponse;

public final class UploadServicesImpl implements UploadServices {
    private static final ClientLogger LOGGER = new ClientLogger(UploadServicesImpl.class);

    private final UploadServicesClient innerClient;

    private final com.azure.resourcemanager.impact.ImpactManager serviceManager;

    public UploadServicesImpl(UploadServicesClient innerClient,
        com.azure.resourcemanager.impact.ImpactManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<UploadTokenResponse> getUploadTokenWithResponse(Context context) {
        Response<UploadTokenResponseInner> inner = this.serviceClient().getUploadTokenWithResponse(context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new UploadTokenResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public UploadTokenResponse getUploadToken() {
        UploadTokenResponseInner inner = this.serviceClient().getUploadToken();
        if (inner != null) {
            return new UploadTokenResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private UploadServicesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.impact.ImpactManager manager() {
        return this.serviceManager;
    }
}

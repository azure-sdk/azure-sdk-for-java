// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.quota.fluent.GroupQuotasClient;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotasEntityInner;
import com.azure.resourcemanager.quota.models.GroupQuotas;
import com.azure.resourcemanager.quota.models.GroupQuotasEntity;

public final class GroupQuotasImpl implements GroupQuotas {
    private static final ClientLogger LOGGER = new ClientLogger(GroupQuotasImpl.class);

    private final GroupQuotasClient innerClient;

    private final com.azure.resourcemanager.quota.QuotaManager serviceManager;

    public GroupQuotasImpl(GroupQuotasClient innerClient, com.azure.resourcemanager.quota.QuotaManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public GroupQuotasEntity createOrUpdate(String mgId, String groupQuotaName) {
        GroupQuotasEntityInner inner = this.serviceClient().createOrUpdate(mgId, groupQuotaName);
        if (inner != null) {
            return new GroupQuotasEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public GroupQuotasEntity createOrUpdate(
        String mgId, String groupQuotaName, GroupQuotasEntityInner groupQuotaPutRequestBody, Context context) {
        GroupQuotasEntityInner inner =
            this.serviceClient().createOrUpdate(mgId, groupQuotaName, groupQuotaPutRequestBody, context);
        if (inner != null) {
            return new GroupQuotasEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public GroupQuotasEntity update(String mgId, String groupQuotaName) {
        GroupQuotasEntityInner inner = this.serviceClient().update(mgId, groupQuotaName);
        if (inner != null) {
            return new GroupQuotasEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public GroupQuotasEntity update(
        String mgId, String groupQuotaName, GroupQuotasEntityInner groupQuotasPatchRequestBody, Context context) {
        GroupQuotasEntityInner inner =
            this.serviceClient().update(mgId, groupQuotaName, groupQuotasPatchRequestBody, context);
        if (inner != null) {
            return new GroupQuotasEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<GroupQuotasEntity> getWithResponse(String mgId, String groupQuotaName, Context context) {
        Response<GroupQuotasEntityInner> inner = this.serviceClient().getWithResponse(mgId, groupQuotaName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new GroupQuotasEntityImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public GroupQuotasEntity get(String mgId, String groupQuotaName) {
        GroupQuotasEntityInner inner = this.serviceClient().get(mgId, groupQuotaName);
        if (inner != null) {
            return new GroupQuotasEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByResourceGroupWithResponse(String mgId, String groupQuotaName, Context context) {
        return this.serviceClient().deleteWithResponse(mgId, groupQuotaName, context);
    }

    public void deleteByResourceGroup(String mgId, String groupQuotaName) {
        this.serviceClient().delete(mgId, groupQuotaName);
    }

    public PagedIterable<GroupQuotasEntity> list(String mgId) {
        PagedIterable<GroupQuotasEntityInner> inner = this.serviceClient().list(mgId);
        return Utils.mapPage(inner, inner1 -> new GroupQuotasEntityImpl(inner1, this.manager()));
    }

    public PagedIterable<GroupQuotasEntity> list(String mgId, Context context) {
        PagedIterable<GroupQuotasEntityInner> inner = this.serviceClient().list(mgId, context);
        return Utils.mapPage(inner, inner1 -> new GroupQuotasEntityImpl(inner1, this.manager()));
    }

    private GroupQuotasClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.quota.QuotaManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.quota.fluent.GroupQuotaSubscriptionQuotaAllocationRequestsClient;
import com.azure.resourcemanager.quota.fluent.models.SubscriptionQuotaAllocationRequestInner;
import com.azure.resourcemanager.quota.models.GroupQuotaSubscriptionQuotaAllocationRequests;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocationRequest;

public final class GroupQuotaSubscriptionQuotaAllocationRequestsImpl
    implements GroupQuotaSubscriptionQuotaAllocationRequests {
    private static final ClientLogger LOGGER =
        new ClientLogger(GroupQuotaSubscriptionQuotaAllocationRequestsImpl.class);

    private final GroupQuotaSubscriptionQuotaAllocationRequestsClient innerClient;

    private final com.azure.resourcemanager.quota.QuotaManager serviceManager;

    public GroupQuotaSubscriptionQuotaAllocationRequestsImpl(
        GroupQuotaSubscriptionQuotaAllocationRequestsClient innerClient,
        com.azure.resourcemanager.quota.QuotaManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<SubscriptionQuotaAllocationRequest> getWithResponse(
        String mgId, String resourceProviderScope, String groupQuotaName, String allocationId, Context context) {
        Response<SubscriptionQuotaAllocationRequestInner> inner =
            this.serviceClient().getWithResponse(mgId, resourceProviderScope, groupQuotaName, allocationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SubscriptionQuotaAllocationRequestImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SubscriptionQuotaAllocationRequest get(
        String mgId, String resourceProviderScope, String groupQuotaName, String allocationId) {
        SubscriptionQuotaAllocationRequestInner inner =
            this.serviceClient().get(mgId, resourceProviderScope, groupQuotaName, allocationId);
        if (inner != null) {
            return new SubscriptionQuotaAllocationRequestImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<SubscriptionQuotaAllocationRequest> list(
        String mgId, String resourceProviderScope, String groupQuotaName) {
        PagedIterable<SubscriptionQuotaAllocationRequestInner> inner =
            this.serviceClient().list(mgId, resourceProviderScope, groupQuotaName);
        return Utils.mapPage(inner, inner1 -> new SubscriptionQuotaAllocationRequestImpl(inner1, this.manager()));
    }

    public PagedIterable<SubscriptionQuotaAllocationRequest> list(
        String mgId, String resourceProviderScope, String groupQuotaName, Context context) {
        PagedIterable<SubscriptionQuotaAllocationRequestInner> inner =
            this.serviceClient().list(mgId, resourceProviderScope, groupQuotaName, context);
        return Utils.mapPage(inner, inner1 -> new SubscriptionQuotaAllocationRequestImpl(inner1, this.manager()));
    }

    private GroupQuotaSubscriptionQuotaAllocationRequestsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.quota.QuotaManager manager() {
        return this.serviceManager;
    }
}

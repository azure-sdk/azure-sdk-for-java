// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Resource definition with the requested quota. */
@Fluent
public final class ResourceBaseRequest {
    /*
     * The resource name, such as SKU name.
     */
    @JsonProperty(value = "resourceName")
    private String resourceName;

    /*
     * Quota requested for the resource.
     */
    @JsonProperty(value = "limits")
    private Long limits;

    /*
     * Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond,
     * BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages .
     * Different RPs may have different units, Count, type as int64 should work for most of the integer values.
     */
    @JsonProperty(value = "unit", access = JsonProperty.Access.WRITE_ONLY)
    private String unit;

    /** Creates an instance of ResourceBaseRequest class. */
    public ResourceBaseRequest() {
    }

    /**
     * Get the resourceName property: The resource name, such as SKU name.
     *
     * @return the resourceName value.
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * Set the resourceName property: The resource name, such as SKU name.
     *
     * @param resourceName the resourceName value to set.
     * @return the ResourceBaseRequest object itself.
     */
    public ResourceBaseRequest withResourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }

    /**
     * Get the limits property: Quota requested for the resource.
     *
     * @return the limits value.
     */
    public Long limits() {
        return this.limits;
    }

    /**
     * Set the limits property: Quota requested for the resource.
     *
     * @param limits the limits value to set.
     * @return the ResourceBaseRequest object itself.
     */
    public ResourceBaseRequest withLimits(Long limits) {
        this.limits = limits;
        return this;
    }

    /**
     * Get the unit property: Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds,
     * Percent, CountPerSecond, BytesPerSecond. Based on -
     * https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have
     * different units, Count, type as int64 should work for most of the integer values.
     *
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

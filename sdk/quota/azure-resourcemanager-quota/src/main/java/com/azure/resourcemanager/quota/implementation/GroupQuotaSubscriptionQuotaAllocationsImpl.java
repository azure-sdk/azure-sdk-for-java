// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.quota.fluent.GroupQuotaSubscriptionQuotaAllocationsClient;
import com.azure.resourcemanager.quota.fluent.models.SubscriptionQuotaAllocationsInner;
import com.azure.resourcemanager.quota.models.GroupQuotaSubscriptionQuotaAllocations;
import com.azure.resourcemanager.quota.models.SubscriptionQuotaAllocations;

public final class GroupQuotaSubscriptionQuotaAllocationsImpl implements GroupQuotaSubscriptionQuotaAllocations {
    private static final ClientLogger LOGGER = new ClientLogger(GroupQuotaSubscriptionQuotaAllocationsImpl.class);

    private final GroupQuotaSubscriptionQuotaAllocationsClient innerClient;

    private final com.azure.resourcemanager.quota.QuotaManager serviceManager;

    public GroupQuotaSubscriptionQuotaAllocationsImpl(GroupQuotaSubscriptionQuotaAllocationsClient innerClient,
        com.azure.resourcemanager.quota.QuotaManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SubscriptionQuotaAllocations> list(String managementGroupId, String groupQuotaName,
        String filter) {
        PagedIterable<SubscriptionQuotaAllocationsInner> inner
            = this.serviceClient().list(managementGroupId, groupQuotaName, filter);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new SubscriptionQuotaAllocationsImpl(inner1, this.manager()));
    }

    public PagedIterable<SubscriptionQuotaAllocations> list(String managementGroupId, String groupQuotaName,
        String filter, Context context) {
        PagedIterable<SubscriptionQuotaAllocationsInner> inner
            = this.serviceClient().list(managementGroupId, groupQuotaName, filter, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new SubscriptionQuotaAllocationsImpl(inner1, this.manager()));
    }

    public ProxyResource createOrUpdate(String managementGroupId, String groupQuotaName, String resourceName,
        SubscriptionQuotaAllocationsInner allocateQuotaRequest) {
        return this.serviceClient().createOrUpdate(managementGroupId, groupQuotaName, resourceName,
            allocateQuotaRequest);
    }

    public ProxyResource createOrUpdate(String managementGroupId, String groupQuotaName, String resourceName,
        SubscriptionQuotaAllocationsInner allocateQuotaRequest, Context context) {
        return this.serviceClient().createOrUpdate(managementGroupId, groupQuotaName, resourceName,
            allocateQuotaRequest, context);
    }

    public SubscriptionQuotaAllocations update(String managementGroupId, String groupQuotaName, String resourceName,
        SubscriptionQuotaAllocationsInner allocateQuotaRequest) {
        SubscriptionQuotaAllocationsInner inner
            = this.serviceClient().update(managementGroupId, groupQuotaName, resourceName, allocateQuotaRequest);
        if (inner != null) {
            return new SubscriptionQuotaAllocationsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SubscriptionQuotaAllocations update(String managementGroupId, String groupQuotaName, String resourceName,
        SubscriptionQuotaAllocationsInner allocateQuotaRequest, Context context) {
        SubscriptionQuotaAllocationsInner inner = this.serviceClient().update(managementGroupId, groupQuotaName,
            resourceName, allocateQuotaRequest, context);
        if (inner != null) {
            return new SubscriptionQuotaAllocationsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SubscriptionQuotaAllocations> getWithResponse(String managementGroupId, String groupQuotaName,
        String resourceName, String filter, Context context) {
        Response<SubscriptionQuotaAllocationsInner> inner
            = this.serviceClient().getWithResponse(managementGroupId, groupQuotaName, resourceName, filter, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SubscriptionQuotaAllocationsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SubscriptionQuotaAllocations get(String managementGroupId, String groupQuotaName, String resourceName,
        String filter) {
        SubscriptionQuotaAllocationsInner inner
            = this.serviceClient().get(managementGroupId, groupQuotaName, resourceName, filter);
        if (inner != null) {
            return new SubscriptionQuotaAllocationsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private GroupQuotaSubscriptionQuotaAllocationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.quota.QuotaManager manager() {
        return this.serviceManager;
    }
}

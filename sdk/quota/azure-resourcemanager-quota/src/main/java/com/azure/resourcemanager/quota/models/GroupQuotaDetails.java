// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Group Quota details. */
@Fluent
public final class GroupQuotaDetails {
    /*
     * The current Group Quota Limit at the parentId level.
     */
    @JsonProperty(value = "limit")
    private Long limit;

    /*
     * Any comment related to quota request.
     */
    @JsonProperty(value = "comment")
    private String comment;

    /*
     * Name of the resource provided by the resource Provider. This property is already included in the request URI, so
     * it is a readonly property returned in the response.
     */
    @JsonProperty(value = "name")
    private GroupQuotaDetailsName name;

    /*
     * The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET
     * response in the request body of your PUT operation.
     */
    @JsonProperty(value = "unit", access = JsonProperty.Access.WRITE_ONLY)
    private String unit;

    /*
     * The available Group Quota Limit at the MG level. This Group quota can be assigned to subscription(s).
     */
    @JsonProperty(value = "availableLimit", access = JsonProperty.Access.WRITE_ONLY)
    private Long availableLimit;

    /*
     * Assigned Group Quota to subscriptions.
     */
    @JsonProperty(value = "assignedToSubscriptions", access = JsonProperty.Access.WRITE_ONLY)
    private List<AssignedToSubscription> assignedToSubscriptions;

    /*
     * Request status.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private RequestState provisioningState;

    /** Creates an instance of GroupQuotaDetails class. */
    public GroupQuotaDetails() {
    }

    /**
     * Get the limit property: The current Group Quota Limit at the parentId level.
     *
     * @return the limit value.
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Set the limit property: The current Group Quota Limit at the parentId level.
     *
     * @param limit the limit value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withLimit(Long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the comment property: Any comment related to quota request.
     *
     * @return the comment value.
     */
    public String comment() {
        return this.comment;
    }

    /**
     * Set the comment property: Any comment related to quota request.
     *
     * @param comment the comment value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withComment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Get the name property: Name of the resource provided by the resource Provider. This property is already included
     * in the request URI, so it is a readonly property returned in the response.
     *
     * @return the name value.
     */
    public GroupQuotaDetailsName name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the resource provided by the resource Provider. This property is already included
     * in the request URI, so it is a readonly property returned in the response.
     *
     * @param name the name value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withName(GroupQuotaDetailsName name) {
        this.name = name;
        return this;
    }

    /**
     * Get the unit property: The usages units, such as Count and Bytes. When requesting quota, use the **unit** value
     * returned in the GET response in the request body of your PUT operation.
     *
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Get the availableLimit property: The available Group Quota Limit at the MG level. This Group quota can be
     * assigned to subscription(s).
     *
     * @return the availableLimit value.
     */
    public Long availableLimit() {
        return this.availableLimit;
    }

    /**
     * Get the assignedToSubscriptions property: Assigned Group Quota to subscriptions.
     *
     * @return the assignedToSubscriptions value.
     */
    public List<AssignedToSubscription> assignedToSubscriptions() {
        return this.assignedToSubscriptions;
    }

    /**
     * Get the provisioningState property: Request status.
     *
     * @return the provisioningState value.
     */
    public RequestState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() != null) {
            name().validate();
        }
        if (assignedToSubscriptions() != null) {
            assignedToSubscriptions().forEach(e -> e.validate());
        }
    }
}

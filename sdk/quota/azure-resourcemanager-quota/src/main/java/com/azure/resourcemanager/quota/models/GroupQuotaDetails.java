// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.quota.fluent.models.GroupQuotaDetailsName;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Group Quota details.
 */
@Fluent
public final class GroupQuotaDetails {
    /*
     * ResourceProviderScope for the quota request. Format: /providers/{ResourceProviderName}/locations/{Azure region}
     * Example: /providers/{Microsoft.Compute}/locations/{eastus}. Please replace the ResourceProviderName, Azure
     * region as per the requested resource.
     */
    @JsonProperty(value = "resourceProviderScope")
    private String resourceProviderScope;

    /*
     * The current Group Quota Limit at the parentId level.
     */
    @JsonProperty(value = "limit")
    private Long limit;

    /*
     * Any comment related to quota request.
     */
    @JsonProperty(value = "comment")
    private String comment;

    /*
     * Name of the resource provided by the resource provider. This property is already included in the request URI, so
     * it is a readonly property returned in the response.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private GroupQuotaDetailsName innerName;

    /*
     * The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET
     * response in the request body of your PUT operation.
     */
    @JsonProperty(value = "unit", access = JsonProperty.Access.WRITE_ONLY)
    private String unit;

    /*
     * The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).
     */
    @JsonProperty(value = "availableLimit", access = JsonProperty.Access.WRITE_ONLY)
    private Long availableLimit;

    /*
     * Allocated Group Quota to subscriptions.
     */
    @JsonProperty(value = "allocatedToSubscriptions", access = JsonProperty.Access.WRITE_ONLY)
    private List<AllocatedToSubscription> allocatedToSubscriptions;

    /*
     * Request status.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private RequestState provisioningState;

    /**
     * Creates an instance of GroupQuotaDetails class.
     */
    public GroupQuotaDetails() {
    }

    /**
     * Get the resourceProviderScope property: ResourceProviderScope for the quota request. Format:
     * /providers/{ResourceProviderName}/locations/{Azure region} Example:
     * /providers/{Microsoft.Compute}/locations/{eastus}. Please replace the ResourceProviderName, Azure region as per
     * the requested resource.
     * 
     * @return the resourceProviderScope value.
     */
    public String resourceProviderScope() {
        return this.resourceProviderScope;
    }

    /**
     * Set the resourceProviderScope property: ResourceProviderScope for the quota request. Format:
     * /providers/{ResourceProviderName}/locations/{Azure region} Example:
     * /providers/{Microsoft.Compute}/locations/{eastus}. Please replace the ResourceProviderName, Azure region as per
     * the requested resource.
     * 
     * @param resourceProviderScope the resourceProviderScope value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withResourceProviderScope(String resourceProviderScope) {
        this.resourceProviderScope = resourceProviderScope;
        return this;
    }

    /**
     * Get the limit property: The current Group Quota Limit at the parentId level.
     * 
     * @return the limit value.
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Set the limit property: The current Group Quota Limit at the parentId level.
     * 
     * @param limit the limit value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withLimit(Long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the comment property: Any comment related to quota request.
     * 
     * @return the comment value.
     */
    public String comment() {
        return this.comment;
    }

    /**
     * Set the comment property: Any comment related to quota request.
     * 
     * @param comment the comment value to set.
     * @return the GroupQuotaDetails object itself.
     */
    public GroupQuotaDetails withComment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Get the innerName property: Name of the resource provided by the resource provider. This property is already
     * included in the request URI, so it is a readonly property returned in the response.
     * 
     * @return the innerName value.
     */
    private GroupQuotaDetailsName innerName() {
        return this.innerName;
    }

    /**
     * Get the unit property: The usages units, such as Count and Bytes. When requesting quota, use the **unit** value
     * returned in the GET response in the request body of your PUT operation.
     * 
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Get the availableLimit property: The available Group Quota Limit at the MG level. This Group quota can be
     * allocated to subscription(s).
     * 
     * @return the availableLimit value.
     */
    public Long availableLimit() {
        return this.availableLimit;
    }

    /**
     * Get the allocatedToSubscriptions property: Allocated Group Quota to subscriptions.
     * 
     * @return the allocatedToSubscriptions value.
     */
    public List<AllocatedToSubscription> allocatedToSubscriptions() {
        return this.allocatedToSubscriptions;
    }

    /**
     * Get the provisioningState property: Request status.
     * 
     * @return the provisioningState value.
     */
    public RequestState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the value property: Resource name.
     * 
     * @return the value value.
     */
    public String value() {
        return this.innerName() == null ? null : this.innerName().value();
    }

    /**
     * Get the localizedValue property: Resource display name.
     * 
     * @return the localizedValue value.
     */
    public String localizedValue() {
        return this.innerName() == null ? null : this.innerName().localizedValue();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerName() != null) {
            innerName().validate();
        }
        if (allocatedToSubscriptions() != null) {
            allocatedToSubscriptions().forEach(e -> e.validate());
        }
    }
}

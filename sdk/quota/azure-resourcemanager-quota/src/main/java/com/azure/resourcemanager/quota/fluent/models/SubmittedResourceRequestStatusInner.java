// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quota.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.quota.models.RequestState;
import com.azure.resourcemanager.quota.models.ResourceBaseRequest;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Status of a single GroupQuota request. */
@Fluent
public final class SubmittedResourceRequestStatusInner {
    /*
     * Requested Resource.
     */
    @JsonProperty(value = "requestedResource")
    private ResourceBaseRequest requestedResource;

    /*
     * Request status.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private RequestState status;

    /** Creates an instance of SubmittedResourceRequestStatusInner class. */
    public SubmittedResourceRequestStatusInner() {
    }

    /**
     * Get the requestedResource property: Requested Resource.
     *
     * @return the requestedResource value.
     */
    public ResourceBaseRequest requestedResource() {
        return this.requestedResource;
    }

    /**
     * Set the requestedResource property: Requested Resource.
     *
     * @param requestedResource the requestedResource value to set.
     * @return the SubmittedResourceRequestStatusInner object itself.
     */
    public SubmittedResourceRequestStatusInner withRequestedResource(ResourceBaseRequest requestedResource) {
        this.requestedResource = requestedResource;
        return this;
    }

    /**
     * Get the status property: Request status.
     *
     * @return the status value.
     */
    public RequestState status() {
        return this.status;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (requestedResource() != null) {
            requestedResource().validate();
        }
    }
}

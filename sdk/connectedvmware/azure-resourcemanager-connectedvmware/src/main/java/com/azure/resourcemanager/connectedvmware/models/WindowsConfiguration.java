// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.connectedvmware.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Specifies the Windows Configuration settings for the virtual machine.
 */
@Fluent
public final class WindowsConfiguration implements JsonSerializable<WindowsConfiguration> {
    /*
     * Sets full name of the owner of the vm.
     */
    private String fullName;

    /*
     * Sets org name to which the owner of the vm belongs.
     */
    private String orgName;

    /*
     * Sets domain name that vm should join.
     */
    private String domainName;

    /*
     * Sets domain username.
     */
    private String domainUsername;

    /*
     * Sets domain user password.
     */
    private String domainUserPassword;

    /*
     * Sets work group name that vm should join.
     */
    private String workGroupName;

    /*
     * Sets product id of the vm.
     */
    private String productId;

    /*
     * Sets a value indicating whether auto logon is enabled.
     */
    private Boolean autoLogon;

    /*
     * Sets auto logon count.
     */
    private Integer autoLogonCount;

    /*
     * Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". Time zone name correspond to time
     * zones listed at Microsoft Time Zone name
     * values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)).
     */
    private String timeZone;

    /*
     * Sets first logon commands
     */
    private List<String> firstLogonCommands;

    /**
     * Creates an instance of WindowsConfiguration class.
     */
    public WindowsConfiguration() {
    }

    /**
     * Get the fullName property: Sets full name of the owner of the vm.
     * 
     * @return the fullName value.
     */
    public String fullName() {
        return this.fullName;
    }

    /**
     * Set the fullName property: Sets full name of the owner of the vm.
     * 
     * @param fullName the fullName value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Get the orgName property: Sets org name to which the owner of the vm belongs.
     * 
     * @return the orgName value.
     */
    public String orgName() {
        return this.orgName;
    }

    /**
     * Set the orgName property: Sets org name to which the owner of the vm belongs.
     * 
     * @param orgName the orgName value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withOrgName(String orgName) {
        this.orgName = orgName;
        return this;
    }

    /**
     * Get the domainName property: Sets domain name that vm should join.
     * 
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: Sets domain name that vm should join.
     * 
     * @param domainName the domainName value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Get the domainUsername property: Sets domain username.
     * 
     * @return the domainUsername value.
     */
    public String domainUsername() {
        return this.domainUsername;
    }

    /**
     * Set the domainUsername property: Sets domain username.
     * 
     * @param domainUsername the domainUsername value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withDomainUsername(String domainUsername) {
        this.domainUsername = domainUsername;
        return this;
    }

    /**
     * Get the domainUserPassword property: Sets domain user password.
     * 
     * @return the domainUserPassword value.
     */
    public String domainUserPassword() {
        return this.domainUserPassword;
    }

    /**
     * Set the domainUserPassword property: Sets domain user password.
     * 
     * @param domainUserPassword the domainUserPassword value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withDomainUserPassword(String domainUserPassword) {
        this.domainUserPassword = domainUserPassword;
        return this;
    }

    /**
     * Get the workGroupName property: Sets work group name that vm should join.
     * 
     * @return the workGroupName value.
     */
    public String workGroupName() {
        return this.workGroupName;
    }

    /**
     * Set the workGroupName property: Sets work group name that vm should join.
     * 
     * @param workGroupName the workGroupName value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withWorkGroupName(String workGroupName) {
        this.workGroupName = workGroupName;
        return this;
    }

    /**
     * Get the productId property: Sets product id of the vm.
     * 
     * @return the productId value.
     */
    public String productId() {
        return this.productId;
    }

    /**
     * Set the productId property: Sets product id of the vm.
     * 
     * @param productId the productId value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withProductId(String productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Get the autoLogon property: Sets a value indicating whether auto logon is enabled.
     * 
     * @return the autoLogon value.
     */
    public Boolean autoLogon() {
        return this.autoLogon;
    }

    /**
     * Set the autoLogon property: Sets a value indicating whether auto logon is enabled.
     * 
     * @param autoLogon the autoLogon value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withAutoLogon(Boolean autoLogon) {
        this.autoLogon = autoLogon;
        return this;
    }

    /**
     * Get the autoLogonCount property: Sets auto logon count.
     * 
     * @return the autoLogonCount value.
     */
    public Integer autoLogonCount() {
        return this.autoLogonCount;
    }

    /**
     * Set the autoLogonCount property: Sets auto logon count.
     * 
     * @param autoLogonCount the autoLogonCount value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withAutoLogonCount(Integer autoLogonCount) {
        this.autoLogonCount = autoLogonCount;
        return this;
    }

    /**
     * Get the timeZone property: Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". Time
     * zone name correspond to time zones listed at Microsoft Time Zone name
     * values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)).
     * 
     * @return the timeZone value.
     */
    public String timeZone() {
        return this.timeZone;
    }

    /**
     * Set the timeZone property: Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". Time
     * zone name correspond to time zones listed at Microsoft Time Zone name
     * values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)).
     * 
     * @param timeZone the timeZone value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }

    /**
     * Get the firstLogonCommands property: Sets first logon commands.
     * 
     * @return the firstLogonCommands value.
     */
    public List<String> firstLogonCommands() {
        return this.firstLogonCommands;
    }

    /**
     * Set the firstLogonCommands property: Sets first logon commands.
     * 
     * @param firstLogonCommands the firstLogonCommands value to set.
     * @return the WindowsConfiguration object itself.
     */
    public WindowsConfiguration withFirstLogonCommands(List<String> firstLogonCommands) {
        this.firstLogonCommands = firstLogonCommands;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("fullName", this.fullName);
        jsonWriter.writeStringField("orgName", this.orgName);
        jsonWriter.writeStringField("domainName", this.domainName);
        jsonWriter.writeStringField("domainUsername", this.domainUsername);
        jsonWriter.writeStringField("domainUserPassword", this.domainUserPassword);
        jsonWriter.writeStringField("workGroupName", this.workGroupName);
        jsonWriter.writeStringField("productId", this.productId);
        jsonWriter.writeBooleanField("autoLogon", this.autoLogon);
        jsonWriter.writeNumberField("autoLogonCount", this.autoLogonCount);
        jsonWriter.writeStringField("timeZone", this.timeZone);
        jsonWriter.writeArrayField("firstLogonCommands", this.firstLogonCommands,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WindowsConfiguration from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WindowsConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WindowsConfiguration.
     */
    public static WindowsConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WindowsConfiguration deserializedWindowsConfiguration = new WindowsConfiguration();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("fullName".equals(fieldName)) {
                    deserializedWindowsConfiguration.fullName = reader.getString();
                } else if ("orgName".equals(fieldName)) {
                    deserializedWindowsConfiguration.orgName = reader.getString();
                } else if ("domainName".equals(fieldName)) {
                    deserializedWindowsConfiguration.domainName = reader.getString();
                } else if ("domainUsername".equals(fieldName)) {
                    deserializedWindowsConfiguration.domainUsername = reader.getString();
                } else if ("domainUserPassword".equals(fieldName)) {
                    deserializedWindowsConfiguration.domainUserPassword = reader.getString();
                } else if ("workGroupName".equals(fieldName)) {
                    deserializedWindowsConfiguration.workGroupName = reader.getString();
                } else if ("productId".equals(fieldName)) {
                    deserializedWindowsConfiguration.productId = reader.getString();
                } else if ("autoLogon".equals(fieldName)) {
                    deserializedWindowsConfiguration.autoLogon = reader.getNullable(JsonReader::getBoolean);
                } else if ("autoLogonCount".equals(fieldName)) {
                    deserializedWindowsConfiguration.autoLogonCount = reader.getNullable(JsonReader::getInt);
                } else if ("timeZone".equals(fieldName)) {
                    deserializedWindowsConfiguration.timeZone = reader.getString();
                } else if ("firstLogonCommands".equals(fieldName)) {
                    List<String> firstLogonCommands = reader.readArray(reader1 -> reader1.getString());
                    deserializedWindowsConfiguration.firstLogonCommands = firstLogonCommands;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWindowsConfiguration;
        });
    }
}

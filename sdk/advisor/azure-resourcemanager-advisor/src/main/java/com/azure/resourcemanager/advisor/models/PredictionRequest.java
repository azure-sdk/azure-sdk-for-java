// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.advisor.fluent.models.PredictionRequestProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Parameters for predict recommendation. */
@Fluent
public final class PredictionRequest {
    /*
     * Request properties for prediction recommendation.
     */
    @JsonProperty(value = "properties")
    private PredictionRequestProperties innerProperties;

    /**
     * Get the innerProperties property: Request properties for prediction recommendation.
     *
     * @return the innerProperties value.
     */
    private PredictionRequestProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the predictionType property: Type of the prediction.
     *
     * @return the predictionType value.
     */
    public PredictionType predictionType() {
        return this.innerProperties() == null ? null : this.innerProperties().predictionType();
    }

    /**
     * Set the predictionType property: Type of the prediction.
     *
     * @param predictionType the predictionType value to set.
     * @return the PredictionRequest object itself.
     */
    public PredictionRequest withPredictionType(PredictionType predictionType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionRequestProperties();
        }
        this.innerProperties().withPredictionType(predictionType);
        return this;
    }

    /**
     * Get the extendedProperties property: Extended properties are arguments specific for each prediction type.
     *
     * @return the extendedProperties value.
     */
    public Object extendedProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().extendedProperties();
    }

    /**
     * Set the extendedProperties property: Extended properties are arguments specific for each prediction type.
     *
     * @param extendedProperties the extendedProperties value to set.
     * @return the PredictionRequest object itself.
     */
    public PredictionRequest withExtendedProperties(Object extendedProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionRequestProperties();
        }
        this.innerProperties().withExtendedProperties(extendedProperties);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

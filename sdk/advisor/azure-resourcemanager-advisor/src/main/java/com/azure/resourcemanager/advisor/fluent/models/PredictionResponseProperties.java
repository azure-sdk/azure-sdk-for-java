// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.advisor.models.Category;
import com.azure.resourcemanager.advisor.models.Impact;
import com.azure.resourcemanager.advisor.models.PredictionType;
import com.azure.resourcemanager.advisor.models.ShortDescription;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Properties of the prediction. */
@Fluent
public final class PredictionResponseProperties {
    /*
     * Extended properties
     */
    @JsonProperty(value = "extendedProperties")
    private Object extendedProperties;

    /*
     * Type of the prediction.
     */
    @JsonProperty(value = "predictionType")
    private PredictionType predictionType;

    /*
     * The category of the recommendation.
     */
    @JsonProperty(value = "category")
    private Category category;

    /*
     * The business impact of the recommendation.
     */
    @JsonProperty(value = "impact")
    private Impact impact;

    /*
     * The resource type identified by Advisor.
     */
    @JsonProperty(value = "impactedField")
    private String impactedField;

    /*
     * The most recent time that Advisor checked the validity of the recommendation.
     */
    @JsonProperty(value = "lastUpdated")
    private OffsetDateTime lastUpdated;

    /*
     * A summary of the recommendation.
     */
    @JsonProperty(value = "shortDescription")
    private ShortDescription shortDescription;

    /** Creates an instance of PredictionResponseProperties class. */
    public PredictionResponseProperties() {
    }

    /**
     * Get the extendedProperties property: Extended properties.
     *
     * @return the extendedProperties value.
     */
    public Object extendedProperties() {
        return this.extendedProperties;
    }

    /**
     * Set the extendedProperties property: Extended properties.
     *
     * @param extendedProperties the extendedProperties value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withExtendedProperties(Object extendedProperties) {
        this.extendedProperties = extendedProperties;
        return this;
    }

    /**
     * Get the predictionType property: Type of the prediction.
     *
     * @return the predictionType value.
     */
    public PredictionType predictionType() {
        return this.predictionType;
    }

    /**
     * Set the predictionType property: Type of the prediction.
     *
     * @param predictionType the predictionType value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withPredictionType(PredictionType predictionType) {
        this.predictionType = predictionType;
        return this;
    }

    /**
     * Get the category property: The category of the recommendation.
     *
     * @return the category value.
     */
    public Category category() {
        return this.category;
    }

    /**
     * Set the category property: The category of the recommendation.
     *
     * @param category the category value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withCategory(Category category) {
        this.category = category;
        return this;
    }

    /**
     * Get the impact property: The business impact of the recommendation.
     *
     * @return the impact value.
     */
    public Impact impact() {
        return this.impact;
    }

    /**
     * Set the impact property: The business impact of the recommendation.
     *
     * @param impact the impact value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withImpact(Impact impact) {
        this.impact = impact;
        return this;
    }

    /**
     * Get the impactedField property: The resource type identified by Advisor.
     *
     * @return the impactedField value.
     */
    public String impactedField() {
        return this.impactedField;
    }

    /**
     * Set the impactedField property: The resource type identified by Advisor.
     *
     * @param impactedField the impactedField value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withImpactedField(String impactedField) {
        this.impactedField = impactedField;
        return this;
    }

    /**
     * Get the lastUpdated property: The most recent time that Advisor checked the validity of the recommendation.
     *
     * @return the lastUpdated value.
     */
    public OffsetDateTime lastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Set the lastUpdated property: The most recent time that Advisor checked the validity of the recommendation.
     *
     * @param lastUpdated the lastUpdated value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get the shortDescription property: A summary of the recommendation.
     *
     * @return the shortDescription value.
     */
    public ShortDescription shortDescription() {
        return this.shortDescription;
    }

    /**
     * Set the shortDescription property: A summary of the recommendation.
     *
     * @param shortDescription the shortDescription value to set.
     * @return the PredictionResponseProperties object itself.
     */
    public PredictionResponseProperties withShortDescription(ShortDescription shortDescription) {
        this.shortDescription = shortDescription;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (shortDescription() != null) {
            shortDescription().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of TriageRecommendations.
 */
public interface TriageRecommendations {
    /**
     * Get list of recommendations for an existing resiliency review id.
     * 
     * Get list of recommendations for an existing Azure Advisor Resiliency Review Id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of recommendations for an existing Azure Advisor Resiliency Review Id as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriageRecommendation> list(String reviewId);

    /**
     * Get list of recommendations for an existing resiliency review id.
     * 
     * Get list of recommendations for an existing Azure Advisor Resiliency Review Id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param top The number of items to be included in the result.
     * @param skip The number of items to skip before starting to collect the result set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of recommendations for an existing Azure Advisor Resiliency Review Id as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<TriageRecommendation> list(String reviewId, Integer top, Integer skip, Context context);

    /**
     * Get an existing recommendation by id for an existing resiliency review id.
     * 
     * Get an existing recommendation by id for an existing Azure Advisor Resiliency Review Id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an existing recommendation by id for an existing Azure Advisor Resiliency Review Id along with
     * {@link Response}.
     */
    Response<TriageRecommendation> getWithResponse(String reviewId, String recommendationId, Context context);

    /**
     * Get an existing recommendation by id for an existing resiliency review id.
     * 
     * Get an existing recommendation by id for an existing Azure Advisor Resiliency Review Id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an existing recommendation by id for an existing Azure Advisor Resiliency Review Id.
     */
    TriageRecommendation get(String reviewId, String recommendationId);

    /**
     * Approve triage recommendation by id.
     * 
     * Approve a triage recommendation for a given id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> approveTriageRecommendationWithResponse(String reviewId, String recommendationId, Context context);

    /**
     * Approve triage recommendation by id.
     * 
     * Approve a triage recommendation for a given id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void approveTriageRecommendation(String reviewId, String recommendationId);

    /**
     * Reject existing triage recommendation by id.
     * 
     * Reject an existing triage recommendation for a given id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @param recommendationRejectBody JSON object that contains reason for rejecting triage recommendation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> rejectTriageRecommendationWithResponse(String reviewId, String recommendationId,
        RecommendationRejectBody recommendationRejectBody, Context context);

    /**
     * Reject existing triage recommendation by id.
     * 
     * Reject an existing triage recommendation for a given id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @param recommendationRejectBody JSON object that contains reason for rejecting triage recommendation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void rejectTriageRecommendation(String reviewId, String recommendationId,
        RecommendationRejectBody recommendationRejectBody);

    /**
     * Reset existing triage recommendation by id.
     * 
     * Reset an existing triage recommendation for a given id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> resetTriageRecommendationWithResponse(String reviewId, String recommendationId, Context context);

    /**
     * Reset existing triage recommendation by id.
     * 
     * Reset an existing triage recommendation for a given id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param recommendationId Existing triage recommendation id. This is a GUID-formatted string (e.g.
     * 00000000-0000-0000-0000-000000000000).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void resetTriageRecommendation(String reviewId, String recommendationId);
}

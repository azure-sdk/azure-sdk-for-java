// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ResiliencyReviews.
 */
public interface ResiliencyReviews {
    /**
     * Get list of Azure Advisor resiliency reviews.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Azure Advisor resiliency reviews as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ResiliencyReview> list();

    /**
     * Get list of Azure Advisor resiliency reviews.
     * 
     * @param top The number of items to be included in the result.
     * @param skip The number of items to skip before starting to collect the result set.
     * @param filter The filter to apply.&lt;br&gt;Filter can be applied to properties ['reviewStatus', 'reviewId'] with
     * operators ['eq', 'and', 'or'].&lt;br&gt;Example:&lt;br&gt;- $filter=reviewStatus eq 'New'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return list of Azure Advisor resiliency reviews as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ResiliencyReview> list(Integer top, Integer skip, String filter, Context context);

    /**
     * Get existing Azure Advisor resiliency review by id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return existing Azure Advisor resiliency review by id along with {@link Response}.
     */
    Response<ResiliencyReview> getWithResponse(String reviewId, Context context);

    /**
     * Get existing Azure Advisor resiliency review by id.
     * 
     * @param reviewId Existing review id. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return existing Azure Advisor resiliency review by id.
     */
    ResiliencyReview get(String reviewId);
}

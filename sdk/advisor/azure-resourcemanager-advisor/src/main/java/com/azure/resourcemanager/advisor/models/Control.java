// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The sub-category of the recommendation.
 */
public final class Control extends ExpandableStringEnum<Control> {
    /**
     * Static value HighAvailability for Control.
     */
    public static final Control HIGH_AVAILABILITY = fromString("HighAvailability");

    /**
     * Static value BusinessContinuity for Control.
     */
    public static final Control BUSINESS_CONTINUITY = fromString("BusinessContinuity");

    /**
     * Static value DisasterRecovery for Control.
     */
    public static final Control DISASTER_RECOVERY = fromString("DisasterRecovery");

    /**
     * Static value Scalability for Control.
     */
    public static final Control SCALABILITY = fromString("Scalability");

    /**
     * Static value MonitoringAndAlerting for Control.
     */
    public static final Control MONITORING_AND_ALERTING = fromString("MonitoringAndAlerting");

    /**
     * Static value ServiceUpgradeAndRetirement for Control.
     */
    public static final Control SERVICE_UPGRADE_AND_RETIREMENT = fromString("ServiceUpgradeAndRetirement");

    /**
     * Static value Other for Control.
     */
    public static final Control OTHER = fromString("Other");

    /**
     * Static value PrioritizedRecommendations for Control.
     */
    public static final Control PRIORITIZED_RECOMMENDATIONS = fromString("PrioritizedRecommendations");

    /**
     * Static value Personalized for Control.
     */
    public static final Control PERSONALIZED = fromString("Personalized");

    /**
     * Creates a new instance of Control value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public Control() {
    }

    /**
     * Creates or finds a Control from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding Control.
     */
    public static Control fromString(String name) {
        return fromString(name, Control.class);
    }

    /**
     * Gets known Control values.
     * 
     * @return known Control values.
     */
    public static Collection<Control> values() {
        return values(Control.class);
    }
}

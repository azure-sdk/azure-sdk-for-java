// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.advisor.models.Category;
import com.azure.resourcemanager.advisor.models.Impact;
import com.azure.resourcemanager.advisor.models.PredictionType;
import com.azure.resourcemanager.advisor.models.ShortDescription;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * Response used by predictions.
 */
@Fluent
public final class PredictionResponseInner implements JsonSerializable<PredictionResponseInner> {
    /*
     * The properties of the prediction.
     */
    private PredictionResponseProperties innerProperties;

    /**
     * Creates an instance of PredictionResponseInner class.
     */
    public PredictionResponseInner() {
    }

    /**
     * Get the innerProperties property: The properties of the prediction.
     * 
     * @return the innerProperties value.
     */
    private PredictionResponseProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the extendedProperties property: Extended properties.
     * 
     * @return the extendedProperties value.
     */
    public Map<String, Object> extendedProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().extendedProperties();
    }

    /**
     * Set the extendedProperties property: Extended properties.
     * 
     * @param extendedProperties the extendedProperties value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withExtendedProperties(Map<String, Object> extendedProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withExtendedProperties(extendedProperties);
        return this;
    }

    /**
     * Get the predictionType property: Type of the prediction.
     * 
     * @return the predictionType value.
     */
    public PredictionType predictionType() {
        return this.innerProperties() == null ? null : this.innerProperties().predictionType();
    }

    /**
     * Set the predictionType property: Type of the prediction.
     * 
     * @param predictionType the predictionType value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withPredictionType(PredictionType predictionType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withPredictionType(predictionType);
        return this;
    }

    /**
     * Get the category property: The category of the recommendation.
     * 
     * @return the category value.
     */
    public Category category() {
        return this.innerProperties() == null ? null : this.innerProperties().category();
    }

    /**
     * Set the category property: The category of the recommendation.
     * 
     * @param category the category value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withCategory(Category category) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withCategory(category);
        return this;
    }

    /**
     * Get the impact property: The business impact of the recommendation.
     * 
     * @return the impact value.
     */
    public Impact impact() {
        return this.innerProperties() == null ? null : this.innerProperties().impact();
    }

    /**
     * Set the impact property: The business impact of the recommendation.
     * 
     * @param impact the impact value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withImpact(Impact impact) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withImpact(impact);
        return this;
    }

    /**
     * Get the impactedField property: The resource type identified by Advisor.
     * 
     * @return the impactedField value.
     */
    public String impactedField() {
        return this.innerProperties() == null ? null : this.innerProperties().impactedField();
    }

    /**
     * Set the impactedField property: The resource type identified by Advisor.
     * 
     * @param impactedField the impactedField value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withImpactedField(String impactedField) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withImpactedField(impactedField);
        return this;
    }

    /**
     * Get the lastUpdated property: The most recent time that Advisor checked the validity of the recommendation.
     * 
     * @return the lastUpdated value.
     */
    public OffsetDateTime lastUpdated() {
        return this.innerProperties() == null ? null : this.innerProperties().lastUpdated();
    }

    /**
     * Set the lastUpdated property: The most recent time that Advisor checked the validity of the recommendation.
     * 
     * @param lastUpdated the lastUpdated value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withLastUpdated(OffsetDateTime lastUpdated) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withLastUpdated(lastUpdated);
        return this;
    }

    /**
     * Get the shortDescription property: A summary of the recommendation.
     * 
     * @return the shortDescription value.
     */
    public ShortDescription shortDescription() {
        return this.innerProperties() == null ? null : this.innerProperties().shortDescription();
    }

    /**
     * Set the shortDescription property: A summary of the recommendation.
     * 
     * @param shortDescription the shortDescription value to set.
     * @return the PredictionResponseInner object itself.
     */
    public PredictionResponseInner withShortDescription(ShortDescription shortDescription) {
        if (this.innerProperties() == null) {
            this.innerProperties = new PredictionResponseProperties();
        }
        this.innerProperties().withShortDescription(shortDescription);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PredictionResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PredictionResponseInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PredictionResponseInner.
     */
    public static PredictionResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PredictionResponseInner deserializedPredictionResponseInner = new PredictionResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedPredictionResponseInner.innerProperties = PredictionResponseProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPredictionResponseInner;
        });
    }
}

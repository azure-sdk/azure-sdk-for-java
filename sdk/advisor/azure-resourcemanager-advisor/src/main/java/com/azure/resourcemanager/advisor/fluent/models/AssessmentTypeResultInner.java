// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Advisor assessment type result data structure.
 */
@Fluent
public final class AssessmentTypeResultInner implements JsonSerializable<AssessmentTypeResultInner> {
    /*
     * Assessment Type Id
     */
    private String id;

    /*
     * Assessment Type Title
     */
    private String title;

    /*
     * Assessment Type Description
     */
    private String description;

    /*
     * Assessment Type Locale
     */
    private String locale;

    /*
     * Assessment Type Version
     */
    private String version;

    /**
     * Creates an instance of AssessmentTypeResultInner class.
     */
    public AssessmentTypeResultInner() {
    }

    /**
     * Get the id property: Assessment Type Id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Assessment Type Id.
     * 
     * @param id the id value to set.
     * @return the AssessmentTypeResultInner object itself.
     */
    public AssessmentTypeResultInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the title property: Assessment Type Title.
     * 
     * @return the title value.
     */
    public String title() {
        return this.title;
    }

    /**
     * Set the title property: Assessment Type Title.
     * 
     * @param title the title value to set.
     * @return the AssessmentTypeResultInner object itself.
     */
    public AssessmentTypeResultInner withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the description property: Assessment Type Description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Assessment Type Description.
     * 
     * @param description the description value to set.
     * @return the AssessmentTypeResultInner object itself.
     */
    public AssessmentTypeResultInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the locale property: Assessment Type Locale.
     * 
     * @return the locale value.
     */
    public String locale() {
        return this.locale;
    }

    /**
     * Set the locale property: Assessment Type Locale.
     * 
     * @param locale the locale value to set.
     * @return the AssessmentTypeResultInner object itself.
     */
    public AssessmentTypeResultInner withLocale(String locale) {
        this.locale = locale;
        return this;
    }

    /**
     * Get the version property: Assessment Type Version.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Assessment Type Version.
     * 
     * @param version the version value to set.
     * @return the AssessmentTypeResultInner object itself.
     */
    public AssessmentTypeResultInner withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("title", this.title);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("locale", this.locale);
        jsonWriter.writeStringField("version", this.version);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssessmentTypeResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssessmentTypeResultInner if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AssessmentTypeResultInner.
     */
    public static AssessmentTypeResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AssessmentTypeResultInner deserializedAssessmentTypeResultInner = new AssessmentTypeResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedAssessmentTypeResultInner.id = reader.getString();
                } else if ("title".equals(fieldName)) {
                    deserializedAssessmentTypeResultInner.title = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedAssessmentTypeResultInner.description = reader.getString();
                } else if ("locale".equals(fieldName)) {
                    deserializedAssessmentTypeResultInner.locale = reader.getString();
                } else if ("version".equals(fieldName)) {
                    deserializedAssessmentTypeResultInner.version = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAssessmentTypeResultInner;
        });
    }
}

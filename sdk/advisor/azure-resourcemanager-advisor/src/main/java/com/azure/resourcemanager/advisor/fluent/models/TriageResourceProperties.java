// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Triage resource properties.
 */
@Immutable
public final class TriageResourceProperties implements JsonSerializable<TriageResourceProperties> {
    /*
     * Unique identifier for the review resource this triageResource belongs to.
     */
    private String reviewId;

    /*
     * Unique identifier for the recommendation resource this triageResource belongs to.
     */
    private String recommendationId;

    /*
     * Unique identifier for the subscription resource this triageResource belongs to.
     */
    private String subscriptionId;

    /*
     * Name of the resource group this triageResource belongs to.
     */
    private String resourceGroup;

    /*
     * Type of resource this triageResource corresponds to e.g. "Cosmos DB".
     */
    private String resourceType;

    /*
     * Full Azure Resource Id path of the resource this triageResource corresponds to.
     */
    private String resourceId;

    /*
     * Name of the resource this triageResource corresponds to.
     */
    private String resourceName;

    /**
     * Creates an instance of TriageResourceProperties class.
     */
    public TriageResourceProperties() {
    }

    /**
     * Get the reviewId property: Unique identifier for the review resource this triageResource belongs to.
     * 
     * @return the reviewId value.
     */
    public String reviewId() {
        return this.reviewId;
    }

    /**
     * Get the recommendationId property: Unique identifier for the recommendation resource this triageResource belongs
     * to.
     * 
     * @return the recommendationId value.
     */
    public String recommendationId() {
        return this.recommendationId;
    }

    /**
     * Get the subscriptionId property: Unique identifier for the subscription resource this triageResource belongs to.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the resourceGroup property: Name of the resource group this triageResource belongs to.
     * 
     * @return the resourceGroup value.
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * Get the resourceType property: Type of resource this triageResource corresponds to e.g. "Cosmos DB".
     * 
     * @return the resourceType value.
     */
    public String resourceType() {
        return this.resourceType;
    }

    /**
     * Get the resourceId property: Full Azure Resource Id path of the resource this triageResource corresponds to.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Get the resourceName property: Name of the resource this triageResource corresponds to.
     * 
     * @return the resourceName value.
     */
    public String resourceName() {
        return this.resourceName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TriageResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TriageResourceProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TriageResourceProperties.
     */
    public static TriageResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TriageResourceProperties deserializedTriageResourceProperties = new TriageResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("reviewId".equals(fieldName)) {
                    deserializedTriageResourceProperties.reviewId = reader.getString();
                } else if ("recommendationId".equals(fieldName)) {
                    deserializedTriageResourceProperties.recommendationId = reader.getString();
                } else if ("subscriptionId".equals(fieldName)) {
                    deserializedTriageResourceProperties.subscriptionId = reader.getString();
                } else if ("resourceGroup".equals(fieldName)) {
                    deserializedTriageResourceProperties.resourceGroup = reader.getString();
                } else if ("resourceType".equals(fieldName)) {
                    deserializedTriageResourceProperties.resourceType = reader.getString();
                } else if ("resourceId".equals(fieldName)) {
                    deserializedTriageResourceProperties.resourceId = reader.getString();
                } else if ("resourceName".equals(fieldName)) {
                    deserializedTriageResourceProperties.resourceName = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTriageResourceProperties;
        });
    }
}

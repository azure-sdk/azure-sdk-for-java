// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.ai.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.ai.fluent.models.JitRequestDefinitionInner;
import com.azure.resourcemanager.ai.models.JitAuthorizationPolicies;
import com.azure.resourcemanager.ai.models.JitRequestDefinition;
import com.azure.resourcemanager.ai.models.JitRequestPatchable;
import com.azure.resourcemanager.ai.models.JitRequestState;
import com.azure.resourcemanager.ai.models.JitSchedulingPolicy;
import com.azure.resourcemanager.ai.models.ProvisioningState;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class JitRequestDefinitionImpl
    implements JitRequestDefinition, JitRequestDefinition.Definition, JitRequestDefinition.Update {
    private JitRequestDefinitionInner innerObject;

    private final com.azure.resourcemanager.ai.AiManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String applicationResourceId() {
        return this.innerModel().applicationResourceId();
    }

    public String publisherTenantId() {
        return this.innerModel().publisherTenantId();
    }

    public List<JitAuthorizationPolicies> authorizationPolicies() {
        List<JitAuthorizationPolicies> inner = this.innerModel().authorizationPolicies();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public JitSchedulingPolicy schedulingPolicy() {
        return this.innerModel().schedulingPolicy();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public JitRequestState requestState() {
        return this.innerModel().requestState();
    }

    public SystemData systemDataPropertiesSystemData() {
        return this.innerModel().systemDataPropertiesSystemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public JitRequestDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.ai.AiManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String jitRequestName;

    private String location;

    private JitRequestPatchable updateParameters;

    public JitRequestDefinitionImpl withExistingLocation(String resourceGroupName, String location) {
        this.resourceGroupName = resourceGroupName;
        this.location = location;
        return this;
    }

    public JitRequestDefinition create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .createOrUpdate(resourceGroupName, jitRequestName, location, this.innerModel(), Context.NONE);
        return this;
    }

    public JitRequestDefinition create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .createOrUpdate(resourceGroupName, jitRequestName, location, this.innerModel(), context);
        return this;
    }

    JitRequestDefinitionImpl(String name, com.azure.resourcemanager.ai.AiManager serviceManager) {
        this.innerObject = new JitRequestDefinitionInner();
        this.serviceManager = serviceManager;
        this.jitRequestName = name;
    }

    public JitRequestDefinitionImpl update() {
        this.updateParameters = new JitRequestPatchable();
        return this;
    }

    public JitRequestDefinition apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .updateWithResponse(resourceGroupName, jitRequestName, location, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public JitRequestDefinition apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .updateWithResponse(resourceGroupName, jitRequestName, location, updateParameters, context)
                .getValue();
        return this;
    }

    JitRequestDefinitionImpl(
        JitRequestDefinitionInner innerObject, com.azure.resourcemanager.ai.AiManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.jitRequestName = Utils.getValueFromIdByName(innerObject.id(), "jitRequests");
        this.location = Utils.getValueFromIdByName(innerObject.id(), "locations");
    }

    public JitRequestDefinition refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .getWithResponse(resourceGroupName, jitRequestName, location, Context.NONE)
                .getValue();
        return this;
    }

    public JitRequestDefinition refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getJitRequests()
                .getWithResponse(resourceGroupName, jitRequestName, location, context)
                .getValue();
        return this;
    }

    public JitRequestDefinitionImpl withApplicationResourceId(String applicationResourceId) {
        this.innerModel().withApplicationResourceId(applicationResourceId);
        return this;
    }

    public JitRequestDefinitionImpl withAuthorizationPolicies(List<JitAuthorizationPolicies> authorizationPolicies) {
        this.innerModel().withAuthorizationPolicies(authorizationPolicies);
        return this;
    }

    public JitRequestDefinitionImpl withSchedulingPolicy(JitSchedulingPolicy schedulingPolicy) {
        this.innerModel().withSchedulingPolicy(schedulingPolicy);
        return this;
    }

    public JitRequestDefinitionImpl withTags(Map<String, String> tags) {
        this.updateParameters.withTags(tags);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mixedreality.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of RemoteRenderingAccounts.
 */
public interface RemoteRenderingAccounts {
    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * List Remote Rendering Accounts by Subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to get resource collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemoteRenderingAccount> list();

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * List Remote Rendering Accounts by Subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to get resource collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemoteRenderingAccount> list(Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * List Resources by Resource Group.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to get resource collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemoteRenderingAccount> listByResourceGroup(String resourceGroupName);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * List Resources by Resource Group.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return result of the request to get resource collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RemoteRenderingAccount> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Delete a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Delete a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String accountName);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Retrieve a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remoteRenderingAccount Response along with {@link Response}.
     */
    Response<RemoteRenderingAccount> getByResourceGroupWithResponse(String resourceGroupName, String accountName,
        Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Retrieve a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remoteRenderingAccount Response.
     */
    RemoteRenderingAccount getByResourceGroup(String resourceGroupName, String accountName);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * List Both of the 2 Keys of a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return developer Keys of account along with {@link Response}.
     */
    Response<AccountKeys> listKeysWithResponse(String resourceGroupName, String accountName, Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * List Both of the 2 Keys of a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return developer Keys of account.
     */
    AccountKeys listKeys(String resourceGroupName, String accountName);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Regenerate specified Key of a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param regenerate Required information for key regeneration.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return developer Keys of account along with {@link Response}.
     */
    Response<AccountKeys> regenerateKeysWithResponse(String resourceGroupName, String accountName,
        AccountKeyRegenerateRequest regenerate, Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Regenerate specified Key of a Remote Rendering Account.
     * 
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param regenerate Required information for key regeneration.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return developer Keys of account.
     */
    AccountKeys regenerateKeys(String resourceGroupName, String accountName, AccountKeyRegenerateRequest regenerate);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Retrieve a Remote Rendering Account.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remoteRenderingAccount Response along with {@link Response}.
     */
    RemoteRenderingAccount getById(String id);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Retrieve a Remote Rendering Account.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return remoteRenderingAccount Response along with {@link Response}.
     */
    Response<RemoteRenderingAccount> getByIdWithResponse(String id, Context context);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Delete a Remote Rendering Account.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * &gt; [!NOTE]
     * &gt;
     * &gt; **Mixed Reality retirement**
     * &gt;
     * &gt; The Mixed Reality service is now deprecated and will be retired.
     * 
     * Delete a Remote Rendering Account.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new RemoteRenderingAccount resource.
     * 
     * @param name resource name.
     * @return the first stage of the new RemoteRenderingAccount definition.
     */
    RemoteRenderingAccount.DefinitionStages.Blank define(String name);
}

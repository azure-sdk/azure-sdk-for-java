// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.communication.jobrouter.models;

import com.azure.communication.jobrouter.implementation.JsonMergePatchHelper;
import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

/**
 * Describes a matching mode where matching worker to a job is suspended.
 */
@Fluent
public final class SuspendMode extends JobMatchingMode {

    /*
     * The type discriminator describing a kind of JobMatchingMode.
     */
    @Generated
    private String kind = "suspend";

    /**
     * Stores updated model property, the value is property name, not serialized name.
     */
    @Generated
    private final Set<String> updatedProperties = new HashSet<>();

    /**
     * Creates an instance of SuspendMode class.
     */
    @Generated
    public SuspendMode() {
    }

    /**
     * Get the kind property: The type discriminator describing a kind of JobMatchingMode.
     *
     * @return the kind value.
     */
    @Generated
    @Override
    public String getKind() {
        return this.kind;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        if (JsonMergePatchHelper.getJobMatchingModeAccessor().isJsonMergePatch(this)) {
            return toJsonMergePatch(jsonWriter);
        } else {
            jsonWriter.writeStartObject();
            jsonWriter.writeStringField("jobMatchingModeKind",
                getJobMatchingModeKind() == null ? null : getJobMatchingModeKind().toString());
            jsonWriter.writeStringField("kind", this.kind);
            jsonWriter.writeStringField("jobMatchingModeKind",
                this.jobMatchingModeKind == null ? null : this.jobMatchingModeKind.toString());
            return jsonWriter.writeEndObject();
        }
    }

    @Generated
    private JsonWriter toJsonMergePatch(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        if (updatedProperties.contains("jobMatchingModeKind")) {
            if (getJobMatchingModeKind() == null) {
                jsonWriter.writeNullField("jobMatchingModeKind");
            } else {
                jsonWriter.writeStringField("jobMatchingModeKind", getJobMatchingModeKind().toString());
            }
        }
        jsonWriter.writeStringField("kind", this.kind);
        if (updatedProperties.contains("jobMatchingModeKind")) {
            if (this.jobMatchingModeKind == null) {
                jsonWriter.writeNullField("jobMatchingModeKind");
            } else {
                jsonWriter.writeStringField("jobMatchingModeKind", this.jobMatchingModeKind.toString());
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SuspendMode from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of SuspendMode if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the SuspendMode.
     */
    @Generated
    public static SuspendMode fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SuspendMode deserializedSuspendMode = new SuspendMode();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("kind".equals(fieldName)) {
                    deserializedSuspendMode.kind = reader.getString();
                } else if ("jobMatchingModeKind".equals(fieldName)) {
                    deserializedSuspendMode.jobMatchingModeKind = JobMatchingModeKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedSuspendMode;
        });
    }

    /*
     * The type discriminator describing SuspendMode
     */
    @Generated
    private JobMatchingModeKind jobMatchingModeKind = JobMatchingModeKind.SUSPEND;

    /**
     * Get the jobMatchingModeKind property: The type discriminator describing SuspendMode.
     *
     * @return the jobMatchingModeKind value.
     */
    @Generated
    public JobMatchingModeKind getJobMatchingModeKind() {
        return this.jobMatchingModeKind;
    }

    /**
     * Set the jobMatchingModeKind property: The type discriminator describing SuspendMode.
     * <p>Required when create the resource.</p>
     *
     * @param jobMatchingModeKind the jobMatchingModeKind value to set.
     * @return the SuspendMode object itself.
     */
    @Generated
    public SuspendMode setJobMatchingModeKind(JobMatchingModeKind jobMatchingModeKind) {
        this.jobMatchingModeKind = jobMatchingModeKind;
        this.updatedProperties.add("jobMatchingModeKind");
        return this;
    }
}

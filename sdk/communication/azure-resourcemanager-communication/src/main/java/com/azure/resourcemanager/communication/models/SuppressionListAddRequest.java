// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Object that describes what address will be added to the suppression list. */
@Fluent
public final class SuppressionListAddRequest {
    /*
     * Optional parameter to operate on suppression list associated with a valid sender user name. When this parameter
     * is not present, by default the domain level suppression list will be operated on.
     */
    @JsonProperty(value = "validSenderUsername")
    private String validSenderUsername;

    /*
     * List of objects for each address to add to the suppression list
     */
    @JsonProperty(value = "addressInfoList", required = true)
    private List<SuppressionListAddressInfo> addressInfoList;

    /** Creates an instance of SuppressionListAddRequest class. */
    public SuppressionListAddRequest() {
    }

    /**
     * Get the validSenderUsername property: Optional parameter to operate on suppression list associated with a valid
     * sender user name. When this parameter is not present, by default the domain level suppression list will be
     * operated on.
     *
     * @return the validSenderUsername value.
     */
    public String validSenderUsername() {
        return this.validSenderUsername;
    }

    /**
     * Set the validSenderUsername property: Optional parameter to operate on suppression list associated with a valid
     * sender user name. When this parameter is not present, by default the domain level suppression list will be
     * operated on.
     *
     * @param validSenderUsername the validSenderUsername value to set.
     * @return the SuppressionListAddRequest object itself.
     */
    public SuppressionListAddRequest withValidSenderUsername(String validSenderUsername) {
        this.validSenderUsername = validSenderUsername;
        return this;
    }

    /**
     * Get the addressInfoList property: List of objects for each address to add to the suppression list.
     *
     * @return the addressInfoList value.
     */
    public List<SuppressionListAddressInfo> addressInfoList() {
        return this.addressInfoList;
    }

    /**
     * Set the addressInfoList property: List of objects for each address to add to the suppression list.
     *
     * @param addressInfoList the addressInfoList value to set.
     * @return the SuppressionListAddRequest object itself.
     */
    public SuppressionListAddRequest withAddressInfoList(List<SuppressionListAddressInfo> addressInfoList) {
        this.addressInfoList = addressInfoList;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (addressInfoList() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property addressInfoList in model SuppressionListAddRequest"));
        } else {
            addressInfoList().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SuppressionListAddRequest.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * A class that describes the properties of a SuppressionListAddress resource.
 */
@Fluent
public final class SuppressionListAddressProperties implements JsonSerializable<SuppressionListAddressProperties> {
    /*
     * Email address of the recipient.
     */
    private String email;

    /*
     * The first name of the email recipient.
     */
    private String firstName;

    /*
     * The last name of the email recipient.
     */
    private String lastName;

    /*
     * An optional property to provide contextual notes or a description for an address.
     */
    private String notes;

    /*
     * The date the address was last updated in a suppression list.
     */
    private OffsetDateTime lastModified;

    /*
     * The location where the SuppressionListAddress data is stored at rest. This value is inherited from the parent
     * Domains resource.
     */
    private String dataLocation;

    /**
     * Creates an instance of SuppressionListAddressProperties class.
     */
    public SuppressionListAddressProperties() {
    }

    /**
     * Get the email property: Email address of the recipient.
     * 
     * @return the email value.
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email property: Email address of the recipient.
     * 
     * @param email the email value to set.
     * @return the SuppressionListAddressProperties object itself.
     */
    public SuppressionListAddressProperties withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get the firstName property: The first name of the email recipient.
     * 
     * @return the firstName value.
     */
    public String firstName() {
        return this.firstName;
    }

    /**
     * Set the firstName property: The first name of the email recipient.
     * 
     * @param firstName the firstName value to set.
     * @return the SuppressionListAddressProperties object itself.
     */
    public SuppressionListAddressProperties withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Get the lastName property: The last name of the email recipient.
     * 
     * @return the lastName value.
     */
    public String lastName() {
        return this.lastName;
    }

    /**
     * Set the lastName property: The last name of the email recipient.
     * 
     * @param lastName the lastName value to set.
     * @return the SuppressionListAddressProperties object itself.
     */
    public SuppressionListAddressProperties withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Get the notes property: An optional property to provide contextual notes or a description for an address.
     * 
     * @return the notes value.
     */
    public String notes() {
        return this.notes;
    }

    /**
     * Set the notes property: An optional property to provide contextual notes or a description for an address.
     * 
     * @param notes the notes value to set.
     * @return the SuppressionListAddressProperties object itself.
     */
    public SuppressionListAddressProperties withNotes(String notes) {
        this.notes = notes;
        return this;
    }

    /**
     * Get the lastModified property: The date the address was last updated in a suppression list.
     * 
     * @return the lastModified value.
     */
    public OffsetDateTime lastModified() {
        return this.lastModified;
    }

    /**
     * Get the dataLocation property: The location where the SuppressionListAddress data is stored at rest. This value
     * is inherited from the parent Domains resource.
     * 
     * @return the dataLocation value.
     */
    public String dataLocation() {
        return this.dataLocation;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (email() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property email in model SuppressionListAddressProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SuppressionListAddressProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("email", this.email);
        jsonWriter.writeStringField("firstName", this.firstName);
        jsonWriter.writeStringField("lastName", this.lastName);
        jsonWriter.writeStringField("notes", this.notes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SuppressionListAddressProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SuppressionListAddressProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SuppressionListAddressProperties.
     */
    public static SuppressionListAddressProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SuppressionListAddressProperties deserializedSuppressionListAddressProperties
                = new SuppressionListAddressProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("email".equals(fieldName)) {
                    deserializedSuppressionListAddressProperties.email = reader.getString();
                } else if ("firstName".equals(fieldName)) {
                    deserializedSuppressionListAddressProperties.firstName = reader.getString();
                } else if ("lastName".equals(fieldName)) {
                    deserializedSuppressionListAddressProperties.lastName = reader.getString();
                } else if ("notes".equals(fieldName)) {
                    deserializedSuppressionListAddressProperties.notes = reader.getString();
                } else if ("lastModified".equals(fieldName)) {
                    deserializedSuppressionListAddressProperties.lastModified = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("dataLocation".equals(fieldName)) {
                    deserializedSuppressionListAddressProperties.dataLocation = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSuppressionListAddressProperties;
        });
    }
}

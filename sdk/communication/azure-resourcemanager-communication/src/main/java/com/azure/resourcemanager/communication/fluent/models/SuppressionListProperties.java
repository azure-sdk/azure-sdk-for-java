// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A class that describes the properties of a SuppressionList resource.
 */
@Fluent
public final class SuppressionListProperties implements JsonSerializable<SuppressionListProperties> {
    /*
     * The the name of the suppression list. This value must match one of the valid sender usernames of the sending
     * domain.
     */
    private String listName;

    /*
     * The date the resource was last updated.
     */
    private String lastUpdatedTimestamp;

    /*
     * The date the resource was created.
     */
    private String createdTimestamp;

    /*
     * The location where the SuppressionListAddress data is stored at rest. This value is inherited from the parent
     * Domains resource.
     */
    private String dataLocation;

    /**
     * Creates an instance of SuppressionListProperties class.
     */
    public SuppressionListProperties() {
    }

    /**
     * Get the listName property: The the name of the suppression list. This value must match one of the valid sender
     * usernames of the sending domain.
     * 
     * @return the listName value.
     */
    public String listName() {
        return this.listName;
    }

    /**
     * Set the listName property: The the name of the suppression list. This value must match one of the valid sender
     * usernames of the sending domain.
     * 
     * @param listName the listName value to set.
     * @return the SuppressionListProperties object itself.
     */
    public SuppressionListProperties withListName(String listName) {
        this.listName = listName;
        return this;
    }

    /**
     * Get the lastUpdatedTimestamp property: The date the resource was last updated.
     * 
     * @return the lastUpdatedTimestamp value.
     */
    public String lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    /**
     * Get the createdTimestamp property: The date the resource was created.
     * 
     * @return the createdTimestamp value.
     */
    public String createdTimestamp() {
        return this.createdTimestamp;
    }

    /**
     * Get the dataLocation property: The location where the SuppressionListAddress data is stored at rest. This value
     * is inherited from the parent Domains resource.
     * 
     * @return the dataLocation value.
     */
    public String dataLocation() {
        return this.dataLocation;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("listName", this.listName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SuppressionListProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SuppressionListProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SuppressionListProperties.
     */
    public static SuppressionListProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SuppressionListProperties deserializedSuppressionListProperties = new SuppressionListProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("listName".equals(fieldName)) {
                    deserializedSuppressionListProperties.listName = reader.getString();
                } else if ("lastUpdatedTimeStamp".equals(fieldName)) {
                    deserializedSuppressionListProperties.lastUpdatedTimestamp = reader.getString();
                } else if ("createdTimeStamp".equals(fieldName)) {
                    deserializedSuppressionListProperties.createdTimestamp = reader.getString();
                } else if ("dataLocation".equals(fieldName)) {
                    deserializedSuppressionListProperties.dataLocation = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSuppressionListProperties;
        });
    }
}

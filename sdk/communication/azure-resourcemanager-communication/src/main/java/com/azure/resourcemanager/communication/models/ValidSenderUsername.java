// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.communication.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Input parameters for add valid sender user name. */
@Fluent
public final class ValidSenderUsername {
    /*
     * Name of sender.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * The friendly display name of the sender.
     */
    @JsonProperty(value = "displayName", required = true)
    private String displayName;

    /** Creates an instance of ValidSenderUsername class. */
    public ValidSenderUsername() {
    }

    /**
     * Get the name property: Name of sender.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of sender.
     *
     * @param name the name value to set.
     * @return the ValidSenderUsername object itself.
     */
    public ValidSenderUsername withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the displayName property: The friendly display name of the sender.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The friendly display name of the sender.
     *
     * @param displayName the displayName value to set.
     * @return the ValidSenderUsername object itself.
     */
    public ValidSenderUsername withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property name in model ValidSenderUsername"));
        }
        if (displayName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property displayName in model ValidSenderUsername"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ValidSenderUsername.class);
}

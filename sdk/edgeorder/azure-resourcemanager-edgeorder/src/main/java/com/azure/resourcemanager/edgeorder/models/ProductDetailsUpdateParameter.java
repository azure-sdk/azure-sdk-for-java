// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgeorder.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents product details patchable properties.
 */
@Fluent
public final class ProductDetailsUpdateParameter implements JsonSerializable<ProductDetailsUpdateParameter> {
    /*
     * Device Provisioning Details for Parent.
     */
    private ProvisioningDetails parentProvisioningDetails;

    /**
     * Creates an instance of ProductDetailsUpdateParameter class.
     */
    public ProductDetailsUpdateParameter() {
    }

    /**
     * Get the parentProvisioningDetails property: Device Provisioning Details for Parent.
     * 
     * @return the parentProvisioningDetails value.
     */
    public ProvisioningDetails parentProvisioningDetails() {
        return this.parentProvisioningDetails;
    }

    /**
     * Set the parentProvisioningDetails property: Device Provisioning Details for Parent.
     * 
     * @param parentProvisioningDetails the parentProvisioningDetails value to set.
     * @return the ProductDetailsUpdateParameter object itself.
     */
    public ProductDetailsUpdateParameter withParentProvisioningDetails(ProvisioningDetails parentProvisioningDetails) {
        this.parentProvisioningDetails = parentProvisioningDetails;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parentProvisioningDetails() != null) {
            parentProvisioningDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("parentProvisioningDetails", this.parentProvisioningDetails);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProductDetailsUpdateParameter from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProductDetailsUpdateParameter if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProductDetailsUpdateParameter.
     */
    public static ProductDetailsUpdateParameter fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProductDetailsUpdateParameter deserializedProductDetailsUpdateParameter
                = new ProductDetailsUpdateParameter();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("parentProvisioningDetails".equals(fieldName)) {
                    deserializedProductDetailsUpdateParameter.parentProvisioningDetails
                        = ProvisioningDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProductDetailsUpdateParameter;
        });
    }
}

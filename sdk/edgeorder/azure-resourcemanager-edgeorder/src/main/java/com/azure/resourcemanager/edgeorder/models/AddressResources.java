// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgeorder.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of AddressResources.
 */
public interface AddressResources {
    /**
     * Get information about the specified address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified address along with {@link Response}.
     */
    Response<AddressResource> getByResourceGroupWithResponse(String resourceGroupName, String addressName,
        Context context);

    /**
     * Get information about the specified address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified address.
     */
    AddressResource getByResourceGroup(String resourceGroupName, String addressName);

    /**
     * Delete an address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String addressName);

    /**
     * Delete an address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String addressName, Context context);

    /**
     * List all the addresses available under the given resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AddressResource> listByResourceGroup(String resourceGroupName);

    /**
     * List all the addresses available under the given resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param filter $filter is supported to filter based on shipping address properties. Filter supports only equals
     * operation.
     * @param skipToken $skipToken is supported on Get list of addresses, which provides the next page in the list of
     * addresses.
     * @param top $top is supported on fetching list of resources. $top=10 means that the first 10 items in the list
     * will be returned to the API caller.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AddressResource> listByResourceGroup(String resourceGroupName, String filter, String skipToken,
        Integer top, Context context);

    /**
     * List all the addresses available under the subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AddressResource> list();

    /**
     * List all the addresses available under the subscription.
     * 
     * @param filter $filter is supported to filter based on shipping address properties. Filter supports only equals
     * operation.
     * @param skipToken $skipToken is supported on Get list of addresses, which provides the next page in the list of
     * addresses.
     * @param top $top is supported on fetching list of resources. $top=10 means that the first 10 items in the list
     * will be returned to the API caller.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AddressResource> list(String filter, String skipToken, Integer top, Context context);

    /**
     * Get information about the specified address.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified address along with {@link Response}.
     */
    AddressResource getById(String id);

    /**
     * Get information about the specified address.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified address along with {@link Response}.
     */
    Response<AddressResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete an address.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete an address.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new AddressResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new AddressResource definition.
     */
    AddressResource.DefinitionStages.Blank define(String name);
}

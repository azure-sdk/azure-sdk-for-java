// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgeorder.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.resourcemanager.edgeorder.fluent.models.ConfigurationInner;
import com.azure.resourcemanager.edgeorder.fluent.models.ProductFamiliesMetadataDetailsInner;
import com.azure.resourcemanager.edgeorder.fluent.models.ProductFamilyInner;
import com.azure.resourcemanager.edgeorder.models.ConfigurationsRequest;
import com.azure.resourcemanager.edgeorder.models.ProductFamiliesRequest;

/**
 * An instance of this class provides access to all the operations defined in
 * ProductsAndConfigurationsOperationGroupsClient.
 */
public interface ProductsAndConfigurationsOperationGroupsClient {
    /**
     * List configurations for the given product family, product line and product for the given subscription.
     * 
     * @param configurationsRequest Filters for showing the configurations.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of configurations as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConfigurationInner> listConfigurations(ConfigurationsRequest configurationsRequest);

    /**
     * List configurations for the given product family, product line and product for the given subscription.
     * 
     * @param configurationsRequest Filters for showing the configurations.
     * @param skipToken $skipToken is supported on list of configurations, which provides the next page in the list of
     * configurations.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of configurations as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConfigurationInner> listConfigurations(ConfigurationsRequest configurationsRequest, String skipToken,
        Context context);

    /**
     * List product families for the given subscription.
     * 
     * @param productFamiliesRequest Filters for showing the product families.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of product families as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProductFamilyInner> listProductFamilies(ProductFamiliesRequest productFamiliesRequest);

    /**
     * List product families for the given subscription.
     * 
     * @param productFamiliesRequest Filters for showing the product families.
     * @param expand $expand is supported on configurations parameter for product, which provides details on the
     * configurations for the product.
     * @param skipToken $skipToken is supported on list of product families, which provides the next page in the list of
     * product families.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of product families as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProductFamilyInner> listProductFamilies(ProductFamiliesRequest productFamiliesRequest, String expand,
        String skipToken, Context context);

    /**
     * List product families metadata for the given subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return holds details about product family metadata as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProductFamiliesMetadataDetailsInner> listProductFamiliesMetadata();

    /**
     * List product families metadata for the given subscription.
     * 
     * @param skipToken $skipToken is supported on list of product families metadata, which provides the next page in
     * the list of product families metadata.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return holds details about product family metadata as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ProductFamiliesMetadataDetailsInner> listProductFamiliesMetadata(String skipToken, Context context);
}

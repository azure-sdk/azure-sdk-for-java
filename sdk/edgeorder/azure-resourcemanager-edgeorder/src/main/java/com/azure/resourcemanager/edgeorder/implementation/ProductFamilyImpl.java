// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgeorder.implementation;

import com.azure.resourcemanager.edgeorder.fluent.models.ProductFamilyInner;
import com.azure.resourcemanager.edgeorder.models.AvailabilityInformation;
import com.azure.resourcemanager.edgeorder.models.CostInformation;
import com.azure.resourcemanager.edgeorder.models.Description;
import com.azure.resourcemanager.edgeorder.models.FilterableProperty;
import com.azure.resourcemanager.edgeorder.models.FulfillmentType;
import com.azure.resourcemanager.edgeorder.models.HierarchyInformation;
import com.azure.resourcemanager.edgeorder.models.ImageInformation;
import com.azure.resourcemanager.edgeorder.models.ProductFamily;
import com.azure.resourcemanager.edgeorder.models.ProductLine;
import com.azure.resourcemanager.edgeorder.models.ResourceProviderDetails;
import java.util.Collections;
import java.util.List;

public final class ProductFamilyImpl implements ProductFamily {
    private ProductFamilyInner innerObject;

    private final com.azure.resourcemanager.edgeorder.EdgeorderManager serviceManager;

    ProductFamilyImpl(ProductFamilyInner innerObject,
        com.azure.resourcemanager.edgeorder.EdgeorderManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public List<ProductLine> productLines() {
        List<ProductLine> inner = this.innerModel().productLines();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ResourceProviderDetails> resourceProviderDetails() {
        List<ResourceProviderDetails> inner = this.innerModel().resourceProviderDetails();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<FilterableProperty> filterableProperties() {
        List<FilterableProperty> inner = this.innerModel().filterableProperties();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public Description description() {
        return this.innerModel().description();
    }

    public List<ImageInformation> imageInformation() {
        List<ImageInformation> inner = this.innerModel().imageInformation();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public CostInformation costInformation() {
        return this.innerModel().costInformation();
    }

    public AvailabilityInformation availabilityInformation() {
        return this.innerModel().availabilityInformation();
    }

    public HierarchyInformation hierarchyInformation() {
        return this.innerModel().hierarchyInformation();
    }

    public FulfillmentType fulfilledBy() {
        return this.innerModel().fulfilledBy();
    }

    public ProductFamilyInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.edgeorder.EdgeorderManager manager() {
        return this.serviceManager;
    }
}

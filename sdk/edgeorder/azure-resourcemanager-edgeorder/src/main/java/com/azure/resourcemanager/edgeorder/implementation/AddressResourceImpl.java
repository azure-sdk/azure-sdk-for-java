// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgeorder.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.edgeorder.fluent.models.AddressResourceInner;
import com.azure.resourcemanager.edgeorder.models.AddressClassification;
import com.azure.resourcemanager.edgeorder.models.AddressResource;
import com.azure.resourcemanager.edgeorder.models.AddressUpdateParameter;
import com.azure.resourcemanager.edgeorder.models.AddressValidationStatus;
import com.azure.resourcemanager.edgeorder.models.ContactDetails;
import com.azure.resourcemanager.edgeorder.models.ProvisioningState;
import com.azure.resourcemanager.edgeorder.models.ShippingAddress;
import java.util.Collections;
import java.util.Map;

public final class AddressResourceImpl implements AddressResource, AddressResource.Definition, AddressResource.Update {
    private AddressResourceInner innerObject;

    private final com.azure.resourcemanager.edgeorder.EdgeorderManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public AddressClassification addressClassification() {
        return this.innerModel().addressClassification();
    }

    public ShippingAddress shippingAddress() {
        return this.innerModel().shippingAddress();
    }

    public ContactDetails contactDetails() {
        return this.innerModel().contactDetails();
    }

    public AddressValidationStatus addressValidationStatus() {
        return this.innerModel().addressValidationStatus();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AddressResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.edgeorder.EdgeorderManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String addressName;

    private String updateIfMatch;

    private AddressUpdateParameter updateAddressUpdateParameter;

    public AddressResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public AddressResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getAddressResources()
            .create(resourceGroupName, addressName, this.innerModel(), Context.NONE);
        return this;
    }

    public AddressResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAddressResources()
            .create(resourceGroupName, addressName, this.innerModel(), context);
        return this;
    }

    AddressResourceImpl(String name, com.azure.resourcemanager.edgeorder.EdgeorderManager serviceManager) {
        this.innerObject = new AddressResourceInner();
        this.serviceManager = serviceManager;
        this.addressName = name;
    }

    public AddressResourceImpl update() {
        this.updateIfMatch = null;
        this.updateAddressUpdateParameter = new AddressUpdateParameter();
        return this;
    }

    public AddressResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAddressResources()
            .update(resourceGroupName, addressName, updateAddressUpdateParameter, updateIfMatch, Context.NONE);
        return this;
    }

    public AddressResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAddressResources()
            .update(resourceGroupName, addressName, updateAddressUpdateParameter, updateIfMatch, context);
        return this;
    }

    AddressResourceImpl(AddressResourceInner innerObject,
        com.azure.resourcemanager.edgeorder.EdgeorderManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.addressName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "addresses");
    }

    public AddressResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAddressResources()
            .getByResourceGroupWithResponse(resourceGroupName, addressName, Context.NONE)
            .getValue();
        return this;
    }

    public AddressResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAddressResources()
            .getByResourceGroupWithResponse(resourceGroupName, addressName, context)
            .getValue();
        return this;
    }

    public AddressResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AddressResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AddressResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateAddressUpdateParameter.withTags(tags);
            return this;
        }
    }

    public AddressResourceImpl withAddressClassification(AddressClassification addressClassification) {
        this.innerModel().withAddressClassification(addressClassification);
        return this;
    }

    public AddressResourceImpl withShippingAddress(ShippingAddress shippingAddress) {
        if (isInCreateMode()) {
            this.innerModel().withShippingAddress(shippingAddress);
            return this;
        } else {
            this.updateAddressUpdateParameter.withShippingAddress(shippingAddress);
            return this;
        }
    }

    public AddressResourceImpl withContactDetails(ContactDetails contactDetails) {
        if (isInCreateMode()) {
            this.innerModel().withContactDetails(contactDetails);
            return this;
        } else {
            this.updateAddressUpdateParameter.withContactDetails(contactDetails);
            return this;
        }
    }

    public AddressResourceImpl withIfMatch(String ifMatch) {
        this.updateIfMatch = ifMatch;
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

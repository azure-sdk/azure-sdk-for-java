// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.edgeorder.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.edgeorder.fluent.models.AddressResourceInner;
import com.azure.resourcemanager.edgeorder.models.AddressUpdateParameter;

/**
 * An instance of this class provides access to all the operations defined in AddressResourcesClient.
 */
public interface AddressResourcesClient {
    /**
     * Get information about the specified address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified address along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AddressResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String addressName,
        Context context);

    /**
     * Get information about the specified address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the specified address.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AddressResourceInner getByResourceGroup(String resourceGroupName, String addressName);

    /**
     * Create a new address with the specified parameters. Existing address cannot be updated with this API and should
     * instead be updated with the Update address API.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressResource Address details from request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of address Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AddressResourceInner>, AddressResourceInner> beginCreate(String resourceGroupName,
        String addressName, AddressResourceInner addressResource);

    /**
     * Create a new address with the specified parameters. Existing address cannot be updated with this API and should
     * instead be updated with the Update address API.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressResource Address details from request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of address Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AddressResourceInner>, AddressResourceInner> beginCreate(String resourceGroupName,
        String addressName, AddressResourceInner addressResource, Context context);

    /**
     * Create a new address with the specified parameters. Existing address cannot be updated with this API and should
     * instead be updated with the Update address API.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressResource Address details from request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AddressResourceInner create(String resourceGroupName, String addressName, AddressResourceInner addressResource);

    /**
     * Create a new address with the specified parameters. Existing address cannot be updated with this API and should
     * instead be updated with the Update address API.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressResource Address details from request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AddressResourceInner create(String resourceGroupName, String addressName, AddressResourceInner addressResource,
        Context context);

    /**
     * Update the properties of an existing address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressUpdateParameter Address update parameters from request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of address Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AddressResourceInner>, AddressResourceInner> beginUpdate(String resourceGroupName,
        String addressName, AddressUpdateParameter addressUpdateParameter);

    /**
     * Update the properties of an existing address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressUpdateParameter Address update parameters from request body.
     * @param ifMatch Defines the If-Match condition. The patch will be performed only if the ETag of the job on the
     * server matches this value.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of address Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AddressResourceInner>, AddressResourceInner> beginUpdate(String resourceGroupName,
        String addressName, AddressUpdateParameter addressUpdateParameter, String ifMatch, Context context);

    /**
     * Update the properties of an existing address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressUpdateParameter Address update parameters from request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AddressResourceInner update(String resourceGroupName, String addressName,
        AddressUpdateParameter addressUpdateParameter);

    /**
     * Update the properties of an existing address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param addressUpdateParameter Address update parameters from request body.
     * @param ifMatch Defines the If-Match condition. The patch will be performed only if the ETag of the job on the
     * server matches this value.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AddressResourceInner update(String resourceGroupName, String addressName,
        AddressUpdateParameter addressUpdateParameter, String ifMatch, Context context);

    /**
     * Delete an address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String addressName);

    /**
     * Delete an address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String addressName, Context context);

    /**
     * Delete an address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String addressName);

    /**
     * Delete an address.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param addressName The name of the address Resource within the specified resource group. address names must be
     * between 3 and 24 characters in length and use any alphanumeric and underscore only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String addressName, Context context);

    /**
     * List all the addresses available under the given resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AddressResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List all the addresses available under the given resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param filter $filter is supported to filter based on shipping address properties. Filter supports only equals
     * operation.
     * @param skipToken $skipToken is supported on Get list of addresses, which provides the next page in the list of
     * addresses.
     * @param top $top is supported on fetching list of resources. $top=10 means that the first 10 items in the list
     * will be returned to the API caller.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AddressResourceInner> listByResourceGroup(String resourceGroupName, String filter, String skipToken,
        Integer top, Context context);

    /**
     * List all the addresses available under the subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AddressResourceInner> list();

    /**
     * List all the addresses available under the subscription.
     * 
     * @param filter $filter is supported to filter based on shipping address properties. Filter supports only equals
     * operation.
     * @param skipToken $skipToken is supported on Get list of addresses, which provides the next page in the list of
     * addresses.
     * @param top $top is supported on fetching list of resources. $top=10 means that the first 10 items in the list
     * will be returned to the API caller.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return address Resource Collection as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AddressResourceInner> list(String filter, String skipToken, Integer top, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.Cloud;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"zxhi\",\"uuid\":\"rbbcevq\",\"vmmServerId\":\"tltdhlfkqojpy\",\"cloudName\":\"gtrd\",\"cloudCapacity\":{\"cpuCount\":3498296046488814783,\"memoryMB\":8776785011455694995,\"vmCount\":6054984412383572813},\"storageQoSPolicies\":[{\"name\":\"ysuxmprafwgck\",\"id\":\"cxvdfffwafqrouda\",\"iopsMaximum\":5249211644397946556,\"iopsMinimum\":344434821403021626,\"bandwidthLimit\":2567537558648922186,\"policyId\":\"unzo\"},{\"name\":\"dhcxgkmoy\",\"id\":\"dyuib\",\"iopsMaximum\":2557149039383671323,\"iopsMinimum\":2086600607092923630,\"bandwidthLimit\":4187703770591831791,\"policyId\":\"vfcjnaeoisrvhmg\"}],\"provisioningState\":\"Updating\"},\"extendedLocation\":{\"type\":\"ukiscvwmzhw\",\"name\":\"efaxvxilc\"},\"location\":\"gnhnzeyq\",\"tags\":{\"dbeesmie\":\"jfzqlqhycavodgg\",\"wqfbylyrfgiagt\":\"nlrariaawiuagy\",\"zjvusfzldmo\":\"ojocqwogf\",\"own\":\"uxylfsbtkadpy\"},\"id\":\"tgkbugrjqctojc\",\"name\":\"isofieypefojyqd\",\"type\":\"cuplcplcwkhih\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cloud> response = manager.clouds().listByResourceGroup("tppn", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gnhnzeyq", response.iterator().next().location());
        Assertions.assertEquals("jfzqlqhycavodgg", response.iterator().next().tags().get("dbeesmie"));
        Assertions.assertEquals("zxhi", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("rbbcevq", response.iterator().next().properties().uuid());
        Assertions.assertEquals("tltdhlfkqojpy", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("ukiscvwmzhw", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("efaxvxilc", response.iterator().next().extendedLocation().name());
    }
}

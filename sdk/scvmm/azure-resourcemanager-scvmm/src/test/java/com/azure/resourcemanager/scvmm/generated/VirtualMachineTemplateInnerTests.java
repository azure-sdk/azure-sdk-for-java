// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.fluent.models.VirtualMachineTemplateInner;
import com.azure.resourcemanager.scvmm.models.ExtendedLocation;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplateProperties;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class VirtualMachineTemplateInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualMachineTemplateInner model = BinaryData.fromString(
            "{\"properties\":{\"inventoryItemId\":\"xhbkuofq\",\"uuid\":\"yk\",\"vmmServerId\":\"enevfyexfwhybci\",\"osType\":\"Other\",\"osName\":\"dcsi\",\"computerName\":\"nnaamdectehfiqsc\",\"memoryMB\":230831104,\"cpuCount\":796129419,\"limitCpuForMigration\":\"false\",\"dynamicMemoryEnabled\":\"false\",\"isCustomizable\":\"false\",\"dynamicMemoryMaxMB\":693587344,\"dynamicMemoryMinMB\":1290040732,\"isHighlyAvailable\":\"true\",\"generation\":130298647,\"networkInterfaces\":[{\"name\":\"kqsleyyvxy\",\"displayName\":\"pkc\",\"ipv4Addresses\":[\"pngjcrcczsqpjhvm\",\"ajvnysounqe\",\"a\",\"oaeupfhyhltrpmo\"],\"ipv6Addresses\":[\"cma\",\"u\",\"kthfui\",\"aodsfcpkv\"],\"macAddress\":\"dpuozmyz\",\"virtualNetworkId\":\"agfuaxbezyiu\",\"networkName\":\"ktwh\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"sm\"}],\"disks\":[{\"name\":\"exim\",\"displayName\":\"yocf\",\"diskId\":\"ksymd\",\"diskSizeGB\":830050857,\"maxDiskSizeGB\":1193107670,\"bus\":980316888,\"lun\":1173289641,\"busType\":\"qyud\",\"vhdType\":\"rrqnbpoczvyifqrv\",\"volumeType\":\"vjsllrmvvdfw\",\"vhdFormatType\":\"kpnpulexxbczwtr\",\"templateDiskId\":\"iqzbq\",\"storageQoSPolicy\":{\"name\":\"ovm\",\"id\":\"kacspkw\"},\"createDiffDisk\":\"false\"},{\"name\":\"obpxjmflbvvn\",\"displayName\":\"rkcciwwzjuqk\",\"diskId\":\"sa\",\"diskSizeGB\":1410521625,\"maxDiskSizeGB\":481973669,\"bus\":1163138760,\"lun\":627324313,\"busType\":\"ghsauuimjmvxied\",\"vhdType\":\"gidyjrrf\",\"volumeType\":\"aos\",\"vhdFormatType\":\"xc\",\"templateDiskId\":\"npc\",\"storageQoSPolicy\":{\"name\":\"cohslkev\",\"id\":\"ggzfbu\"},\"createDiffDisk\":\"false\"},{\"name\":\"faxkffeii\",\"displayName\":\"lvmezyvshxmzsbbz\",\"diskId\":\"gigr\",\"diskSizeGB\":830818996,\"maxDiskSizeGB\":849896725,\"bus\":433663195,\"lun\":1552581674,\"busType\":\"nspydptkoenkoukn\",\"vhdType\":\"dwtiukbldngkp\",\"volumeType\":\"ipazyxoegukgjnpi\",\"vhdFormatType\":\"gygev\",\"templateDiskId\":\"ntypmrbpizcdrqj\",\"storageQoSPolicy\":{\"name\":\"ydnfyhxdeoejz\",\"id\":\"w\"},\"createDiffDisk\":\"false\"},{\"name\":\"ttgzfbis\",\"displayName\":\"bkh\",\"diskId\":\"deyeamdphagalpbu\",\"diskSizeGB\":605545221,\"maxDiskSizeGB\":9013568,\"bus\":1260987021,\"lun\":1896517508,\"busType\":\"wkgshwa\",\"vhdType\":\"ixzbinjeputtmryw\",\"volumeType\":\"zoqftiyqzrnkcqvy\",\"vhdFormatType\":\"whzlsicohoq\",\"templateDiskId\":\"wvl\",\"storageQoSPolicy\":{\"name\":\"vwhheunmmqhgyx\",\"id\":\"onocukok\"},\"createDiffDisk\":\"true\"}],\"provisioningState\":\"Accepted\"},\"extendedLocation\":{\"type\":\"onuq\",\"name\":\"fkbey\"},\"location\":\"wrmjmwvvjektc\",\"tags\":{\"dqgbiqylihkaetc\":\"nhwlrsffrzpwvl\",\"ymuctqhjfbebrj\":\"tvfcivfsn\"},\"id\":\"xerf\",\"name\":\"wutttxfvjrbi\",\"type\":\"phxepcyvahf\"}")
            .toObject(VirtualMachineTemplateInner.class);
        Assertions.assertEquals("wrmjmwvvjektc", model.location());
        Assertions.assertEquals("nhwlrsffrzpwvl", model.tags().get("dqgbiqylihkaetc"));
        Assertions.assertEquals("xhbkuofq", model.properties().inventoryItemId());
        Assertions.assertEquals("yk", model.properties().uuid());
        Assertions.assertEquals("enevfyexfwhybci", model.properties().vmmServerId());
        Assertions.assertEquals("onuq", model.extendedLocation().type());
        Assertions.assertEquals("fkbey", model.extendedLocation().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualMachineTemplateInner model = new VirtualMachineTemplateInner().withLocation("wrmjmwvvjektc")
            .withTags(mapOf("dqgbiqylihkaetc", "nhwlrsffrzpwvl", "ymuctqhjfbebrj", "tvfcivfsn"))
            .withProperties(new VirtualMachineTemplateProperties().withInventoryItemId("xhbkuofq")
                .withUuid("yk")
                .withVmmServerId("enevfyexfwhybci"))
            .withExtendedLocation(new ExtendedLocation().withType("onuq").withName("fkbey"));
        model = BinaryData.fromObject(model).toObject(VirtualMachineTemplateInner.class);
        Assertions.assertEquals("wrmjmwvvjektc", model.location());
        Assertions.assertEquals("nhwlrsffrzpwvl", model.tags().get("dqgbiqylihkaetc"));
        Assertions.assertEquals("xhbkuofq", model.properties().inventoryItemId());
        Assertions.assertEquals("yk", model.properties().uuid());
        Assertions.assertEquals("enevfyexfwhybci", model.properties().vmmServerId());
        Assertions.assertEquals("onuq", model.extendedLocation().type());
        Assertions.assertEquals("fkbey", model.extendedLocation().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

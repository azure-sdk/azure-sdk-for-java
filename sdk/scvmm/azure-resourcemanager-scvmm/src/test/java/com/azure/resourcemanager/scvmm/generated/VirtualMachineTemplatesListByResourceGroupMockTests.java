// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplate;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VirtualMachineTemplatesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"ewjwiuubw\",\"uuid\":\"qsfapaqt\",\"vmmServerId\":\"rrqwexjk\",\"osType\":\"Linux\",\"osName\":\"pjwogqqno\",\"computerName\":\"udcdabtqwpwyawb\",\"memoryMB\":1294437509,\"cpuCount\":1474502129,\"limitCpuForMigration\":\"true\",\"dynamicMemoryEnabled\":\"true\",\"isCustomizable\":\"false\",\"dynamicMemoryMaxMB\":2025422564,\"dynamicMemoryMinMB\":733290659,\"isHighlyAvailable\":\"true\",\"generation\":241996681,\"networkInterfaces\":[{\"name\":\"ids\",\"displayName\":\"ultxijjumfq\",\"ipv4Addresses\":[\"lnqnmcjn\"],\"ipv6Addresses\":[\"dqxtbjwgnyf\"],\"macAddress\":\"fzsvtuikzh\",\"virtualNetworkId\":\"qglcfhmlrqryxynq\",\"networkName\":\"rd\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"ptgoeiybbabp\"}],\"disks\":[{\"name\":\"slkvntjl\",\"displayName\":\"gjkskyrioov\",\"diskId\":\"dsxwaab\",\"diskSizeGB\":1611878916,\"maxDiskSizeGB\":825090539,\"bus\":1464958585,\"lun\":1028508079,\"busType\":\"maxriz\",\"vhdType\":\"obgop\",\"volumeType\":\"hsln\",\"vhdFormatType\":\"xieixynllxec\",\"templateDiskId\":\"rojphslhcawjutif\",\"storageQoSPolicy\":{\"name\":\"mvi\",\"id\":\"rqjb\"},\"createDiffDisk\":\"false\"}],\"provisioningState\":\"Canceled\"},\"extendedLocation\":{\"type\":\"glka\",\"name\":\"onqjujeickpzvcpo\"},\"location\":\"xelnwc\",\"tags\":{\"kqscazuawxtzx\":\"jedexxmlf\",\"s\":\"uamwabzxrvxc\"},\"id\":\"sphaivmxyasflvg\",\"name\":\"gzwywak\",\"type\":\"ihknsmjbl\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<VirtualMachineTemplate> response
            = manager.virtualMachineTemplates().listByResourceGroup("chndbnwie", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("xelnwc", response.iterator().next().location());
        Assertions.assertEquals("jedexxmlf", response.iterator().next().tags().get("kqscazuawxtzx"));
        Assertions.assertEquals("ewjwiuubw", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("qsfapaqt", response.iterator().next().properties().uuid());
        Assertions.assertEquals("rrqwexjk", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("glka", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("onqjujeickpzvcpo", response.iterator().next().extendedLocation().name());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.AllocationMethod;
import com.azure.resourcemanager.scvmm.models.NetworkInterface;
import com.azure.resourcemanager.scvmm.models.NetworkProfile;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class NetworkProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NetworkProfile model = BinaryData.fromString(
            "{\"networkInterfaces\":[{\"name\":\"k\",\"displayName\":\"lqwjygvjayvblm\",\"ipv4Addresses\":[\"zuhbxvvyhgsopb\"],\"ipv6Addresses\":[\"u\",\"egxuvwzf\",\"nhlmctlpdng\",\"tvgbmhrixkwmy\"],\"macAddress\":\"ejvegrhbpnaixex\",\"virtualNetworkId\":\"b\",\"networkName\":\"eaxhcexdrrvqahqk\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"hyjsvfycx\"},{\"name\":\"fvoow\",\"displayName\":\"vmtgjqppy\",\"ipv4Addresses\":[\"ronzmyhgfip\",\"sxkm\",\"waekrrjreafxtsgu\"],\"ipv6Addresses\":[\"glikkxwslolb\",\"pvuzlmv\",\"elfk\",\"gplcrpwjxeznoigb\"],\"macAddress\":\"jwmwkpnbs\",\"virtualNetworkId\":\"ejjoqkagfhsxtta\",\"networkName\":\"zxnfaaz\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"kqjjlwuenvrkp\"},{\"name\":\"uaibrebqaaysj\",\"displayName\":\"xqtnq\",\"ipv4Addresses\":[\"zlwfffiakp\"],\"ipv6Addresses\":[\"qmt\",\"d\",\"tmmjihyeozph\"],\"macAddress\":\"auyqncygupkv\",\"virtualNetworkId\":\"mdscwxqupev\",\"networkName\":\"f\",\"ipv4AddressType\":\"Static\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"ujbypelmcuvhixb\"}]}")
            .toObject(NetworkProfile.class);
        Assertions.assertEquals("k", model.networkInterfaces().get(0).name());
        Assertions.assertEquals("ejvegrhbpnaixex", model.networkInterfaces().get(0).macAddress());
        Assertions.assertEquals("b", model.networkInterfaces().get(0).virtualNetworkId());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).ipv4AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).ipv6AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).macAddressType());
        Assertions.assertEquals("hyjsvfycx", model.networkInterfaces().get(0).nicId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NetworkProfile model = new NetworkProfile().withNetworkInterfaces(Arrays.asList(
            new NetworkInterface().withName("k")
                .withMacAddress("ejvegrhbpnaixex")
                .withVirtualNetworkId("b")
                .withIpv4AddressType(AllocationMethod.DYNAMIC)
                .withIpv6AddressType(AllocationMethod.DYNAMIC)
                .withMacAddressType(AllocationMethod.DYNAMIC)
                .withNicId("hyjsvfycx"),
            new NetworkInterface().withName("fvoow")
                .withMacAddress("jwmwkpnbs")
                .withVirtualNetworkId("ejjoqkagfhsxtta")
                .withIpv4AddressType(AllocationMethod.DYNAMIC)
                .withIpv6AddressType(AllocationMethod.DYNAMIC)
                .withMacAddressType(AllocationMethod.DYNAMIC)
                .withNicId("kqjjlwuenvrkp"),
            new NetworkInterface().withName("uaibrebqaaysj")
                .withMacAddress("auyqncygupkv")
                .withVirtualNetworkId("mdscwxqupev")
                .withIpv4AddressType(AllocationMethod.STATIC)
                .withIpv6AddressType(AllocationMethod.DYNAMIC)
                .withMacAddressType(AllocationMethod.DYNAMIC)
                .withNicId("ujbypelmcuvhixb")));
        model = BinaryData.fromObject(model).toObject(NetworkProfile.class);
        Assertions.assertEquals("k", model.networkInterfaces().get(0).name());
        Assertions.assertEquals("ejvegrhbpnaixex", model.networkInterfaces().get(0).macAddress());
        Assertions.assertEquals("b", model.networkInterfaces().get(0).virtualNetworkId());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).ipv4AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).ipv6AddressType());
        Assertions.assertEquals(AllocationMethod.DYNAMIC, model.networkInterfaces().get(0).macAddressType());
        Assertions.assertEquals("hyjsvfycx", model.networkInterfaces().get(0).nicId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.AvailabilitySet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class AvailabilitySetsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"availabilitySetName\":\"ytxzvtznapxbanno\",\"vmmServerId\":\"oxczytp\",\"provisioningState\":\"Created\"},\"extendedLocation\":{\"type\":\"vroevytlyo\",\"name\":\"rrouuxvnsasbcry\"},\"location\":\"dizr\",\"tags\":{\"evfxzopjhbzxlioh\":\"obdxnazpmkmlm\",\"dtfgxqbawpcbb\":\"d\"},\"id\":\"zqcyknap\",\"name\":\"ofyuicd\",\"type\":\"zb\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<AvailabilitySet> response
            = manager.availabilitySets().listByResourceGroup("tddmf", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dizr", response.iterator().next().location());
        Assertions.assertEquals("obdxnazpmkmlm", response.iterator().next().tags().get("evfxzopjhbzxlioh"));
        Assertions.assertEquals("ytxzvtznapxbanno", response.iterator().next().properties().availabilitySetName());
        Assertions.assertEquals("oxczytp", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("vroevytlyo", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("rrouuxvnsasbcry", response.iterator().next().extendedLocation().name());
    }
}

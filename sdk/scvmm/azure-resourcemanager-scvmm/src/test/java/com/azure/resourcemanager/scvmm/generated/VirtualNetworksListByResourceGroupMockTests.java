// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.SCVMMManager;
import com.azure.resourcemanager.scvmm.models.VirtualNetwork;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VirtualNetworksListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"glecdmdqbwpypq\",\"uuid\":\"sfj\",\"vmmServerId\":\"b\",\"networkName\":\"hhxud\",\"provisioningState\":\"Canceled\"},\"extendedLocation\":{\"type\":\"d\",\"name\":\"nsiru\"},\"location\":\"z\",\"tags\":{\"gzrcxfailcfxwmdb\":\"sckdlp\"},\"id\":\"xdfgsftufqobr\",\"name\":\"lnacgcc\",\"type\":\"knh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SCVMMManager manager = SCVMMManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<VirtualNetwork> response
            = manager.virtualNetworks().listByResourceGroup("itvtzeexavo", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("z", response.iterator().next().location());
        Assertions.assertEquals("sckdlp", response.iterator().next().tags().get("gzrcxfailcfxwmdb"));
        Assertions.assertEquals("glecdmdqbwpypq", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("sfj", response.iterator().next().properties().uuid());
        Assertions.assertEquals("b", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("d", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("nsiru", response.iterator().next().extendedLocation().name());
    }
}

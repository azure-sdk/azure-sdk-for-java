// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.fluent.models.CloudInner;
import com.azure.resourcemanager.scvmm.models.CloudProperties;
import com.azure.resourcemanager.scvmm.models.ExtendedLocation;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class CloudInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CloudInner model = BinaryData.fromString(
            "{\"properties\":{\"inventoryItemId\":\"dcc\",\"uuid\":\"h\",\"vmmServerId\":\"cnyejhkryhtnapcz\",\"cloudName\":\"okjye\",\"cloudCapacity\":{\"cpuCount\":7154563673254168299,\"memoryMB\":792921284197853575,\"vmCount\":1497253057352071787},\"storageQoSPolicies\":[{\"name\":\"hgejspodma\",\"id\":\"zyde\",\"iopsMaximum\":8061334738255036426,\"iopsMinimum\":8633403700755119900,\"bandwidthLimit\":2292906968066822359,\"policyId\":\"pmqnja\"},{\"name\":\"ixjsprozvcputeg\",\"id\":\"wmfdatscmdvpjhul\",\"iopsMaximum\":3419012052983951305,\"iopsMinimum\":1911547366406673085,\"bandwidthLimit\":6544521619215950850,\"policyId\":\"wfndiodjpsl\"}],\"provisioningState\":\"Provisioning\"},\"extendedLocation\":{\"type\":\"pvwryoqpsoacc\",\"name\":\"zakljlahbc\"},\"location\":\"ffdfdosygexpa\",\"tags\":{\"hcrzevd\":\"khmsbz\",\"qjbpfzfsin\":\"hlxaolthqtr\",\"wzo\":\"gvfcj\"},\"id\":\"xjtfelluwfzit\",\"name\":\"np\",\"type\":\"qfpjk\"}")
            .toObject(CloudInner.class);
        Assertions.assertEquals("ffdfdosygexpa", model.location());
        Assertions.assertEquals("khmsbz", model.tags().get("hcrzevd"));
        Assertions.assertEquals("dcc", model.properties().inventoryItemId());
        Assertions.assertEquals("h", model.properties().uuid());
        Assertions.assertEquals("cnyejhkryhtnapcz", model.properties().vmmServerId());
        Assertions.assertEquals("pvwryoqpsoacc", model.extendedLocation().type());
        Assertions.assertEquals("zakljlahbc", model.extendedLocation().name());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CloudInner model = new CloudInner().withLocation("ffdfdosygexpa")
            .withTags(mapOf("hcrzevd", "khmsbz", "qjbpfzfsin", "hlxaolthqtr", "wzo", "gvfcj"))
            .withProperties(
                new CloudProperties().withInventoryItemId("dcc").withUuid("h").withVmmServerId("cnyejhkryhtnapcz"))
            .withExtendedLocation(new ExtendedLocation().withType("pvwryoqpsoacc").withName("zakljlahbc"));
        model = BinaryData.fromObject(model).toObject(CloudInner.class);
        Assertions.assertEquals("ffdfdosygexpa", model.location());
        Assertions.assertEquals("khmsbz", model.tags().get("hcrzevd"));
        Assertions.assertEquals("dcc", model.properties().inventoryItemId());
        Assertions.assertEquals("h", model.properties().uuid());
        Assertions.assertEquals("cnyejhkryhtnapcz", model.properties().vmmServerId());
        Assertions.assertEquals("pvwryoqpsoacc", model.extendedLocation().type());
        Assertions.assertEquals("zakljlahbc", model.extendedLocation().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.CreateDiffDisk;
import com.azure.resourcemanager.scvmm.models.StorageQosPolicyDetails;
import com.azure.resourcemanager.scvmm.models.VirtualDisk;
import org.junit.jupiter.api.Assertions;

public final class VirtualDiskTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        VirtualDisk model = BinaryData.fromString(
            "{\"name\":\"vlvqhjkbegi\",\"displayName\":\"nmxiebwwaloayqc\",\"diskId\":\"rtzju\",\"diskSizeGB\":47396428,\"maxDiskSizeGB\":598094792,\"bus\":1235130312,\"lun\":1961357126,\"busType\":\"ngmtsavjcb\",\"vhdType\":\"xqpsrknftguv\",\"volumeType\":\"uhprwmdyvxqt\",\"vhdFormatType\":\"riwwroy\",\"templateDiskId\":\"exrmcqibycnojvk\",\"storageQoSPolicy\":{\"name\":\"fqsgzvahapjy\",\"id\":\"pvgqzcjrvxdjzlm\"},\"createDiffDisk\":\"false\"}")
            .toObject(VirtualDisk.class);
        Assertions.assertEquals("vlvqhjkbegi", model.name());
        Assertions.assertEquals("rtzju", model.diskId());
        Assertions.assertEquals(47396428, model.diskSizeGB());
        Assertions.assertEquals(1235130312, model.bus());
        Assertions.assertEquals(1961357126, model.lun());
        Assertions.assertEquals("ngmtsavjcb", model.busType());
        Assertions.assertEquals("xqpsrknftguv", model.vhdType());
        Assertions.assertEquals("exrmcqibycnojvk", model.templateDiskId());
        Assertions.assertEquals("fqsgzvahapjy", model.storageQosPolicy().name());
        Assertions.assertEquals("pvgqzcjrvxdjzlm", model.storageQosPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.createDiffDisk());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        VirtualDisk model = new VirtualDisk().withName("vlvqhjkbegi")
            .withDiskId("rtzju")
            .withDiskSizeGB(47396428)
            .withBus(1235130312)
            .withLun(1961357126)
            .withBusType("ngmtsavjcb")
            .withVhdType("xqpsrknftguv")
            .withTemplateDiskId("exrmcqibycnojvk")
            .withStorageQosPolicy(new StorageQosPolicyDetails().withName("fqsgzvahapjy").withId("pvgqzcjrvxdjzlm"))
            .withCreateDiffDisk(CreateDiffDisk.FALSE);
        model = BinaryData.fromObject(model).toObject(VirtualDisk.class);
        Assertions.assertEquals("vlvqhjkbegi", model.name());
        Assertions.assertEquals("rtzju", model.diskId());
        Assertions.assertEquals(47396428, model.diskSizeGB());
        Assertions.assertEquals(1235130312, model.bus());
        Assertions.assertEquals(1961357126, model.lun());
        Assertions.assertEquals("ngmtsavjcb", model.busType());
        Assertions.assertEquals("xqpsrknftguv", model.vhdType());
        Assertions.assertEquals("exrmcqibycnojvk", model.templateDiskId());
        Assertions.assertEquals("fqsgzvahapjy", model.storageQosPolicy().name());
        Assertions.assertEquals("pvgqzcjrvxdjzlm", model.storageQosPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.createDiffDisk());
    }
}

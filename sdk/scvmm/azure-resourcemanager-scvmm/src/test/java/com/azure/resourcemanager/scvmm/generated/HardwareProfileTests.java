// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.DynamicMemoryEnabled;
import com.azure.resourcemanager.scvmm.models.HardwareProfile;
import com.azure.resourcemanager.scvmm.models.LimitCpuForMigration;
import org.junit.jupiter.api.Assertions;

public final class HardwareProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HardwareProfile model = BinaryData.fromString(
            "{\"memoryMB\":1483667739,\"cpuCount\":485662234,\"limitCpuForMigration\":\"true\",\"dynamicMemoryEnabled\":\"false\",\"dynamicMemoryMaxMB\":2106281603,\"dynamicMemoryMinMB\":342609300,\"isHighlyAvailable\":\"false\"}")
            .toObject(HardwareProfile.class);
        Assertions.assertEquals(1483667739, model.memoryMB());
        Assertions.assertEquals(485662234, model.cpuCount());
        Assertions.assertEquals(LimitCpuForMigration.TRUE, model.limitCpuForMigration());
        Assertions.assertEquals(DynamicMemoryEnabled.FALSE, model.dynamicMemoryEnabled());
        Assertions.assertEquals(2106281603, model.dynamicMemoryMaxMB());
        Assertions.assertEquals(342609300, model.dynamicMemoryMinMB());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HardwareProfile model = new HardwareProfile().withMemoryMB(1483667739)
            .withCpuCount(485662234)
            .withLimitCpuForMigration(LimitCpuForMigration.TRUE)
            .withDynamicMemoryEnabled(DynamicMemoryEnabled.FALSE)
            .withDynamicMemoryMaxMB(2106281603)
            .withDynamicMemoryMinMB(342609300);
        model = BinaryData.fromObject(model).toObject(HardwareProfile.class);
        Assertions.assertEquals(1483667739, model.memoryMB());
        Assertions.assertEquals(485662234, model.cpuCount());
        Assertions.assertEquals(LimitCpuForMigration.TRUE, model.limitCpuForMigration());
        Assertions.assertEquals(DynamicMemoryEnabled.FALSE, model.dynamicMemoryEnabled());
        Assertions.assertEquals(2106281603, model.dynamicMemoryMaxMB());
        Assertions.assertEquals(342609300, model.dynamicMemoryMinMB());
    }
}

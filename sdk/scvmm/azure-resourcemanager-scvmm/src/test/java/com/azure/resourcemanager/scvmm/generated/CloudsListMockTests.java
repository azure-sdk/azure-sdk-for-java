// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.Cloud;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class CloudsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"inventoryItemId\":\"hzdsqtzbsrgnow\",\"uuid\":\"hfgmvecactxm\",\"vmmServerId\":\"teyowclu\",\"cloudName\":\"vekqvgqo\",\"cloudCapacity\":{\"cpuCount\":2106648754409404282,\"memoryMB\":5876039921440092751,\"vmCount\":6985401659827260093},\"storageQoSPolicies\":[{\"name\":\"kfxcvhrfs\",\"id\":\"uagrttikteusqc\",\"iopsMaximum\":9209886410663760135,\"iopsMinimum\":6751807886056090415,\"bandwidthLimit\":639173288435171246,\"policyId\":\"affmmfblcqc\"},{\"name\":\"bgq\",\"id\":\"rtalmet\",\"iopsMaximum\":5036411923058739652,\"iopsMinimum\":4960961854353669285,\"bandwidthLimit\":2990565410160748386,\"policyId\":\"hrmooi\"}],\"provisioningState\":\"Accepted\"},\"extendedLocation\":{\"type\":\"ypxiutcxap\",\"name\":\"y\"},\"location\":\"etoge\",\"tags\":{\"jcjbt\":\"xslhvnhlabrqnkk\",\"qbeitpkxztmoob\":\"gaehvvibrxjjst\"},\"id\":\"lftidgfcwqmpim\",\"name\":\"qxzhem\",\"type\":\"yhohujswtwkozzwc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Cloud> response = manager.clouds().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("etoge", response.iterator().next().location());
        Assertions.assertEquals("xslhvnhlabrqnkk", response.iterator().next().tags().get("jcjbt"));
        Assertions.assertEquals("hzdsqtzbsrgnow", response.iterator().next().properties().inventoryItemId());
        Assertions.assertEquals("hfgmvecactxm", response.iterator().next().properties().uuid());
        Assertions.assertEquals("teyowclu", response.iterator().next().properties().vmmServerId());
        Assertions.assertEquals("ypxiutcxap", response.iterator().next().extendedLocation().type());
        Assertions.assertEquals("y", response.iterator().next().extendedLocation().name());
    }
}

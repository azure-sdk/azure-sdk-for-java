// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.scvmm.models.CreateDiffDisk;
import com.azure.resourcemanager.scvmm.models.StorageProfile;
import com.azure.resourcemanager.scvmm.models.StorageQosPolicyDetails;
import com.azure.resourcemanager.scvmm.models.VirtualDisk;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class StorageProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        StorageProfile model = BinaryData.fromString(
            "{\"disks\":[{\"name\":\"w\",\"displayName\":\"lrcoolsttpki\",\"diskId\":\"kbnujr\",\"diskSizeGB\":429689436,\"maxDiskSizeGB\":90585391,\"bus\":151793614,\"lun\":1162335366,\"busType\":\"curdoiwiitht\",\"vhdType\":\"ubxcbihw\",\"volumeType\":\"nfdn\",\"vhdFormatType\":\"jchrdgoihxumw\",\"templateDiskId\":\"ond\",\"storageQoSPolicy\":{\"name\":\"uu\",\"id\":\"dlwggytsbwtovv\"},\"createDiffDisk\":\"false\"},{\"name\":\"inqfiufxqknpirgn\",\"displayName\":\"ttwqmsni\",\"diskId\":\"cdm\",\"diskSizeGB\":266606002,\"maxDiskSizeGB\":235273121,\"bus\":803649154,\"lun\":1533423181,\"busType\":\"k\",\"vhdType\":\"frddhcrati\",\"volumeType\":\"ronasxift\",\"vhdFormatType\":\"qyzhf\",\"templateDiskId\":\"esgogc\",\"storageQoSPolicy\":{\"name\":\"nnxk\",\"id\":\"gnyhmossxkkg\"},\"createDiffDisk\":\"false\"}]}")
            .toObject(StorageProfile.class);
        Assertions.assertEquals("w", model.disks().get(0).name());
        Assertions.assertEquals("kbnujr", model.disks().get(0).diskId());
        Assertions.assertEquals(429689436, model.disks().get(0).diskSizeGB());
        Assertions.assertEquals(151793614, model.disks().get(0).bus());
        Assertions.assertEquals(1162335366, model.disks().get(0).lun());
        Assertions.assertEquals("curdoiwiitht", model.disks().get(0).busType());
        Assertions.assertEquals("ubxcbihw", model.disks().get(0).vhdType());
        Assertions.assertEquals("ond", model.disks().get(0).templateDiskId());
        Assertions.assertEquals("uu", model.disks().get(0).storageQosPolicy().name());
        Assertions.assertEquals("dlwggytsbwtovv", model.disks().get(0).storageQosPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.disks().get(0).createDiffDisk());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        StorageProfile model
            = new StorageProfile()
                .withDisks(
                    Arrays
                        .asList(
                            new VirtualDisk().withName("w")
                                .withDiskId("kbnujr")
                                .withDiskSizeGB(429689436)
                                .withBus(151793614)
                                .withLun(1162335366)
                                .withBusType("curdoiwiitht")
                                .withVhdType("ubxcbihw")
                                .withTemplateDiskId("ond")
                                .withStorageQosPolicy(
                                    new StorageQosPolicyDetails().withName("uu").withId("dlwggytsbwtovv"))
                                .withCreateDiffDisk(CreateDiffDisk.FALSE),
                            new VirtualDisk().withName("inqfiufxqknpirgn")
                                .withDiskId("cdm")
                                .withDiskSizeGB(266606002)
                                .withBus(803649154)
                                .withLun(1533423181)
                                .withBusType("k")
                                .withVhdType("frddhcrati")
                                .withTemplateDiskId("esgogc")
                                .withStorageQosPolicy(
                                    new StorageQosPolicyDetails().withName("nnxk").withId("gnyhmossxkkg"))
                                .withCreateDiffDisk(CreateDiffDisk.FALSE)));
        model = BinaryData.fromObject(model).toObject(StorageProfile.class);
        Assertions.assertEquals("w", model.disks().get(0).name());
        Assertions.assertEquals("kbnujr", model.disks().get(0).diskId());
        Assertions.assertEquals(429689436, model.disks().get(0).diskSizeGB());
        Assertions.assertEquals(151793614, model.disks().get(0).bus());
        Assertions.assertEquals(1162335366, model.disks().get(0).lun());
        Assertions.assertEquals("curdoiwiitht", model.disks().get(0).busType());
        Assertions.assertEquals("ubxcbihw", model.disks().get(0).vhdType());
        Assertions.assertEquals("ond", model.disks().get(0).templateDiskId());
        Assertions.assertEquals("uu", model.disks().get(0).storageQosPolicy().name());
        Assertions.assertEquals("dlwggytsbwtovv", model.disks().get(0).storageQosPolicy().id());
        Assertions.assertEquals(CreateDiffDisk.FALSE, model.disks().get(0).createDiffDisk());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.scvmm.ScvmmManager;
import com.azure.resourcemanager.scvmm.models.ExtendedLocation;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplate;
import com.azure.resourcemanager.scvmm.models.VirtualMachineTemplateProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VirtualMachineTemplatesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"inventoryItemId\":\"yefchnm\",\"uuid\":\"hmnxhkxjqi\",\"vmmServerId\":\"rweooxffifhx\",\"osType\":\"Linux\",\"osName\":\"ewmozqvbu\",\"computerName\":\"ma\",\"memoryMB\":422163654,\"cpuCount\":411873796,\"limitCpuForMigration\":\"true\",\"dynamicMemoryEnabled\":\"true\",\"isCustomizable\":\"false\",\"dynamicMemoryMaxMB\":1001749710,\"dynamicMemoryMinMB\":626371863,\"isHighlyAvailable\":\"true\",\"generation\":459855545,\"networkInterfaces\":[{\"name\":\"qhppubowsepdfgk\",\"displayName\":\"dherngbtcj\",\"ipv4Addresses\":[\"okqtobk\"],\"ipv6Addresses\":[\"ofshfphwpnulaiyw\"],\"macAddress\":\"jy\",\"virtualNetworkId\":\"slwkojpl\",\"networkName\":\"dnpdwrpqaf\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"hyet\"},{\"name\":\"ypococtfjgtixr\",\"displayName\":\"zuyt\",\"ipv4Addresses\":[\"lmuowo\",\"bauiropi\"],\"ipv6Addresses\":[\"zonwpngajinnixj\",\"wrtmjfjmy\",\"cxlzhcoxovnekh\",\"nlusfnrd\"],\"macAddress\":\"xtxrdcqtjvidt\",\"virtualNetworkId\":\"epu\",\"networkName\":\"vyjtcvu\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Static\",\"macAddressType\":\"Dynamic\",\"nicId\":\"sfuughtuqfecjx\"},{\"name\":\"gtuhxuicbu\",\"displayName\":\"mr\",\"ipv4Addresses\":[\"jlxuz\"],\"ipv6Addresses\":[\"pusxjb\",\"qehgpd\",\"hzjqatucoige\"],\"macAddress\":\"ncnwfepbnwgf\",\"virtualNetworkId\":\"jgcgbjbgdlfgtdys\",\"networkName\":\"quflqbctq\",\"ipv4AddressType\":\"Dynamic\",\"ipv6AddressType\":\"Dynamic\",\"macAddressType\":\"Dynamic\",\"nicId\":\"kqzeqyjleziunjx\"}],\"disks\":[{\"name\":\"ntkwcegy\",\"displayName\":\"lbnseqac\",\"diskId\":\"vpilg\",\"diskSizeGB\":471177437,\"maxDiskSizeGB\":1467535453,\"bus\":1868502352,\"lun\":41587337,\"busType\":\"tg\",\"vhdType\":\"iookjbsah\",\"volumeType\":\"dt\",\"vhdFormatType\":\"elqacslmot\",\"templateDiskId\":\"bnfxofvc\",\"storageQoSPolicy\":{\"name\":\"dirazf\",\"id\":\"ejwabmdujtmvco\"},\"createDiffDisk\":\"true\"},{\"name\":\"m\",\"displayName\":\"rbuhhlky\",\"diskId\":\"tqsrogtuwkff\",\"diskSizeGB\":1799712298,\"maxDiskSizeGB\":1557166482,\"bus\":1340811417,\"lun\":634007444,\"busType\":\"vclglxnfuij\",\"vhdType\":\"busqogsfi\",\"volumeType\":\"yi\",\"vhdFormatType\":\"sharujtj\",\"templateDiskId\":\"xfz\",\"storageQoSPolicy\":{\"name\":\"ttvwkpqh\",\"id\":\"enuygbq\"},\"createDiffDisk\":\"false\"},{\"name\":\"kewvnqv\",\"displayName\":\"lguaucm\",\"diskId\":\"jwnlax\",\"diskSizeGB\":1875092168,\"maxDiskSizeGB\":415193474,\"bus\":1924185709,\"lun\":1185244352,\"busType\":\"vitac\",\"vhdType\":\"mfcsserx\",\"volumeType\":\"vs\",\"vhdFormatType\":\"hlwntsjgq\",\"templateDiskId\":\"xypruuuy\",\"storageQoSPolicy\":{\"name\":\"hrszi\",\"id\":\"yuel\"},\"createDiffDisk\":\"true\"}],\"provisioningState\":\"Succeeded\"},\"extendedLocation\":{\"type\":\"bf\",\"name\":\"ggagfln\"},\"location\":\"mtrwah\",\"tags\":{\"rohkpigqfusu\":\"ucftbyrp\"},\"id\":\"kzmkwklsnoxaxmqe\",\"name\":\"alhhjnhgwydyynfs\",\"type\":\"khgb\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ScvmmManager manager = ScvmmManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        VirtualMachineTemplate response = manager.virtualMachineTemplates()
            .define("gqoweyirdhlisn")
            .withRegion("qlafcbahhpzpofoi")
            .withExistingResourceGroup("wtqabpxuckp")
            .withExtendedLocation(new ExtendedLocation().withType("cloxo").withName("qinjipnwjf"))
            .withTags(mapOf("ilkmk", "p"))
            .withProperties(new VirtualMachineTemplateProperties().withInventoryItemId("lqqmpiz")
                .withUuid("w")
                .withVmmServerId("qxpxiwfcngjsaa"))
            .create();

        Assertions.assertEquals("mtrwah", response.location());
        Assertions.assertEquals("ucftbyrp", response.tags().get("rohkpigqfusu"));
        Assertions.assertEquals("yefchnm", response.properties().inventoryItemId());
        Assertions.assertEquals("hmnxhkxjqi", response.properties().uuid());
        Assertions.assertEquals("rweooxffifhx", response.properties().vmmServerId());
        Assertions.assertEquals("bf", response.extendedLocation().type());
        Assertions.assertEquals("ggagfln", response.extendedLocation().name());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

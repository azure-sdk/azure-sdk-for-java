// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.scvmm.fluent.models.VirtualMachineInstanceUpdateProperties;
import java.io.IOException;
import java.util.List;

/**
 * The type used for update operations of the VirtualMachineInstance.
 */
@Fluent
public final class VirtualMachineInstanceUpdate implements JsonSerializable<VirtualMachineInstanceUpdate> {
    /*
     * The update properties of the VirtualMachineInstance.
     */
    private VirtualMachineInstanceUpdateProperties innerProperties;

    /**
     * Creates an instance of VirtualMachineInstanceUpdate class.
     */
    public VirtualMachineInstanceUpdate() {
    }

    /**
     * Get the innerProperties property: The update properties of the VirtualMachineInstance.
     * 
     * @return the innerProperties value.
     */
    private VirtualMachineInstanceUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the availabilitySets property: Availability Sets in vm.
     * 
     * @return the availabilitySets value.
     */
    public List<AvailabilitySetListItem> availabilitySets() {
        return this.innerProperties() == null ? null : this.innerProperties().availabilitySets();
    }

    /**
     * Set the availabilitySets property: Availability Sets in vm.
     * 
     * @param availabilitySets the availabilitySets value to set.
     * @return the VirtualMachineInstanceUpdate object itself.
     */
    public VirtualMachineInstanceUpdate withAvailabilitySets(List<AvailabilitySetListItem> availabilitySets) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualMachineInstanceUpdateProperties();
        }
        this.innerProperties().withAvailabilitySets(availabilitySets);
        return this;
    }

    /**
     * Get the hardwareProfile property: Hardware properties.
     * 
     * @return the hardwareProfile value.
     */
    public HardwareProfileUpdate hardwareProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().hardwareProfile();
    }

    /**
     * Set the hardwareProfile property: Hardware properties.
     * 
     * @param hardwareProfile the hardwareProfile value to set.
     * @return the VirtualMachineInstanceUpdate object itself.
     */
    public VirtualMachineInstanceUpdate withHardwareProfile(HardwareProfileUpdate hardwareProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualMachineInstanceUpdateProperties();
        }
        this.innerProperties().withHardwareProfile(hardwareProfile);
        return this;
    }

    /**
     * Get the networkProfile property: Network properties.
     * 
     * @return the networkProfile value.
     */
    public NetworkProfileUpdate networkProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().networkProfile();
    }

    /**
     * Set the networkProfile property: Network properties.
     * 
     * @param networkProfile the networkProfile value to set.
     * @return the VirtualMachineInstanceUpdate object itself.
     */
    public VirtualMachineInstanceUpdate withNetworkProfile(NetworkProfileUpdate networkProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualMachineInstanceUpdateProperties();
        }
        this.innerProperties().withNetworkProfile(networkProfile);
        return this;
    }

    /**
     * Get the storageProfile property: Storage properties.
     * 
     * @return the storageProfile value.
     */
    public StorageProfileUpdate storageProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().storageProfile();
    }

    /**
     * Set the storageProfile property: Storage properties.
     * 
     * @param storageProfile the storageProfile value to set.
     * @return the VirtualMachineInstanceUpdate object itself.
     */
    public VirtualMachineInstanceUpdate withStorageProfile(StorageProfileUpdate storageProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualMachineInstanceUpdateProperties();
        }
        this.innerProperties().withStorageProfile(storageProfile);
        return this;
    }

    /**
     * Get the infrastructureProfile property: Gets the infrastructure profile.
     * 
     * @return the infrastructureProfile value.
     */
    public InfrastructureProfileUpdate infrastructureProfile() {
        return this.innerProperties() == null ? null : this.innerProperties().infrastructureProfile();
    }

    /**
     * Set the infrastructureProfile property: Gets the infrastructure profile.
     * 
     * @param infrastructureProfile the infrastructureProfile value to set.
     * @return the VirtualMachineInstanceUpdate object itself.
     */
    public VirtualMachineInstanceUpdate withInfrastructureProfile(InfrastructureProfileUpdate infrastructureProfile) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VirtualMachineInstanceUpdateProperties();
        }
        this.innerProperties().withInfrastructureProfile(infrastructureProfile);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VirtualMachineInstanceUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VirtualMachineInstanceUpdate if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the VirtualMachineInstanceUpdate.
     */
    public static VirtualMachineInstanceUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VirtualMachineInstanceUpdate deserializedVirtualMachineInstanceUpdate = new VirtualMachineInstanceUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedVirtualMachineInstanceUpdate.innerProperties
                        = VirtualMachineInstanceUpdateProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVirtualMachineInstanceUpdate;
        });
    }
}

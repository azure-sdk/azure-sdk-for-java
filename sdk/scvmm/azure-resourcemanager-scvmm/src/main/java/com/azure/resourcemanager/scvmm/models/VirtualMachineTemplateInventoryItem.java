// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The Virtual machine template inventory item.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "inventoryType",
    defaultImpl = VirtualMachineTemplateInventoryItem.class,
    visible = true)
@JsonTypeName("VirtualMachineTemplate")
@Immutable
public final class VirtualMachineTemplateInventoryItem extends InventoryItemProperties {
    /*
     * They inventory type.
     */
    @JsonTypeId
    @JsonProperty(value = "inventoryType", required = true)
    private InventoryType inventoryType = InventoryType.VIRTUAL_MACHINE_TEMPLATE;

    /*
     * Gets the desired number of vCPUs for the vm.
     */
    @JsonProperty(value = "cpuCount", access = JsonProperty.Access.WRITE_ONLY)
    private Integer cpuCount;

    /*
     * MemoryMB is the desired size of a virtual machine's memory, in MB.
     */
    @JsonProperty(value = "memoryMB", access = JsonProperty.Access.WRITE_ONLY)
    private Integer memoryMB;

    /*
     * Gets the type of the os.
     */
    @JsonProperty(value = "osType", access = JsonProperty.Access.WRITE_ONLY)
    private OsType osType;

    /*
     * Gets os name.
     */
    @JsonProperty(value = "osName", access = JsonProperty.Access.WRITE_ONLY)
    private String osName;

    /**
     * Creates an instance of VirtualMachineTemplateInventoryItem class.
     */
    public VirtualMachineTemplateInventoryItem() {
    }

    /**
     * Get the inventoryType property: They inventory type.
     * 
     * @return the inventoryType value.
     */
    @Override
    public InventoryType inventoryType() {
        return this.inventoryType;
    }

    /**
     * Get the cpuCount property: Gets the desired number of vCPUs for the vm.
     * 
     * @return the cpuCount value.
     */
    public Integer cpuCount() {
        return this.cpuCount;
    }

    /**
     * Get the memoryMB property: MemoryMB is the desired size of a virtual machine's memory, in MB.
     * 
     * @return the memoryMB value.
     */
    public Integer memoryMB() {
        return this.memoryMB;
    }

    /**
     * Get the osType property: Gets the type of the os.
     * 
     * @return the osType value.
     */
    public OsType osType() {
        return this.osType;
    }

    /**
     * Get the osName property: Gets os name.
     * 
     * @return the osName value.
     */
    public String osName() {
        return this.osName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scvmm.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of VmmServers.
 */
public interface VmmServers {
    /**
     * List of VmmServers in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VmmServer list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VmmServer> list();

    /**
     * List of VmmServers in a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VmmServer list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VmmServer> list(Context context);

    /**
     * List of VmmServers in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VmmServer list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VmmServer> listByResourceGroup(String resourceGroupName);

    /**
     * List of VmmServers in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a VmmServer list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<VmmServer> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Implements VmmServer GET method.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the VmmServers resource definition along with {@link Response}.
     */
    Response<VmmServer> getByResourceGroupWithResponse(String resourceGroupName, String vmmServerName, Context context);

    /**
     * Implements VmmServer GET method.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the VmmServers resource definition.
     */
    VmmServer getByResourceGroup(String resourceGroupName, String vmmServerName);

    /**
     * Removes the SCVmm fabric from Azure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String vmmServerName);

    /**
     * Removes the SCVmm fabric from Azure.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmmServerName Name of the VmmServer.
     * @param force Forces the resource to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String vmmServerName, Boolean force, Context context);

    /**
     * Implements VmmServer GET method.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the VmmServers resource definition along with {@link Response}.
     */
    VmmServer getById(String id);

    /**
     * Implements VmmServer GET method.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the VmmServers resource definition along with {@link Response}.
     */
    Response<VmmServer> getByIdWithResponse(String id, Context context);

    /**
     * Removes the SCVmm fabric from Azure.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Removes the SCVmm fabric from Azure.
     * 
     * @param id the resource ID.
     * @param force Forces the resource to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Boolean force, Context context);

    /**
     * Begins definition for a new VmmServer resource.
     * 
     * @param name resource name.
     * @return the first stage of the new VmmServer definition.
     */
    VmmServer.DefinitionStages.Blank define(String name);
}

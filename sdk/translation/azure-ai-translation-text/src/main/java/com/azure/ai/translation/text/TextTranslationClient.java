// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.translation.text;

import com.azure.ai.translation.text.implementation.TextTranslationClientImpl;
import com.azure.ai.translation.text.models.GetSupportedLanguagesResult;
import com.azure.ai.translation.text.models.InputTextItem;
import com.azure.ai.translation.text.models.TranslateBodyDetails;
import com.azure.ai.translation.text.models.TranslatedTextItem;
import com.azure.ai.translation.text.models.TransliteratedText;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpHeaderName;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.serializer.TypeReference;
import java.util.List;

/**
 * Initializes a new instance of the synchronous TextTranslationClient type.
 */
@ServiceClient(builder = TextTranslationClientBuilder.class)
public final class TextTranslationClient {
    @Generated
    private final TextTranslationClientImpl serviceClient;

    /**
     * Initializes an instance of TextTranslationClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    TextTranslationClient(TextTranslationClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets the set of languages currently supported by other operations of the Translator.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>scope</td><td>String</td><td>No</td><td>A comma-separated list of names defining the group of languages
     * to return.
     * Allowed group names are: `translation`, `transliteration` and `dictionary`.
     * If no scope is given, then all groups are returned, which is equivalent to passing
     * `scope=translation,transliteration,dictionary`. To decide which set of supported languages
     * is appropriate for your scenario, see the description of the [response object](#response-body).</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>X-ClientTraceId</td><td>String</td><td>No</td><td>A client-generated GUID to uniquely identify the
     * request.</td></tr>
     * <tr><td>Accept-Language</td><td>String</td><td>No</td><td>The language to use for user interface strings. Some of
     * the fields in the response are names of languages or
     * names of regions. Use this parameter to define the language in which these names are returned.
     * The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr`
     * to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.
     * Names are provided in the English language when a target language is not specified or when localization
     * is not available.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>Passing the value of the ETag response header in an
     * If-None-Match field will allow the service to optimize the response.
     * If the resource has not been modified, the service will return status code 304 and an empty response
     * body.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     translation (Optional): {
     *         String (Required): {
     *             name: String (Required)
     *             nativeName: String (Required)
     *             dir: String(ltr/rtl) (Required)
     *         }
     *     }
     *     transliteration (Optional): {
     *         String (Required): {
     *             name: String (Required)
     *             nativeName: String (Required)
     *             scripts (Required): [
     *                  (Required){
     *                     code: String (Required)
     *                     name: String (Required)
     *                     nativeName: String (Required)
     *                     dir: String(ltr/rtl) (Required)
     *                     toScripts (Required): [
     *                          (Required){
     *                             code: String (Required)
     *                             name: String (Required)
     *                             nativeName: String (Required)
     *                             dir: String(ltr/rtl) (Required)
     *                         }
     *                     ]
     *                 }
     *             ]
     *         }
     *     }
     *     dictionary (Optional): {
     *         String (Required): {
     *             name: String (Required)
     *             nativeName: String (Required)
     *             dir: String(ltr/rtl) (Required)
     *             translations (Required): [
     *                  (Required){
     *                     name: String (Required)
     *                     nativeName: String (Required)
     *                     dir: String(ltr/rtl) (Required)
     *                     code: String (Required)
     *                 }
     *             ]
     *         }
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the set of languages currently supported by other operations of the Translator along with
     * {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getSupportedLanguagesWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getSupportedLanguagesWithResponse(requestOptions);
    }

    /**
     * Translate Text.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>X-ClientTraceId</td><td>String</td><td>No</td><td>A client-generated GUID to uniquely identify the
     * request.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * [
     *      (Required){
     *         text: String (Required)
     *         script: String (Optional)
     *         language: String (Optional)
     *         textType: String(Plain/Html) (Optional)
     *         targets (Required): [
     *              (Required){
     *                 language (Required): [
     *                     String (Required)
     *                 ]
     *                 script: String (Optional)
     *                 profanityAction: String(NoAction/Marked/Deleted) (Optional)
     *                 profanityMarker: String(Asterisk/Tag) (Optional)
     *                 deploymentNameModel: String (Optional)
     *                 allowFallback: Boolean (Optional)
     *                 grade: String (Optional)
     *                 tone: String (Optional)
     *                 gender: String (Optional)
     *                 adaptiveDatasetId: String (Optional)
     *                 referenceTextPairs (Optional): [
     *                      (Optional){
     *                         referenceTextPairsSource: String (Required)
     *                         referenceTextPairsTarget: String (Required)
     *                     }
     *                 ]
     *             }
     *         ]
     *     }
     * ]
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * [
     *      (Required){
     *         detectedLanguage (Optional): {
     *             language: String (Required)
     *             score: double (Required)
     *         }
     *         translations (Required): [
     *              (Required){
     *                 to: String (Required)
     *                 text: String (Required)
     *                 transliteration (Optional): {
     *                     text: String (Required)
     *                     script: String (Required)
     *                 }
     *             }
     *         ]
     *         sourceText (Optional): {
     *             text: String (Required)
     *         }
     *     }
     * ]
     * }
     * </pre>
     * 
     * @param body Defines the content of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> translate2WithResponse(BinaryData body, RequestOptions requestOptions) {
        return this.serviceClient.translate2WithResponse(body, requestOptions);
    }

    /**
     * Transliterate Text.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>X-ClientTraceId</td><td>String</td><td>No</td><td>A client-generated GUID to uniquely identify the
     * request.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * [
     *      (Required){
     *         text: String (Required)
     *     }
     * ]
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * [
     *      (Required){
     *         text: String (Required)
     *         script: String (Required)
     *     }
     * ]
     * }
     * </pre>
     * 
     * @param language Specifies the language of the text to convert from one script to another.
     * Possible languages are listed in the transliteration scope obtained by querying the service
     * for its supported languages.
     * @param sourceLanguageScript Specifies the script used by the input text. Look up supported languages using the
     * transliteration scope,
     * to find input scripts available for the selected language.
     * @param targetLanguageScript Specifies the output script. Look up supported languages using the transliteration
     * scope, to find output
     * scripts available for the selected combination of input language and input script.
     * @param body Defines the content of the request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> transliterateWithResponse(String language, String sourceLanguageScript,
        String targetLanguageScript, BinaryData body, RequestOptions requestOptions) {
        return this.serviceClient.transliterateWithResponse(language, sourceLanguageScript, targetLanguageScript, body,
            requestOptions);
    }

    /**
     * Gets the set of languages currently supported by other operations of the Translator.
     * 
     * @param clientTraceId A client-generated GUID to uniquely identify the request.
     * @param scope A comma-separated list of names defining the group of languages to return.
     * Allowed group names are: `translation`, `transliteration` and `dictionary`.
     * If no scope is given, then all groups are returned, which is equivalent to passing
     * `scope=translation,transliteration,dictionary`. To decide which set of supported languages
     * is appropriate for your scenario, see the description of the [response object](#response-body).
     * @param acceptLanguage The language to use for user interface strings. Some of the fields in the response are
     * names of languages or
     * names of regions. Use this parameter to define the language in which these names are returned.
     * The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr`
     * to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.
     * Names are provided in the English language when a target language is not specified or when localization
     * is not available.
     * @param ifNoneMatch Passing the value of the ETag response header in an If-None-Match field will allow the service
     * to optimize the response.
     * If the resource has not been modified, the service will return status code 304 and an empty response body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the set of languages currently supported by other operations of the Translator.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GetSupportedLanguagesResult getSupportedLanguages(String clientTraceId, String scope, String acceptLanguage,
        String ifNoneMatch) {
        // Generated convenience method for getSupportedLanguagesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (clientTraceId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("X-ClientTraceId"), clientTraceId);
        }
        if (scope != null) {
            requestOptions.addQueryParam("scope", scope, false);
        }
        if (acceptLanguage != null) {
            requestOptions.setHeader(HttpHeaderName.ACCEPT_LANGUAGE, acceptLanguage);
        }
        if (ifNoneMatch != null) {
            requestOptions.setHeader(HttpHeaderName.IF_NONE_MATCH, ifNoneMatch);
        }
        return getSupportedLanguagesWithResponse(requestOptions).getValue().toObject(GetSupportedLanguagesResult.class);
    }

    /**
     * Gets the set of languages currently supported by other operations of the Translator.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the set of languages currently supported by other operations of the Translator.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GetSupportedLanguagesResult getSupportedLanguages() {
        // Generated convenience method for getSupportedLanguagesWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getSupportedLanguagesWithResponse(requestOptions).getValue().toObject(GetSupportedLanguagesResult.class);
    }

    /**
     * Translate Text.
     * 
     * @param body Defines the content of the request.
     * @param clientTraceId A client-generated GUID to uniquely identify the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public List<TranslatedTextItem> translate2(List<TranslateBodyDetails> body, String clientTraceId) {
        // Generated convenience method for translate2WithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (clientTraceId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("X-ClientTraceId"), clientTraceId);
        }
        return translate2WithResponse(BinaryData.fromObject(body), requestOptions).getValue()
            .toObject(TYPE_REFERENCE_LIST_TRANSLATED_TEXT_ITEM);
    }

    /**
     * Translate Text.
     * 
     * @param body Defines the content of the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public List<TranslatedTextItem> translate2(List<TranslateBodyDetails> body) {
        // Generated convenience method for translate2WithResponse
        RequestOptions requestOptions = new RequestOptions();
        return translate2WithResponse(BinaryData.fromObject(body), requestOptions).getValue()
            .toObject(TYPE_REFERENCE_LIST_TRANSLATED_TEXT_ITEM);
    }

    /**
     * Transliterate Text.
     * 
     * @param language Specifies the language of the text to convert from one script to another.
     * Possible languages are listed in the transliteration scope obtained by querying the service
     * for its supported languages.
     * @param sourceLanguageScript Specifies the script used by the input text. Look up supported languages using the
     * transliteration scope,
     * to find input scripts available for the selected language.
     * @param targetLanguageScript Specifies the output script. Look up supported languages using the transliteration
     * scope, to find output
     * scripts available for the selected combination of input language and input script.
     * @param body Defines the content of the request.
     * @param clientTraceId A client-generated GUID to uniquely identify the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public List<TransliteratedText> transliterate(String language, String sourceLanguageScript,
        String targetLanguageScript, List<InputTextItem> body, String clientTraceId) {
        // Generated convenience method for transliterateWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (clientTraceId != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("X-ClientTraceId"), clientTraceId);
        }
        return transliterateWithResponse(language, sourceLanguageScript, targetLanguageScript,
            BinaryData.fromObject(body), requestOptions).getValue().toObject(TYPE_REFERENCE_LIST_TRANSLITERATED_TEXT);
    }

    /**
     * Transliterate Text.
     * 
     * @param language Specifies the language of the text to convert from one script to another.
     * Possible languages are listed in the transliteration scope obtained by querying the service
     * for its supported languages.
     * @param sourceLanguageScript Specifies the script used by the input text. Look up supported languages using the
     * transliteration scope,
     * to find input scripts available for the selected language.
     * @param targetLanguageScript Specifies the output script. Look up supported languages using the transliteration
     * scope, to find output
     * scripts available for the selected combination of input language and input script.
     * @param body Defines the content of the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public List<TransliteratedText> transliterate(String language, String sourceLanguageScript,
        String targetLanguageScript, List<InputTextItem> body) {
        // Generated convenience method for transliterateWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return transliterateWithResponse(language, sourceLanguageScript, targetLanguageScript,
            BinaryData.fromObject(body), requestOptions).getValue().toObject(TYPE_REFERENCE_LIST_TRANSLITERATED_TEXT);
    }

    @Generated
    private static final TypeReference<List<TransliteratedText>> TYPE_REFERENCE_LIST_TRANSLITERATED_TEXT
        = new TypeReference<List<TransliteratedText>>() {
        };

    @Generated
    private static final TypeReference<List<TranslatedTextItem>> TYPE_REFERENCE_LIST_TRANSLATED_TEXT_ITEM
        = new TypeReference<List<TranslatedTextItem>>() {
        };
}

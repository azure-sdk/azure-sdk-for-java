// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azuredatatransfer.fluent.ListPendingConnectionsClient;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.PendingConnectionInner;
import com.azure.resourcemanager.azuredatatransfer.models.ListPendingConnections;
import com.azure.resourcemanager.azuredatatransfer.models.PendingConnection;

public final class ListPendingConnectionsImpl implements ListPendingConnections {
    private static final ClientLogger LOGGER = new ClientLogger(ListPendingConnectionsImpl.class);

    private final ListPendingConnectionsClient innerClient;

    private final com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager serviceManager;

    public ListPendingConnectionsImpl(
        ListPendingConnectionsClient innerClient,
        com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PendingConnection> list(String resourceGroupName, String connectionName) {
        PagedIterable<PendingConnectionInner> inner = this.serviceClient().list(resourceGroupName, connectionName);
        return Utils.mapPage(inner, inner1 -> new PendingConnectionImpl(inner1, this.manager()));
    }

    public PagedIterable<PendingConnection> list(String resourceGroupName, String connectionName, Context context) {
        PagedIterable<PendingConnectionInner> inner =
            this.serviceClient().list(resourceGroupName, connectionName, context);
        return Utils.mapPage(inner, inner1 -> new PendingConnectionImpl(inner1, this.manager()));
    }

    private ListPendingConnectionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/**
 * Internal metadata of the connection inside pipeline.
 */
@Fluent
public final class InternalMetadataProperties {
    /*
     * Operation status associated with the last patch request
     */
    @JsonProperty(value = "operationStatus")
    private OperationStatusProperties operationStatus;

    /*
     * User that last set the approved status for this connection
     */
    @JsonProperty(value = "statusSetBy", access = JsonProperty.Access.WRITE_ONLY)
    private String statusSetBy;

    /*
     * Internal metadata of the connection inside pipeline.
     */
    @JsonIgnore
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of InternalMetadataProperties class.
     */
    public InternalMetadataProperties() {
    }

    /**
     * Get the operationStatus property: Operation status associated with the last patch request.
     * 
     * @return the operationStatus value.
     */
    public OperationStatusProperties operationStatus() {
        return this.operationStatus;
    }

    /**
     * Set the operationStatus property: Operation status associated with the last patch request.
     * 
     * @param operationStatus the operationStatus value to set.
     * @return the InternalMetadataProperties object itself.
     */
    public InternalMetadataProperties withOperationStatus(OperationStatusProperties operationStatus) {
        this.operationStatus = operationStatus;
        return this;
    }

    /**
     * Get the statusSetBy property: User that last set the approved status for this connection.
     * 
     * @return the statusSetBy value.
     */
    public String statusSetBy() {
        return this.statusSetBy;
    }

    /**
     * Get the additionalProperties property: Internal metadata of the connection inside pipeline.
     * 
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Internal metadata of the connection inside pipeline.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the InternalMetadataProperties object itself.
     */
    public InternalMetadataProperties withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (operationStatus() != null) {
            operationStatus().validate();
        }
    }
}

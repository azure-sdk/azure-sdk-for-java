// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The schema object.
 */
@Fluent
public final class Schema {
    /*
     * ID associated with this schema
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Connection ID associated with this schema
     */
    @JsonProperty(value = "connectionId")
    private String connectionId;

    /*
     * Status of the schema
     */
    @JsonProperty(value = "status")
    private SchemaStatus status;

    /*
     * Name of the schema
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Content of the schema
     */
    @JsonProperty(value = "content")
    private String content;

    /**
     * Creates an instance of Schema class.
     */
    public Schema() {
    }

    /**
     * Get the id property: ID associated with this schema.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: ID associated with this schema.
     * 
     * @param id the id value to set.
     * @return the Schema object itself.
     */
    public Schema withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the connectionId property: Connection ID associated with this schema.
     * 
     * @return the connectionId value.
     */
    public String connectionId() {
        return this.connectionId;
    }

    /**
     * Set the connectionId property: Connection ID associated with this schema.
     * 
     * @param connectionId the connectionId value to set.
     * @return the Schema object itself.
     */
    public Schema withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }

    /**
     * Get the status property: Status of the schema.
     * 
     * @return the status value.
     */
    public SchemaStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the schema.
     * 
     * @param status the status value to set.
     * @return the Schema object itself.
     */
    public Schema withStatus(SchemaStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the name property: Name of the schema.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the schema.
     * 
     * @param name the name value to set.
     * @return the Schema object itself.
     */
    public Schema withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the content property: Content of the schema.
     * 
     * @return the content value.
     */
    public String content() {
        return this.content;
    }

    /**
     * Set the content property: Content of the schema.
     * 
     * @param content the content value to set.
     * @return the Schema object itself.
     */
    public Schema withContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

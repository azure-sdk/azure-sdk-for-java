// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Pipelines.
 */
public interface Pipelines {
    /**
     * Gets pipelines in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Pipeline> listBySubscription();

    /**
     * Gets pipelines in a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Pipeline> listBySubscription(Context context);

    /**
     * Gets pipelines in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Pipeline> listByResourceGroup(String resourceGroupName);

    /**
     * Gets pipelines in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Pipeline> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipeline resource along with {@link Response}.
     */
    Response<Pipeline> getByResourceGroupWithResponse(String resourceGroupName, String pipelineName, Context context);

    /**
     * Gets pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipeline resource.
     */
    Pipeline getByResourceGroup(String resourceGroupName, String pipelineName);

    /**
     * Deletes the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String pipelineName);

    /**
     * Deletes the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String pipelineName, Context context);

    /**
     * Approves the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    Connection approveConnection(String resourceGroupName, String pipelineName, ResourceBody body);

    /**
     * Approves the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    Connection approveConnection(String resourceGroupName, String pipelineName, ResourceBody body, Context context);

    /**
     * Executes a privileged action for a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Action to execute.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    Pipeline executeAction(String resourceGroupName, String pipelineName, Action body);

    /**
     * Executes a privileged action for a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Action to execute.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    Pipeline executeAction(String resourceGroupName, String pipelineName, Action body, Context context);

    /**
     * Lists the flows in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param connections Connection(s) to retrieve flows of.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an array of flow resources along with {@link Response}.
     */
    Response<ListFlowsByPipelineResult> listWithResponse(String resourceGroupName, String pipelineName,
        ConnectionIdList connections, Context context);

    /**
     * Lists the flows in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an array of flow resources.
     */
    ListFlowsByPipelineResult list(String resourceGroupName, String pipelineName);

    /**
     * Lists the schemas for the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Schema(s) to retrieve.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the schemas list result along with {@link Response}.
     */
    Response<SchemasListResult> listSchemasListWithResponse(String resourceGroupName, String pipelineName, Schema body,
        Context context);

    /**
     * Lists the schemas for the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Schema(s) to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the schemas list result.
     */
    SchemasListResult listSchemasList(String resourceGroupName, String pipelineName, Schema body);

    /**
     * Rejects the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    Connection rejectConnection(String resourceGroupName, String pipelineName, ResourceBody body);

    /**
     * Rejects the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    Connection rejectConnection(String resourceGroupName, String pipelineName, ResourceBody body, Context context);

    /**
     * Gets pipeline resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipeline resource along with {@link Response}.
     */
    Pipeline getById(String id);

    /**
     * Gets pipeline resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipeline resource along with {@link Response}.
     */
    Response<Pipeline> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the pipeline resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the pipeline resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Pipeline resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Pipeline definition.
     */
    Pipeline.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azuredatatransfer.fluent.ListFlowsByPipelinesClient;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.ListFlowsByPipelineResultInner;
import com.azure.resourcemanager.azuredatatransfer.models.ConnectionIdList;
import com.azure.resourcemanager.azuredatatransfer.models.ListFlowsByPipelineResult;
import com.azure.resourcemanager.azuredatatransfer.models.ListFlowsByPipelines;

public final class ListFlowsByPipelinesImpl implements ListFlowsByPipelines {
    private static final ClientLogger LOGGER = new ClientLogger(ListFlowsByPipelinesImpl.class);

    private final ListFlowsByPipelinesClient innerClient;

    private final com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager serviceManager;

    public ListFlowsByPipelinesImpl(ListFlowsByPipelinesClient innerClient,
        com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ListFlowsByPipelineResult> listWithResponse(String resourceGroupName, String pipelineName,
        ConnectionIdList connections, Context context) {
        Response<ListFlowsByPipelineResultInner> inner
            = this.serviceClient().listWithResponse(resourceGroupName, pipelineName, connections, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ListFlowsByPipelineResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ListFlowsByPipelineResult list(String resourceGroupName, String pipelineName) {
        ListFlowsByPipelineResultInner inner = this.serviceClient().list(resourceGroupName, pipelineName);
        if (inner != null) {
            return new ListFlowsByPipelineResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ListFlowsByPipelinesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azuredatatransfer.models.DataType;
import com.azure.resourcemanager.azuredatatransfer.models.FlowProperties;
import com.azure.resourcemanager.azuredatatransfer.models.FlowStatus;
import com.azure.resourcemanager.azuredatatransfer.models.FlowType;
import com.azure.resourcemanager.azuredatatransfer.models.MessagingOptions;
import com.azure.resourcemanager.azuredatatransfer.models.Schema;
import com.azure.resourcemanager.azuredatatransfer.models.SelectedResource;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * Pending flow object.
 */
@Fluent
public final class PendingFlowInner extends FlowProperties {
    /*
     * Subscription ID of the pending flow.
     */
    @JsonProperty(value = "subscriptionId", access = JsonProperty.Access.WRITE_ONLY)
    private String subscriptionId;

    /*
     * Connection ID of the pending flow.
     */
    @JsonProperty(value = "connectionId", access = JsonProperty.Access.WRITE_ONLY)
    private String connectionId;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The geo-location where the resource lives
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * the fully qualified resource ID for the resource
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * the name of the resource
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * the type of the resource
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Creates an instance of PendingFlowInner class.
     */
    public PendingFlowInner() {
    }

    /**
     * Get the subscriptionId property: Subscription ID of the pending flow.
     * 
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Get the connectionId property: Connection ID of the pending flow.
     * 
     * @return the connectionId value.
     */
    public String connectionId() {
        return this.connectionId;
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the PendingFlowInner object itself.
     */
    public PendingFlowInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The geo-location where the resource lives.
     * 
     * @param location the location value to set.
     * @return the PendingFlowInner object itself.
     */
    public PendingFlowInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the id property: the fully qualified resource ID for the resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: the name of the resource.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: the type of the resource.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withConnection(SelectedResource connection) {
        super.withConnection(connection);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withKeyVaultUri(String keyVaultUri) {
        super.withKeyVaultUri(keyVaultUri);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withStatus(FlowStatus status) {
        super.withStatus(status);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withStorageAccountName(String storageAccountName) {
        super.withStorageAccountName(storageAccountName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withStorageAccountId(String storageAccountId) {
        super.withStorageAccountId(storageAccountId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withStorageContainerName(String storageContainerName) {
        super.withStorageContainerName(storageContainerName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withServiceBusQueueId(String serviceBusQueueId) {
        super.withServiceBusQueueId(serviceBusQueueId);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withFlowType(FlowType flowType) {
        super.withFlowType(flowType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withDataType(DataType dataType) {
        super.withDataType(dataType);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withPolicies(List<String> policies) {
        super.withPolicies(policies);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withSchema(Schema schema) {
        super.withSchema(schema);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingFlowInner withMessagingOptions(MessagingOptions messagingOptions) {
        super.withMessagingOptions(messagingOptions);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (location() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property location in model PendingFlowInner"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PendingFlowInner.class);
}

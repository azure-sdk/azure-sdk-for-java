// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.ConnectionInner;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.ListFlowsByPipelineResultInner;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.PipelineInner;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.SchemasListResultInner;
import com.azure.resourcemanager.azuredatatransfer.models.Action;
import com.azure.resourcemanager.azuredatatransfer.models.ConnectionIdList;
import com.azure.resourcemanager.azuredatatransfer.models.PipelinesPatch;
import com.azure.resourcemanager.azuredatatransfer.models.ResourceBody;
import com.azure.resourcemanager.azuredatatransfer.models.Schema;

/**
 * An instance of this class provides access to all the operations defined in PipelinesClient.
 */
public interface PipelinesClient {
    /**
     * Gets pipelines in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineInner> listBySubscription();

    /**
     * Gets pipelines in a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineInner> listBySubscription(Context context);

    /**
     * Gets pipelines in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets pipelines in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipelines in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PipelineInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipeline resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PipelineInner> getByResourceGroupWithResponse(String resourceGroupName, String pipelineName,
        Context context);

    /**
     * Gets pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return pipeline resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner getByResourceGroup(String resourceGroupName, String pipelineName);

    /**
     * Creates or updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param resource Pipeline body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineInner>, PipelineInner> beginCreateOrUpdate(String resourceGroupName,
        String pipelineName, PipelineInner resource);

    /**
     * Creates or updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param resource Pipeline body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineInner>, PipelineInner> beginCreateOrUpdate(String resourceGroupName,
        String pipelineName, PipelineInner resource, Context context);

    /**
     * Creates or updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param resource Pipeline body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner createOrUpdate(String resourceGroupName, String pipelineName, PipelineInner resource);

    /**
     * Creates or updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param resource Pipeline body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner createOrUpdate(String resourceGroupName, String pipelineName, PipelineInner resource,
        Context context);

    /**
     * Updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param properties Pipeline body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineInner>, PipelineInner> beginUpdate(String resourceGroupName, String pipelineName,
        PipelinesPatch properties);

    /**
     * Updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param properties Pipeline body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineInner>, PipelineInner> beginUpdate(String resourceGroupName, String pipelineName,
        PipelinesPatch properties, Context context);

    /**
     * Updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param properties Pipeline body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner update(String resourceGroupName, String pipelineName, PipelinesPatch properties);

    /**
     * Updates the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param properties Pipeline body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner update(String resourceGroupName, String pipelineName, PipelinesPatch properties, Context context);

    /**
     * Deletes the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String pipelineName);

    /**
     * Deletes the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String pipelineName, Context context);

    /**
     * Deletes the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String pipelineName);

    /**
     * Deletes the pipeline resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String pipelineName, Context context);

    /**
     * Approves the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginApproveConnection(String resourceGroupName,
        String pipelineName, ResourceBody body);

    /**
     * Approves the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginApproveConnection(String resourceGroupName,
        String pipelineName, ResourceBody body, Context context);

    /**
     * Approves the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner approveConnection(String resourceGroupName, String pipelineName, ResourceBody body);

    /**
     * Approves the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner approveConnection(String resourceGroupName, String pipelineName, ResourceBody body,
        Context context);

    /**
     * Executes a privileged action for a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Action to execute.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineInner>, PipelineInner> beginExecuteAction(String resourceGroupName,
        String pipelineName, Action body);

    /**
     * Executes a privileged action for a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Action to execute.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<PipelineInner>, PipelineInner> beginExecuteAction(String resourceGroupName,
        String pipelineName, Action body, Context context);

    /**
     * Executes a privileged action for a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Action to execute.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner executeAction(String resourceGroupName, String pipelineName, Action body);

    /**
     * Executes a privileged action for a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Action to execute.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the pipeline resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PipelineInner executeAction(String resourceGroupName, String pipelineName, Action body, Context context);

    /**
     * Lists the flows in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param connections Connection(s) to retrieve flows of.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an array of flow resources along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ListFlowsByPipelineResultInner> listWithResponse(String resourceGroupName, String pipelineName,
        ConnectionIdList connections, Context context);

    /**
     * Lists the flows in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an array of flow resources.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ListFlowsByPipelineResultInner list(String resourceGroupName, String pipelineName);

    /**
     * Lists the schemas for the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Schema(s) to retrieve.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the schemas list result along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SchemasListResultInner> listSchemasListWithResponse(String resourceGroupName, String pipelineName,
        Schema body, Context context);

    /**
     * Lists the schemas for the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Schema(s) to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the schemas list result.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SchemasListResultInner listSchemasList(String resourceGroupName, String pipelineName, Schema body);

    /**
     * Rejects the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginRejectConnection(String resourceGroupName,
        String pipelineName, ResourceBody body);

    /**
     * Rejects the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginRejectConnection(String resourceGroupName,
        String pipelineName, ResourceBody body, Context context);

    /**
     * Rejects the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner rejectConnection(String resourceGroupName, String pipelineName, ResourceBody body);

    /**
     * Rejects the specified connection in a pipeline.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param pipelineName The name for the pipeline that is to be requested.
     * @param body Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner rejectConnection(String resourceGroupName, String pipelineName, ResourceBody body, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.ConnectionInner;
import com.azure.resourcemanager.azuredatatransfer.models.ConnectionsPatch;
import com.azure.resourcemanager.azuredatatransfer.models.ResourceBody;

/**
 * An instance of this class provides access to all the operations defined in ConnectionsClient.
 */
public interface ConnectionsClient {
    /**
     * Gets connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connection resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConnectionInner> getByResourceGroupWithResponse(String resourceGroupName, String connectionName,
        Context context);

    /**
     * Gets connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner getByResourceGroup(String resourceGroupName, String connectionName);

    /**
     * Creates or updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginCreateOrUpdate(String resourceGroupName,
        String connectionName, ConnectionInner connection);

    /**
     * Creates or updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginCreateOrUpdate(String resourceGroupName,
        String connectionName, ConnectionInner connection, Context context);

    /**
     * Creates or updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner createOrUpdate(String resourceGroupName, String connectionName, ConnectionInner connection);

    /**
     * Creates or updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner createOrUpdate(String resourceGroupName, String connectionName, ConnectionInner connection,
        Context context);

    /**
     * Deletes the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String connectionName);

    /**
     * Deletes the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String connectionName, Context context);

    /**
     * Deletes the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String connectionName);

    /**
     * Deletes the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String connectionName, Context context);

    /**
     * Updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginUpdate(String resourceGroupName,
        String connectionName, ConnectionsPatch connection);

    /**
     * Updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginUpdate(String resourceGroupName,
        String connectionName, ConnectionsPatch connection, Context context);

    /**
     * Updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner update(String resourceGroupName, String connectionName, ConnectionsPatch connection);

    /**
     * Updates the connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner update(String resourceGroupName, String connectionName, ConnectionsPatch connection,
        Context context);

    /**
     * Links the connection to its pending connection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginLink(String resourceGroupName, String connectionName,
        ResourceBody connection);

    /**
     * Links the connection to its pending connection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ConnectionInner>, ConnectionInner> beginLink(String resourceGroupName, String connectionName,
        ResourceBody connection, Context context);

    /**
     * Links the connection to its pending connection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner link(String resourceGroupName, String connectionName, ResourceBody connection);

    /**
     * Links the connection to its pending connection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param connection Connection body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner link(String resourceGroupName, String connectionName, ResourceBody connection, Context context);

    /**
     * Gets connections in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connections in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConnectionInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets connections in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connections in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConnectionInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets connections in a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connections in a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConnectionInner> list();

    /**
     * Gets connections in a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return connections in a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConnectionInner> list(Context context);
}

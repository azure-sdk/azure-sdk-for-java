// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Flows.
 */
public interface Flows {
    /**
     * Gets flow resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource along with {@link Response}.
     */
    Response<Flow> getWithResponse(String resourceGroupName, String connectionName, String flowName, Context context);

    /**
     * Gets flow resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource.
     */
    Flow get(String resourceGroupName, String connectionName, String flowName);

    /**
     * Deletes the flow resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String connectionName, String flowName);

    /**
     * Deletes the flow resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String connectionName, String flowName, Context context);

    /**
     * Enables the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow enable(String resourceGroupName, String connectionName, String flowName);

    /**
     * Enables the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow enable(String resourceGroupName, String connectionName, String flowName, Context context);

    /**
     * Disables the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow disable(String resourceGroupName, String connectionName, String flowName);

    /**
     * Disables the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow disable(String resourceGroupName, String connectionName, String flowName, Context context);

    /**
     * Links the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param flow Flow body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow link(String resourceGroupName, String connectionName, String flowName, ResourceBody flow);

    /**
     * Links the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param flow Flow body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow link(String resourceGroupName, String connectionName, String flowName, ResourceBody flow, Context context);

    /**
     * Sets the passphrase of the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param passphrase Passphrase to set.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setPassphrase(String resourceGroupName, String connectionName, String flowName,
        SetStreamPassphrase passphrase);

    /**
     * Sets the passphrase of the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param passphrase Passphrase to set.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setPassphrase(String resourceGroupName, String connectionName, String flowName, SetStreamPassphrase passphrase,
        Context context);

    /**
     * Generate a compliant passphrase for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow generatePassphrase(String resourceGroupName, String connectionName, String flowName);

    /**
     * Generate a compliant passphrase for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow generatePassphrase(String resourceGroupName, String connectionName, String flowName, Context context);

    /**
     * Get the source addresses for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the source addresses for the specified flow along with {@link Response}.
     */
    Response<StreamSourceAddresses> getSourceAddressesWithResponse(String resourceGroupName, String connectionName,
        String flowName, Context context);

    /**
     * Get the source addresses for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the source addresses for the specified flow.
     */
    StreamSourceAddresses getSourceAddresses(String resourceGroupName, String connectionName, String flowName);

    /**
     * Set the source addresses for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param sourceAddresses Source addresses wanted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setSourceAddresses(String resourceGroupName, String connectionName, String flowName,
        SetSourceAddresses sourceAddresses);

    /**
     * Set the source addresses for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param sourceAddresses Source addresses wanted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setSourceAddresses(String resourceGroupName, String connectionName, String flowName,
        SetSourceAddresses sourceAddresses, Context context);

    /**
     * Get the destination endpoints for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the destination endpoints for the specified flow along with {@link Response}.
     */
    Response<GetDestinationEndpointsResult> getDestinationEndpointsWithResponse(String resourceGroupName,
        String connectionName, String flowName, Context context);

    /**
     * Get the destination endpoints for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the destination endpoints for the specified flow.
     */
    GetDestinationEndpointsResult getDestinationEndpoints(String resourceGroupName, String connectionName,
        String flowName);

    /**
     * Set the destination endpoints for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param streamDestinationEndpoints Destination endpoints wanted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setDestinationEndpoints(String resourceGroupName, String connectionName, String flowName,
        SetDestinationEndpoints streamDestinationEndpoints);

    /**
     * Set the destination endpoints for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param streamDestinationEndpoints Destination endpoints wanted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setDestinationEndpoints(String resourceGroupName, String connectionName, String flowName,
        SetDestinationEndpoints streamDestinationEndpoints, Context context);

    /**
     * Get the destination endpoint ports for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the destination endpoint ports for the specified flow along with {@link Response}.
     */
    Response<GetDestinationEndpointPortsResult> getDestinationEndpointPortsWithResponse(String resourceGroupName,
        String connectionName, String flowName, Context context);

    /**
     * Get the destination endpoint ports for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the destination endpoint ports for the specified flow.
     */
    GetDestinationEndpointPortsResult getDestinationEndpointPorts(String resourceGroupName, String connectionName,
        String flowName);

    /**
     * Set the destination endpoint ports for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param streamDestinationEndpointPorts The destination endpoint ports wanted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setDestinationEndpointPorts(String resourceGroupName, String connectionName, String flowName,
        SetDestinationEndpointPorts streamDestinationEndpointPorts);

    /**
     * Set the destination endpoint ports for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param streamDestinationEndpointPorts The destination endpoint ports wanted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the flow resource definition.
     */
    Flow setDestinationEndpointPorts(String resourceGroupName, String connectionName, String flowName,
        SetDestinationEndpointPorts streamDestinationEndpointPorts, Context context);

    /**
     * Get the connection string for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection string for the specified flow along with {@link Response}.
     */
    Response<GetStreamConnectionStringResult> getStreamConnectionStringWithResponse(String resourceGroupName,
        String connectionName, String flowName, Context context);

    /**
     * Get the connection string for the specified flow.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param flowName The name for the flow to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the connection string for the specified flow.
     */
    GetStreamConnectionStringResult getStreamConnectionString(String resourceGroupName, String connectionName,
        String flowName);

    /**
     * Gets flows in a connection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flows in a connection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Flow> listByConnection(String resourceGroupName, String connectionName);

    /**
     * Gets flows in a connection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectionName The name for the connection to perform the operation on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flows in a connection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Flow> listByConnection(String resourceGroupName, String connectionName, Context context);

    /**
     * Gets flow resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource along with {@link Response}.
     */
    Flow getById(String id);

    /**
     * Gets flow resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return flow resource along with {@link Response}.
     */
    Response<Flow> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the flow resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the flow resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Flow resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Flow definition.
     */
    Flow.DefinitionStages.Blank define(String name);
}

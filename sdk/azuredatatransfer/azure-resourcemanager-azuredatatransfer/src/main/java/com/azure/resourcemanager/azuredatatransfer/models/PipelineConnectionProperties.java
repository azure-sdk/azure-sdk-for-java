// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/**
 * Connection properties inside pipeline.
 */
@Fluent
public final class PipelineConnectionProperties {
    /*
     * Internal metadata of the connection inside pipeline.
     */
    @JsonProperty(value = "internalMetadata")
    private InternalMetadataProperties internalMetadata;

    /*
     * Connection properties inside pipeline
     */
    @JsonIgnore
    private Map<String, Object> additionalProperties;

    /**
     * Creates an instance of PipelineConnectionProperties class.
     */
    public PipelineConnectionProperties() {
    }

    /**
     * Get the internalMetadata property: Internal metadata of the connection inside pipeline.
     * 
     * @return the internalMetadata value.
     */
    public InternalMetadataProperties internalMetadata() {
        return this.internalMetadata;
    }

    /**
     * Set the internalMetadata property: Internal metadata of the connection inside pipeline.
     * 
     * @param internalMetadata the internalMetadata value to set.
     * @return the PipelineConnectionProperties object itself.
     */
    public PipelineConnectionProperties withInternalMetadata(InternalMetadataProperties internalMetadata) {
        this.internalMetadata = internalMetadata;
        return this;
    }

    /**
     * Get the additionalProperties property: Connection properties inside pipeline.
     * 
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Connection properties inside pipeline.
     * 
     * @param additionalProperties the additionalProperties value to set.
     * @return the PipelineConnectionProperties object itself.
     */
    public PipelineConnectionProperties withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (internalMetadata() != null) {
            internalMetadata().validate();
        }
    }
}

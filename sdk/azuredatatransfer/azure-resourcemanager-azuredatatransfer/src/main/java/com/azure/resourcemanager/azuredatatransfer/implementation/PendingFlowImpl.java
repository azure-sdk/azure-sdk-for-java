// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredatatransfer.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.PendingFlowInner;
import com.azure.resourcemanager.azuredatatransfer.fluent.models.StreamSourceAddressesInner;
import com.azure.resourcemanager.azuredatatransfer.models.ApiFlowOptions;
import com.azure.resourcemanager.azuredatatransfer.models.DataType;
import com.azure.resourcemanager.azuredatatransfer.models.FlowStatus;
import com.azure.resourcemanager.azuredatatransfer.models.FlowType;
import com.azure.resourcemanager.azuredatatransfer.models.ForceDisabledStatus;
import com.azure.resourcemanager.azuredatatransfer.models.LinkStatusFlow;
import com.azure.resourcemanager.azuredatatransfer.models.MessagingOptions;
import com.azure.resourcemanager.azuredatatransfer.models.PendingFlow;
import com.azure.resourcemanager.azuredatatransfer.models.ProvisioningState;
import com.azure.resourcemanager.azuredatatransfer.models.Schema;
import com.azure.resourcemanager.azuredatatransfer.models.SelectedResource;
import com.azure.resourcemanager.azuredatatransfer.models.StreamProtocol;
import com.azure.resourcemanager.azuredatatransfer.models.StreamSourceAddresses;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class PendingFlowImpl implements PendingFlow {
    private PendingFlowInner innerObject;

    private final com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager serviceManager;

    PendingFlowImpl(PendingFlowInner innerObject,
        com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public SelectedResource connection() {
        return this.innerModel().connection();
    }

    public String flowId() {
        return this.innerModel().flowId();
    }

    public String keyVaultUri() {
        return this.innerModel().keyVaultUri();
    }

    public LinkStatusFlow linkStatus() {
        return this.innerModel().linkStatus();
    }

    public String linkedFlowId() {
        return this.innerModel().linkedFlowId();
    }

    public FlowStatus status() {
        return this.innerModel().status();
    }

    public List<ForceDisabledStatus> forceDisabledStatus() {
        List<ForceDisabledStatus> inner = this.innerModel().forceDisabledStatus();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String storageAccountName() {
        return this.innerModel().storageAccountName();
    }

    public String storageAccountId() {
        return this.innerModel().storageAccountId();
    }

    public String storageContainerName() {
        return this.innerModel().storageContainerName();
    }

    public String storageTableName() {
        return this.innerModel().storageTableName();
    }

    public String serviceBusQueueId() {
        return this.innerModel().serviceBusQueueId();
    }

    public FlowType flowType() {
        return this.innerModel().flowType();
    }

    public DataType dataType() {
        return this.innerModel().dataType();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<String> policies() {
        List<String> inner = this.innerModel().policies();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Schema schema() {
        return this.innerModel().schema();
    }

    public MessagingOptions messagingOptions() {
        return this.innerModel().messagingOptions();
    }

    public ApiFlowOptions apiFlowOptions() {
        return this.innerModel().apiFlowOptions();
    }

    public String customerManagedKeyVaultUri() {
        return this.innerModel().customerManagedKeyVaultUri();
    }

    public String streamId() {
        return this.innerModel().streamId();
    }

    public StreamProtocol streamProtocol() {
        return this.innerModel().streamProtocol();
    }

    public Long streamLatency() {
        return this.innerModel().streamLatency();
    }

    public String passphrase() {
        return this.innerModel().passphrase();
    }

    public StreamSourceAddresses sourceAddresses() {
        StreamSourceAddressesInner inner = this.innerModel().sourceAddresses();
        if (inner != null) {
            return new StreamSourceAddressesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public List<String> destinationEndpoints() {
        List<String> inner = this.innerModel().destinationEndpoints();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<Long> destinationEndpointPorts() {
        List<Long> inner = this.innerModel().destinationEndpointPorts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String eventHubId() {
        return this.innerModel().eventHubId();
    }

    public String consumerGroup() {
        return this.innerModel().consumerGroup();
    }

    public String subscriptionId() {
        return this.innerModel().subscriptionId();
    }

    public String connectionId() {
        return this.innerModel().connectionId();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String location() {
        return this.innerModel().location();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public PendingFlowInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.azuredatatransfer.AzuredatatransferManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerinstance.generated.fluent.models.ContainerGroupProfileInner;
import com.azure.resourcemanager.containerinstance.generated.models.ConfidentialComputeProperties;
import com.azure.resourcemanager.containerinstance.generated.models.Container;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupDiagnostics;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupPriority;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupProfile;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupProfilePatch;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupRestartPolicy;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupSku;
import com.azure.resourcemanager.containerinstance.generated.models.DeploymentExtensionSpec;
import com.azure.resourcemanager.containerinstance.generated.models.EncryptionProperties;
import com.azure.resourcemanager.containerinstance.generated.models.ImageRegistryCredential;
import com.azure.resourcemanager.containerinstance.generated.models.InitContainerDefinition;
import com.azure.resourcemanager.containerinstance.generated.models.IpAddress;
import com.azure.resourcemanager.containerinstance.generated.models.OperatingSystemTypes;
import com.azure.resourcemanager.containerinstance.generated.models.Volume;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ContainerGroupProfileImpl
    implements ContainerGroupProfile, ContainerGroupProfile.Definition, ContainerGroupProfile.Update {
    private ContainerGroupProfileInner innerObject;

    private final com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public List<String> zones() {
        List<String> inner = this.innerModel().zones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<Container> containers() {
        List<Container> inner = this.innerModel().containers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ImageRegistryCredential> imageRegistryCredentials() {
        List<ImageRegistryCredential> inner = this.innerModel().imageRegistryCredentials();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupRestartPolicy restartPolicy() {
        return this.innerModel().restartPolicy();
    }

    public IpAddress ipAddress() {
        return this.innerModel().ipAddress();
    }

    public OperatingSystemTypes osType() {
        return this.innerModel().osType();
    }

    public List<Volume> volumes() {
        List<Volume> inner = this.innerModel().volumes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupDiagnostics diagnostics() {
        return this.innerModel().diagnostics();
    }

    public ContainerGroupSku sku() {
        return this.innerModel().sku();
    }

    public EncryptionProperties encryptionProperties() {
        return this.innerModel().encryptionProperties();
    }

    public List<InitContainerDefinition> initContainers() {
        List<InitContainerDefinition> inner = this.innerModel().initContainers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<DeploymentExtensionSpec> extensions() {
        List<DeploymentExtensionSpec> inner = this.innerModel().extensions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ConfidentialComputeProperties confidentialComputeProperties() {
        return this.innerModel().confidentialComputeProperties();
    }

    public ContainerGroupPriority priority() {
        return this.innerModel().priority();
    }

    public Integer revision() {
        return this.innerModel().revision();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ContainerGroupProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String containerGroupProfileName;

    private ContainerGroupProfilePatch updateProperties;

    public ContainerGroupProfileImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ContainerGroupProfile create() {
        this.innerObject = serviceManager.serviceClient()
            .getContainerGroupProfiles()
            .createOrUpdateWithResponse(resourceGroupName, containerGroupProfileName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ContainerGroupProfile create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getContainerGroupProfiles()
            .createOrUpdateWithResponse(resourceGroupName, containerGroupProfileName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ContainerGroupProfileImpl(String name,
        com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager) {
        this.innerObject = new ContainerGroupProfileInner();
        this.serviceManager = serviceManager;
        this.containerGroupProfileName = name;
    }

    public ContainerGroupProfileImpl update() {
        this.updateProperties = new ContainerGroupProfilePatch();
        return this;
    }

    public ContainerGroupProfile apply() {
        this.innerObject = serviceManager.serviceClient()
            .getContainerGroupProfiles()
            .patchWithResponse(resourceGroupName, containerGroupProfileName, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public ContainerGroupProfile apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getContainerGroupProfiles()
            .patchWithResponse(resourceGroupName, containerGroupProfileName, updateProperties, context)
            .getValue();
        return this;
    }

    ContainerGroupProfileImpl(ContainerGroupProfileInner innerObject,
        com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.containerGroupProfileName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "containerGroupProfiles");
    }

    public ContainerGroupProfile refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getContainerGroupProfiles()
            .getByResourceGroupWithResponse(resourceGroupName, containerGroupProfileName, Context.NONE)
            .getValue();
        return this;
    }

    public ContainerGroupProfile refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getContainerGroupProfiles()
            .getByResourceGroupWithResponse(resourceGroupName, containerGroupProfileName, context)
            .getValue();
        return this;
    }

    public ContainerGroupProfileImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ContainerGroupProfileImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ContainerGroupProfileImpl withContainers(List<Container> containers) {
        this.innerModel().withContainers(containers);
        return this;
    }

    public ContainerGroupProfileImpl withOsType(OperatingSystemTypes osType) {
        this.innerModel().withOsType(osType);
        return this;
    }

    public ContainerGroupProfileImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public ContainerGroupProfileImpl withZones(List<String> zones) {
        this.innerModel().withZones(zones);
        return this;
    }

    public ContainerGroupProfileImpl
        withImageRegistryCredentials(List<ImageRegistryCredential> imageRegistryCredentials) {
        this.innerModel().withImageRegistryCredentials(imageRegistryCredentials);
        return this;
    }

    public ContainerGroupProfileImpl withRestartPolicy(ContainerGroupRestartPolicy restartPolicy) {
        this.innerModel().withRestartPolicy(restartPolicy);
        return this;
    }

    public ContainerGroupProfileImpl withIpAddress(IpAddress ipAddress) {
        this.innerModel().withIpAddress(ipAddress);
        return this;
    }

    public ContainerGroupProfileImpl withVolumes(List<Volume> volumes) {
        this.innerModel().withVolumes(volumes);
        return this;
    }

    public ContainerGroupProfileImpl withDiagnostics(ContainerGroupDiagnostics diagnostics) {
        this.innerModel().withDiagnostics(diagnostics);
        return this;
    }

    public ContainerGroupProfileImpl withSku(ContainerGroupSku sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public ContainerGroupProfileImpl withEncryptionProperties(EncryptionProperties encryptionProperties) {
        this.innerModel().withEncryptionProperties(encryptionProperties);
        return this;
    }

    public ContainerGroupProfileImpl withInitContainers(List<InitContainerDefinition> initContainers) {
        this.innerModel().withInitContainers(initContainers);
        return this;
    }

    public ContainerGroupProfileImpl withExtensions(List<DeploymentExtensionSpec> extensions) {
        this.innerModel().withExtensions(extensions);
        return this;
    }

    public ContainerGroupProfileImpl
        withConfidentialComputeProperties(ConfidentialComputeProperties confidentialComputeProperties) {
        this.innerModel().withConfidentialComputeProperties(confidentialComputeProperties);
        return this;
    }

    public ContainerGroupProfileImpl withPriority(ContainerGroupPriority priority) {
        this.innerModel().withPriority(priority);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

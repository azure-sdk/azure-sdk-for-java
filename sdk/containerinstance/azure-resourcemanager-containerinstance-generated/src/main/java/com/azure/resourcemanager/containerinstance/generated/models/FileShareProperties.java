// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The FileShareProperties model.
 */
@Fluent
public final class FileShareProperties implements JsonSerializable<FileShareProperties> {
    /*
     * Specifies how Container Groups can access the Azure file share i.e. all CG will share same Azure file share or
     * going to have exclusive file share.
     */
    private AzureFileShareAccessType shareAccessType;

    /*
     * learn more at: https://learn.microsoft.com/en-us/rest/api/storagerp/file-shares/create?tabs=HTTP#shareaccesstier
     */
    private AzureFileShareAccessTier shareAccessTier;

    /**
     * Creates an instance of FileShareProperties class.
     */
    public FileShareProperties() {
    }

    /**
     * Get the shareAccessType property: Specifies how Container Groups can access the Azure file share i.e. all CG will
     * share same Azure file share or going to have exclusive file share.
     * 
     * @return the shareAccessType value.
     */
    public AzureFileShareAccessType shareAccessType() {
        return this.shareAccessType;
    }

    /**
     * Set the shareAccessType property: Specifies how Container Groups can access the Azure file share i.e. all CG will
     * share same Azure file share or going to have exclusive file share.
     * 
     * @param shareAccessType the shareAccessType value to set.
     * @return the FileShareProperties object itself.
     */
    public FileShareProperties withShareAccessType(AzureFileShareAccessType shareAccessType) {
        this.shareAccessType = shareAccessType;
        return this;
    }

    /**
     * Get the shareAccessTier property: learn more at:
     * https://learn.microsoft.com/en-us/rest/api/storagerp/file-shares/create?tabs=HTTP#shareaccesstier.
     * 
     * @return the shareAccessTier value.
     */
    public AzureFileShareAccessTier shareAccessTier() {
        return this.shareAccessTier;
    }

    /**
     * Set the shareAccessTier property: learn more at:
     * https://learn.microsoft.com/en-us/rest/api/storagerp/file-shares/create?tabs=HTTP#shareaccesstier.
     * 
     * @param shareAccessTier the shareAccessTier value to set.
     * @return the FileShareProperties object itself.
     */
    public FileShareProperties withShareAccessTier(AzureFileShareAccessTier shareAccessTier) {
        this.shareAccessTier = shareAccessTier;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("shareAccessType",
            this.shareAccessType == null ? null : this.shareAccessType.toString());
        jsonWriter.writeStringField("shareAccessTier",
            this.shareAccessTier == null ? null : this.shareAccessTier.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FileShareProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FileShareProperties if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the FileShareProperties.
     */
    public static FileShareProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FileShareProperties deserializedFileShareProperties = new FileShareProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("shareAccessType".equals(fieldName)) {
                    deserializedFileShareProperties.shareAccessType
                        = AzureFileShareAccessType.fromString(reader.getString());
                } else if ("shareAccessTier".equals(fieldName)) {
                    deserializedFileShareProperties.shareAccessTier
                        = AzureFileShareAccessTier.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFileShareProperties;
        });
    }
}

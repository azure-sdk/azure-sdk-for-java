// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The access control for an identity.
 */
@Fluent
public final class IdentityAccessControl implements JsonSerializable<IdentityAccessControl> {
    /*
     * The access level of the identity.
     */
    private IdentityAccessLevel access;

    /*
     * An identity.
     */
    private String identity;

    /**
     * Creates an instance of IdentityAccessControl class.
     */
    public IdentityAccessControl() {
    }

    /**
     * Get the access property: The access level of the identity.
     * 
     * @return the access value.
     */
    public IdentityAccessLevel access() {
        return this.access;
    }

    /**
     * Set the access property: The access level of the identity.
     * 
     * @param access the access value to set.
     * @return the IdentityAccessControl object itself.
     */
    public IdentityAccessControl withAccess(IdentityAccessLevel access) {
        this.access = access;
        return this;
    }

    /**
     * Get the identity property: An identity.
     * 
     * @return the identity value.
     */
    public String identity() {
        return this.identity;
    }

    /**
     * Set the identity property: An identity.
     * 
     * @param identity the identity value to set.
     * @return the IdentityAccessControl object itself.
     */
    public IdentityAccessControl withIdentity(String identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("access", this.access == null ? null : this.access.toString());
        jsonWriter.writeStringField("identity", this.identity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IdentityAccessControl from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IdentityAccessControl if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IdentityAccessControl.
     */
    public static IdentityAccessControl fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IdentityAccessControl deserializedIdentityAccessControl = new IdentityAccessControl();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("access".equals(fieldName)) {
                    deserializedIdentityAccessControl.access = IdentityAccessLevel.fromString(reader.getString());
                } else if ("identity".equals(fieldName)) {
                    deserializedIdentityAccessControl.identity = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIdentityAccessControl;
        });
    }
}

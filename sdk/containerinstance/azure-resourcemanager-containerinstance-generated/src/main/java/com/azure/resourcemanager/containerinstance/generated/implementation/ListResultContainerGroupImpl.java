// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.implementation;

import com.azure.resourcemanager.containerinstance.generated.fluent.models.ListResultContainerGroupInner;
import com.azure.resourcemanager.containerinstance.generated.models.ConfidentialComputeProperties;
import com.azure.resourcemanager.containerinstance.generated.models.Container;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupDiagnostics;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupIdentity;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupPriority;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupProvisioningState;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupRestartPolicy;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupSku;
import com.azure.resourcemanager.containerinstance.generated.models.ContainerGroupSubnetId;
import com.azure.resourcemanager.containerinstance.generated.models.DeploymentExtensionSpec;
import com.azure.resourcemanager.containerinstance.generated.models.DnsConfiguration;
import com.azure.resourcemanager.containerinstance.generated.models.EncryptionProperties;
import com.azure.resourcemanager.containerinstance.generated.models.IdentityAcls;
import com.azure.resourcemanager.containerinstance.generated.models.ImageRegistryCredential;
import com.azure.resourcemanager.containerinstance.generated.models.InitContainerDefinition;
import com.azure.resourcemanager.containerinstance.generated.models.IpAddress;
import com.azure.resourcemanager.containerinstance.generated.models.ListResultContainerGroup;
import com.azure.resourcemanager.containerinstance.generated.models.OperatingSystemTypes;
import com.azure.resourcemanager.containerinstance.generated.models.SecretReference;
import com.azure.resourcemanager.containerinstance.generated.models.Volume;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ListResultContainerGroupImpl implements ListResultContainerGroup {
    private ListResultContainerGroupInner innerObject;

    private final com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager;

    ListResultContainerGroupImpl(ListResultContainerGroupInner innerObject,
        com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public List<String> zones() {
        List<String> inner = this.innerModel().zones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupIdentity identity() {
        return this.innerModel().identity();
    }

    public ContainerGroupProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<SecretReference> secretReferences() {
        List<SecretReference> inner = this.innerModel().secretReferences();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<Container> containers() {
        List<Container> inner = this.innerModel().containers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<ImageRegistryCredential> imageRegistryCredentials() {
        List<ImageRegistryCredential> inner = this.innerModel().imageRegistryCredentials();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupRestartPolicy restartPolicy() {
        return this.innerModel().restartPolicy();
    }

    public IpAddress ipAddress() {
        return this.innerModel().ipAddress();
    }

    public OperatingSystemTypes osType() {
        return this.innerModel().osType();
    }

    public List<Volume> volumes() {
        List<Volume> inner = this.innerModel().volumes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ContainerGroupDiagnostics diagnostics() {
        return this.innerModel().diagnostics();
    }

    public List<ContainerGroupSubnetId> subnetIds() {
        List<ContainerGroupSubnetId> inner = this.innerModel().subnetIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public DnsConfiguration dnsConfig() {
        return this.innerModel().dnsConfig();
    }

    public ContainerGroupSku sku() {
        return this.innerModel().sku();
    }

    public EncryptionProperties encryptionProperties() {
        return this.innerModel().encryptionProperties();
    }

    public List<InitContainerDefinition> initContainers() {
        List<InitContainerDefinition> inner = this.innerModel().initContainers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<DeploymentExtensionSpec> extensions() {
        List<DeploymentExtensionSpec> inner = this.innerModel().extensions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ConfidentialComputeProperties confidentialComputeProperties() {
        return this.innerModel().confidentialComputeProperties();
    }

    public ContainerGroupPriority priority() {
        return this.innerModel().priority();
    }

    public IdentityAcls identityAcls() {
        return this.innerModel().identityAcls();
    }

    public ListResultContainerGroupInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerinstance.generated.ContainerInstanceManager manager() {
        return this.serviceManager;
    }
}

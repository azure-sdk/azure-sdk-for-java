// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The object that contains a reference to a Container Group Profile and it's other related properties.
 */
@Fluent
public final class ContainerGroupProfileStub implements JsonSerializable<ContainerGroupProfileStub> {
    /*
     * A reference to the container group profile ARM resource hosted in ACI RP.
     */
    private ApiEntityReference resource;

    /*
     * The revision of the CG profile is an optional property. If customer does not to provide a revision then NGroups
     * will pickup the latest revision of CGProfile.
     */
    private Integer revision;

    /*
     * A network profile for network settings of a ContainerGroupProfile.
     */
    private NetworkProfile networkProfile;

    /*
     * Storage profile for storage related settings of a container group profile.
     */
    private StorageProfile storageProfile;

    /*
     * Container Group properties which can be set while creating or updating the NGroups.
     */
    private NGroupContainerGroupProperties containerGroupProperties;

    /**
     * Creates an instance of ContainerGroupProfileStub class.
     */
    public ContainerGroupProfileStub() {
    }

    /**
     * Get the resource property: A reference to the container group profile ARM resource hosted in ACI RP.
     * 
     * @return the resource value.
     */
    public ApiEntityReference resource() {
        return this.resource;
    }

    /**
     * Set the resource property: A reference to the container group profile ARM resource hosted in ACI RP.
     * 
     * @param resource the resource value to set.
     * @return the ContainerGroupProfileStub object itself.
     */
    public ContainerGroupProfileStub withResource(ApiEntityReference resource) {
        this.resource = resource;
        return this;
    }

    /**
     * Get the revision property: The revision of the CG profile is an optional property. If customer does not to
     * provide a revision then NGroups will pickup the latest revision of CGProfile.
     * 
     * @return the revision value.
     */
    public Integer revision() {
        return this.revision;
    }

    /**
     * Set the revision property: The revision of the CG profile is an optional property. If customer does not to
     * provide a revision then NGroups will pickup the latest revision of CGProfile.
     * 
     * @param revision the revision value to set.
     * @return the ContainerGroupProfileStub object itself.
     */
    public ContainerGroupProfileStub withRevision(Integer revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Get the networkProfile property: A network profile for network settings of a ContainerGroupProfile.
     * 
     * @return the networkProfile value.
     */
    public NetworkProfile networkProfile() {
        return this.networkProfile;
    }

    /**
     * Set the networkProfile property: A network profile for network settings of a ContainerGroupProfile.
     * 
     * @param networkProfile the networkProfile value to set.
     * @return the ContainerGroupProfileStub object itself.
     */
    public ContainerGroupProfileStub withNetworkProfile(NetworkProfile networkProfile) {
        this.networkProfile = networkProfile;
        return this;
    }

    /**
     * Get the storageProfile property: Storage profile for storage related settings of a container group profile.
     * 
     * @return the storageProfile value.
     */
    public StorageProfile storageProfile() {
        return this.storageProfile;
    }

    /**
     * Set the storageProfile property: Storage profile for storage related settings of a container group profile.
     * 
     * @param storageProfile the storageProfile value to set.
     * @return the ContainerGroupProfileStub object itself.
     */
    public ContainerGroupProfileStub withStorageProfile(StorageProfile storageProfile) {
        this.storageProfile = storageProfile;
        return this;
    }

    /**
     * Get the containerGroupProperties property: Container Group properties which can be set while creating or updating
     * the NGroups.
     * 
     * @return the containerGroupProperties value.
     */
    public NGroupContainerGroupProperties containerGroupProperties() {
        return this.containerGroupProperties;
    }

    /**
     * Set the containerGroupProperties property: Container Group properties which can be set while creating or updating
     * the NGroups.
     * 
     * @param containerGroupProperties the containerGroupProperties value to set.
     * @return the ContainerGroupProfileStub object itself.
     */
    public ContainerGroupProfileStub
        withContainerGroupProperties(NGroupContainerGroupProperties containerGroupProperties) {
        this.containerGroupProperties = containerGroupProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resource() != null) {
            resource().validate();
        }
        if (networkProfile() != null) {
            networkProfile().validate();
        }
        if (storageProfile() != null) {
            storageProfile().validate();
        }
        if (containerGroupProperties() != null) {
            containerGroupProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("resource", this.resource);
        jsonWriter.writeNumberField("revision", this.revision);
        jsonWriter.writeJsonField("networkProfile", this.networkProfile);
        jsonWriter.writeJsonField("storageProfile", this.storageProfile);
        jsonWriter.writeJsonField("containerGroupProperties", this.containerGroupProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ContainerGroupProfileStub from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ContainerGroupProfileStub if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ContainerGroupProfileStub.
     */
    public static ContainerGroupProfileStub fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ContainerGroupProfileStub deserializedContainerGroupProfileStub = new ContainerGroupProfileStub();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resource".equals(fieldName)) {
                    deserializedContainerGroupProfileStub.resource = ApiEntityReference.fromJson(reader);
                } else if ("revision".equals(fieldName)) {
                    deserializedContainerGroupProfileStub.revision = reader.getNullable(JsonReader::getInt);
                } else if ("networkProfile".equals(fieldName)) {
                    deserializedContainerGroupProfileStub.networkProfile = NetworkProfile.fromJson(reader);
                } else if ("storageProfile".equals(fieldName)) {
                    deserializedContainerGroupProfileStub.storageProfile = StorageProfile.fromJson(reader);
                } else if ("containerGroupProperties".equals(fieldName)) {
                    deserializedContainerGroupProfileStub.containerGroupProperties
                        = NGroupContainerGroupProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedContainerGroupProfileStub;
        });
    }
}

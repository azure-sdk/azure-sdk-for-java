// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Container Groups are named on a generic guid based naming scheme/policy. Customer can modify naming policy to add
 * prefix to CG names during scale out operation.
 */
@Fluent
public final class ElasticProfileContainerGroupNamingPolicy
    implements JsonSerializable<ElasticProfileContainerGroupNamingPolicy> {
    /*
     * The guidNamingPolicy property.
     */
    private ElasticProfileContainerGroupNamingPolicyGuidNamingPolicy guidNamingPolicy;

    /**
     * Creates an instance of ElasticProfileContainerGroupNamingPolicy class.
     */
    public ElasticProfileContainerGroupNamingPolicy() {
    }

    /**
     * Get the guidNamingPolicy property: The guidNamingPolicy property.
     * 
     * @return the guidNamingPolicy value.
     */
    public ElasticProfileContainerGroupNamingPolicyGuidNamingPolicy guidNamingPolicy() {
        return this.guidNamingPolicy;
    }

    /**
     * Set the guidNamingPolicy property: The guidNamingPolicy property.
     * 
     * @param guidNamingPolicy the guidNamingPolicy value to set.
     * @return the ElasticProfileContainerGroupNamingPolicy object itself.
     */
    public ElasticProfileContainerGroupNamingPolicy
        withGuidNamingPolicy(ElasticProfileContainerGroupNamingPolicyGuidNamingPolicy guidNamingPolicy) {
        this.guidNamingPolicy = guidNamingPolicy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (guidNamingPolicy() != null) {
            guidNamingPolicy().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("guidNamingPolicy", this.guidNamingPolicy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ElasticProfileContainerGroupNamingPolicy from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ElasticProfileContainerGroupNamingPolicy if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ElasticProfileContainerGroupNamingPolicy.
     */
    public static ElasticProfileContainerGroupNamingPolicy fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ElasticProfileContainerGroupNamingPolicy deserializedElasticProfileContainerGroupNamingPolicy
                = new ElasticProfileContainerGroupNamingPolicy();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("guidNamingPolicy".equals(fieldName)) {
                    deserializedElasticProfileContainerGroupNamingPolicy.guidNamingPolicy
                        = ElasticProfileContainerGroupNamingPolicyGuidNamingPolicy.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedElasticProfileContainerGroupNamingPolicy;
        });
    }
}

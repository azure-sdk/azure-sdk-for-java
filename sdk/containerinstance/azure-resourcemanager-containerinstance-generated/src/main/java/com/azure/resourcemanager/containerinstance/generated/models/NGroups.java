// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerinstance.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NGroups.
 */
public interface NGroups {
    /**
     * NGroups GET REST API
     * 
     * Get the properties of the specified NGroups resource.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified NGroups resource along with {@link Response}.
     */
    Response<NGroup> getByResourceGroupWithResponse(String resourceGroupName, String ngroupsName, Context context);

    /**
     * NGroups GET REST API
     * 
     * Get the properties of the specified NGroups resource.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified NGroups resource.
     */
    NGroup getByResourceGroup(String resourceGroupName, String ngroupsName);

    /**
     * NGroups Delete REST API
     * 
     * Deletes the NGroups resource.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String ngroupsName);

    /**
     * NGroups Delete REST API
     * 
     * Deletes the NGroups resource.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String ngroupsName, Context context);

    /**
     * Starts all container groups in the specified NGroups resource.
     * 
     * Starts all container groups in the specified NGroups resource. Compute resources will be allocated and billing
     * will start.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String ngroupsName);

    /**
     * Starts all container groups in the specified NGroups resource.
     * 
     * Starts all container groups in the specified NGroups resource. Compute resources will be allocated and billing
     * will start.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String ngroupsName, Context context);

    /**
     * Stops all container groups in the specified NGroups resource.
     * 
     * Stops all container groups in the specified NGroups resource. Compute resources will be deallocated and billing
     * will stop.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopWithResponse(String resourceGroupName, String ngroupsName, Context context);

    /**
     * Stops all container groups in the specified NGroups resource.
     * 
     * Stops all container groups in the specified NGroups resource. Compute resources will be deallocated and billing
     * will stop.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(String resourceGroupName, String ngroupsName);

    /**
     * Restarts all container groups in the specified NGroups resource.
     * 
     * Restarts all container groups in the specified NGroups resource in place. If container image has updates, new
     * image will be downloaded.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restart(String resourceGroupName, String ngroupsName);

    /**
     * Restarts all container groups in the specified NGroups resource.
     * 
     * Restarts all container groups in the specified NGroups resource in place. If container image has updates, new
     * image will be downloaded.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param ngroupsName The NGroups name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restart(String resourceGroupName, String ngroupsName, Context context);

    /**
     * GET NGroups under a resource group REST API.
     * 
     * Gets a list of all NGroups resources under a resource group.
     * 
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all NGroups resources under a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NGroup> listByResourceGroup(String resourceGroupName);

    /**
     * GET NGroups under a resource group REST API.
     * 
     * Gets a list of all NGroups resources under a resource group.
     * 
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all NGroups resources under a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NGroup> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List NGroups in a subscription.
     * 
     * Gets a list of all NGroups resources under a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all NGroups resources under a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NGroup> list();

    /**
     * List NGroups in a subscription.
     * 
     * Gets a list of all NGroups resources under a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all NGroups resources under a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<NGroup> list(Context context);

    /**
     * NGroups GET REST API
     * 
     * Get the properties of the specified NGroups resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified NGroups resource along with {@link Response}.
     */
    NGroup getById(String id);

    /**
     * NGroups GET REST API
     * 
     * Get the properties of the specified NGroups resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the specified NGroups resource along with {@link Response}.
     */
    Response<NGroup> getByIdWithResponse(String id, Context context);

    /**
     * NGroups Delete REST API
     * 
     * Deletes the NGroups resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * NGroups Delete REST API
     * 
     * Deletes the NGroups resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NGroup resource.
     * 
     * @param name resource name.
     * @return the first stage of the new NGroup definition.
     */
    NGroup.DefinitionStages.Blank define(String name);
}

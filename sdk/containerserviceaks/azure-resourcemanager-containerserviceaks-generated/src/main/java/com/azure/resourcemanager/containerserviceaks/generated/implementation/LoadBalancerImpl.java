// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerserviceaks.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerserviceaks.generated.fluent.models.LoadBalancerInner;
import com.azure.resourcemanager.containerserviceaks.generated.models.LabelSelector;
import com.azure.resourcemanager.containerserviceaks.generated.models.LoadBalancer;

public final class LoadBalancerImpl implements LoadBalancer, LoadBalancer.Definition, LoadBalancer.Update {
    private LoadBalancerInner innerObject;

    private final com.azure.resourcemanager.containerserviceaks.generated.ContainerServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String primaryAgentPoolName() {
        return this.innerModel().primaryAgentPoolName();
    }

    public Boolean allowServicePlacement() {
        return this.innerModel().allowServicePlacement();
    }

    public LabelSelector serviceLabelSelector() {
        return this.innerModel().serviceLabelSelector();
    }

    public LabelSelector serviceNamespaceSelector() {
        return this.innerModel().serviceNamespaceSelector();
    }

    public LabelSelector nodeSelector() {
        return this.innerModel().nodeSelector();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public LoadBalancerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerserviceaks.generated.ContainerServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String resourceName;

    private String loadBalancerName;

    public LoadBalancerImpl withExistingManagedCluster(String resourceGroupName, String resourceName) {
        this.resourceGroupName = resourceGroupName;
        this.resourceName = resourceName;
        return this;
    }

    public LoadBalancer create() {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdateWithResponse(resourceGroupName, resourceName, loadBalancerName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public LoadBalancer create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdateWithResponse(resourceGroupName, resourceName, loadBalancerName, this.innerModel(), context)
            .getValue();
        return this;
    }

    LoadBalancerImpl(String name,
        com.azure.resourcemanager.containerserviceaks.generated.ContainerServiceManager serviceManager) {
        this.innerObject = new LoadBalancerInner();
        this.serviceManager = serviceManager;
        this.loadBalancerName = name;
    }

    public LoadBalancerImpl update() {
        return this;
    }

    public LoadBalancer apply() {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdateWithResponse(resourceGroupName, resourceName, loadBalancerName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public LoadBalancer apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .createOrUpdateWithResponse(resourceGroupName, resourceName, loadBalancerName, this.innerModel(), context)
            .getValue();
        return this;
    }

    LoadBalancerImpl(LoadBalancerInner innerObject,
        com.azure.resourcemanager.containerserviceaks.generated.ContainerServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "managedClusters");
        this.loadBalancerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "loadBalancers");
    }

    public LoadBalancer refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .getWithResponse(resourceGroupName, resourceName, loadBalancerName, Context.NONE)
            .getValue();
        return this;
    }

    public LoadBalancer refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getLoadBalancers()
            .getWithResponse(resourceGroupName, resourceName, loadBalancerName, context)
            .getValue();
        return this;
    }

    public LoadBalancerImpl withPrimaryAgentPoolName(String primaryAgentPoolName) {
        this.innerModel().withPrimaryAgentPoolName(primaryAgentPoolName);
        return this;
    }

    public LoadBalancerImpl withAllowServicePlacement(Boolean allowServicePlacement) {
        this.innerModel().withAllowServicePlacement(allowServicePlacement);
        return this;
    }

    public LoadBalancerImpl withServiceLabelSelector(LabelSelector serviceLabelSelector) {
        this.innerModel().withServiceLabelSelector(serviceLabelSelector);
        return this;
    }

    public LoadBalancerImpl withServiceNamespaceSelector(LabelSelector serviceNamespaceSelector) {
        this.innerModel().withServiceNamespaceSelector(serviceNamespaceSelector);
        return this;
    }

    public LoadBalancerImpl withNodeSelector(LabelSelector nodeSelector) {
        this.innerModel().withNodeSelector(nodeSelector);
        return this;
    }
}

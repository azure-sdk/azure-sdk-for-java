// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.iothub.fluent.NetworkSecurityPerimeterConfigurationsClient;
import com.azure.resourcemanager.iothub.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.iothub.fluent.models.NetworkSecurityPerimeterConfigurationListResultInner;
import com.azure.resourcemanager.iothub.models.NetworkSecurityPerimeterConfiguration;
import com.azure.resourcemanager.iothub.models.NetworkSecurityPerimeterConfigurationListResult;
import com.azure.resourcemanager.iothub.models.NetworkSecurityPerimeterConfigurations;

public final class NetworkSecurityPerimeterConfigurationsImpl implements NetworkSecurityPerimeterConfigurations {
    private static final ClientLogger LOGGER = new ClientLogger(NetworkSecurityPerimeterConfigurationsImpl.class);

    private final NetworkSecurityPerimeterConfigurationsClient innerClient;

    private final com.azure.resourcemanager.iothub.IotHubManager serviceManager;

    public NetworkSecurityPerimeterConfigurationsImpl(
        NetworkSecurityPerimeterConfigurationsClient innerClient,
        com.azure.resourcemanager.iothub.IotHubManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<NetworkSecurityPerimeterConfigurationListResult> listByIotHubWithResponse(
        String resourceGroupName, String resourceName, Context context) {
        Response<NetworkSecurityPerimeterConfigurationListResultInner> inner =
            this.serviceClient().listByIotHubWithResponse(resourceGroupName, resourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NetworkSecurityPerimeterConfigurationListResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NetworkSecurityPerimeterConfigurationListResult listByIotHub(String resourceGroupName, String resourceName) {
        NetworkSecurityPerimeterConfigurationListResultInner inner =
            this.serviceClient().listByIotHub(resourceGroupName, resourceName);
        if (inner != null) {
            return new NetworkSecurityPerimeterConfigurationListResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<NetworkSecurityPerimeterConfiguration> getWithResponse(
        String resourceGroupName, String resourceName, String nspConfigName, Context context) {
        Response<NetworkSecurityPerimeterConfigurationInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, resourceName, nspConfigName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NetworkSecurityPerimeterConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NetworkSecurityPerimeterConfiguration get(
        String resourceGroupName, String resourceName, String nspConfigName) {
        NetworkSecurityPerimeterConfigurationInner inner =
            this.serviceClient().get(resourceGroupName, resourceName, nspConfigName);
        if (inner != null) {
            return new NetworkSecurityPerimeterConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public NetworkSecurityPerimeterConfiguration reconcile(
        String resourceGroupName, String resourceName, String nspConfigName) {
        NetworkSecurityPerimeterConfigurationInner inner =
            this.serviceClient().reconcile(resourceGroupName, resourceName, nspConfigName);
        if (inner != null) {
            return new NetworkSecurityPerimeterConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public NetworkSecurityPerimeterConfiguration reconcile(
        String resourceGroupName, String resourceName, String nspConfigName, Context context) {
        NetworkSecurityPerimeterConfigurationInner inner =
            this.serviceClient().reconcile(resourceGroupName, resourceName, nspConfigName, context);
        if (inner != null) {
            return new NetworkSecurityPerimeterConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private NetworkSecurityPerimeterConfigurationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.iothub.IotHubManager manager() {
        return this.serviceManager;
    }
}

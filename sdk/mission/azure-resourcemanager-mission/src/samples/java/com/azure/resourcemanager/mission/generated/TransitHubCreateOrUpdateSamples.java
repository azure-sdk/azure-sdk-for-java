// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.generated;

import com.azure.resourcemanager.mission.models.TransitHubState;
import com.azure.resourcemanager.mission.models.TransitOption;
import com.azure.resourcemanager.mission.models.TransitOptionParams;
import com.azure.resourcemanager.mission.models.TransitOptionType;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for TransitHub CreateOrUpdate.
 */
public final class TransitHubCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/mission/resource-manager/Microsoft.Mission/preview/2024-12-01-preview/examples/
     * TransitHub_CreateOrUpdate.json
     */
    /**
     * Sample code: TransitHub_CreateOrUpdate.
     * 
     * @param manager Entry point to MissionManager.
     */
    public static void transitHubCreateOrUpdate(com.azure.resourcemanager.mission.MissionManager manager) {
        manager.transitHubs()
            .define("TestThName")
            .withRegion("westcentralus")
            .withExistingCommunity("rgopenapi", "TestMyCommunity")
            .withTags(mapOf("Tag1", "Value1"))
            .withState(TransitHubState.PENDING_APPROVAL)
            .withTransitOption(new TransitOption().withType(TransitOptionType.EXPRESS_ROUTE)
                .withParams(new TransitOptionParams().withScaleUnits(1L)))
            .withResourceCollection(Arrays.asList("resCollection"))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

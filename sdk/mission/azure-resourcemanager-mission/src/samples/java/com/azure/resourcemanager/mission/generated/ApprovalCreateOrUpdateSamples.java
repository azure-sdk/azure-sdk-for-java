// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.generated;

import com.azure.resourcemanager.mission.models.ActionPerformed;
import com.azure.resourcemanager.mission.models.ApprovalStatus;
import com.azure.resourcemanager.mission.models.Approvers;
import com.azure.resourcemanager.mission.models.RequestMetadata;
import java.time.OffsetDateTime;
import java.util.Arrays;

/**
 * Samples for Approval CreateOrUpdate.
 */
public final class ApprovalCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/mission/resource-manager/Microsoft.Mission/preview/2024-11-01-preview/examples/
     * Approvals_CreateOrUpdate.json
     */
    /**
     * Sample code: Approval_CreateOrUpdate.
     * 
     * @param manager Entry point to MissionManager.
     */
    public static void approvalCreateOrUpdate(com.azure.resourcemanager.mission.MissionManager manager) {
        manager.approvals()
            .define("TestApprovals")
            .withExistingResourceUri(
                "subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/TestMyRg/providers/Microsoft.Mission/enclaveconnections/TestMyEnclaveConnection")
            .withParent1("string")
            .withParent2("string")
            .withRequestMetadata(new RequestMetadata().withResourceAction("string")
                .withApprovalStatus(ApprovalStatus.APPROVED)
                .withApprovalCallbackRoute("approvalCallback")
                .withApprovalCallbackPayload("{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}"))
            .withApprovers(Arrays.asList(new Approvers().withApproverEntraId("string")
                .withActionPerformed(ActionPerformed.APPROVED)
                .withLastUpdatedAt(OffsetDateTime.parse("2023-03-17T20:43:17.760Z"))))
            .withMandatoryApprovers(Arrays.asList(new Approvers().withApproverEntraId("string")
                .withActionPerformed(ActionPerformed.APPROVED)
                .withLastUpdatedAt(OffsetDateTime.parse("2023-03-17T20:43:17.760Z"))))
            .withMinimumApproversRequired(0L)
            .create();
    }
}

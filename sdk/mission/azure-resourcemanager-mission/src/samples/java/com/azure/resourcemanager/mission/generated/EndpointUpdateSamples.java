// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.generated;

import com.azure.resourcemanager.mission.models.EndpointProtocol;
import com.azure.resourcemanager.mission.models.EndpointResource;
import com.azure.resourcemanager.mission.models.EndpointRule;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Endpoint Update.
 */
public final class EndpointUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/mission/resource-manager/Microsoft.Mission/preview/2024-11-01-preview/examples/Endpoint_Update.json
     */
    /**
     * Sample code: Endpoint_Update.
     * 
     * @param manager Entry point to MissionManager.
     */
    public static void endpointUpdate(com.azure.resourcemanager.mission.MissionManager manager) {
        EndpointResource resource = manager.endpoints()
            .getWithResponse("rgopenapi", "TestMyEnclave", "TestMyEndpoint", com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("sampletag", "samplevalue"))
            .withEndpointRuleCollection(Arrays.asList(new EndpointRule().withName("MyTestEndpointRule")
                .withAddress("10.0.0.0/24")
                .withPort("443")
                .withProtocol(EndpointProtocol.TCP)))
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

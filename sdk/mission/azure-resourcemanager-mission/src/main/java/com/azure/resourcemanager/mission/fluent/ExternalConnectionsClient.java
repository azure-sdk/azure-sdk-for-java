// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mission.fluent.models.ExternalConnectionInner;
import com.azure.resourcemanager.mission.models.ExternalConnectionUpdate;

/**
 * An instance of this class provides access to all the operations defined in ExternalConnectionsClient.
 */
public interface ExternalConnectionsClient {
    /**
     * List ExternalConnection resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ExternalConnection list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExternalConnectionInner> list();

    /**
     * List ExternalConnection resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ExternalConnection list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExternalConnectionInner> list(Context context);

    /**
     * List ExternalConnection resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ExternalConnection list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExternalConnectionInner> listByResourceGroup(String resourceGroupName);

    /**
     * List ExternalConnection resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ExternalConnection list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExternalConnectionInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ExternalConnection along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExternalConnectionInner> getByResourceGroupWithResponse(String resourceGroupName,
        String externalConnectionName, Context context);

    /**
     * Get a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ExternalConnection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExternalConnectionInner getByResourceGroup(String resourceGroupName, String externalConnectionName);

    /**
     * Create a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExternalConnectionInner>, ExternalConnectionInner>
        beginCreateOrUpdate(String resourceGroupName, String externalConnectionName, ExternalConnectionInner resource);

    /**
     * Create a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExternalConnectionInner>, ExternalConnectionInner> beginCreateOrUpdate(
        String resourceGroupName, String externalConnectionName, ExternalConnectionInner resource, Context context);

    /**
     * Create a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExternalConnectionInner createOrUpdate(String resourceGroupName, String externalConnectionName,
        ExternalConnectionInner resource);

    /**
     * Create a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExternalConnectionInner createOrUpdate(String resourceGroupName, String externalConnectionName,
        ExternalConnectionInner resource, Context context);

    /**
     * Update a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExternalConnectionInner>, ExternalConnectionInner> beginUpdate(String resourceGroupName,
        String externalConnectionName, ExternalConnectionUpdate properties);

    /**
     * Update a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExternalConnectionInner>, ExternalConnectionInner> beginUpdate(String resourceGroupName,
        String externalConnectionName, ExternalConnectionUpdate properties, Context context);

    /**
     * Update a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExternalConnectionInner update(String resourceGroupName, String externalConnectionName,
        ExternalConnectionUpdate properties);

    /**
     * Update a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes an External Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExternalConnectionInner update(String resourceGroupName, String externalConnectionName,
        ExternalConnectionUpdate properties, Context context);

    /**
     * Delete a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String externalConnectionName);

    /**
     * Delete a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String externalConnectionName,
        Context context);

    /**
     * Delete a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String externalConnectionName);

    /**
     * Delete a ExternalConnection.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param externalConnectionName The name of the external connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String externalConnectionName, Context context);
}

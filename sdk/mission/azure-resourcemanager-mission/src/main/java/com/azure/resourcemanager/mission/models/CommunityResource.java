// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mission.fluent.models.CommunityResourceInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of CommunityResource.
 */
public interface CommunityResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The managed service identities assigned to this resource.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the addressSpace property: Address Space.
     * 
     * @return the addressSpace value.
     */
    String addressSpace();

    /**
     * Gets the dnsServers property: Dns Servers.
     * 
     * @return the dnsServers value.
     */
    List<String> dnsServers();

    /**
     * Gets the provisioningState property: Provisioning State.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the resourceCollection property: List of resource ids created by communities.
     * 
     * @return the resourceCollection value.
     */
    List<String> resourceCollection();

    /**
     * Gets the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    ManagedResourceGroupConfiguration managedResourceGroupConfiguration();

    /**
     * Gets the governedServiceList property: List of services governed by a community.
     * 
     * @return the governedServiceList value.
     */
    List<GovernedServiceItem> governedServiceList();

    /**
     * Gets the communityRoleAssignments property: Community role assignments.
     * 
     * @return the communityRoleAssignments value.
     */
    List<RoleAssignmentItem> communityRoleAssignments();

    /**
     * Gets the approvalSettings property: Approval requirements for various actions on the community's resources.
     * 
     * @return the approvalSettings value.
     */
    ApprovalSettings approvalSettings();

    /**
     * Gets the maintenanceModeConfiguration property: Maintenance Mode configuration.
     * 
     * @return the maintenanceModeConfiguration value.
     */
    MaintenanceModeConfiguration maintenanceModeConfiguration();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.mission.fluent.models.CommunityResourceInner object.
     * 
     * @return the inner object.
     */
    CommunityResourceInner innerModel();

    /**
     * The entirety of the CommunityResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The CommunityResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the CommunityResource definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the CommunityResource definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the CommunityResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithIdentity,
            DefinitionStages.WithAddressSpace, DefinitionStages.WithDnsServers, DefinitionStages.WithResourceCollection,
            DefinitionStages.WithManagedResourceGroupConfiguration, DefinitionStages.WithGovernedServiceList,
            DefinitionStages.WithCommunityRoleAssignments, DefinitionStages.WithApprovalSettings,
            DefinitionStages.WithMaintenanceModeConfiguration {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            CommunityResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            CommunityResource create(Context context);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: The managed service identities assigned to this resource..
             * 
             * @param identity The managed service identities assigned to this resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify addressSpace.
         */
        interface WithAddressSpace {
            /**
             * Specifies the addressSpace property: Address Space..
             * 
             * @param addressSpace Address Space.
             * @return the next definition stage.
             */
            WithCreate withAddressSpace(String addressSpace);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify dnsServers.
         */
        interface WithDnsServers {
            /**
             * Specifies the dnsServers property: Dns Servers..
             * 
             * @param dnsServers Dns Servers.
             * @return the next definition stage.
             */
            WithCreate withDnsServers(List<String> dnsServers);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify resourceCollection.
         */
        interface WithResourceCollection {
            /**
             * Specifies the resourceCollection property: List of resource ids created by communities..
             * 
             * @param resourceCollection List of resource ids created by communities.
             * @return the next definition stage.
             */
            WithCreate withResourceCollection(List<String> resourceCollection);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify managedResourceGroupConfiguration.
         */
        interface WithManagedResourceGroupConfiguration {
            /**
             * Specifies the managedResourceGroupConfiguration property: Managed resource group configuration..
             * 
             * @param managedResourceGroupConfiguration Managed resource group configuration.
             * @return the next definition stage.
             */
            WithCreate withManagedResourceGroupConfiguration(
                ManagedResourceGroupConfiguration managedResourceGroupConfiguration);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify governedServiceList.
         */
        interface WithGovernedServiceList {
            /**
             * Specifies the governedServiceList property: List of services governed by a community..
             * 
             * @param governedServiceList List of services governed by a community.
             * @return the next definition stage.
             */
            WithCreate withGovernedServiceList(List<GovernedServiceItem> governedServiceList);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify communityRoleAssignments.
         */
        interface WithCommunityRoleAssignments {
            /**
             * Specifies the communityRoleAssignments property: Community role assignments.
             * 
             * @param communityRoleAssignments Community role assignments.
             * @return the next definition stage.
             */
            WithCreate withCommunityRoleAssignments(List<RoleAssignmentItem> communityRoleAssignments);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify approvalSettings.
         */
        interface WithApprovalSettings {
            /**
             * Specifies the approvalSettings property: Approval requirements for various actions on the community's
             * resources..
             * 
             * @param approvalSettings Approval requirements for various actions on the community's resources.
             * @return the next definition stage.
             */
            WithCreate withApprovalSettings(ApprovalSettings approvalSettings);
        }

        /**
         * The stage of the CommunityResource definition allowing to specify maintenanceModeConfiguration.
         */
        interface WithMaintenanceModeConfiguration {
            /**
             * Specifies the maintenanceModeConfiguration property: Maintenance Mode configuration..
             * 
             * @param maintenanceModeConfiguration Maintenance Mode configuration.
             * @return the next definition stage.
             */
            WithCreate withMaintenanceModeConfiguration(MaintenanceModeConfiguration maintenanceModeConfiguration);
        }
    }

    /**
     * Begins update for the CommunityResource resource.
     * 
     * @return the stage of resource update.
     */
    CommunityResource.Update update();

    /**
     * The template for CommunityResource update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithAddressSpace,
        UpdateStages.WithDnsServers, UpdateStages.WithResourceCollection,
        UpdateStages.WithManagedResourceGroupConfiguration, UpdateStages.WithGovernedServiceList,
        UpdateStages.WithCommunityRoleAssignments, UpdateStages.WithApprovalSettings,
        UpdateStages.WithMaintenanceModeConfiguration {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        CommunityResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        CommunityResource apply(Context context);
    }

    /**
     * The CommunityResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the CommunityResource update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the CommunityResource update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: The managed service identities assigned to this resource..
             * 
             * @param identity The managed service identities assigned to this resource.
             * @return the next definition stage.
             */
            Update withIdentity(AzureResourceManagerCommonTypesManagedServiceIdentityUpdate identity);
        }

        /**
         * The stage of the CommunityResource update allowing to specify addressSpace.
         */
        interface WithAddressSpace {
            /**
             * Specifies the addressSpace property: Address Space..
             * 
             * @param addressSpace Address Space.
             * @return the next definition stage.
             */
            Update withAddressSpace(String addressSpace);
        }

        /**
         * The stage of the CommunityResource update allowing to specify dnsServers.
         */
        interface WithDnsServers {
            /**
             * Specifies the dnsServers property: Dns Servers..
             * 
             * @param dnsServers Dns Servers.
             * @return the next definition stage.
             */
            Update withDnsServers(List<String> dnsServers);
        }

        /**
         * The stage of the CommunityResource update allowing to specify resourceCollection.
         */
        interface WithResourceCollection {
            /**
             * Specifies the resourceCollection property: List of resource ids created by communities..
             * 
             * @param resourceCollection List of resource ids created by communities.
             * @return the next definition stage.
             */
            Update withResourceCollection(List<String> resourceCollection);
        }

        /**
         * The stage of the CommunityResource update allowing to specify managedResourceGroupConfiguration.
         */
        interface WithManagedResourceGroupConfiguration {
            /**
             * Specifies the managedResourceGroupConfiguration property: Managed resource group configuration..
             * 
             * @param managedResourceGroupConfiguration Managed resource group configuration.
             * @return the next definition stage.
             */
            Update withManagedResourceGroupConfiguration(
                ManagedResourceGroupConfiguration managedResourceGroupConfiguration);
        }

        /**
         * The stage of the CommunityResource update allowing to specify governedServiceList.
         */
        interface WithGovernedServiceList {
            /**
             * Specifies the governedServiceList property: List of services governed by a community..
             * 
             * @param governedServiceList List of services governed by a community.
             * @return the next definition stage.
             */
            Update withGovernedServiceList(List<GovernedServiceItem> governedServiceList);
        }

        /**
         * The stage of the CommunityResource update allowing to specify communityRoleAssignments.
         */
        interface WithCommunityRoleAssignments {
            /**
             * Specifies the communityRoleAssignments property: Community role assignments.
             * 
             * @param communityRoleAssignments Community role assignments.
             * @return the next definition stage.
             */
            Update withCommunityRoleAssignments(List<RoleAssignmentItem> communityRoleAssignments);
        }

        /**
         * The stage of the CommunityResource update allowing to specify approvalSettings.
         */
        interface WithApprovalSettings {
            /**
             * Specifies the approvalSettings property: Approval requirements for various actions on the community's
             * resources..
             * 
             * @param approvalSettings Approval requirements for various actions on the community's resources.
             * @return the next definition stage.
             */
            Update withApprovalSettings(ApprovalSettings approvalSettings);
        }

        /**
         * The stage of the CommunityResource update allowing to specify maintenanceModeConfiguration.
         */
        interface WithMaintenanceModeConfiguration {
            /**
             * Specifies the maintenanceModeConfiguration property: Maintenance Mode configuration..
             * 
             * @param maintenanceModeConfiguration Maintenance Mode configuration.
             * @return the next definition stage.
             */
            Update withMaintenanceModeConfiguration(MaintenanceModeConfigurationUpdate maintenanceModeConfiguration);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    CommunityResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    CommunityResource refresh(Context context);

    /**
     * Checks that the IP Address Space to be allocated for this Community is available.
     * 
     * @param checkAddressSpaceAvailabilityRequest Check IP Address Space request body.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of availability of the requested address space along with {@link Response}.
     */
    Response<CheckAddressSpaceAvailabilityResponse> checkAddressSpaceAvailabilityWithResponse(
        CheckAddressSpaceAvailabilityRequest checkAddressSpaceAvailabilityRequest, Context context);

    /**
     * Checks that the IP Address Space to be allocated for this Community is available.
     * 
     * @param checkAddressSpaceAvailabilityRequest Check IP Address Space request body.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response of availability of the requested address space.
     */
    CheckAddressSpaceAvailabilityResponse
        checkAddressSpaceAvailability(CheckAddressSpaceAvailabilityRequest checkAddressSpaceAvailabilityRequest);
}

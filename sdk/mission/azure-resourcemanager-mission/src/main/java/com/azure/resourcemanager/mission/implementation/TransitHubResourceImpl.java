// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mission.fluent.models.TransitHubResourceInner;
import com.azure.resourcemanager.mission.models.ProvisioningState;
import com.azure.resourcemanager.mission.models.TransitHubPatchResource;
import com.azure.resourcemanager.mission.models.TransitHubResource;
import com.azure.resourcemanager.mission.models.TransitHubState;
import com.azure.resourcemanager.mission.models.TransitOption;
import com.azure.resourcemanager.mission.models.UpdateTransitHubPatchProperties;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class TransitHubResourceImpl
    implements TransitHubResource, TransitHubResource.Definition, TransitHubResource.Update {
    private TransitHubResourceInner innerObject;

    private final com.azure.resourcemanager.mission.MissionManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public TransitHubState state() {
        return this.innerModel().state();
    }

    public TransitOption transitOption() {
        return this.innerModel().transitOption();
    }

    public List<String> resourceCollection() {
        List<String> inner = this.innerModel().resourceCollection();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public TransitHubResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.mission.MissionManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String communityName;

    private String transitHubName;

    private TransitHubPatchResource updateProperties;

    public TransitHubResourceImpl withExistingCommunity(String resourceGroupName, String communityName) {
        this.resourceGroupName = resourceGroupName;
        this.communityName = communityName;
        return this;
    }

    public TransitHubResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getTransitHubs()
            .createOrUpdate(resourceGroupName, communityName, transitHubName, this.innerModel(), Context.NONE);
        return this;
    }

    public TransitHubResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTransitHubs()
            .createOrUpdate(resourceGroupName, communityName, transitHubName, this.innerModel(), context);
        return this;
    }

    TransitHubResourceImpl(String name, com.azure.resourcemanager.mission.MissionManager serviceManager) {
        this.innerObject = new TransitHubResourceInner();
        this.serviceManager = serviceManager;
        this.transitHubName = name;
    }

    public TransitHubResourceImpl update() {
        this.updateProperties = new TransitHubPatchResource();
        return this;
    }

    public TransitHubResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getTransitHubs()
            .update(resourceGroupName, communityName, transitHubName, updateProperties, Context.NONE);
        return this;
    }

    public TransitHubResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTransitHubs()
            .update(resourceGroupName, communityName, transitHubName, updateProperties, context);
        return this;
    }

    TransitHubResourceImpl(TransitHubResourceInner innerObject,
        com.azure.resourcemanager.mission.MissionManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.communityName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "communities");
        this.transitHubName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "transitHubs");
    }

    public TransitHubResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getTransitHubs()
            .getWithResponse(resourceGroupName, communityName, transitHubName, Context.NONE)
            .getValue();
        return this;
    }

    public TransitHubResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getTransitHubs()
            .getWithResponse(resourceGroupName, communityName, transitHubName, context)
            .getValue();
        return this;
    }

    public TransitHubResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public TransitHubResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public TransitHubResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public TransitHubResourceImpl withState(TransitHubState state) {
        this.innerModel().withState(state);
        return this;
    }

    public TransitHubResourceImpl withTransitOption(TransitOption transitOption) {
        this.innerModel().withTransitOption(transitOption);
        return this;
    }

    public TransitHubResourceImpl withResourceCollection(List<String> resourceCollection) {
        this.innerModel().withResourceCollection(resourceCollection);
        return this;
    }

    public TransitHubResourceImpl withProperties(UpdateTransitHubPatchProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

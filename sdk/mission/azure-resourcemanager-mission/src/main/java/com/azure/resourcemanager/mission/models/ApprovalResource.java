// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mission.fluent.models.ApprovalResourceInner;
import java.util.List;

/**
 * An immutable client-side representation of ApprovalResource.
 */
public interface ApprovalResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Provisioning State.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the parent1 property: Parameter for optimizing query results.
     * 
     * @return the parent1 value.
     */
    String parent1();

    /**
     * Gets the parent2 property: Parameter for optimizing query results.
     * 
     * @return the parent2 value.
     */
    String parent2();

    /**
     * Gets the requestMetadata property: Request metadata for the approval request.
     * 
     * @return the requestMetadata value.
     */
    RequestMetadata requestMetadata();

    /**
     * Gets the approvers property: List of approvers for the approval request.
     * 
     * @return the approvers value.
     */
    List<Approvers> approvers();

    /**
     * Gets the mandatoryApprovers property: List of mandatory approvers for the approval request.
     * 
     * @return the mandatoryApprovers value.
     */
    List<Approvers> mandatoryApprovers();

    /**
     * Gets the minimumApproversRequired property: Minimum number of approvers required for the approval request.
     * 
     * @return the minimumApproversRequired value.
     */
    Long minimumApproversRequired();

    /**
     * Gets the inner com.azure.resourcemanager.mission.fluent.models.ApprovalResourceInner object.
     * 
     * @return the inner object.
     */
    ApprovalResourceInner innerModel();

    /**
     * The entirety of the ApprovalResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }

    /**
     * The ApprovalResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ApprovalResource definition.
         */
        interface Blank extends WithScope {
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify parent resource.
         */
        interface WithScope {
            /**
             * Specifies resourceUri.
             * 
             * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceUri(String resourceUri);
        }

        /**
         * The stage of the ApprovalResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithParent1, DefinitionStages.WithParent2,
            DefinitionStages.WithRequestMetadata, DefinitionStages.WithApprovers,
            DefinitionStages.WithMandatoryApprovers, DefinitionStages.WithMinimumApproversRequired {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ApprovalResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ApprovalResource create(Context context);
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify parent1.
         */
        interface WithParent1 {
            /**
             * Specifies the parent1 property: Parameter for optimizing query results.
             * 
             * @param parent1 Parameter for optimizing query results.
             * @return the next definition stage.
             */
            WithCreate withParent1(String parent1);
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify parent2.
         */
        interface WithParent2 {
            /**
             * Specifies the parent2 property: Parameter for optimizing query results.
             * 
             * @param parent2 Parameter for optimizing query results.
             * @return the next definition stage.
             */
            WithCreate withParent2(String parent2);
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify requestMetadata.
         */
        interface WithRequestMetadata {
            /**
             * Specifies the requestMetadata property: Request metadata for the approval request..
             * 
             * @param requestMetadata Request metadata for the approval request.
             * @return the next definition stage.
             */
            WithCreate withRequestMetadata(RequestMetadata requestMetadata);
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify approvers.
         */
        interface WithApprovers {
            /**
             * Specifies the approvers property: List of approvers for the approval request.
             * 
             * @param approvers List of approvers for the approval request.
             * @return the next definition stage.
             */
            WithCreate withApprovers(List<Approvers> approvers);
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify mandatoryApprovers.
         */
        interface WithMandatoryApprovers {
            /**
             * Specifies the mandatoryApprovers property: List of mandatory approvers for the approval request.
             * 
             * @param mandatoryApprovers List of mandatory approvers for the approval request.
             * @return the next definition stage.
             */
            WithCreate withMandatoryApprovers(List<Approvers> mandatoryApprovers);
        }

        /**
         * The stage of the ApprovalResource definition allowing to specify minimumApproversRequired.
         */
        interface WithMinimumApproversRequired {
            /**
             * Specifies the minimumApproversRequired property: Minimum number of approvers required for the approval
             * request.
             * 
             * @param minimumApproversRequired Minimum number of approvers required for the approval request.
             * @return the next definition stage.
             */
            WithCreate withMinimumApproversRequired(Long minimumApproversRequired);
        }
    }

    /**
     * Begins update for the ApprovalResource resource.
     * 
     * @return the stage of resource update.
     */
    ApprovalResource.Update update();

    /**
     * The template for ApprovalResource update.
     */
    interface Update extends UpdateStages.WithParent1, UpdateStages.WithParent2, UpdateStages.WithRequestMetadata,
        UpdateStages.WithApprovers, UpdateStages.WithMandatoryApprovers, UpdateStages.WithMinimumApproversRequired {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ApprovalResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ApprovalResource apply(Context context);
    }

    /**
     * The ApprovalResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ApprovalResource update allowing to specify parent1.
         */
        interface WithParent1 {
            /**
             * Specifies the parent1 property: Parameter for optimizing query results.
             * 
             * @param parent1 Parameter for optimizing query results.
             * @return the next definition stage.
             */
            Update withParent1(String parent1);
        }

        /**
         * The stage of the ApprovalResource update allowing to specify parent2.
         */
        interface WithParent2 {
            /**
             * Specifies the parent2 property: Parameter for optimizing query results.
             * 
             * @param parent2 Parameter for optimizing query results.
             * @return the next definition stage.
             */
            Update withParent2(String parent2);
        }

        /**
         * The stage of the ApprovalResource update allowing to specify requestMetadata.
         */
        interface WithRequestMetadata {
            /**
             * Specifies the requestMetadata property: Request metadata for the approval request..
             * 
             * @param requestMetadata Request metadata for the approval request.
             * @return the next definition stage.
             */
            Update withRequestMetadata(RequestMetadataUpdate requestMetadata);
        }

        /**
         * The stage of the ApprovalResource update allowing to specify approvers.
         */
        interface WithApprovers {
            /**
             * Specifies the approvers property: List of approvers for the approval request.
             * 
             * @param approvers List of approvers for the approval request.
             * @return the next definition stage.
             */
            Update withApprovers(List<Approvers> approvers);
        }

        /**
         * The stage of the ApprovalResource update allowing to specify mandatoryApprovers.
         */
        interface WithMandatoryApprovers {
            /**
             * Specifies the mandatoryApprovers property: List of mandatory approvers for the approval request.
             * 
             * @param mandatoryApprovers List of mandatory approvers for the approval request.
             * @return the next definition stage.
             */
            Update withMandatoryApprovers(List<Approvers> mandatoryApprovers);
        }

        /**
         * The stage of the ApprovalResource update allowing to specify minimumApproversRequired.
         */
        interface WithMinimumApproversRequired {
            /**
             * Specifies the minimumApproversRequired property: Minimum number of approvers required for the approval
             * request.
             * 
             * @param minimumApproversRequired Minimum number of approvers required for the approval request.
             * @return the next definition stage.
             */
            Update withMinimumApproversRequired(Long minimumApproversRequired);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ApprovalResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ApprovalResource refresh(Context context);

    /**
     * Upon receiving approval or rejection from approver, this facilitates actions on approval resource.
     * 
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response body after handling of approvalCallbackRequest.
     */
    InitiatorCallbackResponse initiatorCallback(InitiatorCallbackRequest body);

    /**
     * Upon receiving approval or rejection from approver, this facilitates actions on approval resource.
     * 
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response body after handling of approvalCallbackRequest.
     */
    InitiatorCallbackResponse initiatorCallback(InitiatorCallbackRequest body, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.mission.fluent.models.CommunityProperties;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Community Model Resource.
 */
@Fluent
public final class CommunityResourceUpdate extends AzureResourceManagerCommonTypesTrackedResourceUpdate {
    /*
     * The resource-specific properties for this resource.
     */
    private CommunityProperties innerProperties;

    /*
     * The managed service identities assigned to this resource.
     */
    private AzureResourceManagerCommonTypesManagedServiceIdentityUpdate identity;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of CommunityResourceUpdate class.
     */
    public CommunityResourceUpdate() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private CommunityProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the identity property: The managed service identities assigned to this resource.
     * 
     * @return the identity value.
     */
    public AzureResourceManagerCommonTypesManagedServiceIdentityUpdate identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The managed service identities assigned to this resource.
     * 
     * @param identity the identity value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withIdentity(AzureResourceManagerCommonTypesManagedServiceIdentityUpdate identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    @Override
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommunityResourceUpdate withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the addressSpace property: Address Space.
     * 
     * @return the addressSpace value.
     */
    public String addressSpace() {
        return this.innerProperties() == null ? null : this.innerProperties().addressSpace();
    }

    /**
     * Set the addressSpace property: Address Space.
     * 
     * @param addressSpace the addressSpace value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withAddressSpace(String addressSpace) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withAddressSpace(addressSpace);
        return this;
    }

    /**
     * Get the dnsServers property: Dns Servers.
     * 
     * @return the dnsServers value.
     */
    public List<String> dnsServers() {
        return this.innerProperties() == null ? null : this.innerProperties().dnsServers();
    }

    /**
     * Set the dnsServers property: Dns Servers.
     * 
     * @param dnsServers the dnsServers value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withDnsServers(List<String> dnsServers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withDnsServers(dnsServers);
        return this;
    }

    /**
     * Get the provisioningState property: Provisioning State.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the resourceCollection property: List of resource ids created by communities.
     * 
     * @return the resourceCollection value.
     */
    public List<String> resourceCollection() {
        return this.innerProperties() == null ? null : this.innerProperties().resourceCollection();
    }

    /**
     * Set the resourceCollection property: List of resource ids created by communities.
     * 
     * @param resourceCollection the resourceCollection value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withResourceCollection(List<String> resourceCollection) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withResourceCollection(resourceCollection);
        return this;
    }

    /**
     * Get the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @return the managedResourceGroupConfiguration value.
     */
    public ManagedResourceGroupConfiguration managedResourceGroupConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().managedResourceGroupConfiguration();
    }

    /**
     * Set the managedResourceGroupConfiguration property: Managed resource group configuration.
     * 
     * @param managedResourceGroupConfiguration the managedResourceGroupConfiguration value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate
        withManagedResourceGroupConfiguration(ManagedResourceGroupConfiguration managedResourceGroupConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withManagedResourceGroupConfiguration(managedResourceGroupConfiguration);
        return this;
    }

    /**
     * Get the governedServiceList property: List of services governed by a community.
     * 
     * @return the governedServiceList value.
     */
    public List<GovernedServiceItem> governedServiceList() {
        return this.innerProperties() == null ? null : this.innerProperties().governedServiceList();
    }

    /**
     * Set the governedServiceList property: List of services governed by a community.
     * 
     * @param governedServiceList the governedServiceList value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withGovernedServiceList(List<GovernedServiceItem> governedServiceList) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withGovernedServiceList(governedServiceList);
        return this;
    }

    /**
     * Get the communityRoleAssignments property: Community role assignments.
     * 
     * @return the communityRoleAssignments value.
     */
    public List<RoleAssignmentItem> communityRoleAssignments() {
        return this.innerProperties() == null ? null : this.innerProperties().communityRoleAssignments();
    }

    /**
     * Set the communityRoleAssignments property: Community role assignments.
     * 
     * @param communityRoleAssignments the communityRoleAssignments value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withCommunityRoleAssignments(List<RoleAssignmentItem> communityRoleAssignments) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withCommunityRoleAssignments(communityRoleAssignments);
        return this;
    }

    /**
     * Get the approvalSettings property: Approval requirements for various actions on the community's resources.
     * 
     * @return the approvalSettings value.
     */
    public ApprovalSettings approvalSettings() {
        return this.innerProperties() == null ? null : this.innerProperties().approvalSettings();
    }

    /**
     * Set the approvalSettings property: Approval requirements for various actions on the community's resources.
     * 
     * @param approvalSettings the approvalSettings value to set.
     * @return the CommunityResourceUpdate object itself.
     */
    public CommunityResourceUpdate withApprovalSettings(ApprovalSettings approvalSettings) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunityProperties();
        }
        this.innerProperties().withApprovalSettings(approvalSettings);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
        if (identity() != null) {
            identity().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeMapField("tags", tags(), (writer, element) -> writer.writeString(element));
        jsonWriter.writeJsonField("properties", this.innerProperties);
        jsonWriter.writeJsonField("identity", this.identity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunityResourceUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunityResourceUpdate if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CommunityResourceUpdate.
     */
    public static CommunityResourceUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunityResourceUpdate deserializedCommunityResourceUpdate = new CommunityResourceUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedCommunityResourceUpdate.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedCommunityResourceUpdate.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedCommunityResourceUpdate.type = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    Map<String, String> tags = reader.readMap(reader1 -> reader1.getString());
                    deserializedCommunityResourceUpdate.withTags(tags);
                } else if ("systemData".equals(fieldName)) {
                    deserializedCommunityResourceUpdate.systemData = SystemData.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedCommunityResourceUpdate.innerProperties = CommunityProperties.fromJson(reader);
                } else if ("identity".equals(fieldName)) {
                    deserializedCommunityResourceUpdate.identity
                        = AzureResourceManagerCommonTypesManagedServiceIdentityUpdate.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunityResourceUpdate;
        });
    }
}

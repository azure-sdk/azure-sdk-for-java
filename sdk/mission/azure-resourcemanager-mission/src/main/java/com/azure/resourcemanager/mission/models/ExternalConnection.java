// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mission.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mission.fluent.models.ExternalConnectionInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of ExternalConnection.
 */
public interface ExternalConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the state property: The state of the externalConnection.
     * 
     * @return the state value.
     */
    ExternalConnectionState state();

    /**
     * Gets the communityResourceId property: Community Resource Id.
     * 
     * @return the communityResourceId value.
     */
    String communityResourceId();

    /**
     * Gets the enclaveIds property: The enclaves' resource IDs.
     * 
     * @return the enclaveIds value.
     */
    List<String> enclaveIds();

    /**
     * Gets the externalCidrs property: The external CIDR IP addresses.
     * 
     * @return the externalCidrs value.
     */
    List<String> externalCidrs();

    /**
     * Gets the resourceCollection property: List of resource ids modified by externalConnections.
     * 
     * @return the resourceCollection value.
     */
    List<String> resourceCollection();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.mission.fluent.models.ExternalConnectionInner object.
     * 
     * @return the inner object.
     */
    ExternalConnectionInner innerModel();

    /**
     * The entirety of the ExternalConnection definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The ExternalConnection definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ExternalConnection definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the ExternalConnection definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithState,
            DefinitionStages.WithCommunityResourceId, DefinitionStages.WithEnclaveIds,
            DefinitionStages.WithExternalCidrs, DefinitionStages.WithResourceCollection {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ExternalConnection create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ExternalConnection create(Context context);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify state.
         */
        interface WithState {
            /**
             * Specifies the state property: The state of the externalConnection..
             * 
             * @param state The state of the externalConnection.
             * @return the next definition stage.
             */
            WithCreate withState(ExternalConnectionState state);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify communityResourceId.
         */
        interface WithCommunityResourceId {
            /**
             * Specifies the communityResourceId property: Community Resource Id..
             * 
             * @param communityResourceId Community Resource Id.
             * @return the next definition stage.
             */
            WithCreate withCommunityResourceId(String communityResourceId);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify enclaveIds.
         */
        interface WithEnclaveIds {
            /**
             * Specifies the enclaveIds property: The enclaves' resource IDs..
             * 
             * @param enclaveIds The enclaves' resource IDs.
             * @return the next definition stage.
             */
            WithCreate withEnclaveIds(List<String> enclaveIds);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify externalCidrs.
         */
        interface WithExternalCidrs {
            /**
             * Specifies the externalCidrs property: The external CIDR IP addresses..
             * 
             * @param externalCidrs The external CIDR IP addresses.
             * @return the next definition stage.
             */
            WithCreate withExternalCidrs(List<String> externalCidrs);
        }

        /**
         * The stage of the ExternalConnection definition allowing to specify resourceCollection.
         */
        interface WithResourceCollection {
            /**
             * Specifies the resourceCollection property: List of resource ids modified by externalConnections..
             * 
             * @param resourceCollection List of resource ids modified by externalConnections.
             * @return the next definition stage.
             */
            WithCreate withResourceCollection(List<String> resourceCollection);
        }
    }

    /**
     * Begins update for the ExternalConnection resource.
     * 
     * @return the stage of resource update.
     */
    ExternalConnection.Update update();

    /**
     * The template for ExternalConnection update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithState, UpdateStages.WithCommunityResourceId,
        UpdateStages.WithEnclaveIds, UpdateStages.WithExternalCidrs, UpdateStages.WithResourceCollection {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ExternalConnection apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ExternalConnection apply(Context context);
    }

    /**
     * The ExternalConnection update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ExternalConnection update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the ExternalConnection update allowing to specify state.
         */
        interface WithState {
            /**
             * Specifies the state property: The state of the externalConnection..
             * 
             * @param state The state of the externalConnection.
             * @return the next definition stage.
             */
            Update withState(ExternalConnectionState state);
        }

        /**
         * The stage of the ExternalConnection update allowing to specify communityResourceId.
         */
        interface WithCommunityResourceId {
            /**
             * Specifies the communityResourceId property: Community Resource Id..
             * 
             * @param communityResourceId Community Resource Id.
             * @return the next definition stage.
             */
            Update withCommunityResourceId(String communityResourceId);
        }

        /**
         * The stage of the ExternalConnection update allowing to specify enclaveIds.
         */
        interface WithEnclaveIds {
            /**
             * Specifies the enclaveIds property: The enclaves' resource IDs..
             * 
             * @param enclaveIds The enclaves' resource IDs.
             * @return the next definition stage.
             */
            Update withEnclaveIds(List<String> enclaveIds);
        }

        /**
         * The stage of the ExternalConnection update allowing to specify externalCidrs.
         */
        interface WithExternalCidrs {
            /**
             * Specifies the externalCidrs property: The external CIDR IP addresses..
             * 
             * @param externalCidrs The external CIDR IP addresses.
             * @return the next definition stage.
             */
            Update withExternalCidrs(List<String> externalCidrs);
        }

        /**
         * The stage of the ExternalConnection update allowing to specify resourceCollection.
         */
        interface WithResourceCollection {
            /**
             * Specifies the resourceCollection property: List of resource ids modified by externalConnections..
             * 
             * @param resourceCollection List of resource ids modified by externalConnections.
             * @return the next definition stage.
             */
            Update withResourceCollection(List<String> resourceCollection);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ExternalConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ExternalConnection refresh(Context context);
}

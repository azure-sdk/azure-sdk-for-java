// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Defines the operation status.
 */
@Immutable
public final class OperationStatusInner implements JsonSerializable<OperationStatusInner> {
    /*
     * Gets or sets the Id.
     */
    private String id;

    /*
     * Gets or sets the operation name.
     */
    private String name;

    /*
     * Gets or sets the status of the operation. ARM expects the terminal status to be one of Succeeded/ Failed/
     * Canceled. All other values imply that the operation is still running.
     */
    private String status;

    /*
     * Gets or sets the start time.
     */
    private String startTime;

    /*
     * Gets or sets the end time.
     */
    private String endTime;

    /**
     * Creates an instance of OperationStatusInner class.
     */
    private OperationStatusInner() {
    }

    /**
     * Get the id property: Gets or sets the Id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: Gets or sets the operation name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the status property: Gets or sets the status of the operation. ARM expects the terminal status to be one of
     * Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the startTime property: Gets or sets the start time.
     * 
     * @return the startTime value.
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Get the endTime property: Gets or sets the end time.
     * 
     * @return the endTime value.
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("status", this.status);
        jsonWriter.writeStringField("startTime", this.startTime);
        jsonWriter.writeStringField("endTime", this.endTime);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OperationStatusInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OperationStatusInner if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OperationStatusInner.
     */
    public static OperationStatusInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OperationStatusInner deserializedOperationStatusInner = new OperationStatusInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedOperationStatusInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedOperationStatusInner.name = reader.getString();
                } else if ("status".equals(fieldName)) {
                    deserializedOperationStatusInner.status = reader.getString();
                } else if ("startTime".equals(fieldName)) {
                    deserializedOperationStatusInner.startTime = reader.getString();
                } else if ("endTime".equals(fieldName)) {
                    deserializedOperationStatusInner.endTime = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOperationStatusInner;
        });
    }
}

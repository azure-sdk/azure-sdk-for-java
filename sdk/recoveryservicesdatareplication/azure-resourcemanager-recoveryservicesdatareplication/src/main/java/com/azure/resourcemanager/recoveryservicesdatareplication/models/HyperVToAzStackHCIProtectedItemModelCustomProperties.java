// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * HyperV to AzStackHCI Protected item model custom properties.
 */
@Fluent
public final class HyperVToAzStackHCIProtectedItemModelCustomProperties extends ProtectedItemModelCustomProperties {
    /*
     * Discriminator property for ProtectedItemModelCustomProperties.
     */
    private String instanceType = "HyperVToAzStackHCI";

    /*
     * Gets or sets the location of the protected item.
     */
    private ProtectedItemActiveLocation activeLocation;

    /*
     * Gets or sets the Target HCI Cluster ARM Id.
     */
    private String targetHciClusterId;

    /*
     * Gets or sets the Target Arc Cluster Custom Location ARM Id.
     */
    private String targetArcClusterCustomLocationId;

    /*
     * Gets or sets the Target AzStackHCI cluster name.
     */
    private String targetAzStackHciClusterName;

    /*
     * Gets or sets the ARM Id of the discovered machine.
     */
    private String fabricDiscoveryMachineId;

    /*
     * Gets or sets the list of disks to replicate.
     */
    private List<HyperVToAzStackHCIDiskInput> disksToInclude;

    /*
     * Gets or sets the list of VM NIC to replicate.
     */
    private List<HyperVToAzStackHCINicInput> nicsToInclude;

    /*
     * Gets or sets the source VM display name.
     */
    private String sourceVmName;

    /*
     * Gets or sets the source VM CPU cores.
     */
    private Integer sourceCpuCores;

    /*
     * Gets or sets the source VM ram memory size in megabytes.
     */
    private Double sourceMemoryInMegaBytes;

    /*
     * Gets or sets the target VM display name.
     */
    private String targetVmName;

    /*
     * Gets or sets the target resource group ARM Id.
     */
    private String targetResourceGroupId;

    /*
     * Gets or sets the target storage container ARM Id.
     */
    private String storageContainerId;

    /*
     * Gets or sets the hypervisor generation of the virtual machine.
     */
    private String hyperVGeneration;

    /*
     * Gets or sets the target network Id within AzStackHCI Cluster.
     */
    private String targetNetworkId;

    /*
     * Gets or sets the target test network Id within AzStackHCI Cluster.
     */
    private String testNetworkId;

    /*
     * Gets or sets the target CPU cores.
     */
    private Integer targetCpuCores;

    /*
     * Gets or sets a value indicating whether memory is dynamical.
     */
    private Boolean isDynamicRam;

    /*
     * Protected item dynamic memory config.
     */
    private ProtectedItemDynamicMemoryConfig dynamicMemoryConfig;

    /*
     * Gets or sets the target memory in mega-bytes.
     */
    private Integer targetMemoryInMegaBytes;

    /*
     * Gets or sets the Run As account Id.
     */
    private String runAsAccountId;

    /*
     * Gets or sets the source fabric agent name.
     */
    private String sourceFabricAgentName;

    /*
     * Gets or sets the target fabric agent name.
     */
    private String targetFabricAgentName;

    /*
     * Gets or sets the source appliance name.
     */
    private String sourceApplianceName;

    /*
     * Gets or sets the target appliance name.
     */
    private String targetApplianceName;

    /*
     * Gets or sets the type of the OS.
     */
    private String osType;

    /*
     * Gets or sets the name of the OS.
     */
    private String osName;

    /*
     * Gets or sets the firmware type.
     */
    private String firmwareType;

    /*
     * Gets or sets the target location.
     */
    private String targetLocation;

    /*
     * Gets or sets the location of Azure Arc HCI custom location resource.
     */
    private String customLocationRegion;

    /*
     * Gets or sets the recovery point Id to which the VM was failed over.
     */
    private String failoverRecoveryPointId;

    /*
     * Gets or sets the last recovery point received time.
     */
    private OffsetDateTime lastRecoveryPointReceived;

    /*
     * Gets or sets the last recovery point Id.
     */
    private String lastRecoveryPointId;

    /*
     * Gets or sets the initial replication progress percentage. This is calculated based on total bytes processed for
     * all disks in the source VM.
     */
    private Integer initialReplicationProgressPercentage;

    /*
     * Gets or sets the resync progress percentage. This is calculated based on total bytes processed for all disks in
     * the source VM.
     */
    private Integer resyncProgressPercentage;

    /*
     * Gets or sets the list of protected disks.
     */
    private List<HyperVToAzStackHCIProtectedDiskProperties> protectedDisks;

    /*
     * Gets or sets the VM NIC details.
     */
    private List<HyperVToAzStackHCIProtectedNicProperties> protectedNics;

    /*
     * Gets or sets the BIOS Id of the target AzStackHCI VM.
     */
    private String targetVmBiosId;

    /*
     * Gets or sets the latest timestamp that replication status is updated.
     */
    private OffsetDateTime lastReplicationUpdateTime;

    /**
     * Creates an instance of HyperVToAzStackHCIProtectedItemModelCustomProperties class.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties() {
    }

    /**
     * Get the instanceType property: Discriminator property for ProtectedItemModelCustomProperties.
     * 
     * @return the instanceType value.
     */
    @Override
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Get the activeLocation property: Gets or sets the location of the protected item.
     * 
     * @return the activeLocation value.
     */
    public ProtectedItemActiveLocation activeLocation() {
        return this.activeLocation;
    }

    /**
     * Get the targetHciClusterId property: Gets or sets the Target HCI Cluster ARM Id.
     * 
     * @return the targetHciClusterId value.
     */
    public String targetHciClusterId() {
        return this.targetHciClusterId;
    }

    /**
     * Set the targetHciClusterId property: Gets or sets the Target HCI Cluster ARM Id.
     * 
     * @param targetHciClusterId the targetHciClusterId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withTargetHciClusterId(String targetHciClusterId) {
        this.targetHciClusterId = targetHciClusterId;
        return this;
    }

    /**
     * Get the targetArcClusterCustomLocationId property: Gets or sets the Target Arc Cluster Custom Location ARM Id.
     * 
     * @return the targetArcClusterCustomLocationId value.
     */
    public String targetArcClusterCustomLocationId() {
        return this.targetArcClusterCustomLocationId;
    }

    /**
     * Set the targetArcClusterCustomLocationId property: Gets or sets the Target Arc Cluster Custom Location ARM Id.
     * 
     * @param targetArcClusterCustomLocationId the targetArcClusterCustomLocationId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withTargetArcClusterCustomLocationId(String targetArcClusterCustomLocationId) {
        this.targetArcClusterCustomLocationId = targetArcClusterCustomLocationId;
        return this;
    }

    /**
     * Get the targetAzStackHciClusterName property: Gets or sets the Target AzStackHCI cluster name.
     * 
     * @return the targetAzStackHciClusterName value.
     */
    public String targetAzStackHciClusterName() {
        return this.targetAzStackHciClusterName;
    }

    /**
     * Get the fabricDiscoveryMachineId property: Gets or sets the ARM Id of the discovered machine.
     * 
     * @return the fabricDiscoveryMachineId value.
     */
    public String fabricDiscoveryMachineId() {
        return this.fabricDiscoveryMachineId;
    }

    /**
     * Set the fabricDiscoveryMachineId property: Gets or sets the ARM Id of the discovered machine.
     * 
     * @param fabricDiscoveryMachineId the fabricDiscoveryMachineId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withFabricDiscoveryMachineId(String fabricDiscoveryMachineId) {
        this.fabricDiscoveryMachineId = fabricDiscoveryMachineId;
        return this;
    }

    /**
     * Get the disksToInclude property: Gets or sets the list of disks to replicate.
     * 
     * @return the disksToInclude value.
     */
    public List<HyperVToAzStackHCIDiskInput> disksToInclude() {
        return this.disksToInclude;
    }

    /**
     * Set the disksToInclude property: Gets or sets the list of disks to replicate.
     * 
     * @param disksToInclude the disksToInclude value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withDisksToInclude(List<HyperVToAzStackHCIDiskInput> disksToInclude) {
        this.disksToInclude = disksToInclude;
        return this;
    }

    /**
     * Get the nicsToInclude property: Gets or sets the list of VM NIC to replicate.
     * 
     * @return the nicsToInclude value.
     */
    public List<HyperVToAzStackHCINicInput> nicsToInclude() {
        return this.nicsToInclude;
    }

    /**
     * Set the nicsToInclude property: Gets or sets the list of VM NIC to replicate.
     * 
     * @param nicsToInclude the nicsToInclude value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withNicsToInclude(List<HyperVToAzStackHCINicInput> nicsToInclude) {
        this.nicsToInclude = nicsToInclude;
        return this;
    }

    /**
     * Get the sourceVmName property: Gets or sets the source VM display name.
     * 
     * @return the sourceVmName value.
     */
    public String sourceVmName() {
        return this.sourceVmName;
    }

    /**
     * Get the sourceCpuCores property: Gets or sets the source VM CPU cores.
     * 
     * @return the sourceCpuCores value.
     */
    public Integer sourceCpuCores() {
        return this.sourceCpuCores;
    }

    /**
     * Get the sourceMemoryInMegaBytes property: Gets or sets the source VM ram memory size in megabytes.
     * 
     * @return the sourceMemoryInMegaBytes value.
     */
    public Double sourceMemoryInMegaBytes() {
        return this.sourceMemoryInMegaBytes;
    }

    /**
     * Get the targetVmName property: Gets or sets the target VM display name.
     * 
     * @return the targetVmName value.
     */
    public String targetVmName() {
        return this.targetVmName;
    }

    /**
     * Set the targetVmName property: Gets or sets the target VM display name.
     * 
     * @param targetVmName the targetVmName value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withTargetVmName(String targetVmName) {
        this.targetVmName = targetVmName;
        return this;
    }

    /**
     * Get the targetResourceGroupId property: Gets or sets the target resource group ARM Id.
     * 
     * @return the targetResourceGroupId value.
     */
    public String targetResourceGroupId() {
        return this.targetResourceGroupId;
    }

    /**
     * Set the targetResourceGroupId property: Gets or sets the target resource group ARM Id.
     * 
     * @param targetResourceGroupId the targetResourceGroupId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withTargetResourceGroupId(String targetResourceGroupId) {
        this.targetResourceGroupId = targetResourceGroupId;
        return this;
    }

    /**
     * Get the storageContainerId property: Gets or sets the target storage container ARM Id.
     * 
     * @return the storageContainerId value.
     */
    public String storageContainerId() {
        return this.storageContainerId;
    }

    /**
     * Set the storageContainerId property: Gets or sets the target storage container ARM Id.
     * 
     * @param storageContainerId the storageContainerId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withStorageContainerId(String storageContainerId) {
        this.storageContainerId = storageContainerId;
        return this;
    }

    /**
     * Get the hyperVGeneration property: Gets or sets the hypervisor generation of the virtual machine.
     * 
     * @return the hyperVGeneration value.
     */
    public String hyperVGeneration() {
        return this.hyperVGeneration;
    }

    /**
     * Set the hyperVGeneration property: Gets or sets the hypervisor generation of the virtual machine.
     * 
     * @param hyperVGeneration the hyperVGeneration value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withHyperVGeneration(String hyperVGeneration) {
        this.hyperVGeneration = hyperVGeneration;
        return this;
    }

    /**
     * Get the targetNetworkId property: Gets or sets the target network Id within AzStackHCI Cluster.
     * 
     * @return the targetNetworkId value.
     */
    public String targetNetworkId() {
        return this.targetNetworkId;
    }

    /**
     * Set the targetNetworkId property: Gets or sets the target network Id within AzStackHCI Cluster.
     * 
     * @param targetNetworkId the targetNetworkId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withTargetNetworkId(String targetNetworkId) {
        this.targetNetworkId = targetNetworkId;
        return this;
    }

    /**
     * Get the testNetworkId property: Gets or sets the target test network Id within AzStackHCI Cluster.
     * 
     * @return the testNetworkId value.
     */
    public String testNetworkId() {
        return this.testNetworkId;
    }

    /**
     * Set the testNetworkId property: Gets or sets the target test network Id within AzStackHCI Cluster.
     * 
     * @param testNetworkId the testNetworkId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withTestNetworkId(String testNetworkId) {
        this.testNetworkId = testNetworkId;
        return this;
    }

    /**
     * Get the targetCpuCores property: Gets or sets the target CPU cores.
     * 
     * @return the targetCpuCores value.
     */
    public Integer targetCpuCores() {
        return this.targetCpuCores;
    }

    /**
     * Set the targetCpuCores property: Gets or sets the target CPU cores.
     * 
     * @param targetCpuCores the targetCpuCores value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withTargetCpuCores(Integer targetCpuCores) {
        this.targetCpuCores = targetCpuCores;
        return this;
    }

    /**
     * Get the isDynamicRam property: Gets or sets a value indicating whether memory is dynamical.
     * 
     * @return the isDynamicRam value.
     */
    public Boolean isDynamicRam() {
        return this.isDynamicRam;
    }

    /**
     * Set the isDynamicRam property: Gets or sets a value indicating whether memory is dynamical.
     * 
     * @param isDynamicRam the isDynamicRam value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withIsDynamicRam(Boolean isDynamicRam) {
        this.isDynamicRam = isDynamicRam;
        return this;
    }

    /**
     * Get the dynamicMemoryConfig property: Protected item dynamic memory config.
     * 
     * @return the dynamicMemoryConfig value.
     */
    public ProtectedItemDynamicMemoryConfig dynamicMemoryConfig() {
        return this.dynamicMemoryConfig;
    }

    /**
     * Set the dynamicMemoryConfig property: Protected item dynamic memory config.
     * 
     * @param dynamicMemoryConfig the dynamicMemoryConfig value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withDynamicMemoryConfig(ProtectedItemDynamicMemoryConfig dynamicMemoryConfig) {
        this.dynamicMemoryConfig = dynamicMemoryConfig;
        return this;
    }

    /**
     * Get the targetMemoryInMegaBytes property: Gets or sets the target memory in mega-bytes.
     * 
     * @return the targetMemoryInMegaBytes value.
     */
    public Integer targetMemoryInMegaBytes() {
        return this.targetMemoryInMegaBytes;
    }

    /**
     * Set the targetMemoryInMegaBytes property: Gets or sets the target memory in mega-bytes.
     * 
     * @param targetMemoryInMegaBytes the targetMemoryInMegaBytes value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withTargetMemoryInMegaBytes(Integer targetMemoryInMegaBytes) {
        this.targetMemoryInMegaBytes = targetMemoryInMegaBytes;
        return this;
    }

    /**
     * Get the runAsAccountId property: Gets or sets the Run As account Id.
     * 
     * @return the runAsAccountId value.
     */
    public String runAsAccountId() {
        return this.runAsAccountId;
    }

    /**
     * Set the runAsAccountId property: Gets or sets the Run As account Id.
     * 
     * @param runAsAccountId the runAsAccountId value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withRunAsAccountId(String runAsAccountId) {
        this.runAsAccountId = runAsAccountId;
        return this;
    }

    /**
     * Get the sourceFabricAgentName property: Gets or sets the source fabric agent name.
     * 
     * @return the sourceFabricAgentName value.
     */
    public String sourceFabricAgentName() {
        return this.sourceFabricAgentName;
    }

    /**
     * Set the sourceFabricAgentName property: Gets or sets the source fabric agent name.
     * 
     * @param sourceFabricAgentName the sourceFabricAgentName value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withSourceFabricAgentName(String sourceFabricAgentName) {
        this.sourceFabricAgentName = sourceFabricAgentName;
        return this;
    }

    /**
     * Get the targetFabricAgentName property: Gets or sets the target fabric agent name.
     * 
     * @return the targetFabricAgentName value.
     */
    public String targetFabricAgentName() {
        return this.targetFabricAgentName;
    }

    /**
     * Set the targetFabricAgentName property: Gets or sets the target fabric agent name.
     * 
     * @param targetFabricAgentName the targetFabricAgentName value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties
        withTargetFabricAgentName(String targetFabricAgentName) {
        this.targetFabricAgentName = targetFabricAgentName;
        return this;
    }

    /**
     * Get the sourceApplianceName property: Gets or sets the source appliance name.
     * 
     * @return the sourceApplianceName value.
     */
    public String sourceApplianceName() {
        return this.sourceApplianceName;
    }

    /**
     * Get the targetApplianceName property: Gets or sets the target appliance name.
     * 
     * @return the targetApplianceName value.
     */
    public String targetApplianceName() {
        return this.targetApplianceName;
    }

    /**
     * Get the osType property: Gets or sets the type of the OS.
     * 
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Get the osName property: Gets or sets the name of the OS.
     * 
     * @return the osName value.
     */
    public String osName() {
        return this.osName;
    }

    /**
     * Get the firmwareType property: Gets or sets the firmware type.
     * 
     * @return the firmwareType value.
     */
    public String firmwareType() {
        return this.firmwareType;
    }

    /**
     * Get the targetLocation property: Gets or sets the target location.
     * 
     * @return the targetLocation value.
     */
    public String targetLocation() {
        return this.targetLocation;
    }

    /**
     * Get the customLocationRegion property: Gets or sets the location of Azure Arc HCI custom location resource.
     * 
     * @return the customLocationRegion value.
     */
    public String customLocationRegion() {
        return this.customLocationRegion;
    }

    /**
     * Set the customLocationRegion property: Gets or sets the location of Azure Arc HCI custom location resource.
     * 
     * @param customLocationRegion the customLocationRegion value to set.
     * @return the HyperVToAzStackHCIProtectedItemModelCustomProperties object itself.
     */
    public HyperVToAzStackHCIProtectedItemModelCustomProperties withCustomLocationRegion(String customLocationRegion) {
        this.customLocationRegion = customLocationRegion;
        return this;
    }

    /**
     * Get the failoverRecoveryPointId property: Gets or sets the recovery point Id to which the VM was failed over.
     * 
     * @return the failoverRecoveryPointId value.
     */
    public String failoverRecoveryPointId() {
        return this.failoverRecoveryPointId;
    }

    /**
     * Get the lastRecoveryPointReceived property: Gets or sets the last recovery point received time.
     * 
     * @return the lastRecoveryPointReceived value.
     */
    public OffsetDateTime lastRecoveryPointReceived() {
        return this.lastRecoveryPointReceived;
    }

    /**
     * Get the lastRecoveryPointId property: Gets or sets the last recovery point Id.
     * 
     * @return the lastRecoveryPointId value.
     */
    public String lastRecoveryPointId() {
        return this.lastRecoveryPointId;
    }

    /**
     * Get the initialReplicationProgressPercentage property: Gets or sets the initial replication progress percentage.
     * This is calculated based on total bytes processed for all disks in the source VM.
     * 
     * @return the initialReplicationProgressPercentage value.
     */
    public Integer initialReplicationProgressPercentage() {
        return this.initialReplicationProgressPercentage;
    }

    /**
     * Get the resyncProgressPercentage property: Gets or sets the resync progress percentage. This is calculated based
     * on total bytes processed for all disks in the source VM.
     * 
     * @return the resyncProgressPercentage value.
     */
    public Integer resyncProgressPercentage() {
        return this.resyncProgressPercentage;
    }

    /**
     * Get the protectedDisks property: Gets or sets the list of protected disks.
     * 
     * @return the protectedDisks value.
     */
    public List<HyperVToAzStackHCIProtectedDiskProperties> protectedDisks() {
        return this.protectedDisks;
    }

    /**
     * Get the protectedNics property: Gets or sets the VM NIC details.
     * 
     * @return the protectedNics value.
     */
    public List<HyperVToAzStackHCIProtectedNicProperties> protectedNics() {
        return this.protectedNics;
    }

    /**
     * Get the targetVmBiosId property: Gets or sets the BIOS Id of the target AzStackHCI VM.
     * 
     * @return the targetVmBiosId value.
     */
    public String targetVmBiosId() {
        return this.targetVmBiosId;
    }

    /**
     * Get the lastReplicationUpdateTime property: Gets or sets the latest timestamp that replication status is updated.
     * 
     * @return the lastReplicationUpdateTime value.
     */
    public OffsetDateTime lastReplicationUpdateTime() {
        return this.lastReplicationUpdateTime;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        if (targetHciClusterId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetHciClusterId in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (targetArcClusterCustomLocationId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetArcClusterCustomLocationId in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (fabricDiscoveryMachineId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property fabricDiscoveryMachineId in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (disksToInclude() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property disksToInclude in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        } else {
            disksToInclude().forEach(e -> e.validate());
        }
        if (nicsToInclude() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property nicsToInclude in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        } else {
            nicsToInclude().forEach(e -> e.validate());
        }
        if (targetResourceGroupId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetResourceGroupId in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (storageContainerId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property storageContainerId in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (hyperVGeneration() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property hyperVGeneration in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (dynamicMemoryConfig() != null) {
            dynamicMemoryConfig().validate();
        }
        if (runAsAccountId() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property runAsAccountId in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (sourceFabricAgentName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property sourceFabricAgentName in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (targetFabricAgentName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetFabricAgentName in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (customLocationRegion() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property customLocationRegion in model HyperVToAzStackHCIProtectedItemModelCustomProperties"));
        }
        if (protectedDisks() != null) {
            protectedDisks().forEach(e -> e.validate());
        }
        if (protectedNics() != null) {
            protectedNics().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER
        = new ClientLogger(HyperVToAzStackHCIProtectedItemModelCustomProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("targetHciClusterId", this.targetHciClusterId);
        jsonWriter.writeStringField("targetArcClusterCustomLocationId", this.targetArcClusterCustomLocationId);
        jsonWriter.writeStringField("fabricDiscoveryMachineId", this.fabricDiscoveryMachineId);
        jsonWriter.writeArrayField("disksToInclude", this.disksToInclude,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("nicsToInclude", this.nicsToInclude, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("targetResourceGroupId", this.targetResourceGroupId);
        jsonWriter.writeStringField("storageContainerId", this.storageContainerId);
        jsonWriter.writeStringField("hyperVGeneration", this.hyperVGeneration);
        jsonWriter.writeStringField("runAsAccountId", this.runAsAccountId);
        jsonWriter.writeStringField("sourceFabricAgentName", this.sourceFabricAgentName);
        jsonWriter.writeStringField("targetFabricAgentName", this.targetFabricAgentName);
        jsonWriter.writeStringField("customLocationRegion", this.customLocationRegion);
        jsonWriter.writeStringField("instanceType", this.instanceType);
        jsonWriter.writeStringField("targetVmName", this.targetVmName);
        jsonWriter.writeStringField("targetNetworkId", this.targetNetworkId);
        jsonWriter.writeStringField("testNetworkId", this.testNetworkId);
        jsonWriter.writeNumberField("targetCpuCores", this.targetCpuCores);
        jsonWriter.writeBooleanField("isDynamicRam", this.isDynamicRam);
        jsonWriter.writeJsonField("dynamicMemoryConfig", this.dynamicMemoryConfig);
        jsonWriter.writeNumberField("targetMemoryInMegaBytes", this.targetMemoryInMegaBytes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of HyperVToAzStackHCIProtectedItemModelCustomProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of HyperVToAzStackHCIProtectedItemModelCustomProperties if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the HyperVToAzStackHCIProtectedItemModelCustomProperties.
     */
    public static HyperVToAzStackHCIProtectedItemModelCustomProperties fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            HyperVToAzStackHCIProtectedItemModelCustomProperties deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties
                = new HyperVToAzStackHCIProtectedItemModelCustomProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetHciClusterId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetHciClusterId
                        = reader.getString();
                } else if ("targetArcClusterCustomLocationId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetArcClusterCustomLocationId
                        = reader.getString();
                } else if ("fabricDiscoveryMachineId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.fabricDiscoveryMachineId
                        = reader.getString();
                } else if ("disksToInclude".equals(fieldName)) {
                    List<HyperVToAzStackHCIDiskInput> disksToInclude
                        = reader.readArray(reader1 -> HyperVToAzStackHCIDiskInput.fromJson(reader1));
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.disksToInclude = disksToInclude;
                } else if ("nicsToInclude".equals(fieldName)) {
                    List<HyperVToAzStackHCINicInput> nicsToInclude
                        = reader.readArray(reader1 -> HyperVToAzStackHCINicInput.fromJson(reader1));
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.nicsToInclude = nicsToInclude;
                } else if ("targetResourceGroupId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetResourceGroupId
                        = reader.getString();
                } else if ("storageContainerId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.storageContainerId
                        = reader.getString();
                } else if ("hyperVGeneration".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.hyperVGeneration
                        = reader.getString();
                } else if ("runAsAccountId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.runAsAccountId
                        = reader.getString();
                } else if ("sourceFabricAgentName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.sourceFabricAgentName
                        = reader.getString();
                } else if ("targetFabricAgentName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetFabricAgentName
                        = reader.getString();
                } else if ("customLocationRegion".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.customLocationRegion
                        = reader.getString();
                } else if ("instanceType".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.instanceType = reader.getString();
                } else if ("activeLocation".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.activeLocation
                        = ProtectedItemActiveLocation.fromString(reader.getString());
                } else if ("targetAzStackHciClusterName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetAzStackHciClusterName
                        = reader.getString();
                } else if ("sourceVmName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.sourceVmName = reader.getString();
                } else if ("sourceCpuCores".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.sourceCpuCores
                        = reader.getNullable(JsonReader::getInt);
                } else if ("sourceMemoryInMegaBytes".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.sourceMemoryInMegaBytes
                        = reader.getNullable(JsonReader::getDouble);
                } else if ("targetVmName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetVmName = reader.getString();
                } else if ("targetNetworkId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetNetworkId
                        = reader.getString();
                } else if ("testNetworkId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.testNetworkId = reader.getString();
                } else if ("targetCpuCores".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetCpuCores
                        = reader.getNullable(JsonReader::getInt);
                } else if ("isDynamicRam".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.isDynamicRam
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("dynamicMemoryConfig".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.dynamicMemoryConfig
                        = ProtectedItemDynamicMemoryConfig.fromJson(reader);
                } else if ("targetMemoryInMegaBytes".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetMemoryInMegaBytes
                        = reader.getNullable(JsonReader::getInt);
                } else if ("sourceApplianceName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.sourceApplianceName
                        = reader.getString();
                } else if ("targetApplianceName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetApplianceName
                        = reader.getString();
                } else if ("osType".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.osType = reader.getString();
                } else if ("osName".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.osName = reader.getString();
                } else if ("firmwareType".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.firmwareType = reader.getString();
                } else if ("targetLocation".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetLocation
                        = reader.getString();
                } else if ("failoverRecoveryPointId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.failoverRecoveryPointId
                        = reader.getString();
                } else if ("lastRecoveryPointReceived".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.lastRecoveryPointReceived = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("lastRecoveryPointId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.lastRecoveryPointId
                        = reader.getString();
                } else if ("initialReplicationProgressPercentage".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.initialReplicationProgressPercentage
                        = reader.getNullable(JsonReader::getInt);
                } else if ("resyncProgressPercentage".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.resyncProgressPercentage
                        = reader.getNullable(JsonReader::getInt);
                } else if ("protectedDisks".equals(fieldName)) {
                    List<HyperVToAzStackHCIProtectedDiskProperties> protectedDisks
                        = reader.readArray(reader1 -> HyperVToAzStackHCIProtectedDiskProperties.fromJson(reader1));
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.protectedDisks = protectedDisks;
                } else if ("protectedNics".equals(fieldName)) {
                    List<HyperVToAzStackHCIProtectedNicProperties> protectedNics
                        = reader.readArray(reader1 -> HyperVToAzStackHCIProtectedNicProperties.fromJson(reader1));
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.protectedNics = protectedNics;
                } else if ("targetVmBiosId".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.targetVmBiosId
                        = reader.getString();
                } else if ("lastReplicationUpdateTime".equals(fieldName)) {
                    deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties.lastReplicationUpdateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedHyperVToAzStackHCIProtectedItemModelCustomProperties;
        });
    }
}

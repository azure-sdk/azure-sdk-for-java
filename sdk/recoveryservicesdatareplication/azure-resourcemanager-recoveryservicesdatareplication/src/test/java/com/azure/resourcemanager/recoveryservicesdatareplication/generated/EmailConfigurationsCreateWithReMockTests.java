// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesdatareplication.RecoveryServicesDataReplicationManager;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.EmailConfigurationModel;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.EmailConfigurationModelProperties;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class EmailConfigurationsCreateWithReMockTests {
    @Test
    public void testCreateWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"sendToOwners\":false,\"customEmailAddresses\":[\"wl\",\"xjwet\",\"psihcla\"],\"locale\":\"va\",\"provisioningState\":\"Succeeded\"},\"id\":\"rsqqwztcm\",\"name\":\"qkc\",\"type\":\"cxwaxfewz\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesDataReplicationManager manager = RecoveryServicesDataReplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        EmailConfigurationModel response = manager.emailConfigurations()
            .define("bcuiiz")
            .withExistingReplicationVault("rylniofrzg", "zjedmstkvnlv")
            .withProperties(new EmailConfigurationModelProperties().withSendToOwners(false)
                .withCustomEmailAddresses(Arrays.asList("ansnvp"))
                .withLocale("bmikost"))
            .create();

        Assertions.assertFalse(response.properties().sendToOwners());
        Assertions.assertEquals("wl", response.properties().customEmailAddresses().get(0));
        Assertions.assertEquals("va", response.properties().locale());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.recoveryservicesdatareplication.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.recoveryservicesdatareplication.RecoveryServicesDataReplicationManager;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.ReplicationVaultType;
import com.azure.resourcemanager.recoveryservicesdatareplication.models.VaultModel;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class VaultsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"serviceResourceId\":\"srmozihmip\",\"vaultType\":\"Migrate\"},\"identity\":{\"principalId\":\"xp\",\"tenantId\":\"jcxcjxgrytfmpcyc\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"fnznth\":{\"principalId\":\"aykggnoxu\",\"clientId\":\"rksxwpndfc\"},\"bzahgxqd\":{\"principalId\":\"wkjaos\",\"clientId\":\"uzvoamktcqiosm\"}}},\"location\":\"rtltla\",\"tags\":{\"atbhjmznn\":\"tz\",\"qeqala\":\"s\",\"tgfebwln\":\"vlagun\",\"av\":\"mhyreeudz\"},\"id\":\"pdqmjxlyyzglgouw\",\"name\":\"lmjjyuo\",\"type\":\"qtobaxkjeyt\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        RecoveryServicesDataReplicationManager manager = RecoveryServicesDataReplicationManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<VaultModel> response
            = manager.vaults().listByResourceGroup("atftgzpnpbsw", "e", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("rtltla", response.iterator().next().location());
        Assertions.assertEquals("tz", response.iterator().next().tags().get("atbhjmznn"));
        Assertions.assertEquals(ReplicationVaultType.MIGRATE, response.iterator().next().properties().vaultType());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managednetwork.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.managednetwork.models.ProvisioningState;
import com.azure.resourcemanager.managednetwork.models.ResourceProperties;
import java.io.IOException;

/**
 * Properties of Managed Network.
 */
@Fluent
public final class ScopeAssignmentProperties extends ResourceProperties {
    /*
     * The managed network ID with scope will be assigned to.
     */
    private String assignedManagedNetwork;

    /*
     * A unique read-only string that changes whenever the resource is updated.
     */
    private String etag;

    /*
     * Provisioning state of the ManagedNetwork resource.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of ScopeAssignmentProperties class.
     */
    public ScopeAssignmentProperties() {
    }

    /**
     * Get the assignedManagedNetwork property: The managed network ID with scope will be assigned to.
     * 
     * @return the assignedManagedNetwork value.
     */
    public String assignedManagedNetwork() {
        return this.assignedManagedNetwork;
    }

    /**
     * Set the assignedManagedNetwork property: The managed network ID with scope will be assigned to.
     * 
     * @param assignedManagedNetwork the assignedManagedNetwork value to set.
     * @return the ScopeAssignmentProperties object itself.
     */
    public ScopeAssignmentProperties withAssignedManagedNetwork(String assignedManagedNetwork) {
        this.assignedManagedNetwork = assignedManagedNetwork;
        return this;
    }

    /**
     * Get the etag property: A unique read-only string that changes whenever the resource is updated.
     * 
     * @return the etag value.
     */
    @Override
    public String etag() {
        return this.etag;
    }

    /**
     * Get the provisioningState property: Provisioning state of the ManagedNetwork resource.
     * 
     * @return the provisioningState value.
     */
    @Override
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("assignedManagedNetwork", this.assignedManagedNetwork);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ScopeAssignmentProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ScopeAssignmentProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ScopeAssignmentProperties.
     */
    public static ScopeAssignmentProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ScopeAssignmentProperties deserializedScopeAssignmentProperties = new ScopeAssignmentProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("provisioningState".equals(fieldName)) {
                    deserializedScopeAssignmentProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("etag".equals(fieldName)) {
                    deserializedScopeAssignmentProperties.etag = reader.getString();
                } else if ("assignedManagedNetwork".equals(fieldName)) {
                    deserializedScopeAssignmentProperties.assignedManagedNetwork = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedScopeAssignmentProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.professionalservice.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.professionalservice.fluent.ProfessionalServiceForEnrollmentsClient;
import com.azure.resourcemanager.professionalservice.fluent.models.ProfessionalServiceResourceInner;
import com.azure.resourcemanager.professionalservice.models.ProfessionalServiceForEnrollments;
import com.azure.resourcemanager.professionalservice.models.ProfessionalServiceResource;
import com.azure.resourcemanager.professionalservice.models.ProfessionalServiceResourceCreation;

public final class ProfessionalServiceForEnrollmentsImpl implements ProfessionalServiceForEnrollments {
    private static final ClientLogger LOGGER = new ClientLogger(ProfessionalServiceForEnrollmentsImpl.class);

    private final ProfessionalServiceForEnrollmentsClient innerClient;

    private final com.azure.resourcemanager.professionalservice.ProfessionalServiceManager serviceManager;

    public ProfessionalServiceForEnrollmentsImpl(
        ProfessionalServiceForEnrollmentsClient innerClient,
        com.azure.resourcemanager.professionalservice.ProfessionalServiceManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ProfessionalServiceResource> getWithResponse(
        String enrollmentBillingAccount, String resourceName, Context context) {
        Response<ProfessionalServiceResourceInner> inner =
            this.serviceClient().getWithResponse(enrollmentBillingAccount, resourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ProfessionalServiceResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ProfessionalServiceResource get(String enrollmentBillingAccount, String resourceName) {
        ProfessionalServiceResourceInner inner = this.serviceClient().get(enrollmentBillingAccount, resourceName);
        if (inner != null) {
            return new ProfessionalServiceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ProfessionalServiceResource createOrUpdate(
        String enrollmentBillingAccount, String resourceName, ProfessionalServiceResourceCreation parameters) {
        ProfessionalServiceResourceInner inner =
            this.serviceClient().createOrUpdate(enrollmentBillingAccount, resourceName, parameters);
        if (inner != null) {
            return new ProfessionalServiceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ProfessionalServiceResource createOrUpdate(
        String enrollmentBillingAccount,
        String resourceName,
        ProfessionalServiceResourceCreation parameters,
        Context context) {
        ProfessionalServiceResourceInner inner =
            this.serviceClient().createOrUpdate(enrollmentBillingAccount, resourceName, parameters, context);
        if (inner != null) {
            return new ProfessionalServiceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void deleteByResourceGroup(String enrollmentBillingAccount, String resourceName) {
        this.serviceClient().delete(enrollmentBillingAccount, resourceName);
    }

    public void delete(String enrollmentBillingAccount, String resourceName, Context context) {
        this.serviceClient().delete(enrollmentBillingAccount, resourceName, context);
    }

    private ProfessionalServiceForEnrollmentsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.professionalservice.ProfessionalServiceManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.agrifood.models.MarketplaceOfferDetails;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * DataManagerForAgriculture solution resource.
 */
@Fluent
public final class DataManagerForAgricultureSolutionInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private DataManagerForAgricultureSolutionProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of DataManagerForAgricultureSolutionInner class.
     */
    public DataManagerForAgricultureSolutionInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private DataManagerForAgricultureSolutionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the partnerId property: Solution Partner Id.
     * 
     * @return the partnerId value.
     */
    public String partnerId() {
        return this.innerProperties() == null ? null : this.innerProperties().partnerId();
    }

    /**
     * Get the partnerTenantId property: Solution Partner Tenant Id.
     * 
     * @return the partnerTenantId value.
     */
    public String partnerTenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().partnerTenantId();
    }

    /**
     * Get the dataAccessScopes property: Gets scope of the Data manager For Agriculture data access that's required
     * for processing solution request to partner.
     * Example: For gdd they might need weatherScope and satelliteScope.
     * 
     * @return the dataAccessScopes value.
     */
    public List<String> dataAccessScopes() {
        return this.innerProperties() == null ? null : this.innerProperties().dataAccessScopes();
    }

    /**
     * Get the marketplaceOfferDetails property: The marketplaceOfferDetails property.
     * 
     * @return the marketplaceOfferDetails value.
     */
    public MarketplaceOfferDetails marketplaceOfferDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().marketplaceOfferDetails();
    }

    /**
     * Set the marketplaceOfferDetails property: The marketplaceOfferDetails property.
     * 
     * @param marketplaceOfferDetails the marketplaceOfferDetails value to set.
     * @return the DataManagerForAgricultureSolutionInner object itself.
     */
    public DataManagerForAgricultureSolutionInner
        withMarketplaceOfferDetails(MarketplaceOfferDetails marketplaceOfferDetails) {
        if (this.innerProperties() == null) {
            this.innerProperties = new DataManagerForAgricultureSolutionProperties();
        }
        this.innerProperties().withMarketplaceOfferDetails(marketplaceOfferDetails);
        return this;
    }

    /**
     * Get the openApiSpecsDictionary property: Gets api-version Swagger Document Dictionary to capture all
     * api-versions of swagger exposed by partner to Data Manager For Agriculture.
     * 
     * @return the openApiSpecsDictionary value.
     */
    public Map<String, Object> openApiSpecsDictionary() {
        return this.innerProperties() == null ? null : this.innerProperties().openApiSpecsDictionary();
    }

    /**
     * Get the accessFBApplicationId property: Application id of the multi tenant application to be used by partner to
     * access Data Manager For Agriculture data.
     * 
     * @return the accessFBApplicationId value.
     */
    public String accessFBApplicationId() {
        return this.innerProperties() == null ? null : this.innerProperties().accessFBApplicationId();
    }

    /**
     * Get the saaSApplicationId property: Application id of the SaaS multi tenant application.
     * 
     * @return the saaSApplicationId value.
     */
    public String saaSApplicationId() {
        return this.innerProperties() == null ? null : this.innerProperties().saaSApplicationId();
    }

    /**
     * Get the actionIds property: List of ActionIds needed to make the SaaS multi tenant application access relevant
     * fb data.
     * 
     * @return the actionIds value.
     */
    public List<String> actionIds() {
        return this.innerProperties() == null ? null : this.innerProperties().actionIds();
    }

    /**
     * Get the roleId property: Role Id of the SaaS multi tenant application to access relevant fb data.
     * 
     * @return the roleId value.
     */
    public String roleId() {
        return this.innerProperties() == null ? null : this.innerProperties().roleId();
    }

    /**
     * Get the roleName property: Role Name of the SaaS multi tenant application to access relevant fb data.
     * 
     * @return the roleName value.
     */
    public String roleName() {
        return this.innerProperties() == null ? null : this.innerProperties().roleName();
    }

    /**
     * Get the accessFBApplicationName property: Application name of the multi tenant application to be used by partner
     * to access Data Manager For Agriculture Data.
     * 
     * @return the accessFBApplicationName value.
     */
    public String accessFBApplicationName() {
        return this.innerProperties() == null ? null : this.innerProperties().accessFBApplicationName();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

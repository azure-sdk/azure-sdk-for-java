// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.agrifood.fluent.models.SolutionInner;
import com.azure.resourcemanager.agrifood.models.Solution;

public final class SolutionImpl implements Solution, Solution.Definition, Solution.Update {
    private SolutionInner innerObject;

    private final com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String partnerId() {
        return this.innerModel().partnerId();
    }

    public String saasSubscriptionId() {
        return this.innerModel().saasSubscriptionId();
    }

    public String saasSubscriptionName() {
        return this.innerModel().saasSubscriptionName();
    }

    public String marketplacePublisherId() {
        return this.innerModel().marketplacePublisherId();
    }

    public String planId() {
        return this.innerModel().planId();
    }

    public String roleAssignmentId() {
        return this.innerModel().roleAssignmentId();
    }

    public String offerId() {
        return this.innerModel().offerId();
    }

    public String termId() {
        return this.innerModel().termId();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SolutionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.agrifood.AgriFoodManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String dataManagerForAgricultureResourceName;

    private String solutionId;

    public SolutionImpl withExistingFarmBeat(String resourceGroupName, String dataManagerForAgricultureResourceName) {
        this.resourceGroupName = resourceGroupName;
        this.dataManagerForAgricultureResourceName = dataManagerForAgricultureResourceName;
        return this;
    }

    public Solution create() {
        this.innerObject = serviceManager.serviceClient().getSolutions().createOrUpdateWithResponse(resourceGroupName,
            dataManagerForAgricultureResourceName, solutionId, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public Solution create(Context context) {
        this.innerObject = serviceManager.serviceClient().getSolutions().createOrUpdateWithResponse(resourceGroupName,
            dataManagerForAgricultureResourceName, solutionId, this.innerModel(), context).getValue();
        return this;
    }

    SolutionImpl(String name, com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = new SolutionInner();
        this.serviceManager = serviceManager;
        this.solutionId = name;
    }

    public SolutionImpl update() {
        return this;
    }

    public Solution apply() {
        this.innerObject = serviceManager.serviceClient().getSolutions().createOrUpdateWithResponse(resourceGroupName,
            dataManagerForAgricultureResourceName, solutionId, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public Solution apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getSolutions().createOrUpdateWithResponse(resourceGroupName,
            dataManagerForAgricultureResourceName, solutionId, this.innerModel(), context).getValue();
        return this;
    }

    SolutionImpl(SolutionInner innerObject, com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.dataManagerForAgricultureResourceName = Utils.getValueFromIdByName(innerObject.id(), "farmBeats");
        this.solutionId = Utils.getValueFromIdByName(innerObject.id(), "solutions");
    }

    public Solution refresh() {
        this.innerObject = serviceManager.serviceClient().getSolutions()
            .getWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, solutionId, Context.NONE)
            .getValue();
        return this;
    }

    public Solution refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getSolutions()
            .getWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, solutionId, context).getValue();
        return this;
    }

    public SolutionImpl withSaasSubscriptionId(String saasSubscriptionId) {
        this.innerModel().withSaasSubscriptionId(saasSubscriptionId);
        return this;
    }

    public SolutionImpl withSaasSubscriptionName(String saasSubscriptionName) {
        this.innerModel().withSaasSubscriptionName(saasSubscriptionName);
        return this;
    }

    public SolutionImpl withMarketplacePublisherId(String marketplacePublisherId) {
        this.innerModel().withMarketplacePublisherId(marketplacePublisherId);
        return this;
    }

    public SolutionImpl withPlanId(String planId) {
        this.innerModel().withPlanId(planId);
        return this;
    }

    public SolutionImpl withRoleAssignmentId(String roleAssignmentId) {
        this.innerModel().withRoleAssignmentId(roleAssignmentId);
        return this;
    }

    public SolutionImpl withOfferId(String offerId) {
        this.innerModel().withOfferId(offerId);
        return this;
    }

    public SolutionImpl withTermId(String termId) {
        this.innerModel().withTermId(termId);
        return this;
    }
}

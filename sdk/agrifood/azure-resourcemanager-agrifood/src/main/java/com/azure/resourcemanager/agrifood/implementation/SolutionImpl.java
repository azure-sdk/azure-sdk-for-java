// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.agrifood.fluent.models.SolutionInner;
import com.azure.resourcemanager.agrifood.models.Solution;
import com.azure.resourcemanager.agrifood.models.SolutionInstallationRequest;
import com.azure.resourcemanager.agrifood.models.SolutionProperties;

public final class SolutionImpl implements Solution, Solution.Definition, Solution.Update {
    private SolutionInner innerObject;

    private final com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SolutionProperties properties() {
        return this.innerModel().properties();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SolutionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.agrifood.AgriFoodManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String dataManagerForAgricultureResourceName;

    private String solutionId;

    private SolutionInstallationRequest createRequestBody;

    private SolutionInstallationRequest updateRequestBody;

    public SolutionImpl withExistingFarmBeat(String resourceGroupName, String dataManagerForAgricultureResourceName) {
        this.resourceGroupName = resourceGroupName;
        this.dataManagerForAgricultureResourceName = dataManagerForAgricultureResourceName;
        return this;
    }

    public Solution create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSolutions()
                .createOrUpdateWithResponse(
                    resourceGroupName,
                    dataManagerForAgricultureResourceName,
                    solutionId,
                    createRequestBody,
                    Context.NONE)
                .getValue();
        return this;
    }

    public Solution create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSolutions()
                .createOrUpdateWithResponse(
                    resourceGroupName, dataManagerForAgricultureResourceName, solutionId, createRequestBody, context)
                .getValue();
        return this;
    }

    SolutionImpl(String name, com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = new SolutionInner();
        this.serviceManager = serviceManager;
        this.solutionId = name;
        this.createRequestBody = new SolutionInstallationRequest();
    }

    public SolutionImpl update() {
        this.updateRequestBody = new SolutionInstallationRequest();
        return this;
    }

    public Solution apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSolutions()
                .createOrUpdateWithResponse(
                    resourceGroupName,
                    dataManagerForAgricultureResourceName,
                    solutionId,
                    updateRequestBody,
                    Context.NONE)
                .getValue();
        return this;
    }

    public Solution apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSolutions()
                .createOrUpdateWithResponse(
                    resourceGroupName, dataManagerForAgricultureResourceName, solutionId, updateRequestBody, context)
                .getValue();
        return this;
    }

    SolutionImpl(SolutionInner innerObject, com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.dataManagerForAgricultureResourceName = Utils.getValueFromIdByName(innerObject.id(), "farmBeats");
        this.solutionId = Utils.getValueFromIdByName(innerObject.id(), "solutions");
    }

    public Solution refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSolutions()
                .getWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, solutionId, Context.NONE)
                .getValue();
        return this;
    }

    public Solution refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSolutions()
                .getWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, solutionId, context)
                .getValue();
        return this;
    }

    public SolutionImpl withProperties(SolutionProperties properties) {
        if (isInCreateMode()) {
            this.createRequestBody.withProperties(properties);
            return this;
        } else {
            this.updateRequestBody.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

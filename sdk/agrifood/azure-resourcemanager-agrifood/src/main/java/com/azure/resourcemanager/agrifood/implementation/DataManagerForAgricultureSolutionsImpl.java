// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.agrifood.fluent.DataManagerForAgricultureSolutionsClient;
import com.azure.resourcemanager.agrifood.fluent.models.DataManagerForAgricultureSolutionInner;
import com.azure.resourcemanager.agrifood.models.DataManagerForAgricultureSolution;
import com.azure.resourcemanager.agrifood.models.DataManagerForAgricultureSolutions;
import java.util.List;

public final class DataManagerForAgricultureSolutionsImpl implements DataManagerForAgricultureSolutions {
    private static final ClientLogger LOGGER = new ClientLogger(DataManagerForAgricultureSolutionsImpl.class);

    private final DataManagerForAgricultureSolutionsClient innerClient;

    private final com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager;

    public DataManagerForAgricultureSolutionsImpl(DataManagerForAgricultureSolutionsClient innerClient,
        com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DataManagerForAgricultureSolution> listByTenant() {
        PagedIterable<DataManagerForAgricultureSolutionInner> inner = this.serviceClient().listByTenant();
        return Utils.mapPage(inner, inner1 -> new DataManagerForAgricultureSolutionImpl(inner1, this.manager()));
    }

    public PagedIterable<DataManagerForAgricultureSolution> listByTenant(List<String> farmBeatsSolutionIds,
        List<String> farmBeatsSolutionNames, Integer maxPageSize, Context context) {
        PagedIterable<DataManagerForAgricultureSolutionInner> inner
            = this.serviceClient().listByTenant(farmBeatsSolutionIds, farmBeatsSolutionNames, maxPageSize, context);
        return Utils.mapPage(inner, inner1 -> new DataManagerForAgricultureSolutionImpl(inner1, this.manager()));
    }

    public Response<DataManagerForAgricultureSolution> getWithResponse(String dataManagerForAgricultureSolutionId,
        Context context) {
        Response<DataManagerForAgricultureSolutionInner> inner
            = this.serviceClient().getWithResponse(dataManagerForAgricultureSolutionId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DataManagerForAgricultureSolutionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DataManagerForAgricultureSolution get(String dataManagerForAgricultureSolutionId) {
        DataManagerForAgricultureSolutionInner inner = this.serviceClient().get(dataManagerForAgricultureSolutionId);
        if (inner != null) {
            return new DataManagerForAgricultureSolutionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DataManagerForAgricultureSolutionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.agrifood.AgriFoodManager manager() {
        return this.serviceManager;
    }
}

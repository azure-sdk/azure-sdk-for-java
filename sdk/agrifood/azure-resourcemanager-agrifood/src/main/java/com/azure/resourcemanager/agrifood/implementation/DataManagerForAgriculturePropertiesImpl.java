// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.implementation;

import com.azure.resourcemanager.agrifood.fluent.models.DataManagerForAgriculturePropertiesInner;
import com.azure.resourcemanager.agrifood.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.agrifood.fluent.models.SensorIntegrationInner;
import com.azure.resourcemanager.agrifood.models.DataManagerForAgricultureProperties;
import com.azure.resourcemanager.agrifood.models.PrivateEndpointConnection;
import com.azure.resourcemanager.agrifood.models.ProvisioningState;
import com.azure.resourcemanager.agrifood.models.PublicNetworkAccess;
import com.azure.resourcemanager.agrifood.models.SensorIntegration;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class DataManagerForAgriculturePropertiesImpl implements DataManagerForAgricultureProperties {
    private DataManagerForAgriculturePropertiesInner innerObject;

    private final com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager;

    DataManagerForAgriculturePropertiesImpl(
        DataManagerForAgriculturePropertiesInner innerObject,
        com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String instanceUri() {
        return this.innerModel().instanceUri();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public SensorIntegration sensorIntegration() {
        SensorIntegrationInner inner = this.innerModel().sensorIntegration();
        if (inner != null) {
            return new SensorIntegrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PublicNetworkAccess publicNetworkAccess() {
        return this.innerModel().publicNetworkAccess();
    }

    public List<PrivateEndpointConnection> privateEndpointConnections() {
        List<PrivateEndpointConnectionInner> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new PrivateEndpointConnectionImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public DataManagerForAgriculturePropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.agrifood.AgriFoodManager manager() {
        return this.serviceManager;
    }
}

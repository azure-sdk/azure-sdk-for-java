// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Solution resource.
 */
@Fluent
public final class SolutionInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private SolutionProperties innerProperties;

    /*
     * The ETag value to implement optimistic concurrency.
     */
    @JsonProperty(value = "eTag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of SolutionInner class.
     */
    public SolutionInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private SolutionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the etag property: The ETag value to implement optimistic concurrency.
     * 
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the partnerId property: Partner Id of the Solution.
     * 
     * @return the partnerId value.
     */
    public String partnerId() {
        return this.innerProperties() == null ? null : this.innerProperties().partnerId();
    }

    /**
     * Get the saasSubscriptionId property: SaaS subscriptionId of the installed SaaS application.
     * 
     * @return the saasSubscriptionId value.
     */
    public String saasSubscriptionId() {
        return this.innerProperties() == null ? null : this.innerProperties().saasSubscriptionId();
    }

    /**
     * Set the saasSubscriptionId property: SaaS subscriptionId of the installed SaaS application.
     * 
     * @param saasSubscriptionId the saasSubscriptionId value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withSaasSubscriptionId(String saasSubscriptionId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withSaasSubscriptionId(saasSubscriptionId);
        return this;
    }

    /**
     * Get the saasSubscriptionName property: SaaS subscription name of the installed SaaS application.
     * 
     * @return the saasSubscriptionName value.
     */
    public String saasSubscriptionName() {
        return this.innerProperties() == null ? null : this.innerProperties().saasSubscriptionName();
    }

    /**
     * Set the saasSubscriptionName property: SaaS subscription name of the installed SaaS application.
     * 
     * @param saasSubscriptionName the saasSubscriptionName value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withSaasSubscriptionName(String saasSubscriptionName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withSaasSubscriptionName(saasSubscriptionName);
        return this;
    }

    /**
     * Get the marketplacePublisherId property: SaaS application Marketplace Publisher Id.
     * 
     * @return the marketplacePublisherId value.
     */
    public String marketplacePublisherId() {
        return this.innerProperties() == null ? null : this.innerProperties().marketplacePublisherId();
    }

    /**
     * Set the marketplacePublisherId property: SaaS application Marketplace Publisher Id.
     * 
     * @param marketplacePublisherId the marketplacePublisherId value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withMarketplacePublisherId(String marketplacePublisherId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withMarketplacePublisherId(marketplacePublisherId);
        return this;
    }

    /**
     * Get the planId property: SaaS application Plan Id.
     * 
     * @return the planId value.
     */
    public String planId() {
        return this.innerProperties() == null ? null : this.innerProperties().planId();
    }

    /**
     * Set the planId property: SaaS application Plan Id.
     * 
     * @param planId the planId value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withPlanId(String planId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withPlanId(planId);
        return this;
    }

    /**
     * Get the roleAssignmentId property: Role Assignment Id.
     * 
     * @return the roleAssignmentId value.
     */
    public String roleAssignmentId() {
        return this.innerProperties() == null ? null : this.innerProperties().roleAssignmentId();
    }

    /**
     * Set the roleAssignmentId property: Role Assignment Id.
     * 
     * @param roleAssignmentId the roleAssignmentId value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withRoleAssignmentId(String roleAssignmentId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withRoleAssignmentId(roleAssignmentId);
        return this;
    }

    /**
     * Get the offerId property: SaaS application Offer Id.
     * 
     * @return the offerId value.
     */
    public String offerId() {
        return this.innerProperties() == null ? null : this.innerProperties().offerId();
    }

    /**
     * Set the offerId property: SaaS application Offer Id.
     * 
     * @param offerId the offerId value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withOfferId(String offerId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withOfferId(offerId);
        return this;
    }

    /**
     * Get the termId property: SaaS application Term Id.
     * 
     * @return the termId value.
     */
    public String termId() {
        return this.innerProperties() == null ? null : this.innerProperties().termId();
    }

    /**
     * Set the termId property: SaaS application Term Id.
     * 
     * @param termId the termId value to set.
     * @return the SolutionInner object itself.
     */
    public SolutionInner withTermId(String termId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SolutionProperties();
        }
        this.innerProperties().withTermId(termId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

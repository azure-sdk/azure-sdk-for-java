// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.agrifood.fluent.models.DataConnectorInner;

/**
 * An instance of this class provides access to all the operations defined in DataConnectorsClient.
 */
public interface DataConnectorsClient {
    /**
     * Lists the Data Connector Credentials for MADMA instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnector list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DataConnectorInner> listByDataManagerForAgriculture(String resourceGroupName,
        String dataManagerForAgricultureResourceName);

    /**
     * Lists the Data Connector Credentials for MADMA instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param maxPageSize Maximum number of items needed (inclusive).
     * Minimum = 10, Maximum = 1000, Default value = 50.
     * @param skipToken Continuation token for getting next set of results.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a DataConnector list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DataConnectorInner> listByDataManagerForAgriculture(String resourceGroupName,
        String dataManagerForAgricultureResourceName, Integer maxPageSize, String skipToken, Context context);

    /**
     * Get specific Data Connector resource by DataConnectorName.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param dataConnectorName Connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specific Data Connector resource by DataConnectorName along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DataConnectorInner> getWithResponse(String resourceGroupName, String dataManagerForAgricultureResourceName,
        String dataConnectorName, Context context);

    /**
     * Get specific Data Connector resource by DataConnectorName.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param dataConnectorName Connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specific Data Connector resource by DataConnectorName.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DataConnectorInner get(String resourceGroupName, String dataManagerForAgricultureResourceName,
        String dataConnectorName);

    /**
     * Create or update Data Connector For MADMA resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param dataConnectorName Connector name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dataConnector Model along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DataConnectorInner> createOrUpdateWithResponse(String resourceGroupName,
        String dataManagerForAgricultureResourceName, String dataConnectorName, DataConnectorInner resource,
        Context context);

    /**
     * Create or update Data Connector For MADMA resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param dataConnectorName Connector name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return dataConnector Model.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DataConnectorInner createOrUpdate(String resourceGroupName, String dataManagerForAgricultureResourceName,
        String dataConnectorName, DataConnectorInner resource);

    /**
     * Delete a Data Connectors with given dataConnector name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param dataConnectorName Connector name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String dataManagerForAgricultureResourceName,
        String dataConnectorName, Context context);

    /**
     * Delete a Data Connectors with given dataConnector name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
     * @param dataConnectorName Connector name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String dataManagerForAgricultureResourceName, String dataConnectorName);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Security profile for the container service cluster. */
@Fluent
public final class ManagedClusterSecurityProfile {
    /*
     * Azure Defender settings for the security profile.
     */
    @JsonProperty(value = "azureDefender")
    private ManagedClusterSecurityProfileAzureDefender azureDefender;

    /*
     * Azure Key Vault [key management
     * service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/)
     * settings for the security profile.
     */
    @JsonProperty(value = "azureKeyVaultKms")
    private AzureKeyVaultKms azureKeyVaultKms;

    /*
     * [Workload
     * Identity](https://azure.github.io/azure-workload-identity/docs/)
     * settings for the security profile.
     */
    @JsonProperty(value = "workloadIdentity")
    private ManagedClusterSecurityProfileWorkloadIdentity workloadIdentity;

    /**
     * Get the azureDefender property: Azure Defender settings for the security profile.
     *
     * @return the azureDefender value.
     */
    public ManagedClusterSecurityProfileAzureDefender azureDefender() {
        return this.azureDefender;
    }

    /**
     * Set the azureDefender property: Azure Defender settings for the security profile.
     *
     * @param azureDefender the azureDefender value to set.
     * @return the ManagedClusterSecurityProfile object itself.
     */
    public ManagedClusterSecurityProfile withAzureDefender(ManagedClusterSecurityProfileAzureDefender azureDefender) {
        this.azureDefender = azureDefender;
        return this;
    }

    /**
     * Get the azureKeyVaultKms property: Azure Key Vault [key management
     * service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
     *
     * @return the azureKeyVaultKms value.
     */
    public AzureKeyVaultKms azureKeyVaultKms() {
        return this.azureKeyVaultKms;
    }

    /**
     * Set the azureKeyVaultKms property: Azure Key Vault [key management
     * service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
     *
     * @param azureKeyVaultKms the azureKeyVaultKms value to set.
     * @return the ManagedClusterSecurityProfile object itself.
     */
    public ManagedClusterSecurityProfile withAzureKeyVaultKms(AzureKeyVaultKms azureKeyVaultKms) {
        this.azureKeyVaultKms = azureKeyVaultKms;
        return this;
    }

    /**
     * Get the workloadIdentity property: [Workload Identity](https://azure.github.io/azure-workload-identity/docs/)
     * settings for the security profile.
     *
     * @return the workloadIdentity value.
     */
    public ManagedClusterSecurityProfileWorkloadIdentity workloadIdentity() {
        return this.workloadIdentity;
    }

    /**
     * Set the workloadIdentity property: [Workload Identity](https://azure.github.io/azure-workload-identity/docs/)
     * settings for the security profile.
     *
     * @param workloadIdentity the workloadIdentity value to set.
     * @return the ManagedClusterSecurityProfile object itself.
     */
    public ManagedClusterSecurityProfile withWorkloadIdentity(
        ManagedClusterSecurityProfileWorkloadIdentity workloadIdentity) {
        this.workloadIdentity = workloadIdentity;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (azureDefender() != null) {
            azureDefender().validate();
        }
        if (azureKeyVaultKms() != null) {
            azureKeyVaultKms().validate();
        }
        if (workloadIdentity() != null) {
            workloadIdentity().validate();
        }
    }
}

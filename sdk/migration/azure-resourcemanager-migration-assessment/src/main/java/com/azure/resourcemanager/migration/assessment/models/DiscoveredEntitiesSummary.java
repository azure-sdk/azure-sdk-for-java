// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Discovered entities summary.
 */
@Immutable
public final class DiscoveredEntitiesSummary implements JsonSerializable<DiscoveredEntitiesSummary> {
    /*
     * Number of web servers
     */
    private Integer numberOfServers;

    /*
     * Number of web apps
     */
    private Integer numberOfWebApps;

    /*
     * Number of machines
     */
    private Integer numberOfMachines;

    /*
     * Web server summary data
     */
    private Map<String, Integer> webServerSummary;

    /*
     * Web app summary data
     */
    private Map<String, Integer> webAppSummary;

    /**
     * Creates an instance of DiscoveredEntitiesSummary class.
     */
    public DiscoveredEntitiesSummary() {
    }

    /**
     * Get the numberOfServers property: Number of web servers.
     * 
     * @return the numberOfServers value.
     */
    public Integer numberOfServers() {
        return this.numberOfServers;
    }

    /**
     * Get the numberOfWebApps property: Number of web apps.
     * 
     * @return the numberOfWebApps value.
     */
    public Integer numberOfWebApps() {
        return this.numberOfWebApps;
    }

    /**
     * Get the numberOfMachines property: Number of machines.
     * 
     * @return the numberOfMachines value.
     */
    public Integer numberOfMachines() {
        return this.numberOfMachines;
    }

    /**
     * Get the webServerSummary property: Web server summary data.
     * 
     * @return the webServerSummary value.
     */
    public Map<String, Integer> webServerSummary() {
        return this.webServerSummary;
    }

    /**
     * Get the webAppSummary property: Web app summary data.
     * 
     * @return the webAppSummary value.
     */
    public Map<String, Integer> webAppSummary() {
        return this.webAppSummary;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DiscoveredEntitiesSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DiscoveredEntitiesSummary if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the DiscoveredEntitiesSummary.
     */
    public static DiscoveredEntitiesSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            DiscoveredEntitiesSummary deserializedDiscoveredEntitiesSummary = new DiscoveredEntitiesSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("numberOfServers".equals(fieldName)) {
                    deserializedDiscoveredEntitiesSummary.numberOfServers = reader.getNullable(JsonReader::getInt);
                } else if ("numberOfWebApps".equals(fieldName)) {
                    deserializedDiscoveredEntitiesSummary.numberOfWebApps = reader.getNullable(JsonReader::getInt);
                } else if ("numberOfMachines".equals(fieldName)) {
                    deserializedDiscoveredEntitiesSummary.numberOfMachines = reader.getNullable(JsonReader::getInt);
                } else if ("webServerSummary".equals(fieldName)) {
                    Map<String, Integer> webServerSummary = reader.readMap(reader1 -> reader1.getInt());
                    deserializedDiscoveredEntitiesSummary.webServerSummary = webServerSummary;
                } else if ("webAppSummary".equals(fieldName)) {
                    Map<String, Integer> webAppSummary = reader.readMap(reader1 -> reader1.getInt());
                    deserializedDiscoveredEntitiesSummary.webAppSummary = webAppSummary;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedDiscoveredEntitiesSummary;
        });
    }
}

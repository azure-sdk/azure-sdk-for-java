// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * Web app Assessment V2 summary properties.
 */
@Immutable
public final class WebAppAssessmentV2SummaryProperties
    implements JsonSerializable<WebAppAssessmentV2SummaryProperties> {
    /*
     * Gets or sets the discovered entities summary.
     */
    private Map<String, DiscoveredEntitiesSummary> assessmentSummary;

    /*
     * Gets the target specific summary.
     */
    private Map<String, TargetSpecificSummary> targetSpecificSummary;

    /**
     * Creates an instance of WebAppAssessmentV2SummaryProperties class.
     */
    public WebAppAssessmentV2SummaryProperties() {
    }

    /**
     * Get the assessmentSummary property: Gets or sets the discovered entities summary.
     * 
     * @return the assessmentSummary value.
     */
    public Map<String, DiscoveredEntitiesSummary> assessmentSummary() {
        return this.assessmentSummary;
    }

    /**
     * Get the targetSpecificSummary property: Gets the target specific summary.
     * 
     * @return the targetSpecificSummary value.
     */
    public Map<String, TargetSpecificSummary> targetSpecificSummary() {
        return this.targetSpecificSummary;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (assessmentSummary() != null) {
            assessmentSummary().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
        if (targetSpecificSummary() != null) {
            targetSpecificSummary().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebAppAssessmentV2SummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebAppAssessmentV2SummaryProperties if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WebAppAssessmentV2SummaryProperties.
     */
    public static WebAppAssessmentV2SummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebAppAssessmentV2SummaryProperties deserializedWebAppAssessmentV2SummaryProperties
                = new WebAppAssessmentV2SummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("assessmentSummary".equals(fieldName)) {
                    Map<String, DiscoveredEntitiesSummary> assessmentSummary
                        = reader.readMap(reader1 -> DiscoveredEntitiesSummary.fromJson(reader1));
                    deserializedWebAppAssessmentV2SummaryProperties.assessmentSummary = assessmentSummary;
                } else if ("targetSpecificSummary".equals(fieldName)) {
                    Map<String, TargetSpecificSummary> targetSpecificSummary
                        = reader.readMap(reader1 -> TargetSpecificSummary.fromJson(reader1));
                    deserializedWebAppAssessmentV2SummaryProperties.targetSpecificSummary = targetSpecificSummary;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebAppAssessmentV2SummaryProperties;
        });
    }
}

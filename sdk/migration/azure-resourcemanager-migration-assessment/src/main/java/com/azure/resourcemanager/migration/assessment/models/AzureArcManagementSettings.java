// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Arc Management settings.
 */
@Fluent
public final class AzureArcManagementSettings implements JsonSerializable<AzureArcManagementSettings> {
    /*
     * Gets the azure arc monitoring settings.
     */
    private AzureArcMonitoringSettings monitoringSettings;

    /**
     * Creates an instance of AzureArcManagementSettings class.
     */
    public AzureArcManagementSettings() {
    }

    /**
     * Get the monitoringSettings property: Gets the azure arc monitoring settings.
     * 
     * @return the monitoringSettings value.
     */
    public AzureArcMonitoringSettings monitoringSettings() {
        return this.monitoringSettings;
    }

    /**
     * Set the monitoringSettings property: Gets the azure arc monitoring settings.
     * 
     * @param monitoringSettings the monitoringSettings value to set.
     * @return the AzureArcManagementSettings object itself.
     */
    public AzureArcManagementSettings withMonitoringSettings(AzureArcMonitoringSettings monitoringSettings) {
        this.monitoringSettings = monitoringSettings;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (monitoringSettings() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property monitoringSettings in model AzureArcManagementSettings"));
        } else {
            monitoringSettings().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AzureArcManagementSettings.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("monitoringSettings", this.monitoringSettings);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureArcManagementSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureArcManagementSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureArcManagementSettings.
     */
    public static AzureArcManagementSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureArcManagementSettings deserializedAzureArcManagementSettings = new AzureArcManagementSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("monitoringSettings".equals(fieldName)) {
                    deserializedAzureArcManagementSettings.monitoringSettings
                        = AzureArcMonitoringSettings.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureArcManagementSettings;
        });
    }
}

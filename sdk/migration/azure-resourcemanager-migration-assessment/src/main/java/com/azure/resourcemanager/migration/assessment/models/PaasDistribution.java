// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Shows the distribution of platforms.
 */
@Immutable
public final class PaasDistribution implements JsonSerializable<PaasDistribution> {
    /*
     * Number of SQL Server machines.
     */
    private Integer sqlServers;

    /*
     * Number of IIS Web servers.
     */
    private Integer iisWebServers;

    /*
     * Distribution of webapps for each target type.
     */
    private List<PaasDistributionWebAppDistributionItem> webAppDistribution;

    /**
     * Creates an instance of PaasDistribution class.
     */
    public PaasDistribution() {
    }

    /**
     * Get the sqlServers property: Number of SQL Server machines.
     * 
     * @return the sqlServers value.
     */
    public Integer sqlServers() {
        return this.sqlServers;
    }

    /**
     * Get the iisWebServers property: Number of IIS Web servers.
     * 
     * @return the iisWebServers value.
     */
    public Integer iisWebServers() {
        return this.iisWebServers;
    }

    /**
     * Get the webAppDistribution property: Distribution of webapps for each target type.
     * 
     * @return the webAppDistribution value.
     */
    public List<PaasDistributionWebAppDistributionItem> webAppDistribution() {
        return this.webAppDistribution;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (webAppDistribution() != null) {
            webAppDistribution().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PaasDistribution from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PaasDistribution if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the PaasDistribution.
     */
    public static PaasDistribution fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PaasDistribution deserializedPaasDistribution = new PaasDistribution();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sqlServers".equals(fieldName)) {
                    deserializedPaasDistribution.sqlServers = reader.getNullable(JsonReader::getInt);
                } else if ("iisWebServers".equals(fieldName)) {
                    deserializedPaasDistribution.iisWebServers = reader.getNullable(JsonReader::getInt);
                } else if ("webAppDistribution".equals(fieldName)) {
                    List<PaasDistributionWebAppDistributionItem> webAppDistribution
                        = reader.readArray(reader1 -> PaasDistributionWebAppDistributionItem.fromJson(reader1));
                    deserializedPaasDistribution.webAppDistribution = webAppDistribution;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPaasDistribution;
        });
    }
}

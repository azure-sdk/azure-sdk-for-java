// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Network settings.
 */
@Fluent
public final class NetworkSettings implements JsonSerializable<NetworkSettings> {
    /*
     * Network hardware and software cost percentage.
     */
    private float hardwareSoftwareCostPercentage;

    /*
     * Network maintenance cost percentage.
     */
    private float maintenanceCostPercentage;

    /**
     * Creates an instance of NetworkSettings class.
     */
    public NetworkSettings() {
    }

    /**
     * Get the hardwareSoftwareCostPercentage property: Network hardware and software cost percentage.
     * 
     * @return the hardwareSoftwareCostPercentage value.
     */
    public float hardwareSoftwareCostPercentage() {
        return this.hardwareSoftwareCostPercentage;
    }

    /**
     * Set the hardwareSoftwareCostPercentage property: Network hardware and software cost percentage.
     * 
     * @param hardwareSoftwareCostPercentage the hardwareSoftwareCostPercentage value to set.
     * @return the NetworkSettings object itself.
     */
    public NetworkSettings withHardwareSoftwareCostPercentage(float hardwareSoftwareCostPercentage) {
        this.hardwareSoftwareCostPercentage = hardwareSoftwareCostPercentage;
        return this;
    }

    /**
     * Get the maintenanceCostPercentage property: Network maintenance cost percentage.
     * 
     * @return the maintenanceCostPercentage value.
     */
    public float maintenanceCostPercentage() {
        return this.maintenanceCostPercentage;
    }

    /**
     * Set the maintenanceCostPercentage property: Network maintenance cost percentage.
     * 
     * @param maintenanceCostPercentage the maintenanceCostPercentage value to set.
     * @return the NetworkSettings object itself.
     */
    public NetworkSettings withMaintenanceCostPercentage(float maintenanceCostPercentage) {
        this.maintenanceCostPercentage = maintenanceCostPercentage;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeFloatField("hardwareSoftwareCostPercentage", this.hardwareSoftwareCostPercentage);
        jsonWriter.writeFloatField("maintenanceCostPercentage", this.maintenanceCostPercentage);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of NetworkSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of NetworkSettings if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the NetworkSettings.
     */
    public static NetworkSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            NetworkSettings deserializedNetworkSettings = new NetworkSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("hardwareSoftwareCostPercentage".equals(fieldName)) {
                    deserializedNetworkSettings.hardwareSoftwareCostPercentage = reader.getFloat();
                } else if ("maintenanceCostPercentage".equals(fieldName)) {
                    deserializedNetworkSettings.maintenanceCostPercentage = reader.getFloat();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedNetworkSettings;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Data model of AKS Assessment Settings.
 */
@Fluent
public final class AksAssessmentSettings implements JsonSerializable<AksAssessmentSettings> {
    /*
     * Azure Location or Azure region where to which the machines will be migrated.
     */
    private String azureLocation;

    /*
     * Currency in which prices should be reported.
     */
    private AzureCurrency currency;

    /*
     * Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     */
    private Float scalingFactor;

    /*
     * Custom discount percentage.
     */
    private Float discountPercentage;

    /*
     * Assessment sizing criterion.
     */
    private AssessmentSizingCriterion sizingCriterion;

    /*
     * Gets or sets the performance data.
     */
    private PerformanceData performanceData;

    /*
     * Gets or sets the savings settings.
     */
    private SavingsSettings savingsSettings;

    /*
     * Gets or sets the billing settings.
     */
    private BillingSettings billingSettings;

    /*
     * Gets or sets user configurable setting to display the environment type.
     */
    private EnvironmentType environmentType;

    /*
     * Gets or sets azure VM category.
     */
    private AzureVmCategory category;

    /*
     * Gets or sets consolidation type.
     */
    private ConsolidationType consolidation;

    /*
     * Gets or sets pricing tier.
     */
    private PricingTier pricingTier;

    /**
     * Creates an instance of AksAssessmentSettings class.
     */
    public AksAssessmentSettings() {
    }

    /**
     * Get the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @return the azureLocation value.
     */
    public String azureLocation() {
        return this.azureLocation;
    }

    /**
     * Set the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @param azureLocation the azureLocation value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withAzureLocation(String azureLocation) {
        this.azureLocation = azureLocation;
        return this;
    }

    /**
     * Get the currency property: Currency in which prices should be reported.
     * 
     * @return the currency value.
     */
    public AzureCurrency currency() {
        return this.currency;
    }

    /**
     * Set the currency property: Currency in which prices should be reported.
     * 
     * @param currency the currency value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withCurrency(AzureCurrency currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @return the scalingFactor value.
     */
    public Float scalingFactor() {
        return this.scalingFactor;
    }

    /**
     * Set the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @param scalingFactor the scalingFactor value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withScalingFactor(Float scalingFactor) {
        this.scalingFactor = scalingFactor;
        return this;
    }

    /**
     * Get the discountPercentage property: Custom discount percentage.
     * 
     * @return the discountPercentage value.
     */
    public Float discountPercentage() {
        return this.discountPercentage;
    }

    /**
     * Set the discountPercentage property: Custom discount percentage.
     * 
     * @param discountPercentage the discountPercentage value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withDiscountPercentage(Float discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }

    /**
     * Get the sizingCriterion property: Assessment sizing criterion.
     * 
     * @return the sizingCriterion value.
     */
    public AssessmentSizingCriterion sizingCriterion() {
        return this.sizingCriterion;
    }

    /**
     * Set the sizingCriterion property: Assessment sizing criterion.
     * 
     * @param sizingCriterion the sizingCriterion value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withSizingCriterion(AssessmentSizingCriterion sizingCriterion) {
        this.sizingCriterion = sizingCriterion;
        return this;
    }

    /**
     * Get the performanceData property: Gets or sets the performance data.
     * 
     * @return the performanceData value.
     */
    public PerformanceData performanceData() {
        return this.performanceData;
    }

    /**
     * Set the performanceData property: Gets or sets the performance data.
     * 
     * @param performanceData the performanceData value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withPerformanceData(PerformanceData performanceData) {
        this.performanceData = performanceData;
        return this;
    }

    /**
     * Get the savingsSettings property: Gets or sets the savings settings.
     * 
     * @return the savingsSettings value.
     */
    public SavingsSettings savingsSettings() {
        return this.savingsSettings;
    }

    /**
     * Set the savingsSettings property: Gets or sets the savings settings.
     * 
     * @param savingsSettings the savingsSettings value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withSavingsSettings(SavingsSettings savingsSettings) {
        this.savingsSettings = savingsSettings;
        return this;
    }

    /**
     * Get the billingSettings property: Gets or sets the billing settings.
     * 
     * @return the billingSettings value.
     */
    public BillingSettings billingSettings() {
        return this.billingSettings;
    }

    /**
     * Set the billingSettings property: Gets or sets the billing settings.
     * 
     * @param billingSettings the billingSettings value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withBillingSettings(BillingSettings billingSettings) {
        this.billingSettings = billingSettings;
        return this;
    }

    /**
     * Get the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @return the environmentType value.
     */
    public EnvironmentType environmentType() {
        return this.environmentType;
    }

    /**
     * Set the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @param environmentType the environmentType value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withEnvironmentType(EnvironmentType environmentType) {
        this.environmentType = environmentType;
        return this;
    }

    /**
     * Get the category property: Gets or sets azure VM category.
     * 
     * @return the category value.
     */
    public AzureVmCategory category() {
        return this.category;
    }

    /**
     * Set the category property: Gets or sets azure VM category.
     * 
     * @param category the category value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withCategory(AzureVmCategory category) {
        this.category = category;
        return this;
    }

    /**
     * Get the consolidation property: Gets or sets consolidation type.
     * 
     * @return the consolidation value.
     */
    public ConsolidationType consolidation() {
        return this.consolidation;
    }

    /**
     * Set the consolidation property: Gets or sets consolidation type.
     * 
     * @param consolidation the consolidation value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withConsolidation(ConsolidationType consolidation) {
        this.consolidation = consolidation;
        return this;
    }

    /**
     * Get the pricingTier property: Gets or sets pricing tier.
     * 
     * @return the pricingTier value.
     */
    public PricingTier pricingTier() {
        return this.pricingTier;
    }

    /**
     * Set the pricingTier property: Gets or sets pricing tier.
     * 
     * @param pricingTier the pricingTier value to set.
     * @return the AksAssessmentSettings object itself.
     */
    public AksAssessmentSettings withPricingTier(PricingTier pricingTier) {
        this.pricingTier = pricingTier;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (performanceData() != null) {
            performanceData().validate();
        }
        if (savingsSettings() != null) {
            savingsSettings().validate();
        }
        if (billingSettings() != null) {
            billingSettings().validate();
        }
        if (category() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property category in model AksAssessmentSettings"));
        }
        if (consolidation() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property consolidation in model AksAssessmentSettings"));
        }
        if (pricingTier() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property pricingTier in model AksAssessmentSettings"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AksAssessmentSettings.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("category", this.category == null ? null : this.category.toString());
        jsonWriter.writeStringField("consolidation", this.consolidation == null ? null : this.consolidation.toString());
        jsonWriter.writeStringField("pricingTier", this.pricingTier == null ? null : this.pricingTier.toString());
        jsonWriter.writeStringField("azureLocation", this.azureLocation);
        jsonWriter.writeStringField("currency", this.currency == null ? null : this.currency.toString());
        jsonWriter.writeNumberField("scalingFactor", this.scalingFactor);
        jsonWriter.writeNumberField("discountPercentage", this.discountPercentage);
        jsonWriter.writeStringField("sizingCriterion",
            this.sizingCriterion == null ? null : this.sizingCriterion.toString());
        jsonWriter.writeJsonField("performanceData", this.performanceData);
        jsonWriter.writeJsonField("savingsSettings", this.savingsSettings);
        jsonWriter.writeJsonField("billingSettings", this.billingSettings);
        jsonWriter.writeStringField("environmentType",
            this.environmentType == null ? null : this.environmentType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AksAssessmentSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AksAssessmentSettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AksAssessmentSettings.
     */
    public static AksAssessmentSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AksAssessmentSettings deserializedAksAssessmentSettings = new AksAssessmentSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("category".equals(fieldName)) {
                    deserializedAksAssessmentSettings.category = AzureVmCategory.fromString(reader.getString());
                } else if ("consolidation".equals(fieldName)) {
                    deserializedAksAssessmentSettings.consolidation = ConsolidationType.fromString(reader.getString());
                } else if ("pricingTier".equals(fieldName)) {
                    deserializedAksAssessmentSettings.pricingTier = PricingTier.fromString(reader.getString());
                } else if ("azureLocation".equals(fieldName)) {
                    deserializedAksAssessmentSettings.azureLocation = reader.getString();
                } else if ("currency".equals(fieldName)) {
                    deserializedAksAssessmentSettings.currency = AzureCurrency.fromString(reader.getString());
                } else if ("scalingFactor".equals(fieldName)) {
                    deserializedAksAssessmentSettings.scalingFactor = reader.getNullable(JsonReader::getFloat);
                } else if ("discountPercentage".equals(fieldName)) {
                    deserializedAksAssessmentSettings.discountPercentage = reader.getNullable(JsonReader::getFloat);
                } else if ("sizingCriterion".equals(fieldName)) {
                    deserializedAksAssessmentSettings.sizingCriterion
                        = AssessmentSizingCriterion.fromString(reader.getString());
                } else if ("performanceData".equals(fieldName)) {
                    deserializedAksAssessmentSettings.performanceData = PerformanceData.fromJson(reader);
                } else if ("savingsSettings".equals(fieldName)) {
                    deserializedAksAssessmentSettings.savingsSettings = SavingsSettings.fromJson(reader);
                } else if ("billingSettings".equals(fieldName)) {
                    deserializedAksAssessmentSettings.billingSettings = BillingSettings.fromJson(reader);
                } else if ("environmentType".equals(fieldName)) {
                    deserializedAksAssessmentSettings.environmentType = EnvironmentType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAksAssessmentSettings;
        });
    }
}

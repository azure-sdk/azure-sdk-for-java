// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Overview summary properties class.
 */
@Immutable
public final class OverviewSummaryProperties implements JsonSerializable<OverviewSummaryProperties> {
    /*
     * The total Azure cost..
     */
    private Float totalAzureCost;

    /*
     * The total Azure IaaS cost.
     */
    private Float totalAzureIaasCost;

    /*
     * The total Azure PaaS cost.
     */
    private Float totalAzurePaasCost;

    /*
     * The total Avs cost.
     */
    private Float totalAzureAvsCost;

    /*
     * The windows ahub saving.
     */
    private Float windowsAhubSavings;

    /*
     * The linux ahub saving.
     */
    private Float linuxAhubSavings;

    /*
     * The sql ahub saving.
     */
    private Float sqlAhubSavings;

    /*
     * The total on premises cost.
     */
    private Float totalOnPremisesCost;

    /*
     * ESU Savings 4 Years.
     */
    private Float esuSavingsFor4Years;

    /*
     * The management cost saving.
     */
    private Float managementCostSavings;

    /*
     * The security cost saving.
     */
    private Float securityCostSavings;

    /*
     * Shows the year-on-year cost overall.
     */
    private YearOnYearEstimates yearOnYearEstimates;

    /*
     * Shows the discovered servers by virtualization platform.
     */
    private ServersDiscovered serversDiscovered;

    /*
     * The SQL on premises utilization insights.
     */
    private UtilizationData utilizationData;

    /*
     * Shows the infrastructure as a service machine OS distribution.
     */
    private IaasOsDistribution iaasOsDistribution;

    /*
     * OS Support Status Distribution.
     */
    private SupportStatusDistribution osSupportStatusDistribution;

    /*
     * Sql Support Status Distribution.
     */
    private SupportStatusDistribution sqlSupportStatusDistribution;

    /*
     * Shows the distribution of platforms.
     */
    private PaasDistribution paasDistribution;

    /*
     * The total Azure arc enabled on-premises cost assuming all on-premises infra is arc enabled.
     */
    private Float azureArcEnabledOnPremisesCost;

    /*
     * The final cost including azure and azure arc enabled on-premises considering the remaining on-prem infra is arc
     * enabled.
     */
    private Float futureCostIncludingAzureArc;

    /*
     * ESU Savings in 4 Years considering the remaining on-prem infra each year is arc enabled.
     */
    private Float futureEsuSavingsFor4YearsIncludingAzureArc;

    /*
     * The management cost saving considering the remaining on-prem infra is arc enabled
     */
    private Float futureManagementCostSavingsIncludingAzureArc;

    /*
     * The security cost saving considering the remaining on-prem infra is arc enabled.
     */
    private Float futureSecurityCostSavingsIncludingAzureArc;

    /*
     * The total cost of services offered by azure arc.
     */
    private Float azureArcServicesCost;

    /*
     * The Iaas component of the future azure cost based on the final migration percentage.
     */
    private Float futureAzureIaasCost;

    /*
     * The Paas component of the future azure cost based on the final migration percentage.
     */
    private Float futureAzurePaasCost;

    /*
     * The future azure arc cost based on the final migration percentage.
     */
    private Float futureAzureArcEnabledOnPremisesCost;

    /*
     * The total cost of services offered by azure arc based on the final migration percentage.
     */
    private Float futureAzureArcServicesCost;

    /**
     * Creates an instance of OverviewSummaryProperties class.
     */
    public OverviewSummaryProperties() {
    }

    /**
     * Get the totalAzureCost property: The total Azure cost..
     * 
     * @return the totalAzureCost value.
     */
    public Float totalAzureCost() {
        return this.totalAzureCost;
    }

    /**
     * Get the totalAzureIaasCost property: The total Azure IaaS cost.
     * 
     * @return the totalAzureIaasCost value.
     */
    public Float totalAzureIaasCost() {
        return this.totalAzureIaasCost;
    }

    /**
     * Get the totalAzurePaasCost property: The total Azure PaaS cost.
     * 
     * @return the totalAzurePaasCost value.
     */
    public Float totalAzurePaasCost() {
        return this.totalAzurePaasCost;
    }

    /**
     * Get the totalAzureAvsCost property: The total Avs cost.
     * 
     * @return the totalAzureAvsCost value.
     */
    public Float totalAzureAvsCost() {
        return this.totalAzureAvsCost;
    }

    /**
     * Get the windowsAhubSavings property: The windows ahub saving.
     * 
     * @return the windowsAhubSavings value.
     */
    public Float windowsAhubSavings() {
        return this.windowsAhubSavings;
    }

    /**
     * Get the linuxAhubSavings property: The linux ahub saving.
     * 
     * @return the linuxAhubSavings value.
     */
    public Float linuxAhubSavings() {
        return this.linuxAhubSavings;
    }

    /**
     * Get the sqlAhubSavings property: The sql ahub saving.
     * 
     * @return the sqlAhubSavings value.
     */
    public Float sqlAhubSavings() {
        return this.sqlAhubSavings;
    }

    /**
     * Get the totalOnPremisesCost property: The total on premises cost.
     * 
     * @return the totalOnPremisesCost value.
     */
    public Float totalOnPremisesCost() {
        return this.totalOnPremisesCost;
    }

    /**
     * Get the esuSavingsFor4Years property: ESU Savings 4 Years.
     * 
     * @return the esuSavingsFor4Years value.
     */
    public Float esuSavingsFor4Years() {
        return this.esuSavingsFor4Years;
    }

    /**
     * Get the managementCostSavings property: The management cost saving.
     * 
     * @return the managementCostSavings value.
     */
    public Float managementCostSavings() {
        return this.managementCostSavings;
    }

    /**
     * Get the securityCostSavings property: The security cost saving.
     * 
     * @return the securityCostSavings value.
     */
    public Float securityCostSavings() {
        return this.securityCostSavings;
    }

    /**
     * Get the yearOnYearEstimates property: Shows the year-on-year cost overall.
     * 
     * @return the yearOnYearEstimates value.
     */
    public YearOnYearEstimates yearOnYearEstimates() {
        return this.yearOnYearEstimates;
    }

    /**
     * Get the serversDiscovered property: Shows the discovered servers by virtualization platform.
     * 
     * @return the serversDiscovered value.
     */
    public ServersDiscovered serversDiscovered() {
        return this.serversDiscovered;
    }

    /**
     * Get the utilizationData property: The SQL on premises utilization insights.
     * 
     * @return the utilizationData value.
     */
    public UtilizationData utilizationData() {
        return this.utilizationData;
    }

    /**
     * Get the iaasOsDistribution property: Shows the infrastructure as a service machine OS distribution.
     * 
     * @return the iaasOsDistribution value.
     */
    public IaasOsDistribution iaasOsDistribution() {
        return this.iaasOsDistribution;
    }

    /**
     * Get the osSupportStatusDistribution property: OS Support Status Distribution.
     * 
     * @return the osSupportStatusDistribution value.
     */
    public SupportStatusDistribution osSupportStatusDistribution() {
        return this.osSupportStatusDistribution;
    }

    /**
     * Get the sqlSupportStatusDistribution property: Sql Support Status Distribution.
     * 
     * @return the sqlSupportStatusDistribution value.
     */
    public SupportStatusDistribution sqlSupportStatusDistribution() {
        return this.sqlSupportStatusDistribution;
    }

    /**
     * Get the paasDistribution property: Shows the distribution of platforms.
     * 
     * @return the paasDistribution value.
     */
    public PaasDistribution paasDistribution() {
        return this.paasDistribution;
    }

    /**
     * Get the azureArcEnabledOnPremisesCost property: The total Azure arc enabled on-premises cost assuming all
     * on-premises infra is arc enabled.
     * 
     * @return the azureArcEnabledOnPremisesCost value.
     */
    public Float azureArcEnabledOnPremisesCost() {
        return this.azureArcEnabledOnPremisesCost;
    }

    /**
     * Get the futureCostIncludingAzureArc property: The final cost including azure and azure arc enabled on-premises
     * considering the remaining on-prem infra is arc enabled.
     * 
     * @return the futureCostIncludingAzureArc value.
     */
    public Float futureCostIncludingAzureArc() {
        return this.futureCostIncludingAzureArc;
    }

    /**
     * Get the futureEsuSavingsFor4YearsIncludingAzureArc property: ESU Savings in 4 Years considering the remaining
     * on-prem infra each year is arc enabled.
     * 
     * @return the futureEsuSavingsFor4YearsIncludingAzureArc value.
     */
    public Float futureEsuSavingsFor4YearsIncludingAzureArc() {
        return this.futureEsuSavingsFor4YearsIncludingAzureArc;
    }

    /**
     * Get the futureManagementCostSavingsIncludingAzureArc property: The management cost saving considering the
     * remaining on-prem infra is arc enabled.
     * 
     * @return the futureManagementCostSavingsIncludingAzureArc value.
     */
    public Float futureManagementCostSavingsIncludingAzureArc() {
        return this.futureManagementCostSavingsIncludingAzureArc;
    }

    /**
     * Get the futureSecurityCostSavingsIncludingAzureArc property: The security cost saving considering the remaining
     * on-prem infra is arc enabled.
     * 
     * @return the futureSecurityCostSavingsIncludingAzureArc value.
     */
    public Float futureSecurityCostSavingsIncludingAzureArc() {
        return this.futureSecurityCostSavingsIncludingAzureArc;
    }

    /**
     * Get the azureArcServicesCost property: The total cost of services offered by azure arc.
     * 
     * @return the azureArcServicesCost value.
     */
    public Float azureArcServicesCost() {
        return this.azureArcServicesCost;
    }

    /**
     * Get the futureAzureIaasCost property: The Iaas component of the future azure cost based on the final migration
     * percentage.
     * 
     * @return the futureAzureIaasCost value.
     */
    public Float futureAzureIaasCost() {
        return this.futureAzureIaasCost;
    }

    /**
     * Get the futureAzurePaasCost property: The Paas component of the future azure cost based on the final migration
     * percentage.
     * 
     * @return the futureAzurePaasCost value.
     */
    public Float futureAzurePaasCost() {
        return this.futureAzurePaasCost;
    }

    /**
     * Get the futureAzureArcEnabledOnPremisesCost property: The future azure arc cost based on the final migration
     * percentage.
     * 
     * @return the futureAzureArcEnabledOnPremisesCost value.
     */
    public Float futureAzureArcEnabledOnPremisesCost() {
        return this.futureAzureArcEnabledOnPremisesCost;
    }

    /**
     * Get the futureAzureArcServicesCost property: The total cost of services offered by azure arc based on the final
     * migration percentage.
     * 
     * @return the futureAzureArcServicesCost value.
     */
    public Float futureAzureArcServicesCost() {
        return this.futureAzureArcServicesCost;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (yearOnYearEstimates() != null) {
            yearOnYearEstimates().validate();
        }
        if (serversDiscovered() != null) {
            serversDiscovered().validate();
        }
        if (utilizationData() != null) {
            utilizationData().validate();
        }
        if (iaasOsDistribution() != null) {
            iaasOsDistribution().validate();
        }
        if (osSupportStatusDistribution() != null) {
            osSupportStatusDistribution().validate();
        }
        if (sqlSupportStatusDistribution() != null) {
            sqlSupportStatusDistribution().validate();
        }
        if (paasDistribution() != null) {
            paasDistribution().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OverviewSummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OverviewSummaryProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the OverviewSummaryProperties.
     */
    public static OverviewSummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OverviewSummaryProperties deserializedOverviewSummaryProperties = new OverviewSummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("totalAzureCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.totalAzureCost = reader.getNullable(JsonReader::getFloat);
                } else if ("totalAzureIaasCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.totalAzureIaasCost = reader.getNullable(JsonReader::getFloat);
                } else if ("totalAzurePaasCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.totalAzurePaasCost = reader.getNullable(JsonReader::getFloat);
                } else if ("totalAzureAvsCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.totalAzureAvsCost = reader.getNullable(JsonReader::getFloat);
                } else if ("windowsAhubSavings".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.windowsAhubSavings = reader.getNullable(JsonReader::getFloat);
                } else if ("linuxAhubSavings".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.linuxAhubSavings = reader.getNullable(JsonReader::getFloat);
                } else if ("sqlAhubSavings".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.sqlAhubSavings = reader.getNullable(JsonReader::getFloat);
                } else if ("totalOnPremisesCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.totalOnPremisesCost
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("esuSavingsFor4years".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.esuSavingsFor4Years
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("managementCostSavings".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.managementCostSavings
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("securityCostSavings".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.securityCostSavings
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("yearOnYearEstimates".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.yearOnYearEstimates = YearOnYearEstimates.fromJson(reader);
                } else if ("serversDiscovered".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.serversDiscovered = ServersDiscovered.fromJson(reader);
                } else if ("utilizationData".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.utilizationData = UtilizationData.fromJson(reader);
                } else if ("iaasOsDistribution".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.iaasOsDistribution = IaasOsDistribution.fromJson(reader);
                } else if ("osSupportStatusDistribution".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.osSupportStatusDistribution
                        = SupportStatusDistribution.fromJson(reader);
                } else if ("sqlSupportStatusDistribution".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.sqlSupportStatusDistribution
                        = SupportStatusDistribution.fromJson(reader);
                } else if ("paasDistribution".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.paasDistribution = PaasDistribution.fromJson(reader);
                } else if ("azureArcEnabledOnPremisesCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.azureArcEnabledOnPremisesCost
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureCostIncludingAzureArc".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureCostIncludingAzureArc
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureEsuSavingsFor4YearsIncludingAzureArc".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureEsuSavingsFor4YearsIncludingAzureArc
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureManagementCostSavingsIncludingAzureArc".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureManagementCostSavingsIncludingAzureArc
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureSecurityCostSavingsIncludingAzureArc".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureSecurityCostSavingsIncludingAzureArc
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("azureArcServicesCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.azureArcServicesCost
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureAzureIaasCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureAzureIaasCost
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureAzurePaasCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureAzurePaasCost
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureAzureArcEnabledOnPremisesCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureAzureArcEnabledOnPremisesCost
                        = reader.getNullable(JsonReader::getFloat);
                } else if ("futureAzureArcServicesCost".equals(fieldName)) {
                    deserializedOverviewSummaryProperties.futureAzureArcServicesCost
                        = reader.getNullable(JsonReader::getFloat);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOverviewSummaryProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Azure AVS summary.
 */
@Immutable
public final class AzureAvsSummary implements JsonSerializable<AzureAvsSummary> {
    /*
     * Shows the year-on-year cost overall.
     */
    private YearOnYearEstimates yearOnYearEstimates;

    /*
     * Avs virtual machine summary.
     */
    private AvsNodeSummary avsNodeSummary;

    /*
     * The on premises PaaS cost.
     */
    private CostDetails avsCostDetails;

    /**
     * Creates an instance of AzureAvsSummary class.
     */
    public AzureAvsSummary() {
    }

    /**
     * Get the yearOnYearEstimates property: Shows the year-on-year cost overall.
     * 
     * @return the yearOnYearEstimates value.
     */
    public YearOnYearEstimates yearOnYearEstimates() {
        return this.yearOnYearEstimates;
    }

    /**
     * Get the avsNodeSummary property: Avs virtual machine summary.
     * 
     * @return the avsNodeSummary value.
     */
    public AvsNodeSummary avsNodeSummary() {
        return this.avsNodeSummary;
    }

    /**
     * Get the avsCostDetails property: The on premises PaaS cost.
     * 
     * @return the avsCostDetails value.
     */
    public CostDetails avsCostDetails() {
        return this.avsCostDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (yearOnYearEstimates() != null) {
            yearOnYearEstimates().validate();
        }
        if (avsNodeSummary() != null) {
            avsNodeSummary().validate();
        }
        if (avsCostDetails() != null) {
            avsCostDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureAvsSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureAvsSummary if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureAvsSummary.
     */
    public static AzureAvsSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureAvsSummary deserializedAzureAvsSummary = new AzureAvsSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("yearOnYearEstimates".equals(fieldName)) {
                    deserializedAzureAvsSummary.yearOnYearEstimates = YearOnYearEstimates.fromJson(reader);
                } else if ("avsNodeSummary".equals(fieldName)) {
                    deserializedAzureAvsSummary.avsNodeSummary = AvsNodeSummary.fromJson(reader);
                } else if ("avsCostDetails".equals(fieldName)) {
                    deserializedAzureAvsSummary.avsCostDetails = CostDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureAvsSummary;
        });
    }
}

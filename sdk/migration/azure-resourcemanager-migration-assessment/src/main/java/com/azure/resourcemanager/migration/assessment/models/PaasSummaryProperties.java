// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Paas summary properties class.
 */
@Immutable
public final class PaasSummaryProperties implements JsonSerializable<PaasSummaryProperties> {
    /*
     * Shows the PaaS Azure summary.
     */
    private AzurePaasSummary azure;

    /*
     * Shows platform as a service (PaaS) summary.
     */
    private OnPremisesPaasSummary onPremises;

    /**
     * Creates an instance of PaasSummaryProperties class.
     */
    public PaasSummaryProperties() {
    }

    /**
     * Get the azure property: Shows the PaaS Azure summary.
     * 
     * @return the azure value.
     */
    public AzurePaasSummary azure() {
        return this.azure;
    }

    /**
     * Get the onPremises property: Shows platform as a service (PaaS) summary.
     * 
     * @return the onPremises value.
     */
    public OnPremisesPaasSummary onPremises() {
        return this.onPremises;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (azure() != null) {
            azure().validate();
        }
        if (onPremises() != null) {
            onPremises().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of PaasSummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of PaasSummaryProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the PaasSummaryProperties.
     */
    public static PaasSummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            PaasSummaryProperties deserializedPaasSummaryProperties = new PaasSummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azure".equals(fieldName)) {
                    deserializedPaasSummaryProperties.azure = AzurePaasSummary.fromJson(reader);
                } else if ("onPremises".equals(fieldName)) {
                    deserializedPaasSummaryProperties.onPremises = OnPremisesPaasSummary.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedPaasSummaryProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Evaluated AVS machine properties class.
 */
@Immutable
public final class EvaluatedAvsMachineProperties implements JsonSerializable<EvaluatedAvsMachineProperties> {
    /*
     * Machine Id.
     */
    private String machineId;

    /*
     * Server Name.
     */
    private String serverName;

    /*
     * Virtualization type.
     */
    private String virtualizationType;

    /*
     * Activity state.
     */
    private String activityState;

    /*
     * Operating System (OS) name.
     */
    private String operatingSystemName;

    /*
     * Recommended Azure target.
     */
    private String recommendedAzureTarget;

    /*
     * Qualifying offer.
     */
    private String qualifyingOffer;

    /*
     * Is machine ready for migration.
     */
    private String readyForMigration;

    /*
     * End of Support status.
     */
    private SupportabilityStatus supportStatus;

    /**
     * Creates an instance of EvaluatedAvsMachineProperties class.
     */
    public EvaluatedAvsMachineProperties() {
    }

    /**
     * Get the machineId property: Machine Id.
     * 
     * @return the machineId value.
     */
    public String machineId() {
        return this.machineId;
    }

    /**
     * Get the serverName property: Server Name.
     * 
     * @return the serverName value.
     */
    public String serverName() {
        return this.serverName;
    }

    /**
     * Get the virtualizationType property: Virtualization type.
     * 
     * @return the virtualizationType value.
     */
    public String virtualizationType() {
        return this.virtualizationType;
    }

    /**
     * Get the activityState property: Activity state.
     * 
     * @return the activityState value.
     */
    public String activityState() {
        return this.activityState;
    }

    /**
     * Get the operatingSystemName property: Operating System (OS) name.
     * 
     * @return the operatingSystemName value.
     */
    public String operatingSystemName() {
        return this.operatingSystemName;
    }

    /**
     * Get the recommendedAzureTarget property: Recommended Azure target.
     * 
     * @return the recommendedAzureTarget value.
     */
    public String recommendedAzureTarget() {
        return this.recommendedAzureTarget;
    }

    /**
     * Get the qualifyingOffer property: Qualifying offer.
     * 
     * @return the qualifyingOffer value.
     */
    public String qualifyingOffer() {
        return this.qualifyingOffer;
    }

    /**
     * Get the readyForMigration property: Is machine ready for migration.
     * 
     * @return the readyForMigration value.
     */
    public String readyForMigration() {
        return this.readyForMigration;
    }

    /**
     * Get the supportStatus property: End of Support status.
     * 
     * @return the supportStatus value.
     */
    public SupportabilityStatus supportStatus() {
        return this.supportStatus;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EvaluatedAvsMachineProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EvaluatedAvsMachineProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EvaluatedAvsMachineProperties.
     */
    public static EvaluatedAvsMachineProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EvaluatedAvsMachineProperties deserializedEvaluatedAvsMachineProperties
                = new EvaluatedAvsMachineProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("machineId".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.machineId = reader.getString();
                } else if ("serverName".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.serverName = reader.getString();
                } else if ("virtualizationType".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.virtualizationType = reader.getString();
                } else if ("activityState".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.activityState = reader.getString();
                } else if ("operatingSystemName".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.operatingSystemName = reader.getString();
                } else if ("recommendedAzureTarget".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.recommendedAzureTarget = reader.getString();
                } else if ("qualifyingOffer".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.qualifyingOffer = reader.getString();
                } else if ("readyForMigration".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.readyForMigration = reader.getString();
                } else if ("supportStatus".equals(fieldName)) {
                    deserializedEvaluatedAvsMachineProperties.supportStatus
                        = SupportabilityStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEvaluatedAvsMachineProperties;
        });
    }
}

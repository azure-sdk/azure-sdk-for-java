// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Windows Server licensing settings.
 */
@Fluent
public final class WindowsServerLicensingSettings implements JsonSerializable<WindowsServerLicensingSettings> {
    /*
     * Licence Cost.
     */
    private float licenseCost;

    /*
     * Software assurance (SA) cost.
     */
    private float softwareAssuranceCost;

    /*
     * Licenses per core.
     */
    private int licensesPerCore;

    /**
     * Creates an instance of WindowsServerLicensingSettings class.
     */
    public WindowsServerLicensingSettings() {
    }

    /**
     * Get the licenseCost property: Licence Cost.
     * 
     * @return the licenseCost value.
     */
    public float licenseCost() {
        return this.licenseCost;
    }

    /**
     * Set the licenseCost property: Licence Cost.
     * 
     * @param licenseCost the licenseCost value to set.
     * @return the WindowsServerLicensingSettings object itself.
     */
    public WindowsServerLicensingSettings withLicenseCost(float licenseCost) {
        this.licenseCost = licenseCost;
        return this;
    }

    /**
     * Get the softwareAssuranceCost property: Software assurance (SA) cost.
     * 
     * @return the softwareAssuranceCost value.
     */
    public float softwareAssuranceCost() {
        return this.softwareAssuranceCost;
    }

    /**
     * Set the softwareAssuranceCost property: Software assurance (SA) cost.
     * 
     * @param softwareAssuranceCost the softwareAssuranceCost value to set.
     * @return the WindowsServerLicensingSettings object itself.
     */
    public WindowsServerLicensingSettings withSoftwareAssuranceCost(float softwareAssuranceCost) {
        this.softwareAssuranceCost = softwareAssuranceCost;
        return this;
    }

    /**
     * Get the licensesPerCore property: Licenses per core.
     * 
     * @return the licensesPerCore value.
     */
    public int licensesPerCore() {
        return this.licensesPerCore;
    }

    /**
     * Set the licensesPerCore property: Licenses per core.
     * 
     * @param licensesPerCore the licensesPerCore value to set.
     * @return the WindowsServerLicensingSettings object itself.
     */
    public WindowsServerLicensingSettings withLicensesPerCore(int licensesPerCore) {
        this.licensesPerCore = licensesPerCore;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeFloatField("licenseCost", this.licenseCost);
        jsonWriter.writeFloatField("softwareAssuranceCost", this.softwareAssuranceCost);
        jsonWriter.writeIntField("licensesPerCore", this.licensesPerCore);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WindowsServerLicensingSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WindowsServerLicensingSettings if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the WindowsServerLicensingSettings.
     */
    public static WindowsServerLicensingSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WindowsServerLicensingSettings deserializedWindowsServerLicensingSettings
                = new WindowsServerLicensingSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("licenseCost".equals(fieldName)) {
                    deserializedWindowsServerLicensingSettings.licenseCost = reader.getFloat();
                } else if ("softwareAssuranceCost".equals(fieldName)) {
                    deserializedWindowsServerLicensingSettings.softwareAssuranceCost = reader.getFloat();
                } else if ("licensesPerCore".equals(fieldName)) {
                    deserializedWindowsServerLicensingSettings.licensesPerCore = reader.getInt();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWindowsServerLicensingSettings;
        });
    }
}

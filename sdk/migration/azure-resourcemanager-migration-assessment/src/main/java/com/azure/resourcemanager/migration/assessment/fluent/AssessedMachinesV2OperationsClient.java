// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.migration.assessment.fluent.models.AssessedMachineV2Inner;

/**
 * An instance of this class provides access to all the operations defined in AssessedMachinesV2OperationsClient.
 */
public interface AssessedMachinesV2OperationsClient {
    /**
     * List AssessedMachineV2 resources by MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AssessedMachineV2 list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AssessedMachineV2Inner> listByParent(String resourceGroupName, String projectName,
        String assessmentName);

    /**
     * List AssessedMachineV2 resources by MachineAssessmentV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param filter Filter query.
     * @param pageSize Optional parameter for page size.
     * @param continuationToken Optional parameter for continuation token.
     * @param totalRecordCount Total record count.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AssessedMachineV2 list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AssessedMachineV2Inner> listByParent(String resourceGroupName, String projectName,
        String assessmentName, String filter, Integer pageSize, String continuationToken, Integer totalRecordCount,
        Context context);

    /**
     * Get a AssessedMachineV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param assessedMachineName Machine assessment V2 Assessed Machine ARM name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AssessedMachineV2 along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AssessedMachineV2Inner> getWithResponse(String resourceGroupName, String projectName,
        String assessmentName, String assessedMachineName, Context context);

    /**
     * Get a AssessedMachineV2.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName Machine Assessment V2 ARM name.
     * @param assessedMachineName Machine assessment V2 Assessed Machine ARM name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AssessedMachineV2.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AssessedMachineV2Inner get(String resourceGroupName, String projectName, String assessmentName,
        String assessedMachineName);
}

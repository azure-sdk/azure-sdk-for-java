// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Assessment results.
 */
@Fluent
public final class AssessmentResult implements JsonSerializable<AssessmentResult> {
    /*
     * Gets or sets the app service plan name.
     */
    private String appServicePlanName;

    /*
     * Gets or sets the suitability.
     */
    private CloudSuitability suitability;

    /*
     * Gets or sets the security suitability.
     */
    private CloudSuitability securitySuitability;

    /*
     * Gets or sets the web app sku name.
     */
    private String webAppSkuName;

    /*
     * Gets or sets the web app sku size.
     */
    private String webAppSkuSize;

    /**
     * Creates an instance of AssessmentResult class.
     */
    public AssessmentResult() {
    }

    /**
     * Get the appServicePlanName property: Gets or sets the app service plan name.
     * 
     * @return the appServicePlanName value.
     */
    public String appServicePlanName() {
        return this.appServicePlanName;
    }

    /**
     * Set the appServicePlanName property: Gets or sets the app service plan name.
     * 
     * @param appServicePlanName the appServicePlanName value to set.
     * @return the AssessmentResult object itself.
     */
    public AssessmentResult withAppServicePlanName(String appServicePlanName) {
        this.appServicePlanName = appServicePlanName;
        return this;
    }

    /**
     * Get the suitability property: Gets or sets the suitability.
     * 
     * @return the suitability value.
     */
    public CloudSuitability suitability() {
        return this.suitability;
    }

    /**
     * Set the suitability property: Gets or sets the suitability.
     * 
     * @param suitability the suitability value to set.
     * @return the AssessmentResult object itself.
     */
    public AssessmentResult withSuitability(CloudSuitability suitability) {
        this.suitability = suitability;
        return this;
    }

    /**
     * Get the securitySuitability property: Gets or sets the security suitability.
     * 
     * @return the securitySuitability value.
     */
    public CloudSuitability securitySuitability() {
        return this.securitySuitability;
    }

    /**
     * Set the securitySuitability property: Gets or sets the security suitability.
     * 
     * @param securitySuitability the securitySuitability value to set.
     * @return the AssessmentResult object itself.
     */
    public AssessmentResult withSecuritySuitability(CloudSuitability securitySuitability) {
        this.securitySuitability = securitySuitability;
        return this;
    }

    /**
     * Get the webAppSkuName property: Gets or sets the web app sku name.
     * 
     * @return the webAppSkuName value.
     */
    public String webAppSkuName() {
        return this.webAppSkuName;
    }

    /**
     * Set the webAppSkuName property: Gets or sets the web app sku name.
     * 
     * @param webAppSkuName the webAppSkuName value to set.
     * @return the AssessmentResult object itself.
     */
    public AssessmentResult withWebAppSkuName(String webAppSkuName) {
        this.webAppSkuName = webAppSkuName;
        return this;
    }

    /**
     * Get the webAppSkuSize property: Gets or sets the web app sku size.
     * 
     * @return the webAppSkuSize value.
     */
    public String webAppSkuSize() {
        return this.webAppSkuSize;
    }

    /**
     * Set the webAppSkuSize property: Gets or sets the web app sku size.
     * 
     * @param webAppSkuSize the webAppSkuSize value to set.
     * @return the AssessmentResult object itself.
     */
    public AssessmentResult withWebAppSkuSize(String webAppSkuSize) {
        this.webAppSkuSize = webAppSkuSize;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (appServicePlanName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property appServicePlanName in model AssessmentResult"));
        }
        if (suitability() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property suitability in model AssessmentResult"));
        }
        if (securitySuitability() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property securitySuitability in model AssessmentResult"));
        }
        if (webAppSkuName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property webAppSkuName in model AssessmentResult"));
        }
        if (webAppSkuSize() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property webAppSkuSize in model AssessmentResult"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AssessmentResult.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("appServicePlanName", this.appServicePlanName);
        jsonWriter.writeStringField("suitability", this.suitability == null ? null : this.suitability.toString());
        jsonWriter.writeStringField("securitySuitability",
            this.securitySuitability == null ? null : this.securitySuitability.toString());
        jsonWriter.writeStringField("webAppSkuName", this.webAppSkuName);
        jsonWriter.writeStringField("webAppSkuSize", this.webAppSkuSize);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssessmentResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssessmentResult if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AssessmentResult.
     */
    public static AssessmentResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AssessmentResult deserializedAssessmentResult = new AssessmentResult();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("appServicePlanName".equals(fieldName)) {
                    deserializedAssessmentResult.appServicePlanName = reader.getString();
                } else if ("suitability".equals(fieldName)) {
                    deserializedAssessmentResult.suitability = CloudSuitability.fromString(reader.getString());
                } else if ("securitySuitability".equals(fieldName)) {
                    deserializedAssessmentResult.securitySuitability = CloudSuitability.fromString(reader.getString());
                } else if ("webAppSkuName".equals(fieldName)) {
                    deserializedAssessmentResult.webAppSkuName = reader.getString();
                } else if ("webAppSkuSize".equals(fieldName)) {
                    deserializedAssessmentResult.webAppSkuSize = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAssessmentResult;
        });
    }
}

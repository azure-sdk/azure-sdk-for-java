// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Properties of the AVS assessment.
 */
@Fluent
public final class AvsAssessmentSettings implements JsonSerializable<AvsAssessmentSettings> {
    /*
     * Azure Location or Azure region where to which the machines will be migrated.
     */
    private String azureLocation;

    /*
     * Currency in which prices should be reported.
     */
    private AzureCurrency currency;

    /*
     * Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     */
    private Float scalingFactor;

    /*
     * Custom discount percentage.
     */
    private Float discountPercentage;

    /*
     * Assessment sizing criterion.
     */
    private AssessmentSizingCriterion sizingCriterion;

    /*
     * Gets or sets the performance data.
     */
    private PerformanceData performanceData;

    /*
     * Gets or sets the savings settings.
     */
    private SavingsSettings savingsSettings;

    /*
     * Gets or sets the billing settings.
     */
    private BillingSettings billingSettings;

    /*
     * Gets or sets user configurable setting to display the environment type.
     */
    private EnvironmentType environmentType;

    /*
     * List of Failures to tolerate and RAID levels in a common property.
     */
    private List<FttAndRaidLevel> failuresToTolerateAndRaidLevelList;

    /*
     * VCPU over subscription.
     */
    private Float vcpuOversubscription;

    /*
     * AVS node types.
     */
    private List<AzureAvsNodeType> nodeTypes;

    /*
     * AVS Assessment Scenario.
     */
    private AvsAssessmentScenario avsAssessmentScenario;

    /*
     * List of AVS external storage types.
     */
    private List<ExternalStorageType> externalStorageTypes;

    /*
     * Gets or sets the CPU headroom.
     */
    private Float cpuHeadroom;

    /*
     * Is VCF license applied
     */
    private Boolean isVcfByolEnabled;

    /*
     * Memory overcommit.
     */
    private Float memOvercommit;

    /*
     * De-duplication compression.
     */
    private Float dedupeCompression;

    /*
     * Is Stretch Cluster Enabled.
     */
    private Boolean isStretchClusterEnabled;

    /**
     * Creates an instance of AvsAssessmentSettings class.
     */
    public AvsAssessmentSettings() {
    }

    /**
     * Get the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @return the azureLocation value.
     */
    public String azureLocation() {
        return this.azureLocation;
    }

    /**
     * Set the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @param azureLocation the azureLocation value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withAzureLocation(String azureLocation) {
        this.azureLocation = azureLocation;
        return this;
    }

    /**
     * Get the currency property: Currency in which prices should be reported.
     * 
     * @return the currency value.
     */
    public AzureCurrency currency() {
        return this.currency;
    }

    /**
     * Set the currency property: Currency in which prices should be reported.
     * 
     * @param currency the currency value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withCurrency(AzureCurrency currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @return the scalingFactor value.
     */
    public Float scalingFactor() {
        return this.scalingFactor;
    }

    /**
     * Set the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @param scalingFactor the scalingFactor value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withScalingFactor(Float scalingFactor) {
        this.scalingFactor = scalingFactor;
        return this;
    }

    /**
     * Get the discountPercentage property: Custom discount percentage.
     * 
     * @return the discountPercentage value.
     */
    public Float discountPercentage() {
        return this.discountPercentage;
    }

    /**
     * Set the discountPercentage property: Custom discount percentage.
     * 
     * @param discountPercentage the discountPercentage value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withDiscountPercentage(Float discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }

    /**
     * Get the sizingCriterion property: Assessment sizing criterion.
     * 
     * @return the sizingCriterion value.
     */
    public AssessmentSizingCriterion sizingCriterion() {
        return this.sizingCriterion;
    }

    /**
     * Set the sizingCriterion property: Assessment sizing criterion.
     * 
     * @param sizingCriterion the sizingCriterion value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withSizingCriterion(AssessmentSizingCriterion sizingCriterion) {
        this.sizingCriterion = sizingCriterion;
        return this;
    }

    /**
     * Get the performanceData property: Gets or sets the performance data.
     * 
     * @return the performanceData value.
     */
    public PerformanceData performanceData() {
        return this.performanceData;
    }

    /**
     * Set the performanceData property: Gets or sets the performance data.
     * 
     * @param performanceData the performanceData value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withPerformanceData(PerformanceData performanceData) {
        this.performanceData = performanceData;
        return this;
    }

    /**
     * Get the savingsSettings property: Gets or sets the savings settings.
     * 
     * @return the savingsSettings value.
     */
    public SavingsSettings savingsSettings() {
        return this.savingsSettings;
    }

    /**
     * Set the savingsSettings property: Gets or sets the savings settings.
     * 
     * @param savingsSettings the savingsSettings value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withSavingsSettings(SavingsSettings savingsSettings) {
        this.savingsSettings = savingsSettings;
        return this;
    }

    /**
     * Get the billingSettings property: Gets or sets the billing settings.
     * 
     * @return the billingSettings value.
     */
    public BillingSettings billingSettings() {
        return this.billingSettings;
    }

    /**
     * Set the billingSettings property: Gets or sets the billing settings.
     * 
     * @param billingSettings the billingSettings value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withBillingSettings(BillingSettings billingSettings) {
        this.billingSettings = billingSettings;
        return this;
    }

    /**
     * Get the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @return the environmentType value.
     */
    public EnvironmentType environmentType() {
        return this.environmentType;
    }

    /**
     * Set the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @param environmentType the environmentType value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withEnvironmentType(EnvironmentType environmentType) {
        this.environmentType = environmentType;
        return this;
    }

    /**
     * Get the failuresToTolerateAndRaidLevelList property: List of Failures to tolerate and RAID levels in a common
     * property.
     * 
     * @return the failuresToTolerateAndRaidLevelList value.
     */
    public List<FttAndRaidLevel> failuresToTolerateAndRaidLevelList() {
        return this.failuresToTolerateAndRaidLevelList;
    }

    /**
     * Set the failuresToTolerateAndRaidLevelList property: List of Failures to tolerate and RAID levels in a common
     * property.
     * 
     * @param failuresToTolerateAndRaidLevelList the failuresToTolerateAndRaidLevelList value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings
        withFailuresToTolerateAndRaidLevelList(List<FttAndRaidLevel> failuresToTolerateAndRaidLevelList) {
        this.failuresToTolerateAndRaidLevelList = failuresToTolerateAndRaidLevelList;
        return this;
    }

    /**
     * Get the vcpuOversubscription property: VCPU over subscription.
     * 
     * @return the vcpuOversubscription value.
     */
    public Float vcpuOversubscription() {
        return this.vcpuOversubscription;
    }

    /**
     * Set the vcpuOversubscription property: VCPU over subscription.
     * 
     * @param vcpuOversubscription the vcpuOversubscription value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withVcpuOversubscription(Float vcpuOversubscription) {
        this.vcpuOversubscription = vcpuOversubscription;
        return this;
    }

    /**
     * Get the nodeTypes property: AVS node types.
     * 
     * @return the nodeTypes value.
     */
    public List<AzureAvsNodeType> nodeTypes() {
        return this.nodeTypes;
    }

    /**
     * Set the nodeTypes property: AVS node types.
     * 
     * @param nodeTypes the nodeTypes value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withNodeTypes(List<AzureAvsNodeType> nodeTypes) {
        this.nodeTypes = nodeTypes;
        return this;
    }

    /**
     * Get the avsAssessmentScenario property: AVS Assessment Scenario.
     * 
     * @return the avsAssessmentScenario value.
     */
    public AvsAssessmentScenario avsAssessmentScenario() {
        return this.avsAssessmentScenario;
    }

    /**
     * Set the avsAssessmentScenario property: AVS Assessment Scenario.
     * 
     * @param avsAssessmentScenario the avsAssessmentScenario value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withAvsAssessmentScenario(AvsAssessmentScenario avsAssessmentScenario) {
        this.avsAssessmentScenario = avsAssessmentScenario;
        return this;
    }

    /**
     * Get the externalStorageTypes property: List of AVS external storage types.
     * 
     * @return the externalStorageTypes value.
     */
    public List<ExternalStorageType> externalStorageTypes() {
        return this.externalStorageTypes;
    }

    /**
     * Set the externalStorageTypes property: List of AVS external storage types.
     * 
     * @param externalStorageTypes the externalStorageTypes value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withExternalStorageTypes(List<ExternalStorageType> externalStorageTypes) {
        this.externalStorageTypes = externalStorageTypes;
        return this;
    }

    /**
     * Get the cpuHeadroom property: Gets or sets the CPU headroom.
     * 
     * @return the cpuHeadroom value.
     */
    public Float cpuHeadroom() {
        return this.cpuHeadroom;
    }

    /**
     * Set the cpuHeadroom property: Gets or sets the CPU headroom.
     * 
     * @param cpuHeadroom the cpuHeadroom value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withCpuHeadroom(Float cpuHeadroom) {
        this.cpuHeadroom = cpuHeadroom;
        return this;
    }

    /**
     * Get the isVcfByolEnabled property: Is VCF license applied.
     * 
     * @return the isVcfByolEnabled value.
     */
    public Boolean isVcfByolEnabled() {
        return this.isVcfByolEnabled;
    }

    /**
     * Set the isVcfByolEnabled property: Is VCF license applied.
     * 
     * @param isVcfByolEnabled the isVcfByolEnabled value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withIsVcfByolEnabled(Boolean isVcfByolEnabled) {
        this.isVcfByolEnabled = isVcfByolEnabled;
        return this;
    }

    /**
     * Get the memOvercommit property: Memory overcommit.
     * 
     * @return the memOvercommit value.
     */
    public Float memOvercommit() {
        return this.memOvercommit;
    }

    /**
     * Set the memOvercommit property: Memory overcommit.
     * 
     * @param memOvercommit the memOvercommit value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withMemOvercommit(Float memOvercommit) {
        this.memOvercommit = memOvercommit;
        return this;
    }

    /**
     * Get the dedupeCompression property: De-duplication compression.
     * 
     * @return the dedupeCompression value.
     */
    public Float dedupeCompression() {
        return this.dedupeCompression;
    }

    /**
     * Set the dedupeCompression property: De-duplication compression.
     * 
     * @param dedupeCompression the dedupeCompression value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withDedupeCompression(Float dedupeCompression) {
        this.dedupeCompression = dedupeCompression;
        return this;
    }

    /**
     * Get the isStretchClusterEnabled property: Is Stretch Cluster Enabled.
     * 
     * @return the isStretchClusterEnabled value.
     */
    public Boolean isStretchClusterEnabled() {
        return this.isStretchClusterEnabled;
    }

    /**
     * Set the isStretchClusterEnabled property: Is Stretch Cluster Enabled.
     * 
     * @param isStretchClusterEnabled the isStretchClusterEnabled value to set.
     * @return the AvsAssessmentSettings object itself.
     */
    public AvsAssessmentSettings withIsStretchClusterEnabled(Boolean isStretchClusterEnabled) {
        this.isStretchClusterEnabled = isStretchClusterEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (performanceData() != null) {
            performanceData().validate();
        }
        if (savingsSettings() != null) {
            savingsSettings().validate();
        }
        if (billingSettings() != null) {
            billingSettings().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureLocation", this.azureLocation);
        jsonWriter.writeStringField("currency", this.currency == null ? null : this.currency.toString());
        jsonWriter.writeNumberField("scalingFactor", this.scalingFactor);
        jsonWriter.writeNumberField("discountPercentage", this.discountPercentage);
        jsonWriter.writeStringField("sizingCriterion",
            this.sizingCriterion == null ? null : this.sizingCriterion.toString());
        jsonWriter.writeJsonField("performanceData", this.performanceData);
        jsonWriter.writeJsonField("savingsSettings", this.savingsSettings);
        jsonWriter.writeJsonField("billingSettings", this.billingSettings);
        jsonWriter.writeStringField("environmentType",
            this.environmentType == null ? null : this.environmentType.toString());
        jsonWriter.writeArrayField("failuresToTolerateAndRaidLevelList", this.failuresToTolerateAndRaidLevelList,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeNumberField("vcpuOversubscription", this.vcpuOversubscription);
        jsonWriter.writeArrayField("nodeTypes", this.nodeTypes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeStringField("avsAssessmentScenario",
            this.avsAssessmentScenario == null ? null : this.avsAssessmentScenario.toString());
        jsonWriter.writeArrayField("externalStorageTypes", this.externalStorageTypes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeNumberField("cpuHeadroom", this.cpuHeadroom);
        jsonWriter.writeBooleanField("isVcfByolEnabled", this.isVcfByolEnabled);
        jsonWriter.writeNumberField("memOvercommit", this.memOvercommit);
        jsonWriter.writeNumberField("dedupeCompression", this.dedupeCompression);
        jsonWriter.writeBooleanField("isStretchClusterEnabled", this.isStretchClusterEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AvsAssessmentSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AvsAssessmentSettings if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AvsAssessmentSettings.
     */
    public static AvsAssessmentSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AvsAssessmentSettings deserializedAvsAssessmentSettings = new AvsAssessmentSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureLocation".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.azureLocation = reader.getString();
                } else if ("currency".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.currency = AzureCurrency.fromString(reader.getString());
                } else if ("scalingFactor".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.scalingFactor = reader.getNullable(JsonReader::getFloat);
                } else if ("discountPercentage".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.discountPercentage = reader.getNullable(JsonReader::getFloat);
                } else if ("sizingCriterion".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.sizingCriterion
                        = AssessmentSizingCriterion.fromString(reader.getString());
                } else if ("performanceData".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.performanceData = PerformanceData.fromJson(reader);
                } else if ("savingsSettings".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.savingsSettings = SavingsSettings.fromJson(reader);
                } else if ("billingSettings".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.billingSettings = BillingSettings.fromJson(reader);
                } else if ("environmentType".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.environmentType = EnvironmentType.fromString(reader.getString());
                } else if ("failuresToTolerateAndRaidLevelList".equals(fieldName)) {
                    List<FttAndRaidLevel> failuresToTolerateAndRaidLevelList
                        = reader.readArray(reader1 -> FttAndRaidLevel.fromString(reader1.getString()));
                    deserializedAvsAssessmentSettings.failuresToTolerateAndRaidLevelList
                        = failuresToTolerateAndRaidLevelList;
                } else if ("vcpuOversubscription".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.vcpuOversubscription = reader.getNullable(JsonReader::getFloat);
                } else if ("nodeTypes".equals(fieldName)) {
                    List<AzureAvsNodeType> nodeTypes
                        = reader.readArray(reader1 -> AzureAvsNodeType.fromString(reader1.getString()));
                    deserializedAvsAssessmentSettings.nodeTypes = nodeTypes;
                } else if ("avsAssessmentScenario".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.avsAssessmentScenario
                        = AvsAssessmentScenario.fromString(reader.getString());
                } else if ("externalStorageTypes".equals(fieldName)) {
                    List<ExternalStorageType> externalStorageTypes
                        = reader.readArray(reader1 -> ExternalStorageType.fromString(reader1.getString()));
                    deserializedAvsAssessmentSettings.externalStorageTypes = externalStorageTypes;
                } else if ("cpuHeadroom".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.cpuHeadroom = reader.getNullable(JsonReader::getFloat);
                } else if ("isVcfByolEnabled".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.isVcfByolEnabled = reader.getNullable(JsonReader::getBoolean);
                } else if ("memOvercommit".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.memOvercommit = reader.getNullable(JsonReader::getFloat);
                } else if ("dedupeCompression".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.dedupeCompression = reader.getNullable(JsonReader::getFloat);
                } else if ("isStretchClusterEnabled".equals(fieldName)) {
                    deserializedAvsAssessmentSettings.isStretchClusterEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAvsAssessmentSettings;
        });
    }
}

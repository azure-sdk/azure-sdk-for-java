// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Source recommendation details.
 */
@Immutable
public final class AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem
    implements JsonSerializable<AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem> {
    /*
     * The sku name.
     */
    private String name;

    /*
     * The sku type.
     */
    private MigrationSuitability migrationSuitability;

    /**
     * Creates an instance of AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem class.
     */
    public AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem() {
    }

    /**
     * Get the name property: The sku name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the migrationSuitability property: The sku type.
     * 
     * @return the migrationSuitability value.
     */
    public MigrationSuitability migrationSuitability() {
        return this.migrationSuitability;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (migrationSuitability() != null) {
            migrationSuitability().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem if the JsonReader
     * was pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem.
     */
    public static AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem
        fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem deserializedAvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem
                = new AvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedAvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem.name
                        = reader.getString();
                } else if ("migrationSuitability".equals(fieldName)) {
                    deserializedAvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem.migrationSuitability
                        = MigrationSuitability.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAvsAssessedMachinePropertiesV2RecommendationsPropertiesItemsSourcesItem;
        });
    }
}

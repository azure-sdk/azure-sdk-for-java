// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The Azure IaaS summary.
 */
@Immutable
public final class AzureIaasSummary implements JsonSerializable<AzureIaasSummary> {
    /*
     * Shows the year-on-year cost overall.
     */
    private YearOnYearEstimates yearOnYearEstimates;

    /*
     * Azure Iaas virtual machine summary.
     */
    private AzureIaasVmSummary azureIaasVmSummary;

    /*
     * Azure Iaas sql server summary.
     */
    private AzureIaasSqlSummary azureIaasSqlSummary;

    /*
     * The on premises PaaS cost.
     */
    private CostDetails azureIaasCostDetails;

    /*
     * The azure Iaas sustainability details.
     */
    private CarbonEmissionsDetails azureIaasSustainabilityDetails;

    /**
     * Creates an instance of AzureIaasSummary class.
     */
    public AzureIaasSummary() {
    }

    /**
     * Get the yearOnYearEstimates property: Shows the year-on-year cost overall.
     * 
     * @return the yearOnYearEstimates value.
     */
    public YearOnYearEstimates yearOnYearEstimates() {
        return this.yearOnYearEstimates;
    }

    /**
     * Get the azureIaasVmSummary property: Azure Iaas virtual machine summary.
     * 
     * @return the azureIaasVmSummary value.
     */
    public AzureIaasVmSummary azureIaasVmSummary() {
        return this.azureIaasVmSummary;
    }

    /**
     * Get the azureIaasSqlSummary property: Azure Iaas sql server summary.
     * 
     * @return the azureIaasSqlSummary value.
     */
    public AzureIaasSqlSummary azureIaasSqlSummary() {
        return this.azureIaasSqlSummary;
    }

    /**
     * Get the azureIaasCostDetails property: The on premises PaaS cost.
     * 
     * @return the azureIaasCostDetails value.
     */
    public CostDetails azureIaasCostDetails() {
        return this.azureIaasCostDetails;
    }

    /**
     * Get the azureIaasSustainabilityDetails property: The azure Iaas sustainability details.
     * 
     * @return the azureIaasSustainabilityDetails value.
     */
    public CarbonEmissionsDetails azureIaasSustainabilityDetails() {
        return this.azureIaasSustainabilityDetails;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (yearOnYearEstimates() != null) {
            yearOnYearEstimates().validate();
        }
        if (azureIaasVmSummary() != null) {
            azureIaasVmSummary().validate();
        }
        if (azureIaasSqlSummary() != null) {
            azureIaasSqlSummary().validate();
        }
        if (azureIaasCostDetails() != null) {
            azureIaasCostDetails().validate();
        }
        if (azureIaasSustainabilityDetails() != null) {
            azureIaasSustainabilityDetails().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureIaasSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureIaasSummary if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AzureIaasSummary.
     */
    public static AzureIaasSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AzureIaasSummary deserializedAzureIaasSummary = new AzureIaasSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("yearOnYearEstimates".equals(fieldName)) {
                    deserializedAzureIaasSummary.yearOnYearEstimates = YearOnYearEstimates.fromJson(reader);
                } else if ("azureIaasVmSummary".equals(fieldName)) {
                    deserializedAzureIaasSummary.azureIaasVmSummary = AzureIaasVmSummary.fromJson(reader);
                } else if ("azureIaasSqlSummary".equals(fieldName)) {
                    deserializedAzureIaasSummary.azureIaasSqlSummary = AzureIaasSqlSummary.fromJson(reader);
                } else if ("azureIaasCostDetails".equals(fieldName)) {
                    deserializedAzureIaasSummary.azureIaasCostDetails = CostDetails.fromJson(reader);
                } else if ("azureIaasSustainabilityDetails".equals(fieldName)) {
                    deserializedAzureIaasSummary.azureIaasSustainabilityDetails
                        = CarbonEmissionsDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAzureIaasSummary;
        });
    }
}

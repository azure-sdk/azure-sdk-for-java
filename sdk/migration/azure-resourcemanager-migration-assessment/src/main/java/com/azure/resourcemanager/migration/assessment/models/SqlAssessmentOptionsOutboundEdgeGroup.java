// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * A class that represents the outbound edges from a given node.
 */
@Fluent
public final class SqlAssessmentOptionsOutboundEdgeGroup
    implements JsonSerializable<SqlAssessmentOptionsOutboundEdgeGroup> {
    /*
     * Gets or sets the Azure Locations.
     */
    private List<AzureLocation> targetLocations;

    /*
     * Gets or sets the Azure Currency.
     */
    private List<AzureCurrency> currencies;

    /*
     * Gets or sets the Assessment Savings Options.
     */
    private List<SavingsOptions> savingsOptions;

    /*
     * Gets or sets the Licensing Program.
     */
    private List<LicensingProgram> licensingProgram;

    /*
     * Gets or sets the Azure SQL Compute tiers.
     */
    private List<ComputeTier> computeTiers;

    /*
     * Gets or sets the Azure SQL Hardware generations.
     */
    private List<HardwareGeneration> hardwareGenerations;

    /*
     * Gets or sets the Azure SQL target types.
     */
    private List<TargetType> targetTypes;

    /*
     * Gets or sets the Azure SQL service tiers.
     */
    private List<AzureSqlServiceTier> serviceTiers;

    /*
     * Gets or sets the Azure VM families.
     */
    private List<AzureVmFamily> azureVmFamilies;

    /*
     * Gets or sets the Azure VM family categories.
     */
    private List<VmFamilyCategoryItem> azureVmFamilyCategories;

    /*
     * Gets or sets the premium disk support.
     */
    private List<PremiumDiskSupport> premiumDiskSupport;

    /*
     * Gets or sets the Azure Offer Code.
     */
    private List<AzureOffer> azureOfferCode;

    /*
     * Gets or sets the Azure Offer Code.
     */
    private List<AzureOffer> azureOfferCodeForVm;

    /**
     * Creates an instance of SqlAssessmentOptionsOutboundEdgeGroup class.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup() {
    }

    /**
     * Get the targetLocations property: Gets or sets the Azure Locations.
     * 
     * @return the targetLocations value.
     */
    public List<AzureLocation> targetLocations() {
        return this.targetLocations;
    }

    /**
     * Set the targetLocations property: Gets or sets the Azure Locations.
     * 
     * @param targetLocations the targetLocations value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withTargetLocations(List<AzureLocation> targetLocations) {
        this.targetLocations = targetLocations;
        return this;
    }

    /**
     * Get the currencies property: Gets or sets the Azure Currency.
     * 
     * @return the currencies value.
     */
    public List<AzureCurrency> currencies() {
        return this.currencies;
    }

    /**
     * Set the currencies property: Gets or sets the Azure Currency.
     * 
     * @param currencies the currencies value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withCurrencies(List<AzureCurrency> currencies) {
        this.currencies = currencies;
        return this;
    }

    /**
     * Get the savingsOptions property: Gets or sets the Assessment Savings Options.
     * 
     * @return the savingsOptions value.
     */
    public List<SavingsOptions> savingsOptions() {
        return this.savingsOptions;
    }

    /**
     * Set the savingsOptions property: Gets or sets the Assessment Savings Options.
     * 
     * @param savingsOptions the savingsOptions value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withSavingsOptions(List<SavingsOptions> savingsOptions) {
        this.savingsOptions = savingsOptions;
        return this;
    }

    /**
     * Get the licensingProgram property: Gets or sets the Licensing Program.
     * 
     * @return the licensingProgram value.
     */
    public List<LicensingProgram> licensingProgram() {
        return this.licensingProgram;
    }

    /**
     * Set the licensingProgram property: Gets or sets the Licensing Program.
     * 
     * @param licensingProgram the licensingProgram value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withLicensingProgram(List<LicensingProgram> licensingProgram) {
        this.licensingProgram = licensingProgram;
        return this;
    }

    /**
     * Get the computeTiers property: Gets or sets the Azure SQL Compute tiers.
     * 
     * @return the computeTiers value.
     */
    public List<ComputeTier> computeTiers() {
        return this.computeTiers;
    }

    /**
     * Set the computeTiers property: Gets or sets the Azure SQL Compute tiers.
     * 
     * @param computeTiers the computeTiers value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withComputeTiers(List<ComputeTier> computeTiers) {
        this.computeTiers = computeTiers;
        return this;
    }

    /**
     * Get the hardwareGenerations property: Gets or sets the Azure SQL Hardware generations.
     * 
     * @return the hardwareGenerations value.
     */
    public List<HardwareGeneration> hardwareGenerations() {
        return this.hardwareGenerations;
    }

    /**
     * Set the hardwareGenerations property: Gets or sets the Azure SQL Hardware generations.
     * 
     * @param hardwareGenerations the hardwareGenerations value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withHardwareGenerations(List<HardwareGeneration> hardwareGenerations) {
        this.hardwareGenerations = hardwareGenerations;
        return this;
    }

    /**
     * Get the targetTypes property: Gets or sets the Azure SQL target types.
     * 
     * @return the targetTypes value.
     */
    public List<TargetType> targetTypes() {
        return this.targetTypes;
    }

    /**
     * Set the targetTypes property: Gets or sets the Azure SQL target types.
     * 
     * @param targetTypes the targetTypes value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withTargetTypes(List<TargetType> targetTypes) {
        this.targetTypes = targetTypes;
        return this;
    }

    /**
     * Get the serviceTiers property: Gets or sets the Azure SQL service tiers.
     * 
     * @return the serviceTiers value.
     */
    public List<AzureSqlServiceTier> serviceTiers() {
        return this.serviceTiers;
    }

    /**
     * Set the serviceTiers property: Gets or sets the Azure SQL service tiers.
     * 
     * @param serviceTiers the serviceTiers value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withServiceTiers(List<AzureSqlServiceTier> serviceTiers) {
        this.serviceTiers = serviceTiers;
        return this;
    }

    /**
     * Get the azureVmFamilies property: Gets or sets the Azure VM families.
     * 
     * @return the azureVmFamilies value.
     */
    public List<AzureVmFamily> azureVmFamilies() {
        return this.azureVmFamilies;
    }

    /**
     * Set the azureVmFamilies property: Gets or sets the Azure VM families.
     * 
     * @param azureVmFamilies the azureVmFamilies value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withAzureVmFamilies(List<AzureVmFamily> azureVmFamilies) {
        this.azureVmFamilies = azureVmFamilies;
        return this;
    }

    /**
     * Get the azureVmFamilyCategories property: Gets or sets the Azure VM family categories.
     * 
     * @return the azureVmFamilyCategories value.
     */
    public List<VmFamilyCategoryItem> azureVmFamilyCategories() {
        return this.azureVmFamilyCategories;
    }

    /**
     * Set the azureVmFamilyCategories property: Gets or sets the Azure VM family categories.
     * 
     * @param azureVmFamilyCategories the azureVmFamilyCategories value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup
        withAzureVmFamilyCategories(List<VmFamilyCategoryItem> azureVmFamilyCategories) {
        this.azureVmFamilyCategories = azureVmFamilyCategories;
        return this;
    }

    /**
     * Get the premiumDiskSupport property: Gets or sets the premium disk support.
     * 
     * @return the premiumDiskSupport value.
     */
    public List<PremiumDiskSupport> premiumDiskSupport() {
        return this.premiumDiskSupport;
    }

    /**
     * Set the premiumDiskSupport property: Gets or sets the premium disk support.
     * 
     * @param premiumDiskSupport the premiumDiskSupport value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withPremiumDiskSupport(List<PremiumDiskSupport> premiumDiskSupport) {
        this.premiumDiskSupport = premiumDiskSupport;
        return this;
    }

    /**
     * Get the azureOfferCode property: Gets or sets the Azure Offer Code.
     * 
     * @return the azureOfferCode value.
     */
    public List<AzureOffer> azureOfferCode() {
        return this.azureOfferCode;
    }

    /**
     * Set the azureOfferCode property: Gets or sets the Azure Offer Code.
     * 
     * @param azureOfferCode the azureOfferCode value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withAzureOfferCode(List<AzureOffer> azureOfferCode) {
        this.azureOfferCode = azureOfferCode;
        return this;
    }

    /**
     * Get the azureOfferCodeForVm property: Gets or sets the Azure Offer Code.
     * 
     * @return the azureOfferCodeForVm value.
     */
    public List<AzureOffer> azureOfferCodeForVm() {
        return this.azureOfferCodeForVm;
    }

    /**
     * Set the azureOfferCodeForVm property: Gets or sets the Azure Offer Code.
     * 
     * @param azureOfferCodeForVm the azureOfferCodeForVm value to set.
     * @return the SqlAssessmentOptionsOutboundEdgeGroup object itself.
     */
    public SqlAssessmentOptionsOutboundEdgeGroup withAzureOfferCodeForVm(List<AzureOffer> azureOfferCodeForVm) {
        this.azureOfferCodeForVm = azureOfferCodeForVm;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (targetLocations() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetLocations in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (currencies() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property currencies in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (savingsOptions() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property savingsOptions in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (licensingProgram() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property licensingProgram in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (computeTiers() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property computeTiers in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (hardwareGenerations() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property hardwareGenerations in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (targetTypes() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property targetTypes in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (serviceTiers() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property serviceTiers in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (azureVmFamilies() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureVmFamilies in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (azureVmFamilyCategories() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureVmFamilyCategories in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (premiumDiskSupport() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property premiumDiskSupport in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (azureOfferCode() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureOfferCode in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
        if (azureOfferCodeForVm() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureOfferCodeForVm in model SqlAssessmentOptionsOutboundEdgeGroup"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SqlAssessmentOptionsOutboundEdgeGroup.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("targetLocations", this.targetLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("currencies", this.currencies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("savingsOptions", this.savingsOptions,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("licensingProgram", this.licensingProgram,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("computeTiers", this.computeTiers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("hardwareGenerations", this.hardwareGenerations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("targetTypes", this.targetTypes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("serviceTiers", this.serviceTiers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("azureVmFamilies", this.azureVmFamilies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("azureVmFamilyCategories", this.azureVmFamilyCategories,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("premiumDiskSupport", this.premiumDiskSupport,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("azureOfferCode", this.azureOfferCode,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("azureOfferCodeForVm", this.azureOfferCodeForVm,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SqlAssessmentOptionsOutboundEdgeGroup from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SqlAssessmentOptionsOutboundEdgeGroup if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SqlAssessmentOptionsOutboundEdgeGroup.
     */
    public static SqlAssessmentOptionsOutboundEdgeGroup fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SqlAssessmentOptionsOutboundEdgeGroup deserializedSqlAssessmentOptionsOutboundEdgeGroup
                = new SqlAssessmentOptionsOutboundEdgeGroup();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetLocations".equals(fieldName)) {
                    List<AzureLocation> targetLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.targetLocations = targetLocations;
                } else if ("currencies".equals(fieldName)) {
                    List<AzureCurrency> currencies
                        = reader.readArray(reader1 -> AzureCurrency.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.currencies = currencies;
                } else if ("savingsOptions".equals(fieldName)) {
                    List<SavingsOptions> savingsOptions
                        = reader.readArray(reader1 -> SavingsOptions.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.savingsOptions = savingsOptions;
                } else if ("licensingProgram".equals(fieldName)) {
                    List<LicensingProgram> licensingProgram
                        = reader.readArray(reader1 -> LicensingProgram.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.licensingProgram = licensingProgram;
                } else if ("computeTiers".equals(fieldName)) {
                    List<ComputeTier> computeTiers
                        = reader.readArray(reader1 -> ComputeTier.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.computeTiers = computeTiers;
                } else if ("hardwareGenerations".equals(fieldName)) {
                    List<HardwareGeneration> hardwareGenerations
                        = reader.readArray(reader1 -> HardwareGeneration.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.hardwareGenerations = hardwareGenerations;
                } else if ("targetTypes".equals(fieldName)) {
                    List<TargetType> targetTypes
                        = reader.readArray(reader1 -> TargetType.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.targetTypes = targetTypes;
                } else if ("serviceTiers".equals(fieldName)) {
                    List<AzureSqlServiceTier> serviceTiers
                        = reader.readArray(reader1 -> AzureSqlServiceTier.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.serviceTiers = serviceTiers;
                } else if ("azureVmFamilies".equals(fieldName)) {
                    List<AzureVmFamily> azureVmFamilies
                        = reader.readArray(reader1 -> AzureVmFamily.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.azureVmFamilies = azureVmFamilies;
                } else if ("azureVmFamilyCategories".equals(fieldName)) {
                    List<VmFamilyCategoryItem> azureVmFamilyCategories
                        = reader.readArray(reader1 -> VmFamilyCategoryItem.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.azureVmFamilyCategories = azureVmFamilyCategories;
                } else if ("premiumDiskSupport".equals(fieldName)) {
                    List<PremiumDiskSupport> premiumDiskSupport
                        = reader.readArray(reader1 -> PremiumDiskSupport.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.premiumDiskSupport = premiumDiskSupport;
                } else if ("azureOfferCode".equals(fieldName)) {
                    List<AzureOffer> azureOfferCode
                        = reader.readArray(reader1 -> AzureOffer.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.azureOfferCode = azureOfferCode;
                } else if ("azureOfferCodeForVm".equals(fieldName)) {
                    List<AzureOffer> azureOfferCodeForVm
                        = reader.readArray(reader1 -> AzureOffer.fromString(reader1.getString()));
                    deserializedSqlAssessmentOptionsOutboundEdgeGroup.azureOfferCodeForVm = azureOfferCodeForVm;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSqlAssessmentOptionsOutboundEdgeGroup;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Skus details.
 */
@Immutable
public final class AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem
    implements JsonSerializable<AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem> {
    /*
     * The Sku kind.
     */
    private SkuKind kind;

    /*
     * The resource uri.
     */
    private String resourceUri;

    /*
     * The sku name.
     */
    private String displayName;

    /*
     * The sku id.
     */
    private String id;

    /*
     * The sku type.
     */
    private SkuType type;

    /*
     * The source name.
     */
    private List<AssessedWebApplicationPropertiesRecommendationsPropertiesItemsSourcesItem> sources;

    /*
     * The sku details.
     */
    private SkuDetails details;

    /**
     * Creates an instance of AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem class.
     */
    public AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem() {
    }

    /**
     * Get the kind property: The Sku kind.
     * 
     * @return the kind value.
     */
    public SkuKind kind() {
        return this.kind;
    }

    /**
     * Get the resourceUri property: The resource uri.
     * 
     * @return the resourceUri value.
     */
    public String resourceUri() {
        return this.resourceUri;
    }

    /**
     * Get the displayName property: The sku name.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Get the id property: The sku id.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the type property: The sku type.
     * 
     * @return the type value.
     */
    public SkuType type() {
        return this.type;
    }

    /**
     * Get the sources property: The source name.
     * 
     * @return the sources value.
     */
    public List<AssessedWebApplicationPropertiesRecommendationsPropertiesItemsSourcesItem> sources() {
        return this.sources;
    }

    /**
     * Get the details property: The sku details.
     * 
     * @return the details value.
     */
    public SkuDetails details() {
        return this.details;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sources() != null) {
            sources().forEach(e -> e.validate());
        }
        if (details() != null) {
            details().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.
     */
    public static AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem
                = new AssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kind".equals(fieldName)) {
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.kind
                        = SkuKind.fromString(reader.getString());
                } else if ("resourceUri".equals(fieldName)) {
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.resourceUri
                        = reader.getString();
                } else if ("displayName".equals(fieldName)) {
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.displayName
                        = reader.getString();
                } else if ("id".equals(fieldName)) {
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.id
                        = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.type
                        = SkuType.fromString(reader.getString());
                } else if ("sources".equals(fieldName)) {
                    List<AssessedWebApplicationPropertiesRecommendationsPropertiesItemsSourcesItem> sources = reader
                        .readArray(reader1 -> AssessedWebApplicationPropertiesRecommendationsPropertiesItemsSourcesItem
                            .fromJson(reader1));
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.sources = sources;
                } else if ("details".equals(fieldName)) {
                    deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem.details
                        = SkuDetails.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAssessedWebApplicationPropertiesRecommendationsPropertiesItemsItem;
        });
    }
}

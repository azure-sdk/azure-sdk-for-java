// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Web app Assessment options properties Web model object.
 */
@Fluent
public final class WebAppAssessmentOptionsProperties implements JsonSerializable<WebAppAssessmentOptionsProperties> {
    /*
     * Gets the list of web app target options.
     */
    private List<WebAppTargetOptions> webAppSkus;

    /*
     * Gets or sets the list of Azure locations supporting Saving Plans for IAAS.
     */
    private List<AzureLocation> savingsPlanSupportedLocations;

    /*
     * Gets or sets the list of Azure locations supporting Reserved Instances.
     */
    private List<AzureLocation> reservedInstanceSupportedLocations;

    /*
     * Gets or sets the list of currencies supported for Reserved Instances.
     */
    private List<AzureCurrency> reservedInstanceSupportedCurrencies;

    /*
     * Gets or sets the list of offers supported for Reserved Instances.
     */
    private List<AzureOfferCode> reservedInstanceSupportedOffers;

    /*
     * Gets or sets the list of currencies supported for Reserved Instances.
     */
    private List<AzureWebAppTier> reservedInstanceSupportedWebAppTiers;

    /*
     * Gets or sets the list of Azure Offers supporting Saving Plans.
     */
    private List<AzureWebAppTier> savingsPlanSupportedWebAppTiers;

    /**
     * Creates an instance of WebAppAssessmentOptionsProperties class.
     */
    public WebAppAssessmentOptionsProperties() {
    }

    /**
     * Get the webAppSkus property: Gets the list of web app target options.
     * 
     * @return the webAppSkus value.
     */
    public List<WebAppTargetOptions> webAppSkus() {
        return this.webAppSkus;
    }

    /**
     * Get the savingsPlanSupportedLocations property: Gets or sets the list of Azure locations supporting Saving Plans
     * for IAAS.
     * 
     * @return the savingsPlanSupportedLocations value.
     */
    public List<AzureLocation> savingsPlanSupportedLocations() {
        return this.savingsPlanSupportedLocations;
    }

    /**
     * Set the savingsPlanSupportedLocations property: Gets or sets the list of Azure locations supporting Saving Plans
     * for IAAS.
     * 
     * @param savingsPlanSupportedLocations the savingsPlanSupportedLocations value to set.
     * @return the WebAppAssessmentOptionsProperties object itself.
     */
    public WebAppAssessmentOptionsProperties
        withSavingsPlanSupportedLocations(List<AzureLocation> savingsPlanSupportedLocations) {
        this.savingsPlanSupportedLocations = savingsPlanSupportedLocations;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedLocations property: Gets or sets the list of Azure locations supporting Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedLocations value.
     */
    public List<AzureLocation> reservedInstanceSupportedLocations() {
        return this.reservedInstanceSupportedLocations;
    }

    /**
     * Set the reservedInstanceSupportedLocations property: Gets or sets the list of Azure locations supporting Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedLocations the reservedInstanceSupportedLocations value to set.
     * @return the WebAppAssessmentOptionsProperties object itself.
     */
    public WebAppAssessmentOptionsProperties
        withReservedInstanceSupportedLocations(List<AzureLocation> reservedInstanceSupportedLocations) {
        this.reservedInstanceSupportedLocations = reservedInstanceSupportedLocations;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedCurrencies property: Gets or sets the list of currencies supported for Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedCurrencies value.
     */
    public List<AzureCurrency> reservedInstanceSupportedCurrencies() {
        return this.reservedInstanceSupportedCurrencies;
    }

    /**
     * Set the reservedInstanceSupportedCurrencies property: Gets or sets the list of currencies supported for Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedCurrencies the reservedInstanceSupportedCurrencies value to set.
     * @return the WebAppAssessmentOptionsProperties object itself.
     */
    public WebAppAssessmentOptionsProperties
        withReservedInstanceSupportedCurrencies(List<AzureCurrency> reservedInstanceSupportedCurrencies) {
        this.reservedInstanceSupportedCurrencies = reservedInstanceSupportedCurrencies;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedOffers property: Gets or sets the list of offers supported for Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedOffers value.
     */
    public List<AzureOfferCode> reservedInstanceSupportedOffers() {
        return this.reservedInstanceSupportedOffers;
    }

    /**
     * Set the reservedInstanceSupportedOffers property: Gets or sets the list of offers supported for Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedOffers the reservedInstanceSupportedOffers value to set.
     * @return the WebAppAssessmentOptionsProperties object itself.
     */
    public WebAppAssessmentOptionsProperties
        withReservedInstanceSupportedOffers(List<AzureOfferCode> reservedInstanceSupportedOffers) {
        this.reservedInstanceSupportedOffers = reservedInstanceSupportedOffers;
        return this;
    }

    /**
     * Get the reservedInstanceSupportedWebAppTiers property: Gets or sets the list of currencies supported for Reserved
     * Instances.
     * 
     * @return the reservedInstanceSupportedWebAppTiers value.
     */
    public List<AzureWebAppTier> reservedInstanceSupportedWebAppTiers() {
        return this.reservedInstanceSupportedWebAppTiers;
    }

    /**
     * Set the reservedInstanceSupportedWebAppTiers property: Gets or sets the list of currencies supported for Reserved
     * Instances.
     * 
     * @param reservedInstanceSupportedWebAppTiers the reservedInstanceSupportedWebAppTiers value to set.
     * @return the WebAppAssessmentOptionsProperties object itself.
     */
    public WebAppAssessmentOptionsProperties
        withReservedInstanceSupportedWebAppTiers(List<AzureWebAppTier> reservedInstanceSupportedWebAppTiers) {
        this.reservedInstanceSupportedWebAppTiers = reservedInstanceSupportedWebAppTiers;
        return this;
    }

    /**
     * Get the savingsPlanSupportedWebAppTiers property: Gets or sets the list of Azure Offers supporting Saving Plans.
     * 
     * @return the savingsPlanSupportedWebAppTiers value.
     */
    public List<AzureWebAppTier> savingsPlanSupportedWebAppTiers() {
        return this.savingsPlanSupportedWebAppTiers;
    }

    /**
     * Set the savingsPlanSupportedWebAppTiers property: Gets or sets the list of Azure Offers supporting Saving Plans.
     * 
     * @param savingsPlanSupportedWebAppTiers the savingsPlanSupportedWebAppTiers value to set.
     * @return the WebAppAssessmentOptionsProperties object itself.
     */
    public WebAppAssessmentOptionsProperties
        withSavingsPlanSupportedWebAppTiers(List<AzureWebAppTier> savingsPlanSupportedWebAppTiers) {
        this.savingsPlanSupportedWebAppTiers = savingsPlanSupportedWebAppTiers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (webAppSkus() != null) {
            webAppSkus().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("savingsPlanSupportedLocations", this.savingsPlanSupportedLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedLocations", this.reservedInstanceSupportedLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedCurrencies", this.reservedInstanceSupportedCurrencies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedOffers", this.reservedInstanceSupportedOffers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("reservedInstanceSupportedWebAppTiers", this.reservedInstanceSupportedWebAppTiers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeArrayField("savingsPlanSupportedWebAppTiers", this.savingsPlanSupportedWebAppTiers,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebAppAssessmentOptionsProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebAppAssessmentOptionsProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WebAppAssessmentOptionsProperties.
     */
    public static WebAppAssessmentOptionsProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebAppAssessmentOptionsProperties deserializedWebAppAssessmentOptionsProperties
                = new WebAppAssessmentOptionsProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("webAppSkus".equals(fieldName)) {
                    List<WebAppTargetOptions> webAppSkus
                        = reader.readArray(reader1 -> WebAppTargetOptions.fromJson(reader1));
                    deserializedWebAppAssessmentOptionsProperties.webAppSkus = webAppSkus;
                } else if ("savingsPlanSupportedLocations".equals(fieldName)) {
                    List<AzureLocation> savingsPlanSupportedLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedWebAppAssessmentOptionsProperties.savingsPlanSupportedLocations
                        = savingsPlanSupportedLocations;
                } else if ("reservedInstanceSupportedLocations".equals(fieldName)) {
                    List<AzureLocation> reservedInstanceSupportedLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedWebAppAssessmentOptionsProperties.reservedInstanceSupportedLocations
                        = reservedInstanceSupportedLocations;
                } else if ("reservedInstanceSupportedCurrencies".equals(fieldName)) {
                    List<AzureCurrency> reservedInstanceSupportedCurrencies
                        = reader.readArray(reader1 -> AzureCurrency.fromString(reader1.getString()));
                    deserializedWebAppAssessmentOptionsProperties.reservedInstanceSupportedCurrencies
                        = reservedInstanceSupportedCurrencies;
                } else if ("reservedInstanceSupportedOffers".equals(fieldName)) {
                    List<AzureOfferCode> reservedInstanceSupportedOffers
                        = reader.readArray(reader1 -> AzureOfferCode.fromString(reader1.getString()));
                    deserializedWebAppAssessmentOptionsProperties.reservedInstanceSupportedOffers
                        = reservedInstanceSupportedOffers;
                } else if ("reservedInstanceSupportedWebAppTiers".equals(fieldName)) {
                    List<AzureWebAppTier> reservedInstanceSupportedWebAppTiers
                        = reader.readArray(reader1 -> AzureWebAppTier.fromString(reader1.getString()));
                    deserializedWebAppAssessmentOptionsProperties.reservedInstanceSupportedWebAppTiers
                        = reservedInstanceSupportedWebAppTiers;
                } else if ("savingsPlanSupportedWebAppTiers".equals(fieldName)) {
                    List<AzureWebAppTier> savingsPlanSupportedWebAppTiers
                        = reader.readArray(reader1 -> AzureWebAppTier.fromString(reader1.getString()));
                    deserializedWebAppAssessmentOptionsProperties.savingsPlanSupportedWebAppTiers
                        = savingsPlanSupportedWebAppTiers;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebAppAssessmentOptionsProperties;
        });
    }
}

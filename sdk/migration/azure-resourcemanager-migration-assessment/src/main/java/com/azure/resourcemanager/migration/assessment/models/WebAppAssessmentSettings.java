// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Web app assessment settings class.
 */
@Fluent
public final class WebAppAssessmentSettings implements JsonSerializable<WebAppAssessmentSettings> {
    /*
     * Azure Location or Azure region where to which the machines will be migrated.
     */
    private String azureLocation;

    /*
     * Currency in which prices should be reported.
     */
    private AzureCurrency currency;

    /*
     * Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     */
    private Float scalingFactor;

    /*
     * Custom discount percentage.
     */
    private Float discountPercentage;

    /*
     * Assessment sizing criterion.
     */
    private AssessmentSizingCriterion sizingCriterion;

    /*
     * Gets or sets the performance data.
     */
    private PerformanceData performanceData;

    /*
     * Gets or sets the savings settings.
     */
    private SavingsSettings savingsSettings;

    /*
     * Gets or sets the billing settings.
     */
    private BillingSettings billingSettings;

    /*
     * Gets or sets user configurable setting to display the environment type.
     */
    private EnvironmentType environmentType;

    /*
     * App Service native settings.
     */
    private AppSvcNativeSettings appSvcNativeSettings;

    /*
     * App Service container settings.
     */
    private AppSvcContainerSettings appSvcContainerSettings;

    /*
     * Azure security offering type.
     */
    private AzureSecurityOfferingType azureSecurityOfferingType;

    /**
     * Creates an instance of WebAppAssessmentSettings class.
     */
    public WebAppAssessmentSettings() {
    }

    /**
     * Get the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @return the azureLocation value.
     */
    public String azureLocation() {
        return this.azureLocation;
    }

    /**
     * Set the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @param azureLocation the azureLocation value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withAzureLocation(String azureLocation) {
        this.azureLocation = azureLocation;
        return this;
    }

    /**
     * Get the currency property: Currency in which prices should be reported.
     * 
     * @return the currency value.
     */
    public AzureCurrency currency() {
        return this.currency;
    }

    /**
     * Set the currency property: Currency in which prices should be reported.
     * 
     * @param currency the currency value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withCurrency(AzureCurrency currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @return the scalingFactor value.
     */
    public Float scalingFactor() {
        return this.scalingFactor;
    }

    /**
     * Set the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @param scalingFactor the scalingFactor value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withScalingFactor(Float scalingFactor) {
        this.scalingFactor = scalingFactor;
        return this;
    }

    /**
     * Get the discountPercentage property: Custom discount percentage.
     * 
     * @return the discountPercentage value.
     */
    public Float discountPercentage() {
        return this.discountPercentage;
    }

    /**
     * Set the discountPercentage property: Custom discount percentage.
     * 
     * @param discountPercentage the discountPercentage value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withDiscountPercentage(Float discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }

    /**
     * Get the sizingCriterion property: Assessment sizing criterion.
     * 
     * @return the sizingCriterion value.
     */
    public AssessmentSizingCriterion sizingCriterion() {
        return this.sizingCriterion;
    }

    /**
     * Set the sizingCriterion property: Assessment sizing criterion.
     * 
     * @param sizingCriterion the sizingCriterion value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withSizingCriterion(AssessmentSizingCriterion sizingCriterion) {
        this.sizingCriterion = sizingCriterion;
        return this;
    }

    /**
     * Get the performanceData property: Gets or sets the performance data.
     * 
     * @return the performanceData value.
     */
    public PerformanceData performanceData() {
        return this.performanceData;
    }

    /**
     * Set the performanceData property: Gets or sets the performance data.
     * 
     * @param performanceData the performanceData value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withPerformanceData(PerformanceData performanceData) {
        this.performanceData = performanceData;
        return this;
    }

    /**
     * Get the savingsSettings property: Gets or sets the savings settings.
     * 
     * @return the savingsSettings value.
     */
    public SavingsSettings savingsSettings() {
        return this.savingsSettings;
    }

    /**
     * Set the savingsSettings property: Gets or sets the savings settings.
     * 
     * @param savingsSettings the savingsSettings value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withSavingsSettings(SavingsSettings savingsSettings) {
        this.savingsSettings = savingsSettings;
        return this;
    }

    /**
     * Get the billingSettings property: Gets or sets the billing settings.
     * 
     * @return the billingSettings value.
     */
    public BillingSettings billingSettings() {
        return this.billingSettings;
    }

    /**
     * Set the billingSettings property: Gets or sets the billing settings.
     * 
     * @param billingSettings the billingSettings value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withBillingSettings(BillingSettings billingSettings) {
        this.billingSettings = billingSettings;
        return this;
    }

    /**
     * Get the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @return the environmentType value.
     */
    public EnvironmentType environmentType() {
        return this.environmentType;
    }

    /**
     * Set the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @param environmentType the environmentType value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withEnvironmentType(EnvironmentType environmentType) {
        this.environmentType = environmentType;
        return this;
    }

    /**
     * Get the appSvcNativeSettings property: App Service native settings.
     * 
     * @return the appSvcNativeSettings value.
     */
    public AppSvcNativeSettings appSvcNativeSettings() {
        return this.appSvcNativeSettings;
    }

    /**
     * Set the appSvcNativeSettings property: App Service native settings.
     * 
     * @param appSvcNativeSettings the appSvcNativeSettings value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withAppSvcNativeSettings(AppSvcNativeSettings appSvcNativeSettings) {
        this.appSvcNativeSettings = appSvcNativeSettings;
        return this;
    }

    /**
     * Get the appSvcContainerSettings property: App Service container settings.
     * 
     * @return the appSvcContainerSettings value.
     */
    public AppSvcContainerSettings appSvcContainerSettings() {
        return this.appSvcContainerSettings;
    }

    /**
     * Set the appSvcContainerSettings property: App Service container settings.
     * 
     * @param appSvcContainerSettings the appSvcContainerSettings value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withAppSvcContainerSettings(AppSvcContainerSettings appSvcContainerSettings) {
        this.appSvcContainerSettings = appSvcContainerSettings;
        return this;
    }

    /**
     * Get the azureSecurityOfferingType property: Azure security offering type.
     * 
     * @return the azureSecurityOfferingType value.
     */
    public AzureSecurityOfferingType azureSecurityOfferingType() {
        return this.azureSecurityOfferingType;
    }

    /**
     * Set the azureSecurityOfferingType property: Azure security offering type.
     * 
     * @param azureSecurityOfferingType the azureSecurityOfferingType value to set.
     * @return the WebAppAssessmentSettings object itself.
     */
    public WebAppAssessmentSettings withAzureSecurityOfferingType(AzureSecurityOfferingType azureSecurityOfferingType) {
        this.azureSecurityOfferingType = azureSecurityOfferingType;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (performanceData() != null) {
            performanceData().validate();
        }
        if (savingsSettings() != null) {
            savingsSettings().validate();
        }
        if (billingSettings() != null) {
            billingSettings().validate();
        }
        if (appSvcNativeSettings() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property appSvcNativeSettings in model WebAppAssessmentSettings"));
        } else {
            appSvcNativeSettings().validate();
        }
        if (appSvcContainerSettings() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property appSvcContainerSettings in model WebAppAssessmentSettings"));
        } else {
            appSvcContainerSettings().validate();
        }
        if (azureSecurityOfferingType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property azureSecurityOfferingType in model WebAppAssessmentSettings"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(WebAppAssessmentSettings.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("appSvcNativeSettings", this.appSvcNativeSettings);
        jsonWriter.writeJsonField("appSvcContainerSettings", this.appSvcContainerSettings);
        jsonWriter.writeStringField("azureSecurityOfferingType",
            this.azureSecurityOfferingType == null ? null : this.azureSecurityOfferingType.toString());
        jsonWriter.writeStringField("azureLocation", this.azureLocation);
        jsonWriter.writeStringField("currency", this.currency == null ? null : this.currency.toString());
        jsonWriter.writeNumberField("scalingFactor", this.scalingFactor);
        jsonWriter.writeNumberField("discountPercentage", this.discountPercentage);
        jsonWriter.writeStringField("sizingCriterion",
            this.sizingCriterion == null ? null : this.sizingCriterion.toString());
        jsonWriter.writeJsonField("performanceData", this.performanceData);
        jsonWriter.writeJsonField("savingsSettings", this.savingsSettings);
        jsonWriter.writeJsonField("billingSettings", this.billingSettings);
        jsonWriter.writeStringField("environmentType",
            this.environmentType == null ? null : this.environmentType.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebAppAssessmentSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebAppAssessmentSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the WebAppAssessmentSettings.
     */
    public static WebAppAssessmentSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebAppAssessmentSettings deserializedWebAppAssessmentSettings = new WebAppAssessmentSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("appSvcNativeSettings".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.appSvcNativeSettings = AppSvcNativeSettings.fromJson(reader);
                } else if ("appSvcContainerSettings".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.appSvcContainerSettings
                        = AppSvcContainerSettings.fromJson(reader);
                } else if ("azureSecurityOfferingType".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.azureSecurityOfferingType
                        = AzureSecurityOfferingType.fromString(reader.getString());
                } else if ("azureLocation".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.azureLocation = reader.getString();
                } else if ("currency".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.currency = AzureCurrency.fromString(reader.getString());
                } else if ("scalingFactor".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.scalingFactor = reader.getNullable(JsonReader::getFloat);
                } else if ("discountPercentage".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.discountPercentage = reader.getNullable(JsonReader::getFloat);
                } else if ("sizingCriterion".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.sizingCriterion
                        = AssessmentSizingCriterion.fromString(reader.getString());
                } else if ("performanceData".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.performanceData = PerformanceData.fromJson(reader);
                } else if ("savingsSettings".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.savingsSettings = SavingsSettings.fromJson(reader);
                } else if ("billingSettings".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.billingSettings = BillingSettings.fromJson(reader);
                } else if ("environmentType".equals(fieldName)) {
                    deserializedWebAppAssessmentSettings.environmentType
                        = EnvironmentType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebAppAssessmentSettings;
        });
    }
}

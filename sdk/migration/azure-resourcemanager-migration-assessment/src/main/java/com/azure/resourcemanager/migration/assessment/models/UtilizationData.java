// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The SQL on premises utilization insights.
 */
@Immutable
public final class UtilizationData implements JsonSerializable<UtilizationData> {
    /*
     * The number of active entities.
     */
    private Integer numberOfActiveEntities;

    /*
     * The number of inactive entities.
     */
    private Integer numberOfInactiveEntities;

    /*
     * The number of decommission entities.
     */
    private Integer numberOfDecommisionEntities;

    /*
     * The number of unknown entities.
     */
    private Integer numberOfUnknownEntities;

    /**
     * Creates an instance of UtilizationData class.
     */
    public UtilizationData() {
    }

    /**
     * Get the numberOfActiveEntities property: The number of active entities.
     * 
     * @return the numberOfActiveEntities value.
     */
    public Integer numberOfActiveEntities() {
        return this.numberOfActiveEntities;
    }

    /**
     * Get the numberOfInactiveEntities property: The number of inactive entities.
     * 
     * @return the numberOfInactiveEntities value.
     */
    public Integer numberOfInactiveEntities() {
        return this.numberOfInactiveEntities;
    }

    /**
     * Get the numberOfDecommisionEntities property: The number of decommission entities.
     * 
     * @return the numberOfDecommisionEntities value.
     */
    public Integer numberOfDecommisionEntities() {
        return this.numberOfDecommisionEntities;
    }

    /**
     * Get the numberOfUnknownEntities property: The number of unknown entities.
     * 
     * @return the numberOfUnknownEntities value.
     */
    public Integer numberOfUnknownEntities() {
        return this.numberOfUnknownEntities;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UtilizationData from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UtilizationData if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the UtilizationData.
     */
    public static UtilizationData fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UtilizationData deserializedUtilizationData = new UtilizationData();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("numberOfActiveEntities".equals(fieldName)) {
                    deserializedUtilizationData.numberOfActiveEntities = reader.getNullable(JsonReader::getInt);
                } else if ("numberOfInactiveEntities".equals(fieldName)) {
                    deserializedUtilizationData.numberOfInactiveEntities = reader.getNullable(JsonReader::getInt);
                } else if ("numberOfDecommisionEntities".equals(fieldName)) {
                    deserializedUtilizationData.numberOfDecommisionEntities = reader.getNullable(JsonReader::getInt);
                } else if ("numberOfUnknownEntities".equals(fieldName)) {
                    deserializedUtilizationData.numberOfUnknownEntities = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUtilizationData;
        });
    }
}

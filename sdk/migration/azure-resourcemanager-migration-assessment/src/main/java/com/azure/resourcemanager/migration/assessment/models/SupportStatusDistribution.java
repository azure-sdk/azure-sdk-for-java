// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Support Status Distribution.
 */
@Immutable
public final class SupportStatusDistribution implements JsonSerializable<SupportStatusDistribution> {
    /*
     * Unknown support.
     */
    private Integer unknownSupport;

    /*
     * Mainstream support.
     */
    private Integer mainStream;

    /*
     * Extended support.
     */
    private Integer extended;

    /*
     * Out of support.
     */
    private Integer outOfSupport;

    /**
     * Creates an instance of SupportStatusDistribution class.
     */
    public SupportStatusDistribution() {
    }

    /**
     * Get the unknownSupport property: Unknown support.
     * 
     * @return the unknownSupport value.
     */
    public Integer unknownSupport() {
        return this.unknownSupport;
    }

    /**
     * Get the mainStream property: Mainstream support.
     * 
     * @return the mainStream value.
     */
    public Integer mainStream() {
        return this.mainStream;
    }

    /**
     * Get the extended property: Extended support.
     * 
     * @return the extended value.
     */
    public Integer extended() {
        return this.extended;
    }

    /**
     * Get the outOfSupport property: Out of support.
     * 
     * @return the outOfSupport value.
     */
    public Integer outOfSupport() {
        return this.outOfSupport;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SupportStatusDistribution from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SupportStatusDistribution if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SupportStatusDistribution.
     */
    public static SupportStatusDistribution fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SupportStatusDistribution deserializedSupportStatusDistribution = new SupportStatusDistribution();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("unknownSupport".equals(fieldName)) {
                    deserializedSupportStatusDistribution.unknownSupport = reader.getNullable(JsonReader::getInt);
                } else if ("mainStream".equals(fieldName)) {
                    deserializedSupportStatusDistribution.mainStream = reader.getNullable(JsonReader::getInt);
                } else if ("extended".equals(fieldName)) {
                    deserializedSupportStatusDistribution.extended = reader.getNullable(JsonReader::getInt);
                } else if ("outOfSupport".equals(fieldName)) {
                    deserializedSupportStatusDistribution.outOfSupport = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSupportStatusDistribution;
        });
    }
}

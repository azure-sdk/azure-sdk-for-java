// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Target details.
 */
@Immutable
public final class TargetDetails implements JsonSerializable<TargetDetails> {
    /*
     * The target name.
     */
    private AzureTarget targetName;

    /*
     * The target type.
     */
    private MigrateWorkloadType targetType;

    /*
     * The migration platform.
     */
    private MigrationPlatform platform;

    /*
     * The count of a type of source.
     */
    private Integer count;

    /**
     * Creates an instance of TargetDetails class.
     */
    public TargetDetails() {
    }

    /**
     * Get the targetName property: The target name.
     * 
     * @return the targetName value.
     */
    public AzureTarget targetName() {
        return this.targetName;
    }

    /**
     * Get the targetType property: The target type.
     * 
     * @return the targetType value.
     */
    public MigrateWorkloadType targetType() {
        return this.targetType;
    }

    /**
     * Get the platform property: The migration platform.
     * 
     * @return the platform value.
     */
    public MigrationPlatform platform() {
        return this.platform;
    }

    /**
     * Get the count property: The count of a type of source.
     * 
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TargetDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TargetDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the TargetDetails.
     */
    public static TargetDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TargetDetails deserializedTargetDetails = new TargetDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("targetName".equals(fieldName)) {
                    deserializedTargetDetails.targetName = AzureTarget.fromString(reader.getString());
                } else if ("targetType".equals(fieldName)) {
                    deserializedTargetDetails.targetType = MigrateWorkloadType.fromString(reader.getString());
                } else if ("platform".equals(fieldName)) {
                    deserializedTargetDetails.platform = MigrationPlatform.fromString(reader.getString());
                } else if ("count".equals(fieldName)) {
                    deserializedTargetDetails.count = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTargetDetails;
        });
    }
}

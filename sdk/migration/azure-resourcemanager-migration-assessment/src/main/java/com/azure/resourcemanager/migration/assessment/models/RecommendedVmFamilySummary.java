// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The recommended VM family summary.
 */
@Immutable
public final class RecommendedVmFamilySummary implements JsonSerializable<RecommendedVmFamilySummary> {
    /*
     * The Azure VM family.
     */
    private String azureVmFamily;

    /*
     * The number of machines.
     */
    private Integer numberOfMachines;

    /**
     * Creates an instance of RecommendedVmFamilySummary class.
     */
    public RecommendedVmFamilySummary() {
    }

    /**
     * Get the azureVmFamily property: The Azure VM family.
     * 
     * @return the azureVmFamily value.
     */
    public String azureVmFamily() {
        return this.azureVmFamily;
    }

    /**
     * Get the numberOfMachines property: The number of machines.
     * 
     * @return the numberOfMachines value.
     */
    public Integer numberOfMachines() {
        return this.numberOfMachines;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecommendedVmFamilySummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecommendedVmFamilySummary if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RecommendedVmFamilySummary.
     */
    public static RecommendedVmFamilySummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecommendedVmFamilySummary deserializedRecommendedVmFamilySummary = new RecommendedVmFamilySummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureVmFamily".equals(fieldName)) {
                    deserializedRecommendedVmFamilySummary.azureVmFamily = reader.getString();
                } else if ("numberOfMachines".equals(fieldName)) {
                    deserializedRecommendedVmFamilySummary.numberOfMachines = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecommendedVmFamilySummary;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Properties of an assessment.
 */
@Fluent
public final class MachineAssessmentSettings implements JsonSerializable<MachineAssessmentSettings> {
    /*
     * Azure Location or Azure region where to which the machines will be migrated.
     */
    private String azureLocation;

    /*
     * Currency in which prices should be reported.
     */
    private AzureCurrency currency;

    /*
     * Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     */
    private Float scalingFactor;

    /*
     * Custom discount percentage.
     */
    private Float discountPercentage;

    /*
     * Assessment sizing criterion.
     */
    private AssessmentSizingCriterion sizingCriterion;

    /*
     * Gets or sets the performance data.
     */
    private PerformanceData performanceData;

    /*
     * Gets or sets the savings settings.
     */
    private SavingsSettings savingsSettings;

    /*
     * Gets or sets the billing settings.
     */
    private BillingSettings billingSettings;

    /*
     * Gets or sets user configurable setting to display the environment type.
     */
    private EnvironmentType environmentType;

    /*
     * The azure security offering type.
     */
    private AzureSecurityOfferingType azureSecurityOfferingType;

    /*
     * The disk type for the assessment.
     */
    private List<AzureDiskType> azureDiskTypes;

    /*
     * Gets or sets Azure Pricing Tier - Free, Basic, etc.
     */
    private AzurePricingTier azurePricingTier;

    /*
     * Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
     */
    private AzureStorageRedundancy azureStorageRedundancy;

    /*
     * Gets or sets the user configurable setting to display the azure hybrid use
     * benefit.
     */
    private AzureHybridUseBenefit azureHybridUseBenefit;

    /*
     * Gets or sets the user configurable setting to display the linux azure hybrid use
     * benefit.
     */
    private AzureHybridUseBenefit linuxAzureHybridUseBenefit;

    /*
     * Gets or sets the Azure VM families.
     */
    private List<AzureVmFamily> azureVmFamilies;

    /*
     * Gets or sets the duration for which the VMs are up in the on-premises
     * environment.
     */
    private VmUptime vmUptime;

    /**
     * Creates an instance of MachineAssessmentSettings class.
     */
    public MachineAssessmentSettings() {
    }

    /**
     * Get the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @return the azureLocation value.
     */
    public String azureLocation() {
        return this.azureLocation;
    }

    /**
     * Set the azureLocation property: Azure Location or Azure region where to which the machines will be migrated.
     * 
     * @param azureLocation the azureLocation value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withAzureLocation(String azureLocation) {
        this.azureLocation = azureLocation;
        return this;
    }

    /**
     * Get the currency property: Currency in which prices should be reported.
     * 
     * @return the currency value.
     */
    public AzureCurrency currency() {
        return this.currency;
    }

    /**
     * Set the currency property: Currency in which prices should be reported.
     * 
     * @param currency the currency value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withCurrency(AzureCurrency currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @return the scalingFactor value.
     */
    public Float scalingFactor() {
        return this.scalingFactor;
    }

    /**
     * Set the scalingFactor property: Percentage of buffer that user wants on performance metrics when recommending
     * Azure sizes.
     * 
     * @param scalingFactor the scalingFactor value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withScalingFactor(Float scalingFactor) {
        this.scalingFactor = scalingFactor;
        return this;
    }

    /**
     * Get the discountPercentage property: Custom discount percentage.
     * 
     * @return the discountPercentage value.
     */
    public Float discountPercentage() {
        return this.discountPercentage;
    }

    /**
     * Set the discountPercentage property: Custom discount percentage.
     * 
     * @param discountPercentage the discountPercentage value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withDiscountPercentage(Float discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }

    /**
     * Get the sizingCriterion property: Assessment sizing criterion.
     * 
     * @return the sizingCriterion value.
     */
    public AssessmentSizingCriterion sizingCriterion() {
        return this.sizingCriterion;
    }

    /**
     * Set the sizingCriterion property: Assessment sizing criterion.
     * 
     * @param sizingCriterion the sizingCriterion value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withSizingCriterion(AssessmentSizingCriterion sizingCriterion) {
        this.sizingCriterion = sizingCriterion;
        return this;
    }

    /**
     * Get the performanceData property: Gets or sets the performance data.
     * 
     * @return the performanceData value.
     */
    public PerformanceData performanceData() {
        return this.performanceData;
    }

    /**
     * Set the performanceData property: Gets or sets the performance data.
     * 
     * @param performanceData the performanceData value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withPerformanceData(PerformanceData performanceData) {
        this.performanceData = performanceData;
        return this;
    }

    /**
     * Get the savingsSettings property: Gets or sets the savings settings.
     * 
     * @return the savingsSettings value.
     */
    public SavingsSettings savingsSettings() {
        return this.savingsSettings;
    }

    /**
     * Set the savingsSettings property: Gets or sets the savings settings.
     * 
     * @param savingsSettings the savingsSettings value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withSavingsSettings(SavingsSettings savingsSettings) {
        this.savingsSettings = savingsSettings;
        return this;
    }

    /**
     * Get the billingSettings property: Gets or sets the billing settings.
     * 
     * @return the billingSettings value.
     */
    public BillingSettings billingSettings() {
        return this.billingSettings;
    }

    /**
     * Set the billingSettings property: Gets or sets the billing settings.
     * 
     * @param billingSettings the billingSettings value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withBillingSettings(BillingSettings billingSettings) {
        this.billingSettings = billingSettings;
        return this;
    }

    /**
     * Get the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @return the environmentType value.
     */
    public EnvironmentType environmentType() {
        return this.environmentType;
    }

    /**
     * Set the environmentType property: Gets or sets user configurable setting to display the environment type.
     * 
     * @param environmentType the environmentType value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withEnvironmentType(EnvironmentType environmentType) {
        this.environmentType = environmentType;
        return this;
    }

    /**
     * Get the azureSecurityOfferingType property: The azure security offering type.
     * 
     * @return the azureSecurityOfferingType value.
     */
    public AzureSecurityOfferingType azureSecurityOfferingType() {
        return this.azureSecurityOfferingType;
    }

    /**
     * Set the azureSecurityOfferingType property: The azure security offering type.
     * 
     * @param azureSecurityOfferingType the azureSecurityOfferingType value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings
        withAzureSecurityOfferingType(AzureSecurityOfferingType azureSecurityOfferingType) {
        this.azureSecurityOfferingType = azureSecurityOfferingType;
        return this;
    }

    /**
     * Get the azureDiskTypes property: The disk type for the assessment.
     * 
     * @return the azureDiskTypes value.
     */
    public List<AzureDiskType> azureDiskTypes() {
        return this.azureDiskTypes;
    }

    /**
     * Set the azureDiskTypes property: The disk type for the assessment.
     * 
     * @param azureDiskTypes the azureDiskTypes value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withAzureDiskTypes(List<AzureDiskType> azureDiskTypes) {
        this.azureDiskTypes = azureDiskTypes;
        return this;
    }

    /**
     * Get the azurePricingTier property: Gets or sets Azure Pricing Tier - Free, Basic, etc.
     * 
     * @return the azurePricingTier value.
     */
    public AzurePricingTier azurePricingTier() {
        return this.azurePricingTier;
    }

    /**
     * Set the azurePricingTier property: Gets or sets Azure Pricing Tier - Free, Basic, etc.
     * 
     * @param azurePricingTier the azurePricingTier value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withAzurePricingTier(AzurePricingTier azurePricingTier) {
        this.azurePricingTier = azurePricingTier;
        return this;
    }

    /**
     * Get the azureStorageRedundancy property: Gets or sets the Azure Storage Redundancy. Example: Locally Redundant
     * Storage.
     * 
     * @return the azureStorageRedundancy value.
     */
    public AzureStorageRedundancy azureStorageRedundancy() {
        return this.azureStorageRedundancy;
    }

    /**
     * Set the azureStorageRedundancy property: Gets or sets the Azure Storage Redundancy. Example: Locally Redundant
     * Storage.
     * 
     * @param azureStorageRedundancy the azureStorageRedundancy value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withAzureStorageRedundancy(AzureStorageRedundancy azureStorageRedundancy) {
        this.azureStorageRedundancy = azureStorageRedundancy;
        return this;
    }

    /**
     * Get the azureHybridUseBenefit property: Gets or sets the user configurable setting to display the azure hybrid
     * use
     * benefit.
     * 
     * @return the azureHybridUseBenefit value.
     */
    public AzureHybridUseBenefit azureHybridUseBenefit() {
        return this.azureHybridUseBenefit;
    }

    /**
     * Set the azureHybridUseBenefit property: Gets or sets the user configurable setting to display the azure hybrid
     * use
     * benefit.
     * 
     * @param azureHybridUseBenefit the azureHybridUseBenefit value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withAzureHybridUseBenefit(AzureHybridUseBenefit azureHybridUseBenefit) {
        this.azureHybridUseBenefit = azureHybridUseBenefit;
        return this;
    }

    /**
     * Get the linuxAzureHybridUseBenefit property: Gets or sets the user configurable setting to display the linux
     * azure hybrid use
     * benefit.
     * 
     * @return the linuxAzureHybridUseBenefit value.
     */
    public AzureHybridUseBenefit linuxAzureHybridUseBenefit() {
        return this.linuxAzureHybridUseBenefit;
    }

    /**
     * Set the linuxAzureHybridUseBenefit property: Gets or sets the user configurable setting to display the linux
     * azure hybrid use
     * benefit.
     * 
     * @param linuxAzureHybridUseBenefit the linuxAzureHybridUseBenefit value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withLinuxAzureHybridUseBenefit(AzureHybridUseBenefit linuxAzureHybridUseBenefit) {
        this.linuxAzureHybridUseBenefit = linuxAzureHybridUseBenefit;
        return this;
    }

    /**
     * Get the azureVmFamilies property: Gets or sets the Azure VM families.
     * 
     * @return the azureVmFamilies value.
     */
    public List<AzureVmFamily> azureVmFamilies() {
        return this.azureVmFamilies;
    }

    /**
     * Set the azureVmFamilies property: Gets or sets the Azure VM families.
     * 
     * @param azureVmFamilies the azureVmFamilies value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withAzureVmFamilies(List<AzureVmFamily> azureVmFamilies) {
        this.azureVmFamilies = azureVmFamilies;
        return this;
    }

    /**
     * Get the vmUptime property: Gets or sets the duration for which the VMs are up in the on-premises
     * environment.
     * 
     * @return the vmUptime value.
     */
    public VmUptime vmUptime() {
        return this.vmUptime;
    }

    /**
     * Set the vmUptime property: Gets or sets the duration for which the VMs are up in the on-premises
     * environment.
     * 
     * @param vmUptime the vmUptime value to set.
     * @return the MachineAssessmentSettings object itself.
     */
    public MachineAssessmentSettings withVmUptime(VmUptime vmUptime) {
        this.vmUptime = vmUptime;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (performanceData() != null) {
            performanceData().validate();
        }
        if (savingsSettings() != null) {
            savingsSettings().validate();
        }
        if (billingSettings() != null) {
            billingSettings().validate();
        }
        if (vmUptime() != null) {
            vmUptime().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureLocation", this.azureLocation);
        jsonWriter.writeStringField("currency", this.currency == null ? null : this.currency.toString());
        jsonWriter.writeNumberField("scalingFactor", this.scalingFactor);
        jsonWriter.writeNumberField("discountPercentage", this.discountPercentage);
        jsonWriter.writeStringField("sizingCriterion",
            this.sizingCriterion == null ? null : this.sizingCriterion.toString());
        jsonWriter.writeJsonField("performanceData", this.performanceData);
        jsonWriter.writeJsonField("savingsSettings", this.savingsSettings);
        jsonWriter.writeJsonField("billingSettings", this.billingSettings);
        jsonWriter.writeStringField("environmentType",
            this.environmentType == null ? null : this.environmentType.toString());
        jsonWriter.writeStringField("azureSecurityOfferingType",
            this.azureSecurityOfferingType == null ? null : this.azureSecurityOfferingType.toString());
        jsonWriter.writeArrayField("azureDiskTypes", this.azureDiskTypes,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeStringField("azurePricingTier",
            this.azurePricingTier == null ? null : this.azurePricingTier.toString());
        jsonWriter.writeStringField("azureStorageRedundancy",
            this.azureStorageRedundancy == null ? null : this.azureStorageRedundancy.toString());
        jsonWriter.writeStringField("azureHybridUseBenefit",
            this.azureHybridUseBenefit == null ? null : this.azureHybridUseBenefit.toString());
        jsonWriter.writeStringField("linuxAzureHybridUseBenefit",
            this.linuxAzureHybridUseBenefit == null ? null : this.linuxAzureHybridUseBenefit.toString());
        jsonWriter.writeArrayField("azureVmFamilies", this.azureVmFamilies,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        jsonWriter.writeJsonField("vmUptime", this.vmUptime);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MachineAssessmentSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MachineAssessmentSettings if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MachineAssessmentSettings.
     */
    public static MachineAssessmentSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MachineAssessmentSettings deserializedMachineAssessmentSettings = new MachineAssessmentSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureLocation".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.azureLocation = reader.getString();
                } else if ("currency".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.currency = AzureCurrency.fromString(reader.getString());
                } else if ("scalingFactor".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.scalingFactor = reader.getNullable(JsonReader::getFloat);
                } else if ("discountPercentage".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.discountPercentage = reader.getNullable(JsonReader::getFloat);
                } else if ("sizingCriterion".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.sizingCriterion
                        = AssessmentSizingCriterion.fromString(reader.getString());
                } else if ("performanceData".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.performanceData = PerformanceData.fromJson(reader);
                } else if ("savingsSettings".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.savingsSettings = SavingsSettings.fromJson(reader);
                } else if ("billingSettings".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.billingSettings = BillingSettings.fromJson(reader);
                } else if ("environmentType".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.environmentType
                        = EnvironmentType.fromString(reader.getString());
                } else if ("azureSecurityOfferingType".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.azureSecurityOfferingType
                        = AzureSecurityOfferingType.fromString(reader.getString());
                } else if ("azureDiskTypes".equals(fieldName)) {
                    List<AzureDiskType> azureDiskTypes
                        = reader.readArray(reader1 -> AzureDiskType.fromString(reader1.getString()));
                    deserializedMachineAssessmentSettings.azureDiskTypes = azureDiskTypes;
                } else if ("azurePricingTier".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.azurePricingTier
                        = AzurePricingTier.fromString(reader.getString());
                } else if ("azureStorageRedundancy".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.azureStorageRedundancy
                        = AzureStorageRedundancy.fromString(reader.getString());
                } else if ("azureHybridUseBenefit".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.azureHybridUseBenefit
                        = AzureHybridUseBenefit.fromString(reader.getString());
                } else if ("linuxAzureHybridUseBenefit".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.linuxAzureHybridUseBenefit
                        = AzureHybridUseBenefit.fromString(reader.getString());
                } else if ("azureVmFamilies".equals(fieldName)) {
                    List<AzureVmFamily> azureVmFamilies
                        = reader.readArray(reader1 -> AzureVmFamily.fromString(reader1.getString()));
                    deserializedMachineAssessmentSettings.azureVmFamilies = azureVmFamilies;
                } else if ("vmUptime".equals(fieldName)) {
                    deserializedMachineAssessmentSettings.vmUptime = VmUptime.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMachineAssessmentSettings;
        });
    }
}

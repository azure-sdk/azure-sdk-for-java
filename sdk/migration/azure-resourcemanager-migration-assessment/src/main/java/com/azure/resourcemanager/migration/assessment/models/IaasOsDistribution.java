// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Shows the infrastructure as a service machine OS distribution.
 */
@Immutable
public final class IaasOsDistribution implements JsonSerializable<IaasOsDistribution> {
    /*
     * Number of Windows servers.
     */
    private Integer windows;

    /*
     * Number of Linux servers.
     */
    private Integer linux;

    /*
     * Number of servers neither Windows or Linux.
     */
    private Integer other;

    /**
     * Creates an instance of IaasOsDistribution class.
     */
    public IaasOsDistribution() {
    }

    /**
     * Get the windows property: Number of Windows servers.
     * 
     * @return the windows value.
     */
    public Integer windows() {
        return this.windows;
    }

    /**
     * Get the linux property: Number of Linux servers.
     * 
     * @return the linux value.
     */
    public Integer linux() {
        return this.linux;
    }

    /**
     * Get the other property: Number of servers neither Windows or Linux.
     * 
     * @return the other value.
     */
    public Integer other() {
        return this.other;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IaasOsDistribution from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IaasOsDistribution if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the IaasOsDistribution.
     */
    public static IaasOsDistribution fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IaasOsDistribution deserializedIaasOsDistribution = new IaasOsDistribution();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("windows".equals(fieldName)) {
                    deserializedIaasOsDistribution.windows = reader.getNullable(JsonReader::getInt);
                } else if ("linux".equals(fieldName)) {
                    deserializedIaasOsDistribution.linux = reader.getNullable(JsonReader::getInt);
                } else if ("other".equals(fieldName)) {
                    deserializedIaasOsDistribution.other = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIaasOsDistribution;
        });
    }
}

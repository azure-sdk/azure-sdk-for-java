// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.migration.assessment.fluent.EvaluatedSqlEntitiesOperationsClient;
import com.azure.resourcemanager.migration.assessment.fluent.models.EvaluatedSqlEntityInner;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedSqlEntitiesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedSqlEntity;

public final class EvaluatedSqlEntitiesOperationsImpl implements EvaluatedSqlEntitiesOperations {
    private static final ClientLogger LOGGER = new ClientLogger(EvaluatedSqlEntitiesOperationsImpl.class);

    private final EvaluatedSqlEntitiesOperationsClient innerClient;

    private final com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager;

    public EvaluatedSqlEntitiesOperationsImpl(EvaluatedSqlEntitiesOperationsClient innerClient,
        com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<EvaluatedSqlEntity> listByBusinessCase(String resourceGroupName, String projectName,
        String businessCaseName) {
        PagedIterable<EvaluatedSqlEntityInner> inner
            = this.serviceClient().listByBusinessCase(resourceGroupName, projectName, businessCaseName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EvaluatedSqlEntityImpl(inner1, this.manager()));
    }

    public PagedIterable<EvaluatedSqlEntity> listByBusinessCase(String resourceGroupName, String projectName,
        String businessCaseName, String filter, Integer pageSize, String continuationToken, Integer totalRecordCount,
        Context context) {
        PagedIterable<EvaluatedSqlEntityInner> inner = this.serviceClient()
            .listByBusinessCase(resourceGroupName, projectName, businessCaseName, filter, pageSize, continuationToken,
                totalRecordCount, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new EvaluatedSqlEntityImpl(inner1, this.manager()));
    }

    public Response<EvaluatedSqlEntity> getWithResponse(String resourceGroupName, String projectName,
        String businessCaseName, String evaluatedSqlEntityName, Context context) {
        Response<EvaluatedSqlEntityInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, projectName, businessCaseName, evaluatedSqlEntityName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new EvaluatedSqlEntityImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public EvaluatedSqlEntity get(String resourceGroupName, String projectName, String businessCaseName,
        String evaluatedSqlEntityName) {
        EvaluatedSqlEntityInner inner
            = this.serviceClient().get(resourceGroupName, projectName, businessCaseName, evaluatedSqlEntityName);
        if (inner != null) {
            return new EvaluatedSqlEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private EvaluatedSqlEntitiesOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.migration.assessment.MigrationAssessmentManager manager() {
        return this.serviceManager;
    }
}

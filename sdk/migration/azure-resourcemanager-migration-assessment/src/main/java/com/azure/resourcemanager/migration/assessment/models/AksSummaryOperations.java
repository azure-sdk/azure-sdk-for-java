// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of AksSummaryOperations.
 */
public interface AksSummaryOperations {
    /**
     * List AKSSummary resources by AKSAssessment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName AKS Assessment Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AKSSummary list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AksSummary> listByParent(String resourceGroupName, String projectName, String assessmentName);

    /**
     * List AKSSummary resources by AKSAssessment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName AKS Assessment Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AKSSummary list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AksSummary> listByParent(String resourceGroupName, String projectName, String assessmentName,
        Context context);

    /**
     * Get a AKSSummary.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName AKS Assessment Name.
     * @param summaryName AKS Assessment Summary Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AKSSummary along with {@link Response}.
     */
    Response<AksSummary> getWithResponse(String resourceGroupName, String projectName, String assessmentName,
        String summaryName, Context context);

    /**
     * Get a AKSSummary.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param projectName Assessment Project Name.
     * @param assessmentName AKS Assessment Name.
     * @param summaryName AKS Assessment Summary Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AKSSummary.
     */
    AksSummary get(String resourceGroupName, String projectName, String assessmentName, String summaryName);
}

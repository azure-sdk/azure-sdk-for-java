// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Business case Currency.
 */
public final class BusinessCaseCurrency extends ExpandableStringEnum<BusinessCaseCurrency> {
    /**
     * Static value Unknown for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency UNKNOWN = fromString("Unknown");

    /**
     * Static value USD for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency USD = fromString("USD");

    /**
     * Static value DKK for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency DKK = fromString("DKK");

    /**
     * Static value CAD for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency CAD = fromString("CAD");

    /**
     * Static value IDR for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency IDR = fromString("IDR");

    /**
     * Static value JPY for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency JPY = fromString("JPY");

    /**
     * Static value KRW for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency KRW = fromString("KRW");

    /**
     * Static value NZD for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency NZD = fromString("NZD");

    /**
     * Static value NOK for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency NOK = fromString("NOK");

    /**
     * Static value RUB for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency RUB = fromString("RUB");

    /**
     * Static value SAR for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency SAR = fromString("SAR");

    /**
     * Static value ZAR for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency ZAR = fromString("ZAR");

    /**
     * Static value SEK for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency SEK = fromString("SEK");

    /**
     * Static value TRY for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency TRY = fromString("TRY");

    /**
     * Static value GBP for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency GBP = fromString("GBP");

    /**
     * Static value MXN for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency MXN = fromString("MXN");

    /**
     * Static value MYR for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency MYR = fromString("MYR");

    /**
     * Static value INR for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency INR = fromString("INR");

    /**
     * Static value HKD for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency HKD = fromString("HKD");

    /**
     * Static value BRL for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency BRL = fromString("BRL");

    /**
     * Static value TWD for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency TWD = fromString("TWD");

    /**
     * Static value EUR for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency EUR = fromString("EUR");

    /**
     * Static value CHF for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency CHF = fromString("CHF");

    /**
     * Static value ARS for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency ARS = fromString("ARS");

    /**
     * Static value AUD for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency AUD = fromString("AUD");

    /**
     * Static value CNY for BusinessCaseCurrency.
     */
    public static final BusinessCaseCurrency CNY = fromString("CNY");

    /**
     * Creates a new instance of BusinessCaseCurrency value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public BusinessCaseCurrency() {
    }

    /**
     * Creates or finds a BusinessCaseCurrency from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding BusinessCaseCurrency.
     */
    public static BusinessCaseCurrency fromString(String name) {
        return fromString(name, BusinessCaseCurrency.class);
    }

    /**
     * Gets known BusinessCaseCurrency values.
     * 
     * @return known BusinessCaseCurrency values.
     */
    public static Collection<BusinessCaseCurrency> values() {
        return values(BusinessCaseCurrency.class);
    }
}

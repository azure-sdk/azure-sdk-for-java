// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Web app target options.
 */
@Fluent
public final class WebAppTargetOptions implements JsonSerializable<WebAppTargetOptions> {
    /*
     * Gets or sets the Azure web app tier.
     */
    private AzureWebAppTier webAppTier;

    /*
     * Gets or sets the target location.
     */
    private List<AzureLocation> targetLocations;

    /**
     * Creates an instance of WebAppTargetOptions class.
     */
    public WebAppTargetOptions() {
    }

    /**
     * Get the webAppTier property: Gets or sets the Azure web app tier.
     * 
     * @return the webAppTier value.
     */
    public AzureWebAppTier webAppTier() {
        return this.webAppTier;
    }

    /**
     * Set the webAppTier property: Gets or sets the Azure web app tier.
     * 
     * @param webAppTier the webAppTier value to set.
     * @return the WebAppTargetOptions object itself.
     */
    public WebAppTargetOptions withWebAppTier(AzureWebAppTier webAppTier) {
        this.webAppTier = webAppTier;
        return this;
    }

    /**
     * Get the targetLocations property: Gets or sets the target location.
     * 
     * @return the targetLocations value.
     */
    public List<AzureLocation> targetLocations() {
        return this.targetLocations;
    }

    /**
     * Set the targetLocations property: Gets or sets the target location.
     * 
     * @param targetLocations the targetLocations value to set.
     * @return the WebAppTargetOptions object itself.
     */
    public WebAppTargetOptions withTargetLocations(List<AzureLocation> targetLocations) {
        this.targetLocations = targetLocations;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("webAppTier", this.webAppTier == null ? null : this.webAppTier.toString());
        jsonWriter.writeArrayField("targetLocations", this.targetLocations,
            (writer, element) -> writer.writeString(element == null ? null : element.toString()));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WebAppTargetOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WebAppTargetOptions if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the WebAppTargetOptions.
     */
    public static WebAppTargetOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WebAppTargetOptions deserializedWebAppTargetOptions = new WebAppTargetOptions();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("webAppTier".equals(fieldName)) {
                    deserializedWebAppTargetOptions.webAppTier = AzureWebAppTier.fromString(reader.getString());
                } else if ("targetLocations".equals(fieldName)) {
                    List<AzureLocation> targetLocations
                        = reader.readArray(reader1 -> AzureLocation.fromString(reader1.getString()));
                    deserializedWebAppTargetOptions.targetLocations = targetLocations;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWebAppTargetOptions;
        });
    }
}

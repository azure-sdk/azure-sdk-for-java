// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Iaas summary properties class.
 */
@Immutable
public final class IaasSummaryProperties implements JsonSerializable<IaasSummaryProperties> {
    /*
     * The Azure IaaS summary.
     */
    private AzureIaasSummary azureIaasSummary;

    /*
     * The on premises IaaS summary.
     */
    private OnPremisesIaasSummary onPremisesIaasSummary;

    /**
     * Creates an instance of IaasSummaryProperties class.
     */
    public IaasSummaryProperties() {
    }

    /**
     * Get the azureIaasSummary property: The Azure IaaS summary.
     * 
     * @return the azureIaasSummary value.
     */
    public AzureIaasSummary azureIaasSummary() {
        return this.azureIaasSummary;
    }

    /**
     * Get the onPremisesIaasSummary property: The on premises IaaS summary.
     * 
     * @return the onPremisesIaasSummary value.
     */
    public OnPremisesIaasSummary onPremisesIaasSummary() {
        return this.onPremisesIaasSummary;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (azureIaasSummary() != null) {
            azureIaasSummary().validate();
        }
        if (onPremisesIaasSummary() != null) {
            onPremisesIaasSummary().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IaasSummaryProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IaasSummaryProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the IaasSummaryProperties.
     */
    public static IaasSummaryProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IaasSummaryProperties deserializedIaasSummaryProperties = new IaasSummaryProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureIaasSummary".equals(fieldName)) {
                    deserializedIaasSummaryProperties.azureIaasSummary = AzureIaasSummary.fromJson(reader);
                } else if ("onPremisesIaasSummary".equals(fieldName)) {
                    deserializedIaasSummaryProperties.onPremisesIaasSummary = OnPremisesIaasSummary.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIaasSummaryProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.migration.assessment.fluent.MigrationAssessmentManagementClient;
import com.azure.resourcemanager.migration.assessment.implementation.AksAssessmentOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksClusterOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksCostDetailOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedMachinesV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlDatabaseV3OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlInstanceV3OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlMachinesV3OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedWebApplicationOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedWebAppsV3OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessmentProjectSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessmentProjectsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsAssessedMachinesV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsAssessmentV2SummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsAssessmentsV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsGraphAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseAvsSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseIaasSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseOverviewSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCasePaasSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.CompoundAssessmentOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.CompoundAssessmentSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedAvsMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedSqlEntitiesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedWebAppsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.HeterogeneousAssessmentOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.HeterogeneousAssessmentSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.HypervCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.ImportCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.ImportSqlCollectorOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.MachineAssessmentV2SummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.MachineAssessmentsV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.MachineGraphAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.MigrationAssessmentManagementClientBuilder;
import com.azure.resourcemanager.migration.assessment.implementation.OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.PrivateEndpointConnectionOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.PrivateLinkResourceOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.ServerCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlAssessmentV3OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlAssessmentV3SummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlCollectorOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlGraphAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.VmwareCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppAssessmentV3OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppAssessmentV3SummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppCollectorOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppGraphAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppServicePlansOperationsImpl;
import com.azure.resourcemanager.migration.assessment.models.AksAssessmentOperations;
import com.azure.resourcemanager.migration.assessment.models.AksClusterOperations;
import com.azure.resourcemanager.migration.assessment.models.AksCostDetailOperations;
import com.azure.resourcemanager.migration.assessment.models.AksOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.AksSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessedMachinesV2Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlDatabaseV3Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlInstanceV3Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlMachinesV3Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedWebApplicationOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessedWebAppsV3Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectsOperations;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessedMachinesV2Operations;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentV2SummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentsV2Operations;
import com.azure.resourcemanager.migration.assessment.models.AvsGraphAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseAvsSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseIaasSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseOverviewSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCasePaasSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.CompoundAssessmentOperations;
import com.azure.resourcemanager.migration.assessment.models.CompoundAssessmentSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedAvsMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedSqlEntitiesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedWebAppsOperations;
import com.azure.resourcemanager.migration.assessment.models.HeterogeneousAssessmentOperations;
import com.azure.resourcemanager.migration.assessment.models.HeterogeneousAssessmentSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.HypervCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.ImportCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.ImportSqlCollectorOperations;
import com.azure.resourcemanager.migration.assessment.models.MachineAssessmentV2SummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.MachineAssessmentsV2Operations;
import com.azure.resourcemanager.migration.assessment.models.MachineGraphAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.Operations;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointConnectionOperations;
import com.azure.resourcemanager.migration.assessment.models.PrivateLinkResourceOperations;
import com.azure.resourcemanager.migration.assessment.models.ServerCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentV3Operations;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentV3SummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.SqlCollectorOperations;
import com.azure.resourcemanager.migration.assessment.models.SqlGraphAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.VmwareCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppAssessmentV3Operations;
import com.azure.resourcemanager.migration.assessment.models.WebAppAssessmentV3SummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppCollectorOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppGraphAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppServicePlansOperations;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Entry point to MigrationAssessmentManager.
 * Azure Migrate Resource Provider management API.
 */
public final class MigrationAssessmentManager {
    private Operations operations;

    private AssessmentProjectsOperations assessmentProjectsOperations;

    private PrivateEndpointConnectionOperations privateEndpointConnectionOperations;

    private PrivateLinkResourceOperations privateLinkResourceOperations;

    private AssessmentProjectSummaryOperations assessmentProjectSummaryOperations;

    private AvsGraphAssessmentOptionsOperations avsGraphAssessmentOptionsOperations;

    private AvsAssessmentsV2Operations avsAssessmentsV2Operations;

    private AvsAssessedMachinesV2Operations avsAssessedMachinesV2Operations;

    private AvsAssessmentV2SummaryOperations avsAssessmentV2SummaryOperations;

    private HeterogeneousAssessmentOperations heterogeneousAssessmentOperations;

    private HeterogeneousAssessmentSummaryOperations heterogeneousAssessmentSummaryOperations;

    private MachineGraphAssessmentOptionsOperations machineGraphAssessmentOptionsOperations;

    private MachineAssessmentsV2Operations machineAssessmentsV2Operations;

    private AssessedMachinesV2Operations assessedMachinesV2Operations;

    private MachineAssessmentV2SummaryOperations machineAssessmentV2SummaryOperations;

    private SqlGraphAssessmentOptionsOperations sqlGraphAssessmentOptionsOperations;

    private SqlAssessmentV3Operations sqlAssessmentV3Operations;

    private AssessedSqlDatabaseV3Operations assessedSqlDatabaseV3Operations;

    private AssessedSqlInstanceV3Operations assessedSqlInstanceV3Operations;

    private AssessedSqlMachinesV3Operations assessedSqlMachinesV3Operations;

    private SqlAssessmentV3SummaryOperations sqlAssessmentV3SummaryOperations;

    private BusinessCaseOperations businessCaseOperations;

    private BusinessCaseAvsSummaryOperations businessCaseAvsSummaryOperations;

    private EvaluatedAvsMachinesOperations evaluatedAvsMachinesOperations;

    private EvaluatedMachinesOperations evaluatedMachinesOperations;

    private EvaluatedSqlEntitiesOperations evaluatedSqlEntitiesOperations;

    private EvaluatedWebAppsOperations evaluatedWebAppsOperations;

    private BusinessCaseIaasSummaryOperations businessCaseIaasSummaryOperations;

    private BusinessCaseOverviewSummaryOperations businessCaseOverviewSummaryOperations;

    private BusinessCasePaasSummaryOperations businessCasePaasSummaryOperations;

    private WebAppGraphAssessmentOptionsOperations webAppGraphAssessmentOptionsOperations;

    private WebAppAssessmentV3Operations webAppAssessmentV3Operations;

    private AssessedWebAppsV3Operations assessedWebAppsV3Operations;

    private WebAppAssessmentV3SummaryOperations webAppAssessmentV3SummaryOperations;

    private WebAppServicePlansOperations webAppServicePlansOperations;

    private CompoundAssessmentOperations compoundAssessmentOperations;

    private CompoundAssessmentSummaryOperations compoundAssessmentSummaryOperations;

    private AksOptionsOperations aksOptionsOperations;

    private AksAssessmentOperations aksAssessmentOperations;

    private AssessedWebApplicationOperations assessedWebApplicationOperations;

    private AksClusterOperations aksClusterOperations;

    private AksCostDetailOperations aksCostDetailOperations;

    private AksSummaryOperations aksSummaryOperations;

    private HypervCollectorsOperations hypervCollectorsOperations;

    private ImportSqlCollectorOperations importSqlCollectorOperations;

    private ImportCollectorsOperations importCollectorsOperations;

    private ServerCollectorsOperations serverCollectorsOperations;

    private SqlCollectorOperations sqlCollectorOperations;

    private VmwareCollectorsOperations vmwareCollectorsOperations;

    private WebAppCollectorOperations webAppCollectorOperations;

    private final MigrationAssessmentManagementClient clientObject;

    private MigrationAssessmentManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new MigrationAssessmentManagementClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of Migration Assessment service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Migration Assessment service API instance.
     */
    public static MigrationAssessmentManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Migration Assessment service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Migration Assessment service API instance.
     */
    public static MigrationAssessmentManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new MigrationAssessmentManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create MigrationAssessmentManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new MigrationAssessmentManager.Configurable();
    }

    /**
     * The Configurable allowing configurations to be set.
     */
    public static final class Configurable {
        private static final ClientLogger LOGGER = new ClientLogger(Configurable.class);
        private static final String SDK_VERSION = "version";
        private static final Map<String, String> PROPERTIES
            = CoreUtils.getProperties("azure-resourcemanager-migration-assessment.properties");

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private RetryOptions retryOptions;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the retry options for the HTTP pipeline retry policy.
         * <p>
         * This setting has no effect, if retry policy is set via {@link #withRetryPolicy(RetryPolicy)}.
         *
         * @param retryOptions the retry options for the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryOptions(RetryOptions retryOptions) {
            this.retryOptions = Objects.requireNonNull(retryOptions, "'retryOptions' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval
                = Objects.requireNonNull(defaultPollInterval, "'defaultPollInterval' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw LOGGER
                    .logExceptionAsError(new IllegalArgumentException("'defaultPollInterval' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of Migration Assessment service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the Migration Assessment service API instance.
         */
        public MigrationAssessmentManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            String clientVersion = PROPERTIES.getOrDefault(SDK_VERSION, "UnknownVersion");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder.append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.migration.assessment")
                .append("/")
                .append(clientVersion);
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder.append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                if (retryOptions != null) {
                    retryPolicy = new RetryPolicy(retryOptions);
                } else {
                    retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
                }
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new AddHeadersFromContextPolicy());
            policies.add(new RequestIdPolicy());
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new BearerTokenAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(httpClient)
                .policies(policies.toArray(new HttpPipelinePolicy[0]))
                .build();
            return new MigrationAssessmentManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of AssessmentProjectsOperations. It manages AssessmentProject.
     * 
     * @return Resource collection API of AssessmentProjectsOperations.
     */
    public AssessmentProjectsOperations assessmentProjectsOperations() {
        if (this.assessmentProjectsOperations == null) {
            this.assessmentProjectsOperations
                = new AssessmentProjectsOperationsImpl(clientObject.getAssessmentProjectsOperations(), this);
        }
        return assessmentProjectsOperations;
    }

    /**
     * Gets the resource collection API of PrivateEndpointConnectionOperations.
     * 
     * @return Resource collection API of PrivateEndpointConnectionOperations.
     */
    public PrivateEndpointConnectionOperations privateEndpointConnectionOperations() {
        if (this.privateEndpointConnectionOperations == null) {
            this.privateEndpointConnectionOperations = new PrivateEndpointConnectionOperationsImpl(
                clientObject.getPrivateEndpointConnectionOperations(), this);
        }
        return privateEndpointConnectionOperations;
    }

    /**
     * Gets the resource collection API of PrivateLinkResourceOperations.
     * 
     * @return Resource collection API of PrivateLinkResourceOperations.
     */
    public PrivateLinkResourceOperations privateLinkResourceOperations() {
        if (this.privateLinkResourceOperations == null) {
            this.privateLinkResourceOperations
                = new PrivateLinkResourceOperationsImpl(clientObject.getPrivateLinkResourceOperations(), this);
        }
        return privateLinkResourceOperations;
    }

    /**
     * Gets the resource collection API of AssessmentProjectSummaryOperations.
     * 
     * @return Resource collection API of AssessmentProjectSummaryOperations.
     */
    public AssessmentProjectSummaryOperations assessmentProjectSummaryOperations() {
        if (this.assessmentProjectSummaryOperations == null) {
            this.assessmentProjectSummaryOperations = new AssessmentProjectSummaryOperationsImpl(
                clientObject.getAssessmentProjectSummaryOperations(), this);
        }
        return assessmentProjectSummaryOperations;
    }

    /**
     * Gets the resource collection API of AvsGraphAssessmentOptionsOperations.
     * 
     * @return Resource collection API of AvsGraphAssessmentOptionsOperations.
     */
    public AvsGraphAssessmentOptionsOperations avsGraphAssessmentOptionsOperations() {
        if (this.avsGraphAssessmentOptionsOperations == null) {
            this.avsGraphAssessmentOptionsOperations = new AvsGraphAssessmentOptionsOperationsImpl(
                clientObject.getAvsGraphAssessmentOptionsOperations(), this);
        }
        return avsGraphAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of AvsAssessmentsV2Operations. It manages AvsAssessmentV2.
     * 
     * @return Resource collection API of AvsAssessmentsV2Operations.
     */
    public AvsAssessmentsV2Operations avsAssessmentsV2Operations() {
        if (this.avsAssessmentsV2Operations == null) {
            this.avsAssessmentsV2Operations
                = new AvsAssessmentsV2OperationsImpl(clientObject.getAvsAssessmentsV2Operations(), this);
        }
        return avsAssessmentsV2Operations;
    }

    /**
     * Gets the resource collection API of AvsAssessedMachinesV2Operations.
     * 
     * @return Resource collection API of AvsAssessedMachinesV2Operations.
     */
    public AvsAssessedMachinesV2Operations avsAssessedMachinesV2Operations() {
        if (this.avsAssessedMachinesV2Operations == null) {
            this.avsAssessedMachinesV2Operations
                = new AvsAssessedMachinesV2OperationsImpl(clientObject.getAvsAssessedMachinesV2Operations(), this);
        }
        return avsAssessedMachinesV2Operations;
    }

    /**
     * Gets the resource collection API of AvsAssessmentV2SummaryOperations.
     * 
     * @return Resource collection API of AvsAssessmentV2SummaryOperations.
     */
    public AvsAssessmentV2SummaryOperations avsAssessmentV2SummaryOperations() {
        if (this.avsAssessmentV2SummaryOperations == null) {
            this.avsAssessmentV2SummaryOperations
                = new AvsAssessmentV2SummaryOperationsImpl(clientObject.getAvsAssessmentV2SummaryOperations(), this);
        }
        return avsAssessmentV2SummaryOperations;
    }

    /**
     * Gets the resource collection API of HeterogeneousAssessmentOperations. It manages HeterogeneousAssessment.
     * 
     * @return Resource collection API of HeterogeneousAssessmentOperations.
     */
    public HeterogeneousAssessmentOperations heterogeneousAssessmentOperations() {
        if (this.heterogeneousAssessmentOperations == null) {
            this.heterogeneousAssessmentOperations
                = new HeterogeneousAssessmentOperationsImpl(clientObject.getHeterogeneousAssessmentOperations(), this);
        }
        return heterogeneousAssessmentOperations;
    }

    /**
     * Gets the resource collection API of HeterogeneousAssessmentSummaryOperations.
     * 
     * @return Resource collection API of HeterogeneousAssessmentSummaryOperations.
     */
    public HeterogeneousAssessmentSummaryOperations heterogeneousAssessmentSummaryOperations() {
        if (this.heterogeneousAssessmentSummaryOperations == null) {
            this.heterogeneousAssessmentSummaryOperations = new HeterogeneousAssessmentSummaryOperationsImpl(
                clientObject.getHeterogeneousAssessmentSummaryOperations(), this);
        }
        return heterogeneousAssessmentSummaryOperations;
    }

    /**
     * Gets the resource collection API of MachineGraphAssessmentOptionsOperations.
     * 
     * @return Resource collection API of MachineGraphAssessmentOptionsOperations.
     */
    public MachineGraphAssessmentOptionsOperations machineGraphAssessmentOptionsOperations() {
        if (this.machineGraphAssessmentOptionsOperations == null) {
            this.machineGraphAssessmentOptionsOperations = new MachineGraphAssessmentOptionsOperationsImpl(
                clientObject.getMachineGraphAssessmentOptionsOperations(), this);
        }
        return machineGraphAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of MachineAssessmentsV2Operations. It manages MachineAssessmentV2.
     * 
     * @return Resource collection API of MachineAssessmentsV2Operations.
     */
    public MachineAssessmentsV2Operations machineAssessmentsV2Operations() {
        if (this.machineAssessmentsV2Operations == null) {
            this.machineAssessmentsV2Operations
                = new MachineAssessmentsV2OperationsImpl(clientObject.getMachineAssessmentsV2Operations(), this);
        }
        return machineAssessmentsV2Operations;
    }

    /**
     * Gets the resource collection API of AssessedMachinesV2Operations.
     * 
     * @return Resource collection API of AssessedMachinesV2Operations.
     */
    public AssessedMachinesV2Operations assessedMachinesV2Operations() {
        if (this.assessedMachinesV2Operations == null) {
            this.assessedMachinesV2Operations
                = new AssessedMachinesV2OperationsImpl(clientObject.getAssessedMachinesV2Operations(), this);
        }
        return assessedMachinesV2Operations;
    }

    /**
     * Gets the resource collection API of MachineAssessmentV2SummaryOperations.
     * 
     * @return Resource collection API of MachineAssessmentV2SummaryOperations.
     */
    public MachineAssessmentV2SummaryOperations machineAssessmentV2SummaryOperations() {
        if (this.machineAssessmentV2SummaryOperations == null) {
            this.machineAssessmentV2SummaryOperations = new MachineAssessmentV2SummaryOperationsImpl(
                clientObject.getMachineAssessmentV2SummaryOperations(), this);
        }
        return machineAssessmentV2SummaryOperations;
    }

    /**
     * Gets the resource collection API of SqlGraphAssessmentOptionsOperations.
     * 
     * @return Resource collection API of SqlGraphAssessmentOptionsOperations.
     */
    public SqlGraphAssessmentOptionsOperations sqlGraphAssessmentOptionsOperations() {
        if (this.sqlGraphAssessmentOptionsOperations == null) {
            this.sqlGraphAssessmentOptionsOperations = new SqlGraphAssessmentOptionsOperationsImpl(
                clientObject.getSqlGraphAssessmentOptionsOperations(), this);
        }
        return sqlGraphAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of SqlAssessmentV3Operations. It manages SqlAssessmentV3.
     * 
     * @return Resource collection API of SqlAssessmentV3Operations.
     */
    public SqlAssessmentV3Operations sqlAssessmentV3Operations() {
        if (this.sqlAssessmentV3Operations == null) {
            this.sqlAssessmentV3Operations
                = new SqlAssessmentV3OperationsImpl(clientObject.getSqlAssessmentV3Operations(), this);
        }
        return sqlAssessmentV3Operations;
    }

    /**
     * Gets the resource collection API of AssessedSqlDatabaseV3Operations.
     * 
     * @return Resource collection API of AssessedSqlDatabaseV3Operations.
     */
    public AssessedSqlDatabaseV3Operations assessedSqlDatabaseV3Operations() {
        if (this.assessedSqlDatabaseV3Operations == null) {
            this.assessedSqlDatabaseV3Operations
                = new AssessedSqlDatabaseV3OperationsImpl(clientObject.getAssessedSqlDatabaseV3Operations(), this);
        }
        return assessedSqlDatabaseV3Operations;
    }

    /**
     * Gets the resource collection API of AssessedSqlInstanceV3Operations.
     * 
     * @return Resource collection API of AssessedSqlInstanceV3Operations.
     */
    public AssessedSqlInstanceV3Operations assessedSqlInstanceV3Operations() {
        if (this.assessedSqlInstanceV3Operations == null) {
            this.assessedSqlInstanceV3Operations
                = new AssessedSqlInstanceV3OperationsImpl(clientObject.getAssessedSqlInstanceV3Operations(), this);
        }
        return assessedSqlInstanceV3Operations;
    }

    /**
     * Gets the resource collection API of AssessedSqlMachinesV3Operations.
     * 
     * @return Resource collection API of AssessedSqlMachinesV3Operations.
     */
    public AssessedSqlMachinesV3Operations assessedSqlMachinesV3Operations() {
        if (this.assessedSqlMachinesV3Operations == null) {
            this.assessedSqlMachinesV3Operations
                = new AssessedSqlMachinesV3OperationsImpl(clientObject.getAssessedSqlMachinesV3Operations(), this);
        }
        return assessedSqlMachinesV3Operations;
    }

    /**
     * Gets the resource collection API of SqlAssessmentV3SummaryOperations.
     * 
     * @return Resource collection API of SqlAssessmentV3SummaryOperations.
     */
    public SqlAssessmentV3SummaryOperations sqlAssessmentV3SummaryOperations() {
        if (this.sqlAssessmentV3SummaryOperations == null) {
            this.sqlAssessmentV3SummaryOperations
                = new SqlAssessmentV3SummaryOperationsImpl(clientObject.getSqlAssessmentV3SummaryOperations(), this);
        }
        return sqlAssessmentV3SummaryOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseOperations. It manages BusinessCase.
     * 
     * @return Resource collection API of BusinessCaseOperations.
     */
    public BusinessCaseOperations businessCaseOperations() {
        if (this.businessCaseOperations == null) {
            this.businessCaseOperations
                = new BusinessCaseOperationsImpl(clientObject.getBusinessCaseOperations(), this);
        }
        return businessCaseOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseAvsSummaryOperations.
     * 
     * @return Resource collection API of BusinessCaseAvsSummaryOperations.
     */
    public BusinessCaseAvsSummaryOperations businessCaseAvsSummaryOperations() {
        if (this.businessCaseAvsSummaryOperations == null) {
            this.businessCaseAvsSummaryOperations
                = new BusinessCaseAvsSummaryOperationsImpl(clientObject.getBusinessCaseAvsSummaryOperations(), this);
        }
        return businessCaseAvsSummaryOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedAvsMachinesOperations.
     * 
     * @return Resource collection API of EvaluatedAvsMachinesOperations.
     */
    public EvaluatedAvsMachinesOperations evaluatedAvsMachinesOperations() {
        if (this.evaluatedAvsMachinesOperations == null) {
            this.evaluatedAvsMachinesOperations
                = new EvaluatedAvsMachinesOperationsImpl(clientObject.getEvaluatedAvsMachinesOperations(), this);
        }
        return evaluatedAvsMachinesOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedMachinesOperations.
     * 
     * @return Resource collection API of EvaluatedMachinesOperations.
     */
    public EvaluatedMachinesOperations evaluatedMachinesOperations() {
        if (this.evaluatedMachinesOperations == null) {
            this.evaluatedMachinesOperations
                = new EvaluatedMachinesOperationsImpl(clientObject.getEvaluatedMachinesOperations(), this);
        }
        return evaluatedMachinesOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedSqlEntitiesOperations.
     * 
     * @return Resource collection API of EvaluatedSqlEntitiesOperations.
     */
    public EvaluatedSqlEntitiesOperations evaluatedSqlEntitiesOperations() {
        if (this.evaluatedSqlEntitiesOperations == null) {
            this.evaluatedSqlEntitiesOperations
                = new EvaluatedSqlEntitiesOperationsImpl(clientObject.getEvaluatedSqlEntitiesOperations(), this);
        }
        return evaluatedSqlEntitiesOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedWebAppsOperations.
     * 
     * @return Resource collection API of EvaluatedWebAppsOperations.
     */
    public EvaluatedWebAppsOperations evaluatedWebAppsOperations() {
        if (this.evaluatedWebAppsOperations == null) {
            this.evaluatedWebAppsOperations
                = new EvaluatedWebAppsOperationsImpl(clientObject.getEvaluatedWebAppsOperations(), this);
        }
        return evaluatedWebAppsOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseIaasSummaryOperations.
     * 
     * @return Resource collection API of BusinessCaseIaasSummaryOperations.
     */
    public BusinessCaseIaasSummaryOperations businessCaseIaasSummaryOperations() {
        if (this.businessCaseIaasSummaryOperations == null) {
            this.businessCaseIaasSummaryOperations
                = new BusinessCaseIaasSummaryOperationsImpl(clientObject.getBusinessCaseIaasSummaryOperations(), this);
        }
        return businessCaseIaasSummaryOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseOverviewSummaryOperations.
     * 
     * @return Resource collection API of BusinessCaseOverviewSummaryOperations.
     */
    public BusinessCaseOverviewSummaryOperations businessCaseOverviewSummaryOperations() {
        if (this.businessCaseOverviewSummaryOperations == null) {
            this.businessCaseOverviewSummaryOperations = new BusinessCaseOverviewSummaryOperationsImpl(
                clientObject.getBusinessCaseOverviewSummaryOperations(), this);
        }
        return businessCaseOverviewSummaryOperations;
    }

    /**
     * Gets the resource collection API of BusinessCasePaasSummaryOperations.
     * 
     * @return Resource collection API of BusinessCasePaasSummaryOperations.
     */
    public BusinessCasePaasSummaryOperations businessCasePaasSummaryOperations() {
        if (this.businessCasePaasSummaryOperations == null) {
            this.businessCasePaasSummaryOperations
                = new BusinessCasePaasSummaryOperationsImpl(clientObject.getBusinessCasePaasSummaryOperations(), this);
        }
        return businessCasePaasSummaryOperations;
    }

    /**
     * Gets the resource collection API of WebAppGraphAssessmentOptionsOperations.
     * 
     * @return Resource collection API of WebAppGraphAssessmentOptionsOperations.
     */
    public WebAppGraphAssessmentOptionsOperations webAppGraphAssessmentOptionsOperations() {
        if (this.webAppGraphAssessmentOptionsOperations == null) {
            this.webAppGraphAssessmentOptionsOperations = new WebAppGraphAssessmentOptionsOperationsImpl(
                clientObject.getWebAppGraphAssessmentOptionsOperations(), this);
        }
        return webAppGraphAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of WebAppAssessmentV3Operations. It manages WebAppAssessmentV3.
     * 
     * @return Resource collection API of WebAppAssessmentV3Operations.
     */
    public WebAppAssessmentV3Operations webAppAssessmentV3Operations() {
        if (this.webAppAssessmentV3Operations == null) {
            this.webAppAssessmentV3Operations
                = new WebAppAssessmentV3OperationsImpl(clientObject.getWebAppAssessmentV3Operations(), this);
        }
        return webAppAssessmentV3Operations;
    }

    /**
     * Gets the resource collection API of AssessedWebAppsV3Operations.
     * 
     * @return Resource collection API of AssessedWebAppsV3Operations.
     */
    public AssessedWebAppsV3Operations assessedWebAppsV3Operations() {
        if (this.assessedWebAppsV3Operations == null) {
            this.assessedWebAppsV3Operations
                = new AssessedWebAppsV3OperationsImpl(clientObject.getAssessedWebAppsV3Operations(), this);
        }
        return assessedWebAppsV3Operations;
    }

    /**
     * Gets the resource collection API of WebAppAssessmentV3SummaryOperations.
     * 
     * @return Resource collection API of WebAppAssessmentV3SummaryOperations.
     */
    public WebAppAssessmentV3SummaryOperations webAppAssessmentV3SummaryOperations() {
        if (this.webAppAssessmentV3SummaryOperations == null) {
            this.webAppAssessmentV3SummaryOperations = new WebAppAssessmentV3SummaryOperationsImpl(
                clientObject.getWebAppAssessmentV3SummaryOperations(), this);
        }
        return webAppAssessmentV3SummaryOperations;
    }

    /**
     * Gets the resource collection API of WebAppServicePlansOperations.
     * 
     * @return Resource collection API of WebAppServicePlansOperations.
     */
    public WebAppServicePlansOperations webAppServicePlansOperations() {
        if (this.webAppServicePlansOperations == null) {
            this.webAppServicePlansOperations
                = new WebAppServicePlansOperationsImpl(clientObject.getWebAppServicePlansOperations(), this);
        }
        return webAppServicePlansOperations;
    }

    /**
     * Gets the resource collection API of CompoundAssessmentOperations. It manages CompoundAssessment.
     * 
     * @return Resource collection API of CompoundAssessmentOperations.
     */
    public CompoundAssessmentOperations compoundAssessmentOperations() {
        if (this.compoundAssessmentOperations == null) {
            this.compoundAssessmentOperations
                = new CompoundAssessmentOperationsImpl(clientObject.getCompoundAssessmentOperations(), this);
        }
        return compoundAssessmentOperations;
    }

    /**
     * Gets the resource collection API of CompoundAssessmentSummaryOperations.
     * 
     * @return Resource collection API of CompoundAssessmentSummaryOperations.
     */
    public CompoundAssessmentSummaryOperations compoundAssessmentSummaryOperations() {
        if (this.compoundAssessmentSummaryOperations == null) {
            this.compoundAssessmentSummaryOperations = new CompoundAssessmentSummaryOperationsImpl(
                clientObject.getCompoundAssessmentSummaryOperations(), this);
        }
        return compoundAssessmentSummaryOperations;
    }

    /**
     * Gets the resource collection API of AksOptionsOperations.
     * 
     * @return Resource collection API of AksOptionsOperations.
     */
    public AksOptionsOperations aksOptionsOperations() {
        if (this.aksOptionsOperations == null) {
            this.aksOptionsOperations = new AksOptionsOperationsImpl(clientObject.getAksOptionsOperations(), this);
        }
        return aksOptionsOperations;
    }

    /**
     * Gets the resource collection API of AksAssessmentOperations. It manages AksAssessment.
     * 
     * @return Resource collection API of AksAssessmentOperations.
     */
    public AksAssessmentOperations aksAssessmentOperations() {
        if (this.aksAssessmentOperations == null) {
            this.aksAssessmentOperations
                = new AksAssessmentOperationsImpl(clientObject.getAksAssessmentOperations(), this);
        }
        return aksAssessmentOperations;
    }

    /**
     * Gets the resource collection API of AssessedWebApplicationOperations.
     * 
     * @return Resource collection API of AssessedWebApplicationOperations.
     */
    public AssessedWebApplicationOperations assessedWebApplicationOperations() {
        if (this.assessedWebApplicationOperations == null) {
            this.assessedWebApplicationOperations
                = new AssessedWebApplicationOperationsImpl(clientObject.getAssessedWebApplicationOperations(), this);
        }
        return assessedWebApplicationOperations;
    }

    /**
     * Gets the resource collection API of AksClusterOperations.
     * 
     * @return Resource collection API of AksClusterOperations.
     */
    public AksClusterOperations aksClusterOperations() {
        if (this.aksClusterOperations == null) {
            this.aksClusterOperations = new AksClusterOperationsImpl(clientObject.getAksClusterOperations(), this);
        }
        return aksClusterOperations;
    }

    /**
     * Gets the resource collection API of AksCostDetailOperations.
     * 
     * @return Resource collection API of AksCostDetailOperations.
     */
    public AksCostDetailOperations aksCostDetailOperations() {
        if (this.aksCostDetailOperations == null) {
            this.aksCostDetailOperations
                = new AksCostDetailOperationsImpl(clientObject.getAksCostDetailOperations(), this);
        }
        return aksCostDetailOperations;
    }

    /**
     * Gets the resource collection API of AksSummaryOperations.
     * 
     * @return Resource collection API of AksSummaryOperations.
     */
    public AksSummaryOperations aksSummaryOperations() {
        if (this.aksSummaryOperations == null) {
            this.aksSummaryOperations = new AksSummaryOperationsImpl(clientObject.getAksSummaryOperations(), this);
        }
        return aksSummaryOperations;
    }

    /**
     * Gets the resource collection API of HypervCollectorsOperations. It manages HypervCollector.
     * 
     * @return Resource collection API of HypervCollectorsOperations.
     */
    public HypervCollectorsOperations hypervCollectorsOperations() {
        if (this.hypervCollectorsOperations == null) {
            this.hypervCollectorsOperations
                = new HypervCollectorsOperationsImpl(clientObject.getHypervCollectorsOperations(), this);
        }
        return hypervCollectorsOperations;
    }

    /**
     * Gets the resource collection API of ImportSqlCollectorOperations. It manages ImportSqlCollector.
     * 
     * @return Resource collection API of ImportSqlCollectorOperations.
     */
    public ImportSqlCollectorOperations importSqlCollectorOperations() {
        if (this.importSqlCollectorOperations == null) {
            this.importSqlCollectorOperations
                = new ImportSqlCollectorOperationsImpl(clientObject.getImportSqlCollectorOperations(), this);
        }
        return importSqlCollectorOperations;
    }

    /**
     * Gets the resource collection API of ImportCollectorsOperations. It manages ImportCollector.
     * 
     * @return Resource collection API of ImportCollectorsOperations.
     */
    public ImportCollectorsOperations importCollectorsOperations() {
        if (this.importCollectorsOperations == null) {
            this.importCollectorsOperations
                = new ImportCollectorsOperationsImpl(clientObject.getImportCollectorsOperations(), this);
        }
        return importCollectorsOperations;
    }

    /**
     * Gets the resource collection API of ServerCollectorsOperations. It manages ServerCollector.
     * 
     * @return Resource collection API of ServerCollectorsOperations.
     */
    public ServerCollectorsOperations serverCollectorsOperations() {
        if (this.serverCollectorsOperations == null) {
            this.serverCollectorsOperations
                = new ServerCollectorsOperationsImpl(clientObject.getServerCollectorsOperations(), this);
        }
        return serverCollectorsOperations;
    }

    /**
     * Gets the resource collection API of SqlCollectorOperations. It manages SqlCollector.
     * 
     * @return Resource collection API of SqlCollectorOperations.
     */
    public SqlCollectorOperations sqlCollectorOperations() {
        if (this.sqlCollectorOperations == null) {
            this.sqlCollectorOperations
                = new SqlCollectorOperationsImpl(clientObject.getSqlCollectorOperations(), this);
        }
        return sqlCollectorOperations;
    }

    /**
     * Gets the resource collection API of VmwareCollectorsOperations. It manages VmwareCollector.
     * 
     * @return Resource collection API of VmwareCollectorsOperations.
     */
    public VmwareCollectorsOperations vmwareCollectorsOperations() {
        if (this.vmwareCollectorsOperations == null) {
            this.vmwareCollectorsOperations
                = new VmwareCollectorsOperationsImpl(clientObject.getVmwareCollectorsOperations(), this);
        }
        return vmwareCollectorsOperations;
    }

    /**
     * Gets the resource collection API of WebAppCollectorOperations. It manages WebAppCollector.
     * 
     * @return Resource collection API of WebAppCollectorOperations.
     */
    public WebAppCollectorOperations webAppCollectorOperations() {
        if (this.webAppCollectorOperations == null) {
            this.webAppCollectorOperations
                = new WebAppCollectorOperationsImpl(clientObject.getWebAppCollectorOperations(), this);
        }
        return webAppCollectorOperations;
    }

    /**
     * Gets wrapped service client MigrationAssessmentManagementClient providing direct access to the underlying
     * auto-generated API implementation, based on Azure REST API.
     * 
     * @return Wrapped service client MigrationAssessmentManagementClient.
     */
    public MigrationAssessmentManagementClient serviceClient() {
        return this.clientObject;
    }
}

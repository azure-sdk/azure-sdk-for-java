// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.migration.assessment.fluent.MigrationAssessmentManagementClient;
import com.azure.resourcemanager.migration.assessment.implementation.AksAssessmentOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksClusterOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksCostDetailOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AksSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlDatabaseV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlInstanceV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedSqlRecommendedEntityOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedWebAppV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessedWebApplicationOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessmentProjectSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessmentProjectsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AssessmentsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsAssessedMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.AvsAssessmentsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseAvsSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseIaasSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCaseOverviewSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.BusinessCasePaasSummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedAvsMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedMachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedSqlEntitiesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.EvaluatedWebAppsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.GroupsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.HypervCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.ImportCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.MachinesOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.MigrationAssessmentManagementClientBuilder;
import com.azure.resourcemanager.migration.assessment.implementation.OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.PrivateEndpointConnectionOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.PrivateLinkResourceOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.ServerCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlAssessmentV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlAssessmentV2SummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.SqlCollectorOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.VmwareCollectorsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppAssessmentOptionsOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppAssessmentV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppAssessmentV2SummaryOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppCollectorOperationsImpl;
import com.azure.resourcemanager.migration.assessment.implementation.WebAppServicePlanV2OperationsImpl;
import com.azure.resourcemanager.migration.assessment.models.AksAssessmentOperations;
import com.azure.resourcemanager.migration.assessment.models.AksClusterOperations;
import com.azure.resourcemanager.migration.assessment.models.AksCostDetailOperations;
import com.azure.resourcemanager.migration.assessment.models.AksOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.AksSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessedMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlDatabaseV2Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlInstanceV2Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessedSqlRecommendedEntityOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessedWebAppV2Operations;
import com.azure.resourcemanager.migration.assessment.models.AssessedWebApplicationOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessmentProjectsOperations;
import com.azure.resourcemanager.migration.assessment.models.AssessmentsOperations;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessedMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.AvsAssessmentsOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseAvsSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseIaasSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCaseOverviewSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.BusinessCasePaasSummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedAvsMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedMachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedSqlEntitiesOperations;
import com.azure.resourcemanager.migration.assessment.models.EvaluatedWebAppsOperations;
import com.azure.resourcemanager.migration.assessment.models.GroupsOperations;
import com.azure.resourcemanager.migration.assessment.models.HypervCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.ImportCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.MachinesOperations;
import com.azure.resourcemanager.migration.assessment.models.Operations;
import com.azure.resourcemanager.migration.assessment.models.PrivateEndpointConnectionOperations;
import com.azure.resourcemanager.migration.assessment.models.PrivateLinkResourceOperations;
import com.azure.resourcemanager.migration.assessment.models.ServerCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentV2Operations;
import com.azure.resourcemanager.migration.assessment.models.SqlAssessmentV2SummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.SqlCollectorOperations;
import com.azure.resourcemanager.migration.assessment.models.VmwareCollectorsOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppAssessmentOptionsOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppAssessmentV2Operations;
import com.azure.resourcemanager.migration.assessment.models.WebAppAssessmentV2SummaryOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppCollectorOperations;
import com.azure.resourcemanager.migration.assessment.models.WebAppServicePlanV2Operations;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Entry point to MigrationAssessmentManager.
 * Azure Migrate Resource Provider management API.
 */
public final class MigrationAssessmentManager {
    private Operations operations;

    private AssessmentProjectsOperations assessmentProjectsOperations;

    private AksOptionsOperations aksOptionsOperations;

    private AksAssessmentOperations aksAssessmentOperations;

    private AssessedWebApplicationOperations assessedWebApplicationOperations;

    private AksClusterOperations aksClusterOperations;

    private AksCostDetailOperations aksCostDetailOperations;

    private AksSummaryOperations aksSummaryOperations;

    private AssessmentOptionsOperations assessmentOptionsOperations;

    private AvsAssessmentOptionsOperations avsAssessmentOptionsOperations;

    private BusinessCaseOperations businessCaseOperations;

    private BusinessCaseAvsSummaryOperations businessCaseAvsSummaryOperations;

    private EvaluatedAvsMachinesOperations evaluatedAvsMachinesOperations;

    private EvaluatedMachinesOperations evaluatedMachinesOperations;

    private EvaluatedSqlEntitiesOperations evaluatedSqlEntitiesOperations;

    private EvaluatedWebAppsOperations evaluatedWebAppsOperations;

    private BusinessCaseIaasSummaryOperations businessCaseIaasSummaryOperations;

    private BusinessCaseOverviewSummaryOperations businessCaseOverviewSummaryOperations;

    private BusinessCasePaasSummaryOperations businessCasePaasSummaryOperations;

    private GroupsOperations groupsOperations;

    private AssessmentsOperations assessmentsOperations;

    private AssessedMachinesOperations assessedMachinesOperations;

    private AvsAssessmentsOperations avsAssessmentsOperations;

    private AvsAssessedMachinesOperations avsAssessedMachinesOperations;

    private SqlAssessmentV2Operations sqlAssessmentV2Operations;

    private AssessedSqlDatabaseV2Operations assessedSqlDatabaseV2Operations;

    private AssessedSqlInstanceV2Operations assessedSqlInstanceV2Operations;

    private AssessedSqlMachinesOperations assessedSqlMachinesOperations;

    private AssessedSqlRecommendedEntityOperations assessedSqlRecommendedEntityOperations;

    private SqlAssessmentV2SummaryOperations sqlAssessmentV2SummaryOperations;

    private WebAppAssessmentV2Operations webAppAssessmentV2Operations;

    private AssessedWebAppV2Operations assessedWebAppV2Operations;

    private WebAppAssessmentV2SummaryOperations webAppAssessmentV2SummaryOperations;

    private WebAppServicePlanV2Operations webAppServicePlanV2Operations;

    private HypervCollectorsOperations hypervCollectorsOperations;

    private ImportCollectorsOperations importCollectorsOperations;

    private MachinesOperations machinesOperations;

    private PrivateEndpointConnectionOperations privateEndpointConnectionOperations;

    private PrivateLinkResourceOperations privateLinkResourceOperations;

    private AssessmentProjectSummaryOperations assessmentProjectSummaryOperations;

    private ServerCollectorsOperations serverCollectorsOperations;

    private SqlAssessmentOptionsOperations sqlAssessmentOptionsOperations;

    private SqlCollectorOperations sqlCollectorOperations;

    private VmwareCollectorsOperations vmwareCollectorsOperations;

    private WebAppAssessmentOptionsOperations webAppAssessmentOptionsOperations;

    private WebAppCollectorOperations webAppCollectorOperations;

    private final MigrationAssessmentManagementClient clientObject;

    private MigrationAssessmentManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new MigrationAssessmentManagementClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
            .subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval)
            .buildClient();
    }

    /**
     * Creates an instance of Migration Assessment service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Migration Assessment service API instance.
     */
    public static MigrationAssessmentManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Migration Assessment service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Migration Assessment service API instance.
     */
    public static MigrationAssessmentManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new MigrationAssessmentManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create MigrationAssessmentManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new MigrationAssessmentManager.Configurable();
    }

    /**
     * The Configurable allowing configurations to be set.
     */
    public static final class Configurable {
        private static final ClientLogger LOGGER = new ClientLogger(Configurable.class);
        private static final String SDK_VERSION = "version";
        private static final Map<String, String> PROPERTIES
            = CoreUtils.getProperties("azure-resourcemanager-migration-assessment.properties");

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private RetryOptions retryOptions;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the retry options for the HTTP pipeline retry policy.
         * <p>
         * This setting has no effect, if retry policy is set via {@link #withRetryPolicy(RetryPolicy)}.
         *
         * @param retryOptions the retry options for the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryOptions(RetryOptions retryOptions) {
            this.retryOptions = Objects.requireNonNull(retryOptions, "'retryOptions' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval
                = Objects.requireNonNull(defaultPollInterval, "'defaultPollInterval' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw LOGGER
                    .logExceptionAsError(new IllegalArgumentException("'defaultPollInterval' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of Migration Assessment service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the Migration Assessment service API instance.
         */
        public MigrationAssessmentManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            String clientVersion = PROPERTIES.getOrDefault(SDK_VERSION, "UnknownVersion");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder.append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.migration.assessment")
                .append("/")
                .append(clientVersion);
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder.append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                if (retryOptions != null) {
                    retryPolicy = new RetryPolicy(retryOptions);
                } else {
                    retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
                }
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new AddHeadersFromContextPolicy());
            policies.add(new RequestIdPolicy());
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new BearerTokenAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(httpClient)
                .policies(policies.toArray(new HttpPipelinePolicy[0]))
                .build();
            return new MigrationAssessmentManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of AssessmentProjectsOperations. It manages AssessmentProject.
     * 
     * @return Resource collection API of AssessmentProjectsOperations.
     */
    public AssessmentProjectsOperations assessmentProjectsOperations() {
        if (this.assessmentProjectsOperations == null) {
            this.assessmentProjectsOperations
                = new AssessmentProjectsOperationsImpl(clientObject.getAssessmentProjectsOperations(), this);
        }
        return assessmentProjectsOperations;
    }

    /**
     * Gets the resource collection API of AksOptionsOperations.
     * 
     * @return Resource collection API of AksOptionsOperations.
     */
    public AksOptionsOperations aksOptionsOperations() {
        if (this.aksOptionsOperations == null) {
            this.aksOptionsOperations = new AksOptionsOperationsImpl(clientObject.getAksOptionsOperations(), this);
        }
        return aksOptionsOperations;
    }

    /**
     * Gets the resource collection API of AksAssessmentOperations. It manages AksAssessment.
     * 
     * @return Resource collection API of AksAssessmentOperations.
     */
    public AksAssessmentOperations aksAssessmentOperations() {
        if (this.aksAssessmentOperations == null) {
            this.aksAssessmentOperations
                = new AksAssessmentOperationsImpl(clientObject.getAksAssessmentOperations(), this);
        }
        return aksAssessmentOperations;
    }

    /**
     * Gets the resource collection API of AssessedWebApplicationOperations.
     * 
     * @return Resource collection API of AssessedWebApplicationOperations.
     */
    public AssessedWebApplicationOperations assessedWebApplicationOperations() {
        if (this.assessedWebApplicationOperations == null) {
            this.assessedWebApplicationOperations
                = new AssessedWebApplicationOperationsImpl(clientObject.getAssessedWebApplicationOperations(), this);
        }
        return assessedWebApplicationOperations;
    }

    /**
     * Gets the resource collection API of AksClusterOperations.
     * 
     * @return Resource collection API of AksClusterOperations.
     */
    public AksClusterOperations aksClusterOperations() {
        if (this.aksClusterOperations == null) {
            this.aksClusterOperations = new AksClusterOperationsImpl(clientObject.getAksClusterOperations(), this);
        }
        return aksClusterOperations;
    }

    /**
     * Gets the resource collection API of AksCostDetailOperations.
     * 
     * @return Resource collection API of AksCostDetailOperations.
     */
    public AksCostDetailOperations aksCostDetailOperations() {
        if (this.aksCostDetailOperations == null) {
            this.aksCostDetailOperations
                = new AksCostDetailOperationsImpl(clientObject.getAksCostDetailOperations(), this);
        }
        return aksCostDetailOperations;
    }

    /**
     * Gets the resource collection API of AksSummaryOperations.
     * 
     * @return Resource collection API of AksSummaryOperations.
     */
    public AksSummaryOperations aksSummaryOperations() {
        if (this.aksSummaryOperations == null) {
            this.aksSummaryOperations = new AksSummaryOperationsImpl(clientObject.getAksSummaryOperations(), this);
        }
        return aksSummaryOperations;
    }

    /**
     * Gets the resource collection API of AssessmentOptionsOperations.
     * 
     * @return Resource collection API of AssessmentOptionsOperations.
     */
    public AssessmentOptionsOperations assessmentOptionsOperations() {
        if (this.assessmentOptionsOperations == null) {
            this.assessmentOptionsOperations
                = new AssessmentOptionsOperationsImpl(clientObject.getAssessmentOptionsOperations(), this);
        }
        return assessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of AvsAssessmentOptionsOperations.
     * 
     * @return Resource collection API of AvsAssessmentOptionsOperations.
     */
    public AvsAssessmentOptionsOperations avsAssessmentOptionsOperations() {
        if (this.avsAssessmentOptionsOperations == null) {
            this.avsAssessmentOptionsOperations
                = new AvsAssessmentOptionsOperationsImpl(clientObject.getAvsAssessmentOptionsOperations(), this);
        }
        return avsAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseOperations. It manages BusinessCase.
     * 
     * @return Resource collection API of BusinessCaseOperations.
     */
    public BusinessCaseOperations businessCaseOperations() {
        if (this.businessCaseOperations == null) {
            this.businessCaseOperations
                = new BusinessCaseOperationsImpl(clientObject.getBusinessCaseOperations(), this);
        }
        return businessCaseOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseAvsSummaryOperations.
     * 
     * @return Resource collection API of BusinessCaseAvsSummaryOperations.
     */
    public BusinessCaseAvsSummaryOperations businessCaseAvsSummaryOperations() {
        if (this.businessCaseAvsSummaryOperations == null) {
            this.businessCaseAvsSummaryOperations
                = new BusinessCaseAvsSummaryOperationsImpl(clientObject.getBusinessCaseAvsSummaryOperations(), this);
        }
        return businessCaseAvsSummaryOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedAvsMachinesOperations.
     * 
     * @return Resource collection API of EvaluatedAvsMachinesOperations.
     */
    public EvaluatedAvsMachinesOperations evaluatedAvsMachinesOperations() {
        if (this.evaluatedAvsMachinesOperations == null) {
            this.evaluatedAvsMachinesOperations
                = new EvaluatedAvsMachinesOperationsImpl(clientObject.getEvaluatedAvsMachinesOperations(), this);
        }
        return evaluatedAvsMachinesOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedMachinesOperations.
     * 
     * @return Resource collection API of EvaluatedMachinesOperations.
     */
    public EvaluatedMachinesOperations evaluatedMachinesOperations() {
        if (this.evaluatedMachinesOperations == null) {
            this.evaluatedMachinesOperations
                = new EvaluatedMachinesOperationsImpl(clientObject.getEvaluatedMachinesOperations(), this);
        }
        return evaluatedMachinesOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedSqlEntitiesOperations.
     * 
     * @return Resource collection API of EvaluatedSqlEntitiesOperations.
     */
    public EvaluatedSqlEntitiesOperations evaluatedSqlEntitiesOperations() {
        if (this.evaluatedSqlEntitiesOperations == null) {
            this.evaluatedSqlEntitiesOperations
                = new EvaluatedSqlEntitiesOperationsImpl(clientObject.getEvaluatedSqlEntitiesOperations(), this);
        }
        return evaluatedSqlEntitiesOperations;
    }

    /**
     * Gets the resource collection API of EvaluatedWebAppsOperations.
     * 
     * @return Resource collection API of EvaluatedWebAppsOperations.
     */
    public EvaluatedWebAppsOperations evaluatedWebAppsOperations() {
        if (this.evaluatedWebAppsOperations == null) {
            this.evaluatedWebAppsOperations
                = new EvaluatedWebAppsOperationsImpl(clientObject.getEvaluatedWebAppsOperations(), this);
        }
        return evaluatedWebAppsOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseIaasSummaryOperations.
     * 
     * @return Resource collection API of BusinessCaseIaasSummaryOperations.
     */
    public BusinessCaseIaasSummaryOperations businessCaseIaasSummaryOperations() {
        if (this.businessCaseIaasSummaryOperations == null) {
            this.businessCaseIaasSummaryOperations
                = new BusinessCaseIaasSummaryOperationsImpl(clientObject.getBusinessCaseIaasSummaryOperations(), this);
        }
        return businessCaseIaasSummaryOperations;
    }

    /**
     * Gets the resource collection API of BusinessCaseOverviewSummaryOperations.
     * 
     * @return Resource collection API of BusinessCaseOverviewSummaryOperations.
     */
    public BusinessCaseOverviewSummaryOperations businessCaseOverviewSummaryOperations() {
        if (this.businessCaseOverviewSummaryOperations == null) {
            this.businessCaseOverviewSummaryOperations = new BusinessCaseOverviewSummaryOperationsImpl(
                clientObject.getBusinessCaseOverviewSummaryOperations(), this);
        }
        return businessCaseOverviewSummaryOperations;
    }

    /**
     * Gets the resource collection API of BusinessCasePaasSummaryOperations.
     * 
     * @return Resource collection API of BusinessCasePaasSummaryOperations.
     */
    public BusinessCasePaasSummaryOperations businessCasePaasSummaryOperations() {
        if (this.businessCasePaasSummaryOperations == null) {
            this.businessCasePaasSummaryOperations
                = new BusinessCasePaasSummaryOperationsImpl(clientObject.getBusinessCasePaasSummaryOperations(), this);
        }
        return businessCasePaasSummaryOperations;
    }

    /**
     * Gets the resource collection API of GroupsOperations. It manages Group.
     * 
     * @return Resource collection API of GroupsOperations.
     */
    public GroupsOperations groupsOperations() {
        if (this.groupsOperations == null) {
            this.groupsOperations = new GroupsOperationsImpl(clientObject.getGroupsOperations(), this);
        }
        return groupsOperations;
    }

    /**
     * Gets the resource collection API of AssessmentsOperations. It manages Assessment.
     * 
     * @return Resource collection API of AssessmentsOperations.
     */
    public AssessmentsOperations assessmentsOperations() {
        if (this.assessmentsOperations == null) {
            this.assessmentsOperations = new AssessmentsOperationsImpl(clientObject.getAssessmentsOperations(), this);
        }
        return assessmentsOperations;
    }

    /**
     * Gets the resource collection API of AssessedMachinesOperations.
     * 
     * @return Resource collection API of AssessedMachinesOperations.
     */
    public AssessedMachinesOperations assessedMachinesOperations() {
        if (this.assessedMachinesOperations == null) {
            this.assessedMachinesOperations
                = new AssessedMachinesOperationsImpl(clientObject.getAssessedMachinesOperations(), this);
        }
        return assessedMachinesOperations;
    }

    /**
     * Gets the resource collection API of AvsAssessmentsOperations. It manages AvsAssessment.
     * 
     * @return Resource collection API of AvsAssessmentsOperations.
     */
    public AvsAssessmentsOperations avsAssessmentsOperations() {
        if (this.avsAssessmentsOperations == null) {
            this.avsAssessmentsOperations
                = new AvsAssessmentsOperationsImpl(clientObject.getAvsAssessmentsOperations(), this);
        }
        return avsAssessmentsOperations;
    }

    /**
     * Gets the resource collection API of AvsAssessedMachinesOperations.
     * 
     * @return Resource collection API of AvsAssessedMachinesOperations.
     */
    public AvsAssessedMachinesOperations avsAssessedMachinesOperations() {
        if (this.avsAssessedMachinesOperations == null) {
            this.avsAssessedMachinesOperations
                = new AvsAssessedMachinesOperationsImpl(clientObject.getAvsAssessedMachinesOperations(), this);
        }
        return avsAssessedMachinesOperations;
    }

    /**
     * Gets the resource collection API of SqlAssessmentV2Operations. It manages SqlAssessmentV2.
     * 
     * @return Resource collection API of SqlAssessmentV2Operations.
     */
    public SqlAssessmentV2Operations sqlAssessmentV2Operations() {
        if (this.sqlAssessmentV2Operations == null) {
            this.sqlAssessmentV2Operations
                = new SqlAssessmentV2OperationsImpl(clientObject.getSqlAssessmentV2Operations(), this);
        }
        return sqlAssessmentV2Operations;
    }

    /**
     * Gets the resource collection API of AssessedSqlDatabaseV2Operations.
     * 
     * @return Resource collection API of AssessedSqlDatabaseV2Operations.
     */
    public AssessedSqlDatabaseV2Operations assessedSqlDatabaseV2Operations() {
        if (this.assessedSqlDatabaseV2Operations == null) {
            this.assessedSqlDatabaseV2Operations
                = new AssessedSqlDatabaseV2OperationsImpl(clientObject.getAssessedSqlDatabaseV2Operations(), this);
        }
        return assessedSqlDatabaseV2Operations;
    }

    /**
     * Gets the resource collection API of AssessedSqlInstanceV2Operations.
     * 
     * @return Resource collection API of AssessedSqlInstanceV2Operations.
     */
    public AssessedSqlInstanceV2Operations assessedSqlInstanceV2Operations() {
        if (this.assessedSqlInstanceV2Operations == null) {
            this.assessedSqlInstanceV2Operations
                = new AssessedSqlInstanceV2OperationsImpl(clientObject.getAssessedSqlInstanceV2Operations(), this);
        }
        return assessedSqlInstanceV2Operations;
    }

    /**
     * Gets the resource collection API of AssessedSqlMachinesOperations.
     * 
     * @return Resource collection API of AssessedSqlMachinesOperations.
     */
    public AssessedSqlMachinesOperations assessedSqlMachinesOperations() {
        if (this.assessedSqlMachinesOperations == null) {
            this.assessedSqlMachinesOperations
                = new AssessedSqlMachinesOperationsImpl(clientObject.getAssessedSqlMachinesOperations(), this);
        }
        return assessedSqlMachinesOperations;
    }

    /**
     * Gets the resource collection API of AssessedSqlRecommendedEntityOperations.
     * 
     * @return Resource collection API of AssessedSqlRecommendedEntityOperations.
     */
    public AssessedSqlRecommendedEntityOperations assessedSqlRecommendedEntityOperations() {
        if (this.assessedSqlRecommendedEntityOperations == null) {
            this.assessedSqlRecommendedEntityOperations = new AssessedSqlRecommendedEntityOperationsImpl(
                clientObject.getAssessedSqlRecommendedEntityOperations(), this);
        }
        return assessedSqlRecommendedEntityOperations;
    }

    /**
     * Gets the resource collection API of SqlAssessmentV2SummaryOperations.
     * 
     * @return Resource collection API of SqlAssessmentV2SummaryOperations.
     */
    public SqlAssessmentV2SummaryOperations sqlAssessmentV2SummaryOperations() {
        if (this.sqlAssessmentV2SummaryOperations == null) {
            this.sqlAssessmentV2SummaryOperations
                = new SqlAssessmentV2SummaryOperationsImpl(clientObject.getSqlAssessmentV2SummaryOperations(), this);
        }
        return sqlAssessmentV2SummaryOperations;
    }

    /**
     * Gets the resource collection API of WebAppAssessmentV2Operations. It manages WebAppAssessmentV2.
     * 
     * @return Resource collection API of WebAppAssessmentV2Operations.
     */
    public WebAppAssessmentV2Operations webAppAssessmentV2Operations() {
        if (this.webAppAssessmentV2Operations == null) {
            this.webAppAssessmentV2Operations
                = new WebAppAssessmentV2OperationsImpl(clientObject.getWebAppAssessmentV2Operations(), this);
        }
        return webAppAssessmentV2Operations;
    }

    /**
     * Gets the resource collection API of AssessedWebAppV2Operations.
     * 
     * @return Resource collection API of AssessedWebAppV2Operations.
     */
    public AssessedWebAppV2Operations assessedWebAppV2Operations() {
        if (this.assessedWebAppV2Operations == null) {
            this.assessedWebAppV2Operations
                = new AssessedWebAppV2OperationsImpl(clientObject.getAssessedWebAppV2Operations(), this);
        }
        return assessedWebAppV2Operations;
    }

    /**
     * Gets the resource collection API of WebAppAssessmentV2SummaryOperations.
     * 
     * @return Resource collection API of WebAppAssessmentV2SummaryOperations.
     */
    public WebAppAssessmentV2SummaryOperations webAppAssessmentV2SummaryOperations() {
        if (this.webAppAssessmentV2SummaryOperations == null) {
            this.webAppAssessmentV2SummaryOperations = new WebAppAssessmentV2SummaryOperationsImpl(
                clientObject.getWebAppAssessmentV2SummaryOperations(), this);
        }
        return webAppAssessmentV2SummaryOperations;
    }

    /**
     * Gets the resource collection API of WebAppServicePlanV2Operations.
     * 
     * @return Resource collection API of WebAppServicePlanV2Operations.
     */
    public WebAppServicePlanV2Operations webAppServicePlanV2Operations() {
        if (this.webAppServicePlanV2Operations == null) {
            this.webAppServicePlanV2Operations
                = new WebAppServicePlanV2OperationsImpl(clientObject.getWebAppServicePlanV2Operations(), this);
        }
        return webAppServicePlanV2Operations;
    }

    /**
     * Gets the resource collection API of HypervCollectorsOperations. It manages HypervCollector.
     * 
     * @return Resource collection API of HypervCollectorsOperations.
     */
    public HypervCollectorsOperations hypervCollectorsOperations() {
        if (this.hypervCollectorsOperations == null) {
            this.hypervCollectorsOperations
                = new HypervCollectorsOperationsImpl(clientObject.getHypervCollectorsOperations(), this);
        }
        return hypervCollectorsOperations;
    }

    /**
     * Gets the resource collection API of ImportCollectorsOperations. It manages ImportCollector.
     * 
     * @return Resource collection API of ImportCollectorsOperations.
     */
    public ImportCollectorsOperations importCollectorsOperations() {
        if (this.importCollectorsOperations == null) {
            this.importCollectorsOperations
                = new ImportCollectorsOperationsImpl(clientObject.getImportCollectorsOperations(), this);
        }
        return importCollectorsOperations;
    }

    /**
     * Gets the resource collection API of MachinesOperations.
     * 
     * @return Resource collection API of MachinesOperations.
     */
    public MachinesOperations machinesOperations() {
        if (this.machinesOperations == null) {
            this.machinesOperations = new MachinesOperationsImpl(clientObject.getMachinesOperations(), this);
        }
        return machinesOperations;
    }

    /**
     * Gets the resource collection API of PrivateEndpointConnectionOperations.
     * 
     * @return Resource collection API of PrivateEndpointConnectionOperations.
     */
    public PrivateEndpointConnectionOperations privateEndpointConnectionOperations() {
        if (this.privateEndpointConnectionOperations == null) {
            this.privateEndpointConnectionOperations = new PrivateEndpointConnectionOperationsImpl(
                clientObject.getPrivateEndpointConnectionOperations(), this);
        }
        return privateEndpointConnectionOperations;
    }

    /**
     * Gets the resource collection API of PrivateLinkResourceOperations.
     * 
     * @return Resource collection API of PrivateLinkResourceOperations.
     */
    public PrivateLinkResourceOperations privateLinkResourceOperations() {
        if (this.privateLinkResourceOperations == null) {
            this.privateLinkResourceOperations
                = new PrivateLinkResourceOperationsImpl(clientObject.getPrivateLinkResourceOperations(), this);
        }
        return privateLinkResourceOperations;
    }

    /**
     * Gets the resource collection API of AssessmentProjectSummaryOperations.
     * 
     * @return Resource collection API of AssessmentProjectSummaryOperations.
     */
    public AssessmentProjectSummaryOperations assessmentProjectSummaryOperations() {
        if (this.assessmentProjectSummaryOperations == null) {
            this.assessmentProjectSummaryOperations = new AssessmentProjectSummaryOperationsImpl(
                clientObject.getAssessmentProjectSummaryOperations(), this);
        }
        return assessmentProjectSummaryOperations;
    }

    /**
     * Gets the resource collection API of ServerCollectorsOperations. It manages ServerCollector.
     * 
     * @return Resource collection API of ServerCollectorsOperations.
     */
    public ServerCollectorsOperations serverCollectorsOperations() {
        if (this.serverCollectorsOperations == null) {
            this.serverCollectorsOperations
                = new ServerCollectorsOperationsImpl(clientObject.getServerCollectorsOperations(), this);
        }
        return serverCollectorsOperations;
    }

    /**
     * Gets the resource collection API of SqlAssessmentOptionsOperations.
     * 
     * @return Resource collection API of SqlAssessmentOptionsOperations.
     */
    public SqlAssessmentOptionsOperations sqlAssessmentOptionsOperations() {
        if (this.sqlAssessmentOptionsOperations == null) {
            this.sqlAssessmentOptionsOperations
                = new SqlAssessmentOptionsOperationsImpl(clientObject.getSqlAssessmentOptionsOperations(), this);
        }
        return sqlAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of SqlCollectorOperations. It manages SqlCollector.
     * 
     * @return Resource collection API of SqlCollectorOperations.
     */
    public SqlCollectorOperations sqlCollectorOperations() {
        if (this.sqlCollectorOperations == null) {
            this.sqlCollectorOperations
                = new SqlCollectorOperationsImpl(clientObject.getSqlCollectorOperations(), this);
        }
        return sqlCollectorOperations;
    }

    /**
     * Gets the resource collection API of VmwareCollectorsOperations. It manages VmwareCollector.
     * 
     * @return Resource collection API of VmwareCollectorsOperations.
     */
    public VmwareCollectorsOperations vmwareCollectorsOperations() {
        if (this.vmwareCollectorsOperations == null) {
            this.vmwareCollectorsOperations
                = new VmwareCollectorsOperationsImpl(clientObject.getVmwareCollectorsOperations(), this);
        }
        return vmwareCollectorsOperations;
    }

    /**
     * Gets the resource collection API of WebAppAssessmentOptionsOperations.
     * 
     * @return Resource collection API of WebAppAssessmentOptionsOperations.
     */
    public WebAppAssessmentOptionsOperations webAppAssessmentOptionsOperations() {
        if (this.webAppAssessmentOptionsOperations == null) {
            this.webAppAssessmentOptionsOperations
                = new WebAppAssessmentOptionsOperationsImpl(clientObject.getWebAppAssessmentOptionsOperations(), this);
        }
        return webAppAssessmentOptionsOperations;
    }

    /**
     * Gets the resource collection API of WebAppCollectorOperations. It manages WebAppCollector.
     * 
     * @return Resource collection API of WebAppCollectorOperations.
     */
    public WebAppCollectorOperations webAppCollectorOperations() {
        if (this.webAppCollectorOperations == null) {
            this.webAppCollectorOperations
                = new WebAppCollectorOperationsImpl(clientObject.getWebAppCollectorOperations(), this);
        }
        return webAppCollectorOperations;
    }

    /**
     * Gets wrapped service client MigrationAssessmentManagementClient providing direct access to the underlying
     * auto-generated API implementation, based on Azure REST API.
     * 
     * @return Wrapped service client MigrationAssessmentManagementClient.
     */
    public MigrationAssessmentManagementClient serviceClient() {
        return this.clientObject;
    }
}

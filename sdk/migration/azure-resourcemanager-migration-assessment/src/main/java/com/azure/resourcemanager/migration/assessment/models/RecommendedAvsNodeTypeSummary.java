// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.migration.assessment.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Azure Avs Node summary.
 */
@Immutable
public final class RecommendedAvsNodeTypeSummary implements JsonSerializable<RecommendedAvsNodeTypeSummary> {
    /*
     * AVS node type.
     */
    private String avsNodeType;

    /*
     * Number of nodes.
     */
    private Integer numberOfNodes;

    /*
     * Failures to tolerate and RAID level for the Node.
     */
    private FttAndRaidLevel failuresToTolerateAndRaidLevel;

    /**
     * Creates an instance of RecommendedAvsNodeTypeSummary class.
     */
    public RecommendedAvsNodeTypeSummary() {
    }

    /**
     * Get the avsNodeType property: AVS node type.
     * 
     * @return the avsNodeType value.
     */
    public String avsNodeType() {
        return this.avsNodeType;
    }

    /**
     * Get the numberOfNodes property: Number of nodes.
     * 
     * @return the numberOfNodes value.
     */
    public Integer numberOfNodes() {
        return this.numberOfNodes;
    }

    /**
     * Get the failuresToTolerateAndRaidLevel property: Failures to tolerate and RAID level for the Node.
     * 
     * @return the failuresToTolerateAndRaidLevel value.
     */
    public FttAndRaidLevel failuresToTolerateAndRaidLevel() {
        return this.failuresToTolerateAndRaidLevel;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RecommendedAvsNodeTypeSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RecommendedAvsNodeTypeSummary if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RecommendedAvsNodeTypeSummary.
     */
    public static RecommendedAvsNodeTypeSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RecommendedAvsNodeTypeSummary deserializedRecommendedAvsNodeTypeSummary
                = new RecommendedAvsNodeTypeSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("avsNodeType".equals(fieldName)) {
                    deserializedRecommendedAvsNodeTypeSummary.avsNodeType = reader.getString();
                } else if ("numberOfNodes".equals(fieldName)) {
                    deserializedRecommendedAvsNodeTypeSummary.numberOfNodes = reader.getNullable(JsonReader::getInt);
                } else if ("failuresToTolerateAndRaidLevel".equals(fieldName)) {
                    deserializedRecommendedAvsNodeTypeSummary.failuresToTolerateAndRaidLevel
                        = FttAndRaidLevel.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRecommendedAvsNodeTypeSummary;
        });
    }
}

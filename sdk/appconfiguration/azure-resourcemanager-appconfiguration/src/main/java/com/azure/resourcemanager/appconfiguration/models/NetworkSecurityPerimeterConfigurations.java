// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of NetworkSecurityPerimeterConfigurations. */
public interface NetworkSecurityPerimeterConfigurations {
    /**
     * Lists all network security perimeter configurations for a configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a request to list network security perimeter configurations as paginated response with
     *     {@link PagedIterable}.
     */
    PagedIterable<NetworkSecurityPerimeterConfiguration> listByConfigurationStore(
        String resourceGroupName, String configStoreName);

    /**
     * Lists all network security perimeter configurations for a configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a request to list network security perimeter configurations as paginated response with
     *     {@link PagedIterable}.
     */
    PagedIterable<NetworkSecurityPerimeterConfiguration> listByConfigurationStore(
        String resourceGroupName, String configStoreName, Context context);

    /**
     * Gets the specified network security perimeter configurations associated with the configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName Network security perimeter configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified network security perimeter configurations associated with the configuration store along
     *     with {@link Response}.
     */
    Response<NetworkSecurityPerimeterConfiguration> getWithResponse(
        String resourceGroupName, String configStoreName, String nspConfigurationName, Context context);

    /**
     * Gets the specified network security perimeter configurations associated with the configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName Network security perimeter configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified network security perimeter configurations associated with the configuration store.
     */
    NetworkSecurityPerimeterConfiguration get(
        String resourceGroupName, String configStoreName, String nspConfigurationName);

    /**
     * Reconcile network security perimeter configuration for the configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName Network security perimeter configuration name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return network security perimeter configuration for a configuration store.
     */
    NetworkSecurityPerimeterConfiguration reconcile(
        String resourceGroupName, String configStoreName, String nspConfigurationName);

    /**
     * Reconcile network security perimeter configuration for the configuration store.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName Network security perimeter configuration name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return network security perimeter configuration for a configuration store.
     */
    NetworkSecurityPerimeterConfiguration reconcile(
        String resourceGroupName, String configStoreName, String nspConfigurationName, Context context);
}

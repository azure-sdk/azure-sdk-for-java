// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appconfiguration.models.NetworkSecurityPerimeter;
import com.azure.resourcemanager.appconfiguration.models.NetworkSecurityPerimeterProfile;
import com.azure.resourcemanager.appconfiguration.models.NetworkSecurityPerimeterProvisioningIssue;
import com.azure.resourcemanager.appconfiguration.models.NetworkSecurityPerimeterResourceAssociation;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The properties of network security perimeter configuration. */
@Fluent
public final class NetworkSecurityPerimeterConfigurationProperties {
    /*
     * Provisioning state of network security perimeter configuration.
     */
    @JsonProperty(value = "provisioningState")
    private String provisioningState;

    /*
     * Provisioning issues of network security perimeter configuration.
     */
    @JsonProperty(value = "provisioningIssues")
    private List<NetworkSecurityPerimeterProvisioningIssue> provisioningIssues;

    /*
     * The networkSecurityPerimeter property.
     */
    @JsonProperty(value = "networkSecurityPerimeter")
    private NetworkSecurityPerimeter networkSecurityPerimeter;

    /*
     * The resourceAssociation property.
     */
    @JsonProperty(value = "resourceAssociation")
    private NetworkSecurityPerimeterResourceAssociation resourceAssociation;

    /*
     * The profile property.
     */
    @JsonProperty(value = "profile")
    private NetworkSecurityPerimeterProfile profile;

    /** Creates an instance of NetworkSecurityPerimeterConfigurationProperties class. */
    public NetworkSecurityPerimeterConfigurationProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state of network security perimeter configuration.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState property: Provisioning state of network security perimeter configuration.
     *
     * @param provisioningState the provisioningState value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the provisioningIssues property: Provisioning issues of network security perimeter configuration.
     *
     * @return the provisioningIssues value.
     */
    public List<NetworkSecurityPerimeterProvisioningIssue> provisioningIssues() {
        return this.provisioningIssues;
    }

    /**
     * Set the provisioningIssues property: Provisioning issues of network security perimeter configuration.
     *
     * @param provisioningIssues the provisioningIssues value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties withProvisioningIssues(
        List<NetworkSecurityPerimeterProvisioningIssue> provisioningIssues) {
        this.provisioningIssues = provisioningIssues;
        return this;
    }

    /**
     * Get the networkSecurityPerimeter property: The networkSecurityPerimeter property.
     *
     * @return the networkSecurityPerimeter value.
     */
    public NetworkSecurityPerimeter networkSecurityPerimeter() {
        return this.networkSecurityPerimeter;
    }

    /**
     * Set the networkSecurityPerimeter property: The networkSecurityPerimeter property.
     *
     * @param networkSecurityPerimeter the networkSecurityPerimeter value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties withNetworkSecurityPerimeter(
        NetworkSecurityPerimeter networkSecurityPerimeter) {
        this.networkSecurityPerimeter = networkSecurityPerimeter;
        return this;
    }

    /**
     * Get the resourceAssociation property: The resourceAssociation property.
     *
     * @return the resourceAssociation value.
     */
    public NetworkSecurityPerimeterResourceAssociation resourceAssociation() {
        return this.resourceAssociation;
    }

    /**
     * Set the resourceAssociation property: The resourceAssociation property.
     *
     * @param resourceAssociation the resourceAssociation value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties withResourceAssociation(
        NetworkSecurityPerimeterResourceAssociation resourceAssociation) {
        this.resourceAssociation = resourceAssociation;
        return this;
    }

    /**
     * Get the profile property: The profile property.
     *
     * @return the profile value.
     */
    public NetworkSecurityPerimeterProfile profile() {
        return this.profile;
    }

    /**
     * Set the profile property: The profile property.
     *
     * @param profile the profile value to set.
     * @return the NetworkSecurityPerimeterConfigurationProperties object itself.
     */
    public NetworkSecurityPerimeterConfigurationProperties withProfile(NetworkSecurityPerimeterProfile profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (provisioningIssues() != null) {
            provisioningIssues().forEach(e -> e.validate());
        }
        if (networkSecurityPerimeter() != null) {
            networkSecurityPerimeter().validate();
        }
        if (resourceAssociation() != null) {
            resourceAssociation().validate();
        }
        if (profile() != null) {
            profile().validate();
        }
    }
}

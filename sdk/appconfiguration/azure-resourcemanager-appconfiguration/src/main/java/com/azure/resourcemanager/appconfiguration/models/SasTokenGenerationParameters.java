// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Parameters used for generating SAS token.
 */
@Fluent
public final class SasTokenGenerationParameters implements JsonSerializable<SasTokenGenerationParameters> {
    /*
     * The data plane resource scope that the SAS token is authorized to access.
     */
    private SasTokenScope sasTokenScope;

    /*
     * The time that the SAS token expires in the Universal ISO 8601 DateTime format. Max allowed expiration is 1 year
     * from the time of token creation.
     */
    private OffsetDateTime expires;

    /*
     * Time (in seconds) for which the data plane response may be cached by clients. App Configuration sets the
     * Cache-Control response header `max-age` to the value that's specified on the SAS token. See
     * [rfc9111](https://www.rfc-editor.org/rfc/rfc9111#name-max-age-2) for more details.
     */
    private Float cacheControlMaxAge;

    /*
     * The kind of the SAS token.
     */
    private SasKind kind;

    /**
     * Creates an instance of SasTokenGenerationParameters class.
     */
    public SasTokenGenerationParameters() {
    }

    /**
     * Get the sasTokenScope property: The data plane resource scope that the SAS token is authorized to access.
     * 
     * @return the sasTokenScope value.
     */
    public SasTokenScope sasTokenScope() {
        return this.sasTokenScope;
    }

    /**
     * Set the sasTokenScope property: The data plane resource scope that the SAS token is authorized to access.
     * 
     * @param sasTokenScope the sasTokenScope value to set.
     * @return the SasTokenGenerationParameters object itself.
     */
    public SasTokenGenerationParameters withSasTokenScope(SasTokenScope sasTokenScope) {
        this.sasTokenScope = sasTokenScope;
        return this;
    }

    /**
     * Get the expires property: The time that the SAS token expires in the Universal ISO 8601 DateTime format. Max
     * allowed expiration is 1 year from the time of token creation.
     * 
     * @return the expires value.
     */
    public OffsetDateTime expires() {
        return this.expires;
    }

    /**
     * Set the expires property: The time that the SAS token expires in the Universal ISO 8601 DateTime format. Max
     * allowed expiration is 1 year from the time of token creation.
     * 
     * @param expires the expires value to set.
     * @return the SasTokenGenerationParameters object itself.
     */
    public SasTokenGenerationParameters withExpires(OffsetDateTime expires) {
        this.expires = expires;
        return this;
    }

    /**
     * Get the cacheControlMaxAge property: Time (in seconds) for which the data plane response may be cached by
     * clients. App Configuration sets the Cache-Control response header `max-age` to the value that's specified on the
     * SAS token. See [rfc9111](https://www.rfc-editor.org/rfc/rfc9111#name-max-age-2) for more details.
     * 
     * @return the cacheControlMaxAge value.
     */
    public Float cacheControlMaxAge() {
        return this.cacheControlMaxAge;
    }

    /**
     * Set the cacheControlMaxAge property: Time (in seconds) for which the data plane response may be cached by
     * clients. App Configuration sets the Cache-Control response header `max-age` to the value that's specified on the
     * SAS token. See [rfc9111](https://www.rfc-editor.org/rfc/rfc9111#name-max-age-2) for more details.
     * 
     * @param cacheControlMaxAge the cacheControlMaxAge value to set.
     * @return the SasTokenGenerationParameters object itself.
     */
    public SasTokenGenerationParameters withCacheControlMaxAge(Float cacheControlMaxAge) {
        this.cacheControlMaxAge = cacheControlMaxAge;
        return this;
    }

    /**
     * Get the kind property: The kind of the SAS token.
     * 
     * @return the kind value.
     */
    public SasKind kind() {
        return this.kind;
    }

    /**
     * Set the kind property: The kind of the SAS token.
     * 
     * @param kind the kind value to set.
     * @return the SasTokenGenerationParameters object itself.
     */
    public SasTokenGenerationParameters withKind(SasKind kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sasTokenScope() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property sasTokenScope in model SasTokenGenerationParameters"));
        } else {
            sasTokenScope().validate();
        }
        if (expires() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property expires in model SasTokenGenerationParameters"));
        }
        if (kind() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property kind in model SasTokenGenerationParameters"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SasTokenGenerationParameters.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("sasTokenScope", this.sasTokenScope);
        jsonWriter.writeStringField("expires",
            this.expires == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.expires));
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeNumberField("cacheControlMaxAge", this.cacheControlMaxAge);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SasTokenGenerationParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SasTokenGenerationParameters if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SasTokenGenerationParameters.
     */
    public static SasTokenGenerationParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SasTokenGenerationParameters deserializedSasTokenGenerationParameters = new SasTokenGenerationParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("sasTokenScope".equals(fieldName)) {
                    deserializedSasTokenGenerationParameters.sasTokenScope = SasTokenScope.fromJson(reader);
                } else if ("expires".equals(fieldName)) {
                    deserializedSasTokenGenerationParameters.expires = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("kind".equals(fieldName)) {
                    deserializedSasTokenGenerationParameters.kind = SasKind.fromString(reader.getString());
                } else if ("cacheControlMaxAge".equals(fieldName)) {
                    deserializedSasTokenGenerationParameters.cacheControlMaxAge
                        = reader.getNullable(JsonReader::getFloat);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSasTokenGenerationParameters;
        });
    }
}

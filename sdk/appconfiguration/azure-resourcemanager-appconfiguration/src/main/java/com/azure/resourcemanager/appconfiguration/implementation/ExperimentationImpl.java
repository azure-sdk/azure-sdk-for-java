// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appconfiguration.fluent.models.ExperimentationInner;
import com.azure.resourcemanager.appconfiguration.models.Experimentation;
import com.azure.resourcemanager.appconfiguration.models.ProvisioningState;

public final class ExperimentationImpl implements Experimentation, Experimentation.Definition {
    private ExperimentationInner innerObject;

    private final com.azure.resourcemanager.appconfiguration.AppConfigurationManager serviceManager;

    ExperimentationImpl(ExperimentationInner innerObject,
        com.azure.resourcemanager.appconfiguration.AppConfigurationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String managedResourceGroupName() {
        return this.innerModel().managedResourceGroupName();
    }

    public String onlineExperimentationWorkspaceResourceId() {
        return this.innerModel().onlineExperimentationWorkspaceResourceId();
    }

    public String storageAccountResourceId() {
        return this.innerModel().storageAccountResourceId();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ExperimentationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appconfiguration.AppConfigurationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String configStoreName;

    private String experimentationName;

    public ExperimentationImpl withExistingConfigurationStore(String resourceGroupName, String configStoreName) {
        this.resourceGroupName = resourceGroupName;
        this.configStoreName = configStoreName;
        return this;
    }

    public Experimentation create() {
        this.innerObject = serviceManager.serviceClient()
            .getExperimentations()
            .create(resourceGroupName, configStoreName, experimentationName, this.innerModel(), Context.NONE);
        return this;
    }

    public Experimentation create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getExperimentations()
            .create(resourceGroupName, configStoreName, experimentationName, this.innerModel(), context);
        return this;
    }

    ExperimentationImpl(String name,
        com.azure.resourcemanager.appconfiguration.AppConfigurationManager serviceManager) {
        this.innerObject = new ExperimentationInner();
        this.serviceManager = serviceManager;
        this.experimentationName = name;
    }

    public Experimentation refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getExperimentations()
            .getWithResponse(resourceGroupName, configStoreName, experimentationName, Context.NONE)
            .getValue();
        return this;
    }

    public Experimentation refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getExperimentations()
            .getWithResponse(resourceGroupName, configStoreName, experimentationName, context)
            .getValue();
        return this;
    }

    public ExperimentationImpl withManagedResourceGroupName(String managedResourceGroupName) {
        this.innerModel().withManagedResourceGroupName(managedResourceGroupName);
        return this;
    }
}

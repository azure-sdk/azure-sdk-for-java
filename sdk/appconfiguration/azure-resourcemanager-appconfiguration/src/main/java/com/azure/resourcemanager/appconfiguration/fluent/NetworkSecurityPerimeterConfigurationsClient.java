// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appconfiguration.fluent.models.NetworkSecurityPerimeterConfigurationInner;

/**
 * An instance of this class provides access to all the operations defined in
 * NetworkSecurityPerimeterConfigurationsClient.
 */
public interface NetworkSecurityPerimeterConfigurationsClient {
    /**
     * Lists all network security perimeter configurations for a configuration store.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of network security perimeter configurations as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkSecurityPerimeterConfigurationInner> listByConfigurationStore(String resourceGroupName,
        String configStoreName);

    /**
     * Lists all network security perimeter configurations for a configuration store.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of network security perimeter configurations as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<NetworkSecurityPerimeterConfigurationInner> listByConfigurationStore(String resourceGroupName,
        String configStoreName, Context context);

    /**
     * Gets the specified network security perimeter configuration associated with the configuration store.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName The name of the network security perimeter configuration. Takes the format
     * {perimeterGuid}.{associationName}.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified network security perimeter configuration associated with the configuration store along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<NetworkSecurityPerimeterConfigurationInner> getWithResponse(String resourceGroupName,
        String configStoreName, String nspConfigurationName, Context context);

    /**
     * Gets the specified network security perimeter configuration associated with the configuration store.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName The name of the network security perimeter configuration. Takes the format
     * {perimeterGuid}.{associationName}.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified network security perimeter configuration associated with the configuration store.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    NetworkSecurityPerimeterConfigurationInner get(String resourceGroupName, String configStoreName,
        String nspConfigurationName);

    /**
     * Forces a refresh of the specified network security perimeter configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName The name of the network security perimeter configuration. Takes the format
     * {perimeterGuid}.{associationName}.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginReconcile(String resourceGroupName, String configStoreName,
        String nspConfigurationName);

    /**
     * Forces a refresh of the specified network security perimeter configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName The name of the network security perimeter configuration. Takes the format
     * {perimeterGuid}.{associationName}.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginReconcile(String resourceGroupName, String configStoreName,
        String nspConfigurationName, Context context);

    /**
     * Forces a refresh of the specified network security perimeter configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName The name of the network security perimeter configuration. Takes the format
     * {perimeterGuid}.{associationName}.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void reconcile(String resourceGroupName, String configStoreName, String nspConfigurationName);

    /**
     * Forces a refresh of the specified network security perimeter configuration.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param nspConfigurationName The name of the network security perimeter configuration. Takes the format
     * {perimeterGuid}.{associationName}.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void reconcile(String resourceGroupName, String configStoreName, String nspConfigurationName, Context context);
}

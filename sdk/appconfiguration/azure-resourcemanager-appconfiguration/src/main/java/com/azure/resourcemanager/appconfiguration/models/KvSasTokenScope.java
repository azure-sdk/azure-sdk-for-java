// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The key value resource scope that the SAS token is authorized to access.
 */
@Fluent
public final class KvSasTokenScope extends SasTokenScope {
    /*
     * The resourceType property.
     */
    private ResourceType resourceType = ResourceType.KV;

    /*
     * A filter used to match keys. Syntax reference:
     * https://aka.ms/azconfig/docs/keyvaluefiltering.
     */
    private String key;

    /*
     * A filter used to match labels. Syntax reference:
     * https://aka.ms/azconfig/docs/keyvaluefiltering.
     */
    private String label;

    /*
     * An array of tag filters used to match tags.
     */
    private List<String> tags;

    /**
     * Creates an instance of KvSasTokenScope class.
     */
    public KvSasTokenScope() {
    }

    /**
     * Get the resourceType property: The resourceType property.
     * 
     * @return the resourceType value.
     */
    @Override
    public ResourceType resourceType() {
        return this.resourceType;
    }

    /**
     * Get the key property: A filter used to match keys. Syntax reference:
     * https://aka.ms/azconfig/docs/keyvaluefiltering.
     * 
     * @return the key value.
     */
    public String key() {
        return this.key;
    }

    /**
     * Set the key property: A filter used to match keys. Syntax reference:
     * https://aka.ms/azconfig/docs/keyvaluefiltering.
     * 
     * @param key the key value to set.
     * @return the KvSasTokenScope object itself.
     */
    public KvSasTokenScope withKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Get the label property: A filter used to match labels. Syntax reference:
     * https://aka.ms/azconfig/docs/keyvaluefiltering.
     * 
     * @return the label value.
     */
    public String label() {
        return this.label;
    }

    /**
     * Set the label property: A filter used to match labels. Syntax reference:
     * https://aka.ms/azconfig/docs/keyvaluefiltering.
     * 
     * @param label the label value to set.
     * @return the KvSasTokenScope object itself.
     */
    public KvSasTokenScope withLabel(String label) {
        this.label = label;
        return this;
    }

    /**
     * Get the tags property: An array of tag filters used to match tags.
     * 
     * @return the tags value.
     */
    public List<String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: An array of tag filters used to match tags.
     * 
     * @param tags the tags value to set.
     * @return the KvSasTokenScope object itself.
     */
    public KvSasTokenScope withTags(List<String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("resourceType", this.resourceType == null ? null : this.resourceType.toString());
        jsonWriter.writeStringField("key", this.key);
        jsonWriter.writeStringField("label", this.label);
        jsonWriter.writeArrayField("tags", this.tags, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of KvSasTokenScope from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of KvSasTokenScope if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the KvSasTokenScope.
     */
    public static KvSasTokenScope fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            KvSasTokenScope deserializedKvSasTokenScope = new KvSasTokenScope();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("resourceType".equals(fieldName)) {
                    deserializedKvSasTokenScope.resourceType = ResourceType.fromString(reader.getString());
                } else if ("key".equals(fieldName)) {
                    deserializedKvSasTokenScope.key = reader.getString();
                } else if ("label".equals(fieldName)) {
                    deserializedKvSasTokenScope.label = reader.getString();
                } else if ("tags".equals(fieldName)) {
                    List<String> tags = reader.readArray(reader1 -> reader1.getString());
                    deserializedKvSasTokenScope.tags = tags;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedKvSasTokenScope;
        });
    }
}

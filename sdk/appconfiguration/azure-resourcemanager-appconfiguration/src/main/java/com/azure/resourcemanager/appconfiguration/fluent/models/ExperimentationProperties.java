// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.appconfiguration.models.ProvisioningState;
import java.io.IOException;

/**
 * All experimentation properties.
 */
@Fluent
public final class ExperimentationProperties implements JsonSerializable<ExperimentationProperties> {
    /*
     * The name of the managed resource group.
     */
    private String managedResourceGroupName;

    /*
     * The resource ID of the managed Microsoft.OnlineExperimentation/workspaces resource.
     */
    private String onlineExperimentationWorkspaceResourceId;

    /*
     * The resource ID of the managed Microsoft.Storage/storageAccounts resource.
     */
    private String storageAccountResourceId;

    /*
     * The provisioning state of the experimentation.
     */
    private ProvisioningState provisioningState;

    /**
     * Creates an instance of ExperimentationProperties class.
     */
    public ExperimentationProperties() {
    }

    /**
     * Get the managedResourceGroupName property: The name of the managed resource group.
     * 
     * @return the managedResourceGroupName value.
     */
    public String managedResourceGroupName() {
        return this.managedResourceGroupName;
    }

    /**
     * Set the managedResourceGroupName property: The name of the managed resource group.
     * 
     * @param managedResourceGroupName the managedResourceGroupName value to set.
     * @return the ExperimentationProperties object itself.
     */
    public ExperimentationProperties withManagedResourceGroupName(String managedResourceGroupName) {
        this.managedResourceGroupName = managedResourceGroupName;
        return this;
    }

    /**
     * Get the onlineExperimentationWorkspaceResourceId property: The resource ID of the managed
     * Microsoft.OnlineExperimentation/workspaces resource.
     * 
     * @return the onlineExperimentationWorkspaceResourceId value.
     */
    public String onlineExperimentationWorkspaceResourceId() {
        return this.onlineExperimentationWorkspaceResourceId;
    }

    /**
     * Get the storageAccountResourceId property: The resource ID of the managed Microsoft.Storage/storageAccounts
     * resource.
     * 
     * @return the storageAccountResourceId value.
     */
    public String storageAccountResourceId() {
        return this.storageAccountResourceId;
    }

    /**
     * Get the provisioningState property: The provisioning state of the experimentation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("managedResourceGroupName", this.managedResourceGroupName);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExperimentationProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExperimentationProperties if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExperimentationProperties.
     */
    public static ExperimentationProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExperimentationProperties deserializedExperimentationProperties = new ExperimentationProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("managedResourceGroupName".equals(fieldName)) {
                    deserializedExperimentationProperties.managedResourceGroupName = reader.getString();
                } else if ("onlineExperimentationWorkspaceResourceId".equals(fieldName)) {
                    deserializedExperimentationProperties.onlineExperimentationWorkspaceResourceId = reader.getString();
                } else if ("storageAccountResourceId".equals(fieldName)) {
                    deserializedExperimentationProperties.storageAccountResourceId = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedExperimentationProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExperimentationProperties;
        });
    }
}

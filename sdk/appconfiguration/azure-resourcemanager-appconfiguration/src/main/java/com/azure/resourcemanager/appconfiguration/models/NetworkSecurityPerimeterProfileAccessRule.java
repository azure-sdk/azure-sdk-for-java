// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The NetworkSecurityPerimeterProfileAccessRule model. */
@Fluent
public final class NetworkSecurityPerimeterProfileAccessRule {
    /*
     * The name property.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The properties property.
     */
    @JsonProperty(value = "properties")
    private NetworkSecurityPerimeterProfileAccessRuleProperties properties;

    /** Creates an instance of NetworkSecurityPerimeterProfileAccessRule class. */
    public NetworkSecurityPerimeterProfileAccessRule() {
    }

    /**
     * Get the name property: The name property.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name property.
     *
     * @param name the name value to set.
     * @return the NetworkSecurityPerimeterProfileAccessRule object itself.
     */
    public NetworkSecurityPerimeterProfileAccessRule withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the properties property: The properties property.
     *
     * @return the properties value.
     */
    public NetworkSecurityPerimeterProfileAccessRuleProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The properties property.
     *
     * @param properties the properties value to set.
     * @return the NetworkSecurityPerimeterProfileAccessRule object itself.
     */
    public NetworkSecurityPerimeterProfileAccessRule withProperties(
        NetworkSecurityPerimeterProfileAccessRuleProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
    }
}

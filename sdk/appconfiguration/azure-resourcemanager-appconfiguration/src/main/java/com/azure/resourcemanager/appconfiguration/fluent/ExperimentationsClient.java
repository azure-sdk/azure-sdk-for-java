// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appconfiguration.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appconfiguration.fluent.models.ExperimentationInner;

/**
 * An instance of this class provides access to all the operations defined in ExperimentationsClient.
 */
public interface ExperimentationsClient {
    /**
     * Lists experimentation for a given configuration store.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a request to list experimentation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExperimentationInner> list(String resourceGroupName, String configStoreName);

    /**
     * Lists experimentation for a given configuration store.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the result of a request to list experimentation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExperimentationInner> list(String resourceGroupName, String configStoreName, Context context);

    /**
     * Gets the properties of the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the experimentation along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExperimentationInner> getWithResponse(String resourceGroupName, String configStoreName,
        String experimentationName, Context context);

    /**
     * Gets the properties of the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of the experimentation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExperimentationInner get(String resourceGroupName, String configStoreName, String experimentationName);

    /**
     * Creates the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the experimentation resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExperimentationInner>, ExperimentationInner> beginCreate(String resourceGroupName,
        String configStoreName, String experimentationName);

    /**
     * Creates the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @param experimentationCreationParameters The parameters for creating the experimentation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of the experimentation resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ExperimentationInner>, ExperimentationInner> beginCreate(String resourceGroupName,
        String configStoreName, String experimentationName, ExperimentationInner experimentationCreationParameters,
        Context context);

    /**
     * Creates the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the experimentation resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExperimentationInner create(String resourceGroupName, String configStoreName, String experimentationName);

    /**
     * Creates the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @param experimentationCreationParameters The parameters for creating the experimentation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the experimentation resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExperimentationInner create(String resourceGroupName, String configStoreName, String experimentationName,
        ExperimentationInner experimentationCreationParameters, Context context);

    /**
     * Deletes the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String configStoreName,
        String experimentationName);

    /**
     * Deletes the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String configStoreName,
        String experimentationName, Context context);

    /**
     * Deletes the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String configStoreName, String experimentationName);

    /**
     * Deletes the experimentation.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param configStoreName The name of the configuration store.
     * @param experimentationName The name of the experimentation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String configStoreName, String experimentationName, Context context);
}

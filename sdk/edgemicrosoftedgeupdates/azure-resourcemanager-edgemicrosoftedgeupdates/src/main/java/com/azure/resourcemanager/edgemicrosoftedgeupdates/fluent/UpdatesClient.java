// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemicrosoftedgeupdates.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.edgemicrosoftedgeupdates.fluent.models.UpdateInner;
import com.azure.resourcemanager.edgemicrosoftedgeupdates.models.ModifyUpdate;

/**
 * An instance of this class provides access to all the operations defined in UpdatesClient.
 */
public interface UpdatesClient {
    /**
     * List Update resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Update list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<UpdateInner> list(String resourceUri);

    /**
     * List Update resources by parent.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Update list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<UpdateInner> list(String resourceUri, Context context);

    /**
     * Get a Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Update along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<UpdateInner> getWithResponse(String resourceUri, String updateName, Context context);

    /**
     * Get a Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UpdateInner get(String resourceUri, String updateName);

    /**
     * Create an Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an Edge Aggregation resource for update.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<UpdateInner>, UpdateInner> beginCreateOrModify(String resourceUri, String updateName,
        UpdateInner resource);

    /**
     * Create an Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an Edge Aggregation resource for update.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<UpdateInner>, UpdateInner> beginCreateOrModify(String resourceUri, String updateName,
        UpdateInner resource, Context context);

    /**
     * Create an Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Edge Aggregation resource for update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UpdateInner createOrModify(String resourceUri, String updateName, UpdateInner resource);

    /**
     * Create an Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Edge Aggregation resource for update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UpdateInner createOrModify(String resourceUri, String updateName, UpdateInner resource, Context context);

    /**
     * Update a Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Edge Aggregation resource for update along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<UpdateInner> modifyWithResponse(String resourceUri, String updateName, ModifyUpdate properties,
        Context context);

    /**
     * Update a Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Edge Aggregation resource for update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    UpdateInner modify(String resourceUri, String updateName, ModifyUpdate properties);

    /**
     * Delete an Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceUri, String updateName, Context context);

    /**
     * Delete an Update.
     * 
     * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
     * @param updateName Name of update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceUri, String updateName);
}

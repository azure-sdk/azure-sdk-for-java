// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.messagingconnectors.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Basic info for EventHub.
 */
@Fluent
public final class EventHubConfig {
    /*
     * namespace of the EventHub.
     */
    @JsonProperty(value = "namespaceHostName", required = true)
    private String namespaceHostname;

    /*
     * name of the EventHub.
     */
    @JsonProperty(value = "eventHubName", required = true)
    private String eventHubName;

    /*
     * connectionString of the EventHub.
     */
    @JsonProperty(value = "connectionString")
    private String connectionString;

    /**
     * Creates an instance of EventHubConfig class.
     */
    public EventHubConfig() {
    }

    /**
     * Get the namespaceHostname property: namespace of the EventHub.
     * 
     * @return the namespaceHostname value.
     */
    public String namespaceHostname() {
        return this.namespaceHostname;
    }

    /**
     * Set the namespaceHostname property: namespace of the EventHub.
     * 
     * @param namespaceHostname the namespaceHostname value to set.
     * @return the EventHubConfig object itself.
     */
    public EventHubConfig withNamespaceHostname(String namespaceHostname) {
        this.namespaceHostname = namespaceHostname;
        return this;
    }

    /**
     * Get the eventHubName property: name of the EventHub.
     * 
     * @return the eventHubName value.
     */
    public String eventHubName() {
        return this.eventHubName;
    }

    /**
     * Set the eventHubName property: name of the EventHub.
     * 
     * @param eventHubName the eventHubName value to set.
     * @return the EventHubConfig object itself.
     */
    public EventHubConfig withEventHubName(String eventHubName) {
        this.eventHubName = eventHubName;
        return this;
    }

    /**
     * Get the connectionString property: connectionString of the EventHub.
     * 
     * @return the connectionString value.
     */
    public String connectionString() {
        return this.connectionString;
    }

    /**
     * Set the connectionString property: connectionString of the EventHub.
     * 
     * @param connectionString the connectionString value to set.
     * @return the EventHubConfig object itself.
     */
    public EventHubConfig withConnectionString(String connectionString) {
        this.connectionString = connectionString;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (namespaceHostname() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property namespaceHostname in model EventHubConfig"));
        }
        if (eventHubName() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property eventHubName in model EventHubConfig"));
        }
        if (connectionString() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property connectionString in model EventHubConfig"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(EventHubConfig.class);
}

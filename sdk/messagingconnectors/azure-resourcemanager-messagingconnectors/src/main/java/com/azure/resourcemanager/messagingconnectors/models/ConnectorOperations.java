// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.messagingconnectors.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ConnectorOperations.
 */
public interface ConnectorOperations {
    /**
     * List Connector By Subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConnectorInstance list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConnectorInstance> list();

    /**
     * List Connector By Subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConnectorInstance list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConnectorInstance> list(Context context);

    /**
     * List Connector By ResourceGroup and Subscription.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConnectorInstance list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConnectorInstance> listByResourceGroup(String resourceGroupName);

    /**
     * List Connector By ResourceGroup and Subscription.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a ConnectorInstance list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ConnectorInstance> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Connector instance for the specified subscription, resource group, and instance name along with
     * {@link Response}.
     */
    Response<ConnectorInstance> getByResourceGroupWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Connector instance for the specified subscription, resource group, and instance name.
     */
    ConnectorInstance getByResourceGroup(String resourceGroupName, String name);

    /**
     * Delete an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Delete an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String name);

    /**
     * Pause one Connector to paused status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> pauseWithResponse(String resourceGroupName, String name, Object body, Context context);

    /**
     * Pause one Connector to paused status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void pause(String resourceGroupName, String name, Object body);

    /**
     * Resume one Connector to running status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> resumeWithResponse(String resourceGroupName, String name, Object body, Context context);

    /**
     * Resume one Connector to running status.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Connector resource.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void resume(String resourceGroupName, String name, Object body);

    /**
     * Gets an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Connector instance for the specified subscription, resource group, and instance name along with
     * {@link Response}.
     */
    ConnectorInstance getById(String id);

    /**
     * Gets an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Connector instance for the specified subscription, resource group, and instance name along with
     * {@link Response}.
     */
    Response<ConnectorInstance> getByIdWithResponse(String id, Context context);

    /**
     * Delete an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete an Connector instance for the specified subscription, resource group, and instance name.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConnectorInstance resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ConnectorInstance definition.
     */
    ConnectorInstance.DefinitionStages.Blank define(String name);
}

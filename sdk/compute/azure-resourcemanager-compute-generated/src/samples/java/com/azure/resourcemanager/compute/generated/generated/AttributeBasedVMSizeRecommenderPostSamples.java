// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.compute.generated.models.AttributeBasedVMSizeRecommenderInput;
import java.io.IOException;

/**
 * Samples for AttributeBasedVMSizeRecommender Post.
 */
public final class AttributeBasedVMSizeRecommenderPostSamples {
    /*
     * x-ms-original-file:
     * specification/compute/resource-manager/Microsoft.Compute/DiagnosticRP/preview/2025-02-01-preview/examples/
     * GenerateAttributeBasedVMSizeRecommender.json
     */
    /**
     * Sample code: Returns VMSize recommendations for given configurations.
     * 
     * @param manager Entry point to ComputeManager.
     */
    public static void returnsVMSizeRecommendationsForGivenConfigurations(
        com.azure.resourcemanager.compute.generated.ComputeManager manager) throws IOException {
        manager.attributeBasedVMSizeRecommenders()
            .postWithResponse("eastus", new AttributeBasedVMSizeRecommenderInput()
                .withRegularPriorityProfile(SerializerFactory.createDefaultManagementSerializerAdapter()
                    .deserialize("{\"capacityUnitType\":\"VMInstanceCount\",\"targetCapacity\":1}", Object.class,
                        SerializerEncoding.JSON))
                .withSpotPriorityProfile(SerializerFactory.createDefaultManagementSerializerAdapter()
                    .deserialize(
                        "{\"capacityUnitType\":\"VMInstanceCount\",\"maxPricePerVM\":0.2,\"targetCapacity\":1}",
                        Object.class, SerializerEncoding.JSON))
                .withRecommendationProperties(SerializerFactory.createDefaultManagementSerializerAdapter()
                    .deserialize("{\"restrictionsFilter\":\"QuotaAndOfferRestrictions\"}", Object.class,
                        SerializerEncoding.JSON))
                .withResourceProperties(SerializerFactory.createDefaultManagementSerializerAdapter()
                    .deserialize(
                        "{\"vmAttributes\":{\"acceleratedNetworkingSupport\":\"included\",\"acceleratorCount\":{\"Max\":0,\"Min\":0},\"acceleratorManufacturers\":[\"Intel\",\"AMD\",\"NVidia\"],\"acceleratorSupport\":\"included\",\"acceleratorTypes\":[\"FPGA\",\"GPU\"],\"allowedVMSizes\":[],\"architectureTypes\":[\"x86\",\"arm64\"],\"burstableSupport\":\"included\",\"confidentialVMSupport\":\"included\",\"cpuManufacturers\":[\"Intel\",\"AMD\"],\"dataDiskCount\":{\"Max\":4,\"Min\":0},\"excludeVMSizes\":[],\"hibernationSupport\":\"included\",\"hyperVGenerations\":[\"Gen1\",\"Gen2\"],\"localStorageInMiB\":{\"Max\":0,\"Min\":0},\"localStorageSupport\":\"included\",\"localStorageTypes\":[\"SSD\",\"HDD\"],\"memoryInMiB\":{\"Max\":0,\"Min\":0},\"networkBandwidthInMbps\":{\"Max\":0,\"Min\":0},\"networkInterfaceCount\":{\"Max\":4,\"Min\":0},\"osType\":[\"Windows\",\"Linux\"],\"rdmaNetworkInterfaceCount\":{\"Max\":0,\"Min\":0},\"rdmaSupport\":\"included\",\"ultraSSDSupport\":\"included\",\"vCpuCount\":{\"Max\":0,\"Min\":0},\"vmCategories\":[\"General Purpose\"]}}",
                        Object.class, SerializerEncoding.JSON)),
                com.azure.core.util.Context.NONE);
    }
}

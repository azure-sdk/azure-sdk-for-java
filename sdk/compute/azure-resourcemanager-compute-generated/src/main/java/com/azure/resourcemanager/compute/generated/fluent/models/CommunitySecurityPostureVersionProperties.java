// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.compute.generated.models.PostureSetting;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineExtensionAutoGenerated2;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Map;

/**
 * Describes the properties of a gallery security posture version.
 */
@Fluent
public final class CommunitySecurityPostureVersionProperties
    implements JsonSerializable<CommunitySecurityPostureVersionProperties> {
    /*
     * If set to true, Virtual Machines deployed from the latest version of the security posture won't use this posture
     * version.
     */
    private Boolean excludeFromLatest;

    /*
     * A list of security posture settings, in key-value pair.
     */
    private List<PostureSetting> settings;

    /*
     * A setting for gallery security posture.
     */
    private VirtualMachineExtensionAutoGenerated2 vmExtensions;

    /*
     * The disclaimer for a community gallery resource.
     */
    private String disclaimer;

    /*
     * The artifact tags of a community gallery resource.
     */
    private Map<String, String> artifactTags;

    /*
     * The published date of the gallery security posture version. This property can be used for decommissioning
     * purposes. This property is updatable.
     */
    private OffsetDateTime publishedDate;

    /*
     * The end of life date of the gallery security posture version. This property can be used for decommissioning
     * purposes. This property is updatable.
     */
    private OffsetDateTime endOfLifeDate;

    /**
     * Creates an instance of CommunitySecurityPostureVersionProperties class.
     */
    public CommunitySecurityPostureVersionProperties() {
    }

    /**
     * Get the excludeFromLatest property: If set to true, Virtual Machines deployed from the latest version of the
     * security posture won't use this posture version.
     * 
     * @return the excludeFromLatest value.
     */
    public Boolean excludeFromLatest() {
        return this.excludeFromLatest;
    }

    /**
     * Set the excludeFromLatest property: If set to true, Virtual Machines deployed from the latest version of the
     * security posture won't use this posture version.
     * 
     * @param excludeFromLatest the excludeFromLatest value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties withExcludeFromLatest(Boolean excludeFromLatest) {
        this.excludeFromLatest = excludeFromLatest;
        return this;
    }

    /**
     * Get the settings property: A list of security posture settings, in key-value pair.
     * 
     * @return the settings value.
     */
    public List<PostureSetting> settings() {
        return this.settings;
    }

    /**
     * Set the settings property: A list of security posture settings, in key-value pair.
     * 
     * @param settings the settings value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties withSettings(List<PostureSetting> settings) {
        this.settings = settings;
        return this;
    }

    /**
     * Get the vmExtensions property: A setting for gallery security posture.
     * 
     * @return the vmExtensions value.
     */
    public VirtualMachineExtensionAutoGenerated2 vmExtensions() {
        return this.vmExtensions;
    }

    /**
     * Set the vmExtensions property: A setting for gallery security posture.
     * 
     * @param vmExtensions the vmExtensions value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties
        withVmExtensions(VirtualMachineExtensionAutoGenerated2 vmExtensions) {
        this.vmExtensions = vmExtensions;
        return this;
    }

    /**
     * Get the disclaimer property: The disclaimer for a community gallery resource.
     * 
     * @return the disclaimer value.
     */
    public String disclaimer() {
        return this.disclaimer;
    }

    /**
     * Set the disclaimer property: The disclaimer for a community gallery resource.
     * 
     * @param disclaimer the disclaimer value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties withDisclaimer(String disclaimer) {
        this.disclaimer = disclaimer;
        return this;
    }

    /**
     * Get the artifactTags property: The artifact tags of a community gallery resource.
     * 
     * @return the artifactTags value.
     */
    public Map<String, String> artifactTags() {
        return this.artifactTags;
    }

    /**
     * Set the artifactTags property: The artifact tags of a community gallery resource.
     * 
     * @param artifactTags the artifactTags value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties withArtifactTags(Map<String, String> artifactTags) {
        this.artifactTags = artifactTags;
        return this;
    }

    /**
     * Get the publishedDate property: The published date of the gallery security posture version. This property can be
     * used for decommissioning purposes. This property is updatable.
     * 
     * @return the publishedDate value.
     */
    public OffsetDateTime publishedDate() {
        return this.publishedDate;
    }

    /**
     * Set the publishedDate property: The published date of the gallery security posture version. This property can be
     * used for decommissioning purposes. This property is updatable.
     * 
     * @param publishedDate the publishedDate value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties withPublishedDate(OffsetDateTime publishedDate) {
        this.publishedDate = publishedDate;
        return this;
    }

    /**
     * Get the endOfLifeDate property: The end of life date of the gallery security posture version. This property can
     * be used for decommissioning purposes. This property is updatable.
     * 
     * @return the endOfLifeDate value.
     */
    public OffsetDateTime endOfLifeDate() {
        return this.endOfLifeDate;
    }

    /**
     * Set the endOfLifeDate property: The end of life date of the gallery security posture version. This property can
     * be used for decommissioning purposes. This property is updatable.
     * 
     * @param endOfLifeDate the endOfLifeDate value to set.
     * @return the CommunitySecurityPostureVersionProperties object itself.
     */
    public CommunitySecurityPostureVersionProperties withEndOfLifeDate(OffsetDateTime endOfLifeDate) {
        this.endOfLifeDate = endOfLifeDate;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (settings() != null) {
            settings().forEach(e -> e.validate());
        }
        if (vmExtensions() != null) {
            vmExtensions().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("excludeFromLatest", this.excludeFromLatest);
        jsonWriter.writeArrayField("settings", this.settings, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("vmExtensions", this.vmExtensions);
        jsonWriter.writeStringField("disclaimer", this.disclaimer);
        jsonWriter.writeMapField("artifactTags", this.artifactTags, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("publishedDate",
            this.publishedDate == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.publishedDate));
        jsonWriter.writeStringField("endOfLifeDate",
            this.endOfLifeDate == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.endOfLifeDate));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunitySecurityPostureVersionProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunitySecurityPostureVersionProperties if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunitySecurityPostureVersionProperties.
     */
    public static CommunitySecurityPostureVersionProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunitySecurityPostureVersionProperties deserializedCommunitySecurityPostureVersionProperties
                = new CommunitySecurityPostureVersionProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("excludeFromLatest".equals(fieldName)) {
                    deserializedCommunitySecurityPostureVersionProperties.excludeFromLatest
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("settings".equals(fieldName)) {
                    List<PostureSetting> settings = reader.readArray(reader1 -> PostureSetting.fromJson(reader1));
                    deserializedCommunitySecurityPostureVersionProperties.settings = settings;
                } else if ("vmExtensions".equals(fieldName)) {
                    deserializedCommunitySecurityPostureVersionProperties.vmExtensions
                        = VirtualMachineExtensionAutoGenerated2.fromJson(reader);
                } else if ("disclaimer".equals(fieldName)) {
                    deserializedCommunitySecurityPostureVersionProperties.disclaimer = reader.getString();
                } else if ("artifactTags".equals(fieldName)) {
                    Map<String, String> artifactTags = reader.readMap(reader1 -> reader1.getString());
                    deserializedCommunitySecurityPostureVersionProperties.artifactTags = artifactTags;
                } else if ("publishedDate".equals(fieldName)) {
                    deserializedCommunitySecurityPostureVersionProperties.publishedDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("endOfLifeDate".equals(fieldName)) {
                    deserializedCommunitySecurityPostureVersionProperties.endOfLifeDate = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunitySecurityPostureVersionProperties;
        });
    }
}

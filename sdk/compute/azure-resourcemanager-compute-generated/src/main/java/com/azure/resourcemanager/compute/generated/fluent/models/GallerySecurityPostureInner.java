// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.resourcemanager.compute.generated.models.OperatingSystemTypes;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * Specifies information about the gallery security posture definition that you want to create or update.
 */
@Fluent
public final class GallerySecurityPostureInner extends Resource {
    /*
     * Describes the properties of a gallery security posture definition.
     */
    @JsonProperty(value = "properties")
    private GallerySecurityPostureProperties innerProperties;

    /**
     * Creates an instance of GallerySecurityPostureInner class.
     */
    public GallerySecurityPostureInner() {
    }

    /**
     * Get the innerProperties property: Describes the properties of a gallery security posture definition.
     * 
     * @return the innerProperties value.
     */
    private GallerySecurityPostureProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GallerySecurityPostureInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GallerySecurityPostureInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the description property: The description of this gallery security posture definition resource. This
     * property is updatable.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of this gallery security posture definition resource. This
     * property is updatable.
     * 
     * @param description the description value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the eula property: The Eula agreement for the gallery security posture definition.
     * 
     * @return the eula value.
     */
    public String eula() {
        return this.innerProperties() == null ? null : this.innerProperties().eula();
    }

    /**
     * Set the eula property: The Eula agreement for the gallery security posture definition.
     * 
     * @param eula the eula value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withEula(String eula) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withEula(eula);
        return this;
    }

    /**
     * Get the privacyStatementUri property: The privacy statement uri.
     * 
     * @return the privacyStatementUri value.
     */
    public String privacyStatementUri() {
        return this.innerProperties() == null ? null : this.innerProperties().privacyStatementUri();
    }

    /**
     * Set the privacyStatementUri property: The privacy statement uri.
     * 
     * @param privacyStatementUri the privacyStatementUri value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withPrivacyStatementUri(String privacyStatementUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withPrivacyStatementUri(privacyStatementUri);
        return this;
    }

    /**
     * Get the releaseNoteUri property: The release note uri.
     * 
     * @return the releaseNoteUri value.
     */
    public String releaseNoteUri() {
        return this.innerProperties() == null ? null : this.innerProperties().releaseNoteUri();
    }

    /**
     * Set the releaseNoteUri property: The release note uri.
     * 
     * @param releaseNoteUri the releaseNoteUri value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withReleaseNoteUri(String releaseNoteUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withReleaseNoteUri(releaseNoteUri);
        return this;
    }

    /**
     * Get the endOfLifeDate property: The end of life date of the gallery security posture definitionn. This property
     * can be used for decommissioning purposes. This property is updatable.
     * 
     * @return the endOfLifeDate value.
     */
    public OffsetDateTime endOfLifeDate() {
        return this.innerProperties() == null ? null : this.innerProperties().endOfLifeDate();
    }

    /**
     * Set the endOfLifeDate property: The end of life date of the gallery security posture definitionn. This property
     * can be used for decommissioning purposes. This property is updatable.
     * 
     * @param endOfLifeDate the endOfLifeDate value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withEndOfLifeDate(OffsetDateTime endOfLifeDate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withEndOfLifeDate(endOfLifeDate);
        return this;
    }

    /**
     * Get the osType property: This property allows you to specify the supported type of the OS that application is
     * built for. Possible values are: **Windows,** **Linux.**.
     * 
     * @return the osType value.
     */
    public OperatingSystemTypes osType() {
        return this.innerProperties() == null ? null : this.innerProperties().osType();
    }

    /**
     * Set the osType property: This property allows you to specify the supported type of the OS that application is
     * built for. Possible values are: **Windows,** **Linux.**.
     * 
     * @param osType the osType value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withOsType(OperatingSystemTypes osType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withOsType(osType);
        return this;
    }

    /**
     * Get the applicableResourceTypes property: Applicable resource types, like virtual machine scale set, of this
     * posture setting.
     * 
     * @return the applicableResourceTypes value.
     */
    public List<String> applicableResourceTypes() {
        return this.innerProperties() == null ? null : this.innerProperties().applicableResourceTypes();
    }

    /**
     * Set the applicableResourceTypes property: Applicable resource types, like virtual machine scale set, of this
     * posture setting.
     * 
     * @param applicableResourceTypes the applicableResourceTypes value to set.
     * @return the GallerySecurityPostureInner object itself.
     */
    public GallerySecurityPostureInner withApplicableResourceTypes(List<String> applicableResourceTypes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureProperties();
        }
        this.innerProperties().withApplicableResourceTypes(applicableResourceTypes);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

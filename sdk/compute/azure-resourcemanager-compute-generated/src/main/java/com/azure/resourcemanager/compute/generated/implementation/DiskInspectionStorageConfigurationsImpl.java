// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.compute.generated.fluent.DiskInspectionStorageConfigurationsClient;
import com.azure.resourcemanager.compute.generated.fluent.models.StorageConfigurationResponseInner;
import com.azure.resourcemanager.compute.generated.models.DiskInspectionStorageConfigurations;
import com.azure.resourcemanager.compute.generated.models.StorageConfigurationInput;
import com.azure.resourcemanager.compute.generated.models.StorageConfigurationResponse;

public final class DiskInspectionStorageConfigurationsImpl implements DiskInspectionStorageConfigurations {
    private static final ClientLogger LOGGER = new ClientLogger(DiskInspectionStorageConfigurationsImpl.class);

    private final DiskInspectionStorageConfigurationsClient innerClient;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public DiskInspectionStorageConfigurationsImpl(DiskInspectionStorageConfigurationsClient innerClient,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Void> registerWithResponse(String location, StorageConfigurationInput storageConfigurationInput,
        Context context) {
        return this.serviceClient().registerWithResponse(location, storageConfigurationInput, context);
    }

    public void register(String location, StorageConfigurationInput storageConfigurationInput) {
        this.serviceClient().register(location, storageConfigurationInput);
    }

    public Response<StorageConfigurationResponse> validateWithResponse(String location, Context context) {
        Response<StorageConfigurationResponseInner> inner
            = this.serviceClient().validateWithResponse(location, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new StorageConfigurationResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public StorageConfigurationResponse validate(String location) {
        StorageConfigurationResponseInner inner = this.serviceClient().validate(location);
        if (inner != null) {
            return new StorageConfigurationResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DiskInspectionStorageConfigurationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }
}

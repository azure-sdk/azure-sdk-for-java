// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.io.InputStream;

/** Resource collection API of CloudServiceRoleInstances. */
public interface CloudServiceRoleInstances {
    /**
     * Deletes a role instance from a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String cloudServiceName, String roleInstanceName);

    /**
     * Deletes a role instance from a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String cloudServiceName, String roleInstanceName, Context context);

    /**
     * Gets a role instance from a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param expand The expand expression to apply to the operation. 'UserData' is not supported for cloud services.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a role instance from a cloud service along with {@link Response}.
     */
    Response<RoleInstance> getWithResponse(
        String resourceGroupName,
        String cloudServiceName,
        String roleInstanceName,
        InstanceViewTypes expand,
        Context context);

    /**
     * Gets a role instance from a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a role instance from a cloud service.
     */
    RoleInstance get(String resourceGroupName, String cloudServiceName, String roleInstanceName);

    /**
     * Retrieves information about the run-time state of a role instance in a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the instance view of the role instance along with {@link Response}.
     */
    Response<RoleInstanceView> getInstanceViewWithResponse(
        String resourceGroupName, String cloudServiceName, String roleInstanceName, Context context);

    /**
     * Retrieves information about the run-time state of a role instance in a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the instance view of the role instance.
     */
    RoleInstanceView getInstanceView(String resourceGroupName, String cloudServiceName, String roleInstanceName);

    /**
     * Gets the list of all role instances in a cloud service. Use nextLink property in the response to get the next
     * page of role instances. Do this till nextLink is null to fetch all the role instances.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of all role instances in a cloud service as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RoleInstance> list(String resourceGroupName, String cloudServiceName);

    /**
     * Gets the list of all role instances in a cloud service. Use nextLink property in the response to get the next
     * page of role instances. Do this till nextLink is null to fetch all the role instances.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param expand The expand expression to apply to the operation. 'UserData' is not supported for cloud services.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of all role instances in a cloud service as paginated response with {@link PagedIterable}.
     */
    PagedIterable<RoleInstance> list(
        String resourceGroupName, String cloudServiceName, InstanceViewTypes expand, Context context);

    /**
     * The Reboot Role Instance asynchronous operation requests a reboot of a role instance in the cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restart(String resourceGroupName, String cloudServiceName, String roleInstanceName);

    /**
     * The Reboot Role Instance asynchronous operation requests a reboot of a role instance in the cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restart(String resourceGroupName, String cloudServiceName, String roleInstanceName, Context context);

    /**
     * The Reimage Role Instance asynchronous operation reinstalls the operating system on instances of web roles or
     * worker roles.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void reimage(String resourceGroupName, String cloudServiceName, String roleInstanceName);

    /**
     * The Reimage Role Instance asynchronous operation reinstalls the operating system on instances of web roles or
     * worker roles.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void reimage(String resourceGroupName, String cloudServiceName, String roleInstanceName, Context context);

    /**
     * The Rebuild Role Instance asynchronous operation reinstalls the operating system on instances of web roles or
     * worker roles and initializes the storage resources that are used by them. If you do not want to initialize
     * storage resources, you can use Reimage Role Instance.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void rebuild(String resourceGroupName, String cloudServiceName, String roleInstanceName);

    /**
     * The Rebuild Role Instance asynchronous operation reinstalls the operating system on instances of web roles or
     * worker roles and initializes the storage resources that are used by them. If you do not want to initialize
     * storage resources, you can use Reimage Role Instance.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.compute.generated.models.ApiErrorException thrown if the request is rejected by
     *     server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void rebuild(String resourceGroupName, String cloudServiceName, String roleInstanceName, Context context);

    /**
     * Gets a remote desktop file for a role instance in a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a remote desktop file for a role instance in a cloud service along with {@link Response}.
     */
    Response<InputStream> getRemoteDesktopFileWithResponse(
        String resourceGroupName, String cloudServiceName, String roleInstanceName, Context context);

    /**
     * Gets a remote desktop file for a role instance in a cloud service.
     *
     * @param resourceGroupName Name of the resource group.
     * @param cloudServiceName Name of the cloud service.
     * @param roleInstanceName Name of the role instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a remote desktop file for a role instance in a cloud service.
     */
    InputStream getRemoteDesktopFile(String resourceGroupName, String cloudServiceName, String roleInstanceName);
}

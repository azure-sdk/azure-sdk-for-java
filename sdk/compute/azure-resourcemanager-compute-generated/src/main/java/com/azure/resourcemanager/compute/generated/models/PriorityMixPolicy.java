// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Specifies the desired targets for mixing Spot and Regular priority VMs in the same VMSS Flex instance. This feature
 * is only supported for Scale Sets with Flexible orchestration mode. &lt;br&gt;&lt;br&gt;Minimum api-version:
 * 2022-08-01.
 */
@Fluent
public final class PriorityMixPolicy {
    /*
     * Base number of regular priority VM's that will be created as this scale set scales out.
     */
    @JsonProperty(value = "baseRegularPriorityCount")
    private Integer baseRegularPriorityCount;

    /*
     * Percentage of VM's with regular priority after the base regular priority count has been reached
     */
    @JsonProperty(value = "regularPriorityPercentageAboveBase")
    private Integer regularPriorityPercentageAboveBase;

    /**
     * Get the baseRegularPriorityCount property: Base number of regular priority VM's that will be created as this
     * scale set scales out.
     *
     * @return the baseRegularPriorityCount value.
     */
    public Integer baseRegularPriorityCount() {
        return this.baseRegularPriorityCount;
    }

    /**
     * Set the baseRegularPriorityCount property: Base number of regular priority VM's that will be created as this
     * scale set scales out.
     *
     * @param baseRegularPriorityCount the baseRegularPriorityCount value to set.
     * @return the PriorityMixPolicy object itself.
     */
    public PriorityMixPolicy withBaseRegularPriorityCount(Integer baseRegularPriorityCount) {
        this.baseRegularPriorityCount = baseRegularPriorityCount;
        return this;
    }

    /**
     * Get the regularPriorityPercentageAboveBase property: Percentage of VM's with regular priority after the base
     * regular priority count has been reached.
     *
     * @return the regularPriorityPercentageAboveBase value.
     */
    public Integer regularPriorityPercentageAboveBase() {
        return this.regularPriorityPercentageAboveBase;
    }

    /**
     * Set the regularPriorityPercentageAboveBase property: Percentage of VM's with regular priority after the base
     * regular priority count has been reached.
     *
     * @param regularPriorityPercentageAboveBase the regularPriorityPercentageAboveBase value to set.
     * @return the PriorityMixPolicy object itself.
     */
    public PriorityMixPolicy withRegularPriorityPercentageAboveBase(Integer regularPriorityPercentageAboveBase) {
        this.regularPriorityPercentageAboveBase = regularPriorityPercentageAboveBase;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

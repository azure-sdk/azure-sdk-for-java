// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.compute.generated.models.OperatingSystemTypes;
import com.azure.resourcemanager.compute.generated.models.PirCommunityGalleryResource;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * Specifies information about the gallery security posture that you want to create or update.
 */
@Fluent
public final class CommunitySecurityPostureInner extends PirCommunityGalleryResource {
    /*
     * Describes the properties of a gallery security posture.
     */
    private CommunitySecurityPostureProperties innerProperties;

    /*
     * Resource name
     */
    private String name;

    /*
     * Resource type
     */
    private String type;

    /*
     * The identifier information of community gallery.
     */
    private CommunityGalleryIdentifier innerIdentifier;

    /**
     * Creates an instance of CommunitySecurityPostureInner class.
     */
    public CommunitySecurityPostureInner() {
    }

    /**
     * Get the innerProperties property: Describes the properties of a gallery security posture.
     * 
     * @return the innerProperties value.
     */
    private CommunitySecurityPostureProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the name property: Resource name.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: Resource type.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the innerIdentifier property: The identifier information of community gallery.
     * 
     * @return the innerIdentifier value.
     */
    private CommunityGalleryIdentifier innerIdentifier() {
        return this.innerIdentifier;
    }

    /**
     * Get the uniqueId property: The unique id of this community gallery.
     * 
     * @return the uniqueId value.
     */
    public String uniqueId() {
        return this.innerIdentifier() == null ? null : this.innerIdentifier().uniqueId();
    }

    /**
     * Set the uniqueId property: The unique id of this community gallery.
     * 
     * @param uniqueId the uniqueId value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withUniqueId(String uniqueId) {
        if (this.innerIdentifier() == null) {
            this.innerIdentifier = new CommunityGalleryIdentifier();
        }
        this.innerIdentifier().withUniqueId(uniqueId);
        return this;
    }

    /**
     * Get the osType property: This property allows you to specify the type of the OS that is included in the disk when
     * creating a VM from a managed image. Possible values are: **Windows,** **Linux.**.
     * 
     * @return the osType value.
     */
    public OperatingSystemTypes osType() {
        return this.innerProperties() == null ? null : this.innerProperties().osType();
    }

    /**
     * Set the osType property: This property allows you to specify the type of the OS that is included in the disk when
     * creating a VM from a managed image. Possible values are: **Windows,** **Linux.**.
     * 
     * @param osType the osType value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withOsType(OperatingSystemTypes osType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withOsType(osType);
        return this;
    }

    /**
     * Get the applicableResourceTypes property: Applicable resource types, like virtual machine scale set, of this
     * posture setting.
     * 
     * @return the applicableResourceTypes value.
     */
    public List<String> applicableResourceTypes() {
        return this.innerProperties() == null ? null : this.innerProperties().applicableResourceTypes();
    }

    /**
     * Set the applicableResourceTypes property: Applicable resource types, like virtual machine scale set, of this
     * posture setting.
     * 
     * @param applicableResourceTypes the applicableResourceTypes value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withApplicableResourceTypes(List<String> applicableResourceTypes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withApplicableResourceTypes(applicableResourceTypes);
        return this;
    }

    /**
     * Get the description property: Description for the current community security posture.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: Description for the current community security posture.
     * 
     * @param description the description value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the releaseNotesUri property: Release notes URI for the current community gallery security posture.
     * 
     * @return the releaseNotesUri value.
     */
    public String releaseNotesUri() {
        return this.innerProperties() == null ? null : this.innerProperties().releaseNotesUri();
    }

    /**
     * Set the releaseNotesUri property: Release notes URI for the current community gallery security posture.
     * 
     * @param releaseNotesUri the releaseNotesUri value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withReleaseNotesUri(String releaseNotesUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withReleaseNotesUri(releaseNotesUri);
        return this;
    }

    /**
     * Get the endOfLifeDate property: The end of life date of the gallery security posture. This property can be used
     * for decommissioning purposes. This property is updatable.
     * 
     * @return the endOfLifeDate value.
     */
    public OffsetDateTime endOfLifeDate() {
        return this.innerProperties() == null ? null : this.innerProperties().endOfLifeDate();
    }

    /**
     * Set the endOfLifeDate property: The end of life date of the gallery security posture. This property can be used
     * for decommissioning purposes. This property is updatable.
     * 
     * @param endOfLifeDate the endOfLifeDate value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withEndOfLifeDate(OffsetDateTime endOfLifeDate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withEndOfLifeDate(endOfLifeDate);
        return this;
    }

    /**
     * Get the privacyStatementUri property: Privacy statement URI for the current community gallery security posture.
     * 
     * @return the privacyStatementUri value.
     */
    public String privacyStatementUri() {
        return this.innerProperties() == null ? null : this.innerProperties().privacyStatementUri();
    }

    /**
     * Set the privacyStatementUri property: Privacy statement URI for the current community gallery security posture.
     * 
     * @param privacyStatementUri the privacyStatementUri value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withPrivacyStatementUri(String privacyStatementUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withPrivacyStatementUri(privacyStatementUri);
        return this;
    }

    /**
     * Get the eula property: The end-user license agreement for the current community gallery security posture.
     * 
     * @return the eula value.
     */
    public String eula() {
        return this.innerProperties() == null ? null : this.innerProperties().eula();
    }

    /**
     * Set the eula property: The end-user license agreement for the current community gallery security posture.
     * 
     * @param eula the eula value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withEula(String eula) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withEula(eula);
        return this;
    }

    /**
     * Get the disclaimer property: The disclaimer for a community gallery resource.
     * 
     * @return the disclaimer value.
     */
    public String disclaimer() {
        return this.innerProperties() == null ? null : this.innerProperties().disclaimer();
    }

    /**
     * Set the disclaimer property: The disclaimer for a community gallery resource.
     * 
     * @param disclaimer the disclaimer value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withDisclaimer(String disclaimer) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withDisclaimer(disclaimer);
        return this;
    }

    /**
     * Get the artifactTags property: The artifact tags of a community gallery resource.
     * 
     * @return the artifactTags value.
     */
    public Map<String, String> artifactTags() {
        return this.innerProperties() == null ? null : this.innerProperties().artifactTags();
    }

    /**
     * Set the artifactTags property: The artifact tags of a community gallery resource.
     * 
     * @param artifactTags the artifactTags value to set.
     * @return the CommunitySecurityPostureInner object itself.
     */
    public CommunitySecurityPostureInner withArtifactTags(Map<String, String> artifactTags) {
        if (this.innerProperties() == null) {
            this.innerProperties = new CommunitySecurityPostureProperties();
        }
        this.innerProperties().withArtifactTags(artifactTags);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("identifier", innerIdentifier());
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunitySecurityPostureInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunitySecurityPostureInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunitySecurityPostureInner.
     */
    public static CommunitySecurityPostureInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunitySecurityPostureInner deserializedCommunitySecurityPostureInner
                = new CommunitySecurityPostureInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedCommunitySecurityPostureInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedCommunitySecurityPostureInner.type = reader.getString();
                } else if ("identifier".equals(fieldName)) {
                    deserializedCommunitySecurityPostureInner.innerIdentifier
                        = CommunityGalleryIdentifier.fromJson(reader);
                } else if ("properties".equals(fieldName)) {
                    deserializedCommunitySecurityPostureInner.innerProperties
                        = CommunitySecurityPostureProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunitySecurityPostureInner;
        });
    }
}

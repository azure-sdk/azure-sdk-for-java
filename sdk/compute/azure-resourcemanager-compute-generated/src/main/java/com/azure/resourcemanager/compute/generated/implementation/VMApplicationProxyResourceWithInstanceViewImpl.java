// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.VMApplicationProxyResourceWithInstanceViewInner;
import com.azure.resourcemanager.compute.generated.models.ApplicationInstanceView;
import com.azure.resourcemanager.compute.generated.models.VMApplicationProxyResourceWithInstanceView;
import com.azure.resourcemanager.compute.generated.models.VMGalleryApplicationWithInstanceView;

public final class VMApplicationProxyResourceWithInstanceViewImpl
    implements VMApplicationProxyResourceWithInstanceView,
        VMApplicationProxyResourceWithInstanceView.Definition,
        VMApplicationProxyResourceWithInstanceView.Update {
    private VMApplicationProxyResourceWithInstanceViewInner innerObject;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public VMGalleryApplicationWithInstanceView properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public VMApplicationProxyResourceWithInstanceViewInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String vmName;

    private String applicationName;

    public VMApplicationProxyResourceWithInstanceViewImpl withExistingVirtualMachine(
        String resourceGroupName, String vmName) {
        this.resourceGroupName = resourceGroupName;
        this.vmName = vmName;
        return this;
    }

    public VMApplicationProxyResourceWithInstanceView create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineApplications()
                .put(resourceGroupName, vmName, applicationName, this.innerModel(), Context.NONE);
        return this;
    }

    public VMApplicationProxyResourceWithInstanceView create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineApplications()
                .put(resourceGroupName, vmName, applicationName, this.innerModel(), context);
        return this;
    }

    VMApplicationProxyResourceWithInstanceViewImpl(
        String name, com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = new VMApplicationProxyResourceWithInstanceViewInner();
        this.serviceManager = serviceManager;
        this.applicationName = name;
    }

    public VMApplicationProxyResourceWithInstanceViewImpl update() {
        return this;
    }

    public VMApplicationProxyResourceWithInstanceView apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineApplications()
                .put(resourceGroupName, vmName, applicationName, this.innerModel(), Context.NONE);
        return this;
    }

    public VMApplicationProxyResourceWithInstanceView apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineApplications()
                .put(resourceGroupName, vmName, applicationName, this.innerModel(), context);
        return this;
    }

    VMApplicationProxyResourceWithInstanceViewImpl(
        VMApplicationProxyResourceWithInstanceViewInner innerObject,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.vmName = Utils.getValueFromIdByName(innerObject.id(), "virtualMachines");
        this.applicationName = Utils.getValueFromIdByName(innerObject.id(), "VMApplications");
    }

    public VMApplicationProxyResourceWithInstanceView refresh() {
        ApplicationInstanceView localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineApplications()
                .getWithResponse(resourceGroupName, vmName, applicationName, localExpand, Context.NONE)
                .getValue();
        return this;
    }

    public VMApplicationProxyResourceWithInstanceView refresh(Context context) {
        ApplicationInstanceView localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualMachineApplications()
                .getWithResponse(resourceGroupName, vmName, applicationName, localExpand, context)
                .getValue();
        return this;
    }
}

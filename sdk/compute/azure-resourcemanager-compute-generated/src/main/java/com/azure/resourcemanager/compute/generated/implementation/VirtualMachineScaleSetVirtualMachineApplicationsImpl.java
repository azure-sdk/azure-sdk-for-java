// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.compute.generated.fluent.VirtualMachineScaleSetVirtualMachineApplicationsClient;
import com.azure.resourcemanager.compute.generated.fluent.models.VMApplicationProxyResourceWithInstanceViewInner;
import com.azure.resourcemanager.compute.generated.models.ApplicationInstanceView;
import com.azure.resourcemanager.compute.generated.models.VMApplicationProxyResourceWithInstanceView;
import com.azure.resourcemanager.compute.generated.models.VirtualMachineScaleSetVirtualMachineApplications;

public final class VirtualMachineScaleSetVirtualMachineApplicationsImpl
    implements VirtualMachineScaleSetVirtualMachineApplications {
    private static final ClientLogger LOGGER =
        new ClientLogger(VirtualMachineScaleSetVirtualMachineApplicationsImpl.class);

    private final VirtualMachineScaleSetVirtualMachineApplicationsClient innerClient;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public VirtualMachineScaleSetVirtualMachineApplicationsImpl(
        VirtualMachineScaleSetVirtualMachineApplicationsClient innerClient,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<VMApplicationProxyResourceWithInstanceView> getWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String applicationName,
        ApplicationInstanceView expand,
        Context context) {
        Response<VMApplicationProxyResourceWithInstanceViewInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, vmScaleSetName, instanceId, applicationName, expand, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new VMApplicationProxyResourceWithInstanceViewImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public VMApplicationProxyResourceWithInstanceView get(
        String resourceGroupName, String vmScaleSetName, String instanceId, String applicationName) {
        VMApplicationProxyResourceWithInstanceViewInner inner =
            this.serviceClient().get(resourceGroupName, vmScaleSetName, instanceId, applicationName);
        if (inner != null) {
            return new VMApplicationProxyResourceWithInstanceViewImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<VMApplicationProxyResourceWithInstanceView> getInstanceViewWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String applicationName, Context context) {
        Response<VMApplicationProxyResourceWithInstanceViewInner> inner =
            this
                .serviceClient()
                .getInstanceViewWithResponse(resourceGroupName, vmScaleSetName, instanceId, applicationName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new VMApplicationProxyResourceWithInstanceViewImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public VMApplicationProxyResourceWithInstanceView getInstanceView(
        String resourceGroupName, String vmScaleSetName, String instanceId, String applicationName) {
        VMApplicationProxyResourceWithInstanceViewInner inner =
            this.serviceClient().getInstanceView(resourceGroupName, vmScaleSetName, instanceId, applicationName);
        if (inner != null) {
            return new VMApplicationProxyResourceWithInstanceViewImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private VirtualMachineScaleSetVirtualMachineApplicationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }
}

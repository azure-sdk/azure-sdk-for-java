// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AttributeBasedVMSizeRecommender API response.
 */
@Fluent
public final class AttributeBasedVMSizeRecommenderResponseInner
    implements JsonSerializable<AttributeBasedVMSizeRecommenderResponseInner> {
    /*
     * The recommended VMSizes.
     */
    private Object recommendedVMSizes;

    /**
     * Creates an instance of AttributeBasedVMSizeRecommenderResponseInner class.
     */
    public AttributeBasedVMSizeRecommenderResponseInner() {
    }

    /**
     * Get the recommendedVMSizes property: The recommended VMSizes.
     * 
     * @return the recommendedVMSizes value.
     */
    public Object recommendedVMSizes() {
        return this.recommendedVMSizes;
    }

    /**
     * Set the recommendedVMSizes property: The recommended VMSizes.
     * 
     * @param recommendedVMSizes the recommendedVMSizes value to set.
     * @return the AttributeBasedVMSizeRecommenderResponseInner object itself.
     */
    public AttributeBasedVMSizeRecommenderResponseInner withRecommendedVMSizes(Object recommendedVMSizes) {
        this.recommendedVMSizes = recommendedVMSizes;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("recommendedVMSizes", this.recommendedVMSizes);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AttributeBasedVMSizeRecommenderResponseInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AttributeBasedVMSizeRecommenderResponseInner if the JsonReader was pointing to an instance
     * of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AttributeBasedVMSizeRecommenderResponseInner.
     */
    public static AttributeBasedVMSizeRecommenderResponseInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AttributeBasedVMSizeRecommenderResponseInner deserializedAttributeBasedVMSizeRecommenderResponseInner
                = new AttributeBasedVMSizeRecommenderResponseInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("recommendedVMSizes".equals(fieldName)) {
                    deserializedAttributeBasedVMSizeRecommenderResponseInner.recommendedVMSizes = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAttributeBasedVMSizeRecommenderResponseInner;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Specifies the sku profile for the virtual machine scale set. With this property the customer is able to specify a
 * list of VM sizes and an allocation strategy.
 */
@Fluent
public final class SkuProfile {
    /*
     * Specifies the VM sizes for the virtual machine scale set.
     */
    @JsonProperty(value = "vmSizes")
    private List<SkuProfileVMSize> vmSizes;

    /*
     * Species the allocation strategy for the virtual machine scale set based on which the VMs will be allocated.
     */
    @JsonProperty(value = "allocationStrategy")
    private AllocationStrategy allocationStrategy;

    /**
     * Creates an instance of SkuProfile class.
     */
    public SkuProfile() {
    }

    /**
     * Get the vmSizes property: Specifies the VM sizes for the virtual machine scale set.
     * 
     * @return the vmSizes value.
     */
    public List<SkuProfileVMSize> vmSizes() {
        return this.vmSizes;
    }

    /**
     * Set the vmSizes property: Specifies the VM sizes for the virtual machine scale set.
     * 
     * @param vmSizes the vmSizes value to set.
     * @return the SkuProfile object itself.
     */
    public SkuProfile withVmSizes(List<SkuProfileVMSize> vmSizes) {
        this.vmSizes = vmSizes;
        return this;
    }

    /**
     * Get the allocationStrategy property: Species the allocation strategy for the virtual machine scale set based on
     * which the VMs will be allocated.
     * 
     * @return the allocationStrategy value.
     */
    public AllocationStrategy allocationStrategy() {
        return this.allocationStrategy;
    }

    /**
     * Set the allocationStrategy property: Species the allocation strategy for the virtual machine scale set based on
     * which the VMs will be allocated.
     * 
     * @param allocationStrategy the allocationStrategy value to set.
     * @return the SkuProfile object itself.
     */
    public SkuProfile withAllocationStrategy(AllocationStrategy allocationStrategy) {
        this.allocationStrategy = allocationStrategy;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (vmSizes() != null) {
            vmSizes().forEach(e -> e.validate());
        }
    }
}

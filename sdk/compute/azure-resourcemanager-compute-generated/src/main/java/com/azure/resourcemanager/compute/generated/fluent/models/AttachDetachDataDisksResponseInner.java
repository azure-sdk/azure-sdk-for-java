// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.compute.generated.models.AttachedDataDisk;
import com.azure.resourcemanager.compute.generated.models.DetachedDataDisk;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Response for attach and detach data disks request. */
@Fluent
public final class AttachDetachDataDisksResponseInner {
    /*
     * The list of managed data disks that were attached.
     */
    @JsonProperty(value = "attachedDataDisks")
    private List<AttachedDataDisk> attachedDataDisks;

    /*
     * The list of managed data disks that were detached.
     */
    @JsonProperty(value = "detachedDataDisks")
    private List<DetachedDataDisk> detachedDataDisks;

    /** Creates an instance of AttachDetachDataDisksResponseInner class. */
    public AttachDetachDataDisksResponseInner() {
    }

    /**
     * Get the attachedDataDisks property: The list of managed data disks that were attached.
     *
     * @return the attachedDataDisks value.
     */
    public List<AttachedDataDisk> attachedDataDisks() {
        return this.attachedDataDisks;
    }

    /**
     * Set the attachedDataDisks property: The list of managed data disks that were attached.
     *
     * @param attachedDataDisks the attachedDataDisks value to set.
     * @return the AttachDetachDataDisksResponseInner object itself.
     */
    public AttachDetachDataDisksResponseInner withAttachedDataDisks(List<AttachedDataDisk> attachedDataDisks) {
        this.attachedDataDisks = attachedDataDisks;
        return this;
    }

    /**
     * Get the detachedDataDisks property: The list of managed data disks that were detached.
     *
     * @return the detachedDataDisks value.
     */
    public List<DetachedDataDisk> detachedDataDisks() {
        return this.detachedDataDisks;
    }

    /**
     * Set the detachedDataDisks property: The list of managed data disks that were detached.
     *
     * @param detachedDataDisks the detachedDataDisks value to set.
     * @return the AttachDetachDataDisksResponseInner object itself.
     */
    public AttachDetachDataDisksResponseInner withDetachedDataDisks(List<DetachedDataDisk> detachedDataDisks) {
        this.detachedDataDisks = detachedDataDisks;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (attachedDataDisks() != null) {
            attachedDataDisks().forEach(e -> e.validate());
        }
        if (detachedDataDisks() != null) {
            detachedDataDisks().forEach(e -> e.validate());
        }
    }
}

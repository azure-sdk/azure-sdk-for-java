// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.compute.generated.fluent.DiskInspectionsClient;
import com.azure.resourcemanager.compute.generated.fluent.models.ComputeDiagnosticBaseInner;
import com.azure.resourcemanager.compute.generated.models.ComputeDiagnosticBase;
import com.azure.resourcemanager.compute.generated.models.DiskInspections;
import com.azure.resourcemanager.compute.generated.models.RunDiskInspectionInput;

public final class DiskInspectionsImpl implements DiskInspections {
    private static final ClientLogger LOGGER = new ClientLogger(DiskInspectionsImpl.class);

    private final DiskInspectionsClient innerClient;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public DiskInspectionsImpl(DiskInspectionsClient innerClient,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public String create(String location, RunDiskInspectionInput runDiskInspectionInput) {
        return this.serviceClient().create(location, runDiskInspectionInput);
    }

    public String create(String location, RunDiskInspectionInput runDiskInspectionInput, Context context) {
        return this.serviceClient().create(location, runDiskInspectionInput, context);
    }

    public Response<ComputeDiagnosticBase> getWithResponse(String location, Context context) {
        Response<ComputeDiagnosticBaseInner> inner = this.serviceClient().getWithResponse(location, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ComputeDiagnosticBaseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ComputeDiagnosticBase get(String location) {
        ComputeDiagnosticBaseInner inner = this.serviceClient().get(location);
        if (inner != null) {
            return new ComputeDiagnosticBaseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DiskInspectionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }
}

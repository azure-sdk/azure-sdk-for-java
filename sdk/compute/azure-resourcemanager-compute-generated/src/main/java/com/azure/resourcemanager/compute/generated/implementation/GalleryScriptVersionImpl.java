// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.GalleryScriptVersionInner;
import com.azure.resourcemanager.compute.generated.models.GalleryScriptVersion;
import com.azure.resourcemanager.compute.generated.models.GalleryScriptVersionProperties;
import com.azure.resourcemanager.compute.generated.models.GalleryScriptVersionUpdate;
import java.util.Collections;
import java.util.Map;

public final class GalleryScriptVersionImpl
    implements GalleryScriptVersion, GalleryScriptVersion.Definition, GalleryScriptVersion.Update {
    private GalleryScriptVersionInner innerObject;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public GalleryScriptVersionProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public GalleryScriptVersionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String galleryName;

    private String galleryScriptName;

    private String galleryScriptVersionName;

    private GalleryScriptVersionUpdate updateGalleryScriptVersion;

    public GalleryScriptVersionImpl withExistingScript(String resourceGroupName, String galleryName,
        String galleryScriptName) {
        this.resourceGroupName = resourceGroupName;
        this.galleryName = galleryName;
        this.galleryScriptName = galleryScriptName;
        return this;
    }

    public GalleryScriptVersion create() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryScriptVersions()
            .createOrUpdate(resourceGroupName, galleryName, galleryScriptName, galleryScriptVersionName,
                this.innerModel(), Context.NONE);
        return this;
    }

    public GalleryScriptVersion create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryScriptVersions()
            .createOrUpdate(resourceGroupName, galleryName, galleryScriptName, galleryScriptVersionName,
                this.innerModel(), context);
        return this;
    }

    GalleryScriptVersionImpl(String name, com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = new GalleryScriptVersionInner();
        this.serviceManager = serviceManager;
        this.galleryScriptVersionName = name;
    }

    public GalleryScriptVersionImpl update() {
        this.updateGalleryScriptVersion = new GalleryScriptVersionUpdate();
        return this;
    }

    public GalleryScriptVersion apply() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryScriptVersions()
            .update(resourceGroupName, galleryName, galleryScriptName, galleryScriptVersionName,
                updateGalleryScriptVersion, Context.NONE);
        return this;
    }

    public GalleryScriptVersion apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryScriptVersions()
            .update(resourceGroupName, galleryName, galleryScriptName, galleryScriptVersionName,
                updateGalleryScriptVersion, context);
        return this;
    }

    GalleryScriptVersionImpl(GalleryScriptVersionInner innerObject,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.galleryName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "galleries");
        this.galleryScriptName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "scripts");
        this.galleryScriptVersionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "versions");
    }

    public GalleryScriptVersion refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryScriptVersions()
            .getWithResponse(resourceGroupName, galleryName, galleryScriptName, galleryScriptVersionName, Context.NONE)
            .getValue();
        return this;
    }

    public GalleryScriptVersion refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryScriptVersions()
            .getWithResponse(resourceGroupName, galleryName, galleryScriptName, galleryScriptVersionName, context)
            .getValue();
        return this;
    }

    public GalleryScriptVersionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public GalleryScriptVersionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public GalleryScriptVersionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateGalleryScriptVersion.withTags(tags);
            return this;
        }
    }

    public GalleryScriptVersionImpl withProperties(GalleryScriptVersionProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateGalleryScriptVersion.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Describes the user-defined constraints for resource hardware placement.
 */
@Fluent
public final class Placement {
    /*
     * Specifies the policy for resource's placement in availability zone. <br>Supported policies:
     * {'Any'}<br><br>Policy wise behavior:<br>'Any' - An availability zone will be automatically picked by system as
     * part of resource creation.
     */
    @JsonProperty(value = "zonePlacementPolicy")
    private ZonePlacementPolicyType zonePlacementPolicy;

    /*
     * This property supplements the 'zonePlacementPolicy' property.<br>If 'zonePlacementPolicy' is set to 'any',
     * availability zone selected by the system must be present in the list of availability zones passed with
     * 'includeZones'. If 'includeZones' is not provided, all availability zones in region will be considered for
     * selection.
     */
    @JsonProperty(value = "includeZones")
    private List<String> includeZones;

    /*
     * This property supplements the 'zonePlacementPolicy' property.<br>If 'zonePlacementPolicy' is set to 'any',
     * availability zone selected by the system must not be present in the list of availability zones passed with
     * 'excludeZones'. If 'excludeZones' is not provided, all availability zones in region will be considered for
     * selection.
     */
    @JsonProperty(value = "excludeZones")
    private List<String> excludeZones;

    /**
     * Creates an instance of Placement class.
     */
    public Placement() {
    }

    /**
     * Get the zonePlacementPolicy property: Specifies the policy for resource's placement in availability zone.
     * &lt;br&gt;Supported policies: {'Any'}&lt;br&gt;&lt;br&gt;Policy wise behavior:&lt;br&gt;'Any' - An availability
     * zone will be automatically picked by system as part of resource creation.
     * 
     * @return the zonePlacementPolicy value.
     */
    public ZonePlacementPolicyType zonePlacementPolicy() {
        return this.zonePlacementPolicy;
    }

    /**
     * Set the zonePlacementPolicy property: Specifies the policy for resource's placement in availability zone.
     * &lt;br&gt;Supported policies: {'Any'}&lt;br&gt;&lt;br&gt;Policy wise behavior:&lt;br&gt;'Any' - An availability
     * zone will be automatically picked by system as part of resource creation.
     * 
     * @param zonePlacementPolicy the zonePlacementPolicy value to set.
     * @return the Placement object itself.
     */
    public Placement withZonePlacementPolicy(ZonePlacementPolicyType zonePlacementPolicy) {
        this.zonePlacementPolicy = zonePlacementPolicy;
        return this;
    }

    /**
     * Get the includeZones property: This property supplements the 'zonePlacementPolicy' property.&lt;br&gt;If
     * 'zonePlacementPolicy' is set to 'any', availability zone selected by the system must be present in the list of
     * availability zones passed with 'includeZones'. If 'includeZones' is not provided, all availability zones in
     * region will be considered for selection.
     * 
     * @return the includeZones value.
     */
    public List<String> includeZones() {
        return this.includeZones;
    }

    /**
     * Set the includeZones property: This property supplements the 'zonePlacementPolicy' property.&lt;br&gt;If
     * 'zonePlacementPolicy' is set to 'any', availability zone selected by the system must be present in the list of
     * availability zones passed with 'includeZones'. If 'includeZones' is not provided, all availability zones in
     * region will be considered for selection.
     * 
     * @param includeZones the includeZones value to set.
     * @return the Placement object itself.
     */
    public Placement withIncludeZones(List<String> includeZones) {
        this.includeZones = includeZones;
        return this;
    }

    /**
     * Get the excludeZones property: This property supplements the 'zonePlacementPolicy' property.&lt;br&gt;If
     * 'zonePlacementPolicy' is set to 'any', availability zone selected by the system must not be present in the list
     * of availability zones passed with 'excludeZones'. If 'excludeZones' is not provided, all availability zones in
     * region will be considered for selection.
     * 
     * @return the excludeZones value.
     */
    public List<String> excludeZones() {
        return this.excludeZones;
    }

    /**
     * Set the excludeZones property: This property supplements the 'zonePlacementPolicy' property.&lt;br&gt;If
     * 'zonePlacementPolicy' is set to 'any', availability zone selected by the system must not be present in the list
     * of availability zones passed with 'excludeZones'. If 'excludeZones' is not provided, all availability zones in
     * region will be considered for selection.
     * 
     * @param excludeZones the excludeZones value to set.
     * @return the Placement object itself.
     */
    public Placement withExcludeZones(List<String> excludeZones) {
        this.excludeZones = excludeZones;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

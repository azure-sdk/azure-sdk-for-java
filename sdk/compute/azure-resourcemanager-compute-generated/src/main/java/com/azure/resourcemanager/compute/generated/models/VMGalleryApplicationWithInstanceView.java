// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The entity representing a Gallery Application Version assigned with a VM or VMSS with instance view. */
@Fluent
public final class VMGalleryApplicationWithInstanceView extends VMGalleryApplication {
    /*
     * The instance view of Gallery Application Version assigned to the VM or VMSS
     */
    @JsonProperty(value = "instanceView", access = JsonProperty.Access.WRITE_ONLY)
    private VMGalleryApplicationInstanceView instanceView;

    /** Creates an instance of VMGalleryApplicationWithInstanceView class. */
    public VMGalleryApplicationWithInstanceView() {
    }

    /**
     * Get the instanceView property: The instance view of Gallery Application Version assigned to the VM or VMSS.
     *
     * @return the instanceView value.
     */
    public VMGalleryApplicationInstanceView instanceView() {
        return this.instanceView;
    }

    /** {@inheritDoc} */
    @Override
    public VMGalleryApplicationWithInstanceView withTags(String tags) {
        super.withTags(tags);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VMGalleryApplicationWithInstanceView withOrder(Integer order) {
        super.withOrder(order);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VMGalleryApplicationWithInstanceView withPackageReferenceId(String packageReferenceId) {
        super.withPackageReferenceId(packageReferenceId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VMGalleryApplicationWithInstanceView withConfigurationReference(String configurationReference) {
        super.withConfigurationReference(configurationReference);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VMGalleryApplicationWithInstanceView withTreatFailureAsDeploymentFailure(
        Boolean treatFailureAsDeploymentFailure) {
        super.withTreatFailureAsDeploymentFailure(treatFailureAsDeploymentFailure);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VMGalleryApplicationWithInstanceView withEnableAutomaticUpgrade(Boolean enableAutomaticUpgrade) {
        super.withEnableAutomaticUpgrade(enableAutomaticUpgrade);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (instanceView() != null) {
            instanceView().validate();
        }
    }
}

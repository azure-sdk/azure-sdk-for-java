// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Specifies particular host endpoint settings.
 */
@Fluent
public final class HostEndpointSettings {
    /*
     * Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the access control policy,
     * including emitting access denial entries in the logs but it does not actually deny any requests to host
     * endpoints. Enforce mode is the recommended mode of operation and system will enforce the access control.
     */
    @JsonProperty(value = "mode")
    private Mode mode;

    /*
     * Specifies the InVMAccessControlProfileVersion resource id on the form of
     * /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{
     * galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}
     */
    @JsonProperty(value = "inVMAccessControlProfileReferenceId")
    private String inVMAccessControlProfileReferenceId;

    /**
     * Creates an instance of HostEndpointSettings class.
     */
    public HostEndpointSettings() {
    }

    /**
     * Get the mode property: Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the
     * access control policy, including emitting access denial entries in the logs but it does not actually deny any
     * requests to host endpoints. Enforce mode is the recommended mode of operation and system will enforce the access
     * control.
     * 
     * @return the mode value.
     */
    public Mode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the
     * access control policy, including emitting access denial entries in the logs but it does not actually deny any
     * requests to host endpoints. Enforce mode is the recommended mode of operation and system will enforce the access
     * control.
     * 
     * @param mode the mode value to set.
     * @return the HostEndpointSettings object itself.
     */
    public HostEndpointSettings withMode(Mode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the inVMAccessControlProfileReferenceId property: Specifies the InVMAccessControlProfileVersion resource id
     * on the form of
     * /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}.
     * 
     * @return the inVMAccessControlProfileReferenceId value.
     */
    public String inVMAccessControlProfileReferenceId() {
        return this.inVMAccessControlProfileReferenceId;
    }

    /**
     * Set the inVMAccessControlProfileReferenceId property: Specifies the InVMAccessControlProfileVersion resource id
     * on the form of
     * /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}.
     * 
     * @param inVMAccessControlProfileReferenceId the inVMAccessControlProfileReferenceId value to set.
     * @return the HostEndpointSettings object itself.
     */
    public HostEndpointSettings withInVMAccessControlProfileReferenceId(String inVMAccessControlProfileReferenceId) {
        this.inVMAccessControlProfileReferenceId = inVMAccessControlProfileReferenceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

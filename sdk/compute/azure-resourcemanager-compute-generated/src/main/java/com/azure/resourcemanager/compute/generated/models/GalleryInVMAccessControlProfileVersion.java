// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.GalleryInVMAccessControlProfileVersionInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of GalleryInVMAccessControlProfileVersion.
 */
public interface GalleryInVMAccessControlProfileVersion {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the mode property: This property allows you to specify whether the access control rules are in Audit mode,
     * in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'.
     * 
     * @return the mode value.
     */
    AccessControlRulesMode mode();

    /**
     * Gets the defaultAccess property: This property allows you to specify if the requests will be allowed to access
     * the host endpoints. Possible values are: 'Allow', 'Deny'.
     * 
     * @return the defaultAccess value.
     */
    EndpointAccess defaultAccess();

    /**
     * Gets the rules property: This is the Access Control Rules specification for an inVMAccessControlProfile version.
     * 
     * @return the rules value.
     */
    AccessControlRules rules();

    /**
     * Gets the targetLocations property: The target regions where the Resource Profile version is going to be
     * replicated to. This property is updatable.
     * 
     * @return the targetLocations value.
     */
    List<TargetRegion> targetLocations();

    /**
     * Gets the excludeFromLatest property: If set to true, Virtual Machines deployed from the latest version of the
     * Resource Profile won't use this Profile version.
     * 
     * @return the excludeFromLatest value.
     */
    Boolean excludeFromLatest();

    /**
     * Gets the publishedDate property: The timestamp for when the Resource Profile Version is published.
     * 
     * @return the publishedDate value.
     */
    OffsetDateTime publishedDate();

    /**
     * Gets the provisioningState property: The provisioning state, which only appears in the response.
     * 
     * @return the provisioningState value.
     */
    GalleryProvisioningState provisioningState();

    /**
     * Gets the replicationStatus property: This is the replication status of the gallery image version.
     * 
     * @return the replicationStatus value.
     */
    ReplicationStatus replicationStatus();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner
     * com.azure.resourcemanager.compute.generated.fluent.models.GalleryInVMAccessControlProfileVersionInner object.
     * 
     * @return the inner object.
     */
    GalleryInVMAccessControlProfileVersionInner innerModel();

    /**
     * The entirety of the GalleryInVMAccessControlProfileVersion definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The GalleryInVMAccessControlProfileVersion definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the GalleryInVMAccessControlProfileVersion definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, galleryName, inVMAccessControlProfileName.
             * 
             * @param resourceGroupName The name of the resource group.
             * @param galleryName The name of the Shared Image Gallery where Image Definitions or other artifacts
             * reside.
             * @param inVMAccessControlProfileName The name of the gallery inVMAccessControlProfile in which the
             * inVMAccessControlProfile version is to be created.
             * @return the next definition stage.
             */
            WithCreate withExistingInVMAccessControlProfile(String resourceGroupName, String galleryName,
                String inVMAccessControlProfileName);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithMode, DefinitionStages.WithDefaultAccess,
            DefinitionStages.WithRules, DefinitionStages.WithTargetLocations, DefinitionStages.WithExcludeFromLatest {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            GalleryInVMAccessControlProfileVersion create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            GalleryInVMAccessControlProfileVersion create(Context context);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify mode.
         */
        interface WithMode {
            /**
             * Specifies the mode property: This property allows you to specify whether the access control rules are in
             * Audit mode, in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'..
             * 
             * @param mode This property allows you to specify whether the access control rules are in Audit mode, in
             * Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'.
             * @return the next definition stage.
             */
            WithCreate withMode(AccessControlRulesMode mode);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify defaultAccess.
         */
        interface WithDefaultAccess {
            /**
             * Specifies the defaultAccess property: This property allows you to specify if the requests will be allowed
             * to access the host endpoints. Possible values are: 'Allow', 'Deny'..
             * 
             * @param defaultAccess This property allows you to specify if the requests will be allowed to access the
             * host endpoints. Possible values are: 'Allow', 'Deny'.
             * @return the next definition stage.
             */
            WithCreate withDefaultAccess(EndpointAccess defaultAccess);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify rules.
         */
        interface WithRules {
            /**
             * Specifies the rules property: This is the Access Control Rules specification for an
             * inVMAccessControlProfile version..
             * 
             * @param rules This is the Access Control Rules specification for an inVMAccessControlProfile version.
             * @return the next definition stage.
             */
            WithCreate withRules(AccessControlRules rules);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify targetLocations.
         */
        interface WithTargetLocations {
            /**
             * Specifies the targetLocations property: The target regions where the Resource Profile version is going to
             * be replicated to. This property is updatable..
             * 
             * @param targetLocations The target regions where the Resource Profile version is going to be replicated
             * to. This property is updatable.
             * @return the next definition stage.
             */
            WithCreate withTargetLocations(List<TargetRegion> targetLocations);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion definition allowing to specify excludeFromLatest.
         */
        interface WithExcludeFromLatest {
            /**
             * Specifies the excludeFromLatest property: If set to true, Virtual Machines deployed from the latest
             * version of the Resource Profile won't use this Profile version..
             * 
             * @param excludeFromLatest If set to true, Virtual Machines deployed from the latest version of the
             * Resource Profile won't use this Profile version.
             * @return the next definition stage.
             */
            WithCreate withExcludeFromLatest(Boolean excludeFromLatest);
        }
    }

    /**
     * Begins update for the GalleryInVMAccessControlProfileVersion resource.
     * 
     * @return the stage of resource update.
     */
    GalleryInVMAccessControlProfileVersion.Update update();

    /**
     * The template for GalleryInVMAccessControlProfileVersion update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithMode, UpdateStages.WithDefaultAccess,
        UpdateStages.WithRules, UpdateStages.WithTargetLocations, UpdateStages.WithExcludeFromLatest {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        GalleryInVMAccessControlProfileVersion apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        GalleryInVMAccessControlProfileVersion apply(Context context);
    }

    /**
     * The GalleryInVMAccessControlProfileVersion update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the GalleryInVMAccessControlProfileVersion update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags.
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion update allowing to specify mode.
         */
        interface WithMode {
            /**
             * Specifies the mode property: This property allows you to specify whether the access control rules are in
             * Audit mode, in Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'..
             * 
             * @param mode This property allows you to specify whether the access control rules are in Audit mode, in
             * Enforce mode or Disabled. Possible values are: 'Audit', 'Enforce' or 'Disabled'.
             * @return the next definition stage.
             */
            Update withMode(AccessControlRulesMode mode);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion update allowing to specify defaultAccess.
         */
        interface WithDefaultAccess {
            /**
             * Specifies the defaultAccess property: This property allows you to specify if the requests will be allowed
             * to access the host endpoints. Possible values are: 'Allow', 'Deny'..
             * 
             * @param defaultAccess This property allows you to specify if the requests will be allowed to access the
             * host endpoints. Possible values are: 'Allow', 'Deny'.
             * @return the next definition stage.
             */
            Update withDefaultAccess(EndpointAccess defaultAccess);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion update allowing to specify rules.
         */
        interface WithRules {
            /**
             * Specifies the rules property: This is the Access Control Rules specification for an
             * inVMAccessControlProfile version..
             * 
             * @param rules This is the Access Control Rules specification for an inVMAccessControlProfile version.
             * @return the next definition stage.
             */
            Update withRules(AccessControlRules rules);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion update allowing to specify targetLocations.
         */
        interface WithTargetLocations {
            /**
             * Specifies the targetLocations property: The target regions where the Resource Profile version is going to
             * be replicated to. This property is updatable..
             * 
             * @param targetLocations The target regions where the Resource Profile version is going to be replicated
             * to. This property is updatable.
             * @return the next definition stage.
             */
            Update withTargetLocations(List<TargetRegion> targetLocations);
        }

        /**
         * The stage of the GalleryInVMAccessControlProfileVersion update allowing to specify excludeFromLatest.
         */
        interface WithExcludeFromLatest {
            /**
             * Specifies the excludeFromLatest property: If set to true, Virtual Machines deployed from the latest
             * version of the Resource Profile won't use this Profile version..
             * 
             * @param excludeFromLatest If set to true, Virtual Machines deployed from the latest version of the
             * Resource Profile won't use this Profile version.
             * @return the next definition stage.
             */
            Update withExcludeFromLatest(Boolean excludeFromLatest);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    GalleryInVMAccessControlProfileVersion refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    GalleryInVMAccessControlProfileVersion refresh(Context context);
}

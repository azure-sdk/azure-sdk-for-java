// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.compute.generated.fluent.models.GallerySecurityPostureVersionProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/**
 * Specifies information about the gallery security posture version that you want to update.
 */
@Fluent
public final class GallerySecurityPostureVersionUpdate extends UpdateResourceDefinition {
    /*
     * Describes the properties of a gallery security posture version.
     */
    @JsonProperty(value = "properties")
    private GallerySecurityPostureVersionProperties innerProperties;

    /**
     * Creates an instance of GallerySecurityPostureVersionUpdate class.
     */
    public GallerySecurityPostureVersionUpdate() {
    }

    /**
     * Get the innerProperties property: Describes the properties of a gallery security posture version.
     * 
     * @return the innerProperties value.
     */
    private GallerySecurityPostureVersionProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GallerySecurityPostureVersionUpdate withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the excludeFromLatest property: If set to true, virtual machines deployed from the latest version of the
     * security posture won't use this version.
     * 
     * @return the excludeFromLatest value.
     */
    public Boolean excludeFromLatest() {
        return this.innerProperties() == null ? null : this.innerProperties().excludeFromLatest();
    }

    /**
     * Set the excludeFromLatest property: If set to true, virtual machines deployed from the latest version of the
     * security posture won't use this version.
     * 
     * @param excludeFromLatest the excludeFromLatest value to set.
     * @return the GallerySecurityPostureVersionUpdate object itself.
     */
    public GallerySecurityPostureVersionUpdate withExcludeFromLatest(Boolean excludeFromLatest) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureVersionProperties();
        }
        this.innerProperties().withExcludeFromLatest(excludeFromLatest);
        return this;
    }

    /**
     * Get the publishedDate property: The timestamp for when the gallery security posture version is published.
     * 
     * @return the publishedDate value.
     */
    public OffsetDateTime publishedDate() {
        return this.innerProperties() == null ? null : this.innerProperties().publishedDate();
    }

    /**
     * Get the endOfLifeDate property: The end of life date of the gallery security posture version. This property can
     * be used for decommissioning purposes. This property is updatable.
     * 
     * @return the endOfLifeDate value.
     */
    public OffsetDateTime endOfLifeDate() {
        return this.innerProperties() == null ? null : this.innerProperties().endOfLifeDate();
    }

    /**
     * Set the endOfLifeDate property: The end of life date of the gallery security posture version. This property can
     * be used for decommissioning purposes. This property is updatable.
     * 
     * @param endOfLifeDate the endOfLifeDate value to set.
     * @return the GallerySecurityPostureVersionUpdate object itself.
     */
    public GallerySecurityPostureVersionUpdate withEndOfLifeDate(OffsetDateTime endOfLifeDate) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureVersionProperties();
        }
        this.innerProperties().withEndOfLifeDate(endOfLifeDate);
        return this;
    }

    /**
     * Get the settings property: A list of security posture settings, in key-value pair.
     * 
     * @return the settings value.
     */
    public List<PostureSetting> settings() {
        return this.innerProperties() == null ? null : this.innerProperties().settings();
    }

    /**
     * Set the settings property: A list of security posture settings, in key-value pair.
     * 
     * @param settings the settings value to set.
     * @return the GallerySecurityPostureVersionUpdate object itself.
     */
    public GallerySecurityPostureVersionUpdate withSettings(List<PostureSetting> settings) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureVersionProperties();
        }
        this.innerProperties().withSettings(settings);
        return this;
    }

    /**
     * Get the targetLocations property: The target regions where the security posture version is going to be
     * replicated to. This property is updatable.
     * 
     * @return the targetLocations value.
     */
    public List<TargetRegion> targetLocations() {
        return this.innerProperties() == null ? null : this.innerProperties().targetLocations();
    }

    /**
     * Set the targetLocations property: The target regions where the security posture version is going to be
     * replicated to. This property is updatable.
     * 
     * @param targetLocations the targetLocations value to set.
     * @return the GallerySecurityPostureVersionUpdate object itself.
     */
    public GallerySecurityPostureVersionUpdate withTargetLocations(List<TargetRegion> targetLocations) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureVersionProperties();
        }
        this.innerProperties().withTargetLocations(targetLocations);
        return this;
    }

    /**
     * Get the virtualMachineExtensions property: A setting for gallery security posture.
     * 
     * @return the virtualMachineExtensions value.
     */
    public VirtualMachineExtensionAutoGenerated virtualMachineExtensions() {
        return this.innerProperties() == null ? null : this.innerProperties().virtualMachineExtensions();
    }

    /**
     * Set the virtualMachineExtensions property: A setting for gallery security posture.
     * 
     * @param virtualMachineExtensions the virtualMachineExtensions value to set.
     * @return the GallerySecurityPostureVersionUpdate object itself.
     */
    public GallerySecurityPostureVersionUpdate
        withVirtualMachineExtensions(VirtualMachineExtensionAutoGenerated virtualMachineExtensions) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GallerySecurityPostureVersionProperties();
        }
        this.innerProperties().withVirtualMachineExtensions(virtualMachineExtensions);
        return this;
    }

    /**
     * Get the provisioningState property: The current state of the gallery or gallery artifact.
     * 
     * The provisioning state, which only appears in the response.
     * 
     * @return the provisioningState value.
     */
    public GalleryProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the replicationStatus property: This is the replication status of the gallery image version.
     * 
     * @return the replicationStatus value.
     */
    public ReplicationStatus replicationStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().replicationStatus();
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * This is the community gallery image definition identifier.
 */
@Immutable
public final class CommunityGalleryImageIdentifier implements JsonSerializable<CommunityGalleryImageIdentifier> {
    /*
     * The name of the gallery image definition publisher.
     */
    private String publisher;

    /*
     * The name of the gallery image definition offer.
     */
    private String offer;

    /*
     * The name of the gallery image definition SKU.
     */
    private String sku;

    /**
     * Creates an instance of CommunityGalleryImageIdentifier class.
     */
    public CommunityGalleryImageIdentifier() {
    }

    /**
     * Get the publisher property: The name of the gallery image definition publisher.
     * 
     * @return the publisher value.
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Get the offer property: The name of the gallery image definition offer.
     * 
     * @return the offer value.
     */
    public String offer() {
        return this.offer;
    }

    /**
     * Get the sku property: The name of the gallery image definition SKU.
     * 
     * @return the sku value.
     */
    public String sku() {
        return this.sku;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CommunityGalleryImageIdentifier from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CommunityGalleryImageIdentifier if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CommunityGalleryImageIdentifier.
     */
    public static CommunityGalleryImageIdentifier fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CommunityGalleryImageIdentifier deserializedCommunityGalleryImageIdentifier
                = new CommunityGalleryImageIdentifier();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("publisher".equals(fieldName)) {
                    deserializedCommunityGalleryImageIdentifier.publisher = reader.getString();
                } else if ("offer".equals(fieldName)) {
                    deserializedCommunityGalleryImageIdentifier.offer = reader.getString();
                } else if ("sku".equals(fieldName)) {
                    deserializedCommunityGalleryImageIdentifier.sku = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCommunityGalleryImageIdentifier;
        });
    }
}

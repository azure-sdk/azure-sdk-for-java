// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.compute.generated.models.ResultStatus;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Api output result when Compute Diagnostic operation is completed.
 */
@Fluent
public final class ComputeDiagnosticsOperationResultInner
    implements JsonSerializable<ComputeDiagnosticsOperationResultInner> {
    /*
     * The result of the disk inspection operation.
     */
    private String message;

    /*
     * The response fields of the disk inspection operation.
     */
    private String responseFields;

    /*
     * Result status of the async operation.
     */
    private ResultStatus resultStatus;

    /*
     * The API error details.
     */
    private ManagementError errorDetail;

    /*
     * The time when the disk inspection was completed.
     */
    private OffsetDateTime createdUtc;

    /**
     * Creates an instance of ComputeDiagnosticsOperationResultInner class.
     */
    public ComputeDiagnosticsOperationResultInner() {
    }

    /**
     * Get the message property: The result of the disk inspection operation.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The result of the disk inspection operation.
     * 
     * @param message the message value to set.
     * @return the ComputeDiagnosticsOperationResultInner object itself.
     */
    public ComputeDiagnosticsOperationResultInner withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the responseFields property: The response fields of the disk inspection operation.
     * 
     * @return the responseFields value.
     */
    public String responseFields() {
        return this.responseFields;
    }

    /**
     * Set the responseFields property: The response fields of the disk inspection operation.
     * 
     * @param responseFields the responseFields value to set.
     * @return the ComputeDiagnosticsOperationResultInner object itself.
     */
    public ComputeDiagnosticsOperationResultInner withResponseFields(String responseFields) {
        this.responseFields = responseFields;
        return this;
    }

    /**
     * Get the resultStatus property: Result status of the async operation.
     * 
     * @return the resultStatus value.
     */
    public ResultStatus resultStatus() {
        return this.resultStatus;
    }

    /**
     * Set the resultStatus property: Result status of the async operation.
     * 
     * @param resultStatus the resultStatus value to set.
     * @return the ComputeDiagnosticsOperationResultInner object itself.
     */
    public ComputeDiagnosticsOperationResultInner withResultStatus(ResultStatus resultStatus) {
        this.resultStatus = resultStatus;
        return this;
    }

    /**
     * Get the errorDetail property: The API error details.
     * 
     * @return the errorDetail value.
     */
    public ManagementError errorDetail() {
        return this.errorDetail;
    }

    /**
     * Set the errorDetail property: The API error details.
     * 
     * @param errorDetail the errorDetail value to set.
     * @return the ComputeDiagnosticsOperationResultInner object itself.
     */
    public ComputeDiagnosticsOperationResultInner withErrorDetail(ManagementError errorDetail) {
        this.errorDetail = errorDetail;
        return this;
    }

    /**
     * Get the createdUtc property: The time when the disk inspection was completed.
     * 
     * @return the createdUtc value.
     */
    public OffsetDateTime createdUtc() {
        return this.createdUtc;
    }

    /**
     * Set the createdUtc property: The time when the disk inspection was completed.
     * 
     * @param createdUtc the createdUtc value to set.
     * @return the ComputeDiagnosticsOperationResultInner object itself.
     */
    public ComputeDiagnosticsOperationResultInner withCreatedUtc(OffsetDateTime createdUtc) {
        this.createdUtc = createdUtc;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("responseFields", this.responseFields);
        jsonWriter.writeStringField("resultStatus", this.resultStatus == null ? null : this.resultStatus.toString());
        jsonWriter.writeJsonField("errorDetail", this.errorDetail);
        jsonWriter.writeStringField("createdUTC",
            this.createdUtc == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.createdUtc));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ComputeDiagnosticsOperationResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ComputeDiagnosticsOperationResultInner if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ComputeDiagnosticsOperationResultInner.
     */
    public static ComputeDiagnosticsOperationResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ComputeDiagnosticsOperationResultInner deserializedComputeDiagnosticsOperationResultInner
                = new ComputeDiagnosticsOperationResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message".equals(fieldName)) {
                    deserializedComputeDiagnosticsOperationResultInner.message = reader.getString();
                } else if ("responseFields".equals(fieldName)) {
                    deserializedComputeDiagnosticsOperationResultInner.responseFields = reader.getString();
                } else if ("resultStatus".equals(fieldName)) {
                    deserializedComputeDiagnosticsOperationResultInner.resultStatus
                        = ResultStatus.fromString(reader.getString());
                } else if ("errorDetail".equals(fieldName)) {
                    deserializedComputeDiagnosticsOperationResultInner.errorDetail = ManagementError.fromJson(reader);
                } else if ("createdUTC".equals(fieldName)) {
                    deserializedComputeDiagnosticsOperationResultInner.createdUtc = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedComputeDiagnosticsOperationResultInner;
        });
    }
}

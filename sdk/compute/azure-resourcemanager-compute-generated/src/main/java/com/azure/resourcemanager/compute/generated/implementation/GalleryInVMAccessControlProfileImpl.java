// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.fluent.models.GalleryInVMAccessControlProfileInner;
import com.azure.resourcemanager.compute.generated.models.GalleryInVMAccessControlProfile;
import com.azure.resourcemanager.compute.generated.models.GalleryInVMAccessControlProfileProperties;
import com.azure.resourcemanager.compute.generated.models.GalleryInVMAccessControlProfileUpdate;
import java.util.Collections;
import java.util.Map;

public final class GalleryInVMAccessControlProfileImpl implements GalleryInVMAccessControlProfile,
    GalleryInVMAccessControlProfile.Definition, GalleryInVMAccessControlProfile.Update {
    private GalleryInVMAccessControlProfileInner innerObject;

    private final com.azure.resourcemanager.compute.generated.ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public GalleryInVMAccessControlProfileProperties properties() {
        return this.innerModel().properties();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public GalleryInVMAccessControlProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.compute.generated.ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String galleryName;

    private String inVMAccessControlProfileName;

    private GalleryInVMAccessControlProfileUpdate updateGalleryInVMAccessControlProfile;

    public GalleryInVMAccessControlProfileImpl withExistingGallery(String resourceGroupName, String galleryName) {
        this.resourceGroupName = resourceGroupName;
        this.galleryName = galleryName;
        return this;
    }

    public GalleryInVMAccessControlProfile create() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryInVMAccessControlProfiles()
            .createOrUpdate(resourceGroupName, galleryName, inVMAccessControlProfileName, this.innerModel(),
                Context.NONE);
        return this;
    }

    public GalleryInVMAccessControlProfile create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryInVMAccessControlProfiles()
            .createOrUpdate(resourceGroupName, galleryName, inVMAccessControlProfileName, this.innerModel(), context);
        return this;
    }

    GalleryInVMAccessControlProfileImpl(String name,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = new GalleryInVMAccessControlProfileInner();
        this.serviceManager = serviceManager;
        this.inVMAccessControlProfileName = name;
    }

    public GalleryInVMAccessControlProfileImpl update() {
        this.updateGalleryInVMAccessControlProfile = new GalleryInVMAccessControlProfileUpdate();
        return this;
    }

    public GalleryInVMAccessControlProfile apply() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryInVMAccessControlProfiles()
            .update(resourceGroupName, galleryName, inVMAccessControlProfileName, updateGalleryInVMAccessControlProfile,
                Context.NONE);
        return this;
    }

    public GalleryInVMAccessControlProfile apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryInVMAccessControlProfiles()
            .update(resourceGroupName, galleryName, inVMAccessControlProfileName, updateGalleryInVMAccessControlProfile,
                context);
        return this;
    }

    GalleryInVMAccessControlProfileImpl(GalleryInVMAccessControlProfileInner innerObject,
        com.azure.resourcemanager.compute.generated.ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.galleryName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "galleries");
        this.inVMAccessControlProfileName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "inVMAccessControlProfiles");
    }

    public GalleryInVMAccessControlProfile refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryInVMAccessControlProfiles()
            .getWithResponse(resourceGroupName, galleryName, inVMAccessControlProfileName, Context.NONE)
            .getValue();
        return this;
    }

    public GalleryInVMAccessControlProfile refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getGalleryInVMAccessControlProfiles()
            .getWithResponse(resourceGroupName, galleryName, inVMAccessControlProfileName, context)
            .getValue();
        return this;
    }

    public GalleryInVMAccessControlProfileImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public GalleryInVMAccessControlProfileImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public GalleryInVMAccessControlProfileImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateGalleryInVMAccessControlProfile.withTags(tags);
            return this;
        }
    }

    public GalleryInVMAccessControlProfileImpl withProperties(GalleryInVMAccessControlProfileProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateGalleryInVMAccessControlProfile.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

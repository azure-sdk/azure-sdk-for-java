// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * AttributeBasedVMSizeRecommender API Input.
 */
@Fluent
public final class AttributeBasedVMSizeRecommenderInput
    implements JsonSerializable<AttributeBasedVMSizeRecommenderInput> {
    /*
     * The regular priority VM profile.
     */
    private Object regularPriorityProfile;

    /*
     * The spot priority VM profile.
     */
    private Object spotPriorityProfile;

    /*
     * The recommendation properties.
     */
    private Object recommendationProperties;

    /*
     * The resource properties.
     */
    private Object resourceProperties;

    /**
     * Creates an instance of AttributeBasedVMSizeRecommenderInput class.
     */
    public AttributeBasedVMSizeRecommenderInput() {
    }

    /**
     * Get the regularPriorityProfile property: The regular priority VM profile.
     * 
     * @return the regularPriorityProfile value.
     */
    public Object regularPriorityProfile() {
        return this.regularPriorityProfile;
    }

    /**
     * Set the regularPriorityProfile property: The regular priority VM profile.
     * 
     * @param regularPriorityProfile the regularPriorityProfile value to set.
     * @return the AttributeBasedVMSizeRecommenderInput object itself.
     */
    public AttributeBasedVMSizeRecommenderInput withRegularPriorityProfile(Object regularPriorityProfile) {
        this.regularPriorityProfile = regularPriorityProfile;
        return this;
    }

    /**
     * Get the spotPriorityProfile property: The spot priority VM profile.
     * 
     * @return the spotPriorityProfile value.
     */
    public Object spotPriorityProfile() {
        return this.spotPriorityProfile;
    }

    /**
     * Set the spotPriorityProfile property: The spot priority VM profile.
     * 
     * @param spotPriorityProfile the spotPriorityProfile value to set.
     * @return the AttributeBasedVMSizeRecommenderInput object itself.
     */
    public AttributeBasedVMSizeRecommenderInput withSpotPriorityProfile(Object spotPriorityProfile) {
        this.spotPriorityProfile = spotPriorityProfile;
        return this;
    }

    /**
     * Get the recommendationProperties property: The recommendation properties.
     * 
     * @return the recommendationProperties value.
     */
    public Object recommendationProperties() {
        return this.recommendationProperties;
    }

    /**
     * Set the recommendationProperties property: The recommendation properties.
     * 
     * @param recommendationProperties the recommendationProperties value to set.
     * @return the AttributeBasedVMSizeRecommenderInput object itself.
     */
    public AttributeBasedVMSizeRecommenderInput withRecommendationProperties(Object recommendationProperties) {
        this.recommendationProperties = recommendationProperties;
        return this;
    }

    /**
     * Get the resourceProperties property: The resource properties.
     * 
     * @return the resourceProperties value.
     */
    public Object resourceProperties() {
        return this.resourceProperties;
    }

    /**
     * Set the resourceProperties property: The resource properties.
     * 
     * @param resourceProperties the resourceProperties value to set.
     * @return the AttributeBasedVMSizeRecommenderInput object itself.
     */
    public AttributeBasedVMSizeRecommenderInput withResourceProperties(Object resourceProperties) {
        this.resourceProperties = resourceProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("regularPriorityProfile", this.regularPriorityProfile);
        jsonWriter.writeUntypedField("spotPriorityProfile", this.spotPriorityProfile);
        jsonWriter.writeUntypedField("recommendationProperties", this.recommendationProperties);
        jsonWriter.writeUntypedField("resourceProperties", this.resourceProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AttributeBasedVMSizeRecommenderInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AttributeBasedVMSizeRecommenderInput if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AttributeBasedVMSizeRecommenderInput.
     */
    public static AttributeBasedVMSizeRecommenderInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AttributeBasedVMSizeRecommenderInput deserializedAttributeBasedVMSizeRecommenderInput
                = new AttributeBasedVMSizeRecommenderInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("regularPriorityProfile".equals(fieldName)) {
                    deserializedAttributeBasedVMSizeRecommenderInput.regularPriorityProfile = reader.readUntyped();
                } else if ("spotPriorityProfile".equals(fieldName)) {
                    deserializedAttributeBasedVMSizeRecommenderInput.spotPriorityProfile = reader.readUntyped();
                } else if ("recommendationProperties".equals(fieldName)) {
                    deserializedAttributeBasedVMSizeRecommenderInput.recommendationProperties = reader.readUntyped();
                } else if ("resourceProperties".equals(fieldName)) {
                    deserializedAttributeBasedVMSizeRecommenderInput.resourceProperties = reader.readUntyped();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAttributeBasedVMSizeRecommenderInput;
        });
    }
}

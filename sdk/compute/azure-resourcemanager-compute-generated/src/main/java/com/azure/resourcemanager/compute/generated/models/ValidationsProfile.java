// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** This is the validations profile of a Gallery Image Version. */
@Fluent
public final class ValidationsProfile {
    /*
     * The published time of the image version
     */
    @JsonProperty(value = "validationEtag")
    private String validationEtag;

    /*
     * This specifies the list of executedValidations of the image version metadata
     */
    @JsonProperty(value = "executedValidations")
    private List<ExecutedValidation> executedValidations;

    /*
     * This specifies the publisher, offer, sku, and version of the image version metadata
     */
    @JsonProperty(value = "platformAttributes")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> platformAttributes;

    /** Creates an instance of ValidationsProfile class. */
    public ValidationsProfile() {
    }

    /**
     * Get the validationEtag property: The published time of the image version.
     *
     * @return the validationEtag value.
     */
    public String validationEtag() {
        return this.validationEtag;
    }

    /**
     * Set the validationEtag property: The published time of the image version.
     *
     * @param validationEtag the validationEtag value to set.
     * @return the ValidationsProfile object itself.
     */
    public ValidationsProfile withValidationEtag(String validationEtag) {
        this.validationEtag = validationEtag;
        return this;
    }

    /**
     * Get the executedValidations property: This specifies the list of executedValidations of the image version
     * metadata.
     *
     * @return the executedValidations value.
     */
    public List<ExecutedValidation> executedValidations() {
        return this.executedValidations;
    }

    /**
     * Set the executedValidations property: This specifies the list of executedValidations of the image version
     * metadata.
     *
     * @param executedValidations the executedValidations value to set.
     * @return the ValidationsProfile object itself.
     */
    public ValidationsProfile withExecutedValidations(List<ExecutedValidation> executedValidations) {
        this.executedValidations = executedValidations;
        return this;
    }

    /**
     * Get the platformAttributes property: This specifies the publisher, offer, sku, and version of the image version
     * metadata.
     *
     * @return the platformAttributes value.
     */
    public Map<String, String> platformAttributes() {
        return this.platformAttributes;
    }

    /**
     * Set the platformAttributes property: This specifies the publisher, offer, sku, and version of the image version
     * metadata.
     *
     * @param platformAttributes the platformAttributes value to set.
     * @return the ValidationsProfile object itself.
     */
    public ValidationsProfile withPlatformAttributes(Map<String, String> platformAttributes) {
        this.platformAttributes = platformAttributes;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (executedValidations() != null) {
            executedValidations().forEach(e -> e.validate());
        }
    }
}

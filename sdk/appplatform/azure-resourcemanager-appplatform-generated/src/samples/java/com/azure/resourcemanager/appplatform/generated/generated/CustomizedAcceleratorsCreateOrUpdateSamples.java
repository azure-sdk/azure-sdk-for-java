// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.generated;

import com.azure.resourcemanager.appplatform.generated.models.AcceleratorGitRepository;
import com.azure.resourcemanager.appplatform.generated.models.AcceleratorSshSetting;
import com.azure.resourcemanager.appplatform.generated.models.CustomizedAcceleratorProperties;
import com.azure.resourcemanager.appplatform.generated.models.Sku;
import java.util.Arrays;

/** Samples for CustomizedAccelerators CreateOrUpdate. */
public final class CustomizedAcceleratorsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2023-05-01-preview/examples/CustomizedAccelerators_CreateOrUpdate.json
     */
    /**
     * Sample code: CustomizedAccelerators_CreateOrUpdate.
     *
     * @param manager Entry point to AppPlatformManager.
     */
    public static void customizedAcceleratorsCreateOrUpdate(
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager) {
        manager
            .customizedAccelerators()
            .define("acc-name")
            .withExistingApplicationAccelerator("myResourceGroup", "myservice", "default")
            .withProperties(
                new CustomizedAcceleratorProperties()
                    .withDisplayName("acc-name")
                    .withDescription("acc-desc")
                    .withIconUrl("acc-icon")
                    .withAcceleratorTags(Arrays.asList("tag-a", "tag-b"))
                    .withGitRepository(
                        new AcceleratorGitRepository()
                            .withUrl("git-url")
                            .withIntervalInSeconds(70)
                            .withBranch("git-branch")
                            .withCommit("12345")
                            .withGitTag("git-tag")
                            .withAuthSetting(
                                new AcceleratorSshSetting()
                                    .withHostKey("fakeTokenPlaceholder")
                                    .withHostKeyAlgorithm("fakeTokenPlaceholder")
                                    .withPrivateKey("fakeTokenPlaceholder"))))
            .withSku(new Sku().withName("E0").withTier("Enterprise").withCapacity(2))
            .create();
    }
}

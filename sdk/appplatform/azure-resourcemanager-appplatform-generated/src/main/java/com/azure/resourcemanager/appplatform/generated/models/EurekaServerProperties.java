// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Eureka server properties payload.
 */
@Fluent
public final class EurekaServerProperties {
    /*
     * State of the eureka server.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private EurekaServerState provisioningState;

    /*
     * Enabled state of the eureka server. This is only used in Consumption tier.
     */
    @JsonProperty(value = "enabledState")
    private EurekaServerEnabledState enabledState;

    /*
     * Error when applying eureka server settings.
     */
    @JsonProperty(value = "error")
    private Error error;

    /**
     * Creates an instance of EurekaServerProperties class.
     */
    public EurekaServerProperties() {
    }

    /**
     * Get the provisioningState property: State of the eureka server.
     * 
     * @return the provisioningState value.
     */
    public EurekaServerState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the enabledState property: Enabled state of the eureka server. This is only used in Consumption tier.
     * 
     * @return the enabledState value.
     */
    public EurekaServerEnabledState enabledState() {
        return this.enabledState;
    }

    /**
     * Set the enabledState property: Enabled state of the eureka server. This is only used in Consumption tier.
     * 
     * @param enabledState the enabledState value to set.
     * @return the EurekaServerProperties object itself.
     */
    public EurekaServerProperties withEnabledState(EurekaServerEnabledState enabledState) {
        this.enabledState = enabledState;
        return this;
    }

    /**
     * Get the error property: Error when applying eureka server settings.
     * 
     * @return the error value.
     */
    public Error error() {
        return this.error;
    }

    /**
     * Set the error property: Error when applying eureka server settings.
     * 
     * @param error the error value to set.
     * @return the EurekaServerProperties object itself.
     */
    public EurekaServerProperties withError(Error error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (error() != null) {
            error().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.appplatform.generated.models.EurekaServerEnabledState;
import com.azure.resourcemanager.appplatform.generated.models.EurekaServerState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Eureka server resource. */
@Fluent
public final class MiddlewareEurekaServerInner extends ProxyResource {
    /*
     * Eureka server properties payload
     */
    @JsonProperty(value = "properties")
    private MiddlewareEurekaServerProperties innerProperties;

    /** Creates an instance of MiddlewareEurekaServerInner class. */
    public MiddlewareEurekaServerInner() {
    }

    /**
     * Get the innerProperties property: Eureka server properties payload.
     *
     * @return the innerProperties value.
     */
    private MiddlewareEurekaServerProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the provisioningState property: State of the eureka server.
     *
     * @return the provisioningState value.
     */
    public EurekaServerState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the dashboardUri property: The uri to visit the eureka server dashboard.
     *
     * @return the dashboardUri value.
     */
    public String dashboardUri() {
        return this.innerProperties() == null ? null : this.innerProperties().dashboardUri();
    }

    /**
     * Set the dashboardUri property: The uri to visit the eureka server dashboard.
     *
     * @param dashboardUri the dashboardUri value to set.
     * @return the MiddlewareEurekaServerInner object itself.
     */
    public MiddlewareEurekaServerInner withDashboardUri(String dashboardUri) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MiddlewareEurekaServerProperties();
        }
        this.innerProperties().withDashboardUri(dashboardUri);
        return this;
    }

    /**
     * Get the enabledState property: Enabled state of the eureka server. This is only used in Consumption tier.
     *
     * @return the enabledState value.
     */
    public EurekaServerEnabledState enabledState() {
        return this.innerProperties() == null ? null : this.innerProperties().enabledState();
    }

    /**
     * Set the enabledState property: Enabled state of the eureka server. This is only used in Consumption tier.
     *
     * @param enabledState the enabledState value to set.
     * @return the MiddlewareEurekaServerInner object itself.
     */
    public MiddlewareEurekaServerInner withEnabledState(EurekaServerEnabledState enabledState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new MiddlewareEurekaServerProperties();
        }
        this.innerProperties().withEnabledState(enabledState);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

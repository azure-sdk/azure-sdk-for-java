// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appplatform.generated.fluent.models.JavaEnvironmentInner;
import com.azure.resourcemanager.appplatform.generated.fluent.models.ResourceUploadDefinitionInner;
import com.azure.resourcemanager.appplatform.generated.models.JavaEnvironmentForPatchBody;

/**
 * An instance of this class provides access to all the operations defined in JavaEnvironmentsClient.
 */
public interface JavaEnvironmentsClient {
    /**
     * Get all the Java Environments for a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments for a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JavaEnvironmentInner> list();

    /**
     * Get all the Java Environments for a subscription.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments for a subscription as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JavaEnvironmentInner> list(Context context);

    /**
     * Get all the Java Environments in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JavaEnvironmentInner> listByResourceGroup(String resourceGroupName);

    /**
     * Get all the Java Environments in a resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments in a resource group as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<JavaEnvironmentInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get the properties of a Java Environment.
     * 
     * Get a Java Environment and its properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Java Environment and its properties along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<JavaEnvironmentInner> getByResourceGroupWithResponse(String resourceGroupName, String javaEnvironmentName,
        Context context);

    /**
     * Get the properties of a Java Environment.
     * 
     * Get a Java Environment and its properties.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Java Environment and its properties.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JavaEnvironmentInner getByResourceGroup(String resourceGroupName, String javaEnvironmentName);

    /**
     * Creates or updates a Java Environment.
     * 
     * Create a new Java Environment or update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<JavaEnvironmentInner>, JavaEnvironmentInner> beginCreateOrUpdate(String resourceGroupName,
        String javaEnvironmentName, JavaEnvironmentInner environmentEnvelope);

    /**
     * Creates or updates a Java Environment.
     * 
     * Create a new Java Environment or update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<JavaEnvironmentInner>, JavaEnvironmentInner> beginCreateOrUpdate(String resourceGroupName,
        String javaEnvironmentName, JavaEnvironmentInner environmentEnvelope, Context context);

    /**
     * Creates or updates a Java Environment.
     * 
     * Create a new Java Environment or update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JavaEnvironmentInner createOrUpdate(String resourceGroupName, String javaEnvironmentName,
        JavaEnvironmentInner environmentEnvelope);

    /**
     * Creates or updates a Java Environment.
     * 
     * Create a new Java Environment or update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JavaEnvironmentInner createOrUpdate(String resourceGroupName, String javaEnvironmentName,
        JavaEnvironmentInner environmentEnvelope, Context context);

    /**
     * Delete a Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String javaEnvironmentName);

    /**
     * Delete a Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String javaEnvironmentName,
        Context context);

    /**
     * Delete a Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String javaEnvironmentName);

    /**
     * Delete a Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Update Java Environment's properties.
     * 
     * Operation to update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<JavaEnvironmentInner>, JavaEnvironmentInner> beginUpdate(String resourceGroupName,
        String javaEnvironmentName, JavaEnvironmentForPatchBody environmentEnvelope);

    /**
     * Update Java Environment's properties.
     * 
     * Operation to update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<JavaEnvironmentInner>, JavaEnvironmentInner> beginUpdate(String resourceGroupName,
        String javaEnvironmentName, JavaEnvironmentForPatchBody environmentEnvelope, Context context);

    /**
     * Update Java Environment's properties.
     * 
     * Operation to update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JavaEnvironmentInner update(String resourceGroupName, String javaEnvironmentName,
        JavaEnvironmentForPatchBody environmentEnvelope);

    /**
     * Update Java Environment's properties.
     * 
     * Operation to update an exiting Java Environment.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param environmentEnvelope Configuration details of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an environment for hosting Azure Spring Apps.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    JavaEnvironmentInner update(String resourceGroupName, String javaEnvironmentName,
        JavaEnvironmentForPatchBody environmentEnvelope, Context context);

    /**
     * Get an resource upload URL for the env, which may be artifacts or source archive.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an resource upload URL for the env, which may be artifacts or source archive along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ResourceUploadDefinitionInner> getResourceUploadUrlWithResponse(String resourceGroupName,
        String javaEnvironmentName, Context context);

    /**
     * Get an resource upload URL for the env, which may be artifacts or source archive.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an resource upload URL for the env, which may be artifacts or source archive.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ResourceUploadDefinitionInner getResourceUploadUrl(String resourceGroupName, String javaEnvironmentName);
}

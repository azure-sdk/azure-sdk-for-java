// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of MiddlewareEurekaServers.
 */
public interface MiddlewareEurekaServers {
    /**
     * List the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Eureka Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MiddlewareEurekaServer> list(String resourceGroupName, String javaEnvironmentName);

    /**
     * List the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Eureka Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MiddlewareEurekaServer> list(String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Get the eureka server middleware settings.
     * 
     * Get the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the eureka server settings along with {@link Response}.
     */
    Response<MiddlewareEurekaServer> getWithResponse(String resourceGroupName, String javaEnvironmentName,
        String eurekaServerName, Context context);

    /**
     * Get the eureka server middleware settings.
     * 
     * Get the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the eureka server settings.
     */
    MiddlewareEurekaServer get(String resourceGroupName, String javaEnvironmentName, String eurekaServerName);

    /**
     * Get the eureka server middleware settings.
     * 
     * Get the eureka server settings.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the eureka server settings along with {@link Response}.
     */
    MiddlewareEurekaServer getById(String id);

    /**
     * Get the eureka server middleware settings.
     * 
     * Get the eureka server settings.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the eureka server settings along with {@link Response}.
     */
    Response<MiddlewareEurekaServer> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MiddlewareEurekaServer resource.
     * 
     * @param name resource name.
     * @return the first stage of the new MiddlewareEurekaServer definition.
     */
    MiddlewareEurekaServer.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.MiddlewareEurekaServerInner;
import com.azure.resourcemanager.appplatform.generated.models.EurekaServerEnabledState;
import com.azure.resourcemanager.appplatform.generated.models.EurekaServerState;
import com.azure.resourcemanager.appplatform.generated.models.MiddlewareEurekaServer;

public final class MiddlewareEurekaServerImpl
    implements MiddlewareEurekaServer, MiddlewareEurekaServer.Definition, MiddlewareEurekaServer.Update {
    private MiddlewareEurekaServerInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public EurekaServerState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String dashboardUri() {
        return this.innerModel().dashboardUri();
    }

    public EurekaServerEnabledState enabledState() {
        return this.innerModel().enabledState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public MiddlewareEurekaServerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String javaEnvironmentName;

    private String eurekaServerName;

    public MiddlewareEurekaServerImpl withExistingJavaEnvironment(
        String resourceGroupName, String javaEnvironmentName) {
        this.resourceGroupName = resourceGroupName;
        this.javaEnvironmentName = javaEnvironmentName;
        return this;
    }

    public MiddlewareEurekaServer create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareEurekaServers()
                .createOrUpdate(
                    resourceGroupName, javaEnvironmentName, eurekaServerName, this.innerModel(), Context.NONE);
        return this;
    }

    public MiddlewareEurekaServer create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareEurekaServers()
                .createOrUpdate(resourceGroupName, javaEnvironmentName, eurekaServerName, this.innerModel(), context);
        return this;
    }

    MiddlewareEurekaServerImpl(
        String name, com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new MiddlewareEurekaServerInner();
        this.serviceManager = serviceManager;
        this.eurekaServerName = name;
    }

    public MiddlewareEurekaServerImpl update() {
        return this;
    }

    public MiddlewareEurekaServer apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareEurekaServers()
                .updatePatch(resourceGroupName, javaEnvironmentName, eurekaServerName, this.innerModel(), Context.NONE);
        return this;
    }

    public MiddlewareEurekaServer apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareEurekaServers()
                .updatePatch(resourceGroupName, javaEnvironmentName, eurekaServerName, this.innerModel(), context);
        return this;
    }

    MiddlewareEurekaServerImpl(
        MiddlewareEurekaServerInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.javaEnvironmentName = Utils.getValueFromIdByName(innerObject.id(), "javaEnvironments");
        this.eurekaServerName = Utils.getValueFromIdByName(innerObject.id(), "eurekaServers");
    }

    public MiddlewareEurekaServer refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareEurekaServers()
                .getWithResponse(resourceGroupName, javaEnvironmentName, eurekaServerName, Context.NONE)
                .getValue();
        return this;
    }

    public MiddlewareEurekaServer refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareEurekaServers()
                .getWithResponse(resourceGroupName, javaEnvironmentName, eurekaServerName, context)
                .getValue();
        return this;
    }

    public MiddlewareEurekaServerImpl withDashboardUri(String dashboardUri) {
        this.innerModel().withDashboardUri(dashboardUri);
        return this;
    }

    public MiddlewareEurekaServerImpl withEnabledState(EurekaServerEnabledState enabledState) {
        this.innerModel().withEnabledState(enabledState);
        return this;
    }
}

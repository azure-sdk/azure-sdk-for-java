// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.MiddlewareConfigServerInner;
import com.azure.resourcemanager.appplatform.generated.models.ConfigServerEnabledState;
import com.azure.resourcemanager.appplatform.generated.models.ConfigServerState;
import com.azure.resourcemanager.appplatform.generated.models.MiddlewareConfigServer;
import com.azure.resourcemanager.appplatform.generated.models.MiddlewareConfigServerSettings;
import com.azure.resourcemanager.appplatform.generated.models.MiddlewareConfigServerSettingsValidateResult;

public final class MiddlewareConfigServerImpl
    implements MiddlewareConfigServer, MiddlewareConfigServer.Definition, MiddlewareConfigServer.Update {
    private MiddlewareConfigServerInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ConfigServerState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ConfigServerEnabledState enabledState() {
        return this.innerModel().enabledState();
    }

    public MiddlewareConfigServerSettings configServer() {
        return this.innerModel().configServer();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public MiddlewareConfigServerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String javaEnvironmentName;

    private String configServerName;

    public MiddlewareConfigServerImpl withExistingJavaEnvironment(
        String resourceGroupName, String javaEnvironmentName) {
        this.resourceGroupName = resourceGroupName;
        this.javaEnvironmentName = javaEnvironmentName;
        return this;
    }

    public MiddlewareConfigServer create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareConfigServers()
                .createOrUpdate(
                    resourceGroupName, javaEnvironmentName, configServerName, this.innerModel(), Context.NONE);
        return this;
    }

    public MiddlewareConfigServer create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareConfigServers()
                .createOrUpdate(resourceGroupName, javaEnvironmentName, configServerName, this.innerModel(), context);
        return this;
    }

    MiddlewareConfigServerImpl(
        String name, com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new MiddlewareConfigServerInner();
        this.serviceManager = serviceManager;
        this.configServerName = name;
    }

    public MiddlewareConfigServerImpl update() {
        return this;
    }

    public MiddlewareConfigServer apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareConfigServers()
                .updatePatch(resourceGroupName, javaEnvironmentName, configServerName, this.innerModel(), Context.NONE);
        return this;
    }

    public MiddlewareConfigServer apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareConfigServers()
                .updatePatch(resourceGroupName, javaEnvironmentName, configServerName, this.innerModel(), context);
        return this;
    }

    MiddlewareConfigServerImpl(
        MiddlewareConfigServerInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.javaEnvironmentName = Utils.getValueFromIdByName(innerObject.id(), "javaEnvironments");
        this.configServerName = Utils.getValueFromIdByName(innerObject.id(), "configServers");
    }

    public MiddlewareConfigServer refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareConfigServers()
                .getWithResponse(resourceGroupName, javaEnvironmentName, configServerName, Context.NONE)
                .getValue();
        return this;
    }

    public MiddlewareConfigServer refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getMiddlewareConfigServers()
                .getWithResponse(resourceGroupName, javaEnvironmentName, configServerName, context)
                .getValue();
        return this;
    }

    public MiddlewareConfigServerSettingsValidateResult validate(MiddlewareConfigServerSettings configServerSettings) {
        return serviceManager
            .middlewareConfigServers()
            .validate(resourceGroupName, javaEnvironmentName, configServerName, configServerSettings);
    }

    public MiddlewareConfigServerSettingsValidateResult validate(
        MiddlewareConfigServerSettings configServerSettings, Context context) {
        return serviceManager
            .middlewareConfigServers()
            .validate(resourceGroupName, javaEnvironmentName, configServerName, configServerSettings, context);
    }

    public MiddlewareConfigServerImpl withEnabledState(ConfigServerEnabledState enabledState) {
        this.innerModel().withEnabledState(enabledState);
        return this;
    }

    public MiddlewareConfigServerImpl withConfigServer(MiddlewareConfigServerSettings configServer) {
        this.innerModel().withConfigServer(configServer);
        return this;
    }
}

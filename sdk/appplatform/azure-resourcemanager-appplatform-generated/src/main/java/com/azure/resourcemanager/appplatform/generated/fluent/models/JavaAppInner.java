// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appplatform.generated.models.Configuration;
import com.azure.resourcemanager.appplatform.generated.models.ContainerApp;
import com.azure.resourcemanager.appplatform.generated.models.ExtendedLocation;
import com.azure.resourcemanager.appplatform.generated.models.JavaAppProperties;
import com.azure.resourcemanager.appplatform.generated.models.ManagedServiceIdentity;
import com.azure.resourcemanager.appplatform.generated.models.Template;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Azure Spring Apps JavaApp resource. */
@Fluent
public class JavaAppInner extends ContainerApp {
    /*
     * The properties property.
     */
    @JsonProperty(value = "properties")
    private JavaAppProperties properties;

    /** Creates an instance of JavaAppInner class. */
    public JavaAppInner() {
    }

    /**
     * Get the properties property: The properties property.
     *
     * @return the properties value.
     */
    public JavaAppProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The properties property.
     *
     * @param properties the properties value to set.
     * @return the JavaAppInner object itself.
     */
    public JavaAppInner withProperties(JavaAppProperties properties) {
        this.properties = properties;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withExtendedLocation(ExtendedLocation extendedLocation) {
        super.withExtendedLocation(extendedLocation);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withIdentity(ManagedServiceIdentity identity) {
        super.withIdentity(identity);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withManagedBy(String managedBy) {
        super.withManagedBy(managedBy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withManagedEnvironmentId(String managedEnvironmentId) {
        super.withManagedEnvironmentId(managedEnvironmentId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withEnvironmentId(String environmentId) {
        super.withEnvironmentId(environmentId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withWorkloadProfileName(String workloadProfileName) {
        super.withWorkloadProfileName(workloadProfileName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withConfiguration(Configuration configuration) {
        super.withConfiguration(configuration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withTemplate(Template template) {
        super.withTemplate(template);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public JavaAppInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (properties() != null) {
            properties().validate();
        }
    }
}

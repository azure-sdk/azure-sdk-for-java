// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties of a build setting.
 */
@Fluent
public final class BuildSettingProperties {
    /*
     * build setting type
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /*
     * State of the build setting.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private BuildSettingProvisioningState provisioningState;

    /*
     * Sensitive properties for the APM
     */
    @JsonProperty(value = "secrets")
    private BuildSettingPropertiesSecrets secrets;

    /**
     * Creates an instance of BuildSettingProperties class.
     */
    public BuildSettingProperties() {
    }

    /**
     * Get the type property: build setting type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: build setting type.
     * 
     * @param type the type value to set.
     * @return the BuildSettingProperties object itself.
     */
    public BuildSettingProperties withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the provisioningState property: State of the build setting.
     * 
     * @return the provisioningState value.
     */
    public BuildSettingProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the secrets property: Sensitive properties for the APM.
     * 
     * @return the secrets value.
     */
    public BuildSettingPropertiesSecrets secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets property: Sensitive properties for the APM.
     * 
     * @param secrets the secrets value to set.
     * @return the BuildSettingProperties object itself.
     */
    public BuildSettingProperties withSecrets(BuildSettingPropertiesSecrets secrets) {
        this.secrets = secrets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property type in model BuildSettingProperties"));
        }
        if (secrets() != null) {
            secrets().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(BuildSettingProperties.class);
}

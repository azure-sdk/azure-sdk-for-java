// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appplatform.generated.fluent.PredefinedAcceleratorsClient;
import com.azure.resourcemanager.appplatform.generated.fluent.models.PredefinedAcceleratorResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.PredefinedAcceleratorResource;
import com.azure.resourcemanager.appplatform.generated.models.PredefinedAccelerators;

public final class PredefinedAcceleratorsImpl implements PredefinedAccelerators {
    private static final ClientLogger LOGGER = new ClientLogger(PredefinedAcceleratorsImpl.class);

    private final PredefinedAcceleratorsClient innerClient;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public PredefinedAcceleratorsImpl(PredefinedAcceleratorsClient innerClient,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PredefinedAcceleratorResource> list(String resourceGroupName, String serviceName,
        String applicationAcceleratorName) {
        PagedIterable<PredefinedAcceleratorResourceInner> inner
            = this.serviceClient().list(resourceGroupName, serviceName, applicationAcceleratorName);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new PredefinedAcceleratorResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<PredefinedAcceleratorResource> list(String resourceGroupName, String serviceName,
        String applicationAcceleratorName, Context context) {
        PagedIterable<PredefinedAcceleratorResourceInner> inner
            = this.serviceClient().list(resourceGroupName, serviceName, applicationAcceleratorName, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new PredefinedAcceleratorResourceImpl(inner1, this.manager()));
    }

    public Response<PredefinedAcceleratorResource> getWithResponse(String resourceGroupName, String serviceName,
        String applicationAcceleratorName, String predefinedAcceleratorName, Context context) {
        Response<PredefinedAcceleratorResourceInner> inner = this.serviceClient()
            .getWithResponse(resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PredefinedAcceleratorResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PredefinedAcceleratorResource get(String resourceGroupName, String serviceName,
        String applicationAcceleratorName, String predefinedAcceleratorName) {
        PredefinedAcceleratorResourceInner inner = this.serviceClient()
            .get(resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName);
        if (inner != null) {
            return new PredefinedAcceleratorResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void disable(String resourceGroupName, String serviceName, String applicationAcceleratorName,
        String predefinedAcceleratorName) {
        this.serviceClient()
            .disable(resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName);
    }

    public void disable(String resourceGroupName, String serviceName, String applicationAcceleratorName,
        String predefinedAcceleratorName, Context context) {
        this.serviceClient()
            .disable(resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName, context);
    }

    public void enable(String resourceGroupName, String serviceName, String applicationAcceleratorName,
        String predefinedAcceleratorName) {
        this.serviceClient()
            .enable(resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName);
    }

    public void enable(String resourceGroupName, String serviceName, String applicationAcceleratorName,
        String predefinedAcceleratorName, Context context) {
        this.serviceClient()
            .enable(resourceGroupName, serviceName, applicationAcceleratorName, predefinedAcceleratorName, context);
    }

    private PredefinedAcceleratorsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }
}

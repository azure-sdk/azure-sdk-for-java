// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appplatform.generated.models.ConfigServerEnabledState;
import com.azure.resourcemanager.appplatform.generated.models.ConfigServerState;
import com.azure.resourcemanager.appplatform.generated.models.MiddlewareConfigServerSettings;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Config server git properties payload.
 */
@Fluent
public final class MiddlewareConfigServerProperties {
    /*
     * State of the config server.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ConfigServerState provisioningState;

    /*
     * Enabled state of the config server. This is only used in Consumption tier.
     */
    @JsonProperty(value = "enabledState")
    private ConfigServerEnabledState enabledState;

    /*
     * Settings of config server.
     */
    @JsonProperty(value = "configServer")
    private MiddlewareConfigServerSettings configServer;

    /**
     * Creates an instance of MiddlewareConfigServerProperties class.
     */
    public MiddlewareConfigServerProperties() {
    }

    /**
     * Get the provisioningState property: State of the config server.
     * 
     * @return the provisioningState value.
     */
    public ConfigServerState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the enabledState property: Enabled state of the config server. This is only used in Consumption tier.
     * 
     * @return the enabledState value.
     */
    public ConfigServerEnabledState enabledState() {
        return this.enabledState;
    }

    /**
     * Set the enabledState property: Enabled state of the config server. This is only used in Consumption tier.
     * 
     * @param enabledState the enabledState value to set.
     * @return the MiddlewareConfigServerProperties object itself.
     */
    public MiddlewareConfigServerProperties withEnabledState(ConfigServerEnabledState enabledState) {
        this.enabledState = enabledState;
        return this;
    }

    /**
     * Get the configServer property: Settings of config server.
     * 
     * @return the configServer value.
     */
    public MiddlewareConfigServerSettings configServer() {
        return this.configServer;
    }

    /**
     * Set the configServer property: Settings of config server.
     * 
     * @param configServer the configServer value to set.
     * @return the MiddlewareConfigServerProperties object itself.
     */
    public MiddlewareConfigServerProperties withConfigServer(MiddlewareConfigServerSettings configServer) {
        this.configServer = configServer;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (configServer() != null) {
            configServer().validate();
        }
    }
}

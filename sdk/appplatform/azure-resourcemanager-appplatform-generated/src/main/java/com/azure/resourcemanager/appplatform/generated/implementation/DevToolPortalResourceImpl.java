// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.DevToolPortalResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.DevToolPortalProperties;
import com.azure.resourcemanager.appplatform.generated.models.DevToolPortalResource;

public final class DevToolPortalResourceImpl
    implements DevToolPortalResource, DevToolPortalResource.Definition, DevToolPortalResource.Update {
    private DevToolPortalResourceInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DevToolPortalProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DevToolPortalResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String devToolPortalName;

    public DevToolPortalResourceImpl withExistingSpring(String resourceGroupName, String serviceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        return this;
    }

    public DevToolPortalResource create() {
        this.innerObject = serviceManager.serviceClient().getDevToolPortals().createOrUpdate(resourceGroupName,
            serviceName, devToolPortalName, this.innerModel(), Context.NONE);
        return this;
    }

    public DevToolPortalResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getDevToolPortals().createOrUpdate(resourceGroupName,
            serviceName, devToolPortalName, this.innerModel(), context);
        return this;
    }

    DevToolPortalResourceImpl(String name,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new DevToolPortalResourceInner();
        this.serviceManager = serviceManager;
        this.devToolPortalName = name;
    }

    public DevToolPortalResourceImpl update() {
        return this;
    }

    public DevToolPortalResource apply() {
        this.innerObject = serviceManager.serviceClient().getDevToolPortals().createOrUpdate(resourceGroupName,
            serviceName, devToolPortalName, this.innerModel(), Context.NONE);
        return this;
    }

    public DevToolPortalResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getDevToolPortals().createOrUpdate(resourceGroupName,
            serviceName, devToolPortalName, this.innerModel(), context);
        return this;
    }

    DevToolPortalResourceImpl(DevToolPortalResourceInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = Utils.getValueFromIdByName(innerObject.id(), "Spring");
        this.devToolPortalName = Utils.getValueFromIdByName(innerObject.id(), "DevToolPortals");
    }

    public DevToolPortalResource refresh() {
        this.innerObject = serviceManager.serviceClient().getDevToolPortals()
            .getWithResponse(resourceGroupName, serviceName, devToolPortalName, Context.NONE).getValue();
        return this;
    }

    public DevToolPortalResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getDevToolPortals()
            .getWithResponse(resourceGroupName, serviceName, devToolPortalName, context).getValue();
        return this;
    }

    public DevToolPortalResourceImpl withProperties(DevToolPortalProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

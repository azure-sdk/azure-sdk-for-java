// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appplatform.generated.fluent.models.MiddlewareConfigServerInner;
import com.azure.resourcemanager.appplatform.generated.fluent.models.MiddlewareConfigServerSettingsValidateResultInner;
import com.azure.resourcemanager.appplatform.generated.models.MiddlewareConfigServerSettings;

/** An instance of this class provides access to all the operations defined in MiddlewareConfigServersClient. */
public interface MiddlewareConfigServersClient {
    /**
     * List the config server settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Config Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MiddlewareConfigServerInner> list(String resourceGroupName, String javaEnvironmentName);

    /**
     * List the config server settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Config Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MiddlewareConfigServerInner> list(
        String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Get the config server and its properties.
     *
     * <p>Operation to get the config server and its properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MiddlewareConfigServerInner> getWithResponse(
        String resourceGroupName, String javaEnvironmentName, String configServerName, Context context);

    /**
     * Get the config server and its properties.
     *
     * <p>Operation to get the config server and its properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerInner get(String resourceGroupName, String javaEnvironmentName, String configServerName);

    /**
     * Create or update the config server middleware.
     *
     * <p>Operation to create or update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of config Server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareConfigServerInner>, MiddlewareConfigServerInner> beginCreateOrUpdate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource);

    /**
     * Create or update the config server middleware.
     *
     * <p>Operation to create or update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of config Server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareConfigServerInner>, MiddlewareConfigServerInner> beginCreateOrUpdate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource,
        Context context);

    /**
     * Create or update the config server middleware.
     *
     * <p>Operation to create or update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerInner createOrUpdate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource);

    /**
     * Create or update the config server middleware.
     *
     * <p>Operation to create or update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerInner createOrUpdate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource,
        Context context);

    /**
     * Update the config server middleware.
     *
     * <p>Operation to update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of config Server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareConfigServerInner>, MiddlewareConfigServerInner> beginUpdatePatch(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource);

    /**
     * Update the config server middleware.
     *
     * <p>Operation to update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of config Server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareConfigServerInner>, MiddlewareConfigServerInner> beginUpdatePatch(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource,
        Context context);

    /**
     * Update the config server middleware.
     *
     * <p>Operation to update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerInner updatePatch(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource);

    /**
     * Update the config server middleware.
     *
     * <p>Operation to update the config server.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerInner updatePatch(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerInner configServerResource,
        Context context);

    /**
     * Validate the config server middleware settings.
     *
     * <p>Check if the config server settings are valid.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerSettings Config server settings to be validated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of validation result for config server settings.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<
            PollResult<MiddlewareConfigServerSettingsValidateResultInner>,
            MiddlewareConfigServerSettingsValidateResultInner>
        beginValidate(
            String resourceGroupName,
            String javaEnvironmentName,
            String configServerName,
            MiddlewareConfigServerSettings configServerSettings);

    /**
     * Validate the config server middleware settings.
     *
     * <p>Check if the config server settings are valid.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerSettings Config server settings to be validated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of validation result for config server settings.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<
            PollResult<MiddlewareConfigServerSettingsValidateResultInner>,
            MiddlewareConfigServerSettingsValidateResultInner>
        beginValidate(
            String resourceGroupName,
            String javaEnvironmentName,
            String configServerName,
            MiddlewareConfigServerSettings configServerSettings,
            Context context);

    /**
     * Validate the config server middleware settings.
     *
     * <p>Check if the config server settings are valid.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerSettings Config server settings to be validated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return validation result for config server settings.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerSettingsValidateResultInner validate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerSettings configServerSettings);

    /**
     * Validate the config server middleware settings.
     *
     * <p>Check if the config server settings are valid.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerSettings Config server settings to be validated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return validation result for config server settings.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareConfigServerSettingsValidateResultInner validate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerSettings configServerSettings,
        Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appplatform.generated.models.ProvisioningState;
import com.azure.resourcemanager.appplatform.generated.models.ZoneRedundantEnum;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Java environment resource specific properties. */
@Fluent
public final class JavaEnvironmentProperties {
    /*
     * Provisioning state of the Service
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The resource Id of the App Environment that the Spring Apps instance builds on
     */
    @JsonProperty(value = "environmentId")
    private String environmentId;

    /*
     * The name of the resource group that contains the infrastructure resources
     */
    @JsonProperty(value = "infraResourceGroup")
    private String infraResourceGroup;

    /*
     * Whether or not this Java Environment is zone-redundant.
     */
    @JsonProperty(value = "zoneRedundant")
    private ZoneRedundantEnum zoneRedundant;

    /*
     * Default Domain Name for the Java environment
     */
    @JsonProperty(value = "defaultDomain", access = JsonProperty.Access.WRITE_ONLY)
    private String defaultDomain;

    /** Creates an instance of JavaEnvironmentProperties class. */
    public JavaEnvironmentProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state of the Service.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the environmentId property: The resource Id of the App Environment that the Spring Apps instance builds on.
     *
     * @return the environmentId value.
     */
    public String environmentId() {
        return this.environmentId;
    }

    /**
     * Set the environmentId property: The resource Id of the App Environment that the Spring Apps instance builds on.
     *
     * @param environmentId the environmentId value to set.
     * @return the JavaEnvironmentProperties object itself.
     */
    public JavaEnvironmentProperties withEnvironmentId(String environmentId) {
        this.environmentId = environmentId;
        return this;
    }

    /**
     * Get the infraResourceGroup property: The name of the resource group that contains the infrastructure resources.
     *
     * @return the infraResourceGroup value.
     */
    public String infraResourceGroup() {
        return this.infraResourceGroup;
    }

    /**
     * Set the infraResourceGroup property: The name of the resource group that contains the infrastructure resources.
     *
     * @param infraResourceGroup the infraResourceGroup value to set.
     * @return the JavaEnvironmentProperties object itself.
     */
    public JavaEnvironmentProperties withInfraResourceGroup(String infraResourceGroup) {
        this.infraResourceGroup = infraResourceGroup;
        return this;
    }

    /**
     * Get the zoneRedundant property: Whether or not this Java Environment is zone-redundant.
     *
     * @return the zoneRedundant value.
     */
    public ZoneRedundantEnum zoneRedundant() {
        return this.zoneRedundant;
    }

    /**
     * Set the zoneRedundant property: Whether or not this Java Environment is zone-redundant.
     *
     * @param zoneRedundant the zoneRedundant value to set.
     * @return the JavaEnvironmentProperties object itself.
     */
    public JavaEnvironmentProperties withZoneRedundant(ZoneRedundantEnum zoneRedundant) {
        this.zoneRedundant = zoneRedundant;
        return this;
    }

    /**
     * Get the defaultDomain property: Default Domain Name for the Java environment.
     *
     * @return the defaultDomain value.
     */
    public String defaultDomain() {
        return this.defaultDomain;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

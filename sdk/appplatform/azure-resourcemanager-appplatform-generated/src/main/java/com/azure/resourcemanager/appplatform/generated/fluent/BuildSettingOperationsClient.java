// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appplatform.generated.fluent.models.BuildSettingResourceInner;

/**
 * An instance of this class provides access to all the operations defined in BuildSettingOperationsClient.
 */
public interface BuildSettingOperationsClient {
    /**
     * Create or update a build settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param buildServiceName The name of the build service resource.
     * @param buildSettingName The name of the build setting.
     * @param buildSettingResource Parameters for the create or update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of build setting resource object.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<BuildSettingResourceInner>, BuildSettingResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String serviceName, String buildServiceName, String buildSettingName,
        BuildSettingResourceInner buildSettingResource);

    /**
     * Create or update a build settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param buildServiceName The name of the build service resource.
     * @param buildSettingName The name of the build setting.
     * @param buildSettingResource Parameters for the create or update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of build setting resource object.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<BuildSettingResourceInner>, BuildSettingResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String serviceName, String buildServiceName, String buildSettingName,
        BuildSettingResourceInner buildSettingResource, Context context);

    /**
     * Create or update a build settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param buildServiceName The name of the build service resource.
     * @param buildSettingName The name of the build setting.
     * @param buildSettingResource Parameters for the create or update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return build setting resource object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    BuildSettingResourceInner createOrUpdate(String resourceGroupName, String serviceName, String buildServiceName,
        String buildSettingName, BuildSettingResourceInner buildSettingResource);

    /**
     * Create or update a build settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param buildServiceName The name of the build service resource.
     * @param buildSettingName The name of the build setting.
     * @param buildSettingResource Parameters for the create or update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return build setting resource object.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    BuildSettingResourceInner createOrUpdate(String resourceGroupName, String serviceName, String buildServiceName,
        String buildSettingName, BuildSettingResourceInner buildSettingResource, Context context);
}

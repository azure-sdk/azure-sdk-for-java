// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appplatform.generated.fluent.BuildSettingsClient;
import com.azure.resourcemanager.appplatform.generated.fluent.models.BuildSettingResourceInner;
import com.azure.resourcemanager.appplatform.generated.fluent.models.SupportedBuildSettingTypeInner;
import com.azure.resourcemanager.appplatform.generated.models.BuildSettingResource;
import com.azure.resourcemanager.appplatform.generated.models.BuildSettings;
import com.azure.resourcemanager.appplatform.generated.models.SupportedBuildSettingType;

public final class BuildSettingsImpl implements BuildSettings {
    private static final ClientLogger LOGGER = new ClientLogger(BuildSettingsImpl.class);

    private final BuildSettingsClient innerClient;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public BuildSettingsImpl(BuildSettingsClient innerClient,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<BuildSettingResource> list(String resourceGroupName, String serviceName,
        String buildServiceName) {
        PagedIterable<BuildSettingResourceInner> inner
            = this.serviceClient().list(resourceGroupName, serviceName, buildServiceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new BuildSettingResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<BuildSettingResource> list(String resourceGroupName, String serviceName,
        String buildServiceName, Context context) {
        PagedIterable<BuildSettingResourceInner> inner
            = this.serviceClient().list(resourceGroupName, serviceName, buildServiceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new BuildSettingResourceImpl(inner1, this.manager()));
    }

    public Response<BuildSettingResource> getWithResponse(String resourceGroupName, String serviceName,
        String buildServiceName, String buildSettingName, Context context) {
        Response<BuildSettingResourceInner> inner = this.serviceClient().getWithResponse(resourceGroupName, serviceName,
            buildServiceName, buildSettingName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BuildSettingResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BuildSettingResource get(String resourceGroupName, String serviceName, String buildServiceName,
        String buildSettingName) {
        BuildSettingResourceInner inner
            = this.serviceClient().get(resourceGroupName, serviceName, buildServiceName, buildSettingName);
        if (inner != null) {
            return new BuildSettingResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String serviceName, String buildServiceName, String buildSettingName) {
        this.serviceClient().delete(resourceGroupName, serviceName, buildServiceName, buildSettingName);
    }

    public void delete(String resourceGroupName, String serviceName, String buildServiceName, String buildSettingName,
        Context context) {
        this.serviceClient().delete(resourceGroupName, serviceName, buildServiceName, buildSettingName, context);
    }

    public PagedIterable<SupportedBuildSettingType> listSupportedTypes(String resourceGroupName, String serviceName,
        String buildServiceName) {
        PagedIterable<SupportedBuildSettingTypeInner> inner
            = this.serviceClient().listSupportedTypes(resourceGroupName, serviceName, buildServiceName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SupportedBuildSettingTypeImpl(inner1, this.manager()));
    }

    public PagedIterable<SupportedBuildSettingType> listSupportedTypes(String resourceGroupName, String serviceName,
        String buildServiceName, Context context) {
        PagedIterable<SupportedBuildSettingTypeInner> inner
            = this.serviceClient().listSupportedTypes(resourceGroupName, serviceName, buildServiceName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SupportedBuildSettingTypeImpl(inner1, this.manager()));
    }

    private BuildSettingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of MiddlewareConfigServers. */
public interface MiddlewareConfigServers {
    /**
     * List the config server settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Config Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MiddlewareConfigServer> list(String resourceGroupName, String javaEnvironmentName);

    /**
     * List the config server settings.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Config Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MiddlewareConfigServer> list(String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Get the config server and its properties.
     *
     * <p>Operation to get the config server and its properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource along with {@link Response}.
     */
    Response<MiddlewareConfigServer> getWithResponse(
        String resourceGroupName, String javaEnvironmentName, String configServerName, Context context);

    /**
     * Get the config server and its properties.
     *
     * <p>Operation to get the config server and its properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource.
     */
    MiddlewareConfigServer get(String resourceGroupName, String javaEnvironmentName, String configServerName);

    /**
     * Validate the config server middleware settings.
     *
     * <p>Check if the config server settings are valid.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerSettings Config server settings to be validated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return validation result for config server settings.
     */
    MiddlewareConfigServerSettingsValidateResult validate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerSettings configServerSettings);

    /**
     * Validate the config server middleware settings.
     *
     * <p>Check if the config server settings are valid.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param configServerName Name of the Config Server.
     * @param configServerSettings Config server settings to be validated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return validation result for config server settings.
     */
    MiddlewareConfigServerSettingsValidateResult validate(
        String resourceGroupName,
        String javaEnvironmentName,
        String configServerName,
        MiddlewareConfigServerSettings configServerSettings,
        Context context);

    /**
     * Get the config server and its properties.
     *
     * <p>Operation to get the config server and its properties.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource along with {@link Response}.
     */
    MiddlewareConfigServer getById(String id);

    /**
     * Get the config server and its properties.
     *
     * <p>Operation to get the config server and its properties.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return config Server resource along with {@link Response}.
     */
    Response<MiddlewareConfigServer> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MiddlewareConfigServer resource.
     *
     * @param name resource name.
     * @return the first stage of the new MiddlewareConfigServer definition.
     */
    MiddlewareConfigServer.DefinitionStages.Blank define(String name);
}

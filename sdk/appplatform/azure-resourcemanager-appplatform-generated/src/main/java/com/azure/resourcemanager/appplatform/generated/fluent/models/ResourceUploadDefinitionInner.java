// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Resource upload definition payload.
 */
@Fluent
public final class ResourceUploadDefinitionInner implements JsonSerializable<ResourceUploadDefinitionInner> {
    /*
     * Source relative path
     */
    private String relativePath;

    /*
     * Upload URL
     */
    private String uploadUrl;

    /**
     * Creates an instance of ResourceUploadDefinitionInner class.
     */
    public ResourceUploadDefinitionInner() {
    }

    /**
     * Get the relativePath property: Source relative path.
     * 
     * @return the relativePath value.
     */
    public String relativePath() {
        return this.relativePath;
    }

    /**
     * Set the relativePath property: Source relative path.
     * 
     * @param relativePath the relativePath value to set.
     * @return the ResourceUploadDefinitionInner object itself.
     */
    public ResourceUploadDefinitionInner withRelativePath(String relativePath) {
        this.relativePath = relativePath;
        return this;
    }

    /**
     * Get the uploadUrl property: Upload URL.
     * 
     * @return the uploadUrl value.
     */
    public String uploadUrl() {
        return this.uploadUrl;
    }

    /**
     * Set the uploadUrl property: Upload URL.
     * 
     * @param uploadUrl the uploadUrl value to set.
     * @return the ResourceUploadDefinitionInner object itself.
     */
    public ResourceUploadDefinitionInner withUploadUrl(String uploadUrl) {
        this.uploadUrl = uploadUrl;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("relativePath", this.relativePath);
        jsonWriter.writeStringField("uploadUrl", this.uploadUrl);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ResourceUploadDefinitionInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ResourceUploadDefinitionInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ResourceUploadDefinitionInner.
     */
    public static ResourceUploadDefinitionInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ResourceUploadDefinitionInner deserializedResourceUploadDefinitionInner
                = new ResourceUploadDefinitionInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("relativePath".equals(fieldName)) {
                    deserializedResourceUploadDefinitionInner.relativePath = reader.getString();
                } else if ("uploadUrl".equals(fieldName)) {
                    deserializedResourceUploadDefinitionInner.uploadUrl = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedResourceUploadDefinitionInner;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.ApplicationLiveViewResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.ApplicationLiveViewProperties;
import com.azure.resourcemanager.appplatform.generated.models.ApplicationLiveViewResource;

public final class ApplicationLiveViewResourceImpl
    implements ApplicationLiveViewResource, ApplicationLiveViewResource.Definition, ApplicationLiveViewResource.Update {
    private ApplicationLiveViewResourceInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ApplicationLiveViewProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApplicationLiveViewResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String applicationLiveViewName;

    public ApplicationLiveViewResourceImpl withExistingSpring(String resourceGroupName, String serviceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        return this;
    }

    public ApplicationLiveViewResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getApplicationLiveViews()
            .createOrUpdate(resourceGroupName, serviceName, applicationLiveViewName, this.innerModel(), Context.NONE);
        return this;
    }

    public ApplicationLiveViewResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApplicationLiveViews()
            .createOrUpdate(resourceGroupName, serviceName, applicationLiveViewName, this.innerModel(), context);
        return this;
    }

    ApplicationLiveViewResourceImpl(String name,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new ApplicationLiveViewResourceInner();
        this.serviceManager = serviceManager;
        this.applicationLiveViewName = name;
    }

    public ApplicationLiveViewResourceImpl update() {
        return this;
    }

    public ApplicationLiveViewResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getApplicationLiveViews()
            .createOrUpdate(resourceGroupName, serviceName, applicationLiveViewName, this.innerModel(), Context.NONE);
        return this;
    }

    public ApplicationLiveViewResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApplicationLiveViews()
            .createOrUpdate(resourceGroupName, serviceName, applicationLiveViewName, this.innerModel(), context);
        return this;
    }

    ApplicationLiveViewResourceImpl(ApplicationLiveViewResourceInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "Spring");
        this.applicationLiveViewName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "applicationLiveViews");
    }

    public ApplicationLiveViewResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getApplicationLiveViews()
            .getWithResponse(resourceGroupName, serviceName, applicationLiveViewName, Context.NONE)
            .getValue();
        return this;
    }

    public ApplicationLiveViewResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApplicationLiveViews()
            .getWithResponse(resourceGroupName, serviceName, applicationLiveViewName, context)
            .getValue();
        return this;
    }

    public ApplicationLiveViewResourceImpl withProperties(ApplicationLiveViewProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

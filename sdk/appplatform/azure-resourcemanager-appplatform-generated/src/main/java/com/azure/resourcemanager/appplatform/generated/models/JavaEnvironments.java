// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of JavaEnvironments. */
public interface JavaEnvironments {
    /**
     * Get all the Java Environments for a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments for a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaEnvironment> list();

    /**
     * Get all the Java Environments for a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments for a subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaEnvironment> list(Context context);

    /**
     * Get all the Java Environments in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaEnvironment> listByResourceGroup(String resourceGroupName);

    /**
     * Get all the Java Environments in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all the Java Environments in a resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaEnvironment> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get the properties of a Java Environment.
     *
     * <p>Get a Java Environment and its properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Java Environment and its properties along with {@link Response}.
     */
    Response<JavaEnvironment> getByResourceGroupWithResponse(
        String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Get the properties of a Java Environment.
     *
     * <p>Get a Java Environment and its properties.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Java Environment and its properties.
     */
    JavaEnvironment getByResourceGroup(String resourceGroupName, String javaEnvironmentName);

    /**
     * Delete a Java Environment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String javaEnvironmentName);

    /**
     * Delete a Java Environment.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Get an resource upload URL for the env, which may be artifacts or source archive.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an resource upload URL for the env, which may be artifacts or source archive along with {@link Response}.
     */
    Response<ResourceUploadDefinition> getResourceUploadUrlWithResponse(
        String resourceGroupName, String javaEnvironmentName, Context context);

    /**
     * Get an resource upload URL for the env, which may be artifacts or source archive.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an resource upload URL for the env, which may be artifacts or source archive.
     */
    ResourceUploadDefinition getResourceUploadUrl(String resourceGroupName, String javaEnvironmentName);

    /**
     * Get the properties of a Java Environment.
     *
     * <p>Get a Java Environment and its properties.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Java Environment and its properties along with {@link Response}.
     */
    JavaEnvironment getById(String id);

    /**
     * Get the properties of a Java Environment.
     *
     * <p>Get a Java Environment and its properties.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Java Environment and its properties along with {@link Response}.
     */
    Response<JavaEnvironment> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Java Environment.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Java Environment.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new JavaEnvironment resource.
     *
     * @param name resource name.
     * @return the first stage of the new JavaEnvironment definition.
     */
    JavaEnvironment.DefinitionStages.Blank define(String name);
}

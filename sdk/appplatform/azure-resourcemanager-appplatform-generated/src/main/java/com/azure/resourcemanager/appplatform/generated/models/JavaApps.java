// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.JavaAppInner;

/** Resource collection API of JavaApps. */
public interface JavaApps {
    /**
     * Get the JavaApps in a given subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the JavaApps in a given subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaApp> list();

    /**
     * Get the JavaApps in a given subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the JavaApps in a given subscription as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaApp> list(Context context);

    /**
     * Get the JavaApps in a given resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the JavaApps in a given resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaApp> listByResourceGroup(String resourceGroupName);

    /**
     * Get the JavaApps in a given resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the JavaApps in a given resource group as paginated response with {@link PagedIterable}.
     */
    PagedIterable<JavaApp> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get the properties of a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a JavaApp along with {@link Response}.
     */
    Response<JavaApp> getByResourceGroupWithResponse(String resourceGroupName, String appName, Context context);

    /**
     * Get the properties of a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the properties of a JavaApp.
     */
    JavaApp getByResourceGroup(String resourceGroupName, String appName);

    /**
     * Create or update a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param appEnvelope Properties used to create an app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps JavaApp resource.
     */
    JavaApp createOrUpdate(String resourceGroupName, String appName, JavaAppInner appEnvelope);

    /**
     * Create or update a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param appEnvelope Properties used to create an app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps JavaApp resource.
     */
    JavaApp createOrUpdate(String resourceGroupName, String appName, JavaAppInner appEnvelope, Context context);

    /**
     * Delete a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String appName);

    /**
     * Delete a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String appName, Context context);

    /**
     * Update properties of a JavaApp.
     *
     * <p>Patches an App using JSON Merge Patch.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param appEnvelope Properties used to create an app.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps JavaApp resource.
     */
    JavaApp update(String resourceGroupName, String appName, JavaAppForPatch appEnvelope);

    /**
     * Update properties of a JavaApp.
     *
     * <p>Patches an App using JSON Merge Patch.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param appEnvelope Properties used to create an app.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps JavaApp resource.
     */
    JavaApp update(String resourceGroupName, String appName, JavaAppForPatch appEnvelope, Context context);

    /**
     * List secrets for a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return app Secrets Collection ARM resource along with {@link Response}.
     */
    Response<SecretsCollection> listSecretsWithResponse(String resourceGroupName, String appName, Context context);

    /**
     * List secrets for a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return app Secrets Collection ARM resource.
     */
    SecretsCollection listSecrets(String resourceGroupName, String appName);

    /**
     * Start a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String appName);

    /**
     * Start a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void start(String resourceGroupName, String appName, Context context);

    /**
     * Stop a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(String resourceGroupName, String appName);

    /**
     * Stop a JavaApp.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param appName Name of the App.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(String resourceGroupName, String appName, Context context);
}

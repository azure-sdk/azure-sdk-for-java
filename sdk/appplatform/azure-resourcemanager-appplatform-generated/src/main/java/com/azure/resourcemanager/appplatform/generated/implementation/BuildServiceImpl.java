// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.BuildServiceInner;
import com.azure.resourcemanager.appplatform.generated.models.BuildService;
import com.azure.resourcemanager.appplatform.generated.models.BuildServiceProperties;
import com.azure.resourcemanager.appplatform.generated.models.ResourceUploadDefinition;

public final class BuildServiceImpl implements BuildService, BuildService.Definition, BuildService.Update {
    private BuildServiceInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public BuildServiceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public BuildServiceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String buildServiceName;

    public BuildServiceImpl withExistingSpring(String resourceGroupName, String serviceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        return this;
    }

    public BuildService create() {
        this.innerObject = serviceManager.serviceClient()
            .getBuildServices()
            .createOrUpdate(resourceGroupName, serviceName, buildServiceName, this.innerModel(), Context.NONE);
        return this;
    }

    public BuildService create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBuildServices()
            .createOrUpdate(resourceGroupName, serviceName, buildServiceName, this.innerModel(), context);
        return this;
    }

    BuildServiceImpl(String name, com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new BuildServiceInner();
        this.serviceManager = serviceManager;
        this.buildServiceName = name;
    }

    public BuildServiceImpl update() {
        return this;
    }

    public BuildService apply() {
        this.innerObject = serviceManager.serviceClient()
            .getBuildServices()
            .createOrUpdate(resourceGroupName, serviceName, buildServiceName, this.innerModel(), Context.NONE);
        return this;
    }

    public BuildService apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBuildServices()
            .createOrUpdate(resourceGroupName, serviceName, buildServiceName, this.innerModel(), context);
        return this;
    }

    BuildServiceImpl(BuildServiceInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "Spring");
        this.buildServiceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "buildServices");
    }

    public BuildService refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getBuildServices()
            .getBuildServiceWithResponse(resourceGroupName, serviceName, buildServiceName, Context.NONE)
            .getValue();
        return this;
    }

    public BuildService refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getBuildServices()
            .getBuildServiceWithResponse(resourceGroupName, serviceName, buildServiceName, context)
            .getValue();
        return this;
    }

    public Response<ResourceUploadDefinition> getResourceUploadUrlWithResponse(Context context) {
        return serviceManager.buildServices()
            .getResourceUploadUrlWithResponse(resourceGroupName, serviceName, buildServiceName, context);
    }

    public ResourceUploadDefinition getResourceUploadUrl() {
        return serviceManager.buildServices().getResourceUploadUrl(resourceGroupName, serviceName, buildServiceName);
    }

    public BuildServiceImpl withProperties(BuildServiceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.appplatform.generated.fluent.models.MiddlewareEurekaServerInner;

/**
 * An instance of this class provides access to all the operations defined in MiddlewareEurekaServersClient.
 */
public interface MiddlewareEurekaServersClient {
    /**
     * List the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Eureka Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MiddlewareEurekaServerInner> list(String resourceGroupName, String javaEnvironmentName);

    /**
     * List the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Spring Apps Eureka Server collection ARM resource as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MiddlewareEurekaServerInner> list(String resourceGroupName, String javaEnvironmentName,
        Context context);

    /**
     * Get the eureka server middleware settings.
     * 
     * Get the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the eureka server settings along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MiddlewareEurekaServerInner> getWithResponse(String resourceGroupName, String javaEnvironmentName,
        String eurekaServerName, Context context);

    /**
     * Get the eureka server middleware settings.
     * 
     * Get the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the eureka server settings.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareEurekaServerInner get(String resourceGroupName, String javaEnvironmentName, String eurekaServerName);

    /**
     * Create or update the eureka server settings.
     * 
     * The operation to create or update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareEurekaServerInner>, MiddlewareEurekaServerInner> beginCreateOrUpdate(
        String resourceGroupName, String javaEnvironmentName, String eurekaServerName,
        MiddlewareEurekaServerInner eurekaServerResource);

    /**
     * Create or update the eureka server settings.
     * 
     * The operation to create or update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareEurekaServerInner>, MiddlewareEurekaServerInner> beginCreateOrUpdate(
        String resourceGroupName, String javaEnvironmentName, String eurekaServerName,
        MiddlewareEurekaServerInner eurekaServerResource, Context context);

    /**
     * Create or update the eureka server settings.
     * 
     * The operation to create or update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareEurekaServerInner createOrUpdate(String resourceGroupName, String javaEnvironmentName,
        String eurekaServerName, MiddlewareEurekaServerInner eurekaServerResource);

    /**
     * Create or update the eureka server settings.
     * 
     * The operation to create or update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareEurekaServerInner createOrUpdate(String resourceGroupName, String javaEnvironmentName,
        String eurekaServerName, MiddlewareEurekaServerInner eurekaServerResource, Context context);

    /**
     * Update the eureka server settings.
     * 
     * The operation to update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareEurekaServerInner>, MiddlewareEurekaServerInner> beginUpdatePatch(
        String resourceGroupName, String javaEnvironmentName, String eurekaServerName,
        MiddlewareEurekaServerInner eurekaServerResource);

    /**
     * Update the eureka server settings.
     * 
     * The operation to update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MiddlewareEurekaServerInner>, MiddlewareEurekaServerInner> beginUpdatePatch(
        String resourceGroupName, String javaEnvironmentName, String eurekaServerName,
        MiddlewareEurekaServerInner eurekaServerResource, Context context);

    /**
     * Update the eureka server settings.
     * 
     * The operation to update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareEurekaServerInner updatePatch(String resourceGroupName, String javaEnvironmentName,
        String eurekaServerName, MiddlewareEurekaServerInner eurekaServerResource);

    /**
     * Update the eureka server settings.
     * 
     * The operation to update the eureka server settings.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param javaEnvironmentName Name of the Java Environment.
     * @param eurekaServerName Name of the Eureka Server.
     * @param eurekaServerResource Parameters for the update operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return eureka server resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MiddlewareEurekaServerInner updatePatch(String resourceGroupName, String javaEnvironmentName,
        String eurekaServerName, MiddlewareEurekaServerInner eurekaServerResource, Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.ContainerRegistryResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.ContainerRegistryProperties;
import com.azure.resourcemanager.appplatform.generated.models.ContainerRegistryResource;
import com.azure.resourcemanager.appplatform.generated.models.ContainerRegistryValidateResult;
import com.azure.resourcemanager.appplatform.generated.models.SystemDataAutoGenerated;

public final class ContainerRegistryResourceImpl
    implements ContainerRegistryResource, ContainerRegistryResource.Definition, ContainerRegistryResource.Update {
    private ContainerRegistryResourceInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ContainerRegistryProperties properties() {
        return this.innerModel().properties();
    }

    public SystemDataAutoGenerated systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ContainerRegistryResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String containerRegistryName;

    public ContainerRegistryResourceImpl withExistingSpring(String resourceGroupName, String serviceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        return this;
    }

    public ContainerRegistryResource create() {
        this.innerObject = serviceManager.serviceClient().getContainerRegistries().createOrUpdate(resourceGroupName,
            serviceName, containerRegistryName, this.innerModel(), Context.NONE);
        return this;
    }

    public ContainerRegistryResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getContainerRegistries().createOrUpdate(resourceGroupName,
            serviceName, containerRegistryName, this.innerModel(), context);
        return this;
    }

    ContainerRegistryResourceImpl(String name,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new ContainerRegistryResourceInner();
        this.serviceManager = serviceManager;
        this.containerRegistryName = name;
    }

    public ContainerRegistryResourceImpl update() {
        return this;
    }

    public ContainerRegistryResource apply() {
        this.innerObject = serviceManager.serviceClient().getContainerRegistries().createOrUpdate(resourceGroupName,
            serviceName, containerRegistryName, this.innerModel(), Context.NONE);
        return this;
    }

    public ContainerRegistryResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getContainerRegistries().createOrUpdate(resourceGroupName,
            serviceName, containerRegistryName, this.innerModel(), context);
        return this;
    }

    ContainerRegistryResourceImpl(ContainerRegistryResourceInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = Utils.getValueFromIdByName(innerObject.id(), "Spring");
        this.containerRegistryName = Utils.getValueFromIdByName(innerObject.id(), "containerRegistries");
    }

    public ContainerRegistryResource refresh() {
        this.innerObject = serviceManager.serviceClient().getContainerRegistries()
            .getWithResponse(resourceGroupName, serviceName, containerRegistryName, Context.NONE).getValue();
        return this;
    }

    public ContainerRegistryResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getContainerRegistries()
            .getWithResponse(resourceGroupName, serviceName, containerRegistryName, context).getValue();
        return this;
    }

    public ContainerRegistryValidateResult validate(ContainerRegistryProperties containerRegistryProperties) {
        return serviceManager.containerRegistries().validate(resourceGroupName, serviceName, containerRegistryName,
            containerRegistryProperties);
    }

    public ContainerRegistryValidateResult validate(ContainerRegistryProperties containerRegistryProperties,
        Context context) {
        return serviceManager.containerRegistries().validate(resourceGroupName, serviceName, containerRegistryName,
            containerRegistryProperties, context);
    }

    public ContainerRegistryResourceImpl withProperties(ContainerRegistryProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

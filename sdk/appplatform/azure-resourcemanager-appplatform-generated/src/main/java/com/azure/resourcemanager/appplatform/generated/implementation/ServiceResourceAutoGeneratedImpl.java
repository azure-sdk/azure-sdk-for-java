// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.ServiceResourceAutoGeneratedInner;
import com.azure.resourcemanager.appplatform.generated.fluent.models.ServiceResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.ClusterResourcePropertiesAutoGenerated;
import com.azure.resourcemanager.appplatform.generated.models.RegenerateTestKeyRequestPayload;
import com.azure.resourcemanager.appplatform.generated.models.ServiceResourceAutoGenerated;
import com.azure.resourcemanager.appplatform.generated.models.Sku;
import com.azure.resourcemanager.appplatform.generated.models.TestKeys;
import java.util.Collections;
import java.util.Map;

public final class ServiceResourceAutoGeneratedImpl
    implements ServiceResourceAutoGenerated,
        ServiceResourceAutoGenerated.Definition,
        ServiceResourceAutoGenerated.Update {
    private ServiceResourceAutoGeneratedInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ClusterResourcePropertiesAutoGenerated properties() {
        return this.innerModel().properties();
    }

    public Sku sku() {
        return this.innerModel().sku();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ServiceResourceAutoGeneratedInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private ServiceResourceInner createResource;

    private ServiceResourceInner updateResource;

    public ServiceResourceAutoGeneratedImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ServiceResourceAutoGenerated create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServices()
                .createOrUpdate(resourceGroupName, serviceName, createResource, Context.NONE);
        return this;
    }

    public ServiceResourceAutoGenerated create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServices()
                .createOrUpdate(resourceGroupName, serviceName, createResource, context);
        return this;
    }

    ServiceResourceAutoGeneratedImpl(
        String name, com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new ServiceResourceAutoGeneratedInner();
        this.serviceManager = serviceManager;
        this.serviceName = name;
        this.createResource = new ServiceResourceInner();
    }

    public ServiceResourceAutoGeneratedImpl update() {
        this.updateResource = new ServiceResourceInner();
        return this;
    }

    public ServiceResourceAutoGenerated apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServices()
                .update(resourceGroupName, serviceName, updateResource, Context.NONE);
        return this;
    }

    public ServiceResourceAutoGenerated apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServices()
                .update(resourceGroupName, serviceName, updateResource, context);
        return this;
    }

    ServiceResourceAutoGeneratedImpl(
        ServiceResourceAutoGeneratedInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = Utils.getValueFromIdByName(innerObject.id(), "Spring");
    }

    public ServiceResourceAutoGenerated refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServices()
                .getWithResponse(resourceGroupName, serviceName, Context.NONE)
                .getValue();
        return this;
    }

    public ServiceResourceAutoGenerated refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServices()
                .getWithResponse(resourceGroupName, serviceName, context)
                .getValue();
        return this;
    }

    public TestKeys listTestKeys() {
        return serviceManager.services().listTestKeys(resourceGroupName, serviceName);
    }

    public Response<TestKeys> listTestKeysWithResponse(Context context) {
        return serviceManager.services().listTestKeysWithResponse(resourceGroupName, serviceName, context);
    }

    public TestKeys regenerateTestKey(RegenerateTestKeyRequestPayload regenerateTestKeyRequest) {
        return serviceManager.services().regenerateTestKey(resourceGroupName, serviceName, regenerateTestKeyRequest);
    }

    public Response<TestKeys> regenerateTestKeyWithResponse(
        RegenerateTestKeyRequestPayload regenerateTestKeyRequest, Context context) {
        return serviceManager
            .services()
            .regenerateTestKeyWithResponse(resourceGroupName, serviceName, regenerateTestKeyRequest, context);
    }

    public void disableTestEndpoint() {
        serviceManager.services().disableTestEndpoint(resourceGroupName, serviceName);
    }

    public Response<Void> disableTestEndpointWithResponse(Context context) {
        return serviceManager.services().disableTestEndpointWithResponse(resourceGroupName, serviceName, context);
    }

    public TestKeys enableTestEndpoint() {
        return serviceManager.services().enableTestEndpoint(resourceGroupName, serviceName);
    }

    public Response<TestKeys> enableTestEndpointWithResponse(Context context) {
        return serviceManager.services().enableTestEndpointWithResponse(resourceGroupName, serviceName, context);
    }

    public TestKeys listTestKeys() {
        return serviceManager.services().listTestKeys(resourceGroupName, serviceName);
    }

    public Response<TestKeys> listTestKeysWithResponse(Context context) {
        return serviceManager.services().listTestKeysWithResponse(resourceGroupName, serviceName, context);
    }

    public TestKeys regenerateTestKey(RegenerateTestKeyRequestPayload regenerateTestKeyRequest) {
        return serviceManager.services().regenerateTestKey(resourceGroupName, serviceName, regenerateTestKeyRequest);
    }

    public Response<TestKeys> regenerateTestKeyWithResponse(
        RegenerateTestKeyRequestPayload regenerateTestKeyRequest, Context context) {
        return serviceManager
            .services()
            .regenerateTestKeyWithResponse(resourceGroupName, serviceName, regenerateTestKeyRequest, context);
    }

    public void disableTestEndpoint() {
        serviceManager.services().disableTestEndpoint(resourceGroupName, serviceName);
    }

    public Response<Void> disableTestEndpointWithResponse(Context context) {
        return serviceManager.services().disableTestEndpointWithResponse(resourceGroupName, serviceName, context);
    }

    public TestKeys enableTestEndpoint() {
        return serviceManager.services().enableTestEndpoint(resourceGroupName, serviceName);
    }

    public Response<TestKeys> enableTestEndpointWithResponse(Context context) {
        return serviceManager.services().enableTestEndpointWithResponse(resourceGroupName, serviceName, context);
    }

    public void stop() {
        serviceManager.services().stop(resourceGroupName, serviceName);
    }

    public void stop(Context context) {
        serviceManager.services().stop(resourceGroupName, serviceName, context);
    }

    public void start() {
        serviceManager.services().start(resourceGroupName, serviceName);
    }

    public void start(Context context) {
        serviceManager.services().start(resourceGroupName, serviceName, context);
    }

    public ServiceResourceAutoGeneratedImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ServiceResourceAutoGeneratedImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ServiceResourceAutoGeneratedImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.innerModel().withTags(tags);
            return this;
        }
    }

    public ServiceResourceAutoGeneratedImpl withProperties(ClusterResourcePropertiesAutoGenerated properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.innerModel().withProperties(properties);
            return this;
        }
    }

    public ServiceResourceAutoGeneratedImpl withSku(Sku sku) {
        if (isInCreateMode()) {
            this.innerModel().withSku(sku);
            return this;
        } else {
            this.innerModel().withSku(sku);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.appplatform.generated.models.JobExecutionProperties;
import com.azure.resourcemanager.appplatform.generated.models.JobExecutionRunningState;
import com.azure.resourcemanager.appplatform.generated.models.JobResourceProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Azure Spring Apps Job execution.
 */
@Fluent
public final class JobExecutionInner {
    /*
     * Job execution Name.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Current state of the job execution
     */
    @JsonProperty(value = "status")
    private JobExecutionRunningState status;

    /*
     * Job execution start time.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * Job execution end time.
     */
    @JsonProperty(value = "endTime")
    private OffsetDateTime endTime;

    /*
     * Job's execution properties.
     */
    @JsonProperty(value = "properties")
    private JobExecutionProperties properties;

    /*
     * The properties of job configuration
     */
    @JsonProperty(value = "jobSnapshot")
    private JobResourceProperties jobSnapshot;

    /**
     * Creates an instance of JobExecutionInner class.
     */
    public JobExecutionInner() {
    }

    /**
     * Get the name property: Job execution Name.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Job execution Name.
     * 
     * @param name the name value to set.
     * @return the JobExecutionInner object itself.
     */
    public JobExecutionInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the status property: Current state of the job execution.
     * 
     * @return the status value.
     */
    public JobExecutionRunningState status() {
        return this.status;
    }

    /**
     * Set the status property: Current state of the job execution.
     * 
     * @param status the status value to set.
     * @return the JobExecutionInner object itself.
     */
    public JobExecutionInner withStatus(JobExecutionRunningState status) {
        this.status = status;
        return this;
    }

    /**
     * Get the startTime property: Job execution start time.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: Job execution start time.
     * 
     * @param startTime the startTime value to set.
     * @return the JobExecutionInner object itself.
     */
    public JobExecutionInner withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: Job execution end time.
     * 
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: Job execution end time.
     * 
     * @param endTime the endTime value to set.
     * @return the JobExecutionInner object itself.
     */
    public JobExecutionInner withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the properties property: Job's execution properties.
     * 
     * @return the properties value.
     */
    public JobExecutionProperties properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Job's execution properties.
     * 
     * @param properties the properties value to set.
     * @return the JobExecutionInner object itself.
     */
    public JobExecutionInner withProperties(JobExecutionProperties properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the jobSnapshot property: The properties of job configuration.
     * 
     * @return the jobSnapshot value.
     */
    public JobResourceProperties jobSnapshot() {
        return this.jobSnapshot;
    }

    /**
     * Set the jobSnapshot property: The properties of job configuration.
     * 
     * @param jobSnapshot the jobSnapshot value to set.
     * @return the JobExecutionInner object itself.
     */
    public JobExecutionInner withJobSnapshot(JobResourceProperties jobSnapshot) {
        this.jobSnapshot = jobSnapshot;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (properties() != null) {
            properties().validate();
        }
        if (jobSnapshot() != null) {
            jobSnapshot().validate();
        }
    }
}

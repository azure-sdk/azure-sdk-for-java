// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.JobResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.EnvSecretsCollection;
import com.azure.resourcemanager.appplatform.generated.models.JobExecution;
import com.azure.resourcemanager.appplatform.generated.models.JobExecutionProperties;
import com.azure.resourcemanager.appplatform.generated.models.JobResource;
import com.azure.resourcemanager.appplatform.generated.models.JobResourceProperties;

public final class JobResourceImpl implements JobResource, JobResource.Definition, JobResource.Update {
    private JobResourceInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public JobResourceProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public JobResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String jobName;

    public JobResourceImpl withExistingSpring(String resourceGroupName, String serviceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        return this;
    }

    public JobResource create() {
        this.innerObject = serviceManager.serviceClient().getJobOperations().createOrUpdate(resourceGroupName,
            serviceName, jobName, this.innerModel(), Context.NONE);
        return this;
    }

    public JobResource create(Context context) {
        this.innerObject = serviceManager.serviceClient().getJobOperations().createOrUpdate(resourceGroupName,
            serviceName, jobName, this.innerModel(), context);
        return this;
    }

    JobResourceImpl(String name, com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new JobResourceInner();
        this.serviceManager = serviceManager;
        this.jobName = name;
    }

    public JobResourceImpl update() {
        return this;
    }

    public JobResource apply() {
        this.innerObject = serviceManager.serviceClient().getJobOperations().createOrUpdate(resourceGroupName,
            serviceName, jobName, this.innerModel(), Context.NONE);
        return this;
    }

    public JobResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getJobOperations().createOrUpdate(resourceGroupName,
            serviceName, jobName, this.innerModel(), context);
        return this;
    }

    JobResourceImpl(JobResourceInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "Spring");
        this.jobName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "jobs");
    }

    public JobResource refresh() {
        this.innerObject = serviceManager.serviceClient().getJobOperations()
            .getWithResponse(resourceGroupName, serviceName, jobName, Context.NONE).getValue();
        return this;
    }

    public JobResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getJobOperations()
            .getWithResponse(resourceGroupName, serviceName, jobName, context).getValue();
        return this;
    }

    public JobExecution start() {
        return serviceManager.jobOperations().start(resourceGroupName, serviceName, jobName);
    }

    public JobExecution start(JobExecutionProperties properties, Context context) {
        return serviceManager.jobOperations().start(resourceGroupName, serviceName, jobName, properties, context);
    }

    public Response<EnvSecretsCollection> listEnvSecretsWithResponse(Context context) {
        return serviceManager.jobOperations().listEnvSecretsWithResponse(resourceGroupName, serviceName, jobName,
            context);
    }

    public EnvSecretsCollection listEnvSecrets() {
        return serviceManager.jobOperations().listEnvSecrets(resourceGroupName, serviceName, jobName);
    }

    public JobResourceImpl withProperties(JobResourceProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

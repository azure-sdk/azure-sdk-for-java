// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.fluent.models.AppResourceAutoGeneratedInner;
import com.azure.resourcemanager.appplatform.generated.fluent.models.AppResourceInner;
import com.azure.resourcemanager.appplatform.generated.models.ActiveDeploymentCollection;
import com.azure.resourcemanager.appplatform.generated.models.AppResource;
import com.azure.resourcemanager.appplatform.generated.models.AppResourceAutoGenerated;
import com.azure.resourcemanager.appplatform.generated.models.AppResourcePropertiesAutoGenerated;
import com.azure.resourcemanager.appplatform.generated.models.CustomDomainValidatePayload;
import com.azure.resourcemanager.appplatform.generated.models.CustomDomainValidateResult;
import com.azure.resourcemanager.appplatform.generated.models.ManagedIdentityPropertiesAutoGenerated;
import com.azure.resourcemanager.appplatform.generated.models.ResourceUploadDefinition;

public final class AppResourceAutoGeneratedImpl
    implements AppResourceAutoGenerated, AppResourceAutoGenerated.Definition, AppResourceAutoGenerated.Update {
    private AppResourceAutoGeneratedInner innerObject;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public AppResourcePropertiesAutoGenerated properties() {
        return this.innerModel().properties();
    }

    public ManagedIdentityPropertiesAutoGenerated identity() {
        return this.innerModel().identity();
    }

    public String location() {
        return this.innerModel().location();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AppResourceAutoGeneratedInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String appName;

    private AppResourceInner createAppResource;

    private AppResourceInner updateAppResource;

    public AppResourceAutoGeneratedImpl withExistingSpring(String resourceGroupName, String serviceName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        return this;
    }

    public AppResourceAutoGenerated create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApps()
                .createOrUpdate(resourceGroupName, serviceName, appName, createAppResource, Context.NONE);
        return this;
    }

    public AppResourceAutoGenerated create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApps()
                .createOrUpdate(resourceGroupName, serviceName, appName, createAppResource, context);
        return this;
    }

    AppResourceAutoGeneratedImpl(
        String name, com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = new AppResourceAutoGeneratedInner();
        this.serviceManager = serviceManager;
        this.appName = name;
        this.createAppResource = new AppResourceInner();
    }

    public AppResourceAutoGeneratedImpl update() {
        this.updateAppResource = new AppResourceInner();
        return this;
    }

    public AppResourceAutoGenerated apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApps()
                .update(resourceGroupName, serviceName, appName, updateAppResource, Context.NONE);
        return this;
    }

    public AppResourceAutoGenerated apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApps()
                .update(resourceGroupName, serviceName, appName, updateAppResource, context);
        return this;
    }

    AppResourceAutoGeneratedImpl(
        AppResourceAutoGeneratedInner innerObject,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = Utils.getValueFromIdByName(innerObject.id(), "Spring");
        this.appName = Utils.getValueFromIdByName(innerObject.id(), "apps");
    }

    public AppResourceAutoGenerated refresh() {
        String localSyncStatus = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApps()
                .getWithResponse(resourceGroupName, serviceName, appName, localSyncStatus, Context.NONE)
                .getValue();
        return this;
    }

    public AppResourceAutoGenerated refresh(Context context) {
        String localSyncStatus = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApps()
                .getWithResponse(resourceGroupName, serviceName, appName, localSyncStatus, context)
                .getValue();
        return this;
    }

    public ResourceUploadDefinition getResourceUploadUrl() {
        return serviceManager.apps().getResourceUploadUrl(resourceGroupName, serviceName, appName);
    }

    public Response<ResourceUploadDefinition> getResourceUploadUrlWithResponse(Context context) {
        return serviceManager.apps().getResourceUploadUrlWithResponse(resourceGroupName, serviceName, appName, context);
    }

    public AppResource setActiveDeployments(ActiveDeploymentCollection activeDeploymentCollection) {
        return serviceManager
            .apps()
            .setActiveDeployments(resourceGroupName, serviceName, appName, activeDeploymentCollection);
    }

    public AppResource setActiveDeployments(ActiveDeploymentCollection activeDeploymentCollection, Context context) {
        return serviceManager
            .apps()
            .setActiveDeployments(resourceGroupName, serviceName, appName, activeDeploymentCollection, context);
    }

    public CustomDomainValidateResult validateDomain(CustomDomainValidatePayload validatePayload) {
        return serviceManager.apps().validateDomain(resourceGroupName, serviceName, appName, validatePayload);
    }

    public Response<CustomDomainValidateResult> validateDomainWithResponse(
        CustomDomainValidatePayload validatePayload, Context context) {
        return serviceManager
            .apps()
            .validateDomainWithResponse(resourceGroupName, serviceName, appName, validatePayload, context);
    }

    public ResourceUploadDefinition getResourceUploadUrl() {
        return serviceManager.apps().getResourceUploadUrl(resourceGroupName, serviceName, appName);
    }

    public Response<ResourceUploadDefinition> getResourceUploadUrlWithResponse(Context context) {
        return serviceManager.apps().getResourceUploadUrlWithResponse(resourceGroupName, serviceName, appName, context);
    }

    public AppResourceAutoGenerated setActiveDeployments(ActiveDeploymentCollection activeDeploymentCollection) {
        return serviceManager
            .apps()
            .setActiveDeployments(resourceGroupName, serviceName, appName, activeDeploymentCollection);
    }

    public AppResourceAutoGenerated setActiveDeployments(
        ActiveDeploymentCollection activeDeploymentCollection, Context context) {
        return serviceManager
            .apps()
            .setActiveDeployments(resourceGroupName, serviceName, appName, activeDeploymentCollection, context);
    }

    public CustomDomainValidateResult validateDomain(CustomDomainValidatePayload validatePayload) {
        return serviceManager.apps().validateDomain(resourceGroupName, serviceName, appName, validatePayload);
    }

    public Response<CustomDomainValidateResult> validateDomainWithResponse(
        CustomDomainValidatePayload validatePayload, Context context) {
        return serviceManager
            .apps()
            .validateDomainWithResponse(resourceGroupName, serviceName, appName, validatePayload, context);
    }

    public AppResourceAutoGeneratedImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AppResourceAutoGeneratedImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AppResourceAutoGeneratedImpl withProperties(AppResourcePropertiesAutoGenerated properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.innerModel().withProperties(properties);
            return this;
        }
    }

    public AppResourceAutoGeneratedImpl withIdentity(ManagedIdentityPropertiesAutoGenerated identity) {
        if (isInCreateMode()) {
            this.innerModel().withIdentity(identity);
            return this;
        } else {
            this.innerModel().withIdentity(identity);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

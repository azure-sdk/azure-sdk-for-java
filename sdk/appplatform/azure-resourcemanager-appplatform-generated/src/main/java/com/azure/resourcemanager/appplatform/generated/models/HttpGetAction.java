// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", defaultImpl = HttpGetAction.class, visible = true)
@JsonTypeName("HTTPGetAction")
@Fluent
public final class HttpGetAction extends ProbeAction {
    /*
     * The type of the action to take to perform the health check.
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private ProbeActionType type = ProbeActionType.HTTPGET_ACTION;

    /*
     * Path to access on the HTTP server.
     */
    @JsonProperty(value = "path")
    private String path;

    /*
     * Scheme to use for connecting to the host. Defaults to HTTP.
     * 
     * Possible enum values:
     *  - `"HTTP"` means that the scheme used will be http://
     *  - `"HTTPS"` means that the scheme used will be https://
     */
    @JsonProperty(value = "scheme")
    private HttpSchemeType scheme;

    /**
     * Creates an instance of HttpGetAction class.
     */
    public HttpGetAction() {
    }

    /**
     * Get the type property: The type of the action to take to perform the health check.
     * 
     * @return the type value.
     */
    @Override
    public ProbeActionType type() {
        return this.type;
    }

    /**
     * Get the path property: Path to access on the HTTP server.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: Path to access on the HTTP server.
     * 
     * @param path the path value to set.
     * @return the HttpGetAction object itself.
     */
    public HttpGetAction withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the scheme property: Scheme to use for connecting to the host. Defaults to HTTP.
     * 
     * Possible enum values:
     * - `"HTTP"` means that the scheme used will be http://
     * - `"HTTPS"` means that the scheme used will be https://.
     * 
     * @return the scheme value.
     */
    public HttpSchemeType scheme() {
        return this.scheme;
    }

    /**
     * Set the scheme property: Scheme to use for connecting to the host. Defaults to HTTP.
     * 
     * Possible enum values:
     * - `"HTTP"` means that the scheme used will be http://
     * - `"HTTPS"` means that the scheme used will be https://.
     * 
     * @param scheme the scheme value to set.
     * @return the HttpGetAction object itself.
     */
    public HttpGetAction withScheme(HttpSchemeType scheme) {
        this.scheme = scheme;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

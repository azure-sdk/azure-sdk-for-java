// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appplatform.generated.fluent.JobExecutionsClient;
import com.azure.resourcemanager.appplatform.generated.fluent.models.JobExecutionInner;
import com.azure.resourcemanager.appplatform.generated.models.JobExecution;
import com.azure.resourcemanager.appplatform.generated.models.JobExecutions;
import java.util.Collections;
import java.util.Map;

public final class JobExecutionsImpl implements JobExecutions {
    private static final ClientLogger LOGGER = new ClientLogger(JobExecutionsImpl.class);

    private final JobExecutionsClient innerClient;

    private final com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager;

    public JobExecutionsImpl(JobExecutionsClient innerClient,
        com.azure.resourcemanager.appplatform.generated.AppPlatformManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void cancel(String resourceGroupName, String serviceName, String jobName, String jobExecutionName) {
        this.serviceClient().cancel(resourceGroupName, serviceName, jobName, jobExecutionName);
    }

    public void cancel(String resourceGroupName, String serviceName, String jobName, String jobExecutionName,
        Context context) {
        this.serviceClient().cancel(resourceGroupName, serviceName, jobName, jobExecutionName, context);
    }

    public Response<JobExecution> getWithResponse(String resourceGroupName, String serviceName, String jobName,
        String jobExecutionName, Context context) {
        Response<JobExecutionInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, serviceName, jobName, jobExecutionName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new JobExecutionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public JobExecution get(String resourceGroupName, String serviceName, String jobName, String jobExecutionName) {
        JobExecutionInner inner = this.serviceClient().get(resourceGroupName, serviceName, jobName, jobExecutionName);
        if (inner != null) {
            return new JobExecutionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Map<String, String>> listEnvSecretsWithResponse(String resourceGroupName, String serviceName,
        String jobName, String jobExecutionName, Context context) {
        return this.serviceClient().listEnvSecretsWithResponse(resourceGroupName, serviceName, jobName,
            jobExecutionName, context);
    }

    public Map<String, String> listEnvSecrets(String resourceGroupName, String serviceName, String jobName,
        String jobExecutionName) {
        Map<String, String> inner
            = this.serviceClient().listEnvSecrets(resourceGroupName, serviceName, jobName, jobExecutionName);
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    private JobExecutionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager() {
        return this.serviceManager;
    }
}

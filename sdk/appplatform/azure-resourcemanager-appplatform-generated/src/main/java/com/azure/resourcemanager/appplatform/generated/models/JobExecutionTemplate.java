// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Job's execution template, containing configuration for an execution.
 */
@Fluent
public final class JobExecutionTemplate {
    /*
     * Environment variables of Job execution
     */
    @JsonProperty(value = "environmentVariables")
    private JobExecutionTemplateEnvironmentVariables environmentVariables;

    /*
     * Maximum number of seconds a replica is allowed to run.
     */
    @JsonProperty(value = "replicaTimeout")
    private Integer replicaTimeout;

    /*
     * Maximum number of retries before failing the job.
     */
    @JsonProperty(value = "replicaRetryLimit")
    private Integer replicaRetryLimit;

    /*
     * Minimum number of successful replica completions before overall job completion.
     */
    @JsonProperty(value = "replicaCompletionCount")
    private Integer replicaCompletionCount;

    /*
     * Number of parallel replicas of a job that can run at a given time.
     */
    @JsonProperty(value = "parallelism")
    private Integer parallelism;

    /*
     * Arguments for the Job executioin.
     */
    @JsonProperty(value = "args")
    private List<String> args;

    /**
     * Creates an instance of JobExecutionTemplate class.
     */
    public JobExecutionTemplate() {
    }

    /**
     * Get the environmentVariables property: Environment variables of Job execution.
     * 
     * @return the environmentVariables value.
     */
    public JobExecutionTemplateEnvironmentVariables environmentVariables() {
        return this.environmentVariables;
    }

    /**
     * Set the environmentVariables property: Environment variables of Job execution.
     * 
     * @param environmentVariables the environmentVariables value to set.
     * @return the JobExecutionTemplate object itself.
     */
    public JobExecutionTemplate
        withEnvironmentVariables(JobExecutionTemplateEnvironmentVariables environmentVariables) {
        this.environmentVariables = environmentVariables;
        return this;
    }

    /**
     * Get the replicaTimeout property: Maximum number of seconds a replica is allowed to run.
     * 
     * @return the replicaTimeout value.
     */
    public Integer replicaTimeout() {
        return this.replicaTimeout;
    }

    /**
     * Set the replicaTimeout property: Maximum number of seconds a replica is allowed to run.
     * 
     * @param replicaTimeout the replicaTimeout value to set.
     * @return the JobExecutionTemplate object itself.
     */
    public JobExecutionTemplate withReplicaTimeout(Integer replicaTimeout) {
        this.replicaTimeout = replicaTimeout;
        return this;
    }

    /**
     * Get the replicaRetryLimit property: Maximum number of retries before failing the job.
     * 
     * @return the replicaRetryLimit value.
     */
    public Integer replicaRetryLimit() {
        return this.replicaRetryLimit;
    }

    /**
     * Set the replicaRetryLimit property: Maximum number of retries before failing the job.
     * 
     * @param replicaRetryLimit the replicaRetryLimit value to set.
     * @return the JobExecutionTemplate object itself.
     */
    public JobExecutionTemplate withReplicaRetryLimit(Integer replicaRetryLimit) {
        this.replicaRetryLimit = replicaRetryLimit;
        return this;
    }

    /**
     * Get the replicaCompletionCount property: Minimum number of successful replica completions before overall job
     * completion.
     * 
     * @return the replicaCompletionCount value.
     */
    public Integer replicaCompletionCount() {
        return this.replicaCompletionCount;
    }

    /**
     * Set the replicaCompletionCount property: Minimum number of successful replica completions before overall job
     * completion.
     * 
     * @param replicaCompletionCount the replicaCompletionCount value to set.
     * @return the JobExecutionTemplate object itself.
     */
    public JobExecutionTemplate withReplicaCompletionCount(Integer replicaCompletionCount) {
        this.replicaCompletionCount = replicaCompletionCount;
        return this;
    }

    /**
     * Get the parallelism property: Number of parallel replicas of a job that can run at a given time.
     * 
     * @return the parallelism value.
     */
    public Integer parallelism() {
        return this.parallelism;
    }

    /**
     * Set the parallelism property: Number of parallel replicas of a job that can run at a given time.
     * 
     * @param parallelism the parallelism value to set.
     * @return the JobExecutionTemplate object itself.
     */
    public JobExecutionTemplate withParallelism(Integer parallelism) {
        this.parallelism = parallelism;
        return this;
    }

    /**
     * Get the args property: Arguments for the Job executioin.
     * 
     * @return the args value.
     */
    public List<String> args() {
        return this.args;
    }

    /**
     * Set the args property: Arguments for the Job executioin.
     * 
     * @param args the args value to set.
     * @return the JobExecutionTemplate object itself.
     */
    public JobExecutionTemplate withArgs(List<String> args) {
        this.args = args;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (environmentVariables() != null) {
            environmentVariables().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.analytics.purview.administration.generated;

import com.azure.analytics.purview.administration.DiscoveryClient;
import com.azure.analytics.purview.administration.DiscoveryClientBuilder;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.identity.DefaultAzureCredentialBuilder;

public class DiscoveryQueryFacet {
    public static void main(String[] args) {
        DiscoveryClient discoveryClient =
                new DiscoveryClientBuilder()
                        .credential(new DefaultAzureCredentialBuilder().build())
                        .endpoint("{Endpoint}")
                        .buildClient();
        // BEGIN:com.azure.analytics.purview.administration.generated.discoveryquery.discoveryqueryfacet
        BinaryData searchRequest =
                BinaryData.fromString(
                        "{\"facets\":[{\"count\":10,\"facet\":\"assetType\"},{\"count\":10,\"facet\":\"classification\"},{\"count\":10,\"facet\":\"term\"},{\"count\":10,\"facet\":\"label\"}],\"filter\":{\"and\":[{\"not\":{\"entityType\":\"AtlasGlossaryTerm\",\"includeSubTypes\":false}}]},\"keywords\":null,\"limit\":10,\"offset\":0}");
        RequestOptions requestOptions = new RequestOptions();
        requestOptions.addQueryParam("api-version", "2022-03-01-preview");
        Response<BinaryData> response = discoveryClient.queryWithResponse(searchRequest, requestOptions);
        // END:com.azure.analytics.purview.administration.generated.discoveryquery.discoveryqueryfacet
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemarketplace.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Icon files.
 */
@Fluent
public final class IconFileUris implements JsonSerializable<IconFileUris> {
    /*
     * uri of small icon
     */
    private String small;

    /*
     * uri of medium icon
     */
    private String medium;

    /*
     * uri of wide icon
     */
    private String wide;

    /*
     * uri of large icon
     */
    private String large;

    /**
     * Creates an instance of IconFileUris class.
     */
    public IconFileUris() {
    }

    /**
     * Get the small property: uri of small icon.
     * 
     * @return the small value.
     */
    public String small() {
        return this.small;
    }

    /**
     * Set the small property: uri of small icon.
     * 
     * @param small the small value to set.
     * @return the IconFileUris object itself.
     */
    public IconFileUris withSmall(String small) {
        this.small = small;
        return this;
    }

    /**
     * Get the medium property: uri of medium icon.
     * 
     * @return the medium value.
     */
    public String medium() {
        return this.medium;
    }

    /**
     * Set the medium property: uri of medium icon.
     * 
     * @param medium the medium value to set.
     * @return the IconFileUris object itself.
     */
    public IconFileUris withMedium(String medium) {
        this.medium = medium;
        return this;
    }

    /**
     * Get the wide property: uri of wide icon.
     * 
     * @return the wide value.
     */
    public String wide() {
        return this.wide;
    }

    /**
     * Set the wide property: uri of wide icon.
     * 
     * @param wide the wide value to set.
     * @return the IconFileUris object itself.
     */
    public IconFileUris withWide(String wide) {
        this.wide = wide;
        return this;
    }

    /**
     * Get the large property: uri of large icon.
     * 
     * @return the large value.
     */
    public String large() {
        return this.large;
    }

    /**
     * Set the large property: uri of large icon.
     * 
     * @param large the large value to set.
     * @return the IconFileUris object itself.
     */
    public IconFileUris withLarge(String large) {
        this.large = large;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("small", this.small);
        jsonWriter.writeStringField("medium", this.medium);
        jsonWriter.writeStringField("wide", this.wide);
        jsonWriter.writeStringField("large", this.large);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of IconFileUris from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of IconFileUris if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the IconFileUris.
     */
    public static IconFileUris fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            IconFileUris deserializedIconFileUris = new IconFileUris();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("small".equals(fieldName)) {
                    deserializedIconFileUris.small = reader.getString();
                } else if ("medium".equals(fieldName)) {
                    deserializedIconFileUris.medium = reader.getString();
                } else if ("wide".equals(fieldName)) {
                    deserializedIconFileUris.wide = reader.getString();
                } else if ("large".equals(fieldName)) {
                    deserializedIconFileUris.large = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedIconFileUris;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.premonition.generated;

import com.azure.resourcemanager.premonition.models.LibraryProperties;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for LibraryOperations Create.
 */
public final class LibraryOperationsCreateSamples {
    /*
     * x-ms-original-file:
     * specification/premonition/resource-manager/Microsoft.Premonition/preview/2024-09-01-preview/examples/
     * LibraryOperations_Create.json
     */
    /**
     * Sample code: LibraryOperations_Create.
     * 
     * @param manager Entry point to PremonitionManager.
     */
    public static void libraryOperationsCreate(com.azure.resourcemanager.premonition.PremonitionManager manager) {
        manager.libraryOperations()
            .define("fastlib")
            .withRegion("uswest2")
            .withExistingResourceGroup("default-rg")
            .withTags(mapOf())
            .withProperties(
                new LibraryProperties().withContainer("https://accountName.blob.core.windows.net/container"))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.premonition.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of SampleOperations.
 */
public interface SampleOperations {
    /**
     * List Sample resources by Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Sample list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Sample> listByParent(String resourceGroupName, String libraryName);

    /**
     * List Sample resources by Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Sample list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<Sample> listByParent(String resourceGroupName, String libraryName, Context context);

    /**
     * Get a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Sample along with {@link Response}.
     */
    Response<Sample> getWithResponse(String resourceGroupName, String libraryName, String sampleName, Context context);

    /**
     * Get a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Sample.
     */
    Sample get(String resourceGroupName, String libraryName, String sampleName);

    /**
     * Delete a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String libraryName, String sampleName, Context context);

    /**
     * Delete a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String libraryName, String sampleName);

    /**
     * Create a Metagenomics analysis of this sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return analysis of one or more samples.
     */
    Analysis identify(String resourceGroupName, String libraryName, String sampleName, IdentifyRequest body);

    /**
     * Create a Metagenomics analysis of this sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return analysis of one or more samples.
     */
    Analysis identify(String resourceGroupName, String libraryName, String sampleName, IdentifyRequest body,
        Context context);

    /**
     * Get a Sample.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Sample along with {@link Response}.
     */
    Sample getById(String id);

    /**
     * Get a Sample.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Sample along with {@link Response}.
     */
    Response<Sample> getByIdWithResponse(String id, Context context);

    /**
     * Delete a Sample.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a Sample.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Sample resource.
     * 
     * @param name resource name.
     * @return the first stage of the new Sample definition.
     */
    Sample.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.premonition.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.premonition.fluent.models.LibraryInner;
import com.azure.resourcemanager.premonition.models.LibraryUpdate;

/**
 * An instance of this class provides access to all the operations defined in LibraryOperationsClient.
 */
public interface LibraryOperationsClient {
    /**
     * List Library resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Library list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LibraryInner> list();

    /**
     * List Library resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Library list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LibraryInner> list(Context context);

    /**
     * List Library resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Library list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LibraryInner> listByResourceGroup(String resourceGroupName);

    /**
     * List Library resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Library list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LibraryInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Library along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LibraryInner> getByResourceGroupWithResponse(String resourceGroupName, String libraryName,
        Context context);

    /**
     * Get a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Library.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LibraryInner getByResourceGroup(String resourceGroupName, String libraryName);

    /**
     * Create a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of genomics samples and analyses along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LibraryInner> createWithResponse(String resourceGroupName, String libraryName, LibraryInner resource,
        Context context);

    /**
     * Create a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of genomics samples and analyses.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LibraryInner create(String resourceGroupName, String libraryName, LibraryInner resource);

    /**
     * Update a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of genomics samples and analyses along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LibraryInner> updateWithResponse(String resourceGroupName, String libraryName, LibraryUpdate properties,
        Context context);

    /**
     * Update a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a collection of genomics samples and analyses.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LibraryInner update(String resourceGroupName, String libraryName, LibraryUpdate properties);

    /**
     * Delete a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String libraryName, Context context);

    /**
     * Delete a Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String libraryName);
}

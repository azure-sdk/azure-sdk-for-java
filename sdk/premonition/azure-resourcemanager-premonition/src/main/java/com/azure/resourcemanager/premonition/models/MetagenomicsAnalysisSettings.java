// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.premonition.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Settings for a Metagenomics analysis.
 */
@Fluent
public final class MetagenomicsAnalysisSettings extends AnalysisSettings {
    /*
     * The type of the analysis
     */
    private AnalysisKind kind = AnalysisKind.METAGENOMICS;

    /*
     * The version of taxonomy database to use. Default is the latest version.
     */
    private TaxonomyVersion taxonomyVersion;

    /**
     * Creates an instance of MetagenomicsAnalysisSettings class.
     */
    public MetagenomicsAnalysisSettings() {
    }

    /**
     * Get the kind property: The type of the analysis.
     * 
     * @return the kind value.
     */
    @Override
    public AnalysisKind kind() {
        return this.kind;
    }

    /**
     * Get the taxonomyVersion property: The version of taxonomy database to use. Default is the latest version.
     * 
     * @return the taxonomyVersion value.
     */
    public TaxonomyVersion taxonomyVersion() {
        return this.taxonomyVersion;
    }

    /**
     * Set the taxonomyVersion property: The version of taxonomy database to use. Default is the latest version.
     * 
     * @param taxonomyVersion the taxonomyVersion value to set.
     * @return the MetagenomicsAnalysisSettings object itself.
     */
    public MetagenomicsAnalysisSettings withTaxonomyVersion(TaxonomyVersion taxonomyVersion) {
        this.taxonomyVersion = taxonomyVersion;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("kind", this.kind == null ? null : this.kind.toString());
        jsonWriter.writeStringField("taxonomyVersion",
            this.taxonomyVersion == null ? null : this.taxonomyVersion.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MetagenomicsAnalysisSettings from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MetagenomicsAnalysisSettings if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MetagenomicsAnalysisSettings.
     */
    public static MetagenomicsAnalysisSettings fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MetagenomicsAnalysisSettings deserializedMetagenomicsAnalysisSettings = new MetagenomicsAnalysisSettings();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kind".equals(fieldName)) {
                    deserializedMetagenomicsAnalysisSettings.kind = AnalysisKind.fromString(reader.getString());
                } else if ("taxonomyVersion".equals(fieldName)) {
                    deserializedMetagenomicsAnalysisSettings.taxonomyVersion
                        = TaxonomyVersion.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetagenomicsAnalysisSettings;
        });
    }
}

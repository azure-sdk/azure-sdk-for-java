// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.premonition.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.premonition.fluent.models.AnalysisInner;
import com.azure.resourcemanager.premonition.fluent.models.SampleInner;
import com.azure.resourcemanager.premonition.models.IdentifyRequest;
import com.azure.resourcemanager.premonition.models.SampleUpdate;

/**
 * An instance of this class provides access to all the operations defined in SampleOperationsClient.
 */
public interface SampleOperationsClient {
    /**
     * List Sample resources by Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Sample list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SampleInner> listByParent(String resourceGroupName, String libraryName);

    /**
     * List Sample resources by Library.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a Sample list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SampleInner> listByParent(String resourceGroupName, String libraryName, Context context);

    /**
     * Get a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Sample along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SampleInner> getWithResponse(String resourceGroupName, String libraryName, String sampleName,
        Context context);

    /**
     * Get a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Sample.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SampleInner get(String resourceGroupName, String libraryName, String sampleName);

    /**
     * Create a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return genetic sequence data from a biological sample along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SampleInner> createWithResponse(String resourceGroupName, String libraryName, String sampleName,
        SampleInner resource, Context context);

    /**
     * Create a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return genetic sequence data from a biological sample.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SampleInner create(String resourceGroupName, String libraryName, String sampleName, SampleInner resource);

    /**
     * Update a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return genetic sequence data from a biological sample along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SampleInner> updateWithResponse(String resourceGroupName, String libraryName, String sampleName,
        SampleUpdate properties, Context context);

    /**
     * Update a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return genetic sequence data from a biological sample.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SampleInner update(String resourceGroupName, String libraryName, String sampleName, SampleUpdate properties);

    /**
     * Delete a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String libraryName, String sampleName, Context context);

    /**
     * Delete a Sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String libraryName, String sampleName);

    /**
     * Create a Metagenomics analysis of this sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of analysis of one or more samples.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AnalysisInner>, AnalysisInner> beginIdentify(String resourceGroupName, String libraryName,
        String sampleName, IdentifyRequest body);

    /**
     * Create a Metagenomics analysis of this sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of analysis of one or more samples.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AnalysisInner>, AnalysisInner> beginIdentify(String resourceGroupName, String libraryName,
        String sampleName, IdentifyRequest body, Context context);

    /**
     * Create a Metagenomics analysis of this sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param body The content of the action request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return analysis of one or more samples.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalysisInner identify(String resourceGroupName, String libraryName, String sampleName, IdentifyRequest body);

    /**
     * Create a Metagenomics analysis of this sample.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param libraryName Name of the library.
     * @param sampleName Name of the sample.
     * @param body The content of the action request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return analysis of one or more samples.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AnalysisInner identify(String resourceGroupName, String libraryName, String sampleName, IdentifyRequest body,
        Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemicrosoftedgesites.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.edgemicrosoftedgesites.fluent.ListSitesClient;
import com.azure.resourcemanager.edgemicrosoftedgesites.fluent.models.SiteInner;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.ListSites;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.Site;

public final class ListSitesImpl implements ListSites {
    private static final ClientLogger LOGGER = new ClientLogger(ListSitesImpl.class);

    private final ListSitesClient innerClient;

    private final com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager;

    public ListSitesImpl(ListSitesClient innerClient,
        com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Site> list() {
        PagedIterable<SiteInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new SiteImpl(inner1, this.manager()));
    }

    public PagedIterable<Site> list(Context context) {
        PagedIterable<SiteInner> inner = this.serviceClient().list(context);
        return Utils.mapPage(inner, inner1 -> new SiteImpl(inner1, this.manager()));
    }

    public PagedIterable<Site> listByResourceGroup(String resourceGroupName) {
        PagedIterable<SiteInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return Utils.mapPage(inner, inner1 -> new SiteImpl(inner1, this.manager()));
    }

    public PagedIterable<Site> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<SiteInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return Utils.mapPage(inner, inner1 -> new SiteImpl(inner1, this.manager()));
    }

    private ListSitesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemicrosoftedgesites.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.edgemicrosoftedgesites.fluent.models.SiteInner;
import java.util.Map;
import java.util.UUID;

/**
 * An immutable client-side representation of Site.
 */
public interface Site {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the principalId property: The service principal ID of the system assigned identity. This property will only
     * be provided for a system assigned identity.
     * 
     * @return the principalId value.
     */
    UUID principalId();

    /**
     * Gets the tenantId property: The tenant ID of the system assigned identity. This property will only be provided
     * for a system assigned identity.
     * 
     * @return the tenantId value.
     */
    UUID tenantId();

    /**
     * Gets the typeIdentityType property: Type of managed service identity (where both SystemAssigned and UserAssigned
     * types are allowed).
     * 
     * @return the typeIdentityType value.
     */
    ManagedServiceIdentityType typeIdentityType();

    /**
     * Gets the userAssignedIdentities property: The set of user assigned identities associated with the resource. The
     * userAssignedIdentities dictionary keys will be ARM resource ids in the form:
     * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
     * The dictionary values can be empty objects ({}) in requests.
     * 
     * @return the userAssignedIdentities value.
     */
    Map<String, UserAssignedIdentity> userAssignedIdentities();

    /**
     * Gets the displayName property: Friendly name of site.
     * 
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: Description of site.
     * 
     * @return the description value.
     */
    String description();

    /**
     * Gets the addressResourceId property: AddressResourceId for site.
     * 
     * @return the addressResourceId value.
     */
    String addressResourceId();

    /**
     * Gets the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.edgemicrosoftedgesites.fluent.models.SiteInner object.
     * 
     * @return the inner object.
     */
    SiteInner innerModel();

    /**
     * The entirety of the Site definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The Site definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Site definition.
         */
        interface Blank extends WithResourceGroup {
        }

        /**
         * The stage of the Site definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the Site definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTypeIdentityType, DefinitionStages.WithUserAssignedIdentities,
            DefinitionStages.WithDisplayName, DefinitionStages.WithDescription, DefinitionStages.WithAddressResourceId {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Site create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Site create(Context context);
        }

        /**
         * The stage of the Site definition allowing to specify typeIdentityType.
         */
        interface WithTypeIdentityType {
            /**
             * Specifies the typeIdentityType property: Type of managed service identity (where both SystemAssigned and
             * UserAssigned types are allowed)..
             * 
             * @param typeIdentityType Type of managed service identity (where both SystemAssigned and UserAssigned
             * types are allowed).
             * @return the next definition stage.
             */
            WithCreate withTypeIdentityType(ManagedServiceIdentityType typeIdentityType);
        }

        /**
         * The stage of the Site definition allowing to specify userAssignedIdentities.
         */
        interface WithUserAssignedIdentities {
            /**
             * Specifies the userAssignedIdentities property: The set of user assigned identities associated with the
             * resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
             * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
             * The dictionary values can be empty objects ({}) in requests..
             * 
             * @param userAssignedIdentities The set of user assigned identities associated with the resource. The
             * userAssignedIdentities dictionary keys will be ARM resource ids in the form:
             * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
             * The dictionary values can be empty objects ({}) in requests.
             * @return the next definition stage.
             */
            WithCreate withUserAssignedIdentities(Map<String, UserAssignedIdentity> userAssignedIdentities);
        }

        /**
         * The stage of the Site definition allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: Friendly name of site.
             * 
             * @param displayName Friendly name of site.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }

        /**
         * The stage of the Site definition allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: Description of site.
             * 
             * @param description Description of site.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the Site definition allowing to specify addressResourceId.
         */
        interface WithAddressResourceId {
            /**
             * Specifies the addressResourceId property: AddressResourceId for site.
             * 
             * @param addressResourceId AddressResourceId for site.
             * @return the next definition stage.
             */
            WithCreate withAddressResourceId(String addressResourceId);
        }
    }

    /**
     * Begins update for the Site resource.
     * 
     * @return the stage of resource update.
     */
    Site.Update update();

    /**
     * The template for Site update.
     */
    interface Update extends UpdateStages.WithTypeIdentityType, UpdateStages.WithUserAssignedIdentities,
        UpdateStages.WithDisplayName, UpdateStages.WithDescription, UpdateStages.WithAddressResourceId {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        Site apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Site apply(Context context);
    }

    /**
     * The Site update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the Site update allowing to specify typeIdentityType.
         */
        interface WithTypeIdentityType {
            /**
             * Specifies the typeIdentityType property: Type of managed service identity (where both SystemAssigned and
             * UserAssigned types are allowed)..
             * 
             * @param typeIdentityType Type of managed service identity (where both SystemAssigned and UserAssigned
             * types are allowed).
             * @return the next definition stage.
             */
            Update withTypeIdentityType(ManagedServiceIdentityType typeIdentityType);
        }

        /**
         * The stage of the Site update allowing to specify userAssignedIdentities.
         */
        interface WithUserAssignedIdentities {
            /**
             * Specifies the userAssignedIdentities property: The set of user assigned identities associated with the
             * resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
             * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
             * The dictionary values can be empty objects ({}) in requests..
             * 
             * @param userAssignedIdentities The set of user assigned identities associated with the resource. The
             * userAssignedIdentities dictionary keys will be ARM resource ids in the form:
             * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
             * The dictionary values can be empty objects ({}) in requests.
             * @return the next definition stage.
             */
            Update withUserAssignedIdentities(Map<String, UserAssignedIdentity> userAssignedIdentities);
        }

        /**
         * The stage of the Site update allowing to specify displayName.
         */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: Friendly name of site.
             * 
             * @param displayName Friendly name of site.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }

        /**
         * The stage of the Site update allowing to specify description.
         */
        interface WithDescription {
            /**
             * Specifies the description property: Description of site.
             * 
             * @param description Description of site.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the Site update allowing to specify addressResourceId.
         */
        interface WithAddressResourceId {
            /**
             * Specifies the addressResourceId property: AddressResourceId for site.
             * 
             * @param addressResourceId AddressResourceId for site.
             * @return the next definition stage.
             */
            Update withAddressResourceId(String addressResourceId);
        }
    }
}

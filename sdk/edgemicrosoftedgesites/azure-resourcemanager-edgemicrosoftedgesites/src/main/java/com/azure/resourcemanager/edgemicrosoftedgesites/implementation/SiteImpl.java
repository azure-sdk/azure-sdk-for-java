// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemicrosoftedgesites.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.edgemicrosoftedgesites.fluent.models.SiteInner;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.Site;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.SiteProperties;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.SiteUpdate;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.SiteUpdateProperties;

public final class SiteImpl implements Site, Site.Definition, Site.Update {
    private SiteInner innerObject;

    private final com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SiteProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public SiteInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager manager() {
        return this.serviceManager;
    }

    private String siteName;

    private SiteUpdate updateProperties;

    public Site create() {
        this.innerObject = serviceManager.serviceClient()
            .getSitesBySubscriptions()
            .createOrUpdate(siteName, this.innerModel(), Context.NONE);
        return this;
    }

    public Site create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSitesBySubscriptions()
            .createOrUpdate(siteName, this.innerModel(), context);
        return this;
    }

    SiteImpl(String name,
        com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager) {
        this.innerObject = new SiteInner();
        this.serviceManager = serviceManager;
        this.siteName = name;
    }

    public SiteImpl update() {
        this.updateProperties = new SiteUpdate();
        return this;
    }

    public Site apply() {
        this.innerObject = serviceManager.serviceClient()
            .getSitesBySubscriptions()
            .updateWithResponse(siteName, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public Site apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getSitesBySubscriptions()
            .updateWithResponse(siteName, updateProperties, context)
            .getValue();
        return this;
    }

    SiteImpl(SiteInner innerObject,
        com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.siteName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "sites");
    }

    public Site refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getSitesBySubscriptions()
            .getWithResponse(siteName, Context.NONE)
            .getValue();
        return this;
    }

    public Site refresh(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getSitesBySubscriptions().getWithResponse(siteName, context).getValue();
        return this;
    }

    public SiteImpl withProperties(SiteProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public SiteImpl withProperties(SiteUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }
}

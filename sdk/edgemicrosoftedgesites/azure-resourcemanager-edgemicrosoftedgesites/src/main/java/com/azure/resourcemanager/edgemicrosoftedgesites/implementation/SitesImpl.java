// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.edgemicrosoftedgesites.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.edgemicrosoftedgesites.fluent.SitesClient;
import com.azure.resourcemanager.edgemicrosoftedgesites.fluent.models.SiteInner;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.Site;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.SiteUpdate;
import com.azure.resourcemanager.edgemicrosoftedgesites.models.Sites;

public final class SitesImpl implements Sites {
    private static final ClientLogger LOGGER = new ClientLogger(SitesImpl.class);

    private final SitesClient innerClient;

    private final com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager;

    public SitesImpl(SitesClient innerClient,
        com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Site> listByResourceGroup(String resourceGroupName) {
        PagedIterable<SiteInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SiteImpl(inner1, this.manager()));
    }

    public PagedIterable<Site> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<SiteInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new SiteImpl(inner1, this.manager()));
    }

    public Response<Site> getByResourceGroupWithResponse(String resourceGroupName, String siteName, Context context) {
        Response<SiteInner> inner
            = this.serviceClient().getByResourceGroupWithResponse(resourceGroupName, siteName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SiteImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Site getByResourceGroup(String resourceGroupName, String siteName) {
        SiteInner inner = this.serviceClient().getByResourceGroup(resourceGroupName, siteName);
        if (inner != null) {
            return new SiteImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Site createOrUpdate(String resourceGroupName, String siteName, SiteInner resource) {
        SiteInner inner = this.serviceClient().createOrUpdate(resourceGroupName, siteName, resource);
        if (inner != null) {
            return new SiteImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Site createOrUpdate(String resourceGroupName, String siteName, SiteInner resource, Context context) {
        SiteInner inner = this.serviceClient().createOrUpdate(resourceGroupName, siteName, resource, context);
        if (inner != null) {
            return new SiteImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Site> updateWithResponse(String resourceGroupName, String siteName, SiteUpdate properties,
        Context context) {
        Response<SiteInner> inner
            = this.serviceClient().updateWithResponse(resourceGroupName, siteName, properties, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SiteImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Site update(String resourceGroupName, String siteName, SiteUpdate properties) {
        SiteInner inner = this.serviceClient().update(resourceGroupName, siteName, properties);
        if (inner != null) {
            return new SiteImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByResourceGroupWithResponse(String resourceGroupName, String siteName,
        Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, siteName, context);
    }

    public void deleteByResourceGroup(String resourceGroupName, String siteName) {
        this.serviceClient().delete(resourceGroupName, siteName);
    }

    private SitesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.edgemicrosoftedgesites.EdgemicrosoftedgesitesManager manager() {
        return this.serviceManager;
    }
}

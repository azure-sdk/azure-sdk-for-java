// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.monitor.generated.fluent.models.TenantActionGroupResourceInner;
import com.azure.resourcemanager.monitor.generated.models.ActionGroupPatchBodyAutoGenerated;

/** An instance of this class provides access to all the operations defined in TenantActionGroupsClient. */
public interface TenantActionGroupsClient {
    /**
     * Create a new tenant action group or update an existing one.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param actionGroup The tenant action group to create or use for the update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tenant action group resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TenantActionGroupResourceInner> createOrUpdateWithResponse(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        TenantActionGroupResourceInner actionGroup,
        Context context);

    /**
     * Create a new tenant action group or update an existing one.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param actionGroup The tenant action group to create or use for the update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tenant action group resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TenantActionGroupResourceInner createOrUpdate(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        TenantActionGroupResourceInner actionGroup);

    /**
     * Get a tenant action group.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tenant action group along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TenantActionGroupResourceInner> getWithResponse(
        String managementGroupId, String tenantActionGroupName, String xMsClientTenantId, Context context);

    /**
     * Get a tenant action group.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tenant action group.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TenantActionGroupResourceInner get(
        String managementGroupId, String tenantActionGroupName, String xMsClientTenantId);

    /**
     * Delete a tenant action group.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String managementGroupId, String tenantActionGroupName, String xMsClientTenantId, Context context);

    /**
     * Delete a tenant action group.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String managementGroupId, String tenantActionGroupName, String xMsClientTenantId);

    /**
     * Updates an existing tenant action group's tags. To update other fields use the CreateOrUpdate method.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param tenantActionGroupPatch Parameters supplied to the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tenant action group resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<TenantActionGroupResourceInner> updateWithResponse(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        ActionGroupPatchBodyAutoGenerated tenantActionGroupPatch,
        Context context);

    /**
     * Updates an existing tenant action group's tags. To update other fields use the CreateOrUpdate method.
     *
     * @param managementGroupId The management group id.
     * @param tenantActionGroupName The name of the action group.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param tenantActionGroupPatch Parameters supplied to the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a tenant action group resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    TenantActionGroupResourceInner update(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        ActionGroupPatchBodyAutoGenerated tenantActionGroupPatch);

    /**
     * Get a list of all tenant action groups in a management group.
     *
     * @param managementGroupId The management group id.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all tenant action groups in a management group as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TenantActionGroupResourceInner> listByManagementGroupId(
        String managementGroupId, String xMsClientTenantId);

    /**
     * Get a list of all tenant action groups in a management group.
     *
     * @param managementGroupId The management group id.
     * @param xMsClientTenantId The tenant ID of the client making the request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all tenant action groups in a management group as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<TenantActionGroupResourceInner> listByManagementGroupId(
        String managementGroupId, String xMsClientTenantId, Context context);
}

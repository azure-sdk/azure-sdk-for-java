// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Monitoring account destination.
 */
@Fluent
public final class MonitoringAccountDestination implements JsonSerializable<MonitoringAccountDestination> {
    /*
     * The resource ID of the monitoring account.
     */
    private String accountResourceId;

    /*
     * The immutable ID of the account.
     */
    private String accountId;

    /*
     * A friendly name for the destination.
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     */
    private String name;

    /**
     * Creates an instance of MonitoringAccountDestination class.
     */
    public MonitoringAccountDestination() {
    }

    /**
     * Get the accountResourceId property: The resource ID of the monitoring account.
     * 
     * @return the accountResourceId value.
     */
    public String accountResourceId() {
        return this.accountResourceId;
    }

    /**
     * Set the accountResourceId property: The resource ID of the monitoring account.
     * 
     * @param accountResourceId the accountResourceId value to set.
     * @return the MonitoringAccountDestination object itself.
     */
    public MonitoringAccountDestination withAccountResourceId(String accountResourceId) {
        this.accountResourceId = accountResourceId;
        return this;
    }

    /**
     * Get the accountId property: The immutable ID of the account.
     * 
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Get the name property: A friendly name for the destination.
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: A friendly name for the destination.
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     * 
     * @param name the name value to set.
     * @return the MonitoringAccountDestination object itself.
     */
    public MonitoringAccountDestination withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("accountResourceId", this.accountResourceId);
        jsonWriter.writeStringField("name", this.name);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MonitoringAccountDestination from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MonitoringAccountDestination if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MonitoringAccountDestination.
     */
    public static MonitoringAccountDestination fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MonitoringAccountDestination deserializedMonitoringAccountDestination = new MonitoringAccountDestination();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("accountResourceId".equals(fieldName)) {
                    deserializedMonitoringAccountDestination.accountResourceId = reader.getString();
                } else if ("accountId".equals(fieldName)) {
                    deserializedMonitoringAccountDestination.accountId = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedMonitoringAccountDestination.name = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMonitoringAccountDestination;
        });
    }
}

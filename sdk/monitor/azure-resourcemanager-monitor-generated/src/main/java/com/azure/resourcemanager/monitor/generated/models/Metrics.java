// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Properties related to the metrics container in the Azure Monitor Workspace.
 */
@Immutable
public class Metrics implements JsonSerializable<Metrics> {
    /*
     * The Prometheus query endpoint for the Azure Monitor Workspace
     */
    private String prometheusQueryEndpoint;

    /*
     * An internal identifier for the metrics container. Only to be used by the system
     */
    private String internalId;

    /**
     * Creates an instance of Metrics class.
     */
    public Metrics() {
    }

    /**
     * Get the prometheusQueryEndpoint property: The Prometheus query endpoint for the Azure Monitor Workspace.
     * 
     * @return the prometheusQueryEndpoint value.
     */
    public String prometheusQueryEndpoint() {
        return this.prometheusQueryEndpoint;
    }

    /**
     * Set the prometheusQueryEndpoint property: The Prometheus query endpoint for the Azure Monitor Workspace.
     * 
     * @param prometheusQueryEndpoint the prometheusQueryEndpoint value to set.
     * @return the Metrics object itself.
     */
    Metrics withPrometheusQueryEndpoint(String prometheusQueryEndpoint) {
        this.prometheusQueryEndpoint = prometheusQueryEndpoint;
        return this;
    }

    /**
     * Get the internalId property: An internal identifier for the metrics container. Only to be used by the system.
     * 
     * @return the internalId value.
     */
    public String internalId() {
        return this.internalId;
    }

    /**
     * Set the internalId property: An internal identifier for the metrics container. Only to be used by the system.
     * 
     * @param internalId the internalId value to set.
     * @return the Metrics object itself.
     */
    Metrics withInternalId(String internalId) {
        this.internalId = internalId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Metrics from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Metrics if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Metrics.
     */
    public static Metrics fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Metrics deserializedMetrics = new Metrics();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("prometheusQueryEndpoint".equals(fieldName)) {
                    deserializedMetrics.prometheusQueryEndpoint = reader.getString();
                } else if ("internalId".equals(fieldName)) {
                    deserializedMetrics.internalId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMetrics;
        });
    }
}

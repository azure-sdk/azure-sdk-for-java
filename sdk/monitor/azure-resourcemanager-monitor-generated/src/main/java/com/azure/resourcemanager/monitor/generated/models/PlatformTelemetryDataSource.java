// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Definition of platform telemetry data source configuration.
 */
@Fluent
public final class PlatformTelemetryDataSource {
    /*
     * List of platform telemetry streams to collect
     */
    @JsonProperty(value = "streams", required = true)
    private List<String> streams;

    /*
     * A friendly name for the data source.
     * This name should be unique across all data sources (regardless of type) within the data collection rule.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of PlatformTelemetryDataSource class.
     */
    public PlatformTelemetryDataSource() {
    }

    /**
     * Get the streams property: List of platform telemetry streams to collect.
     * 
     * @return the streams value.
     */
    public List<String> streams() {
        return this.streams;
    }

    /**
     * Set the streams property: List of platform telemetry streams to collect.
     * 
     * @param streams the streams value to set.
     * @return the PlatformTelemetryDataSource object itself.
     */
    public PlatformTelemetryDataSource withStreams(List<String> streams) {
        this.streams = streams;
        return this;
    }

    /**
     * Get the name property: A friendly name for the data source.
     * This name should be unique across all data sources (regardless of type) within the data collection rule.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: A friendly name for the data source.
     * This name should be unique across all data sources (regardless of type) within the data collection rule.
     * 
     * @param name the name value to set.
     * @return the PlatformTelemetryDataSource object itself.
     */
    public PlatformTelemetryDataSource withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (streams() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property streams in model PlatformTelemetryDataSource"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PlatformTelemetryDataSource.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Azure Data Explorer (Adx) destination.
 */
@Fluent
public final class AdxDestination {
    /*
     * The ARM resource id of the Adx resource.
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * The name of the database to which data will be ingested.
     */
    @JsonProperty(value = "databaseName")
    private String databaseName;

    /*
     * The ingestion uri of the Adx resource.
     */
    @JsonProperty(value = "ingestionUri", access = JsonProperty.Access.WRITE_ONLY)
    private String ingestionUri;

    /*
     * A friendly name for the destination. 
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of AdxDestination class.
     */
    public AdxDestination() {
    }

    /**
     * Get the resourceId property: The ARM resource id of the Adx resource.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The ARM resource id of the Adx resource.
     * 
     * @param resourceId the resourceId value to set.
     * @return the AdxDestination object itself.
     */
    public AdxDestination withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the databaseName property: The name of the database to which data will be ingested.
     * 
     * @return the databaseName value.
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Set the databaseName property: The name of the database to which data will be ingested.
     * 
     * @param databaseName the databaseName value to set.
     * @return the AdxDestination object itself.
     */
    public AdxDestination withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }

    /**
     * Get the ingestionUri property: The ingestion uri of the Adx resource.
     * 
     * @return the ingestionUri value.
     */
    public String ingestionUri() {
        return this.ingestionUri;
    }

    /**
     * Get the name property: A friendly name for the destination.
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: A friendly name for the destination.
     * This name should be unique across all destinations (regardless of type) within the data collection rule.
     * 
     * @param name the name value to set.
     * @return the AdxDestination object itself.
     */
    public AdxDestination withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

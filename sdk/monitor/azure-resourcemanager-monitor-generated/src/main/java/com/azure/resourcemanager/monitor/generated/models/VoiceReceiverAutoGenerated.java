// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A voice receiver.
 */
@Fluent
public final class VoiceReceiverAutoGenerated implements JsonSerializable<VoiceReceiverAutoGenerated> {
    /*
     * The name of the voice receiver. Names must be unique across all receivers within a tenant action group.
     */
    private String name;

    /*
     * The country code of the voice receiver.
     */
    private String countryCode;

    /*
     * The phone number of the voice receiver.
     */
    private String phoneNumber;

    /**
     * Creates an instance of VoiceReceiverAutoGenerated class.
     */
    public VoiceReceiverAutoGenerated() {
    }

    /**
     * Get the name property: The name of the voice receiver. Names must be unique across all receivers within a tenant
     * action group.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the voice receiver. Names must be unique across all receivers within a tenant
     * action group.
     * 
     * @param name the name value to set.
     * @return the VoiceReceiverAutoGenerated object itself.
     */
    public VoiceReceiverAutoGenerated withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the countryCode property: The country code of the voice receiver.
     * 
     * @return the countryCode value.
     */
    public String countryCode() {
        return this.countryCode;
    }

    /**
     * Set the countryCode property: The country code of the voice receiver.
     * 
     * @param countryCode the countryCode value to set.
     * @return the VoiceReceiverAutoGenerated object itself.
     */
    public VoiceReceiverAutoGenerated withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }

    /**
     * Get the phoneNumber property: The phone number of the voice receiver.
     * 
     * @return the phoneNumber value.
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Set the phoneNumber property: The phone number of the voice receiver.
     * 
     * @param phoneNumber the phoneNumber value to set.
     * @return the VoiceReceiverAutoGenerated object itself.
     */
    public VoiceReceiverAutoGenerated withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property name in model VoiceReceiverAutoGenerated"));
        }
        if (countryCode() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property countryCode in model VoiceReceiverAutoGenerated"));
        }
        if (phoneNumber() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property phoneNumber in model VoiceReceiverAutoGenerated"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(VoiceReceiverAutoGenerated.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("countryCode", this.countryCode);
        jsonWriter.writeStringField("phoneNumber", this.phoneNumber);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VoiceReceiverAutoGenerated from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VoiceReceiverAutoGenerated if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the VoiceReceiverAutoGenerated.
     */
    public static VoiceReceiverAutoGenerated fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VoiceReceiverAutoGenerated deserializedVoiceReceiverAutoGenerated = new VoiceReceiverAutoGenerated();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedVoiceReceiverAutoGenerated.name = reader.getString();
                } else if ("countryCode".equals(fieldName)) {
                    deserializedVoiceReceiverAutoGenerated.countryCode = reader.getString();
                } else if ("phoneNumber".equals(fieldName)) {
                    deserializedVoiceReceiverAutoGenerated.phoneNumber = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVoiceReceiverAutoGenerated;
        });
    }
}

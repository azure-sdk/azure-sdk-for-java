// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Type of operation: get, read, delete, etc.
 */
@Fluent
public final class DimensionProperties {
    /*
     * Name of dimension.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Display name of dimension.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Legacy usage, should not set.
     */
    @JsonProperty(value = "toBeExportedForShoebox")
    private Boolean toBeExportedForShoebox;

    /*
     * When set, the dimension is hidden from the customer, used in conjunction with the defaultDimensionValues field
     * below
     */
    @JsonProperty(value = "isHidden")
    private Boolean isHidden;

    /*
     * Default dimension value to be sent down for the hidden dimension during query
     */
    @JsonProperty(value = "defaultDimensionValues")
    private Object defaultDimensionValues;

    /**
     * Creates an instance of DimensionProperties class.
     */
    public DimensionProperties() {
    }

    /**
     * Get the name property: Name of dimension.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of dimension.
     * 
     * @param name the name value to set.
     * @return the DimensionProperties object itself.
     */
    public DimensionProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the displayName property: Display name of dimension.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of dimension.
     * 
     * @param displayName the displayName value to set.
     * @return the DimensionProperties object itself.
     */
    public DimensionProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the toBeExportedForShoebox property: Legacy usage, should not set.
     * 
     * @return the toBeExportedForShoebox value.
     */
    public Boolean toBeExportedForShoebox() {
        return this.toBeExportedForShoebox;
    }

    /**
     * Set the toBeExportedForShoebox property: Legacy usage, should not set.
     * 
     * @param toBeExportedForShoebox the toBeExportedForShoebox value to set.
     * @return the DimensionProperties object itself.
     */
    public DimensionProperties withToBeExportedForShoebox(Boolean toBeExportedForShoebox) {
        this.toBeExportedForShoebox = toBeExportedForShoebox;
        return this;
    }

    /**
     * Get the isHidden property: When set, the dimension is hidden from the customer, used in conjunction with the
     * defaultDimensionValues field below.
     * 
     * @return the isHidden value.
     */
    public Boolean isHidden() {
        return this.isHidden;
    }

    /**
     * Set the isHidden property: When set, the dimension is hidden from the customer, used in conjunction with the
     * defaultDimensionValues field below.
     * 
     * @param isHidden the isHidden value to set.
     * @return the DimensionProperties object itself.
     */
    public DimensionProperties withIsHidden(Boolean isHidden) {
        this.isHidden = isHidden;
        return this;
    }

    /**
     * Get the defaultDimensionValues property: Default dimension value to be sent down for the hidden dimension during
     * query.
     * 
     * @return the defaultDimensionValues value.
     */
    public Object defaultDimensionValues() {
        return this.defaultDimensionValues;
    }

    /**
     * Set the defaultDimensionValues property: Default dimension value to be sent down for the hidden dimension during
     * query.
     * 
     * @param defaultDimensionValues the defaultDimensionValues value to set.
     * @return the DimensionProperties object itself.
     */
    public DimensionProperties withDefaultDimensionValues(Object defaultDimensionValues) {
        this.defaultDimensionValues = defaultDimensionValues;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

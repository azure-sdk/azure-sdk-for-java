// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import java.util.List;

/**
 * The specification of destinations.
 */
@Fluent
public final class DataCollectionRuleDestinations extends DestinationsSpec {
    /**
     * Creates an instance of DataCollectionRuleDestinations class.
     */
    public DataCollectionRuleDestinations() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withLogAnalytics(List<LogAnalyticsDestination> logAnalytics) {
        super.withLogAnalytics(logAnalytics);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations
        withMonitoringAccounts(List<MonitoringAccountDestination> monitoringAccounts) {
        super.withMonitoringAccounts(monitoringAccounts);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations
        withAzureMonitorMetrics(DestinationsSpecAzureMonitorMetrics azureMonitorMetrics) {
        super.withAzureMonitorMetrics(azureMonitorMetrics);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withEventHubs(List<EventHubDestination> eventHubs) {
        super.withEventHubs(eventHubs);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withEventHubsDirect(List<EventHubDirectDestination> eventHubsDirect) {
        super.withEventHubsDirect(eventHubsDirect);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withStorageBlobsDirect(List<StorageBlobDestination> storageBlobsDirect) {
        super.withStorageBlobsDirect(storageBlobsDirect);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withStorageTablesDirect(List<StorageTableDestination> storageTablesDirect) {
        super.withStorageTablesDirect(storageTablesDirect);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withStorageAccounts(List<StorageBlobDestination> storageAccounts) {
        super.withStorageAccounts(storageAccounts);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withMicrosoftFabric(List<MicrosoftFabricDestination> microsoftFabric) {
        super.withMicrosoftFabric(microsoftFabric);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataCollectionRuleDestinations withAzureDataExplorer(List<AdxDestination> azureDataExplorer) {
        super.withAzureDataExplorer(azureDataExplorer);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

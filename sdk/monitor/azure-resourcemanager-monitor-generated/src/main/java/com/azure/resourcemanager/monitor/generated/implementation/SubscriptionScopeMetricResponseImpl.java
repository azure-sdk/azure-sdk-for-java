// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.resourcemanager.monitor.generated.fluent.models.SubscriptionScopeMetricResponseInner;
import com.azure.resourcemanager.monitor.generated.models.SubscriptionScopeMetric;
import com.azure.resourcemanager.monitor.generated.models.SubscriptionScopeMetricResponse;
import java.time.Duration;
import java.util.Collections;
import java.util.List;

public final class SubscriptionScopeMetricResponseImpl implements SubscriptionScopeMetricResponse {
    private SubscriptionScopeMetricResponseInner innerObject;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    SubscriptionScopeMetricResponseImpl(
        SubscriptionScopeMetricResponseInner innerObject,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public Integer cost() {
        return this.innerModel().cost();
    }

    public String timespan() {
        return this.innerModel().timespan();
    }

    public Duration interval() {
        return this.innerModel().interval();
    }

    public String namespace() {
        return this.innerModel().namespace();
    }

    public String resourceRegion() {
        return this.innerModel().resourceRegion();
    }

    public List<SubscriptionScopeMetric> value() {
        List<SubscriptionScopeMetric> inner = this.innerModel().value();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SubscriptionScopeMetricResponseInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }
}

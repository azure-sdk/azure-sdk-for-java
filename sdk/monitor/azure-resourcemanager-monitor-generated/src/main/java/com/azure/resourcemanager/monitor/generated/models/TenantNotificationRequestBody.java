// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The request body which contain contact detail metadata.
 */
@Fluent
public final class TenantNotificationRequestBody implements JsonSerializable<TenantNotificationRequestBody> {
    /*
     * The value of the supported alert type. Supported alert type value is: servicehealth
     */
    private String alertType;

    /*
     * The list of email receivers that are part of this action group.
     */
    private List<EmailReceiverAutoGenerated> emailReceivers;

    /*
     * The list of SMS receivers that are part of this action group.
     */
    private List<SmsReceiverAutoGenerated> smsReceivers;

    /*
     * The list of webhook receivers that are part of this action group.
     */
    private List<WebhookReceiverAutoGenerated> webhookReceivers;

    /*
     * The list of AzureAppPush receivers that are part of this action group.
     */
    private List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers;

    /*
     * The list of voice receivers that are part of this action group.
     */
    private List<VoiceReceiverAutoGenerated> voiceReceivers;

    /**
     * Creates an instance of TenantNotificationRequestBody class.
     */
    public TenantNotificationRequestBody() {
    }

    /**
     * Get the alertType property: The value of the supported alert type. Supported alert type value is: servicehealth.
     * 
     * @return the alertType value.
     */
    public String alertType() {
        return this.alertType;
    }

    /**
     * Set the alertType property: The value of the supported alert type. Supported alert type value is: servicehealth.
     * 
     * @param alertType the alertType value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withAlertType(String alertType) {
        this.alertType = alertType;
        return this;
    }

    /**
     * Get the emailReceivers property: The list of email receivers that are part of this action group.
     * 
     * @return the emailReceivers value.
     */
    public List<EmailReceiverAutoGenerated> emailReceivers() {
        return this.emailReceivers;
    }

    /**
     * Set the emailReceivers property: The list of email receivers that are part of this action group.
     * 
     * @param emailReceivers the emailReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withEmailReceivers(List<EmailReceiverAutoGenerated> emailReceivers) {
        this.emailReceivers = emailReceivers;
        return this;
    }

    /**
     * Get the smsReceivers property: The list of SMS receivers that are part of this action group.
     * 
     * @return the smsReceivers value.
     */
    public List<SmsReceiverAutoGenerated> smsReceivers() {
        return this.smsReceivers;
    }

    /**
     * Set the smsReceivers property: The list of SMS receivers that are part of this action group.
     * 
     * @param smsReceivers the smsReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withSmsReceivers(List<SmsReceiverAutoGenerated> smsReceivers) {
        this.smsReceivers = smsReceivers;
        return this;
    }

    /**
     * Get the webhookReceivers property: The list of webhook receivers that are part of this action group.
     * 
     * @return the webhookReceivers value.
     */
    public List<WebhookReceiverAutoGenerated> webhookReceivers() {
        return this.webhookReceivers;
    }

    /**
     * Set the webhookReceivers property: The list of webhook receivers that are part of this action group.
     * 
     * @param webhookReceivers the webhookReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withWebhookReceivers(List<WebhookReceiverAutoGenerated> webhookReceivers) {
        this.webhookReceivers = webhookReceivers;
        return this;
    }

    /**
     * Get the azureAppPushReceivers property: The list of AzureAppPush receivers that are part of this action group.
     * 
     * @return the azureAppPushReceivers value.
     */
    public List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers() {
        return this.azureAppPushReceivers;
    }

    /**
     * Set the azureAppPushReceivers property: The list of AzureAppPush receivers that are part of this action group.
     * 
     * @param azureAppPushReceivers the azureAppPushReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody
        withAzureAppPushReceivers(List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers) {
        this.azureAppPushReceivers = azureAppPushReceivers;
        return this;
    }

    /**
     * Get the voiceReceivers property: The list of voice receivers that are part of this action group.
     * 
     * @return the voiceReceivers value.
     */
    public List<VoiceReceiverAutoGenerated> voiceReceivers() {
        return this.voiceReceivers;
    }

    /**
     * Set the voiceReceivers property: The list of voice receivers that are part of this action group.
     * 
     * @param voiceReceivers the voiceReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withVoiceReceivers(List<VoiceReceiverAutoGenerated> voiceReceivers) {
        this.voiceReceivers = voiceReceivers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (alertType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property alertType in model TenantNotificationRequestBody"));
        }
        if (emailReceivers() != null) {
            emailReceivers().forEach(e -> e.validate());
        }
        if (smsReceivers() != null) {
            smsReceivers().forEach(e -> e.validate());
        }
        if (webhookReceivers() != null) {
            webhookReceivers().forEach(e -> e.validate());
        }
        if (azureAppPushReceivers() != null) {
            azureAppPushReceivers().forEach(e -> e.validate());
        }
        if (voiceReceivers() != null) {
            voiceReceivers().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(TenantNotificationRequestBody.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("alertType", this.alertType);
        jsonWriter.writeArrayField("emailReceivers", this.emailReceivers,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("smsReceivers", this.smsReceivers, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("webhookReceivers", this.webhookReceivers,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("azureAppPushReceivers", this.azureAppPushReceivers,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeArrayField("voiceReceivers", this.voiceReceivers,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TenantNotificationRequestBody from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TenantNotificationRequestBody if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TenantNotificationRequestBody.
     */
    public static TenantNotificationRequestBody fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TenantNotificationRequestBody deserializedTenantNotificationRequestBody
                = new TenantNotificationRequestBody();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("alertType".equals(fieldName)) {
                    deserializedTenantNotificationRequestBody.alertType = reader.getString();
                } else if ("emailReceivers".equals(fieldName)) {
                    List<EmailReceiverAutoGenerated> emailReceivers
                        = reader.readArray(reader1 -> EmailReceiverAutoGenerated.fromJson(reader1));
                    deserializedTenantNotificationRequestBody.emailReceivers = emailReceivers;
                } else if ("smsReceivers".equals(fieldName)) {
                    List<SmsReceiverAutoGenerated> smsReceivers
                        = reader.readArray(reader1 -> SmsReceiverAutoGenerated.fromJson(reader1));
                    deserializedTenantNotificationRequestBody.smsReceivers = smsReceivers;
                } else if ("webhookReceivers".equals(fieldName)) {
                    List<WebhookReceiverAutoGenerated> webhookReceivers
                        = reader.readArray(reader1 -> WebhookReceiverAutoGenerated.fromJson(reader1));
                    deserializedTenantNotificationRequestBody.webhookReceivers = webhookReceivers;
                } else if ("azureAppPushReceivers".equals(fieldName)) {
                    List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers
                        = reader.readArray(reader1 -> AzureAppPushReceiverAutoGenerated.fromJson(reader1));
                    deserializedTenantNotificationRequestBody.azureAppPushReceivers = azureAppPushReceivers;
                } else if ("voiceReceivers".equals(fieldName)) {
                    List<VoiceReceiverAutoGenerated> voiceReceivers
                        = reader.readArray(reader1 -> VoiceReceiverAutoGenerated.fromJson(reader1));
                    deserializedTenantNotificationRequestBody.voiceReceivers = voiceReceivers;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTenantNotificationRequestBody;
        });
    }
}

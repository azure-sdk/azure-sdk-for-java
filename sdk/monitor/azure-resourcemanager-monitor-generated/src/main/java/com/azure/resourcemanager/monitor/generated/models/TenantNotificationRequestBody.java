// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The request body which contain contact detail metadata.
 */
@Fluent
public final class TenantNotificationRequestBody {
    /*
     * The value of the supported alert type. Supported alert type value is: servicehealth
     */
    @JsonProperty(value = "alertType", required = true)
    private String alertType;

    /*
     * The list of email receivers that are part of this action group.
     */
    @JsonProperty(value = "emailReceivers")
    private List<EmailReceiverAutoGenerated> emailReceivers;

    /*
     * The list of SMS receivers that are part of this action group.
     */
    @JsonProperty(value = "smsReceivers")
    private List<SmsReceiverAutoGenerated> smsReceivers;

    /*
     * The list of webhook receivers that are part of this action group.
     */
    @JsonProperty(value = "webhookReceivers")
    private List<WebhookReceiverAutoGenerated> webhookReceivers;

    /*
     * The list of AzureAppPush receivers that are part of this action group.
     */
    @JsonProperty(value = "azureAppPushReceivers")
    private List<AzureAppPushReceiver> azureAppPushReceivers;

    /*
     * The list of voice receivers that are part of this action group.
     */
    @JsonProperty(value = "voiceReceivers")
    private List<VoiceReceiverAutoGenerated> voiceReceivers;

    /**
     * Creates an instance of TenantNotificationRequestBody class.
     */
    public TenantNotificationRequestBody() {
    }

    /**
     * Get the alertType property: The value of the supported alert type. Supported alert type value is: servicehealth.
     * 
     * @return the alertType value.
     */
    public String alertType() {
        return this.alertType;
    }

    /**
     * Set the alertType property: The value of the supported alert type. Supported alert type value is: servicehealth.
     * 
     * @param alertType the alertType value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withAlertType(String alertType) {
        this.alertType = alertType;
        return this;
    }

    /**
     * Get the emailReceivers property: The list of email receivers that are part of this action group.
     * 
     * @return the emailReceivers value.
     */
    public List<EmailReceiverAutoGenerated> emailReceivers() {
        return this.emailReceivers;
    }

    /**
     * Set the emailReceivers property: The list of email receivers that are part of this action group.
     * 
     * @param emailReceivers the emailReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withEmailReceivers(List<EmailReceiverAutoGenerated> emailReceivers) {
        this.emailReceivers = emailReceivers;
        return this;
    }

    /**
     * Get the smsReceivers property: The list of SMS receivers that are part of this action group.
     * 
     * @return the smsReceivers value.
     */
    public List<SmsReceiverAutoGenerated> smsReceivers() {
        return this.smsReceivers;
    }

    /**
     * Set the smsReceivers property: The list of SMS receivers that are part of this action group.
     * 
     * @param smsReceivers the smsReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withSmsReceivers(List<SmsReceiverAutoGenerated> smsReceivers) {
        this.smsReceivers = smsReceivers;
        return this;
    }

    /**
     * Get the webhookReceivers property: The list of webhook receivers that are part of this action group.
     * 
     * @return the webhookReceivers value.
     */
    public List<WebhookReceiverAutoGenerated> webhookReceivers() {
        return this.webhookReceivers;
    }

    /**
     * Set the webhookReceivers property: The list of webhook receivers that are part of this action group.
     * 
     * @param webhookReceivers the webhookReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withWebhookReceivers(List<WebhookReceiverAutoGenerated> webhookReceivers) {
        this.webhookReceivers = webhookReceivers;
        return this;
    }

    /**
     * Get the azureAppPushReceivers property: The list of AzureAppPush receivers that are part of this action group.
     * 
     * @return the azureAppPushReceivers value.
     */
    public List<AzureAppPushReceiver> azureAppPushReceivers() {
        return this.azureAppPushReceivers;
    }

    /**
     * Set the azureAppPushReceivers property: The list of AzureAppPush receivers that are part of this action group.
     * 
     * @param azureAppPushReceivers the azureAppPushReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withAzureAppPushReceivers(List<AzureAppPushReceiver> azureAppPushReceivers) {
        this.azureAppPushReceivers = azureAppPushReceivers;
        return this;
    }

    /**
     * Get the voiceReceivers property: The list of voice receivers that are part of this action group.
     * 
     * @return the voiceReceivers value.
     */
    public List<VoiceReceiverAutoGenerated> voiceReceivers() {
        return this.voiceReceivers;
    }

    /**
     * Set the voiceReceivers property: The list of voice receivers that are part of this action group.
     * 
     * @param voiceReceivers the voiceReceivers value to set.
     * @return the TenantNotificationRequestBody object itself.
     */
    public TenantNotificationRequestBody withVoiceReceivers(List<VoiceReceiverAutoGenerated> voiceReceivers) {
        this.voiceReceivers = voiceReceivers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (alertType() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property alertType in model TenantNotificationRequestBody"));
        }
        if (emailReceivers() != null) {
            emailReceivers().forEach(e -> e.validate());
        }
        if (smsReceivers() != null) {
            smsReceivers().forEach(e -> e.validate());
        }
        if (webhookReceivers() != null) {
            webhookReceivers().forEach(e -> e.validate());
        }
        if (azureAppPushReceivers() != null) {
            azureAppPushReceivers().forEach(e -> e.validate());
        }
        if (voiceReceivers() != null) {
            voiceReceivers().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(TenantNotificationRequestBody.class);
}

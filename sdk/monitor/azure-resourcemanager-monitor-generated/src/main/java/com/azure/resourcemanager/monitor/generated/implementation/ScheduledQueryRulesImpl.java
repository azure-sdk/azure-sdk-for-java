// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.fluent.ScheduledQueryRulesClient;
import com.azure.resourcemanager.monitor.generated.fluent.models.NetworkSecurityPerimeterConfigurationInner;
import com.azure.resourcemanager.monitor.generated.models.NetworkSecurityPerimeterConfiguration;
import com.azure.resourcemanager.monitor.generated.models.ScheduledQueryRules;

public final class ScheduledQueryRulesImpl implements ScheduledQueryRules {
    private static final ClientLogger LOGGER = new ClientLogger(ScheduledQueryRulesImpl.class);

    private final ScheduledQueryRulesClient innerClient;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    public ScheduledQueryRulesImpl(ScheduledQueryRulesClient innerClient,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<NetworkSecurityPerimeterConfiguration> listNsp(String resourceGroupName, String ruleName) {
        PagedIterable<NetworkSecurityPerimeterConfigurationInner> inner
            = this.serviceClient().listNsp(resourceGroupName, ruleName);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new NetworkSecurityPerimeterConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<NetworkSecurityPerimeterConfiguration> listNsp(String resourceGroupName, String ruleName,
        Context context) {
        PagedIterable<NetworkSecurityPerimeterConfigurationInner> inner
            = this.serviceClient().listNsp(resourceGroupName, ruleName, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new NetworkSecurityPerimeterConfigurationImpl(inner1, this.manager()));
    }

    public Response<NetworkSecurityPerimeterConfiguration> getNspWithResponse(String resourceGroupName, String ruleName,
        String networkSecurityPerimeterConfigurationName, Context context) {
        Response<NetworkSecurityPerimeterConfigurationInner> inner = this.serviceClient()
            .getNspWithResponse(resourceGroupName, ruleName, networkSecurityPerimeterConfigurationName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new NetworkSecurityPerimeterConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public NetworkSecurityPerimeterConfiguration getNsp(String resourceGroupName, String ruleName,
        String networkSecurityPerimeterConfigurationName) {
        NetworkSecurityPerimeterConfigurationInner inner
            = this.serviceClient().getNsp(resourceGroupName, ruleName, networkSecurityPerimeterConfigurationName);
        if (inner != null) {
            return new NetworkSecurityPerimeterConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void reconcileNsp(String resourceGroupName, String ruleName,
        String networkSecurityPerimeterConfigurationName) {
        this.serviceClient().reconcileNsp(resourceGroupName, ruleName, networkSecurityPerimeterConfigurationName);
    }

    public void reconcileNsp(String resourceGroupName, String ruleName,
        String networkSecurityPerimeterConfigurationName, Context context) {
        this.serviceClient()
            .reconcileNsp(resourceGroupName, ruleName, networkSecurityPerimeterConfigurationName, context);
    }

    private ScheduledQueryRulesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }
}

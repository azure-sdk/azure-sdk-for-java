// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The LocationSpec model.
 */
@Fluent
public final class LocationSpec {
    /*
     * Name of location.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * The resource provisioning state in this location.
     */
    @JsonProperty(value = "provisioningStatus")
    private KnownLocationSpecProvisioningStatus provisioningStatus;

    /**
     * Creates an instance of LocationSpec class.
     */
    public LocationSpec() {
    }

    /**
     * Get the location property: Name of location.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Name of location.
     * 
     * @param location the location value to set.
     * @return the LocationSpec object itself.
     */
    public LocationSpec withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the provisioningStatus property: The resource provisioning state in this location.
     * 
     * @return the provisioningStatus value.
     */
    public KnownLocationSpecProvisioningStatus provisioningStatus() {
        return this.provisioningStatus;
    }

    /**
     * Set the provisioningStatus property: The resource provisioning state in this location.
     * 
     * @param provisioningStatus the provisioningStatus value to set.
     * @return the LocationSpec object itself.
     */
    public LocationSpec withProvisioningStatus(KnownLocationSpecProvisioningStatus provisioningStatus) {
        this.provisioningStatus = provisioningStatus;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.fluent.TenantActionGroupsClient;
import com.azure.resourcemanager.monitor.generated.fluent.models.TenantActionGroupResourceInner;
import com.azure.resourcemanager.monitor.generated.models.ActionGroupPatchBodyAutoGenerated;
import com.azure.resourcemanager.monitor.generated.models.TenantActionGroupResource;
import com.azure.resourcemanager.monitor.generated.models.TenantActionGroups;

public final class TenantActionGroupsImpl implements TenantActionGroups {
    private static final ClientLogger LOGGER = new ClientLogger(TenantActionGroupsImpl.class);

    private final TenantActionGroupsClient innerClient;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    public TenantActionGroupsImpl(TenantActionGroupsClient innerClient,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<TenantActionGroupResource> createOrUpdateWithResponse(String managementGroupId,
        String tenantActionGroupName, String xMsClientTenantId, TenantActionGroupResourceInner actionGroup,
        Context context) {
        Response<TenantActionGroupResourceInner> inner = this.serviceClient().createOrUpdateWithResponse(
            managementGroupId, tenantActionGroupName, xMsClientTenantId, actionGroup, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new TenantActionGroupResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public TenantActionGroupResource createOrUpdate(String managementGroupId, String tenantActionGroupName,
        String xMsClientTenantId, TenantActionGroupResourceInner actionGroup) {
        TenantActionGroupResourceInner inner = this.serviceClient().createOrUpdate(managementGroupId,
            tenantActionGroupName, xMsClientTenantId, actionGroup);
        if (inner != null) {
            return new TenantActionGroupResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<TenantActionGroupResource> getWithResponse(String managementGroupId, String tenantActionGroupName,
        String xMsClientTenantId, Context context) {
        Response<TenantActionGroupResourceInner> inner = this.serviceClient().getWithResponse(managementGroupId,
            tenantActionGroupName, xMsClientTenantId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new TenantActionGroupResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public TenantActionGroupResource get(String managementGroupId, String tenantActionGroupName,
        String xMsClientTenantId) {
        TenantActionGroupResourceInner inner
            = this.serviceClient().get(managementGroupId, tenantActionGroupName, xMsClientTenantId);
        if (inner != null) {
            return new TenantActionGroupResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String managementGroupId, String tenantActionGroupName,
        String xMsClientTenantId, Context context) {
        return this.serviceClient().deleteWithResponse(managementGroupId, tenantActionGroupName, xMsClientTenantId,
            context);
    }

    public void delete(String managementGroupId, String tenantActionGroupName, String xMsClientTenantId) {
        this.serviceClient().delete(managementGroupId, tenantActionGroupName, xMsClientTenantId);
    }

    public Response<TenantActionGroupResource> updateWithResponse(String managementGroupId,
        String tenantActionGroupName, String xMsClientTenantId,
        ActionGroupPatchBodyAutoGenerated tenantActionGroupPatch, Context context) {
        Response<TenantActionGroupResourceInner> inner = this.serviceClient().updateWithResponse(managementGroupId,
            tenantActionGroupName, xMsClientTenantId, tenantActionGroupPatch, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new TenantActionGroupResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public TenantActionGroupResource update(String managementGroupId, String tenantActionGroupName,
        String xMsClientTenantId, ActionGroupPatchBodyAutoGenerated tenantActionGroupPatch) {
        TenantActionGroupResourceInner inner = this.serviceClient().update(managementGroupId, tenantActionGroupName,
            xMsClientTenantId, tenantActionGroupPatch);
        if (inner != null) {
            return new TenantActionGroupResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<TenantActionGroupResource> listByManagementGroupId(String managementGroupId,
        String xMsClientTenantId) {
        PagedIterable<TenantActionGroupResourceInner> inner
            = this.serviceClient().listByManagementGroupId(managementGroupId, xMsClientTenantId);
        return Utils.mapPage(inner, inner1 -> new TenantActionGroupResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<TenantActionGroupResource> listByManagementGroupId(String managementGroupId,
        String xMsClientTenantId, Context context) {
        PagedIterable<TenantActionGroupResourceInner> inner
            = this.serviceClient().listByManagementGroupId(managementGroupId, xMsClientTenantId, context);
        return Utils.mapPage(inner, inner1 -> new TenantActionGroupResourceImpl(inner1, this.manager()));
    }

    private TenantActionGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }
}

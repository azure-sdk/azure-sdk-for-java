// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.monitor.generated.fluent.models.TestNotificationDetailsResponseInner;
import com.azure.resourcemanager.monitor.generated.models.ResourceProviders;
import com.azure.resourcemanager.monitor.generated.models.TenantNotificationRequestBody;
import com.azure.resourcemanager.monitor.generated.models.TestNotificationDetailsResponse;

public final class ResourceProvidersImpl implements ResourceProviders {
    private static final ClientLogger LOGGER = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    public ResourceProvidersImpl(
        ResourceProvidersClient innerClient,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public TestNotificationDetailsResponse createNotificationsAtTenantActionGroupResourceLevel(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        TenantNotificationRequestBody notificationRequest) {
        TestNotificationDetailsResponseInner inner =
            this
                .serviceClient()
                .createNotificationsAtTenantActionGroupResourceLevel(
                    managementGroupId, tenantActionGroupName, xMsClientTenantId, notificationRequest);
        if (inner != null) {
            return new TestNotificationDetailsResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public TestNotificationDetailsResponse createNotificationsAtTenantActionGroupResourceLevel(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        TenantNotificationRequestBody notificationRequest,
        Context context) {
        TestNotificationDetailsResponseInner inner =
            this
                .serviceClient()
                .createNotificationsAtTenantActionGroupResourceLevel(
                    managementGroupId, tenantActionGroupName, xMsClientTenantId, notificationRequest, context);
        if (inner != null) {
            return new TestNotificationDetailsResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<TestNotificationDetailsResponse> getTestNotificationsAtTenantActionGroupResourceLevelWithResponse(
        String managementGroupId,
        String tenantActionGroupName,
        String xMsClientTenantId,
        String notificationId,
        Context context) {
        Response<TestNotificationDetailsResponseInner> inner =
            this
                .serviceClient()
                .getTestNotificationsAtTenantActionGroupResourceLevelWithResponse(
                    managementGroupId, tenantActionGroupName, xMsClientTenantId, notificationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new TestNotificationDetailsResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public TestNotificationDetailsResponse getTestNotificationsAtTenantActionGroupResourceLevel(
        String managementGroupId, String tenantActionGroupName, String xMsClientTenantId, String notificationId) {
        TestNotificationDetailsResponseInner inner =
            this
                .serviceClient()
                .getTestNotificationsAtTenantActionGroupResourceLevel(
                    managementGroupId, tenantActionGroupName, xMsClientTenantId, notificationId);
        if (inner != null) {
            return new TestNotificationDetailsResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }
}

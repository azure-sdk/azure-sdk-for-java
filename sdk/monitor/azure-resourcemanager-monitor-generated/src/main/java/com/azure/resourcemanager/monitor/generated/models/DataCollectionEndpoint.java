// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Definition of data collection endpoint.
 */
@Fluent
public class DataCollectionEndpoint {
    /*
     * Description of the data collection endpoint.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
     */
    @JsonProperty(value = "immutableId")
    private String immutableId;

    /*
     * The endpoint used by clients to access their configuration.
     */
    @JsonProperty(value = "configurationAccess")
    private DataCollectionEndpointConfigurationAccess configurationAccess;

    /*
     * The endpoint used by clients to ingest logs.
     */
    @JsonProperty(value = "logsIngestion")
    private DataCollectionEndpointLogsIngestion logsIngestion;

    /*
     * The endpoint used by clients to ingest metrics.
     */
    @JsonProperty(value = "metricsIngestion")
    private DataCollectionEndpointMetricsIngestion metricsIngestion;

    /*
     * Network access control rules for the endpoints.
     */
    @JsonProperty(value = "networkAcls")
    private DataCollectionEndpointNetworkAcls networkAcls;

    /*
     * The resource provisioning state. This property is READ-ONLY.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private KnownDataCollectionEndpointProvisioningState provisioningState;

    /*
     * List of Azure Monitor Private Link Scope Resources to which this data collection endpoint resource is
     * associated. This property is READ-ONLY.
     */
    @JsonProperty(value = "privateLinkScopedResources", access = JsonProperty.Access.WRITE_ONLY)
    private List<PrivateLinkScopedResource> privateLinkScopedResources;

    /*
     * Failover configuration on this endpoint. This property can only be updated by Log Analytics Control Plane (LACP)
     * for DCE with Log Analytics Destination
     */
    @JsonProperty(value = "failoverConfiguration")
    private DataCollectionEndpointFailoverConfiguration failoverConfiguration;

    /*
     * Metadata for the resource. This property can only be updated by Log Analytics Control Plane (LACP) for DCE with
     * Log Analytics Destination
     */
    @JsonProperty(value = "metadata")
    private DataCollectionEndpointMetadata metadata;

    /**
     * Creates an instance of DataCollectionEndpoint class.
     */
    public DataCollectionEndpoint() {
    }

    /**
     * Get the description property: Description of the data collection endpoint.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the data collection endpoint.
     * 
     * @param description the description value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the immutableId property: The immutable ID of this data collection endpoint resource. This property is
     * READ-ONLY.
     * 
     * @return the immutableId value.
     */
    public String immutableId() {
        return this.immutableId;
    }

    /**
     * Set the immutableId property: The immutable ID of this data collection endpoint resource. This property is
     * READ-ONLY.
     * 
     * @param immutableId the immutableId value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint withImmutableId(String immutableId) {
        this.immutableId = immutableId;
        return this;
    }

    /**
     * Get the configurationAccess property: The endpoint used by clients to access their configuration.
     * 
     * @return the configurationAccess value.
     */
    public DataCollectionEndpointConfigurationAccess configurationAccess() {
        return this.configurationAccess;
    }

    /**
     * Set the configurationAccess property: The endpoint used by clients to access their configuration.
     * 
     * @param configurationAccess the configurationAccess value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint
        withConfigurationAccess(DataCollectionEndpointConfigurationAccess configurationAccess) {
        this.configurationAccess = configurationAccess;
        return this;
    }

    /**
     * Get the logsIngestion property: The endpoint used by clients to ingest logs.
     * 
     * @return the logsIngestion value.
     */
    public DataCollectionEndpointLogsIngestion logsIngestion() {
        return this.logsIngestion;
    }

    /**
     * Set the logsIngestion property: The endpoint used by clients to ingest logs.
     * 
     * @param logsIngestion the logsIngestion value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint withLogsIngestion(DataCollectionEndpointLogsIngestion logsIngestion) {
        this.logsIngestion = logsIngestion;
        return this;
    }

    /**
     * Get the metricsIngestion property: The endpoint used by clients to ingest metrics.
     * 
     * @return the metricsIngestion value.
     */
    public DataCollectionEndpointMetricsIngestion metricsIngestion() {
        return this.metricsIngestion;
    }

    /**
     * Set the metricsIngestion property: The endpoint used by clients to ingest metrics.
     * 
     * @param metricsIngestion the metricsIngestion value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint withMetricsIngestion(DataCollectionEndpointMetricsIngestion metricsIngestion) {
        this.metricsIngestion = metricsIngestion;
        return this;
    }

    /**
     * Get the networkAcls property: Network access control rules for the endpoints.
     * 
     * @return the networkAcls value.
     */
    public DataCollectionEndpointNetworkAcls networkAcls() {
        return this.networkAcls;
    }

    /**
     * Set the networkAcls property: Network access control rules for the endpoints.
     * 
     * @param networkAcls the networkAcls value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint withNetworkAcls(DataCollectionEndpointNetworkAcls networkAcls) {
        this.networkAcls = networkAcls;
        return this;
    }

    /**
     * Get the provisioningState property: The resource provisioning state. This property is READ-ONLY.
     * 
     * @return the provisioningState value.
     */
    public KnownDataCollectionEndpointProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the privateLinkScopedResources property: List of Azure Monitor Private Link Scope Resources to which this
     * data collection endpoint resource is associated. This property is READ-ONLY.
     * 
     * @return the privateLinkScopedResources value.
     */
    public List<PrivateLinkScopedResource> privateLinkScopedResources() {
        return this.privateLinkScopedResources;
    }

    /**
     * Get the failoverConfiguration property: Failover configuration on this endpoint. This property can only be
     * updated by Log Analytics Control Plane (LACP) for DCE with Log Analytics Destination.
     * 
     * @return the failoverConfiguration value.
     */
    public DataCollectionEndpointFailoverConfiguration failoverConfiguration() {
        return this.failoverConfiguration;
    }

    /**
     * Set the failoverConfiguration property: Failover configuration on this endpoint. This property can only be
     * updated by Log Analytics Control Plane (LACP) for DCE with Log Analytics Destination.
     * 
     * @param failoverConfiguration the failoverConfiguration value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint
        withFailoverConfiguration(DataCollectionEndpointFailoverConfiguration failoverConfiguration) {
        this.failoverConfiguration = failoverConfiguration;
        return this;
    }

    /**
     * Get the metadata property: Metadata for the resource. This property can only be updated by Log Analytics Control
     * Plane (LACP) for DCE with Log Analytics Destination.
     * 
     * @return the metadata value.
     */
    public DataCollectionEndpointMetadata metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Metadata for the resource. This property can only be updated by Log Analytics Control
     * Plane (LACP) for DCE with Log Analytics Destination.
     * 
     * @param metadata the metadata value to set.
     * @return the DataCollectionEndpoint object itself.
     */
    public DataCollectionEndpoint withMetadata(DataCollectionEndpointMetadata metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (configurationAccess() != null) {
            configurationAccess().validate();
        }
        if (logsIngestion() != null) {
            logsIngestion().validate();
        }
        if (metricsIngestion() != null) {
            metricsIngestion().validate();
        }
        if (networkAcls() != null) {
            networkAcls().validate();
        }
        if (privateLinkScopedResources() != null) {
            privateLinkScopedResources().forEach(e -> e.validate());
        }
        if (failoverConfiguration() != null) {
            failoverConfiguration().validate();
        }
        if (metadata() != null) {
            metadata().validate();
        }
    }
}

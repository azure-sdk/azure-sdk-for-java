// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** The criteria operator. Relevant and required only for rules of the kind LogAlert. */
public final class ConditionOperatorForCondition extends ExpandableStringEnum<ConditionOperatorForCondition> {
    /** Static value Equals for ConditionOperatorForCondition. */
    public static final ConditionOperatorForCondition EQUALS = fromString("Equals");

    /** Static value GreaterThan for ConditionOperatorForCondition. */
    public static final ConditionOperatorForCondition GREATER_THAN = fromString("GreaterThan");

    /** Static value GreaterThanOrEqual for ConditionOperatorForCondition. */
    public static final ConditionOperatorForCondition GREATER_THAN_OR_EQUAL = fromString("GreaterThanOrEqual");

    /** Static value LessThan for ConditionOperatorForCondition. */
    public static final ConditionOperatorForCondition LESS_THAN = fromString("LessThan");

    /** Static value LessThanOrEqual for ConditionOperatorForCondition. */
    public static final ConditionOperatorForCondition LESS_THAN_OR_EQUAL = fromString("LessThanOrEqual");

    /**
     * Creates or finds a ConditionOperatorForCondition from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding ConditionOperatorForCondition.
     */
    @JsonCreator
    public static ConditionOperatorForCondition fromString(String name) {
        return fromString(name, ConditionOperatorForCondition.class);
    }

    /**
     * Gets known ConditionOperatorForCondition values.
     *
     * @return known ConditionOperatorForCondition values.
     */
    public static Collection<ConditionOperatorForCondition> values() {
        return values(ConditionOperatorForCondition.class);
    }
}

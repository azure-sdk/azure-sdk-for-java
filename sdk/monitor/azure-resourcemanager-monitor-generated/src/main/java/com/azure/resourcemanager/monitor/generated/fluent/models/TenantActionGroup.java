// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.models.AzureAppPushReceiverAutoGenerated;
import com.azure.resourcemanager.monitor.generated.models.EmailReceiverAutoGenerated;
import com.azure.resourcemanager.monitor.generated.models.SmsReceiverAutoGenerated;
import com.azure.resourcemanager.monitor.generated.models.VoiceReceiverAutoGenerated;
import com.azure.resourcemanager.monitor.generated.models.WebhookReceiverAutoGenerated;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A tenant action group.
 */
@Fluent
public final class TenantActionGroup {
    /*
     * The short name of the action group. This will be used in SMS messages.
     */
    @JsonProperty(value = "groupShortName", required = true)
    private String groupShortName;

    /*
     * Indicates whether this tenant action group is enabled. If a tenant action group is not enabled, then none of its receivers will receive communications.
     */
    @JsonProperty(value = "enabled", required = true)
    private boolean enabled;

    /*
     * The list of email receivers that are part of this tenant action group.
     */
    @JsonProperty(value = "emailReceivers")
    private List<EmailReceiverAutoGenerated> emailReceivers;

    /*
     * The list of SMS receivers that are part of this tenant action group.
     */
    @JsonProperty(value = "smsReceivers")
    private List<SmsReceiverAutoGenerated> smsReceivers;

    /*
     * The list of webhook receivers that are part of this tenant action group.
     */
    @JsonProperty(value = "webhookReceivers")
    private List<WebhookReceiverAutoGenerated> webhookReceivers;

    /*
     * The list of AzureAppPush receivers that are part of this tenant action group.
     */
    @JsonProperty(value = "azureAppPushReceivers")
    private List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers;

    /*
     * The list of voice receivers that are part of this tenant action group.
     */
    @JsonProperty(value = "voiceReceivers")
    private List<VoiceReceiverAutoGenerated> voiceReceivers;

    /**
     * Creates an instance of TenantActionGroup class.
     */
    public TenantActionGroup() {
    }

    /**
     * Get the groupShortName property: The short name of the action group. This will be used in SMS messages.
     * 
     * @return the groupShortName value.
     */
    public String groupShortName() {
        return this.groupShortName;
    }

    /**
     * Set the groupShortName property: The short name of the action group. This will be used in SMS messages.
     * 
     * @param groupShortName the groupShortName value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withGroupShortName(String groupShortName) {
        this.groupShortName = groupShortName;
        return this;
    }

    /**
     * Get the enabled property: Indicates whether this tenant action group is enabled. If a tenant action group is not
     * enabled, then none of its receivers will receive communications.
     * 
     * @return the enabled value.
     */
    public boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Indicates whether this tenant action group is enabled. If a tenant action group is not
     * enabled, then none of its receivers will receive communications.
     * 
     * @param enabled the enabled value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withEnabled(boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the emailReceivers property: The list of email receivers that are part of this tenant action group.
     * 
     * @return the emailReceivers value.
     */
    public List<EmailReceiverAutoGenerated> emailReceivers() {
        return this.emailReceivers;
    }

    /**
     * Set the emailReceivers property: The list of email receivers that are part of this tenant action group.
     * 
     * @param emailReceivers the emailReceivers value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withEmailReceivers(List<EmailReceiverAutoGenerated> emailReceivers) {
        this.emailReceivers = emailReceivers;
        return this;
    }

    /**
     * Get the smsReceivers property: The list of SMS receivers that are part of this tenant action group.
     * 
     * @return the smsReceivers value.
     */
    public List<SmsReceiverAutoGenerated> smsReceivers() {
        return this.smsReceivers;
    }

    /**
     * Set the smsReceivers property: The list of SMS receivers that are part of this tenant action group.
     * 
     * @param smsReceivers the smsReceivers value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withSmsReceivers(List<SmsReceiverAutoGenerated> smsReceivers) {
        this.smsReceivers = smsReceivers;
        return this;
    }

    /**
     * Get the webhookReceivers property: The list of webhook receivers that are part of this tenant action group.
     * 
     * @return the webhookReceivers value.
     */
    public List<WebhookReceiverAutoGenerated> webhookReceivers() {
        return this.webhookReceivers;
    }

    /**
     * Set the webhookReceivers property: The list of webhook receivers that are part of this tenant action group.
     * 
     * @param webhookReceivers the webhookReceivers value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withWebhookReceivers(List<WebhookReceiverAutoGenerated> webhookReceivers) {
        this.webhookReceivers = webhookReceivers;
        return this;
    }

    /**
     * Get the azureAppPushReceivers property: The list of AzureAppPush receivers that are part of this tenant action
     * group.
     * 
     * @return the azureAppPushReceivers value.
     */
    public List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers() {
        return this.azureAppPushReceivers;
    }

    /**
     * Set the azureAppPushReceivers property: The list of AzureAppPush receivers that are part of this tenant action
     * group.
     * 
     * @param azureAppPushReceivers the azureAppPushReceivers value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withAzureAppPushReceivers(List<AzureAppPushReceiverAutoGenerated> azureAppPushReceivers) {
        this.azureAppPushReceivers = azureAppPushReceivers;
        return this;
    }

    /**
     * Get the voiceReceivers property: The list of voice receivers that are part of this tenant action group.
     * 
     * @return the voiceReceivers value.
     */
    public List<VoiceReceiverAutoGenerated> voiceReceivers() {
        return this.voiceReceivers;
    }

    /**
     * Set the voiceReceivers property: The list of voice receivers that are part of this tenant action group.
     * 
     * @param voiceReceivers the voiceReceivers value to set.
     * @return the TenantActionGroup object itself.
     */
    public TenantActionGroup withVoiceReceivers(List<VoiceReceiverAutoGenerated> voiceReceivers) {
        this.voiceReceivers = voiceReceivers;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (groupShortName() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property groupShortName in model TenantActionGroup"));
        }
        if (emailReceivers() != null) {
            emailReceivers().forEach(e -> e.validate());
        }
        if (smsReceivers() != null) {
            smsReceivers().forEach(e -> e.validate());
        }
        if (webhookReceivers() != null) {
            webhookReceivers().forEach(e -> e.validate());
        }
        if (azureAppPushReceivers() != null) {
            azureAppPushReceivers().forEach(e -> e.validate());
        }
        if (voiceReceivers() != null) {
            voiceReceivers().forEach(e -> e.validate());
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(TenantActionGroup.class);
}

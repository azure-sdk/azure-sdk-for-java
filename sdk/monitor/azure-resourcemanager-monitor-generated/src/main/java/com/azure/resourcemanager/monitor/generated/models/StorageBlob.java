// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The StorageBlob model.
 */
@Fluent
public final class StorageBlob {
    /*
     * Resource Id of the storage account that hosts the blob
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * Url of the storage blob
     */
    @JsonProperty(value = "blobUrl")
    private String blobUrl;

    /*
     * The type of lookup to perform on the blob
     */
    @JsonProperty(value = "lookupType")
    private KnownStorageBlobLookupType lookupType;

    /*
     * The name of the enrichment data source used as an alias when referencing this data source in data flows
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Creates an instance of StorageBlob class.
     */
    public StorageBlob() {
    }

    /**
     * Get the resourceId property: Resource Id of the storage account that hosts the blob.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: Resource Id of the storage account that hosts the blob.
     * 
     * @param resourceId the resourceId value to set.
     * @return the StorageBlob object itself.
     */
    public StorageBlob withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the blobUrl property: Url of the storage blob.
     * 
     * @return the blobUrl value.
     */
    public String blobUrl() {
        return this.blobUrl;
    }

    /**
     * Set the blobUrl property: Url of the storage blob.
     * 
     * @param blobUrl the blobUrl value to set.
     * @return the StorageBlob object itself.
     */
    public StorageBlob withBlobUrl(String blobUrl) {
        this.blobUrl = blobUrl;
        return this;
    }

    /**
     * Get the lookupType property: The type of lookup to perform on the blob.
     * 
     * @return the lookupType value.
     */
    public KnownStorageBlobLookupType lookupType() {
        return this.lookupType;
    }

    /**
     * Set the lookupType property: The type of lookup to perform on the blob.
     * 
     * @param lookupType the lookupType value to set.
     * @return the StorageBlob object itself.
     */
    public StorageBlob withLookupType(KnownStorageBlobLookupType lookupType) {
        this.lookupType = lookupType;
        return this;
    }

    /**
     * Get the name property: The name of the enrichment data source used as an alias when referencing this data source
     * in data flows.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the enrichment data source used as an alias when referencing this data source
     * in data flows.
     * 
     * @param name the name value to set.
     * @return the StorageBlob object itself.
     */
    public StorageBlob withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

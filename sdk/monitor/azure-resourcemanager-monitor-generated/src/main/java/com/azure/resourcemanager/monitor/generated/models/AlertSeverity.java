// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.models;

import com.azure.core.util.ExpandableEnum;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

/**
 * Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest. Relevant and required only for
 * rules of the kind LogAlert.
 */
public final class AlertSeverity implements ExpandableEnum<Long> {
    private static final Map<Long, AlertSeverity> VALUES = new ConcurrentHashMap<>();

    private static final Function<Long, AlertSeverity> NEW_INSTANCE = AlertSeverity::new;

    /**
     * Static value 0 for AlertSeverity.
     */
    public static final AlertSeverity ZERO = fromValue(0L);

    /**
     * Static value 1 for AlertSeverity.
     */
    public static final AlertSeverity ONE = fromValue(1L);

    /**
     * Static value 2 for AlertSeverity.
     */
    public static final AlertSeverity TWO = fromValue(2L);

    /**
     * Static value 3 for AlertSeverity.
     */
    public static final AlertSeverity THREE = fromValue(3L);

    /**
     * Static value 4 for AlertSeverity.
     */
    public static final AlertSeverity FOUR = fromValue(4L);

    private final Long value;

    private AlertSeverity(Long value) {
        this.value = value;
    }

    /**
     * Creates or finds a AlertSeverity.
     * 
     * @param value a value to look for.
     * @return the corresponding AlertSeverity.
     * @throws IllegalArgumentException if value is null.
     */
    public static AlertSeverity fromValue(Long value) {
        if (value == null) {
            throw new IllegalArgumentException("'value' cannot be null.");
        }
        return VALUES.computeIfAbsent(value, NEW_INSTANCE);
    }

    /**
     * Gets known AlertSeverity values.
     * 
     * @return Known AlertSeverity values.
     */
    public static Collection<AlertSeverity> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the AlertSeverity instance.
     * 
     * @return the value of the AlertSeverity instance.
     */
    @Override
    public Long getValue() {
        return this.value;
    }

    @Override
    public String toString() {
        return Objects.toString(this.value);
    }

    @Override
    public boolean equals(Object obj) {
        return this == obj;
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.springappdiscovery.generated;

import com.azure.resourcemanager.springappdiscovery.models.SpringbootappsProperties;
import com.azure.resourcemanager.springappdiscovery.models.SpringbootappsPropertiesApplicationConfigurationsItem;
import com.azure.resourcemanager.springappdiscovery.models.SpringbootappsPropertiesInstancesItem;
import com.azure.resourcemanager.springappdiscovery.models.SpringbootappsPropertiesMiscsItem;
import java.time.OffsetDateTime;
import java.util.Arrays;

/**
 * Samples for Springbootapps CreateOrUpdate.
 */
public final class SpringbootappsCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/offazurespringboot/resource-manager/Microsoft.OffAzureSpringBoot/preview/2024-04-01-preview/
     * examples/springbootapps_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: springbootapps_CreateOrUpdate_MaximumSet_Gen.
     * 
     * @param manager Entry point to SpringAppDiscoveryManager.
     */
    public static void springbootappsCreateOrUpdateMaximumSetGen(
        com.azure.resourcemanager.springappdiscovery.SpringAppDiscoveryManager manager) {
        manager.springbootapps().define("ofjeesoahqtnovlbuvflyknpbhcpeqqhekntvqxyemuwbcqnuxjgfhsf")
            .withExistingSpringbootsite("rgspringbootapps", "pdfosfhtemfsaglvwjdyqlyeipucrd")
            .withProperties(new SpringbootappsProperties().withAppName("wrauwfegjfccym")
                .withArtifactName("wrauwfegjfccym").withAppPort(12).withAppType("axzunlh")
                .withApplicationConfigurations(Arrays.asList(new SpringbootappsPropertiesApplicationConfigurationsItem()
                    .withKey("fakeTokenPlaceholder").withValue("jnmaf")))
                .withBindingPorts(Arrays.asList(11)).withBuildJdkVersion("ipzruwqqulkpvhzymqegntz")
                .withCertificates(Arrays.asList("xpiqqob")).withChecksum("gpzumvbzfnhhmuehveanctiamr")
                .withDependencies(Arrays.asList("zrtted")).withEnvironments(Arrays.asList("afhprevtcx"))
                .withInstanceCount(5).withJarFileLocation("wfptqclncaqycyfbfih").withJvmMemoryInMB(1)
                .withJvmOptions(Arrays.asList("nytejjoytevmvlgnfwb"))
                .withMiscs(Arrays
                    .asList(new SpringbootappsPropertiesMiscsItem().withKey("fakeTokenPlaceholder").withValue("k")))
                .withInstances(Arrays.asList(new SpringbootappsPropertiesInstancesItem()
                    .withMachineArmId("lsstlommxuskyhnwyxh").withInstanceCount(5).withJvmMemoryInMB(128)))
                .withRuntimeJdkVersion("eblzujbsulpeilykqyjso").withServers(Arrays.asList("gvfhsohasdx"))
                .withMachineArmIds(Arrays.asList("lsstlommxuskyhnwyxh")).withSpringBootVersion("euggigfiii")
                .withStaticContentLocations(Arrays.asList("wvvajfkbtmjftir"))
                .withLastModifiedTime(OffsetDateTime.parse("2022-12-02T09:28:24.094Z")))
            .create();
    }

    /*
     * x-ms-original-file:
     * specification/offazurespringboot/resource-manager/Microsoft.OffAzureSpringBoot/preview/2024-04-01-preview/
     * examples/springbootapps_CreateOrUpdate_MinimumSet_Gen.json
     */
    /**
     * Sample code: springbootapps_CreateOrUpdate_MinimumSet_Gen.
     * 
     * @param manager Entry point to SpringAppDiscoveryManager.
     */
    public static void springbootappsCreateOrUpdateMinimumSetGen(
        com.azure.resourcemanager.springappdiscovery.SpringAppDiscoveryManager manager) {
        manager.springbootapps().define("ofjeesoahqtnovlbuvflyknpbhcpeqqhekntvqxyemuwbcqnuxjgfhsf")
            .withExistingSpringbootsite("rgspringbootapps", "pdfosfhtemfsaglvwjdyqlyeipucrd").create();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridkubernetes.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.hybridkubernetes.fluent.models.ConnectedClusterPatchProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Object containing updates for patch operations. */
@Fluent
public final class ConnectedClusterPatch {
    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * Describes the connected cluster resource properties that can be updated during PATCH operation.
     */
    @JsonProperty(value = "properties")
    private ConnectedClusterPatchProperties innerProperties;

    /** Creates an instance of ConnectedClusterPatch class. */
    public ConnectedClusterPatch() {
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the ConnectedClusterPatch object itself.
     */
    public ConnectedClusterPatch withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: Describes the connected cluster resource properties that can be updated during
     * PATCH operation.
     *
     * @return the innerProperties value.
     */
    private ConnectedClusterPatchProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the distribution property: Represents the distribution of the connected cluster.
     *
     * @return the distribution value.
     */
    public String distribution() {
        return this.innerProperties() == null ? null : this.innerProperties().distribution();
    }

    /**
     * Set the distribution property: Represents the distribution of the connected cluster.
     *
     * @param distribution the distribution value to set.
     * @return the ConnectedClusterPatch object itself.
     */
    public ConnectedClusterPatch withDistribution(String distribution) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedClusterPatchProperties();
        }
        this.innerProperties().withDistribution(distribution);
        return this;
    }

    /**
     * Get the distributionVersion property: Represents the Kubernetes distribution version on this connected cluster.
     *
     * @return the distributionVersion value.
     */
    public String distributionVersion() {
        return this.innerProperties() == null ? null : this.innerProperties().distributionVersion();
    }

    /**
     * Set the distributionVersion property: Represents the Kubernetes distribution version on this connected cluster.
     *
     * @param distributionVersion the distributionVersion value to set.
     * @return the ConnectedClusterPatch object itself.
     */
    public ConnectedClusterPatch withDistributionVersion(String distributionVersion) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedClusterPatchProperties();
        }
        this.innerProperties().withDistributionVersion(distributionVersion);
        return this;
    }

    /**
     * Get the azureHybridBenefit property: Indicates whether Azure Hybrid Benefit is opted in.
     *
     * @return the azureHybridBenefit value.
     */
    public AzureHybridBenefit azureHybridBenefit() {
        return this.innerProperties() == null ? null : this.innerProperties().azureHybridBenefit();
    }

    /**
     * Set the azureHybridBenefit property: Indicates whether Azure Hybrid Benefit is opted in.
     *
     * @param azureHybridBenefit the azureHybridBenefit value to set.
     * @return the ConnectedClusterPatch object itself.
     */
    public ConnectedClusterPatch withAzureHybridBenefit(AzureHybridBenefit azureHybridBenefit) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ConnectedClusterPatchProperties();
        }
        this.innerProperties().withAzureHybridBenefit(azureHybridBenefit);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

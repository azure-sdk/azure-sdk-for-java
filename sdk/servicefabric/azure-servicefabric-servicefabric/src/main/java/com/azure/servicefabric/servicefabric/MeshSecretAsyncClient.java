// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.servicefabric.servicefabric;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.servicefabric.servicefabric.implementation.MeshSecretsImpl;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous ServiceFabricClientAPIsClient type. */
@ServiceClient(builder = MeshSecretClientBuilder.class, isAsync = true)
public final class MeshSecretAsyncClient {
    @Generated private final MeshSecretsImpl serviceClient;

    /**
     * Initializes an instance of MeshSecretAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    MeshSecretAsyncClient(MeshSecretsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Creates a Secret resource with the specified name, description and properties. If Secret resource with the same
     * name exists, then it is updated with the specified description and properties. Once created, the kind and
     * contentType of a secret resource cannot be updated.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     properties: {
     *         description: String
     *         status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *         statusDetails: String
     *         contentType: String
     *     }
     *     name: String
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     properties: {
     *         description: String
     *         status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *         statusDetails: String
     *         contentType: String
     *     }
     *     name: String
     * }
     * }</pre>
     *
     * @param secretResourceName The name of the secret resource.
     * @param secretResourceDescription Description for creating a secret resource.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return this type describes a secret resource along with {@link Response} on successful completion of {@link
     *     Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createOrUpdateWithResponse(
            String secretResourceName, BinaryData secretResourceDescription, RequestOptions requestOptions) {
        return this.serviceClient.createOrUpdateWithResponseAsync(
                secretResourceName, secretResourceDescription, requestOptions);
    }

    /**
     * Gets the information about the Secret resource with the given name. The information include the description and
     * other properties of the Secret.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     properties: {
     *         description: String
     *         status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *         statusDetails: String
     *         contentType: String
     *     }
     *     name: String
     * }
     * }</pre>
     *
     * @param secretResourceName The name of the secret resource.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the information about the Secret resource with the given name along with {@link Response} on successful
     *     completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getWithResponse(String secretResourceName, RequestOptions requestOptions) {
        return this.serviceClient.getWithResponseAsync(secretResourceName, requestOptions);
    }

    /**
     * Deletes the specified Secret resource and all of its named values.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * @param secretResourceName The name of the secret resource.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteWithResponse(String secretResourceName, RequestOptions requestOptions) {
        return this.serviceClient.deleteWithResponseAsync(secretResourceName, requestOptions);
    }

    /**
     * Gets the information about all secret resources in a given resource group. The information include the
     * description and other properties of the Secret.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     continuationToken: String
     *     items: [
     *         {
     *             properties: {
     *                 description: String
     *                 status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *                 statusDetails: String
     *                 contentType: String
     *             }
     *             name: String
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the information about all secret resources in a given resource group along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.listWithResponseAsync(requestOptions);
    }
}

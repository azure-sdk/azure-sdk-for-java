// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.servicefabric.servicefabric;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.servicefabric.servicefabric.implementation.MeshGatewaysImpl;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous ServiceFabricClientAPIsClient type. */
@ServiceClient(builder = MeshGatewayClientBuilder.class, isAsync = true)
public final class MeshGatewayAsyncClient {
    @Generated private final MeshGatewaysImpl serviceClient;

    /**
     * Initializes an instance of MeshGatewayAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    MeshGatewayAsyncClient(MeshGatewaysImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Creates a Gateway resource with the specified name, description and properties. If Gateway resource with the same
     * name exists, then it is updated with the specified description and properties. Use Gateway resource to provide
     * public connectivity to application services.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Request Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     name: String
     *     properties: {
     *         description: String
     *         sourceNetwork: {
     *             name: String
     *             endpointRefs: [
     *                 {
     *                     name: String
     *                 }
     *             ]
     *         }
     *         destinationNetwork: (recursive schema, see destinationNetwork above)
     *         tcp: [
     *             {
     *                 name: String
     *                 port: int
     *                 destination: {
     *                     applicationName: String
     *                     serviceName: String
     *                     endpointName: String
     *                 }
     *             }
     *         ]
     *         http: [
     *             {
     *                 name: String
     *                 port: int
     *                 hosts: [
     *                     {
     *                         name: String
     *                         routes: [
     *                             {
     *                                 name: String
     *                                 match: {
     *                                     path: {
     *                                         value: String
     *                                         rewrite: String
     *                                         type: String(prefix)
     *                                     }
     *                                     headers: [
     *                                         {
     *                                             name: String
     *                                             value: String
     *                                             type: String(exact)
     *                                         }
     *                                     ]
     *                                 }
     *                                 destination: (recursive schema, see destination above)
     *                             }
     *                         ]
     *                     }
     *                 ]
     *             }
     *         ]
     *         status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *         statusDetails: String
     *         ipAddress: String
     *     }
     * }
     * }</pre>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     name: String
     *     properties: {
     *         description: String
     *         sourceNetwork: {
     *             name: String
     *             endpointRefs: [
     *                 {
     *                     name: String
     *                 }
     *             ]
     *         }
     *         destinationNetwork: (recursive schema, see destinationNetwork above)
     *         tcp: [
     *             {
     *                 name: String
     *                 port: int
     *                 destination: {
     *                     applicationName: String
     *                     serviceName: String
     *                     endpointName: String
     *                 }
     *             }
     *         ]
     *         http: [
     *             {
     *                 name: String
     *                 port: int
     *                 hosts: [
     *                     {
     *                         name: String
     *                         routes: [
     *                             {
     *                                 name: String
     *                                 match: {
     *                                     path: {
     *                                         value: String
     *                                         rewrite: String
     *                                         type: String(prefix)
     *                                     }
     *                                     headers: [
     *                                         {
     *                                             name: String
     *                                             value: String
     *                                             type: String(exact)
     *                                         }
     *                                     ]
     *                                 }
     *                                 destination: (recursive schema, see destination above)
     *                             }
     *                         ]
     *                     }
     *                 ]
     *             }
     *         ]
     *         status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *         statusDetails: String
     *         ipAddress: String
     *     }
     * }
     * }</pre>
     *
     * @param gatewayResourceName The identity of the gateway.
     * @param gatewayResourceDescription Description for creating a Gateway resource.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return this type describes a gateway resource along with {@link Response} on successful completion of {@link
     *     Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createOrUpdateWithResponse(
            String gatewayResourceName, BinaryData gatewayResourceDescription, RequestOptions requestOptions) {
        return this.serviceClient.createOrUpdateWithResponseAsync(
                gatewayResourceName, gatewayResourceDescription, requestOptions);
    }

    /**
     * Gets the information about the Gateway resource with the given name. The information include the description and
     * other properties of the Gateway.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     name: String
     *     properties: {
     *         description: String
     *         sourceNetwork: {
     *             name: String
     *             endpointRefs: [
     *                 {
     *                     name: String
     *                 }
     *             ]
     *         }
     *         destinationNetwork: (recursive schema, see destinationNetwork above)
     *         tcp: [
     *             {
     *                 name: String
     *                 port: int
     *                 destination: {
     *                     applicationName: String
     *                     serviceName: String
     *                     endpointName: String
     *                 }
     *             }
     *         ]
     *         http: [
     *             {
     *                 name: String
     *                 port: int
     *                 hosts: [
     *                     {
     *                         name: String
     *                         routes: [
     *                             {
     *                                 name: String
     *                                 match: {
     *                                     path: {
     *                                         value: String
     *                                         rewrite: String
     *                                         type: String(prefix)
     *                                     }
     *                                     headers: [
     *                                         {
     *                                             name: String
     *                                             value: String
     *                                             type: String(exact)
     *                                         }
     *                                     ]
     *                                 }
     *                                 destination: (recursive schema, see destination above)
     *                             }
     *                         ]
     *                     }
     *                 ]
     *             }
     *         ]
     *         status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *         statusDetails: String
     *         ipAddress: String
     *     }
     * }
     * }</pre>
     *
     * @param gatewayResourceName The identity of the gateway.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the information about the Gateway resource with the given name along with {@link Response} on successful
     *     completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getWithResponse(String gatewayResourceName, RequestOptions requestOptions) {
        return this.serviceClient.getWithResponseAsync(gatewayResourceName, requestOptions);
    }

    /**
     * Deletes the Gateway resource identified by the name.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * @param gatewayResourceName The identity of the gateway.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteWithResponse(String gatewayResourceName, RequestOptions requestOptions) {
        return this.serviceClient.deleteWithResponseAsync(gatewayResourceName, requestOptions);
    }

    /**
     * Gets the information about all gateway resources in a given resource group. The information include the
     * description and other properties of the Gateway.
     *
     * <p><strong>Query Parameters</strong>
     *
     * <table border="1">
     *     <caption>Query Parameters</caption>
     *     <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     *     <tr><td>api-version</td><td>String</td><td>Yes</td><td>Api Version</td></tr>
     * </table>
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     continuationToken: String
     *     items: [
     *         {
     *             name: String
     *             properties: {
     *                 description: String
     *                 sourceNetwork: {
     *                     name: String
     *                     endpointRefs: [
     *                         {
     *                             name: String
     *                         }
     *                     ]
     *                 }
     *                 destinationNetwork: (recursive schema, see destinationNetwork above)
     *                 tcp: [
     *                     {
     *                         name: String
     *                         port: int
     *                         destination: {
     *                             applicationName: String
     *                             serviceName: String
     *                             endpointName: String
     *                         }
     *                     }
     *                 ]
     *                 http: [
     *                     {
     *                         name: String
     *                         port: int
     *                         hosts: [
     *                             {
     *                                 name: String
     *                                 routes: [
     *                                     {
     *                                         name: String
     *                                         match: {
     *                                             path: {
     *                                                 value: String
     *                                                 rewrite: String
     *                                                 type: String(prefix)
     *                                             }
     *                                             headers: [
     *                                                 {
     *                                                     name: String
     *                                                     value: String
     *                                                     type: String(exact)
     *                                                 }
     *                                             ]
     *                                         }
     *                                         destination: (recursive schema, see destination above)
     *                                     }
     *                                 ]
     *                             }
     *                         ]
     *                     }
     *                 ]
     *                 status: String(Unknown/Ready/Upgrading/Creating/Deleting/Failed)
     *                 statusDetails: String
     *                 ipAddress: String
     *             }
     *         }
     *     ]
     * }
     * }</pre>
     *
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the information about all gateway resources in a given resource group along with {@link Response} on
     *     successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.listWithResponseAsync(requestOptions);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.servicefabric.servicefabric.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.servicefabric.servicefabric.ServiceFabricClientAPIsClient;
import com.azure.servicefabric.servicefabric.ServiceFabricClientAPIsClientBuilder;
import com.azure.servicefabric.servicefabric.implementation.models.HostOptions;

public class StatelessService {
    public static void main(String[] args) {
        ServiceFabricClientAPIsClient serviceFabricClientAPIsClient =
                new ServiceFabricClientAPIsClientBuilder().host(HostOptions.HTTP_LOCALHOST19080).buildClient();
        // BEGIN:com.azure.servicefabric.servicefabric.generated.updateservice.statelessservice
        BinaryData ServiceUpdateDescription =
                BinaryData.fromString(
                        "{\"DefaultMoveCost\":\"High\",\"Flags\":\"1568\",\"PlacementConstraints\":\"Color==Red\",\"ScalingPolicies\":[{\"ScalingMechanism\":{\"Kind\":\"PartitionInstanceCount\",\"MaxInstanceCount\":6,\"MinInstanceCount\":4,\"ScaleIncrement\":2},\"ScalingTrigger\":{\"Kind\":\"AveragePartitionLoad\",\"LowerLoadThreshold\":\"0.500000\",\"MetricName\":\"servicefabric:/_CpuCores\",\"ScaleIntervalInSeconds\":900,\"UpperLoadThreshold\":\"0.800000\"}}],\"ServiceKind\":\"Stateless\"}");
        RequestOptions requestOptions = new RequestOptions();
        requestOptions.addQueryParam("api-version", "6.0");
        Response<Void> response =
                serviceFabricClientAPIsClient.updateServiceWithResponse(
                        "test~test1", ServiceUpdateDescription, requestOptions);
        // END:com.azure.servicefabric.servicefabric.generated.updateservice.statelessservice
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.servicefabric.servicefabric.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.servicefabric.servicefabric.MeshApplicationClient;
import com.azure.servicefabric.servicefabric.MeshApplicationClientBuilder;
import com.azure.servicefabric.servicefabric.implementation.models.HostOptions;

public class CreateOrUpdateMeshApplicationWithAutoScale {
    public static void main(String[] args) {
        MeshApplicationClient meshApplicationClient =
                new MeshApplicationClientBuilder().host(HostOptions.HTTP_LOCALHOST19080).buildClient();
        // BEGIN:com.azure.servicefabric.servicefabric.generated.meshapplicationcreateorupdate.createorupdatemeshapplicationwithautoscale
        BinaryData applicationResourceDescription =
                BinaryData.fromString(
                        "{\"name\":\"sampleApplication\",\"properties\":{\"description\":\"Service Fabric Mesh sample application.\",\"services\":[{\"name\":\"helloWorldService\",\"properties\":{\"description\":\"SeaBreeze Hello World Service.\",\"autoScalingPolicies\":[{\"name\":\"MyAutoScaleRule\",\"mechanism\":{\"kind\":\"AddRemoveReplica\",\"maxCount\":4,\"minCount\":1,\"scaleIncrement\":1},\"trigger\":{\"kind\":\"AverageLoad\",\"lowerLoadThreshold\":0.3,\"metric\":{\"name\":\"cpu\",\"kind\":\"Resource\"},\"scaleIntervalInSeconds\":3600,\"upperLoadThreshold\":0.8}}],\"codePackages\":[{\"name\":\"helloWorldCode\",\"endpoints\":[{\"name\":\"helloWorldListener\",\"port\":80}],\"image\":\"seabreeze/sbz-helloworld:1.0-alpine\",\"resources\":{\"requests\":{\"cpu\":1,\"memoryInGB\":1}}}],\"networkRefs\":[{\"name\":\"sampleNetwork\",\"endpointRefs\":[{\"name\":\"helloWorldListener\"}]}],\"osType\":\"Linux\",\"replicaCount\":1}}]}}");
        RequestOptions requestOptions = new RequestOptions();
        Response<BinaryData> response =
                meshApplicationClient.createOrUpdateWithResponse(
                        "sampleApplication", applicationResourceDescription, requestOptions);
        // END:com.azure.servicefabric.servicefabric.generated.meshapplicationcreateorupdate.createorupdatemeshapplicationwithautoscale
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.aodgv1.fluent.models.L2ConnectionInner;
import com.azure.resourcemanager.aodgv1.models.L2Connection;
import com.azure.resourcemanager.aodgv1.models.L2ConnectionsPropertiesProvisioningState;
import com.azure.resourcemanager.aodgv1.models.TagsObject;
import java.util.Collections;
import java.util.Map;

public final class L2ConnectionImpl implements L2Connection, L2Connection.Definition, L2Connection.Update {
    private L2ConnectionInner innerObject;

    private final com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public L2ConnectionsPropertiesProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String circuitId() {
        return this.innerModel().circuitId();
    }

    public String idPropertiesId() {
        return this.innerModel().idPropertiesId();
    }

    public String namePropertiesName() {
        return this.innerModel().namePropertiesName();
    }

    public int vlanId() {
        return this.innerModel().vlanId();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public L2ConnectionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.aodgv1.Aodgv1Manager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String l2ConnectionName;

    private TagsObject updateParameters;

    public L2ConnectionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public L2Connection create() {
        this.innerObject = serviceManager.serviceClient().getL2Connections().createOrUpdate(resourceGroupName,
            l2ConnectionName, this.innerModel(), Context.NONE);
        return this;
    }

    public L2Connection create(Context context) {
        this.innerObject = serviceManager.serviceClient().getL2Connections().createOrUpdate(resourceGroupName,
            l2ConnectionName, this.innerModel(), context);
        return this;
    }

    L2ConnectionImpl(String name, com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerObject = new L2ConnectionInner();
        this.serviceManager = serviceManager;
        this.l2ConnectionName = name;
    }

    public L2ConnectionImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public L2Connection apply() {
        this.innerObject = serviceManager.serviceClient().getL2Connections().updateTags(resourceGroupName,
            l2ConnectionName, updateParameters, Context.NONE);
        return this;
    }

    public L2Connection apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getL2Connections().updateTags(resourceGroupName,
            l2ConnectionName, updateParameters, context);
        return this;
    }

    L2ConnectionImpl(L2ConnectionInner innerObject, com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.l2ConnectionName = Utils.getValueFromIdByName(innerObject.id(), "l2Connections");
    }

    public L2Connection refresh() {
        this.innerObject = serviceManager.serviceClient().getL2Connections()
            .getByResourceGroupWithResponse(resourceGroupName, l2ConnectionName, Context.NONE).getValue();
        return this;
    }

    public L2Connection refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getL2Connections()
            .getByResourceGroupWithResponse(resourceGroupName, l2ConnectionName, context).getValue();
        return this;
    }

    public L2ConnectionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public L2ConnectionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public L2ConnectionImpl withIdPropertiesId(String idPropertiesId) {
        this.innerModel().withIdPropertiesId(idPropertiesId);
        return this;
    }

    public L2ConnectionImpl withNamePropertiesName(String namePropertiesName) {
        this.innerModel().withNamePropertiesName(namePropertiesName);
        return this;
    }

    public L2ConnectionImpl withVlanId(int vlanId) {
        this.innerModel().withVlanId(vlanId);
        return this;
    }

    public L2ConnectionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of L2Connections.
 */
public interface L2Connections {
    /**
     * Gets the specified L2 connection in a specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l2ConnectionName L2 Connection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified L2 connection in a specified resource group along with {@link Response}.
     */
    Response<L2Connection> getByResourceGroupWithResponse(String resourceGroupName, String l2ConnectionName,
        Context context);

    /**
     * Gets the specified L2 connection in a specified resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l2ConnectionName L2 Connection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified L2 connection in a specified resource group.
     */
    L2Connection getByResourceGroup(String resourceGroupName, String l2ConnectionName);

    /**
     * Deletes a specified L2 Connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l2ConnectionName L2 Connection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String l2ConnectionName);

    /**
     * Deletes a specified L2 Connection resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param l2ConnectionName L2 Connection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String l2ConnectionName, Context context);

    /**
     * Returns a list of L2 Connections attached to an orbital gateway.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for an API service call that lists L2 Connections as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<L2Connection> listByResourceGroup(String resourceGroupName);

    /**
     * Returns a list of L2 Connections attached to an orbital gateway.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param skiptoken An opaque string that the resource provider uses to skip over previously-returned results. This
     * is used when a previous list operation call returned a partial result. If a previous response contains a nextLink
     * element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to
     * use for subsequent calls.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for an API service call that lists L2 Connections as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<L2Connection> listByResourceGroup(String resourceGroupName, String skiptoken, Context context);

    /**
     * Returns a list of L2 Connections attached to a subscription.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for an API service call that lists L2 Connections as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<L2Connection> list();

    /**
     * Returns a list of L2 Connections attached to a subscription.
     * 
     * @param skiptoken An opaque string that the resource provider uses to skip over previously-returned results. This
     * is used when a previous list operation call returned a partial result. If a previous response contains a nextLink
     * element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to
     * use for subsequent calls.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return response for an API service call that lists L2 Connections as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<L2Connection> list(String skiptoken, Context context);

    /**
     * Gets the specified L2 connection in a specified resource group.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified L2 connection in a specified resource group along with {@link Response}.
     */
    L2Connection getById(String id);

    /**
     * Gets the specified L2 connection in a specified resource group.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified L2 connection in a specified resource group along with {@link Response}.
     */
    Response<L2Connection> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a specified L2 Connection resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a specified L2 Connection resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new L2Connection resource.
     * 
     * @param name resource name.
     * @return the first stage of the new L2Connection definition.
     */
    L2Connection.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.aodgv1.fluent.models.EdgeSiteInner;
import com.azure.resourcemanager.aodgv1.models.EdgeSite;
import com.azure.resourcemanager.aodgv1.models.ResourceIdListResultValueItem;
import com.azure.resourcemanager.aodgv1.models.TagsObject;
import java.util.Collections;
import java.util.Map;

public final class EdgeSiteImpl implements EdgeSite, EdgeSite.Definition, EdgeSite.Update {
    private EdgeSiteInner innerObject;

    private final com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String idPropertiesId() {
        return this.innerModel().idPropertiesId();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public EdgeSiteInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.aodgv1.Aodgv1Manager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String edgeSiteName;

    private TagsObject updateParameters;

    public EdgeSiteImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public EdgeSite create() {
        this.innerObject = serviceManager.serviceClient().getEdgeSites()
            .createOrUpdateWithResponse(resourceGroupName, edgeSiteName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public EdgeSite create(Context context) {
        this.innerObject = serviceManager.serviceClient().getEdgeSites()
            .createOrUpdateWithResponse(resourceGroupName, edgeSiteName, this.innerModel(), context).getValue();
        return this;
    }

    EdgeSiteImpl(String name, com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerObject = new EdgeSiteInner();
        this.serviceManager = serviceManager;
        this.edgeSiteName = name;
    }

    public EdgeSiteImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public EdgeSite apply() {
        this.innerObject = serviceManager.serviceClient().getEdgeSites()
            .updateTagsWithResponse(resourceGroupName, edgeSiteName, updateParameters, Context.NONE).getValue();
        return this;
    }

    public EdgeSite apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getEdgeSites()
            .updateTagsWithResponse(resourceGroupName, edgeSiteName, updateParameters, context).getValue();
        return this;
    }

    EdgeSiteImpl(EdgeSiteInner innerObject, com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.edgeSiteName = Utils.getValueFromIdByName(innerObject.id(), "edgeSites");
    }

    public EdgeSite refresh() {
        this.innerObject = serviceManager.serviceClient().getEdgeSites()
            .getByResourceGroupWithResponse(resourceGroupName, edgeSiteName, Context.NONE).getValue();
        return this;
    }

    public EdgeSite refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getEdgeSites()
            .getByResourceGroupWithResponse(resourceGroupName, edgeSiteName, context).getValue();
        return this;
    }

    public PagedIterable<ResourceIdListResultValueItem> listL2Connections() {
        return serviceManager.edgeSites().listL2Connections(resourceGroupName, edgeSiteName);
    }

    public PagedIterable<ResourceIdListResultValueItem> listL2Connections(Context context) {
        return serviceManager.edgeSites().listL2Connections(resourceGroupName, edgeSiteName, context);
    }

    public EdgeSiteImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public EdgeSiteImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public EdgeSiteImpl withIdPropertiesId(String idPropertiesId) {
        this.innerModel().withIdPropertiesId(idPropertiesId);
        return this;
    }

    public EdgeSiteImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.aodgv1.fluent.models.GroundStationsPropertiesGlobalCommunicationsSite;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * List of ground station resource properties.
 */
@Fluent
public class GroundStationsProperties {
    /*
     * City of ground station.
     */
    @JsonProperty(value = "city")
    private String city;

    /*
     * Ground station capabilities.
     */
    @JsonProperty(value = "capabilities", required = true)
    private List<Capability> capabilities;

    /*
     * Ground station provider name.
     */
    @JsonProperty(value = "providerName")
    private String providerName;

    /*
     * Longitude of the ground station in decimal degrees.
     */
    @JsonProperty(value = "longitudeDegrees")
    private Float longitudeDegrees;

    /*
     * Latitude of the ground station in decimal degrees.
     */
    @JsonProperty(value = "latitudeDegrees")
    private Float latitudeDegrees;

    /*
     * Altitude of the ground station.
     */
    @JsonProperty(value = "altitudeMeters")
    private Float altitudeMeters;

    /*
     * Release Status of a ground station.
     */
    @JsonProperty(value = "releaseMode", access = JsonProperty.Access.WRITE_ONLY)
    private ReleaseMode releaseMode;

    /*
     * A reference to Azure Orbital Digital Ground site.
     */
    @JsonProperty(value = "globalCommunicationsSite", required = true)
    private GroundStationsPropertiesGlobalCommunicationsSite innerGlobalCommunicationsSite
        = new GroundStationsPropertiesGlobalCommunicationsSite();

    /**
     * Creates an instance of GroundStationsProperties class.
     */
    public GroundStationsProperties() {
    }

    /**
     * Get the city property: City of ground station.
     * 
     * @return the city value.
     */
    public String city() {
        return this.city;
    }

    /**
     * Set the city property: City of ground station.
     * 
     * @param city the city value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withCity(String city) {
        this.city = city;
        return this;
    }

    /**
     * Get the capabilities property: Ground station capabilities.
     * 
     * @return the capabilities value.
     */
    public List<Capability> capabilities() {
        return this.capabilities;
    }

    /**
     * Set the capabilities property: Ground station capabilities.
     * 
     * @param capabilities the capabilities value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withCapabilities(List<Capability> capabilities) {
        this.capabilities = capabilities;
        return this;
    }

    /**
     * Get the providerName property: Ground station provider name.
     * 
     * @return the providerName value.
     */
    public String providerName() {
        return this.providerName;
    }

    /**
     * Set the providerName property: Ground station provider name.
     * 
     * @param providerName the providerName value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withProviderName(String providerName) {
        this.providerName = providerName;
        return this;
    }

    /**
     * Get the longitudeDegrees property: Longitude of the ground station in decimal degrees.
     * 
     * @return the longitudeDegrees value.
     */
    public Float longitudeDegrees() {
        return this.longitudeDegrees;
    }

    /**
     * Set the longitudeDegrees property: Longitude of the ground station in decimal degrees.
     * 
     * @param longitudeDegrees the longitudeDegrees value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withLongitudeDegrees(Float longitudeDegrees) {
        this.longitudeDegrees = longitudeDegrees;
        return this;
    }

    /**
     * Get the latitudeDegrees property: Latitude of the ground station in decimal degrees.
     * 
     * @return the latitudeDegrees value.
     */
    public Float latitudeDegrees() {
        return this.latitudeDegrees;
    }

    /**
     * Set the latitudeDegrees property: Latitude of the ground station in decimal degrees.
     * 
     * @param latitudeDegrees the latitudeDegrees value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withLatitudeDegrees(Float latitudeDegrees) {
        this.latitudeDegrees = latitudeDegrees;
        return this;
    }

    /**
     * Get the altitudeMeters property: Altitude of the ground station.
     * 
     * @return the altitudeMeters value.
     */
    public Float altitudeMeters() {
        return this.altitudeMeters;
    }

    /**
     * Set the altitudeMeters property: Altitude of the ground station.
     * 
     * @param altitudeMeters the altitudeMeters value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withAltitudeMeters(Float altitudeMeters) {
        this.altitudeMeters = altitudeMeters;
        return this;
    }

    /**
     * Get the releaseMode property: Release Status of a ground station.
     * 
     * @return the releaseMode value.
     */
    public ReleaseMode releaseMode() {
        return this.releaseMode;
    }

    /**
     * Get the innerGlobalCommunicationsSite property: A reference to Azure Orbital Digital Ground site.
     * 
     * @return the innerGlobalCommunicationsSite value.
     */
    private GroundStationsPropertiesGlobalCommunicationsSite innerGlobalCommunicationsSite() {
        return this.innerGlobalCommunicationsSite;
    }

    /**
     * Get the id property: The Azure Orbital Digital Ground site's resource ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.innerGlobalCommunicationsSite() == null ? null : this.innerGlobalCommunicationsSite().id();
    }

    /**
     * Set the id property: The Azure Orbital Digital Ground site's resource ID.
     * 
     * @param id the id value to set.
     * @return the GroundStationsProperties object itself.
     */
    public GroundStationsProperties withId(String id) {
        if (this.innerGlobalCommunicationsSite() == null) {
            this.innerGlobalCommunicationsSite = new GroundStationsPropertiesGlobalCommunicationsSite();
        }
        this.innerGlobalCommunicationsSite().withId(id);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (capabilities() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property capabilities in model GroundStationsProperties"));
        }
        if (innerGlobalCommunicationsSite() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property innerGlobalCommunicationsSite in model GroundStationsProperties"));
        } else {
            innerGlobalCommunicationsSite().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(GroundStationsProperties.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.aodgv1.fluent.models.GroundStationInner;
import com.azure.resourcemanager.aodgv1.models.Capability;
import com.azure.resourcemanager.aodgv1.models.GroundStation;
import com.azure.resourcemanager.aodgv1.models.ReleaseMode;
import com.azure.resourcemanager.aodgv1.models.ResourceIdListResultValueItem;
import com.azure.resourcemanager.aodgv1.models.TagsObject;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class GroundStationImpl implements GroundStation, GroundStation.Definition, GroundStation.Update {
    private GroundStationInner innerObject;

    private final com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String city() {
        return this.innerModel().city();
    }

    public List<Capability> capabilities() {
        List<Capability> inner = this.innerModel().capabilities();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String providerName() {
        return this.innerModel().providerName();
    }

    public Float longitudeDegrees() {
        return this.innerModel().longitudeDegrees();
    }

    public Float latitudeDegrees() {
        return this.innerModel().latitudeDegrees();
    }

    public Float altitudeMeters() {
        return this.innerModel().altitudeMeters();
    }

    public ReleaseMode releaseMode() {
        return this.innerModel().releaseMode();
    }

    public String idPropertiesId() {
        return this.innerModel().idPropertiesId();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public GroundStationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.aodgv1.Aodgv1Manager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String groundStationName;

    private TagsObject updateParameters;

    public GroundStationImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public GroundStation create() {
        this.innerObject = serviceManager.serviceClient().getGroundStations()
            .createOrUpdateWithResponse(resourceGroupName, groundStationName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public GroundStation create(Context context) {
        this.innerObject = serviceManager.serviceClient().getGroundStations()
            .createOrUpdateWithResponse(resourceGroupName, groundStationName, this.innerModel(), context).getValue();
        return this;
    }

    GroundStationImpl(String name, com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerObject = new GroundStationInner();
        this.serviceManager = serviceManager;
        this.groundStationName = name;
    }

    public GroundStationImpl update() {
        this.updateParameters = new TagsObject();
        return this;
    }

    public GroundStation apply() {
        this.innerObject = serviceManager.serviceClient().getGroundStations()
            .updateTagsWithResponse(resourceGroupName, groundStationName, updateParameters, Context.NONE).getValue();
        return this;
    }

    public GroundStation apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getGroundStations()
            .updateTagsWithResponse(resourceGroupName, groundStationName, updateParameters, context).getValue();
        return this;
    }

    GroundStationImpl(GroundStationInner innerObject, com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.groundStationName = Utils.getValueFromIdByName(innerObject.id(), "groundStations");
    }

    public GroundStation refresh() {
        this.innerObject = serviceManager.serviceClient().getGroundStations()
            .getByResourceGroupWithResponse(resourceGroupName, groundStationName, Context.NONE).getValue();
        return this;
    }

    public GroundStation refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getGroundStations()
            .getByResourceGroupWithResponse(resourceGroupName, groundStationName, context).getValue();
        return this;
    }

    public PagedIterable<ResourceIdListResultValueItem> listL2Connections() {
        return serviceManager.groundStations().listL2Connections(resourceGroupName, groundStationName);
    }

    public PagedIterable<ResourceIdListResultValueItem> listL2Connections(Context context) {
        return serviceManager.groundStations().listL2Connections(resourceGroupName, groundStationName, context);
    }

    public GroundStationImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public GroundStationImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public GroundStationImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public GroundStationImpl withCity(String city) {
        this.innerModel().withCity(city);
        return this;
    }

    public GroundStationImpl withCapabilities(List<Capability> capabilities) {
        this.innerModel().withCapabilities(capabilities);
        return this;
    }

    public GroundStationImpl withProviderName(String providerName) {
        this.innerModel().withProviderName(providerName);
        return this;
    }

    public GroundStationImpl withLongitudeDegrees(Float longitudeDegrees) {
        this.innerModel().withLongitudeDegrees(longitudeDegrees);
        return this;
    }

    public GroundStationImpl withLatitudeDegrees(Float latitudeDegrees) {
        this.innerModel().withLatitudeDegrees(latitudeDegrees);
        return this;
    }

    public GroundStationImpl withAltitudeMeters(Float altitudeMeters) {
        this.innerModel().withAltitudeMeters(altitudeMeters);
        return this;
    }

    public GroundStationImpl withIdPropertiesId(String idPropertiesId) {
        this.innerModel().withIdPropertiesId(idPropertiesId);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.aodgv1.models.Capability;
import com.azure.resourcemanager.aodgv1.models.GroundStationsProperties;
import java.util.List;

/**
 * Properties of the Ground Station.
 */
@Fluent
public final class GroundStationProperties extends GroundStationsProperties {
    /**
     * Creates an instance of GroundStationProperties class.
     */
    public GroundStationProperties() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withCity(String city) {
        super.withCity(city);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withCapabilities(List<Capability> capabilities) {
        super.withCapabilities(capabilities);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withProviderName(String providerName) {
        super.withProviderName(providerName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withLongitudeDegrees(Float longitudeDegrees) {
        super.withLongitudeDegrees(longitudeDegrees);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withLatitudeDegrees(Float latitudeDegrees) {
        super.withLatitudeDegrees(latitudeDegrees);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withAltitudeMeters(Float altitudeMeters) {
        super.withAltitudeMeters(altitudeMeters);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationProperties withId(String id) {
        super.withId(id);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

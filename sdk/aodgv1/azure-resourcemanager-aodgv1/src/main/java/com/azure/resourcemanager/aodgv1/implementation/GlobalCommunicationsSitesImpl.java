// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.aodgv1.fluent.GlobalCommunicationsSitesClient;
import com.azure.resourcemanager.aodgv1.fluent.models.GlobalCommunicationsSiteInner;
import com.azure.resourcemanager.aodgv1.models.GlobalCommunicationsSite;
import com.azure.resourcemanager.aodgv1.models.GlobalCommunicationsSites;

public final class GlobalCommunicationsSitesImpl implements GlobalCommunicationsSites {
    private static final ClientLogger LOGGER = new ClientLogger(GlobalCommunicationsSitesImpl.class);

    private final GlobalCommunicationsSitesClient innerClient;

    private final com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager;

    public GlobalCommunicationsSitesImpl(GlobalCommunicationsSitesClient innerClient,
        com.azure.resourcemanager.aodgv1.Aodgv1Manager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<GlobalCommunicationsSite> list() {
        PagedIterable<GlobalCommunicationsSiteInner> inner = this.serviceClient().list();
        return Utils.mapPage(inner, inner1 -> new GlobalCommunicationsSiteImpl(inner1, this.manager()));
    }

    public PagedIterable<GlobalCommunicationsSite> list(Context context) {
        PagedIterable<GlobalCommunicationsSiteInner> inner = this.serviceClient().list(context);
        return Utils.mapPage(inner, inner1 -> new GlobalCommunicationsSiteImpl(inner1, this.manager()));
    }

    public Response<GlobalCommunicationsSite> getWithResponse(String globalCommunicationsSiteName, Context context) {
        Response<GlobalCommunicationsSiteInner> inner
            = this.serviceClient().getWithResponse(globalCommunicationsSiteName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new GlobalCommunicationsSiteImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public GlobalCommunicationsSite get(String globalCommunicationsSiteName) {
        GlobalCommunicationsSiteInner inner = this.serviceClient().get(globalCommunicationsSiteName);
        if (inner != null) {
            return new GlobalCommunicationsSiteImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private GlobalCommunicationsSitesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.aodgv1.Aodgv1Manager manager() {
        return this.serviceManager;
    }
}

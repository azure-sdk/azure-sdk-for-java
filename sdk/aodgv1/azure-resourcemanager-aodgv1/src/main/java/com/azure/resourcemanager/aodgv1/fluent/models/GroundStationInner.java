// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.aodgv1.models.Capability;
import com.azure.resourcemanager.aodgv1.models.ReleaseMode;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * Ground Station contains one or more antennas.
 */
@Fluent
public final class GroundStationInner extends Resource {
    /*
     * Properties of the Ground Station.
     */
    @JsonProperty(value = "properties")
    private GroundStationProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of GroundStationInner class.
     */
    public GroundStationInner() {
    }

    /**
     * Get the innerProperties property: Properties of the Ground Station.
     * 
     * @return the innerProperties value.
     */
    private GroundStationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroundStationInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the city property: City of ground station.
     * 
     * @return the city value.
     */
    public String city() {
        return this.innerProperties() == null ? null : this.innerProperties().city();
    }

    /**
     * Set the city property: City of ground station.
     * 
     * @param city the city value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withCity(String city) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withCity(city);
        return this;
    }

    /**
     * Get the capabilities property: Ground station capabilities.
     * 
     * @return the capabilities value.
     */
    public List<Capability> capabilities() {
        return this.innerProperties() == null ? null : this.innerProperties().capabilities();
    }

    /**
     * Set the capabilities property: Ground station capabilities.
     * 
     * @param capabilities the capabilities value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withCapabilities(List<Capability> capabilities) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withCapabilities(capabilities);
        return this;
    }

    /**
     * Get the providerName property: Ground station provider name.
     * 
     * @return the providerName value.
     */
    public String providerName() {
        return this.innerProperties() == null ? null : this.innerProperties().providerName();
    }

    /**
     * Set the providerName property: Ground station provider name.
     * 
     * @param providerName the providerName value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withProviderName(String providerName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withProviderName(providerName);
        return this;
    }

    /**
     * Get the longitudeDegrees property: Longitude of the ground station in decimal degrees.
     * 
     * @return the longitudeDegrees value.
     */
    public Float longitudeDegrees() {
        return this.innerProperties() == null ? null : this.innerProperties().longitudeDegrees();
    }

    /**
     * Set the longitudeDegrees property: Longitude of the ground station in decimal degrees.
     * 
     * @param longitudeDegrees the longitudeDegrees value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withLongitudeDegrees(Float longitudeDegrees) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withLongitudeDegrees(longitudeDegrees);
        return this;
    }

    /**
     * Get the latitudeDegrees property: Latitude of the ground station in decimal degrees.
     * 
     * @return the latitudeDegrees value.
     */
    public Float latitudeDegrees() {
        return this.innerProperties() == null ? null : this.innerProperties().latitudeDegrees();
    }

    /**
     * Set the latitudeDegrees property: Latitude of the ground station in decimal degrees.
     * 
     * @param latitudeDegrees the latitudeDegrees value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withLatitudeDegrees(Float latitudeDegrees) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withLatitudeDegrees(latitudeDegrees);
        return this;
    }

    /**
     * Get the altitudeMeters property: Altitude of the ground station.
     * 
     * @return the altitudeMeters value.
     */
    public Float altitudeMeters() {
        return this.innerProperties() == null ? null : this.innerProperties().altitudeMeters();
    }

    /**
     * Set the altitudeMeters property: Altitude of the ground station.
     * 
     * @param altitudeMeters the altitudeMeters value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withAltitudeMeters(Float altitudeMeters) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withAltitudeMeters(altitudeMeters);
        return this;
    }

    /**
     * Get the releaseMode property: Release Status of a ground station.
     * 
     * @return the releaseMode value.
     */
    public ReleaseMode releaseMode() {
        return this.innerProperties() == null ? null : this.innerProperties().releaseMode();
    }

    /**
     * Get the id property: The Azure Orbital Digital Ground site's resource ID.
     * 
     * @return the id value.
     */
    public String idPropertiesId() {
        return this.innerProperties() == null ? null : this.innerProperties().id();
    }

    /**
     * Set the id property: The Azure Orbital Digital Ground site's resource ID.
     * 
     * @param id the id value to set.
     * @return the GroundStationInner object itself.
     */
    public GroundStationInner withIdPropertiesId(String id) {
        if (this.innerProperties() == null) {
            this.innerProperties = new GroundStationProperties();
        }
        this.innerProperties().withId(id);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

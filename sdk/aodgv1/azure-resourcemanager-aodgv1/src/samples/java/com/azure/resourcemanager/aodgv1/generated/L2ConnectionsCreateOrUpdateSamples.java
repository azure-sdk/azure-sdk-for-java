// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.generated;

import java.util.HashMap;
import java.util.Map;

/**
 * Samples for L2Connections CreateOrUpdate.
 */
public final class L2ConnectionsCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/aodgv1/resource-manager/Microsoft.Orbital/preview/2024-03-01-preview/examples/L2ConnectionCreate.
     * json
     */
    /**
     * Sample code: Create L2 Connection.
     * 
     * @param manager Entry point to Aodgv1Manager.
     */
    public static void createL2Connection(com.azure.resourcemanager.aodgv1.Aodgv1Manager manager) {
        manager.l2Connections().define("connection1").withRegion("westus").withExistingResourceGroup("rg1")
            .withIdPropertiesId(
                "/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/resourceGroups/rg1/providers/Microsoft.Orbital/edgeSites/es1")
            .withNamePropertiesName("customerName-SiteName-01").withVlanId(200)
            .withTags(mapOf("tag1", "value1", "tag2", "value2")).create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

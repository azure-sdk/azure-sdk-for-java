// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.aodgv1.generated;

import com.azure.resourcemanager.aodgv1.models.L2Connection;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for L2Connections UpdateTags.
 */
public final class L2ConnectionsUpdateTagsSamples {
    /*
     * x-ms-original-file:
     * specification/aodgv1/resource-manager/Microsoft.Orbital/preview/2024-03-01-preview/examples/L2ConnectionUpdateTag
     * .json
     */
    /**
     * Sample code: Update L2 Connection tags.
     * 
     * @param manager Entry point to Aodgv1Manager.
     */
    public static void updateL2ConnectionTags(com.azure.resourcemanager.aodgv1.Aodgv1Manager manager) {
        L2Connection resource = manager.l2Connections()
            .getByResourceGroupWithResponse("rg1", "connection1", com.azure.core.util.Context.NONE).getValue();
        resource.update().withTags(mapOf("tag1", "value1", "tag2", "value2")).apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

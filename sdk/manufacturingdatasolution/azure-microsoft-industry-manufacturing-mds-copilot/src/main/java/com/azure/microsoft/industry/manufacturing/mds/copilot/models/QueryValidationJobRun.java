// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Validate Test Response.
 */
@Immutable
public final class QueryValidationJobRun implements JsonSerializable<QueryValidationJobRun> {
    /*
     * The unique identifier of the test.
     */
    @Generated
    private String testId;

    /*
     * Date of test run
     */
    @Generated
    private final String createdAt;

    /*
     * Test owner
     */
    @Generated
    private final String createdBy;

    /**
     * Creates an instance of QueryValidationJobRun class.
     * 
     * @param createdAt the createdAt value to set.
     * @param createdBy the createdBy value to set.
     */
    @Generated
    private QueryValidationJobRun(String createdAt, String createdBy) {
        this.createdAt = createdAt;
        this.createdBy = createdBy;
    }

    /**
     * Get the testId property: The unique identifier of the test.
     * 
     * @return the testId value.
     */
    @Generated
    public String getTestId() {
        return this.testId;
    }

    /**
     * Get the createdAt property: Date of test run.
     * 
     * @return the createdAt value.
     */
    @Generated
    public String getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Get the createdBy property: Test owner.
     * 
     * @return the createdBy value.
     */
    @Generated
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("createdAt", this.createdAt);
        jsonWriter.writeStringField("createdBy", this.createdBy);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QueryValidationJobRun from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QueryValidationJobRun if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the QueryValidationJobRun.
     */
    @Generated
    public static QueryValidationJobRun fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String testId = null;
            String createdAt = null;
            String createdBy = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("testId".equals(fieldName)) {
                    testId = reader.getString();
                } else if ("createdAt".equals(fieldName)) {
                    createdAt = reader.getString();
                } else if ("createdBy".equals(fieldName)) {
                    createdBy = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            QueryValidationJobRun deserializedQueryValidationJobRun = new QueryValidationJobRun(createdAt, createdBy);
            deserializedQueryValidationJobRun.testId = testId;

            return deserializedQueryValidationJobRun;
        });
    }
}

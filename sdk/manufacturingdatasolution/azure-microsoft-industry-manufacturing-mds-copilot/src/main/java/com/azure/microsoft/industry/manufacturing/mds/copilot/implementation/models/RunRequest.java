// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot.implementation.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.microsoft.industry.manufacturing.mds.copilot.models.QueryValidationTestCase;
import java.io.IOException;
import java.util.List;

/**
 * The RunRequest model.
 */
@Immutable
public final class RunRequest implements JsonSerializable<RunRequest> {
    /*
     * The test cases for validation.
     */
    @Generated
    private final List<QueryValidationTestCase> testCases;

    /*
     * run in the conversation context
     */
    @Generated
    private final boolean runInConversationContext;

    /**
     * Creates an instance of RunRequest class.
     * 
     * @param testCases the testCases value to set.
     * @param runInConversationContext the runInConversationContext value to set.
     */
    @Generated
    public RunRequest(List<QueryValidationTestCase> testCases, boolean runInConversationContext) {
        this.testCases = testCases;
        this.runInConversationContext = runInConversationContext;
    }

    /**
     * Get the testCases property: The test cases for validation.
     * 
     * @return the testCases value.
     */
    @Generated
    public List<QueryValidationTestCase> getTestCases() {
        return this.testCases;
    }

    /**
     * Get the runInConversationContext property: run in the conversation context.
     * 
     * @return the runInConversationContext value.
     */
    @Generated
    public boolean isRunInConversationContext() {
        return this.runInConversationContext;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("testCases", this.testCases, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeBooleanField("runInConversationContext", this.runInConversationContext);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunRequest if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunRequest.
     */
    @Generated
    public static RunRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            List<QueryValidationTestCase> testCases = null;
            boolean runInConversationContext = false;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("testCases".equals(fieldName)) {
                    testCases = reader.readArray(reader1 -> QueryValidationTestCase.fromJson(reader1));
                } else if ("runInConversationContext".equals(fieldName)) {
                    runInConversationContext = reader.getBoolean();
                } else {
                    reader.skipChildren();
                }
            }
            return new RunRequest(testCases, runInConversationContext);
        });
    }
}

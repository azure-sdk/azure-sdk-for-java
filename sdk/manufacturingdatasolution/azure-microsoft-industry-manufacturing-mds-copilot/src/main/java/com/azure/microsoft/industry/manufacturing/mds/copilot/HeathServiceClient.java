// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.microsoft.industry.manufacturing.mds.copilot.implementation.HeathServiceClientsImpl;
import com.azure.microsoft.industry.manufacturing.mds.copilot.models.CopilotHealth;

/**
 * Initializes a new instance of the synchronous CopilotServiceClient type.
 */
@ServiceClient(builder = CopilotServiceClientBuilder.class)
public final class HeathServiceClient {
    @Generated
    private final HeathServiceClientsImpl serviceClient;

    /**
     * Initializes an instance of HeathServiceClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    HeathServiceClient(HeathServiceClientsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Get the health status of the service.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     message: String (Required)
     *     operationStatus: String(Accepted/InProgress/TransientFailure/Succeeded/Failed/Deleting/Canceled/Unknown/Skipped) (Required)
     *     errorMessage (Required): [
     *         String (Required)
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the health status of the service along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getServiceHealthWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getServiceHealthWithResponse(requestOptions);
    }

    /**
     * Get the health status of the service.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the health status of the service.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public CopilotHealth getServiceHealth() {
        // Generated convenience method for getServiceHealthWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getServiceHealthWithResponse(requestOptions).getValue().toObject(CopilotHealth.class);
    }
}

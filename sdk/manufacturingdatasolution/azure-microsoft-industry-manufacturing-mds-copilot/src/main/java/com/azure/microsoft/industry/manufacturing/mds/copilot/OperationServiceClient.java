// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.microsoft.industry.manufacturing.mds.copilot.implementation.OperationServiceClientsImpl;
import com.azure.microsoft.industry.manufacturing.mds.copilot.models.GetOperationResultResponse;

/**
 * Initializes a new instance of the synchronous CopilotServiceClient type.
 */
@ServiceClient(builder = CopilotServiceClientBuilder.class)
public final class OperationServiceClient {
    @Generated
    private final OperationServiceClientsImpl serviceClient;

    /**
     * Initializes an instance of OperationServiceClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    OperationServiceClient(OperationServiceClientsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Get operation progress.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     status: String(Accepted/InProgress/TransientFailure/Succeeded/Failed/Deleting/Canceled/Unknown/Skipped) (Required)
     *     errorMessage (Required): [
     *         String (Required)
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param id The operation id.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return operation progress along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getOperationResultWithResponse(String id, RequestOptions requestOptions) {
        return this.serviceClient.getOperationResultWithResponse(id, requestOptions);
    }

    /**
     * Get operation progress.
     * 
     * @param id The operation id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation progress.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GetOperationResultResponse getOperationResult(String id) {
        // Generated convenience method for getOperationResultWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getOperationResultWithResponse(id, requestOptions).getValue().toObject(GetOperationResultResponse.class);
    }
}

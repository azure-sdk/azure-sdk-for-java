// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The GetResponse model.
 */
@Immutable
public final class GetResponse implements JsonSerializable<GetResponse> {
    /*
     * Id for the alias
     */
    @Generated
    private String id;

    /*
     * Key for the alias
     */
    @Generated
    private final String name;

    /*
     * List of aliases
     */
    @Generated
    private final List<String> aliases;

    /*
     * Indicates if the alias is enabled
     */
    @Generated
    private Choice isCustom;

    /**
     * Creates an instance of GetResponse class.
     * 
     * @param name the name value to set.
     * @param aliases the aliases value to set.
     */
    @Generated
    private GetResponse(String name, List<String> aliases) {
        this.name = name;
        this.aliases = aliases;
    }

    /**
     * Get the id property: Id for the alias.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the name property: Key for the alias.
     * 
     * @return the name value.
     */
    @Generated
    public String getName() {
        return this.name;
    }

    /**
     * Get the aliases property: List of aliases.
     * 
     * @return the aliases value.
     */
    @Generated
    public List<String> getAliases() {
        return this.aliases;
    }

    /**
     * Get the isCustom property: Indicates if the alias is enabled.
     * 
     * @return the isCustom value.
     */
    @Generated
    public Choice getIsCustom() {
        return this.isCustom;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeArrayField("aliases", this.aliases, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GetResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GetResponse if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the GetResponse.
     */
    @Generated
    public static GetResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            String name = null;
            List<String> aliases = null;
            Choice isCustom = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    name = reader.getString();
                } else if ("aliases".equals(fieldName)) {
                    aliases = reader.readArray(reader1 -> reader1.getString());
                } else if ("isCustom".equals(fieldName)) {
                    isCustom = Choice.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            GetResponse deserializedGetResponse = new GetResponse(name, aliases);
            deserializedGetResponse.id = id;
            deserializedGetResponse.isCustom = isCustom;

            return deserializedGetResponse;
        });
    }
}

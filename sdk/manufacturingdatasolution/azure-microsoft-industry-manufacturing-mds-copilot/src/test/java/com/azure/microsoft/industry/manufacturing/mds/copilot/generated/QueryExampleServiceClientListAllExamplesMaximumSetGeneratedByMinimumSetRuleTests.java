// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot.generated;

import com.azure.core.http.rest.PagedIterable;
import com.azure.microsoft.industry.manufacturing.mds.copilot.models.ExampleQueryRequest;
import com.azure.microsoft.industry.manufacturing.mds.copilot.models.SampleQuery;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class QueryExampleServiceClientListAllExamplesMaximumSetGeneratedByMinimumSetRuleTests
    extends CopilotServiceClientTestBase {
    @Test
    @Disabled
    public void testQueryExampleServiceClientListAllExamplesMaximumSetGeneratedByMinimumSetRuleTests() {
        // method invocation
        PagedIterable<ExampleQueryRequest> response = queryExampleServiceClient.listAllExamples(null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        ExampleQueryRequest firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "exampleId"
        Assertions.assertEquals("ExampleId001", firstItem.getExampleId());
        // verify property "userQuestion"
        Assertions.assertEquals("uwpgzamavsxpnsyzbr", firstItem.getUserQuestion());
        // verify property "linkedInstructions"
        List<String> firstItemLinkedInstructions = firstItem.getLinkedInstructions();
        Assertions.assertEquals("m", firstItemLinkedInstructions.iterator().next());
        // verify property "sampleQuery"
        SampleQuery firstItemSampleQuery = firstItem.getSampleQuery();
        Assertions.assertNotNull(firstItemSampleQuery);
        Assertions.assertEquals("ogbmnwxqhijezumthwew", firstItemSampleQuery.getLanguage());
        Assertions.assertEquals("imhty", firstItemSampleQuery.getQuery());
    }
}

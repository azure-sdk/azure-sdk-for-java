// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.utils.MockTokenCredential;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.microsoft.industry.manufacturing.mds.copilot.AliasesServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.CopilotServiceClientBuilder;
import com.azure.microsoft.industry.manufacturing.mds.copilot.HeathServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.InstructionsInstructionServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.OperationServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.QueryExampleServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.QueryServiceClient;

class CopilotServiceClientTestBase extends TestProxyTestBase {
    protected InstructionsInstructionServiceClient instructionsInstructionServiceClient;

    protected QueryServiceClient queryServiceClient;

    protected OperationServiceClient operationServiceClient;

    protected QueryExampleServiceClient queryExampleServiceClient;

    protected AliasesServiceClient aliasesServiceClient;

    protected HeathServiceClient heathServiceClient;

    @Override
    protected void beforeTest() {
        CopilotServiceClientBuilder instructionsInstructionServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            instructionsInstructionServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            instructionsInstructionServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            instructionsInstructionServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        instructionsInstructionServiceClient
            = instructionsInstructionServiceClientbuilder.buildInstructionsInstructionServiceClient();

        CopilotServiceClientBuilder queryServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            queryServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            queryServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            queryServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        queryServiceClient = queryServiceClientbuilder.buildQueryServiceClient();

        CopilotServiceClientBuilder operationServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            operationServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            operationServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            operationServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        operationServiceClient = operationServiceClientbuilder.buildOperationServiceClient();

        CopilotServiceClientBuilder queryExampleServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            queryExampleServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            queryExampleServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            queryExampleServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        queryExampleServiceClient = queryExampleServiceClientbuilder.buildQueryExampleServiceClient();

        CopilotServiceClientBuilder aliasesServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            aliasesServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            aliasesServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            aliasesServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        aliasesServiceClient = aliasesServiceClientbuilder.buildAliasesServiceClient();

        CopilotServiceClientBuilder heathServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            heathServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            heathServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            heathServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        heathServiceClient = heathServiceClientbuilder.buildHeathServiceClient();

    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.microsoft.industry.manufacturing.mds.copilot.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.utils.MockTokenCredential;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.microsoft.industry.manufacturing.mds.copilot.AliasDictionaryAliasesClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.CopilotServiceClientBuilder;
import com.azure.microsoft.industry.manufacturing.mds.copilot.ExampleQueryServiceExampleQueryOperationsClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.FeedbackServiceFeedbackClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.HealthServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.InstructionsInstructionsClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.OperationStatusOperationProgressClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.QueryServiceClient;
import com.azure.microsoft.industry.manufacturing.mds.copilot.ValidateQueryServiceValidateQueryApiClient;

class CopilotServiceClientTestBase extends TestProxyTestBase {
    protected QueryServiceClient queryServiceClient;

    protected OperationStatusOperationProgressClient operationStatusOperationProgressClient;

    protected InstructionsInstructionsClient instructionsInstructionsClient;

    protected ExampleQueryServiceExampleQueryOperationsClient exampleQueryServiceExampleQueryOperationsClient;

    protected AliasDictionaryAliasesClient aliasDictionaryAliasesClient;

    protected HealthServiceClient healthServiceClient;

    protected ValidateQueryServiceValidateQueryApiClient validateQueryServiceValidateQueryApiClient;

    protected FeedbackServiceFeedbackClient feedbackServiceFeedbackClient;

    @Override
    protected void beforeTest() {
        CopilotServiceClientBuilder queryServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            queryServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            queryServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            queryServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        queryServiceClient = queryServiceClientbuilder.buildQueryServiceClient();

        CopilotServiceClientBuilder operationStatusOperationProgressClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            operationStatusOperationProgressClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            operationStatusOperationProgressClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            operationStatusOperationProgressClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        operationStatusOperationProgressClient
            = operationStatusOperationProgressClientbuilder.buildOperationStatusOperationProgressClient();

        CopilotServiceClientBuilder instructionsInstructionsClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            instructionsInstructionsClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            instructionsInstructionsClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            instructionsInstructionsClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        instructionsInstructionsClient = instructionsInstructionsClientbuilder.buildInstructionsInstructionsClient();

        CopilotServiceClientBuilder exampleQueryServiceExampleQueryOperationsClientbuilder
            = new CopilotServiceClientBuilder()
                .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
                .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            exampleQueryServiceExampleQueryOperationsClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            exampleQueryServiceExampleQueryOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            exampleQueryServiceExampleQueryOperationsClientbuilder
                .credential(new DefaultAzureCredentialBuilder().build());
        }
        exampleQueryServiceExampleQueryOperationsClient = exampleQueryServiceExampleQueryOperationsClientbuilder
            .buildExampleQueryServiceExampleQueryOperationsClient();

        CopilotServiceClientBuilder aliasDictionaryAliasesClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            aliasDictionaryAliasesClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            aliasDictionaryAliasesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            aliasDictionaryAliasesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        aliasDictionaryAliasesClient = aliasDictionaryAliasesClientbuilder.buildAliasDictionaryAliasesClient();

        CopilotServiceClientBuilder healthServiceClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            healthServiceClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            healthServiceClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            healthServiceClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        healthServiceClient = healthServiceClientbuilder.buildHealthServiceClient();

        CopilotServiceClientBuilder validateQueryServiceValidateQueryApiClientbuilder
            = new CopilotServiceClientBuilder()
                .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
                .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            validateQueryServiceValidateQueryApiClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            validateQueryServiceValidateQueryApiClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            validateQueryServiceValidateQueryApiClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        validateQueryServiceValidateQueryApiClient
            = validateQueryServiceValidateQueryApiClientbuilder.buildValidateQueryServiceValidateQueryApiClient();

        CopilotServiceClientBuilder feedbackServiceFeedbackClientbuilder = new CopilotServiceClientBuilder()
            .mdsUniqueId(Configuration.getGlobalConfiguration().get("MDSUNIQUEID", "mdsuniqueid"))
            .location(Configuration.getGlobalConfiguration().get("LOCATION", "mds.azure.com"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            feedbackServiceFeedbackClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            feedbackServiceFeedbackClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            feedbackServiceFeedbackClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        feedbackServiceFeedbackClient = feedbackServiceFeedbackClientbuilder.buildFeedbackServiceFeedbackClient();

    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.datafactory.fluent.models.PowerBILinkedServiceTypeProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;
import java.util.Map;

/** Power BI linked service. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("PowerBI")
@Fluent
public final class PowerBILinkedService extends LinkedService {
    /*
     * Power BI linked service properties.
     */
    @JsonProperty(value = "typeProperties", required = true)
    private PowerBILinkedServiceTypeProperties innerTypeProperties = new PowerBILinkedServiceTypeProperties();

    /** Creates an instance of PowerBILinkedService class. */
    public PowerBILinkedService() {
    }

    /**
     * Get the innerTypeProperties property: Power BI linked service properties.
     *
     * @return the innerTypeProperties value.
     */
    private PowerBILinkedServiceTypeProperties innerTypeProperties() {
        return this.innerTypeProperties;
    }

    /** {@inheritDoc} */
    @Override
    public PowerBILinkedService withConnectVia(IntegrationRuntimeReference connectVia) {
        super.withConnectVia(connectVia);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PowerBILinkedService withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PowerBILinkedService withParameters(Map<String, ParameterSpecification> parameters) {
        super.withParameters(parameters);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public PowerBILinkedService withAnnotations(List<Object> annotations) {
        super.withAnnotations(annotations);
        return this;
    }

    /**
     * Get the workspaceId property: The Power BI workspace id.
     *
     * @return the workspaceId value.
     */
    public String workspaceId() {
        return this.innerTypeProperties() == null ? null : this.innerTypeProperties().workspaceId();
    }

    /**
     * Set the workspaceId property: The Power BI workspace id.
     *
     * @param workspaceId the workspaceId value to set.
     * @return the PowerBILinkedService object itself.
     */
    public PowerBILinkedService withWorkspaceId(String workspaceId) {
        if (this.innerTypeProperties() == null) {
            this.innerTypeProperties = new PowerBILinkedServiceTypeProperties();
        }
        this.innerTypeProperties().withWorkspaceId(workspaceId);
        return this;
    }

    /**
     * Get the tenantId property: The tenant id to which the Power BI workspace belongs.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerTypeProperties() == null ? null : this.innerTypeProperties().tenantId();
    }

    /**
     * Set the tenantId property: The tenant id to which the Power BI workspace belongs.
     *
     * @param tenantId the tenantId value to set.
     * @return the PowerBILinkedService object itself.
     */
    public PowerBILinkedService withTenantId(String tenantId) {
        if (this.innerTypeProperties() == null) {
            this.innerTypeProperties = new PowerBILinkedServiceTypeProperties();
        }
        this.innerTypeProperties().withTenantId(tenantId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerTypeProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerTypeProperties in model PowerBILinkedService"));
        } else {
            innerTypeProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(PowerBILinkedService.class);
}

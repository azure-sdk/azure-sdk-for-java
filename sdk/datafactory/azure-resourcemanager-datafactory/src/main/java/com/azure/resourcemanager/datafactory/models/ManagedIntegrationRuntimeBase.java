// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datafactory.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.datafactory.fluent.models.ManagedIntegrationRuntimeTypeProperties;
import com.azure.resourcemanager.datafactory.fluent.models.ManagedVirtualNetworkReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Managed integration runtime base. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "type",
    defaultImpl = ManagedIntegrationRuntimeBase.class)
@JsonTypeName("ManagedIntegrationRuntimeBase")
@JsonSubTypes({@JsonSubTypes.Type(name = "Managed", value = ManagedIntegrationRuntime.class)})
@Fluent
public class ManagedIntegrationRuntimeBase extends IntegrationRuntime {
    /*
     * Managed integration runtime properties.
     */
    @JsonProperty(value = "typeProperties", required = true)
    private ManagedIntegrationRuntimeTypeProperties innerTypeProperties = new ManagedIntegrationRuntimeTypeProperties();

    /*
     * Managed integration runtime managed virtual network.
     */
    @JsonProperty(value = "managedVirtualNetwork")
    private ManagedVirtualNetworkReference innerManagedVirtualNetwork;

    /**
     * Get the innerTypeProperties property: Managed integration runtime properties.
     *
     * @return the innerTypeProperties value.
     */
    private ManagedIntegrationRuntimeTypeProperties innerTypeProperties() {
        return this.innerTypeProperties;
    }

    /**
     * Get the innerManagedVirtualNetwork property: Managed integration runtime managed virtual network.
     *
     * @return the innerManagedVirtualNetwork value.
     */
    private ManagedVirtualNetworkReference innerManagedVirtualNetwork() {
        return this.innerManagedVirtualNetwork;
    }

    /** {@inheritDoc} */
    @Override
    public ManagedIntegrationRuntimeBase withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * Get the computeProperties property: The compute resource for managed integration runtime.
     *
     * @return the computeProperties value.
     */
    public IntegrationRuntimeComputeProperties computeProperties() {
        return this.innerTypeProperties() == null ? null : this.innerTypeProperties().computeProperties();
    }

    /**
     * Set the computeProperties property: The compute resource for managed integration runtime.
     *
     * @param computeProperties the computeProperties value to set.
     * @return the ManagedIntegrationRuntimeBase object itself.
     */
    public ManagedIntegrationRuntimeBase withComputeProperties(IntegrationRuntimeComputeProperties computeProperties) {
        if (this.innerTypeProperties() == null) {
            this.innerTypeProperties = new ManagedIntegrationRuntimeTypeProperties();
        }
        this.innerTypeProperties().withComputeProperties(computeProperties);
        return this;
    }

    /**
     * Get the ssisProperties property: SSIS properties for managed integration runtime.
     *
     * @return the ssisProperties value.
     */
    public IntegrationRuntimeSsisProperties ssisProperties() {
        return this.innerTypeProperties() == null ? null : this.innerTypeProperties().ssisProperties();
    }

    /**
     * Set the ssisProperties property: SSIS properties for managed integration runtime.
     *
     * @param ssisProperties the ssisProperties value to set.
     * @return the ManagedIntegrationRuntimeBase object itself.
     */
    public ManagedIntegrationRuntimeBase withSsisProperties(IntegrationRuntimeSsisProperties ssisProperties) {
        if (this.innerTypeProperties() == null) {
            this.innerTypeProperties = new ManagedIntegrationRuntimeTypeProperties();
        }
        this.innerTypeProperties().withSsisProperties(ssisProperties);
        return this;
    }

    /**
     * Get the customerVirtualNetwork property: The name of virtual network to which Azure-SSIS integration runtime will
     * join.
     *
     * @return the customerVirtualNetwork value.
     */
    public IntegrationRuntimeCustomerVirtualNetwork customerVirtualNetwork() {
        return this.innerTypeProperties() == null ? null : this.innerTypeProperties().customerVirtualNetwork();
    }

    /**
     * Set the customerVirtualNetwork property: The name of virtual network to which Azure-SSIS integration runtime will
     * join.
     *
     * @param customerVirtualNetwork the customerVirtualNetwork value to set.
     * @return the ManagedIntegrationRuntimeBase object itself.
     */
    public ManagedIntegrationRuntimeBase withCustomerVirtualNetwork(
        IntegrationRuntimeCustomerVirtualNetwork customerVirtualNetwork) {
        if (this.innerTypeProperties() == null) {
            this.innerTypeProperties = new ManagedIntegrationRuntimeTypeProperties();
        }
        this.innerTypeProperties().withCustomerVirtualNetwork(customerVirtualNetwork);
        return this;
    }

    /**
     * Get the type property: Managed Virtual Network reference type.
     *
     * @return the type value.
     */
    public ManagedVirtualNetworkReferenceType typeManagedVirtualNetworkType() {
        return this.innerManagedVirtualNetwork() == null ? null : this.innerManagedVirtualNetwork().type();
    }

    /**
     * Set the type property: Managed Virtual Network reference type.
     *
     * @param type the type value to set.
     * @return the ManagedIntegrationRuntimeBase object itself.
     */
    public ManagedIntegrationRuntimeBase withTypeManagedVirtualNetworkType(ManagedVirtualNetworkReferenceType type) {
        if (this.innerManagedVirtualNetwork() == null) {
            this.innerManagedVirtualNetwork = new ManagedVirtualNetworkReference();
        }
        this.innerManagedVirtualNetwork().withType(type);
        return this;
    }

    /**
     * Get the referenceName property: Reference ManagedVirtualNetwork name.
     *
     * @return the referenceName value.
     */
    public String referenceName() {
        return this.innerManagedVirtualNetwork() == null ? null : this.innerManagedVirtualNetwork().referenceName();
    }

    /**
     * Set the referenceName property: Reference ManagedVirtualNetwork name.
     *
     * @param referenceName the referenceName value to set.
     * @return the ManagedIntegrationRuntimeBase object itself.
     */
    public ManagedIntegrationRuntimeBase withReferenceName(String referenceName) {
        if (this.innerManagedVirtualNetwork() == null) {
            this.innerManagedVirtualNetwork = new ManagedVirtualNetworkReference();
        }
        this.innerManagedVirtualNetwork().withReferenceName(referenceName);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerTypeProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerTypeProperties in model ManagedIntegrationRuntimeBase"));
        } else {
            innerTypeProperties().validate();
        }
        if (innerManagedVirtualNetwork() != null) {
            innerManagedVirtualNetwork().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ManagedIntegrationRuntimeBase.class);
}

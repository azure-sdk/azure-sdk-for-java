// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.MongoMIRoleAssignmentResourceInner;

/**
 * An immutable client-side representation of MongoMIRoleAssignmentResource.
 */
public interface MongoMIRoleAssignmentResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the roleDefinitionId property: The unique identifier for the associated Role Definition.
     * 
     * @return the roleDefinitionId value.
     */
    String roleDefinitionId();

    /**
     * Gets the scope property: The data plane resource path for which access is being granted through this MongoMI Role
     * Assignment.
     * 
     * @return the scope value.
     */
    String scope();

    /**
     * Gets the principalId property: The unique identifier for the associated AAD principal in the AAD graph to which
     * access is being granted through this MongoMI Role Assignment. Tenant ID for the principal is inferred using the
     * tenant associated with the subscription.
     * 
     * @return the principalId value.
     */
    String principalId();

    /**
     * Gets the provisioningState property: Provisioning state of the resource.
     * 
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.cosmos.generated.fluent.models.MongoMIRoleAssignmentResourceInner
     * object.
     * 
     * @return the inner object.
     */
    MongoMIRoleAssignmentResourceInner innerModel();

    /**
     * The entirety of the MongoMIRoleAssignmentResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The MongoMIRoleAssignmentResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the MongoMIRoleAssignmentResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param accountName Cosmos DB database account name.
             * @return the next definition stage.
             */
            WithCreate withExistingDatabaseAccount(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithRoleDefinitionId, DefinitionStages.WithScope,
            DefinitionStages.WithPrincipalId {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            MongoMIRoleAssignmentResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            MongoMIRoleAssignmentResource create(Context context);
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource definition allowing to specify roleDefinitionId.
         */
        interface WithRoleDefinitionId {
            /**
             * Specifies the roleDefinitionId property: The unique identifier for the associated Role Definition..
             * 
             * @param roleDefinitionId The unique identifier for the associated Role Definition.
             * @return the next definition stage.
             */
            WithCreate withRoleDefinitionId(String roleDefinitionId);
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource definition allowing to specify scope.
         */
        interface WithScope {
            /**
             * Specifies the scope property: The data plane resource path for which access is being granted through this
             * MongoMI Role Assignment..
             * 
             * @param scope The data plane resource path for which access is being granted through this MongoMI Role
             * Assignment.
             * @return the next definition stage.
             */
            WithCreate withScope(String scope);
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource definition allowing to specify principalId.
         */
        interface WithPrincipalId {
            /**
             * Specifies the principalId property: The unique identifier for the associated AAD principal in the AAD
             * graph to which access is being granted through this MongoMI Role Assignment. Tenant ID for the principal
             * is inferred using the tenant associated with the subscription..
             * 
             * @param principalId The unique identifier for the associated AAD principal in the AAD graph to which
             * access is being granted through this MongoMI Role Assignment. Tenant ID for the principal is inferred
             * using the tenant associated with the subscription.
             * @return the next definition stage.
             */
            WithCreate withPrincipalId(String principalId);
        }
    }

    /**
     * Begins update for the MongoMIRoleAssignmentResource resource.
     * 
     * @return the stage of resource update.
     */
    MongoMIRoleAssignmentResource.Update update();

    /**
     * The template for MongoMIRoleAssignmentResource update.
     */
    interface Update extends UpdateStages.WithRoleDefinitionId, UpdateStages.WithScope, UpdateStages.WithPrincipalId {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        MongoMIRoleAssignmentResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        MongoMIRoleAssignmentResource apply(Context context);
    }

    /**
     * The MongoMIRoleAssignmentResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the MongoMIRoleAssignmentResource update allowing to specify roleDefinitionId.
         */
        interface WithRoleDefinitionId {
            /**
             * Specifies the roleDefinitionId property: The unique identifier for the associated Role Definition..
             * 
             * @param roleDefinitionId The unique identifier for the associated Role Definition.
             * @return the next definition stage.
             */
            Update withRoleDefinitionId(String roleDefinitionId);
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource update allowing to specify scope.
         */
        interface WithScope {
            /**
             * Specifies the scope property: The data plane resource path for which access is being granted through this
             * MongoMI Role Assignment..
             * 
             * @param scope The data plane resource path for which access is being granted through this MongoMI Role
             * Assignment.
             * @return the next definition stage.
             */
            Update withScope(String scope);
        }

        /**
         * The stage of the MongoMIRoleAssignmentResource update allowing to specify principalId.
         */
        interface WithPrincipalId {
            /**
             * Specifies the principalId property: The unique identifier for the associated AAD principal in the AAD
             * graph to which access is being granted through this MongoMI Role Assignment. Tenant ID for the principal
             * is inferred using the tenant associated with the subscription..
             * 
             * @param principalId The unique identifier for the associated AAD principal in the AAD graph to which
             * access is being granted through this MongoMI Role Assignment. Tenant ID for the principal is inferred
             * using the tenant associated with the subscription.
             * @return the next definition stage.
             */
            Update withPrincipalId(String principalId);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    MongoMIRoleAssignmentResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    MongoMIRoleAssignmentResource refresh(Context context);
}

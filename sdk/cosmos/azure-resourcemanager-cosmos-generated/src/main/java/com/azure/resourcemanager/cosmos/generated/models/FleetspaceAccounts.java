// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of FleetspaceAccounts.
 */
public interface FleetspaceAccounts {
    /**
     * Lists all the fleetspaces accounts under a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
     * @param fleetspaceName Cosmos DB fleetspace name. Needs to be unique under a fleet.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List operation response, that contains the global database accounts and their properties as paginated
     * response with {@link PagedIterable}.
     */
    PagedIterable<FleetspaceAccountResource> list(String resourceGroupName, String fleetName, String fleetspaceName);

    /**
     * Lists all the fleetspaces accounts under a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
     * @param fleetspaceName Cosmos DB fleetspace name. Needs to be unique under a fleet.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List operation response, that contains the global database accounts and their properties as paginated
     * response with {@link PagedIterable}.
     */
    PagedIterable<FleetspaceAccountResource> list(String resourceGroupName, String fleetName, String fleetspaceName,
        Context context);

    /**
     * Retrieves the properties of an existing Azure Cosmos DB fleetspace account under a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
     * @param fleetspaceName Cosmos DB fleetspace name. Needs to be unique under a fleet.
     * @param fleetspaceAccountName Cosmos DB fleetspace account name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Fleetspace Account along with {@link Response}.
     */
    Response<FleetspaceAccountResource> getWithResponse(String resourceGroupName, String fleetName,
        String fleetspaceName, String fleetspaceAccountName, Context context);

    /**
     * Retrieves the properties of an existing Azure Cosmos DB fleetspace account under a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
     * @param fleetspaceName Cosmos DB fleetspace name. Needs to be unique under a fleet.
     * @param fleetspaceAccountName Cosmos DB fleetspace account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Fleetspace Account.
     */
    FleetspaceAccountResource get(String resourceGroupName, String fleetName, String fleetspaceName,
        String fleetspaceAccountName);

    /**
     * Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
     * @param fleetspaceName Cosmos DB fleetspace name. Needs to be unique under a fleet.
     * @param fleetspaceAccountName Cosmos DB fleetspace account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fleetName, String fleetspaceName, String fleetspaceAccountName);

    /**
     * Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
     * @param fleetspaceName Cosmos DB fleetspace name. Needs to be unique under a fleet.
     * @param fleetspaceAccountName Cosmos DB fleetspace account name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String fleetName, String fleetspaceName, String fleetspaceAccountName,
        Context context);

    /**
     * Retrieves the properties of an existing Azure Cosmos DB fleetspace account under a fleetspace.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Fleetspace Account along with {@link Response}.
     */
    FleetspaceAccountResource getById(String id);

    /**
     * Retrieves the properties of an existing Azure Cosmos DB fleetspace account under a fleetspace.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Fleetspace Account along with {@link Response}.
     */
    Response<FleetspaceAccountResource> getByIdWithResponse(String id, Context context);

    /**
     * Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new FleetspaceAccountResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new FleetspaceAccountResource definition.
     */
    FleetspaceAccountResource.DefinitionStages.Blank define(String name);
}

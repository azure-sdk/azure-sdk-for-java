// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.FleetAnalyticsResourceInner;

/**
 * An immutable client-side representation of FleetAnalyticsResource.
 */
public interface FleetAnalyticsResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: A provisioning state of the FleetAnalytics.
     * 
     * @return the provisioningState value.
     */
    Status provisioningState();

    /**
     * Gets the storageLocationType property: The type of the fleet analytics resource.
     * 
     * @return the storageLocationType value.
     */
    FleetAnalyticsPropertiesStorageLocationType storageLocationType();

    /**
     * Gets the storageLocationUri property: The unique identifier of the fleet analytics resource.
     * 
     * @return the storageLocationUri value.
     */
    String storageLocationUri();

    /**
     * Gets the inner com.azure.resourcemanager.cosmos.generated.fluent.models.FleetAnalyticsResourceInner object.
     * 
     * @return the inner object.
     */
    FleetAnalyticsResourceInner innerModel();

    /**
     * The entirety of the FleetAnalyticsResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The FleetAnalyticsResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the FleetAnalyticsResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the FleetAnalyticsResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, fleetName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param fleetName Cosmos DB fleet name. Needs to be unique under a subscription.
             * @return the next definition stage.
             */
            WithCreate withExistingFleet(String resourceGroupName, String fleetName);
        }

        /**
         * The stage of the FleetAnalyticsResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProvisioningState, DefinitionStages.WithStorageLocationType,
            DefinitionStages.WithStorageLocationUri {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            FleetAnalyticsResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            FleetAnalyticsResource create(Context context);
        }

        /**
         * The stage of the FleetAnalyticsResource definition allowing to specify provisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: A provisioning state of the FleetAnalytics..
             * 
             * @param provisioningState A provisioning state of the FleetAnalytics.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(Status provisioningState);
        }

        /**
         * The stage of the FleetAnalyticsResource definition allowing to specify storageLocationType.
         */
        interface WithStorageLocationType {
            /**
             * Specifies the storageLocationType property: The type of the fleet analytics resource..
             * 
             * @param storageLocationType The type of the fleet analytics resource.
             * @return the next definition stage.
             */
            WithCreate withStorageLocationType(FleetAnalyticsPropertiesStorageLocationType storageLocationType);
        }

        /**
         * The stage of the FleetAnalyticsResource definition allowing to specify storageLocationUri.
         */
        interface WithStorageLocationUri {
            /**
             * Specifies the storageLocationUri property: The unique identifier of the fleet analytics resource..
             * 
             * @param storageLocationUri The unique identifier of the fleet analytics resource.
             * @return the next definition stage.
             */
            WithCreate withStorageLocationUri(String storageLocationUri);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    FleetAnalyticsResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    FleetAnalyticsResource refresh(Context context);
}

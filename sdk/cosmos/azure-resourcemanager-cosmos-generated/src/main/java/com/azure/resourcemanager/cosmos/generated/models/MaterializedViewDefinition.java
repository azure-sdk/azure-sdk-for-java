// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Materialized View definition for the container. */
@Fluent
public final class MaterializedViewDefinition {
    /*
     * Name of the Cosmos DB SQL source container
     */
    @JsonProperty(value = "sourceCollectionId", required = true)
    private String sourceCollectionId;

    /*
     * Definition of the Cosmos DB SQL Materialized view
     */
    @JsonProperty(value = "definition", required = true)
    private String definition;

    /**
     * Get the sourceCollectionId property: Name of the Cosmos DB SQL source container.
     *
     * @return the sourceCollectionId value.
     */
    public String sourceCollectionId() {
        return this.sourceCollectionId;
    }

    /**
     * Set the sourceCollectionId property: Name of the Cosmos DB SQL source container.
     *
     * @param sourceCollectionId the sourceCollectionId value to set.
     * @return the MaterializedViewDefinition object itself.
     */
    public MaterializedViewDefinition withSourceCollectionId(String sourceCollectionId) {
        this.sourceCollectionId = sourceCollectionId;
        return this;
    }

    /**
     * Get the definition property: Definition of the Cosmos DB SQL Materialized view.
     *
     * @return the definition value.
     */
    public String definition() {
        return this.definition;
    }

    /**
     * Set the definition property: Definition of the Cosmos DB SQL Materialized view.
     *
     * @param definition the definition value to set.
     * @return the MaterializedViewDefinition object itself.
     */
    public MaterializedViewDefinition withDefinition(String definition) {
        this.definition = definition;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sourceCollectionId() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property sourceCollectionId in model MaterializedViewDefinition"));
        }
        if (definition() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property definition in model MaterializedViewDefinition"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(MaterializedViewDefinition.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.DataCenterResourceAutoGeneratedInner;
import com.azure.resourcemanager.cosmos.generated.fluent.models.DataCenterResourceInner;
import com.azure.resourcemanager.cosmos.generated.models.DataCenterResourceAutoGenerated;
import com.azure.resourcemanager.cosmos.generated.models.DataCenterResourcePropertiesAutoGenerated;

public final class DataCenterResourceAutoGeneratedImpl
    implements DataCenterResourceAutoGenerated,
        DataCenterResourceAutoGenerated.Definition,
        DataCenterResourceAutoGenerated.Update {
    private DataCenterResourceAutoGeneratedInner innerObject;

    private final com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DataCenterResourcePropertiesAutoGenerated properties() {
        return this.innerModel().properties();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DataCenterResourceAutoGeneratedInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String clusterName;

    private String dataCenterName;

    private DataCenterResourceInner createBody;

    private DataCenterResourceInner updateBody;

    public DataCenterResourceAutoGeneratedImpl withExistingCassandraCluster(
        String resourceGroupName, String clusterName) {
        this.resourceGroupName = resourceGroupName;
        this.clusterName = clusterName;
        return this;
    }

    public DataCenterResourceAutoGenerated create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .createUpdate(resourceGroupName, clusterName, dataCenterName, createBody, Context.NONE);
        return this;
    }

    public DataCenterResourceAutoGenerated create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .createUpdate(resourceGroupName, clusterName, dataCenterName, createBody, context);
        return this;
    }

    DataCenterResourceAutoGeneratedImpl(
        String name, com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = new DataCenterResourceAutoGeneratedInner();
        this.serviceManager = serviceManager;
        this.dataCenterName = name;
        this.createBody = new DataCenterResourceInner();
    }

    public DataCenterResourceAutoGeneratedImpl update() {
        this.updateBody = new DataCenterResourceInner();
        return this;
    }

    public DataCenterResourceAutoGenerated apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .update(resourceGroupName, clusterName, dataCenterName, updateBody, Context.NONE);
        return this;
    }

    public DataCenterResourceAutoGenerated apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .update(resourceGroupName, clusterName, dataCenterName, updateBody, context);
        return this;
    }

    DataCenterResourceAutoGeneratedImpl(
        DataCenterResourceAutoGeneratedInner innerObject,
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.clusterName = Utils.getValueFromIdByName(innerObject.id(), "cassandraClusters");
        this.dataCenterName = Utils.getValueFromIdByName(innerObject.id(), "dataCenters");
    }

    public DataCenterResourceAutoGenerated refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .getWithResponse(resourceGroupName, clusterName, dataCenterName, Context.NONE)
                .getValue();
        return this;
    }

    public DataCenterResourceAutoGenerated refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCassandraDataCenters()
                .getWithResponse(resourceGroupName, clusterName, dataCenterName, context)
                .getValue();
        return this;
    }

    public DataCenterResourceAutoGeneratedImpl withProperties(DataCenterResourcePropertiesAutoGenerated properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.innerModel().withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

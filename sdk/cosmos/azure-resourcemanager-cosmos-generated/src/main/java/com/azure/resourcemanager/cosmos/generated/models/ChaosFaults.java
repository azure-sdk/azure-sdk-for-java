// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ChaosFaults.
 */
public interface ChaosFaults {
    /**
     * List Chaos Faults for CosmosDB account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return chaos Fault List Response as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ChaosFaultResource> list(String resourceGroupName, String accountName);

    /**
     * List Chaos Faults for CosmosDB account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return chaos Fault List Response as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ChaosFaultResource> list(String resourceGroupName, String accountName, Context context);

    /**
     * Get Chaos Fault for a CosmosdB account for a particular Chaos Fault.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param chaosFault The name of the ChaosFault.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return chaos Fault for a CosmosdB account for a particular Chaos Fault along with {@link Response}.
     */
    Response<ChaosFaultResource> getWithResponse(String resourceGroupName, String accountName, String chaosFault,
        Context context);

    /**
     * Get Chaos Fault for a CosmosdB account for a particular Chaos Fault.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param chaosFault The name of the ChaosFault.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return chaos Fault for a CosmosdB account for a particular Chaos Fault.
     */
    ChaosFaultResource get(String resourceGroupName, String accountName, String chaosFault);

    /**
     * Get Chaos Fault for a CosmosdB account for a particular Chaos Fault.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return chaos Fault for a CosmosdB account for a particular Chaos Fault along with {@link Response}.
     */
    ChaosFaultResource getById(String id);

    /**
     * Get Chaos Fault for a CosmosdB account for a particular Chaos Fault.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return chaos Fault for a CosmosdB account for a particular Chaos Fault along with {@link Response}.
     */
    Response<ChaosFaultResource> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ChaosFaultResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ChaosFaultResource definition.
     */
    ChaosFaultResource.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A CosmosDB Mongo vCore data source/sink details.
 */
@Fluent
public final class MongoVCoreSourceSinkDetails implements JsonSerializable<MongoVCoreSourceSinkDetails> {
    /*
     * The hostName property.
     */
    private String hostname;

    /*
     * URI of Azure KeyVault secret containing connection string.
     */
    private String connectionStringKeyVaultUri;

    /**
     * Creates an instance of MongoVCoreSourceSinkDetails class.
     */
    public MongoVCoreSourceSinkDetails() {
    }

    /**
     * Get the hostname property: The hostName property.
     * 
     * @return the hostname value.
     */
    public String hostname() {
        return this.hostname;
    }

    /**
     * Set the hostname property: The hostName property.
     * 
     * @param hostname the hostname value to set.
     * @return the MongoVCoreSourceSinkDetails object itself.
     */
    public MongoVCoreSourceSinkDetails withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Get the connectionStringKeyVaultUri property: URI of Azure KeyVault secret containing connection string.
     * 
     * @return the connectionStringKeyVaultUri value.
     */
    public String connectionStringKeyVaultUri() {
        return this.connectionStringKeyVaultUri;
    }

    /**
     * Set the connectionStringKeyVaultUri property: URI of Azure KeyVault secret containing connection string.
     * 
     * @param connectionStringKeyVaultUri the connectionStringKeyVaultUri value to set.
     * @return the MongoVCoreSourceSinkDetails object itself.
     */
    public MongoVCoreSourceSinkDetails withConnectionStringKeyVaultUri(String connectionStringKeyVaultUri) {
        this.connectionStringKeyVaultUri = connectionStringKeyVaultUri;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("hostName", this.hostname);
        jsonWriter.writeStringField("connectionStringKeyVaultUri", this.connectionStringKeyVaultUri);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MongoVCoreSourceSinkDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MongoVCoreSourceSinkDetails if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MongoVCoreSourceSinkDetails.
     */
    public static MongoVCoreSourceSinkDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MongoVCoreSourceSinkDetails deserializedMongoVCoreSourceSinkDetails = new MongoVCoreSourceSinkDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("hostName".equals(fieldName)) {
                    deserializedMongoVCoreSourceSinkDetails.hostname = reader.getString();
                } else if ("connectionStringKeyVaultUri".equals(fieldName)) {
                    deserializedMongoVCoreSourceSinkDetails.connectionStringKeyVaultUri = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMongoVCoreSourceSinkDetails;
        });
    }
}

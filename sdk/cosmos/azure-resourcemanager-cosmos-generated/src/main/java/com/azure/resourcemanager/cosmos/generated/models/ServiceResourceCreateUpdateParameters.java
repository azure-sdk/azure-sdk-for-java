// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.cosmos.generated.fluent.models.ServiceResourceCreateUpdateProperties;
import java.io.IOException;

/**
 * Parameters for Create or Update Request for ServiceResource.
 */
@Fluent
public final class ServiceResourceCreateUpdateParameters
    implements JsonSerializable<ServiceResourceCreateUpdateParameters> {
    /*
     * Properties in ServiceResourceCreateUpdateParameters.
     */
    private ServiceResourceCreateUpdateProperties innerProperties;

    /**
     * Creates an instance of ServiceResourceCreateUpdateParameters class.
     */
    public ServiceResourceCreateUpdateParameters() {
    }

    /**
     * Get the innerProperties property: Properties in ServiceResourceCreateUpdateParameters.
     * 
     * @return the innerProperties value.
     */
    private ServiceResourceCreateUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the instanceSize property: Instance type for the service.
     * 
     * @return the instanceSize value.
     */
    public ServiceSize instanceSize() {
        return this.innerProperties() == null ? null : this.innerProperties().instanceSize();
    }

    /**
     * Set the instanceSize property: Instance type for the service.
     * 
     * @param instanceSize the instanceSize value to set.
     * @return the ServiceResourceCreateUpdateParameters object itself.
     */
    public ServiceResourceCreateUpdateParameters withInstanceSize(ServiceSize instanceSize) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceResourceCreateUpdateProperties();
        }
        this.innerProperties().withInstanceSize(instanceSize);
        return this;
    }

    /**
     * Get the instanceCount property: Instance count for the service.
     * 
     * @return the instanceCount value.
     */
    public Integer instanceCount() {
        return this.innerProperties() == null ? null : this.innerProperties().instanceCount();
    }

    /**
     * Set the instanceCount property: Instance count for the service.
     * 
     * @param instanceCount the instanceCount value to set.
     * @return the ServiceResourceCreateUpdateParameters object itself.
     */
    public ServiceResourceCreateUpdateParameters withInstanceCount(Integer instanceCount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceResourceCreateUpdateProperties();
        }
        this.innerProperties().withInstanceCount(instanceCount);
        return this;
    }

    /**
     * Get the serviceType property: ServiceType for the service.
     * 
     * @return the serviceType value.
     */
    public ServiceType serviceType() {
        return this.innerProperties() == null ? null : this.innerProperties().serviceType();
    }

    /**
     * Set the serviceType property: ServiceType for the service.
     * 
     * @param serviceType the serviceType value to set.
     * @return the ServiceResourceCreateUpdateParameters object itself.
     */
    public ServiceResourceCreateUpdateParameters withServiceType(ServiceType serviceType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ServiceResourceCreateUpdateProperties();
        }
        this.innerProperties().withServiceType(serviceType);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ServiceResourceCreateUpdateParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ServiceResourceCreateUpdateParameters if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ServiceResourceCreateUpdateParameters.
     */
    public static ServiceResourceCreateUpdateParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ServiceResourceCreateUpdateParameters deserializedServiceResourceCreateUpdateParameters
                = new ServiceResourceCreateUpdateParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedServiceResourceCreateUpdateParameters.innerProperties
                        = ServiceResourceCreateUpdateProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedServiceResourceCreateUpdateParameters;
        });
    }
}

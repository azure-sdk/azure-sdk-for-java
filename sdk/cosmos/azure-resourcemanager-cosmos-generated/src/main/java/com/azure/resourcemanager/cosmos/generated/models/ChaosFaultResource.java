// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.ChaosFaultResourceInner;

/**
 * An immutable client-side representation of ChaosFaultResource.
 */
public interface ChaosFaultResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the action property: Indicates whether what action to take for the Chaos Fault.
     * 
     * @return the action value.
     */
    SupportedActions action();

    /**
     * Gets the region property: Region of the account where the Chaos Fault is to be enabled/disabled.
     * 
     * @return the region value.
     */
    String region();

    /**
     * Gets the databaseName property: Database name.
     * 
     * @return the databaseName value.
     */
    String databaseName();

    /**
     * Gets the containerName property: Container name.
     * 
     * @return the containerName value.
     */
    String containerName();

    /**
     * Gets the provisioningState property: A provisioning state of the Chaos Fault.
     * 
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.cosmos.generated.fluent.models.ChaosFaultResourceInner object.
     * 
     * @return the inner object.
     */
    ChaosFaultResourceInner innerModel();

    /**
     * The entirety of the ChaosFaultResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ChaosFaultResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ChaosFaultResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ChaosFaultResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param accountName Cosmos DB database account name.
             * @return the next definition stage.
             */
            WithCreate withExistingDatabaseAccount(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the ChaosFaultResource definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithAction, DefinitionStages.WithRegion,
            DefinitionStages.WithDatabaseName, DefinitionStages.WithContainerName {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ChaosFaultResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ChaosFaultResource create(Context context);
        }

        /**
         * The stage of the ChaosFaultResource definition allowing to specify action.
         */
        interface WithAction {
            /**
             * Specifies the action property: Indicates whether what action to take for the Chaos Fault..
             * 
             * @param action Indicates whether what action to take for the Chaos Fault.
             * @return the next definition stage.
             */
            WithCreate withAction(SupportedActions action);
        }

        /**
         * The stage of the ChaosFaultResource definition allowing to specify region.
         */
        interface WithRegion {
            /**
             * Specifies the region property: Region of the account where the Chaos Fault is to be enabled/disabled..
             * 
             * @param region Region of the account where the Chaos Fault is to be enabled/disabled.
             * @return the next definition stage.
             */
            WithCreate withRegion(String region);
        }

        /**
         * The stage of the ChaosFaultResource definition allowing to specify databaseName.
         */
        interface WithDatabaseName {
            /**
             * Specifies the databaseName property: Database name..
             * 
             * @param databaseName Database name.
             * @return the next definition stage.
             */
            WithCreate withDatabaseName(String databaseName);
        }

        /**
         * The stage of the ChaosFaultResource definition allowing to specify containerName.
         */
        interface WithContainerName {
            /**
             * Specifies the containerName property: Container name..
             * 
             * @param containerName Container name.
             * @return the next definition stage.
             */
            WithCreate withContainerName(String containerName);
        }
    }

    /**
     * Begins update for the ChaosFaultResource resource.
     * 
     * @return the stage of resource update.
     */
    ChaosFaultResource.Update update();

    /**
     * The template for ChaosFaultResource update.
     */
    interface Update extends UpdateStages.WithAction, UpdateStages.WithRegion, UpdateStages.WithDatabaseName,
        UpdateStages.WithContainerName {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ChaosFaultResource apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ChaosFaultResource apply(Context context);
    }

    /**
     * The ChaosFaultResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ChaosFaultResource update allowing to specify action.
         */
        interface WithAction {
            /**
             * Specifies the action property: Indicates whether what action to take for the Chaos Fault..
             * 
             * @param action Indicates whether what action to take for the Chaos Fault.
             * @return the next definition stage.
             */
            Update withAction(SupportedActions action);
        }

        /**
         * The stage of the ChaosFaultResource update allowing to specify region.
         */
        interface WithRegion {
            /**
             * Specifies the region property: Region of the account where the Chaos Fault is to be enabled/disabled..
             * 
             * @param region Region of the account where the Chaos Fault is to be enabled/disabled.
             * @return the next definition stage.
             */
            Update withRegion(String region);
        }

        /**
         * The stage of the ChaosFaultResource update allowing to specify databaseName.
         */
        interface WithDatabaseName {
            /**
             * Specifies the databaseName property: Database name..
             * 
             * @param databaseName Database name.
             * @return the next definition stage.
             */
            Update withDatabaseName(String databaseName);
        }

        /**
         * The stage of the ChaosFaultResource update allowing to specify containerName.
         */
        interface WithContainerName {
            /**
             * Specifies the containerName property: Container name..
             * 
             * @param containerName Container name.
             * @return the next definition stage.
             */
            Update withContainerName(String containerName);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ChaosFaultResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ChaosFaultResource refresh(Context context);
}

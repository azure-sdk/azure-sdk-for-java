// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.DataTransferJobGetResultsInner;

/**
 * An immutable client-side representation of DataTransferJobGetResults.
 */
public interface DataTransferJobGetResults {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: The properties of a DataTransfer Job.
     * 
     * @return the properties value.
     */
    DataTransferJobProperties properties();

    /**
     * Gets the inner com.azure.resourcemanager.cosmos.generated.fluent.models.DataTransferJobGetResultsInner object.
     * 
     * @return the inner object.
     */
    DataTransferJobGetResultsInner innerModel();

    /**
     * The entirety of the DataTransferJobGetResults definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithParentResource,
        DefinitionStages.WithProperties, DefinitionStages.WithCreate {
    }

    /**
     * The DataTransferJobGetResults definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the DataTransferJobGetResults definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the DataTransferJobGetResults definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, accountName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param accountName Cosmos DB database account name.
             * @return the next definition stage.
             */
            WithProperties withExistingDatabaseAccount(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the DataTransferJobGetResults definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Data Transfer Create Job Properties.
             * 
             * @param properties Data Transfer Create Job Properties.
             * @return the next definition stage.
             */
            WithCreate withProperties(DataTransferJobProperties properties);
        }

        /**
         * The stage of the DataTransferJobGetResults definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            DataTransferJobGetResults create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            DataTransferJobGetResults create(Context context);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    DataTransferJobGetResults refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    DataTransferJobGetResults refresh(Context context);

    /**
     * Pause a Data Transfer Job.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job along with {@link Response}.
     */
    Response<DataTransferJobGetResults> pauseWithResponse(Context context);

    /**
     * Pause a Data Transfer Job.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job.
     */
    DataTransferJobGetResults pause();

    /**
     * Resumes a Data Transfer Job.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job along with {@link Response}.
     */
    Response<DataTransferJobGetResults> resumeWithResponse(Context context);

    /**
     * Resumes a Data Transfer Job.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job.
     */
    DataTransferJobGetResults resume();

    /**
     * Cancels a Data Transfer Job.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job along with {@link Response}.
     */
    Response<DataTransferJobGetResults> cancelWithResponse(Context context);

    /**
     * Cancels a Data Transfer Job.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job.
     */
    DataTransferJobGetResults cancel();

    /**
     * Completes a Data Transfer Online Job.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job along with {@link Response}.
     */
    Response<DataTransferJobGetResults> completeWithResponse(Context context);

    /**
     * Completes a Data Transfer Online Job.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a Cosmos DB Data Transfer Job.
     */
    DataTransferJobGetResults complete();
}

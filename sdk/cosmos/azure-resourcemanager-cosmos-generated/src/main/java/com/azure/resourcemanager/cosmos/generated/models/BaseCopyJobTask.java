// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties of a Copy Job Task.
 */
@Immutable
public class BaseCopyJobTask implements JsonSerializable<BaseCopyJobTask> {
    /*
     * Task level Total Count.
     */
    private Long totalCount;

    /*
     * Task level Processed Count.
     */
    private Long processedCount;

    /**
     * Creates an instance of BaseCopyJobTask class.
     */
    public BaseCopyJobTask() {
    }

    /**
     * Get the totalCount property: Task level Total Count.
     * 
     * @return the totalCount value.
     */
    public Long totalCount() {
        return this.totalCount;
    }

    /**
     * Set the totalCount property: Task level Total Count.
     * 
     * @param totalCount the totalCount value to set.
     * @return the BaseCopyJobTask object itself.
     */
    BaseCopyJobTask withTotalCount(Long totalCount) {
        this.totalCount = totalCount;
        return this;
    }

    /**
     * Get the processedCount property: Task level Processed Count.
     * 
     * @return the processedCount value.
     */
    public Long processedCount() {
        return this.processedCount;
    }

    /**
     * Set the processedCount property: Task level Processed Count.
     * 
     * @param processedCount the processedCount value to set.
     * @return the BaseCopyJobTask object itself.
     */
    BaseCopyJobTask withProcessedCount(Long processedCount) {
        this.processedCount = processedCount;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BaseCopyJobTask from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BaseCopyJobTask if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BaseCopyJobTask.
     */
    public static BaseCopyJobTask fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BaseCopyJobTask deserializedBaseCopyJobTask = new BaseCopyJobTask();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("totalCount".equals(fieldName)) {
                    deserializedBaseCopyJobTask.totalCount = reader.getNullable(JsonReader::getLong);
                } else if ("processedCount".equals(fieldName)) {
                    deserializedBaseCopyJobTask.processedCount = reader.getNullable(JsonReader::getLong);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBaseCopyJobTask;
        });
    }
}

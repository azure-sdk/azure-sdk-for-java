// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.ChaosFaultResourceInner;
import com.azure.resourcemanager.cosmos.generated.models.ChaosFaultResource;
import com.azure.resourcemanager.cosmos.generated.models.SupportedActions;

public final class ChaosFaultResourceImpl
    implements ChaosFaultResource, ChaosFaultResource.Definition, ChaosFaultResource.Update {
    private ChaosFaultResourceInner innerObject;

    private final com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public SupportedActions action() {
        return this.innerModel().action();
    }

    public String region() {
        return this.innerModel().region();
    }

    public String databaseName() {
        return this.innerModel().databaseName();
    }

    public String containerName() {
        return this.innerModel().containerName();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ChaosFaultResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private String chaosFault;

    public ChaosFaultResourceImpl withExistingDatabaseAccount(String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    public ChaosFaultResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getChaosFaults()
            .enableDisable(resourceGroupName, accountName, chaosFault, this.innerModel(), Context.NONE);
        return this;
    }

    public ChaosFaultResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getChaosFaults()
            .enableDisable(resourceGroupName, accountName, chaosFault, this.innerModel(), context);
        return this;
    }

    ChaosFaultResourceImpl(String name, com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = new ChaosFaultResourceInner();
        this.serviceManager = serviceManager;
        this.chaosFault = name;
    }

    public ChaosFaultResourceImpl update() {
        return this;
    }

    public ChaosFaultResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getChaosFaults()
            .enableDisable(resourceGroupName, accountName, chaosFault, this.innerModel(), Context.NONE);
        return this;
    }

    public ChaosFaultResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getChaosFaults()
            .enableDisable(resourceGroupName, accountName, chaosFault, this.innerModel(), context);
        return this;
    }

    ChaosFaultResourceImpl(ChaosFaultResourceInner innerObject,
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "databaseAccounts");
        this.chaosFault = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "chaosFaults");
    }

    public ChaosFaultResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getChaosFaults()
            .getWithResponse(resourceGroupName, accountName, chaosFault, Context.NONE)
            .getValue();
        return this;
    }

    public ChaosFaultResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getChaosFaults()
            .getWithResponse(resourceGroupName, accountName, chaosFault, context)
            .getValue();
        return this;
    }

    public ChaosFaultResourceImpl withAction(SupportedActions action) {
        this.innerModel().withAction(action);
        return this;
    }

    public ChaosFaultResourceImpl withRegion(String region) {
        this.innerModel().withRegion(region);
        return this;
    }

    public ChaosFaultResourceImpl withDatabaseName(String databaseName) {
        this.innerModel().withDatabaseName(databaseName);
        return this;
    }

    public ChaosFaultResourceImpl withContainerName(String containerName) {
        this.innerModel().withContainerName(containerName);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.resourcemanager.cosmos.generated.fluent.models.CassandraReaperClusterStatusInner;
import com.azure.resourcemanager.cosmos.generated.fluent.models.CassandraReaperRunStatusInner;
import com.azure.resourcemanager.cosmos.generated.models.CassandraReaperClusterStatus;
import com.azure.resourcemanager.cosmos.generated.models.CassandraReaperNodeStatus;
import com.azure.resourcemanager.cosmos.generated.models.CassandraReaperRunStatus;
import com.azure.resourcemanager.cosmos.generated.models.CassandraReaperScheduleStatus;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class CassandraReaperClusterStatusImpl implements CassandraReaperClusterStatus {
    private CassandraReaperClusterStatusInner innerObject;

    private final com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager;

    CassandraReaperClusterStatusImpl(
        CassandraReaperClusterStatusInner innerObject,
        com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String name() {
        return this.innerModel().name();
    }

    public String jmxUsername() {
        return this.innerModel().jmxUsername();
    }

    public Boolean jmxPasswordIsSet() {
        return this.innerModel().jmxPasswordIsSet();
    }

    public List<String> seedHosts() {
        List<String> inner = this.innerModel().seedHosts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<CassandraReaperRunStatus> repairRuns() {
        List<CassandraReaperRunStatusInner> inner = this.innerModel().repairRuns();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new CassandraReaperRunStatusImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public List<CassandraReaperScheduleStatus> repairSchedules() {
        List<CassandraReaperScheduleStatus> inner = this.innerModel().repairSchedules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public CassandraReaperNodeStatus nodesStatus() {
        return this.innerModel().nodesStatus();
    }

    public CassandraReaperClusterStatusInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager() {
        return this.serviceManager;
    }
}

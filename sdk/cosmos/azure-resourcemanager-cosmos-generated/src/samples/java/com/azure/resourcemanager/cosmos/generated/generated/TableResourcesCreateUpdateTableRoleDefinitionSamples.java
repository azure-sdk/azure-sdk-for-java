// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.generated;

import com.azure.resourcemanager.cosmos.generated.models.PermissionAutoGenerated;
import com.azure.resourcemanager.cosmos.generated.models.RoleDefinitionType;
import java.util.Arrays;

/**
 * Samples for TableResources CreateUpdateTableRoleDefinition.
 */
public final class TableResourcesCreateUpdateTableRoleDefinitionSamples {
    /*
     * x-ms-original-file:
     * specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2025-05-01-preview/examples/tablerbac/
     * CosmosDBTableRoleDefinitionCreateUpdate.json
     */
    /**
     * Sample code: CosmosDBTableRoleDefinitionCreateUpdate.
     * 
     * @param manager Entry point to CosmosDBManager.
     */
    public static void
        cosmosDBTableRoleDefinitionCreateUpdate(com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager.tableResources()
            .defineUpdateTableRoleDefinition("myRoleDefinitionId")
            .withExistingDatabaseAccount("myResourceGroupName", "myAccountName")
            .withRoleName("myRoleName")
            .withTypePropertiesType(RoleDefinitionType.CUSTOM_ROLE)
            .withAssignableScopes(Arrays.asList(
                "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/sales",
                "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/purchases"))
            .withPermissions(Arrays.asList(new PermissionAutoGenerated()
                .withDataActions(
                    Arrays.asList("Microsoft.DocumentDB/databaseAccounts/tableDatabases/containers/entities/create",
                        "Microsoft.DocumentDB/databaseAccounts/tableDatabases/containers/entities/read"))
                .withNotDataActions(Arrays.asList())))
            .create();
    }
}

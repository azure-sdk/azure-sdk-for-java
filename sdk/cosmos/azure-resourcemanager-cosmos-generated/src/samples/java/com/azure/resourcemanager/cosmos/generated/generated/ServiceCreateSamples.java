// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.generated;

import com.azure.resourcemanager.cosmos.generated.models.DataTransferServiceResourceCreateUpdateProperties;
import com.azure.resourcemanager.cosmos.generated.models.DedicatedGatewayType;
import com.azure.resourcemanager.cosmos.generated.models.GraphApiComputeServiceResourceCreateUpdateProperties;
import com.azure.resourcemanager.cosmos.generated.models.MaterializedViewsBuilderServiceResourceCreateUpdateProperties;
import com.azure.resourcemanager.cosmos.generated.models.ServiceSize;
import com.azure.resourcemanager.cosmos.generated.models.SqlDedicatedGatewayServiceResourceCreateUpdateProperties;

/**
 * Samples for Service Create.
 */
public final class ServiceCreateSamples {
    /*
     * x-ms-original-file:
     * specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2024-11-15/examples/services/
     * sqldedicatedgateway/CosmosDBSqlDedicatedGatewayServiceCreate.json
     */
    /**
     * Sample code: SqlDedicatedGatewayServiceCreate.
     * 
     * @param manager Entry point to CosmosDBManager.
     */
    public static void
        sqlDedicatedGatewayServiceCreate(com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager.services()
            .define("SqlDedicatedGateway")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withProperties(
                new SqlDedicatedGatewayServiceResourceCreateUpdateProperties().withInstanceSize(ServiceSize.COSMOS_D4S)
                    .withInstanceCount(1)
                    .withDedicatedGatewayType(DedicatedGatewayType.INTEGRATED_CACHE))
            .create();
    }

    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2024-11-15/examples/
     * CosmosDBDataTransferServiceCreate.json
     */
    /**
     * Sample code: DataTransferServiceCreate.
     * 
     * @param manager Entry point to CosmosDBManager.
     */
    public static void dataTransferServiceCreate(com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager.services()
            .define("DataTransfer")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withProperties(
                new DataTransferServiceResourceCreateUpdateProperties().withInstanceSize(ServiceSize.COSMOS_D4S)
                    .withInstanceCount(1))
            .create();
    }

    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2024-11-15/examples/
     * CosmosDBMaterializedViewsBuilderServiceCreate.json
     */
    /**
     * Sample code: MaterializedViewsBuilderServiceCreate.
     * 
     * @param manager Entry point to CosmosDBManager.
     */
    public static void
        materializedViewsBuilderServiceCreate(com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager.services()
            .define("MaterializedViewsBuilder")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withProperties(new MaterializedViewsBuilderServiceResourceCreateUpdateProperties()
                .withInstanceSize(ServiceSize.COSMOS_D4S)
                .withInstanceCount(1))
            .create();
    }

    /*
     * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2024-11-15/examples/
     * CosmosDBGraphAPIComputeServiceCreate.json
     */
    /**
     * Sample code: GraphAPIComputeServiceCreate.
     * 
     * @param manager Entry point to CosmosDBManager.
     */
    public static void
        graphAPIComputeServiceCreate(com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager) {
        manager.services()
            .define("GraphAPICompute")
            .withExistingDatabaseAccount("rg1", "ddb1")
            .withProperties(
                new GraphApiComputeServiceResourceCreateUpdateProperties().withInstanceSize(ServiceSize.COSMOS_D4S)
                    .withInstanceCount(1))
            .create();
    }
}

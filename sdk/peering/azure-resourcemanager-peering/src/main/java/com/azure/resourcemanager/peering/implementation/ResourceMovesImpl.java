// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.peering.fluent.ResourceMovesClient;
import com.azure.resourcemanager.peering.models.ResourceMoveRequest;
import com.azure.resourcemanager.peering.models.ResourceMoves;

public final class ResourceMovesImpl implements ResourceMoves {
    private static final ClientLogger LOGGER = new ClientLogger(ResourceMovesImpl.class);

    private final ResourceMovesClient innerClient;

    private final com.azure.resourcemanager.peering.PeeringManager serviceManager;

    public ResourceMovesImpl(
        ResourceMovesClient innerClient, com.azure.resourcemanager.peering.PeeringManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Void> validateMoveResourcesWithResponse(
        String resourceGroupName, ResourceMoveRequest resourceMoveRequest, Context context) {
        return this.serviceClient().validateMoveResourcesWithResponse(resourceGroupName, resourceMoveRequest, context);
    }

    public void validateMoveResources(String resourceGroupName, ResourceMoveRequest resourceMoveRequest) {
        this.serviceClient().validateMoveResources(resourceGroupName, resourceMoveRequest);
    }

    public Response<Void> moveResourcesWithResponse(
        String resourceGroupName, ResourceMoveRequest resourceMoveRequest, Context context) {
        return this.serviceClient().moveResourcesWithResponse(resourceGroupName, resourceMoveRequest, context);
    }

    public void moveResources(String resourceGroupName, ResourceMoveRequest resourceMoveRequest) {
        this.serviceClient().moveResources(resourceGroupName, resourceMoveRequest);
    }

    private ResourceMovesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.peering.PeeringManager manager() {
        return this.serviceManager;
    }
}

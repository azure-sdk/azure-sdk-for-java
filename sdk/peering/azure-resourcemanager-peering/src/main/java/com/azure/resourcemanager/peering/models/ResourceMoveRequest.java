// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Request specifies the resources to be moved and the target Resource Group. */
@Fluent
public final class ResourceMoveRequest {
    /*
     * Target resource group
     */
    @JsonProperty(value = "targetResourceGroup", required = true)
    private String targetResourceGroup;

    /*
     * Resources to be moved
     */
    @JsonProperty(value = "resources", required = true)
    private List<String> resources;

    /** Creates an instance of ResourceMoveRequest class. */
    public ResourceMoveRequest() {
    }

    /**
     * Get the targetResourceGroup property: Target resource group.
     *
     * @return the targetResourceGroup value.
     */
    public String targetResourceGroup() {
        return this.targetResourceGroup;
    }

    /**
     * Set the targetResourceGroup property: Target resource group.
     *
     * @param targetResourceGroup the targetResourceGroup value to set.
     * @return the ResourceMoveRequest object itself.
     */
    public ResourceMoveRequest withTargetResourceGroup(String targetResourceGroup) {
        this.targetResourceGroup = targetResourceGroup;
        return this;
    }

    /**
     * Get the resources property: Resources to be moved.
     *
     * @return the resources value.
     */
    public List<String> resources() {
        return this.resources;
    }

    /**
     * Set the resources property: Resources to be moved.
     *
     * @param resources the resources value to set.
     * @return the ResourceMoveRequest object itself.
     */
    public ResourceMoveRequest withResources(List<String> resources) {
        this.resources = resources;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (targetResourceGroup() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property targetResourceGroup in model ResourceMoveRequest"));
        }
        if (resources() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property resources in model ResourceMoveRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ResourceMoveRequest.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.peering.models;

import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The previous connection provisioning state, used to resume provisioning after connection has been blocked.
 */
public final class PreviousConnectionProvisioningState
    extends ExpandableStringEnum<PreviousConnectionProvisioningState> {
    /**
     * Static value None for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState NONE = fromString("None");

    /**
     * Static value InterconnectionPendingApproval for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState INTERCONNECTION_PENDING_APPROVAL
        = fromString("InterconnectionPendingApproval");

    /**
     * Static value DeviceStateValidation for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DEVICE_STATE_VALIDATION
        = fromString("DeviceStateValidation");

    /**
     * Static value RocPendingApproval for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState ROC_PENDING_APPROVAL = fromString("RocPendingApproval");

    /**
     * Static value AllocatePorts for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState ALLOCATE_PORTS = fromString("AllocatePorts");

    /**
     * Static value PortExhaustion for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PORT_EXHAUSTION = fromString("PortExhaustion");

    /**
     * Static value CheckInterfaces for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState CHECK_INTERFACES = fromString("CheckInterfaces");

    /**
     * Static value EnableInterfaces for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState ENABLE_INTERFACES = fromString("EnableInterfaces");

    /**
     * Static value PhysicalConnectionSetup for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PHYSICAL_CONNECTION_SETUP
        = fromString("PhysicalConnectionSetup");

    /**
     * Static value AwaitPairUpgrade for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState AWAIT_PAIR_UPGRADE = fromString("AwaitPairUpgrade");

    /**
     * Static value LightCheck for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState LIGHT_CHECK = fromString("LightCheck");

    /**
     * Static value TestPing for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState TEST_PING = fromString("TestPing");

    /**
     * Static value PingTestDone for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PING_TEST_DONE = fromString("PingTestDone");

    /**
     * Static value AwaitPeerIps for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState AWAIT_PEER_IPS = fromString("AwaitPeerIps");

    /**
     * Static value ValidateFltFirewall for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState VALIDATE_FLT_FIREWALL = fromString("ValidateFltFirewall");

    /**
     * Static value LagSetup for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState LAG_SETUP = fromString("LagSetup");

    /**
     * Static value AwaitLagCompletion for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState AWAIT_LAG_COMPLETION = fromString("AwaitLagCompletion");

    /**
     * Static value UpdateAddressesOnDevice for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState UPDATE_ADDRESSES_ON_DEVICE
        = fromString("UpdateAddressesOnDevice");

    /**
     * Static value FetchPrefixLimitFromPeeringDb for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState FETCH_PREFIX_LIMIT_FROM_PEERING_DB
        = fromString("FetchPrefixLimitFromPeeringDb");

    /**
     * Static value BgpSessionConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState BGP_SESSION_CONFIGURATION
        = fromString("BgpSessionConfiguration");

    /**
     * Static value NpmBgpSessionConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState NPM_BGP_SESSION_CONFIGURATION
        = fromString("NpmBgpSessionConfiguration");

    /**
     * Static value Md5AuthKeyConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MD5AUTH_KEY_CONFIGURATION
        = fromString("Md5AuthKeyConfiguration");

    /**
     * Static value FetchSessionState for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState FETCH_SESSION_STATE = fromString("FetchSessionState");

    /**
     * Static value RemoveNomonit for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState REMOVE_NOMONIT = fromString("RemoveNomonit");

    /**
     * Static value UpdateApipaPrefixInSitepro for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState UPDATE_APIPA_PREFIX_IN_SITEPRO
        = fromString("UpdateApipaPrefixInSitepro");

    /**
     * Static value ProvisioningCompleted for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PROVISIONING_COMPLETED
        = fromString("ProvisioningCompleted");

    /**
     * Static value PendingMigration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_MIGRATION = fromString("PendingMigration");

    /**
     * Static value MigrationRequestPortAllocationRequested for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MIGRATION_REQUEST_PORT_ALLOCATION_REQUESTED
        = fromString("MigrationRequestPortAllocationRequested");

    /**
     * Static value MigrationConfigValidation for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MIGRATION_CONFIG_VALIDATION
        = fromString("MigrationConfigValidation");

    /**
     * Static value PendingGlobalPolicyUpdate for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_GLOBAL_POLICY_UPDATE
        = fromString("PendingGlobalPolicyUpdate");

    /**
     * Static value MigrationSpecificConfigDrift for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MIGRATION_SPECIFIC_CONFIG_DRIFT
        = fromString("MigrationSpecificConfigDrift");

    /**
     * Static value MigrationNpmError for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MIGRATION_NPM_ERROR = fromString("MigrationNpmError");

    /**
     * Static value PendingWorkWindow for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_WORK_WINDOW = fromString("PendingWorkWindow");

    /**
     * Static value ExternalBlocker for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState EXTERNAL_BLOCKER = fromString("ExternalBlocker");

    /**
     * Static value StaticMacConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState STATIC_MAC_CONFIGURATION
        = fromString("StaticMacConfiguration");

    /**
     * Static value UndoMigrationGraphCleanup for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState UNDO_MIGRATION_GRAPH_CLEANUP
        = fromString("UndoMigrationGraphCleanup");

    /**
     * Static value MigrationWorkWindow for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MIGRATION_WORK_WINDOW = fromString("MigrationWorkWindow");

    /**
     * Static value PendingMigrationCompletion for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_MIGRATION_COMPLETION
        = fromString("PendingMigrationCompletion");

    /**
     * Static value MigrationCompletionRequested for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MIGRATION_COMPLETION_REQUESTED
        = fromString("MigrationCompletionRequested");

    /**
     * Static value DirectPeeringTypeUpdateApproved for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_APPROVED
        = fromString("DirectPeeringTypeUpdateApproved");

    /**
     * Static value DirectPeeringTypeUpdateRejected for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_REJECTED
        = fromString("DirectPeeringTypeUpdateRejected");

    /**
     * Static value DirectPeeringTypeUpdateIfDescription for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_IF_DESCRIPTION
        = fromString("DirectPeeringTypeUpdateIfDescription");

    /**
     * Static value DirectPeeringTypeUpdatePrefixPrecheck for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_PREFIX_PRECHECK
        = fromString("DirectPeeringTypeUpdatePrefixPrecheck");

    /**
     * Static value DirectPeeringTypeUpdateApplyDenyAll for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_APPLY_DENY_ALL
        = fromString("DirectPeeringTypeUpdateApplyDenyAll");

    /**
     * Static value DirectPeeringTypeUpdateDeleteSession for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_DELETE_SESSION
        = fromString("DirectPeeringTypeUpdateDeleteSession");

    /**
     * Static value DirectPeeringTypeUpdateLagAcl for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_LAG_ACL
        = fromString("DirectPeeringTypeUpdateLagAcl");

    /**
     * Static value DirectPeeringTypeUpdateBgpConfig for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_BGP_CONFIG
        = fromString("DirectPeeringTypeUpdateBgpConfig");

    /**
     * Static value DirectPeeringTypeUpdateFetchSessionState for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_FETCH_SESSION_STATE
        = fromString("DirectPeeringTypeUpdateFetchSessionState");

    /**
     * Static value DirectPeeringTypeUpdateDeleteDenyAll for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_DELETE_DENY_ALL
        = fromString("DirectPeeringTypeUpdateDeleteDenyAll");

    /**
     * Static value DirectPeeringTypeUpdatePrefixPostCheck for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_PREFIX_POST_CHECK
        = fromString("DirectPeeringTypeUpdatePrefixPostCheck");

    /**
     * Static value DecomRocPendingApproval for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_ROC_PENDING_APPROVAL
        = fromString("DecomRocPendingApproval");

    /**
     * Static value DecomAddDenyAll for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_ADD_DENY_ALL = fromString("DecomAddDenyAll");

    /**
     * Static value DecomValidatePrefix for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_VALIDATE_PREFIX = fromString("DecomValidatePrefix");

    /**
     * Static value DecomValidateTraffic for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_VALIDATE_TRAFFIC = fromString("DecomValidateTraffic");

    /**
     * Static value DecomShutInterfaces for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_SHUT_INTERFACES = fromString("DecomShutInterfaces");

    /**
     * Static value DecomShutdownBgp for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_SHUTDOWN_BGP = fromString("DecomShutdownBgp");

    /**
     * Static value DecomCabling for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_CABLING = fromString("DecomCabling");

    /**
     * Static value DecomRemoveBgpConfig for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_REMOVE_BGP_CONFIG
        = fromString("DecomRemoveBgpConfig");

    /**
     * Static value DecomRemoveInterfaceConfig for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_REMOVE_INTERFACE_CONFIG
        = fromString("DecomRemoveInterfaceConfig");

    /**
     * Static value DecomGraphCleanup for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_GRAPH_CLEANUP = fromString("DecomGraphCleanup");

    /**
     * Static value DecomCompleted for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DECOM_COMPLETED = fromString("DecomCompleted");

    /**
     * Static value DirectPeeringTypeUpdateMd5AuthKeyConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_MD5AUTH_KEY_CONFIGURATION
        = fromString("DirectPeeringTypeUpdateMd5AuthKeyConfiguration");

    /**
     * Static value BfdConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState BFD_CONFIGURATION = fromString("BfdConfiguration");

    /**
     * Static value DirectPeeringTypeUpdateBfdConfig for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_BFD_CONFIG
        = fromString("DirectPeeringTypeUpdateBfdConfig");

    /**
     * Static value DirectPeeringTypeUpdateMd5AuthKeyRead for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_MD5AUTH_KEY_READ
        = fromString("DirectPeeringTypeUpdateMd5AuthKeyRead");

    /**
     * Static value PrefixListConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PREFIX_LIST_CONFIGURATION
        = fromString("PrefixListConfiguration");

    /**
     * Static value WorkWindowCompleted for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState WORK_WINDOW_COMPLETED = fromString("WorkWindowCompleted");

    /**
     * Static value FacilityMapValidation for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState FACILITY_MAP_VALIDATION
        = fromString("FacilityMapValidation");

    /**
     * Static value DirectPeeringTypeUpdateReadMaxPrefixLimit for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_READ_MAX_PREFIX_LIMIT
        = fromString("DirectPeeringTypeUpdateReadMaxPrefixLimit");

    /**
     * Static value DirectPeeringTypeUpdateUpdatePortWithNewIP for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_UPDATE_PORT_WITH_NEW_IP
        = fromString("DirectPeeringTypeUpdateUpdatePortWithNewIP");

    /**
     * Static value DirectPeeringTypeUpdateConfigureLagWithNewIP for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_CONFIGURE_LAG_WITH_NEW_IP
        = fromString("DirectPeeringTypeUpdateConfigureLagWithNewIP");

    /**
     * Static value DirectPeeringTypeUpdateCleanupOldIPsfromLAG for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState DIRECT_PEERING_TYPE_UPDATE_CLEANUP_OLD_IPSFROM_LAG
        = fromString("DirectPeeringTypeUpdateCleanupOldIPsfromLAG");

    /**
     * Static value MapsToMapsVoiceUpdateIfDescription for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MAPS_TO_MAPS_VOICE_UPDATE_IF_DESCRIPTION
        = fromString("MapsToMapsVoiceUpdateIfDescription");

    /**
     * Static value MapsToMapsVoicePrefixPrecheck for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MAPS_TO_MAPS_VOICE_PREFIX_PRECHECK
        = fromString("MapsToMapsVoicePrefixPrecheck");

    /**
     * Static value MapsToMapsVoiceUpdateLAGAcl for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MAPS_TO_MAPS_VOICE_UPDATE_LAGACL
        = fromString("MapsToMapsVoiceUpdateLAGAcl");

    /**
     * Static value MapsToMapsVoiceConfigureBFD for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MAPS_TO_MAPS_VOICE_CONFIGURE_BFD
        = fromString("MapsToMapsVoiceConfigureBFD");

    /**
     * Static value MapsToMapsVoiceFetchSessionState for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MAPS_TO_MAPS_VOICE_FETCH_SESSION_STATE
        = fromString("MapsToMapsVoiceFetchSessionState");

    /**
     * Static value MapsToMapsVoicePrefixPostCheck for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState MAPS_TO_MAPS_VOICE_PREFIX_POST_CHECK
        = fromString("MapsToMapsVoicePrefixPostCheck");

    /**
     * Static value BgpGroupChangeRocPendingApproval for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState BGP_GROUP_CHANGE_ROC_PENDING_APPROVAL
        = fromString("BgpGroupChangeRocPendingApproval");

    /**
     * Static value BgpGroupChangeWorkWindow for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState BGP_GROUP_CHANGE_WORK_WINDOW
        = fromString("BgpGroupChangeWorkWindow");

    /**
     * Static value IPChangeWorkWindow for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_WORK_WINDOW = fromString("IPChangeWorkWindow");

    /**
     * Static value PendingASNChangeApplyDenyALL for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_ASNCHANGE_APPLY_DENY_ALL
        = fromString("PendingASNChangeApplyDenyALL");

    /**
     * Static value PendingASNChangeUpdateNeighborConfig for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_ASNCHANGE_UPDATE_NEIGHBOR_CONFIG
        = fromString("PendingASNChangeUpdateNeighborConfig");

    /**
     * Static value PendingASNChangeRemoveDenyALL for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_ASNCHANGE_REMOVE_DENY_ALL
        = fromString("PendingASNChangeRemoveDenyALL");

    /**
     * Static value PendingASNChangeUpdateInterfaceDescription for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_ASNCHANGE_UPDATE_INTERFACE_DESCRIPTION
        = fromString("PendingASNChangeUpdateInterfaceDescription");

    /**
     * Static value UpdateGraphForASNChange for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState UPDATE_GRAPH_FOR_ASNCHANGE
        = fromString("UpdateGraphForASNChange");

    /**
     * Static value UpdatePeeringForASNChange for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState UPDATE_PEERING_FOR_ASNCHANGE
        = fromString("UpdatePeeringForASNChange");

    /**
     * Static value AddDenyAllRocPendingApproval for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState ADD_DENY_ALL_ROC_PENDING_APPROVAL
        = fromString("AddDenyAllRocPendingApproval");

    /**
     * Static value AwaitApplyDenyAll for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState AWAIT_APPLY_DENY_ALL = fromString("AwaitApplyDenyAll");

    /**
     * Static value IPChangeValidation for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_VALIDATION = fromString("IPChangeValidation");

    /**
     * Static value IPChangeCleanup for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_CLEANUP = fromString("IPChangeCleanup");

    /**
     * Static value ForcedIpChangeCleanup for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState FORCED_IP_CHANGE_CLEANUP
        = fromString("ForcedIpChangeCleanup");

    /**
     * Static value ForcedIpChangeCleanupWithActiveSessions for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState FORCED_IP_CHANGE_CLEANUP_WITH_ACTIVE_SESSIONS
        = fromString("ForcedIpChangeCleanupWithActiveSessions");

    /**
     * Static value IPChangeInitiate for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_INITIATE = fromString("IPChangeInitiate");

    /**
     * Static value IPChangeLag for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_LAG = fromString("IPChangeLag");

    /**
     * Static value IPChangeBgpUpdate for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_BGP_UPDATE = fromString("IPChangeBgpUpdate");

    /**
     * Static value IPChangeMd5Configuration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_MD5CONFIGURATION
        = fromString("IPChangeMd5Configuration");

    /**
     * Static value IPChangeApplyDenyAll for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_APPLY_DENY_ALL
        = fromString("IPChangeApplyDenyAll");

    /**
     * Static value IPChangeRemoveDenyAll for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_REMOVE_DENY_ALL
        = fromString("IPChangeRemoveDenyAll");

    /**
     * Static value IPChangeValidateSessions for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState IPCHANGE_VALIDATE_SESSIONS
        = fromString("IPChangeValidateSessions");

    /**
     * Static value ACLConfiguration for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState ACLCONFIGURATION = fromString("ACLConfiguration");

    /**
     * Static value PendingSpecialWorkItem for PreviousConnectionProvisioningState.
     */
    public static final PreviousConnectionProvisioningState PENDING_SPECIAL_WORK_ITEM
        = fromString("PendingSpecialWorkItem");

    /**
     * Creates a new instance of PreviousConnectionProvisioningState value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public PreviousConnectionProvisioningState() {
    }

    /**
     * Creates or finds a PreviousConnectionProvisioningState from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding PreviousConnectionProvisioningState.
     */
    public static PreviousConnectionProvisioningState fromString(String name) {
        return fromString(name, PreviousConnectionProvisioningState.class);
    }

    /**
     * Gets known PreviousConnectionProvisioningState values.
     * 
     * @return known PreviousConnectionProvisioningState values.
     */
    public static Collection<PreviousConnectionProvisioningState> values() {
        return values(PreviousConnectionProvisioningState.class);
    }
}

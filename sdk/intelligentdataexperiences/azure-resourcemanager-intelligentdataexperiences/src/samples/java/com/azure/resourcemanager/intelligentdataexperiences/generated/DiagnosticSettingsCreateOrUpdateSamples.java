// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.intelligentdataexperiences.generated;

import com.azure.resourcemanager.intelligentdataexperiences.fluent.models.DiagnosticSettingsResourceInner;
import com.azure.resourcemanager.intelligentdataexperiences.models.Category;
import com.azure.resourcemanager.intelligentdataexperiences.models.LogSettings;
import com.azure.resourcemanager.intelligentdataexperiences.models.RetentionPolicy;
import java.util.Arrays;

/** Samples for DiagnosticSettings CreateOrUpdate. */
public final class DiagnosticSettingsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/intelligentdataexperiences/resource-manager/Microsoft.AadCustomSecurityAttributesDiagnosticSettings/preview/2017-04-01-preview/examples/createOrUpdateDiagnosticSetting.json
     */
    /**
     * Sample code: BatchAccountDelete.
     *
     * @param manager Entry point to IntelligentdataexperiencesManager.
     */
    public static void batchAccountDelete(
        com.azure.resourcemanager.intelligentdataexperiences.IntelligentdataexperiencesManager manager) {
        manager
            .diagnosticSettings()
            .createOrUpdateWithResponse(
                "mysetting",
                new DiagnosticSettingsResourceInner()
                    .withStorageAccountId(
                        "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1")
                    .withWorkspaceId("")
                    .withEventHubAuthorizationRuleId(
                        "/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule")
                    .withEventHubName("myeventhub")
                    .withLogs(
                        Arrays
                            .asList(
                                new LogSettings()
                                    .withCategory(Category.fromString("CustomSecurityAuditLogs"))
                                    .withEnabled(true)
                                    .withRetentionPolicy(new RetentionPolicy().withEnabled(false).withDays(0)))),
                com.azure.core.util.Context.NONE);
    }
}

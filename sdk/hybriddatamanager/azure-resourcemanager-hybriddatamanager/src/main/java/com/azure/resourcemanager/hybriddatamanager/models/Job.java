// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybriddatamanager.models;

import com.azure.resourcemanager.hybriddatamanager.fluent.models.JobInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of Job. */
public interface Job {
    /**
     * Gets the name property: Name of the object.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the id property: Id of the object.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the type property: Type of the object.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the status property: Status of the job.
     *
     * @return the status value.
     */
    JobStatus status();

    /**
     * Gets the startTime property: Time at which the job was started in UTC ISO 8601 format.
     *
     * @return the startTime value.
     */
    OffsetDateTime startTime();

    /**
     * Gets the endTime property: Time at which the job ended in UTC ISO 8601 format.
     *
     * @return the endTime value.
     */
    OffsetDateTime endTime();

    /**
     * Gets the error property: Top level error for the job.
     *
     * @return the error value.
     */
    Error error();

    /**
     * Gets the isCancellable property: Describes whether the job is cancellable.
     *
     * @return the isCancellable value.
     */
    IsJobCancellable isCancellable();

    /**
     * Gets the bytesProcessed property: Number of bytes processed by the job as of now.
     *
     * @return the bytesProcessed value.
     */
    Long bytesProcessed();

    /**
     * Gets the itemsProcessed property: Number of items processed by the job as of now.
     *
     * @return the itemsProcessed value.
     */
    Long itemsProcessed();

    /**
     * Gets the totalBytesToProcess property: Number of bytes to be processed by the job in total.
     *
     * @return the totalBytesToProcess value.
     */
    Long totalBytesToProcess();

    /**
     * Gets the totalItemsToProcess property: Number of items to be processed by the job in total.
     *
     * @return the totalItemsToProcess value.
     */
    Long totalItemsToProcess();

    /**
     * Gets the itemsDeleted property: Number of items deleted by the job as of now.
     *
     * @return the itemsDeleted value.
     */
    Long itemsDeleted();

    /**
     * Gets the totalItemsToDelete property: Number of items to be deleted by the job in total.
     *
     * @return the totalItemsToDelete value.
     */
    Long totalItemsToDelete();

    /**
     * Gets the filesCopiedCounter property: Of the items copied by the job as of now, how many are files.
     *
     * @return the filesCopiedCounter value.
     */
    Long filesCopiedCounter();

    /**
     * Gets the filesDeletedCounter property: Of the items deleted by the job as of now, how many are files.
     *
     * @return the filesDeletedCounter value.
     */
    Long filesDeletedCounter();

    /**
     * Gets the bytesCopied property: Number of bytes actually copied by the job as of now.
     *
     * @return the bytesCopied value.
     */
    Long bytesCopied();

    /**
     * Gets the backupStartTime property: Time getting the backup started.
     *
     * @return the backupStartTime value.
     */
    OffsetDateTime backupStartTime();

    /**
     * Gets the backupEndTime property: Time getting the backup ended.
     *
     * @return the backupEndTime value.
     */
    OffsetDateTime backupEndTime();

    /**
     * Gets the estimationConfigureComputeStartTime property: Time configuring compute for estimation stage started.
     *
     * @return the estimationConfigureComputeStartTime value.
     */
    OffsetDateTime estimationConfigureComputeStartTime();

    /**
     * Gets the estimationConfigureComputeEndTime property: Time configuring compute for estimation stage ended.
     *
     * @return the estimationConfigureComputeEndTime value.
     */
    OffsetDateTime estimationConfigureComputeEndTime();

    /**
     * Gets the directoryParserStartTime property: Time enumerating source directory started.
     *
     * @return the directoryParserStartTime value.
     */
    OffsetDateTime directoryParserStartTime();

    /**
     * Gets the directoryParserEndTime property: Time enumerating source directory ended.
     *
     * @return the directoryParserEndTime value.
     */
    OffsetDateTime directoryParserEndTime();

    /**
     * Gets the purgeDetectionStartTime property: Time enumerating target directory started.
     *
     * @return the purgeDetectionStartTime value.
     */
    OffsetDateTime purgeDetectionStartTime();

    /**
     * Gets the purgeDetectionEndTime property: Time enumerating target directory ended.
     *
     * @return the purgeDetectionEndTime value.
     */
    OffsetDateTime purgeDetectionEndTime();

    /**
     * Gets the estimationStartTime property: Time estimating files started.
     *
     * @return the estimationStartTime value.
     */
    OffsetDateTime estimationStartTime();

    /**
     * Gets the estimationEndTime property: Time estimating files ended.
     *
     * @return the estimationEndTime value.
     */
    OffsetDateTime estimationEndTime();

    /**
     * Gets the postEstimationStartTime property: Time deleting excess files started.
     *
     * @return the postEstimationStartTime value.
     */
    OffsetDateTime postEstimationStartTime();

    /**
     * Gets the postEstimationEndTime property: Time deleting excess files ended.
     *
     * @return the postEstimationEndTime value.
     */
    OffsetDateTime postEstimationEndTime();

    /**
     * Gets the copyConfigureComputeStartTime property: Time configuring compute for copy stage started.
     *
     * @return the copyConfigureComputeStartTime value.
     */
    OffsetDateTime copyConfigureComputeStartTime();

    /**
     * Gets the copyConfigureComputeEndTime property: Time configuring compute for copy stage ended.
     *
     * @return the copyConfigureComputeEndTime value.
     */
    OffsetDateTime copyConfigureComputeEndTime();

    /**
     * Gets the copyStartTime property: Time copying files started.
     *
     * @return the copyStartTime value.
     */
    OffsetDateTime copyStartTime();

    /**
     * Gets the copyEndTime property: Time copying files ended.
     *
     * @return the copyEndTime value.
     */
    OffsetDateTime copyEndTime();

    /**
     * Gets the postCopyStartTime property: Time copying logs and creating share snapshot started.
     *
     * @return the postCopyStartTime value.
     */
    OffsetDateTime postCopyStartTime();

    /**
     * Gets the postCopyEndTime property: Time copying logs and creating share snapshot ended.
     *
     * @return the postCopyEndTime value.
     */
    OffsetDateTime postCopyEndTime();

    /**
     * Gets the cleanupComputeStartTime property: Time cleaning up compute started.
     *
     * @return the cleanupComputeStartTime value.
     */
    OffsetDateTime cleanupComputeStartTime();

    /**
     * Gets the cleanupComputeEndTime property: Time cleaning up compute ended.
     *
     * @return the cleanupComputeEndTime value.
     */
    OffsetDateTime cleanupComputeEndTime();

    /**
     * Gets the details property: Details of a job run. This field will only be sent for expand details filter.
     *
     * @return the details value.
     */
    JobDetails details();

    /**
     * Gets the dataSourceName property: Name of the data source on which the job was triggered.
     *
     * @return the dataSourceName value.
     */
    String dataSourceName();

    /**
     * Gets the dataSinkName property: Name of the data sink on which the job was triggered.
     *
     * @return the dataSinkName value.
     */
    String dataSinkName();

    /**
     * Gets the copyErrors property: Number of copy errors.
     *
     * @return the copyErrors value.
     */
    Long copyErrors();

    /**
     * Gets the unsupportedFiles property: Number of unsupported files.
     *
     * @return the unsupportedFiles value.
     */
    Long unsupportedFiles();

    /**
     * Gets the inner com.azure.resourcemanager.hybriddatamanager.fluent.models.JobInner object.
     *
     * @return the inner object.
     */
    JobInner innerModel();
}

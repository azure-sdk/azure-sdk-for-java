// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybriddatamanager.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.hybriddatamanager.models.ErrorDetails;
import com.azure.resourcemanager.hybriddatamanager.models.JobStages;
import java.io.IOException;
import java.util.List;

/**
 * Job details.
 */
@Fluent
public final class JobDetailsInner implements JsonSerializable<JobDetailsInner> {
    /*
     * List of stages that ran in the job
     */
    private List<JobStages> jobStages;

    /*
     * JobDefinition at the time of the run
     */
    private JobDefinitionInner jobDefinition;

    /*
     * Error details for failure. This is optional.
     */
    private List<ErrorDetails> errorDetails;

    /*
     * Item Details Link to download files or see details
     */
    private String itemDetailsLink;

    /**
     * Creates an instance of JobDetailsInner class.
     */
    public JobDetailsInner() {
    }

    /**
     * Get the jobStages property: List of stages that ran in the job.
     * 
     * @return the jobStages value.
     */
    public List<JobStages> jobStages() {
        return this.jobStages;
    }

    /**
     * Set the jobStages property: List of stages that ran in the job.
     * 
     * @param jobStages the jobStages value to set.
     * @return the JobDetailsInner object itself.
     */
    public JobDetailsInner withJobStages(List<JobStages> jobStages) {
        this.jobStages = jobStages;
        return this;
    }

    /**
     * Get the jobDefinition property: JobDefinition at the time of the run.
     * 
     * @return the jobDefinition value.
     */
    public JobDefinitionInner jobDefinition() {
        return this.jobDefinition;
    }

    /**
     * Set the jobDefinition property: JobDefinition at the time of the run.
     * 
     * @param jobDefinition the jobDefinition value to set.
     * @return the JobDetailsInner object itself.
     */
    public JobDetailsInner withJobDefinition(JobDefinitionInner jobDefinition) {
        this.jobDefinition = jobDefinition;
        return this;
    }

    /**
     * Get the errorDetails property: Error details for failure. This is optional.
     * 
     * @return the errorDetails value.
     */
    public List<ErrorDetails> errorDetails() {
        return this.errorDetails;
    }

    /**
     * Set the errorDetails property: Error details for failure. This is optional.
     * 
     * @param errorDetails the errorDetails value to set.
     * @return the JobDetailsInner object itself.
     */
    public JobDetailsInner withErrorDetails(List<ErrorDetails> errorDetails) {
        this.errorDetails = errorDetails;
        return this;
    }

    /**
     * Get the itemDetailsLink property: Item Details Link to download files or see details.
     * 
     * @return the itemDetailsLink value.
     */
    public String itemDetailsLink() {
        return this.itemDetailsLink;
    }

    /**
     * Set the itemDetailsLink property: Item Details Link to download files or see details.
     * 
     * @param itemDetailsLink the itemDetailsLink value to set.
     * @return the JobDetailsInner object itself.
     */
    public JobDetailsInner withItemDetailsLink(String itemDetailsLink) {
        this.itemDetailsLink = itemDetailsLink;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (jobStages() != null) {
            jobStages().forEach(e -> e.validate());
        }
        if (jobDefinition() != null) {
            jobDefinition().validate();
        }
        if (errorDetails() != null) {
            errorDetails().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("jobStages", this.jobStages, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("jobDefinition", this.jobDefinition);
        jsonWriter.writeArrayField("errorDetails", this.errorDetails, (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("itemDetailsLink", this.itemDetailsLink);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of JobDetailsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of JobDetailsInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the JobDetailsInner.
     */
    public static JobDetailsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            JobDetailsInner deserializedJobDetailsInner = new JobDetailsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("jobStages".equals(fieldName)) {
                    List<JobStages> jobStages = reader.readArray(reader1 -> JobStages.fromJson(reader1));
                    deserializedJobDetailsInner.jobStages = jobStages;
                } else if ("jobDefinition".equals(fieldName)) {
                    deserializedJobDetailsInner.jobDefinition = JobDefinitionInner.fromJson(reader);
                } else if ("errorDetails".equals(fieldName)) {
                    List<ErrorDetails> errorDetails = reader.readArray(reader1 -> ErrorDetails.fromJson(reader1));
                    deserializedJobDetailsInner.errorDetails = errorDetails;
                } else if ("itemDetailsLink".equals(fieldName)) {
                    deserializedJobDetailsInner.itemDetailsLink = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedJobDetailsInner;
        });
    }
}

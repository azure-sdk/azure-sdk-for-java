// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybriddatamanager.implementation;

import com.azure.resourcemanager.hybriddatamanager.fluent.models.JobDetailsInner;
import com.azure.resourcemanager.hybriddatamanager.fluent.models.JobPropertiesInner;
import com.azure.resourcemanager.hybriddatamanager.models.IsJobCancellable;
import com.azure.resourcemanager.hybriddatamanager.models.JobDetails;
import com.azure.resourcemanager.hybriddatamanager.models.JobProperties;
import java.time.OffsetDateTime;

public final class JobPropertiesImpl implements JobProperties {
    private JobPropertiesInner innerObject;

    private final com.azure.resourcemanager.hybriddatamanager.HybridDataManager serviceManager;

    JobPropertiesImpl(
        JobPropertiesInner innerObject, com.azure.resourcemanager.hybriddatamanager.HybridDataManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public IsJobCancellable isCancellable() {
        return this.innerModel().isCancellable();
    }

    public Long bytesProcessed() {
        return this.innerModel().bytesProcessed();
    }

    public Long itemsProcessed() {
        return this.innerModel().itemsProcessed();
    }

    public Long totalBytesToProcess() {
        return this.innerModel().totalBytesToProcess();
    }

    public Long totalItemsToProcess() {
        return this.innerModel().totalItemsToProcess();
    }

    public Long itemsDeleted() {
        return this.innerModel().itemsDeleted();
    }

    public Long totalItemsToDelete() {
        return this.innerModel().totalItemsToDelete();
    }

    public Long filesCopiedCounter() {
        return this.innerModel().filesCopiedCounter();
    }

    public Long filesDeletedCounter() {
        return this.innerModel().filesDeletedCounter();
    }

    public Long bytesCopied() {
        return this.innerModel().bytesCopied();
    }

    public OffsetDateTime backupStartTime() {
        return this.innerModel().backupStartTime();
    }

    public OffsetDateTime backupEndTime() {
        return this.innerModel().backupEndTime();
    }

    public OffsetDateTime estimationConfigureComputeStartTime() {
        return this.innerModel().estimationConfigureComputeStartTime();
    }

    public OffsetDateTime estimationConfigureComputeEndTime() {
        return this.innerModel().estimationConfigureComputeEndTime();
    }

    public OffsetDateTime directoryParserStartTime() {
        return this.innerModel().directoryParserStartTime();
    }

    public OffsetDateTime directoryParserEndTime() {
        return this.innerModel().directoryParserEndTime();
    }

    public OffsetDateTime purgeDetectionStartTime() {
        return this.innerModel().purgeDetectionStartTime();
    }

    public OffsetDateTime purgeDetectionEndTime() {
        return this.innerModel().purgeDetectionEndTime();
    }

    public OffsetDateTime estimationStartTime() {
        return this.innerModel().estimationStartTime();
    }

    public OffsetDateTime estimationEndTime() {
        return this.innerModel().estimationEndTime();
    }

    public OffsetDateTime postEstimationStartTime() {
        return this.innerModel().postEstimationStartTime();
    }

    public OffsetDateTime postEstimationEndTime() {
        return this.innerModel().postEstimationEndTime();
    }

    public OffsetDateTime copyConfigureComputeStartTime() {
        return this.innerModel().copyConfigureComputeStartTime();
    }

    public OffsetDateTime copyConfigureComputeEndTime() {
        return this.innerModel().copyConfigureComputeEndTime();
    }

    public OffsetDateTime copyStartTime() {
        return this.innerModel().copyStartTime();
    }

    public OffsetDateTime copyEndTime() {
        return this.innerModel().copyEndTime();
    }

    public OffsetDateTime postCopyStartTime() {
        return this.innerModel().postCopyStartTime();
    }

    public OffsetDateTime postCopyEndTime() {
        return this.innerModel().postCopyEndTime();
    }

    public OffsetDateTime cleanupComputeStartTime() {
        return this.innerModel().cleanupComputeStartTime();
    }

    public OffsetDateTime cleanupComputeEndTime() {
        return this.innerModel().cleanupComputeEndTime();
    }

    public JobDetails details() {
        JobDetailsInner inner = this.innerModel().details();
        if (inner != null) {
            return new JobDetailsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public String dataSourceName() {
        return this.innerModel().dataSourceName();
    }

    public String dataSinkName() {
        return this.innerModel().dataSinkName();
    }

    public Long copyErrors() {
        return this.innerModel().copyErrors();
    }

    public Long unsupportedFiles() {
        return this.innerModel().unsupportedFiles();
    }

    public JobPropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybriddatamanager.HybridDataManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybriddatamanager.generated;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.Context;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.hybriddatamanager.models.RunParameters;
import com.azure.resourcemanager.hybriddatamanager.models.UserConfirmation;
import java.io.IOException;
import java.util.Arrays;

/** Samples for JobDefinitions Run. */
public final class JobDefinitionsRunSamples {
    /*
     * x-ms-original-file: specification/hybriddatamanager/resource-manager/Microsoft.HybridData/stable/2021-05-01/examples/JobDefinitions_Run-POST-example-162.json
     */
    /**
     * Sample code: SessionRecords\JobDefinitionsTest\JobDefinitions_RunPOST162.
     *
     * @param manager Entry point to HybridDataManager.
     */
    public static void sessionRecordsJobDefinitionsTestJobDefinitionsRunPOST162(
        com.azure.resourcemanager.hybriddatamanager.HybridDataManager manager) throws IOException {
        manager
            .jobDefinitions()
            .run(
                "TestAzureSDKOperations1",
                "DataTransformation",
                "6e0219f5-327a-4365-904f-05eed4227ad7",
                "Microsoft.HybridData",
                new RunParameters()
                    .withUserConfirmation(UserConfirmation.NOT_REQUIRED)
                    .withDataServiceInput(
                        SerializerFactory
                            .createDefaultManagementSerializerAdapter()
                            .deserialize(
                                "{\"AzureStorageType\":\"Blob\",\"BackupChoice\":\"UseExistingLatest\",\"ContainerName\":\"containerfromtest\",\"DeviceName\":\"8600-SHG0997877L71FC\",\"FileNameFilter\":\"*\",\"IsDirectoryMode\":false,\"RootDirectories\":[\"\\\\\"],\"VolumeNames\":[\"TestAutomation\"]}",
                                Object.class,
                                SerializerEncoding.JSON))
                    .withCustomerSecrets(Arrays.asList()),
                Context.NONE);
    }
}

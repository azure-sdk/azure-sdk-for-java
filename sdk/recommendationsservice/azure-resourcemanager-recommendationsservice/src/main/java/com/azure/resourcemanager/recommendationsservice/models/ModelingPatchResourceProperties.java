// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recommendationsservice.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Modeling resource properties to update.
 */
@Fluent
public final class ModelingPatchResourceProperties implements JsonSerializable<ModelingPatchResourceProperties> {
    /*
     * The configuration to raw CDM data to be used as Modeling resource input.
     */
    private ModelingInputData inputData;

    /**
     * Creates an instance of ModelingPatchResourceProperties class.
     */
    public ModelingPatchResourceProperties() {
    }

    /**
     * Get the inputData property: The configuration to raw CDM data to be used as Modeling resource input.
     * 
     * @return the inputData value.
     */
    public ModelingInputData inputData() {
        return this.inputData;
    }

    /**
     * Set the inputData property: The configuration to raw CDM data to be used as Modeling resource input.
     * 
     * @param inputData the inputData value to set.
     * @return the ModelingPatchResourceProperties object itself.
     */
    public ModelingPatchResourceProperties withInputData(ModelingInputData inputData) {
        this.inputData = inputData;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (inputData() != null) {
            inputData().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("inputData", this.inputData);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ModelingPatchResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ModelingPatchResourceProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ModelingPatchResourceProperties.
     */
    public static ModelingPatchResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ModelingPatchResourceProperties deserializedModelingPatchResourceProperties
                = new ModelingPatchResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("inputData".equals(fieldName)) {
                    deserializedModelingPatchResourceProperties.inputData = ModelingInputData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedModelingPatchResourceProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mongoclusters.generated;

import com.azure.resourcemanager.mongoclusters.models.CreateMode;
import com.azure.resourcemanager.mongoclusters.models.MongoClusterRestoreParameters;
import com.azure.resourcemanager.mongoclusters.models.NodeGroupSpec;
import com.azure.resourcemanager.mongoclusters.models.NodeKind;
import java.time.OffsetDateTime;
import java.util.Arrays;

/**
 * Samples for MongoClusters CreateOrUpdate.
 */
public final class MongoClustersCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/mongoclusters/resource-manager/Microsoft.DocumentDB/preview/2024-03-01-preview/examples/
     * MongoClusterCreatePITR.json
     */
    /**
     * Sample code: Creates a Mongo Cluster resource from a point in time restore.
     * 
     * @param manager Entry point to MongoClusterManager.
     */
    public static void createsAMongoClusterResourceFromAPointInTimeRestore(
        com.azure.resourcemanager.mongoclusters.MongoClusterManager manager) {
        manager.mongoClusters().define("myMongoCluster").withRegion("westus2")
            .withExistingResourceGroup("TestResourceGroup").withCreateMode(CreateMode.POINT_IN_TIME_RESTORE)
            .withRestoreParameters(new MongoClusterRestoreParameters()
                .withPointInTimeUtc(OffsetDateTime.parse("2023-01-13T20:07:35Z")).withSourceResourceId(
                    "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestResourceGroup/providers/Microsoft.DocumentDB/mongoClusters/myOtherMongoCluster"))
            .create();
    }

    /*
     * x-ms-original-file:
     * specification/mongoclusters/resource-manager/Microsoft.DocumentDB/preview/2024-03-01-preview/examples/
     * MongoClusterCreate.json
     */
    /**
     * Sample code: Creates a new Mongo Cluster resource.
     * 
     * @param manager Entry point to MongoClusterManager.
     */
    public static void
        createsANewMongoClusterResource(com.azure.resourcemanager.mongoclusters.MongoClusterManager manager) {
        manager.mongoClusters().define("myMongoCluster").withRegion("westus2")
            .withExistingResourceGroup("TestResourceGroup").withAdministratorLogin("mongoAdmin")
            .withAdministratorLoginPassword("password").withServerVersion("5.0")
            .withNodeGroupSpecs(Arrays.asList(new NodeGroupSpec().withSku("M30").withDiskSizeGB(128L).withEnableHa(true)
                .withKind(NodeKind.SHARD).withNodeCount(1)))
            .create();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.implementation;

import com.azure.resourcemanager.batch.fluent.models.BatchAccountInner;
import com.azure.resourcemanager.batch.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.batch.models.AuthenticationMode;
import com.azure.resourcemanager.batch.models.AutoStorageProperties;
import com.azure.resourcemanager.batch.models.BatchAccount;
import com.azure.resourcemanager.batch.models.BatchAccountIdentity;
import com.azure.resourcemanager.batch.models.EncryptionProperties;
import com.azure.resourcemanager.batch.models.KeyVaultReference;
import com.azure.resourcemanager.batch.models.NetworkProfile;
import com.azure.resourcemanager.batch.models.PoolAllocationMode;
import com.azure.resourcemanager.batch.models.PrivateEndpointConnection;
import com.azure.resourcemanager.batch.models.ProvisioningState;
import com.azure.resourcemanager.batch.models.PublicNetworkAccessType;
import com.azure.resourcemanager.batch.models.VirtualMachineFamilyCoreQuota;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public final class BatchAccountImpl implements BatchAccount {
    private BatchAccountInner innerObject;

    private final com.azure.resourcemanager.batch.BatchManager serviceManager;

    BatchAccountImpl(BatchAccountInner innerObject, com.azure.resourcemanager.batch.BatchManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public BatchAccountIdentity identity() {
        return this.innerModel().identity();
    }

    public String accountEndpoint() {
        return this.innerModel().accountEndpoint();
    }

    public String nodeManagementEndpoint() {
        return this.innerModel().nodeManagementEndpoint();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public PoolAllocationMode poolAllocationMode() {
        return this.innerModel().poolAllocationMode();
    }

    public KeyVaultReference keyVaultReference() {
        return this.innerModel().keyVaultReference();
    }

    public PublicNetworkAccessType publicNetworkAccess() {
        return this.innerModel().publicNetworkAccess();
    }

    public NetworkProfile networkProfile() {
        return this.innerModel().networkProfile();
    }

    public List<PrivateEndpointConnection> privateEndpointConnections() {
        List<PrivateEndpointConnectionInner> inner = this.innerModel().privateEndpointConnections();
        if (inner != null) {
            return Collections.unmodifiableList(inner.stream()
                .map(inner1 -> new PrivateEndpointConnectionImpl(inner1, this.manager()))
                .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public AutoStorageProperties autoStorage() {
        return this.innerModel().autoStorage();
    }

    public EncryptionProperties encryption() {
        return this.innerModel().encryption();
    }

    public Integer dedicatedCoreQuota() {
        return this.innerModel().dedicatedCoreQuota();
    }

    public Integer lowPriorityCoreQuota() {
        return this.innerModel().lowPriorityCoreQuota();
    }

    public List<VirtualMachineFamilyCoreQuota> dedicatedCoreQuotaPerVMFamily() {
        List<VirtualMachineFamilyCoreQuota> inner = this.innerModel().dedicatedCoreQuotaPerVMFamily();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Boolean dedicatedCoreQuotaPerVMFamilyEnforced() {
        return this.innerModel().dedicatedCoreQuotaPerVMFamilyEnforced();
    }

    public Integer poolQuota() {
        return this.innerModel().poolQuota();
    }

    public Integer activeJobAndJobScheduleQuota() {
        return this.innerModel().activeJobAndJobScheduleQuota();
    }

    public List<AuthenticationMode> allowedAuthenticationModes() {
        List<AuthenticationMode> inner = this.innerModel().allowedAuthenticationModes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public BatchAccountInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.batch.BatchManager manager() {
        return this.serviceManager;
    }
}

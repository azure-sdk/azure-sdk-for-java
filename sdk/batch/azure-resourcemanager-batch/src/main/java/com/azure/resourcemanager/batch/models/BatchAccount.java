// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.batch.models;

import com.azure.resourcemanager.batch.fluent.models.BatchAccountInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of BatchAccount.
 */
public interface BatchAccount {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: The identity of the Batch account.
     * 
     * @return the identity value.
     */
    BatchAccountIdentity identity();

    /**
     * Gets the accountEndpoint property: The account endpoint used to interact with the Batch service.
     * 
     * @return the accountEndpoint value.
     */
    String accountEndpoint();

    /**
     * Gets the nodeManagementEndpoint property: The endpoint used by compute node to connect to the Batch node
     * management service.
     * 
     * @return the nodeManagementEndpoint value.
     */
    String nodeManagementEndpoint();

    /**
     * Gets the provisioningState property: The provisioned state of the resource.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the poolAllocationMode property: The allocation mode for creating pools in the Batch account.
     * 
     * @return the poolAllocationMode value.
     */
    PoolAllocationMode poolAllocationMode();

    /**
     * Gets the keyVaultReference property: Identifies the Azure key vault associated with a Batch account.
     * 
     * @return the keyVaultReference value.
     */
    KeyVaultReference keyVaultReference();

    /**
     * Gets the publicNetworkAccess property: If not specified, the default value is 'enabled'.
     * 
     * @return the publicNetworkAccess value.
     */
    PublicNetworkAccessType publicNetworkAccess();

    /**
     * Gets the networkProfile property: The network profile only takes effect when publicNetworkAccess is enabled.
     * 
     * @return the networkProfile value.
     */
    NetworkProfile networkProfile();

    /**
     * Gets the privateEndpointConnections property: List of private endpoint connections associated with the Batch
     * account.
     * 
     * @return the privateEndpointConnections value.
     */
    List<PrivateEndpointConnection> privateEndpointConnections();

    /**
     * Gets the autoStorage property: Contains information about the auto-storage account associated with a Batch
     * account.
     * 
     * @return the autoStorage value.
     */
    AutoStorageProperties autoStorage();

    /**
     * Gets the encryption property: Configures how customer data is encrypted inside the Batch account. By default,
     * accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used
     * instead.
     * 
     * @return the encryption value.
     */
    EncryptionProperties encryption();

    /**
     * Gets the dedicatedCoreQuota property: For accounts with PoolAllocationMode set to UserSubscription, quota is
     * managed on the subscription so this value is not returned.
     * 
     * @return the dedicatedCoreQuota value.
     */
    Integer dedicatedCoreQuota();

    /**
     * Gets the lowPriorityCoreQuota property: For accounts with PoolAllocationMode set to UserSubscription, quota is
     * managed on the subscription so this value is not returned.
     * 
     * @return the lowPriorityCoreQuota value.
     */
    Integer lowPriorityCoreQuota();

    /**
     * Gets the dedicatedCoreQuotaPerVMFamily property: A list of the dedicated core quota per Virtual Machine family
     * for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the
     * subscription so this value is not returned.
     * 
     * @return the dedicatedCoreQuotaPerVMFamily value.
     */
    List<VirtualMachineFamilyCoreQuota> dedicatedCoreQuotaPerVMFamily();

    /**
     * Gets the dedicatedCoreQuotaPerVMFamilyEnforced property: If this flag is true, dedicated core quota is enforced
     * via both the dedicatedCoreQuotaPerVMFamily and dedicatedCoreQuota properties on the account. If this flag is
     * false, dedicated core quota is enforced only via the dedicatedCoreQuota property on the account and does not
     * consider Virtual Machine family.
     * 
     * @return the dedicatedCoreQuotaPerVMFamilyEnforced value.
     */
    Boolean dedicatedCoreQuotaPerVMFamilyEnforced();

    /**
     * Gets the poolQuota property: The pool quota for the Batch account.
     * 
     * @return the poolQuota value.
     */
    Integer poolQuota();

    /**
     * Gets the activeJobAndJobScheduleQuota property: The active job and job schedule quota for the Batch account.
     * 
     * @return the activeJobAndJobScheduleQuota value.
     */
    Integer activeJobAndJobScheduleQuota();

    /**
     * Gets the allowedAuthenticationModes property: List of allowed authentication modes for the Batch account that can
     * be used to authenticate with the data plane. This does not affect authentication with the control plane.
     * 
     * @return the allowedAuthenticationModes value.
     */
    List<AuthenticationMode> allowedAuthenticationModes();

    /**
     * Gets the inner com.azure.resourcemanager.batch.fluent.models.BatchAccountInner object.
     * 
     * @return the inner object.
     */
    BatchAccountInner innerModel();
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsServiceProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServicePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model = BinaryData.fromString(
            "{\"displayName\":\"udtjuewbc\",\"dnsServiceIp\":\"xuuwhcj\",\"defaultDnsZone\":\"ccybvp\",\"fqdnZones\":[\"kkudzp\",\"gwjplmag\"],\"logLevel\":\"DEBUG\",\"status\":\"FAILURE\",\"provisioningState\":\"Failed\",\"revision\":3845696618127187337}")
            .toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("udtjuewbc", model.displayName());
        Assertions.assertEquals("xuuwhcj", model.dnsServiceIp());
        Assertions.assertEquals("ccybvp", model.defaultDnsZone());
        Assertions.assertEquals("kkudzp", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(3845696618127187337L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceProperties model
            = new WorkloadNetworkDnsServiceProperties().withDisplayName("udtjuewbc")
                .withDnsServiceIp("xuuwhcj")
                .withDefaultDnsZone("ccybvp")
                .withFqdnZones(Arrays.asList("kkudzp", "gwjplmag"))
                .withLogLevel(DnsServiceLogLevelEnum.DEBUG)
                .withRevision(3845696618127187337L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceProperties.class);
        Assertions.assertEquals("udtjuewbc", model.displayName());
        Assertions.assertEquals("xuuwhcj", model.dnsServiceIp());
        Assertions.assertEquals("ccybvp", model.defaultDnsZone());
        Assertions.assertEquals("kkudzp", model.fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.DEBUG, model.logLevel());
        Assertions.assertEquals(3845696618127187337L, model.revision());
    }
}

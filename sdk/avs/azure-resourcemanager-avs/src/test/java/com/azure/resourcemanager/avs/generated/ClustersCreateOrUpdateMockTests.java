// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.ClusterProperties;
import com.azure.resourcemanager.avs.models.Sku;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"clusterSize\":1908297437,\"provisioningState\":\"Succeeded\",\"clusterId\":1281103127,\"hosts\":[\"wbzuwfmdurage\",\"izvcjfe\",\"isdju\",\"ggbqi\"],\"vsanDatastoreName\":\"xkbsazgakgac\"},\"sku\":{\"name\":\"rcmjdmspofapvuh\",\"tier\":\"Standard\",\"size\":\"iofrzgbzjedmstk\",\"family\":\"l\",\"capacity\":1553181859},\"id\":\"uiiznktwfansnvpd\",\"name\":\"bmikost\",\"type\":\"z\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Cluster response = manager.clusters()
            .define("gzwywak")
            .withExistingPrivateCloud("s", "sphaivmxyasflvg")
            .withSku(new Sku().withName("gsxgnxfyqon")
                .withTier(SkuTier.BASIC)
                .withSize("xwdofdb")
                .withFamily("qxeiiqbimhtmwwi")
                .withCapacity(708075307))
            .withProperties(new ClusterProperties().withClusterSize(1976456758)
                .withHosts(Arrays.asList("mlj", "lnymzotqy", "yuzcbmqqvxmvw", "gtayxonsupeujlz"))
                .withVsanDatastoreName("hcvsqltnzoi"))
            .create();

        Assertions.assertEquals(1908297437, response.properties().clusterSize());
        Assertions.assertEquals("wbzuwfmdurage", response.properties().hosts().get(0));
        Assertions.assertEquals("xkbsazgakgac", response.properties().vsanDatastoreName());
        Assertions.assertEquals("rcmjdmspofapvuh", response.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, response.sku().tier());
        Assertions.assertEquals("iofrzgbzjedmstk", response.sku().size());
        Assertions.assertEquals("l", response.sku().family());
        Assertions.assertEquals(1553181859, response.sku().capacity());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Datastore;
import com.azure.resourcemanager.avs.models.MountOptionEnum;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DatastoresListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"netAppVolume\":{\"id\":\"zz\"},\"diskPoolVolume\":{\"targetId\":\"jafi\",\"lunName\":\"lhguyn\",\"mountOption\":\"ATTACH\",\"path\":\"gmltxdw\"},\"elasticSanVolume\":{\"targetId\":\"ozusgz\"},\"pureStorageVolume\":{\"storagePoolId\":\"ns\",\"sizeGb\":411484451},\"status\":\"DeadOrError\"},\"id\":\"pafolp\",\"name\":\"mwamxqzragpgdph\",\"type\":\"vdulajv\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Datastore> response
            = manager.datastores().list("vhqjwtrhtgvg", "pcrrk", "lawjmjsmwrok", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zz", response.iterator().next().properties().netAppVolume().id());
        Assertions.assertEquals("jafi", response.iterator().next().properties().diskPoolVolume().targetId());
        Assertions.assertEquals("lhguyn", response.iterator().next().properties().diskPoolVolume().lunName());
        Assertions.assertEquals(MountOptionEnum.ATTACH,
            response.iterator().next().properties().diskPoolVolume().mountOption());
        Assertions.assertEquals("ozusgz", response.iterator().next().properties().elasticSanVolume().targetId());
        Assertions.assertEquals("ns", response.iterator().next().properties().pureStorageVolume().storagePoolId());
        Assertions.assertEquals(411484451, response.iterator().next().properties().pureStorageVolume().sizeGb());
    }
}

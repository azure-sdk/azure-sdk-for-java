// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentProperties;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkSegmentPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkSegmentProperties model = BinaryData.fromString(
            "{\"displayName\":\"ymerteeammxq\",\"connectedGateway\":\"kk\",\"subnet\":{\"dhcpRanges\":[\"rtkgdojbmxvavref\",\"eesvecu\"],\"gatewayAddress\":\"pxtxsuwp\"},\"portVif\":[{\"portName\":\"wsawddjibabxvi\"},{\"portName\":\"tvtzeexavoxtfg\"},{\"portName\":\"cd\"},{\"portName\":\"qbw\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Deleting\",\"revision\":2335839042688516657}")
            .toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("ymerteeammxq", model.displayName());
        Assertions.assertEquals("kk", model.connectedGateway());
        Assertions.assertEquals("rtkgdojbmxvavref", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("pxtxsuwp", model.subnet().gatewayAddress());
        Assertions.assertEquals(2335839042688516657L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkSegmentProperties model = new WorkloadNetworkSegmentProperties().withDisplayName("ymerteeammxq")
            .withConnectedGateway("kk")
            .withSubnet(new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("rtkgdojbmxvavref", "eesvecu"))
                .withGatewayAddress("pxtxsuwp"))
            .withRevision(2335839042688516657L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkSegmentProperties.class);
        Assertions.assertEquals("ymerteeammxq", model.displayName());
        Assertions.assertEquals("kk", model.connectedGateway());
        Assertions.assertEquals("rtkgdojbmxvavref", model.subnet().dhcpRanges().get(0));
        Assertions.assertEquals("pxtxsuwp", model.subnet().gatewayAddress());
        Assertions.assertEquals(2335839042688516657L, model.revision());
    }
}

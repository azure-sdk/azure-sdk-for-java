// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Datastore;
import com.azure.resourcemanager.avs.models.MountOptionEnum;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DatastoresGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"netAppVolume\":{\"id\":\"v\"},\"diskPoolVolume\":{\"targetId\":\"laiwdcxsmlzzh\",\"lunName\":\"dtxetlgydlh\",\"mountOption\":\"MOUNT\",\"path\":\"npxybafiq\"},\"elasticSanVolume\":{\"targetId\":\"aarbgjekg\"},\"pureStorageVolume\":{\"storagePoolId\":\"lbyulidwcwvmze\",\"sizeGb\":2074330013},\"status\":\"Accessible\"},\"id\":\"hj\",\"name\":\"rwgdnqzbrfks\",\"type\":\"zhzmtksjci\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Datastore response = manager.datastores()
            .getWithResponse("ejchcsrlz", "nmzlanru", "dwv", "phcnzqtpj", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("v", response.properties().netAppVolume().id());
        Assertions.assertEquals("laiwdcxsmlzzh", response.properties().diskPoolVolume().targetId());
        Assertions.assertEquals("dtxetlgydlh", response.properties().diskPoolVolume().lunName());
        Assertions.assertEquals(MountOptionEnum.MOUNT, response.properties().diskPoolVolume().mountOption());
        Assertions.assertEquals("aarbgjekg", response.properties().elasticSanVolume().targetId());
        Assertions.assertEquals("lbyulidwcwvmze", response.properties().pureStorageVolume().storagePoolId());
        Assertions.assertEquals(2074330013, response.properties().pureStorageVolume().sizeGb());
    }
}

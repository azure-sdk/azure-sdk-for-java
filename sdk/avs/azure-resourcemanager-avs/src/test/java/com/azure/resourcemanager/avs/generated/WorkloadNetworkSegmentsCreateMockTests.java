// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegment;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentProperties;
import com.azure.resourcemanager.avs.models.WorkloadNetworkSegmentSubnet;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworkSegmentsCreateMockTests {
    @Test
    public void testCreate() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"aeuzanh\",\"connectedGateway\":\"nhsenwphpzfng\",\"subnet\":{\"dhcpRanges\":[\"idftujwjjufwbe\",\"rkuorh\",\"ssruqnmdvhazcvj\"],\"gatewayAddress\":\"iqswbqer\"},\"portVif\":[{\"portName\":\"ytxtdgu\"},{\"portName\":\"lbpktg\"},{\"portName\":\"tyouambewreswmow\"}],\"status\":\"FAILURE\",\"provisioningState\":\"Succeeded\",\"revision\":3137161241877658321},\"id\":\"eyguq\",\"name\":\"gijiitnspxlzd\",\"type\":\"sygrijwa\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkSegment response = manager.workloadNetworkSegments()
            .define("h")
            .withExistingPrivateCloud("rcssbzhddubbnq", "b")
            .withProperties(new WorkloadNetworkSegmentProperties().withDisplayName("ehpavawugiqjtiog")
                .withConnectedGateway("dminic")
                .withSubnet(
                    new WorkloadNetworkSegmentSubnet().withDhcpRanges(Arrays.asList("johiyg")).withGatewayAddress("n"))
                .withRevision(5776993387092532527L))
            .create();

        Assertions.assertEquals("aeuzanh", response.properties().displayName());
        Assertions.assertEquals("nhsenwphpzfng", response.properties().connectedGateway());
        Assertions.assertEquals("idftujwjjufwbe", response.properties().subnet().dhcpRanges().get(0));
        Assertions.assertEquals("iqswbqer", response.properties().subnet().gatewayAddress());
        Assertions.assertEquals(3137161241877658321L, response.properties().revision());
    }
}

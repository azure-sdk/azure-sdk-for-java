// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZoneProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsZonePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model = BinaryData.fromString(
            "{\"displayName\":\"wwvaiqyuvvfonk\",\"domain\":[\"qyikvy\",\"auy\"],\"dnsServerIps\":[\"uwmncs\",\"tijfybvp\"],\"sourceIp\":\"krsgsgb\",\"dnsServices\":4955810489372096928,\"provisioningState\":\"Succeeded\",\"revision\":180191019060757346}")
            .toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("wwvaiqyuvvfonk", model.displayName());
        Assertions.assertEquals("qyikvy", model.domain().get(0));
        Assertions.assertEquals("uwmncs", model.dnsServerIps().get(0));
        Assertions.assertEquals("krsgsgb", model.sourceIp());
        Assertions.assertEquals(4955810489372096928L, model.dnsServices());
        Assertions.assertEquals(180191019060757346L, model.revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsZoneProperties model
            = new WorkloadNetworkDnsZoneProperties().withDisplayName("wwvaiqyuvvfonk")
                .withDomain(Arrays.asList("qyikvy", "auy"))
                .withDnsServerIps(Arrays.asList("uwmncs", "tijfybvp"))
                .withSourceIp("krsgsgb")
                .withDnsServices(4955810489372096928L)
                .withRevision(180191019060757346L);
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsZoneProperties.class);
        Assertions.assertEquals("wwvaiqyuvvfonk", model.displayName());
        Assertions.assertEquals("qyikvy", model.domain().get(0));
        Assertions.assertEquals("uwmncs", model.dnsServerIps().get(0));
        Assertions.assertEquals("krsgsgb", model.sourceIp());
        Assertions.assertEquals(4955810489372096928L, model.dnsServices());
        Assertions.assertEquals(180191019060757346L, model.revision());
    }
}

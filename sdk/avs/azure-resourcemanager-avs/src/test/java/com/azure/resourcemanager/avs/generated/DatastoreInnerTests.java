// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.DatastoreInner;
import com.azure.resourcemanager.avs.models.DatastoreProperties;
import com.azure.resourcemanager.avs.models.DiskPoolVolume;
import com.azure.resourcemanager.avs.models.ElasticSanVolume;
import com.azure.resourcemanager.avs.models.MountOptionEnum;
import com.azure.resourcemanager.avs.models.NetAppVolume;
import com.azure.resourcemanager.avs.models.PureStorageVolume;
import org.junit.jupiter.api.Assertions;

public final class DatastoreInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DatastoreInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Failed\",\"netAppVolume\":{\"id\":\"hd\"},\"diskPoolVolume\":{\"targetId\":\"i\",\"lunName\":\"qeojnxqbzvddntw\",\"mountOption\":\"MOUNT\",\"path\":\"cbtwnpzaoqvuh\"},\"elasticSanVolume\":{\"targetId\":\"cffcyddglmj\"},\"pureStorageVolume\":{\"storagePoolId\":\"jqkwpyeicx\",\"sizeGb\":1907104888},\"status\":\"Detached\"},\"id\":\"q\",\"name\":\"hkh\",\"type\":\"xuigdtopbobj\"}")
            .toObject(DatastoreInner.class);
        Assertions.assertEquals("hd", model.properties().netAppVolume().id());
        Assertions.assertEquals("i", model.properties().diskPoolVolume().targetId());
        Assertions.assertEquals("qeojnxqbzvddntw", model.properties().diskPoolVolume().lunName());
        Assertions.assertEquals(MountOptionEnum.MOUNT, model.properties().diskPoolVolume().mountOption());
        Assertions.assertEquals("cffcyddglmj", model.properties().elasticSanVolume().targetId());
        Assertions.assertEquals("jqkwpyeicx", model.properties().pureStorageVolume().storagePoolId());
        Assertions.assertEquals(1907104888, model.properties().pureStorageVolume().sizeGb());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DatastoreInner model = new DatastoreInner()
            .withProperties(new DatastoreProperties().withNetAppVolume(new NetAppVolume().withId("hd"))
                .withDiskPoolVolume(new DiskPoolVolume().withTargetId("i")
                    .withLunName("qeojnxqbzvddntw")
                    .withMountOption(MountOptionEnum.MOUNT))
                .withElasticSanVolume(new ElasticSanVolume().withTargetId("cffcyddglmj"))
                .withPureStorageVolume(new PureStorageVolume().withStoragePoolId("jqkwpyeicx").withSizeGb(1907104888)));
        model = BinaryData.fromObject(model).toObject(DatastoreInner.class);
        Assertions.assertEquals("hd", model.properties().netAppVolume().id());
        Assertions.assertEquals("i", model.properties().diskPoolVolume().targetId());
        Assertions.assertEquals("qeojnxqbzvddntw", model.properties().diskPoolVolume().lunName());
        Assertions.assertEquals(MountOptionEnum.MOUNT, model.properties().diskPoolVolume().mountOption());
        Assertions.assertEquals("cffcyddglmj", model.properties().elasticSanVolume().targetId());
        Assertions.assertEquals("jqkwpyeicx", model.properties().pureStorageVolume().storagePoolId());
        Assertions.assertEquals(1907104888, model.properties().pureStorageVolume().sizeGb());
    }
}

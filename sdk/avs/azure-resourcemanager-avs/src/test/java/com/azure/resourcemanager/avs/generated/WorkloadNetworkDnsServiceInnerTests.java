// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkDnsServiceInner;
import com.azure.resourcemanager.avs.models.DnsServiceLogLevelEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsServiceProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class WorkloadNetworkDnsServiceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = BinaryData.fromString(
            "{\"properties\":{\"displayName\":\"ajlkatnw\",\"dnsServiceIp\":\"iopid\",\"defaultDnsZone\":\"qfkuvscxkdmli\",\"fqdnZones\":[\"ibrxkp\",\"loazuruocbgoo\",\"bteoybf\",\"jxakv\"],\"logLevel\":\"INFO\",\"status\":\"FAILURE\",\"provisioningState\":\"Canceled\",\"revision\":1791620086169477405},\"id\":\"yw\",\"name\":\"t\",\"type\":\"gkxnyedabg\"}")
            .toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("ajlkatnw", model.properties().displayName());
        Assertions.assertEquals("iopid", model.properties().dnsServiceIp());
        Assertions.assertEquals("qfkuvscxkdmli", model.properties().defaultDnsZone());
        Assertions.assertEquals("ibrxkp", model.properties().fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.properties().logLevel());
        Assertions.assertEquals(1791620086169477405L, model.properties().revision());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        WorkloadNetworkDnsServiceInner model = new WorkloadNetworkDnsServiceInner()
            .withProperties(new WorkloadNetworkDnsServiceProperties().withDisplayName("ajlkatnw")
                .withDnsServiceIp("iopid")
                .withDefaultDnsZone("qfkuvscxkdmli")
                .withFqdnZones(Arrays.asList("ibrxkp", "loazuruocbgoo", "bteoybf", "jxakv"))
                .withLogLevel(DnsServiceLogLevelEnum.INFO)
                .withRevision(1791620086169477405L));
        model = BinaryData.fromObject(model).toObject(WorkloadNetworkDnsServiceInner.class);
        Assertions.assertEquals("ajlkatnw", model.properties().displayName());
        Assertions.assertEquals("iopid", model.properties().dnsServiceIp());
        Assertions.assertEquals("qfkuvscxkdmli", model.properties().defaultDnsZone());
        Assertions.assertEquals("ibrxkp", model.properties().fqdnZones().get(0));
        Assertions.assertEquals(DnsServiceLogLevelEnum.INFO, model.properties().logLevel());
        Assertions.assertEquals(1791620086169477405L, model.properties().revision());
    }
}

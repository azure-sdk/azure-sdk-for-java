// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ScriptExecutionsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"scriptCmdletId\":\"ijymrhbguzozky\",\"parameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"f\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"zhhh\"}],\"hiddenParameters\":[{\"type\":\"ScriptExecutionParameter\",\"name\":\"mffjkutycyarn\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"oohguabzoghkt\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"pyc\"},{\"type\":\"ScriptExecutionParameter\",\"name\":\"hcoeocnhzq\"}],\"failureReason\":\"ttjzcfyjzpt\",\"timeout\":\"rl\",\"retention\":\"apqinf\",\"submittedAt\":\"2021-03-15T02:08:03Z\",\"startedAt\":\"2021-04-28T11:21:26Z\",\"finishedAt\":\"2021-04-17T18:39:17Z\",\"provisioningState\":\"Cancelled\",\"output\":[\"jzralc\",\"pjby\"],\"namedOutputs\":{\"joqcjenkyhfqzvsq\":{},\"fxjelg\":{},\"mpzqjhhhq\":{},\"uwyvcacoyvi\":{}},\"information\":[\"izus\"],\"warnings\":[\"lbscmnlz\",\"jiu\",\"ehgmvflnwyv\"],\"errors\":[\"rerlniy\",\"yl\",\"fwxzutg\",\"ztwhghmupg\"]},\"id\":\"jtcdxabbujftaben\",\"name\":\"bklqpxz\",\"type\":\"cafeddw\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<ScriptExecution> response
            = manager.scriptExecutions().list("kso", "dgo", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ijymrhbguzozky", response.iterator().next().properties().scriptCmdletId());
        Assertions.assertEquals("f", response.iterator().next().properties().parameters().get(0).name());
        Assertions.assertEquals("mffjkutycyarn",
            response.iterator().next().properties().hiddenParameters().get(0).name());
        Assertions.assertEquals("ttjzcfyjzpt", response.iterator().next().properties().failureReason());
        Assertions.assertEquals("rl", response.iterator().next().properties().timeout());
        Assertions.assertEquals("apqinf", response.iterator().next().properties().retention());
        Assertions.assertEquals("jzralc", response.iterator().next().properties().output().get(0));
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.Cluster;
import com.azure.resourcemanager.avs.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ClustersListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"clusterSize\":757047359,\"provisioningState\":\"Canceled\",\"clusterId\":1911202456,\"hosts\":[\"d\",\"ibidmhmwffp\",\"fmuvapckccr\",\"vwe\"],\"vsanDatastoreName\":\"xoy\"},\"sku\":{\"name\":\"ukphaimmoiroq\",\"tier\":\"Basic\",\"size\":\"bragapyyrmf\",\"family\":\"bpav\",\"capacity\":1121164177},\"id\":\"ppdbwnupgahxkum\",\"name\":\"sjcaacfdmmcpugm\",\"type\":\"hqepvufhbzehewh\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Cluster> response
            = manager.clusters().list("zqcyknap", "ofyuicd", com.azure.core.util.Context.NONE);

        Assertions.assertEquals(757047359, response.iterator().next().properties().clusterSize());
        Assertions.assertEquals("d", response.iterator().next().properties().hosts().get(0));
        Assertions.assertEquals("xoy", response.iterator().next().properties().vsanDatastoreName());
        Assertions.assertEquals("ukphaimmoiroq", response.iterator().next().sku().name());
        Assertions.assertEquals(SkuTier.BASIC, response.iterator().next().sku().tier());
        Assertions.assertEquals("bragapyyrmf", response.iterator().next().sku().size());
        Assertions.assertEquals("bpav", response.iterator().next().sku().family());
        Assertions.assertEquals(1121164177, response.iterator().next().sku().capacity());
    }
}

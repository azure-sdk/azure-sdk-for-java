// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroring;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworkPortMirroringProfilesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"nbqxvhcsyhzlwxae\",\"direction\":\"EGRESS\",\"source\":\"rexdndsbd\",\"destination\":\"aderzmw\",\"status\":\"FAILURE\",\"provisioningState\":\"Building\",\"revision\":8995037504578232211},\"id\":\"v\",\"name\":\"magoaqylkjz\",\"type\":\"jiuazjc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkPortMirroring response = manager.workloadNetworkPortMirroringProfiles()
            .getWithResponse("ui", "vxva", "vcrk", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("nbqxvhcsyhzlwxae", response.properties().displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.EGRESS, response.properties().direction());
        Assertions.assertEquals("rexdndsbd", response.properties().source());
        Assertions.assertEquals("aderzmw", response.properties().destination());
        Assertions.assertEquals(8995037504578232211L, response.properties().revision());
    }
}

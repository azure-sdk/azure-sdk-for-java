// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroring;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksGetPortMirroringWithResponseMockTests {
    @Test
    public void testGetPortMirroringWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"displayName\":\"xbkwv\",\"direction\":\"INGRESS\",\"source\":\"v\",\"destination\":\"bzdixzmq\",\"status\":\"FAILURE\",\"provisioningState\":\"Updating\",\"revision\":2317307583598027540},\"id\":\"hewjptmcgsbost\",\"name\":\"eln\",\"type\":\"la\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        WorkloadNetworkPortMirroring response = manager.workloadNetworks()
            .getPortMirroringWithResponse("ygvkzqkjj", "okbzef", "zrxcczurt", "e", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xbkwv", response.properties().displayName());
        Assertions.assertEquals(PortMirroringDirectionEnum.INGRESS, response.properties().direction());
        Assertions.assertEquals("v", response.properties().source());
        Assertions.assertEquals("bzdixzmq", response.properties().destination());
        Assertions.assertEquals(2317307583598027540L, response.properties().revision());
    }
}

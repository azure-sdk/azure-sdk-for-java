// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.avs.AvsManager;
import com.azure.resourcemanager.avs.models.WorkloadNetworkDnsZone;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class WorkloadNetworksListDnsZonesMockTests {
    @Test
    public void testListDnsZones() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"displayName\":\"cxkjibnxmysuxswq\",\"domain\":[\"vl\",\"ijpstte\",\"oqq\",\"wcyyufmhruncu\"],\"dnsServerIps\":[\"spkcdqzh\",\"ctddun\",\"ndy\",\"pchrqbn\"],\"sourceIp\":\"rcgegydcwboxjum\",\"dnsServices\":4609344180627239101,\"provisioningState\":\"Updating\",\"revision\":778654076106405962},\"id\":\"iouaubrjt\",\"name\":\"oq\",\"type\":\"fuojrngif\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AvsManager manager = AvsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<WorkloadNetworkDnsZone> response
            = manager.workloadNetworks().listDnsZones("q", "yb", "wwpgdakchzyvlixq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cxkjibnxmysuxswq", response.iterator().next().properties().displayName());
        Assertions.assertEquals("vl", response.iterator().next().properties().domain().get(0));
        Assertions.assertEquals("spkcdqzh", response.iterator().next().properties().dnsServerIps().get(0));
        Assertions.assertEquals("rcgegydcwboxjum", response.iterator().next().properties().sourceIp());
        Assertions.assertEquals(4609344180627239101L, response.iterator().next().properties().dnsServices());
        Assertions.assertEquals(778654076106405962L, response.iterator().next().properties().revision());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * An ExpressRoute Circuit.
 */
@Immutable
public final class Circuit implements JsonSerializable<Circuit> {
    /*
     * CIDR of primary subnet
     */
    private String primarySubnet;

    /*
     * CIDR of secondary subnet
     */
    private String secondarySubnet;

    /*
     * Identifier of the ExpressRoute Circuit (Microsoft Colo only)
     */
    private String expressRouteID;

    /*
     * ExpressRoute Circuit private peering identifier
     */
    private String expressRoutePrivatePeeringID;

    /**
     * Creates an instance of Circuit class.
     */
    public Circuit() {
    }

    /**
     * Get the primarySubnet property: CIDR of primary subnet.
     * 
     * @return the primarySubnet value.
     */
    public String primarySubnet() {
        return this.primarySubnet;
    }

    /**
     * Get the secondarySubnet property: CIDR of secondary subnet.
     * 
     * @return the secondarySubnet value.
     */
    public String secondarySubnet() {
        return this.secondarySubnet;
    }

    /**
     * Get the expressRouteID property: Identifier of the ExpressRoute Circuit (Microsoft Colo only).
     * 
     * @return the expressRouteID value.
     */
    public String expressRouteID() {
        return this.expressRouteID;
    }

    /**
     * Get the expressRoutePrivatePeeringID property: ExpressRoute Circuit private peering identifier.
     * 
     * @return the expressRoutePrivatePeeringID value.
     */
    public String expressRoutePrivatePeeringID() {
        return this.expressRoutePrivatePeeringID;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Circuit from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Circuit if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IOException If an error occurs while reading the Circuit.
     */
    public static Circuit fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Circuit deserializedCircuit = new Circuit();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("primarySubnet".equals(fieldName)) {
                    deserializedCircuit.primarySubnet = reader.getString();
                } else if ("secondarySubnet".equals(fieldName)) {
                    deserializedCircuit.secondarySubnet = reader.getString();
                } else if ("expressRouteID".equals(fieldName)) {
                    deserializedCircuit.expressRouteID = reader.getString();
                } else if ("expressRoutePrivatePeeringID".equals(fieldName)) {
                    deserializedCircuit.expressRoutePrivatePeeringID = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCircuit;
        });
    }
}

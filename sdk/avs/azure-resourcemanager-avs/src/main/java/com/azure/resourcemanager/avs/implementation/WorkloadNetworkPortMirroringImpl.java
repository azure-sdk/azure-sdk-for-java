// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.avs.fluent.models.WorkloadNetworkPortMirroringInner;
import com.azure.resourcemanager.avs.models.PortMirroringDirectionEnum;
import com.azure.resourcemanager.avs.models.PortMirroringStatusEnum;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroring;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroringProvisioningState;
import com.azure.resourcemanager.avs.models.WorkloadNetworkPortMirroringUpdate;

public final class WorkloadNetworkPortMirroringImpl implements WorkloadNetworkPortMirroring,
    WorkloadNetworkPortMirroring.Definition, WorkloadNetworkPortMirroring.Update {
    private WorkloadNetworkPortMirroringInner innerObject;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public PortMirroringDirectionEnum direction() {
        return this.innerModel().direction();
    }

    public String source() {
        return this.innerModel().source();
    }

    public String destination() {
        return this.innerModel().destination();
    }

    public PortMirroringStatusEnum status() {
        return this.innerModel().status();
    }

    public WorkloadNetworkPortMirroringProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Integer revision() {
        return this.innerModel().revision();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public WorkloadNetworkPortMirroringInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String privateCloudName;

    private String portMirroringId;

    private WorkloadNetworkPortMirroringUpdate updateProperties;

    public WorkloadNetworkPortMirroringImpl withExistingPrivateCloud(String resourceGroupName,
        String privateCloudName) {
        this.resourceGroupName = resourceGroupName;
        this.privateCloudName = privateCloudName;
        return this;
    }

    public WorkloadNetworkPortMirroring create() {
        this.innerObject = serviceManager.serviceClient().getWorkloadNetworkPortMirrorings()
            .createPortMirroring(resourceGroupName, privateCloudName, portMirroringId, this.innerModel(), Context.NONE);
        return this;
    }

    public WorkloadNetworkPortMirroring create(Context context) {
        this.innerObject = serviceManager.serviceClient().getWorkloadNetworkPortMirrorings()
            .createPortMirroring(resourceGroupName, privateCloudName, portMirroringId, this.innerModel(), context);
        return this;
    }

    WorkloadNetworkPortMirroringImpl(String name, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = new WorkloadNetworkPortMirroringInner();
        this.serviceManager = serviceManager;
        this.portMirroringId = name;
    }

    public WorkloadNetworkPortMirroringImpl update() {
        this.updateProperties = new WorkloadNetworkPortMirroringUpdate();
        return this;
    }

    public WorkloadNetworkPortMirroring apply() {
        this.innerObject = serviceManager.serviceClient().getWorkloadNetworkPortMirrorings()
            .updatePortMirroring(resourceGroupName, privateCloudName, portMirroringId, updateProperties, Context.NONE);
        return this;
    }

    public WorkloadNetworkPortMirroring apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getWorkloadNetworkPortMirrorings()
            .updatePortMirroring(resourceGroupName, privateCloudName, portMirroringId, updateProperties, context);
        return this;
    }

    WorkloadNetworkPortMirroringImpl(WorkloadNetworkPortMirroringInner innerObject,
        com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.privateCloudName = Utils.getValueFromIdByName(innerObject.id(), "privateClouds");
        this.portMirroringId = Utils.getValueFromIdByName(innerObject.id(), "portMirroringProfiles");
    }

    public WorkloadNetworkPortMirroring refresh() {
        this.innerObject = serviceManager.serviceClient().getWorkloadNetworkPortMirrorings()
            .getPortMirroringWithResponse(resourceGroupName, privateCloudName, portMirroringId, Context.NONE)
            .getValue();
        return this;
    }

    public WorkloadNetworkPortMirroring refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getWorkloadNetworkPortMirrorings()
            .getPortMirroringWithResponse(resourceGroupName, privateCloudName, portMirroringId, context).getValue();
        return this;
    }

    public WorkloadNetworkPortMirroringImpl withDisplayName(String displayName) {
        if (isInCreateMode()) {
            this.innerModel().withDisplayName(displayName);
            return this;
        } else {
            this.updateProperties.withDisplayName(displayName);
            return this;
        }
    }

    public WorkloadNetworkPortMirroringImpl withDirection(PortMirroringDirectionEnum direction) {
        if (isInCreateMode()) {
            this.innerModel().withDirection(direction);
            return this;
        } else {
            this.updateProperties.withDirection(direction);
            return this;
        }
    }

    public WorkloadNetworkPortMirroringImpl withSource(String source) {
        if (isInCreateMode()) {
            this.innerModel().withSource(source);
            return this;
        } else {
            this.updateProperties.withSource(source);
            return this;
        }
    }

    public WorkloadNetworkPortMirroringImpl withDestination(String destination) {
        if (isInCreateMode()) {
            this.innerModel().withDestination(destination);
            return this;
        } else {
            this.updateProperties.withDestination(destination);
            return this;
        }
    }

    public WorkloadNetworkPortMirroringImpl withRevision(Integer revision) {
        if (isInCreateMode()) {
            this.innerModel().withRevision(revision);
            return this;
        } else {
            this.updateProperties.withRevision(revision);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.avs.fluent.models.ScriptExecutionInner;
import com.azure.resourcemanager.avs.models.ScriptExecution;
import com.azure.resourcemanager.avs.models.ScriptExecutionProperties;
import com.azure.resourcemanager.avs.models.ScriptOutputStreamType;
import java.util.List;

public final class ScriptExecutionImpl implements ScriptExecution, ScriptExecution.Definition, ScriptExecution.Update {
    private ScriptExecutionInner innerObject;

    private final com.azure.resourcemanager.avs.AvsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ScriptExecutionProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ScriptExecutionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.avs.AvsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String privateCloudName;

    private String scriptExecutionName;

    public ScriptExecutionImpl withExistingPrivateCloud(String resourceGroupName, String privateCloudName) {
        this.resourceGroupName = resourceGroupName;
        this.privateCloudName = privateCloudName;
        return this;
    }

    public ScriptExecution create() {
        this.innerObject = serviceManager.serviceClient()
            .getScriptExecutions()
            .createOrUpdate(resourceGroupName, privateCloudName, scriptExecutionName, this.innerModel(), Context.NONE);
        return this;
    }

    public ScriptExecution create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getScriptExecutions()
            .createOrUpdate(resourceGroupName, privateCloudName, scriptExecutionName, this.innerModel(), context);
        return this;
    }

    ScriptExecutionImpl(String name, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = new ScriptExecutionInner();
        this.serviceManager = serviceManager;
        this.scriptExecutionName = name;
    }

    public ScriptExecutionImpl update() {
        return this;
    }

    public ScriptExecution apply() {
        this.innerObject = serviceManager.serviceClient()
            .getScriptExecutions()
            .createOrUpdate(resourceGroupName, privateCloudName, scriptExecutionName, this.innerModel(), Context.NONE);
        return this;
    }

    public ScriptExecution apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getScriptExecutions()
            .createOrUpdate(resourceGroupName, privateCloudName, scriptExecutionName, this.innerModel(), context);
        return this;
    }

    ScriptExecutionImpl(ScriptExecutionInner innerObject, com.azure.resourcemanager.avs.AvsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.privateCloudName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "privateClouds");
        this.scriptExecutionName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "scriptExecutions");
    }

    public ScriptExecution refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getScriptExecutions()
            .getWithResponse(resourceGroupName, privateCloudName, scriptExecutionName, Context.NONE)
            .getValue();
        return this;
    }

    public ScriptExecution refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getScriptExecutions()
            .getWithResponse(resourceGroupName, privateCloudName, scriptExecutionName, context)
            .getValue();
        return this;
    }

    public Response<ScriptExecution> getExecutionLogsWithResponse(List<ScriptOutputStreamType> scriptOutputStreamType,
        Context context) {
        return serviceManager.scriptExecutions()
            .getExecutionLogsWithResponse(resourceGroupName, privateCloudName, scriptExecutionName,
                scriptOutputStreamType, context);
    }

    public ScriptExecution getExecutionLogs() {
        return serviceManager.scriptExecutions()
            .getExecutionLogs(resourceGroupName, privateCloudName, scriptExecutionName);
    }

    public ScriptExecutionImpl withProperties(ScriptExecutionProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * NSX Public IP Block Properties.
 */
@Fluent
public final class WorkloadNetworkPublicIPProperties implements JsonSerializable<WorkloadNetworkPublicIPProperties> {
    /*
     * Display name of the Public IP Block.
     */
    private String displayName;

    /*
     * Number of Public IPs requested.
     */
    private Long numberOfPublicIPs;

    /*
     * CIDR Block of the Public IP Block.
     */
    private String publicIPBlock;

    /*
     * The provisioning state
     */
    private WorkloadNetworkPublicIPProvisioningState provisioningState;

    /**
     * Creates an instance of WorkloadNetworkPublicIPProperties class.
     */
    public WorkloadNetworkPublicIPProperties() {
    }

    /**
     * Get the displayName property: Display name of the Public IP Block.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display name of the Public IP Block.
     * 
     * @param displayName the displayName value to set.
     * @return the WorkloadNetworkPublicIPProperties object itself.
     */
    public WorkloadNetworkPublicIPProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the numberOfPublicIPs property: Number of Public IPs requested.
     * 
     * @return the numberOfPublicIPs value.
     */
    public Long numberOfPublicIPs() {
        return this.numberOfPublicIPs;
    }

    /**
     * Set the numberOfPublicIPs property: Number of Public IPs requested.
     * 
     * @param numberOfPublicIPs the numberOfPublicIPs value to set.
     * @return the WorkloadNetworkPublicIPProperties object itself.
     */
    public WorkloadNetworkPublicIPProperties withNumberOfPublicIPs(Long numberOfPublicIPs) {
        this.numberOfPublicIPs = numberOfPublicIPs;
        return this;
    }

    /**
     * Get the publicIPBlock property: CIDR Block of the Public IP Block.
     * 
     * @return the publicIPBlock value.
     */
    public String publicIPBlock() {
        return this.publicIPBlock;
    }

    /**
     * Get the provisioningState property: The provisioning state.
     * 
     * @return the provisioningState value.
     */
    public WorkloadNetworkPublicIPProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeNumberField("numberOfPublicIPs", this.numberOfPublicIPs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of WorkloadNetworkPublicIPProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of WorkloadNetworkPublicIPProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the WorkloadNetworkPublicIPProperties.
     */
    public static WorkloadNetworkPublicIPProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            WorkloadNetworkPublicIPProperties deserializedWorkloadNetworkPublicIPProperties
                = new WorkloadNetworkPublicIPProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedWorkloadNetworkPublicIPProperties.displayName = reader.getString();
                } else if ("numberOfPublicIPs".equals(fieldName)) {
                    deserializedWorkloadNetworkPublicIPProperties.numberOfPublicIPs
                        = reader.getNullable(JsonReader::getLong);
                } else if ("publicIPBlock".equals(fieldName)) {
                    deserializedWorkloadNetworkPublicIPProperties.publicIPBlock = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedWorkloadNetworkPublicIPProperties.provisioningState
                        = WorkloadNetworkPublicIPProvisioningState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedWorkloadNetworkPublicIPProperties;
        });
    }
}

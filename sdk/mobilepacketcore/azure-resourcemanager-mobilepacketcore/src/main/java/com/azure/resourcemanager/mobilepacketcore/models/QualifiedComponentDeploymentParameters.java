// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilepacketcore.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Containerized Network Function (CNF) Qualified Deployment Parameters.
 */
@Fluent
public final class QualifiedComponentDeploymentParameters
    implements JsonSerializable<QualifiedComponentDeploymentParameters> {
    /*
     * Federation Type
     */
    private String type;

    /*
     * Deployment Parameters
     */
    private String parameters;

    /*
     * Deployment secrets
     */
    private String secrets;

    /**
     * Creates an instance of QualifiedComponentDeploymentParameters class.
     */
    public QualifiedComponentDeploymentParameters() {
    }

    /**
     * Get the type property: Federation Type.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Federation Type.
     * 
     * @param type the type value to set.
     * @return the QualifiedComponentDeploymentParameters object itself.
     */
    public QualifiedComponentDeploymentParameters withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the parameters property: Deployment Parameters.
     * 
     * @return the parameters value.
     */
    public String parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Deployment Parameters.
     * 
     * @param parameters the parameters value to set.
     * @return the QualifiedComponentDeploymentParameters object itself.
     */
    public QualifiedComponentDeploymentParameters withParameters(String parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the secrets property: Deployment secrets.
     * 
     * @return the secrets value.
     */
    public String secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets property: Deployment secrets.
     * 
     * @param secrets the secrets value to set.
     * @return the QualifiedComponentDeploymentParameters object itself.
     */
    public QualifiedComponentDeploymentParameters withSecrets(String secrets) {
        this.secrets = secrets;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property type in model QualifiedComponentDeploymentParameters"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(QualifiedComponentDeploymentParameters.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeStringField("parameters", this.parameters);
        jsonWriter.writeStringField("secrets", this.secrets);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QualifiedComponentDeploymentParameters from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QualifiedComponentDeploymentParameters if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the QualifiedComponentDeploymentParameters.
     */
    public static QualifiedComponentDeploymentParameters fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            QualifiedComponentDeploymentParameters deserializedQualifiedComponentDeploymentParameters
                = new QualifiedComponentDeploymentParameters();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedQualifiedComponentDeploymentParameters.type = reader.getString();
                } else if ("parameters".equals(fieldName)) {
                    deserializedQualifiedComponentDeploymentParameters.parameters = reader.getString();
                } else if ("secrets".equals(fieldName)) {
                    deserializedQualifiedComponentDeploymentParameters.secrets = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedQualifiedComponentDeploymentParameters;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilepacketcore.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.mobilepacketcore.models.OperationalStatus;
import com.azure.resourcemanager.mobilepacketcore.models.ProvisioningState;
import java.io.IOException;

/**
 * UPF Deployment Properties.
 */
@Fluent
public final class UpfDeploymentResourceProperties implements JsonSerializable<UpfDeploymentResourceProperties> {
    /*
     * The status of the last operation.
     */
    private ProvisioningState provisioningState;

    /*
     * Azure for Operators 5G Core UPF component parameters
     */
    private String componentParameters;

    /*
     * Azure for Operators 5G Core F secrets parameters
     */
    private String secretsParameters;

    /*
     * Reference to cluster where the Network Function is deployed
     */
    private String clusterService;

    /*
     * Release version. This is inherited from the cluster
     */
    private String releaseVersion;

    /*
     * Operational status
     */
    private OperationalStatus operationalStatus;

    /**
     * Creates an instance of UpfDeploymentResourceProperties class.
     */
    public UpfDeploymentResourceProperties() {
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the componentParameters property: Azure for Operators 5G Core UPF component parameters.
     * 
     * @return the componentParameters value.
     */
    public String componentParameters() {
        return this.componentParameters;
    }

    /**
     * Set the componentParameters property: Azure for Operators 5G Core UPF component parameters.
     * 
     * @param componentParameters the componentParameters value to set.
     * @return the UpfDeploymentResourceProperties object itself.
     */
    public UpfDeploymentResourceProperties withComponentParameters(String componentParameters) {
        this.componentParameters = componentParameters;
        return this;
    }

    /**
     * Get the secretsParameters property: Azure for Operators 5G Core F secrets parameters.
     * 
     * @return the secretsParameters value.
     */
    public String secretsParameters() {
        return this.secretsParameters;
    }

    /**
     * Set the secretsParameters property: Azure for Operators 5G Core F secrets parameters.
     * 
     * @param secretsParameters the secretsParameters value to set.
     * @return the UpfDeploymentResourceProperties object itself.
     */
    public UpfDeploymentResourceProperties withSecretsParameters(String secretsParameters) {
        this.secretsParameters = secretsParameters;
        return this;
    }

    /**
     * Get the clusterService property: Reference to cluster where the Network Function is deployed.
     * 
     * @return the clusterService value.
     */
    public String clusterService() {
        return this.clusterService;
    }

    /**
     * Set the clusterService property: Reference to cluster where the Network Function is deployed.
     * 
     * @param clusterService the clusterService value to set.
     * @return the UpfDeploymentResourceProperties object itself.
     */
    public UpfDeploymentResourceProperties withClusterService(String clusterService) {
        this.clusterService = clusterService;
        return this;
    }

    /**
     * Get the releaseVersion property: Release version. This is inherited from the cluster.
     * 
     * @return the releaseVersion value.
     */
    public String releaseVersion() {
        return this.releaseVersion;
    }

    /**
     * Get the operationalStatus property: Operational status.
     * 
     * @return the operationalStatus value.
     */
    public OperationalStatus operationalStatus() {
        return this.operationalStatus;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (componentParameters() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property componentParameters in model UpfDeploymentResourceProperties"));
        }
        if (clusterService() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property clusterService in model UpfDeploymentResourceProperties"));
        }
        if (operationalStatus() != null) {
            operationalStatus().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(UpfDeploymentResourceProperties.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("componentParameters", this.componentParameters);
        jsonWriter.writeStringField("clusterService", this.clusterService);
        jsonWriter.writeStringField("secretsParameters", this.secretsParameters);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of UpfDeploymentResourceProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of UpfDeploymentResourceProperties if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the UpfDeploymentResourceProperties.
     */
    public static UpfDeploymentResourceProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            UpfDeploymentResourceProperties deserializedUpfDeploymentResourceProperties
                = new UpfDeploymentResourceProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("componentParameters".equals(fieldName)) {
                    deserializedUpfDeploymentResourceProperties.componentParameters = reader.getString();
                } else if ("clusterService".equals(fieldName)) {
                    deserializedUpfDeploymentResourceProperties.clusterService = reader.getString();
                } else if ("provisioningState".equals(fieldName)) {
                    deserializedUpfDeploymentResourceProperties.provisioningState
                        = ProvisioningState.fromString(reader.getString());
                } else if ("secretsParameters".equals(fieldName)) {
                    deserializedUpfDeploymentResourceProperties.secretsParameters = reader.getString();
                } else if ("releaseVersion".equals(fieldName)) {
                    deserializedUpfDeploymentResourceProperties.releaseVersion = reader.getString();
                } else if ("operationalStatus".equals(fieldName)) {
                    deserializedUpfDeploymentResourceProperties.operationalStatus = OperationalStatus.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedUpfDeploymentResourceProperties;
        });
    }
}

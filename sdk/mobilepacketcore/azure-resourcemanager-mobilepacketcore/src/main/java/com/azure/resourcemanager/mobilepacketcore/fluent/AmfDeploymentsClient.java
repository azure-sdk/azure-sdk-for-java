// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilepacketcore.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mobilepacketcore.fluent.models.AmfDeploymentResourceInner;
import com.azure.resourcemanager.mobilepacketcore.models.AmfDeploymentResourceTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in AmfDeploymentsClient.
 */
public interface AmfDeploymentsClient {
    /**
     * List all Access and Mobility Function Deployments by Subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AmfDeploymentResourceInner> list();

    /**
     * List all Access and Mobility Function Deployments by Subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AmfDeploymentResourceInner> list(Context context);

    /**
     * List all Access and Mobility Function Deployments by Resource Group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AmfDeploymentResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List all Access and Mobility Function Deployments by Resource Group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AmfDeploymentResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AmfDeploymentResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AmfDeploymentResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String amfDeploymentName, Context context);

    /**
     * Get a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AmfDeploymentResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AmfDeploymentResourceInner getByResourceGroup(String resourceGroupName, String amfDeploymentName);

    /**
     * Create a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure for Operators 5G Core Access and Mobility Function (AMF)
     * Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AmfDeploymentResourceInner>, AmfDeploymentResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String amfDeploymentName, AmfDeploymentResourceInner resource);

    /**
     * Create a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure for Operators 5G Core Access and Mobility Function (AMF)
     * Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<AmfDeploymentResourceInner>, AmfDeploymentResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String amfDeploymentName, AmfDeploymentResourceInner resource, Context context);

    /**
     * Create a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Access and Mobility Function (AMF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AmfDeploymentResourceInner createOrUpdate(String resourceGroupName, String amfDeploymentName,
        AmfDeploymentResourceInner resource);

    /**
     * Create a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Access and Mobility Function (AMF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AmfDeploymentResourceInner createOrUpdate(String resourceGroupName, String amfDeploymentName,
        AmfDeploymentResourceInner resource, Context context);

    /**
     * Update a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Access and Mobility Function (AMF) Deployment Resource along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AmfDeploymentResourceInner> updateTagsWithResponse(String resourceGroupName, String amfDeploymentName,
        AmfDeploymentResourceTagsUpdate properties, Context context);

    /**
     * Update a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Access and Mobility Function (AMF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AmfDeploymentResourceInner updateTags(String resourceGroupName, String amfDeploymentName,
        AmfDeploymentResourceTagsUpdate properties);

    /**
     * Delete a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String amfDeploymentName);

    /**
     * Delete a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String amfDeploymentName, Context context);

    /**
     * Delete a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String amfDeploymentName);

    /**
     * Delete a AmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amfDeploymentName The name of the AMF Deployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String amfDeploymentName, Context context);
}

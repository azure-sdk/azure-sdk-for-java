// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilepacketcore.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mobilepacketcore.fluent.models.NrfDeploymentResourceInner;
import com.azure.resourcemanager.mobilepacketcore.models.NrfDeploymentResource;
import com.azure.resourcemanager.mobilepacketcore.models.NrfDeploymentResourceTagsUpdate;
import com.azure.resourcemanager.mobilepacketcore.models.OperationalStatus;
import com.azure.resourcemanager.mobilepacketcore.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class NrfDeploymentResourceImpl
    implements NrfDeploymentResource, NrfDeploymentResource.Definition, NrfDeploymentResource.Update {
    private NrfDeploymentResourceInner innerObject;

    private final com.azure.resourcemanager.mobilepacketcore.MobilepacketcoreManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String componentParameters() {
        return this.innerModel().componentParameters();
    }

    public String secretsParameters() {
        return this.innerModel().secretsParameters();
    }

    public String clusterService() {
        return this.innerModel().clusterService();
    }

    public String releaseVersion() {
        return this.innerModel().releaseVersion();
    }

    public OperationalStatus operationalStatus() {
        return this.innerModel().operationalStatus();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public NrfDeploymentResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.mobilepacketcore.MobilepacketcoreManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String nrfDeploymentName;

    private NrfDeploymentResourceTagsUpdate updateProperties;

    public NrfDeploymentResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NrfDeploymentResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getNrfDeployments()
            .createOrUpdate(resourceGroupName, nrfDeploymentName, this.innerModel(), Context.NONE);
        return this;
    }

    public NrfDeploymentResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNrfDeployments()
            .createOrUpdate(resourceGroupName, nrfDeploymentName, this.innerModel(), context);
        return this;
    }

    NrfDeploymentResourceImpl(String name,
        com.azure.resourcemanager.mobilepacketcore.MobilepacketcoreManager serviceManager) {
        this.innerObject = new NrfDeploymentResourceInner();
        this.serviceManager = serviceManager;
        this.nrfDeploymentName = name;
    }

    public NrfDeploymentResourceImpl update() {
        this.updateProperties = new NrfDeploymentResourceTagsUpdate();
        return this;
    }

    public NrfDeploymentResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getNrfDeployments()
            .updateTagsWithResponse(resourceGroupName, nrfDeploymentName, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public NrfDeploymentResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNrfDeployments()
            .updateTagsWithResponse(resourceGroupName, nrfDeploymentName, updateProperties, context)
            .getValue();
        return this;
    }

    NrfDeploymentResourceImpl(NrfDeploymentResourceInner innerObject,
        com.azure.resourcemanager.mobilepacketcore.MobilepacketcoreManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.nrfDeploymentName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "nrfDeployments");
    }

    public NrfDeploymentResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getNrfDeployments()
            .getByResourceGroupWithResponse(resourceGroupName, nrfDeploymentName, Context.NONE)
            .getValue();
        return this;
    }

    public NrfDeploymentResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getNrfDeployments()
            .getByResourceGroupWithResponse(resourceGroupName, nrfDeploymentName, context)
            .getValue();
        return this;
    }

    public NrfDeploymentResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NrfDeploymentResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NrfDeploymentResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public NrfDeploymentResourceImpl withComponentParameters(String componentParameters) {
        this.innerModel().withComponentParameters(componentParameters);
        return this;
    }

    public NrfDeploymentResourceImpl withSecretsParameters(String secretsParameters) {
        this.innerModel().withSecretsParameters(secretsParameters);
        return this;
    }

    public NrfDeploymentResourceImpl withClusterService(String clusterService) {
        this.innerModel().withClusterService(clusterService);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

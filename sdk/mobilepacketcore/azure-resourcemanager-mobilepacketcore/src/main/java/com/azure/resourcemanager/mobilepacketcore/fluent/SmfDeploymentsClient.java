// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilepacketcore.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.mobilepacketcore.fluent.models.SmfDeploymentResourceInner;
import com.azure.resourcemanager.mobilepacketcore.models.SmfDeploymentResourceTagsUpdate;

/**
 * An instance of this class provides access to all the operations defined in SmfDeploymentsClient.
 */
public interface SmfDeploymentsClient {
    /**
     * List all Session Management Function Deployments by Subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SmfDeploymentResourceInner> list();

    /**
     * List all Session Management Function Deployments by Subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SmfDeploymentResourceInner> list(Context context);

    /**
     * List all Session Management Function Deployments by Resource Group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SmfDeploymentResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List all Session Management Function Deployments by Resource Group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SmfDeploymentResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SmfDeploymentResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SmfDeploymentResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SmfDeploymentResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String smfDeploymentName, Context context);

    /**
     * Get a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SmfDeploymentResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SmfDeploymentResourceInner getByResourceGroup(String resourceGroupName, String smfDeploymentName);

    /**
     * Create a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure for Operators 5G Core Session Management Function (SMF)
     * Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SmfDeploymentResourceInner>, SmfDeploymentResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String smfDeploymentName, SmfDeploymentResourceInner resource);

    /**
     * Create a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of azure for Operators 5G Core Session Management Function (SMF)
     * Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<SmfDeploymentResourceInner>, SmfDeploymentResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String smfDeploymentName, SmfDeploymentResourceInner resource, Context context);

    /**
     * Create a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Session Management Function (SMF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SmfDeploymentResourceInner createOrUpdate(String resourceGroupName, String smfDeploymentName,
        SmfDeploymentResourceInner resource);

    /**
     * Create a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Session Management Function (SMF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SmfDeploymentResourceInner createOrUpdate(String resourceGroupName, String smfDeploymentName,
        SmfDeploymentResourceInner resource, Context context);

    /**
     * Update a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Session Management Function (SMF) Deployment Resource along with
     * {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SmfDeploymentResourceInner> updateTagsWithResponse(String resourceGroupName, String smfDeploymentName,
        SmfDeploymentResourceTagsUpdate properties, Context context);

    /**
     * Update a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure for Operators 5G Core Session Management Function (SMF) Deployment Resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SmfDeploymentResourceInner updateTags(String resourceGroupName, String smfDeploymentName,
        SmfDeploymentResourceTagsUpdate properties);

    /**
     * Delete a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String smfDeploymentName);

    /**
     * Delete a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String smfDeploymentName, Context context);

    /**
     * Delete a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String smfDeploymentName);

    /**
     * Delete a SmfDeploymentResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param smfDeploymentName The name of the SmfDeployment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String smfDeploymentName, Context context);
}

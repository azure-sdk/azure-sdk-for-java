// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mobilepacketcore.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.mobilepacketcore.models.ClusterServiceClusterTypeSpecificData;
import com.azure.resourcemanager.mobilepacketcore.models.OperationalStatus;
import com.azure.resourcemanager.mobilepacketcore.models.ProvisioningState;
import com.azure.resourcemanager.mobilepacketcore.models.QualifiedComponentDeploymentParameters;
import com.azure.resourcemanager.mobilepacketcore.models.SkuDeploymentType;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Cluster Service Properties.
 */
@Fluent
public final class ClusterServiceResourceProperties {
    /*
     * The status of the last operation.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Cluster type (Lab or Production)
     */
    @JsonProperty(value = "deploymentType", required = true)
    private SkuDeploymentType deploymentType;

    /*
     * Azure for Operators 5G Core Release Version. This is applied to all platform as a service (PaaS) components and
     * running workloads in this cluster
     */
    @JsonProperty(value = "releaseVersion", required = true)
    private String releaseVersion;

    /*
     * Cluster type specific data. Contents depend on the cluster type
     */
    @JsonProperty(value = "clusterTypeSpecificData", required = true)
    private ClusterServiceClusterTypeSpecificData clusterTypeSpecificData;

    /*
     * Azure for Operators 5G Core Local PaaS component parameters. One set per component type
     */
    @JsonProperty(value = "componentParameters", required = true)
    private List<QualifiedComponentDeploymentParameters> componentParameters;

    /*
     * Operational status
     */
    @JsonProperty(value = "operationalStatus", access = JsonProperty.Access.WRITE_ONLY)
    private OperationalStatus operationalStatus;

    /**
     * Creates an instance of ClusterServiceResourceProperties class.
     */
    public ClusterServiceResourceProperties() {
    }

    /**
     * Get the provisioningState property: The status of the last operation.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the deploymentType property: Cluster type (Lab or Production).
     * 
     * @return the deploymentType value.
     */
    public SkuDeploymentType deploymentType() {
        return this.deploymentType;
    }

    /**
     * Set the deploymentType property: Cluster type (Lab or Production).
     * 
     * @param deploymentType the deploymentType value to set.
     * @return the ClusterServiceResourceProperties object itself.
     */
    public ClusterServiceResourceProperties withDeploymentType(SkuDeploymentType deploymentType) {
        this.deploymentType = deploymentType;
        return this;
    }

    /**
     * Get the releaseVersion property: Azure for Operators 5G Core Release Version. This is applied to all platform
     * as a service (PaaS) components and running workloads in this cluster.
     * 
     * @return the releaseVersion value.
     */
    public String releaseVersion() {
        return this.releaseVersion;
    }

    /**
     * Set the releaseVersion property: Azure for Operators 5G Core Release Version. This is applied to all platform
     * as a service (PaaS) components and running workloads in this cluster.
     * 
     * @param releaseVersion the releaseVersion value to set.
     * @return the ClusterServiceResourceProperties object itself.
     */
    public ClusterServiceResourceProperties withReleaseVersion(String releaseVersion) {
        this.releaseVersion = releaseVersion;
        return this;
    }

    /**
     * Get the clusterTypeSpecificData property: Cluster type specific data. Contents depend on the cluster type.
     * 
     * @return the clusterTypeSpecificData value.
     */
    public ClusterServiceClusterTypeSpecificData clusterTypeSpecificData() {
        return this.clusterTypeSpecificData;
    }

    /**
     * Set the clusterTypeSpecificData property: Cluster type specific data. Contents depend on the cluster type.
     * 
     * @param clusterTypeSpecificData the clusterTypeSpecificData value to set.
     * @return the ClusterServiceResourceProperties object itself.
     */
    public ClusterServiceResourceProperties
        withClusterTypeSpecificData(ClusterServiceClusterTypeSpecificData clusterTypeSpecificData) {
        this.clusterTypeSpecificData = clusterTypeSpecificData;
        return this;
    }

    /**
     * Get the componentParameters property: Azure for Operators 5G Core Local PaaS component parameters. One set per
     * component type.
     * 
     * @return the componentParameters value.
     */
    public List<QualifiedComponentDeploymentParameters> componentParameters() {
        return this.componentParameters;
    }

    /**
     * Set the componentParameters property: Azure for Operators 5G Core Local PaaS component parameters. One set per
     * component type.
     * 
     * @param componentParameters the componentParameters value to set.
     * @return the ClusterServiceResourceProperties object itself.
     */
    public ClusterServiceResourceProperties
        withComponentParameters(List<QualifiedComponentDeploymentParameters> componentParameters) {
        this.componentParameters = componentParameters;
        return this;
    }

    /**
     * Get the operationalStatus property: Operational status.
     * 
     * @return the operationalStatus value.
     */
    public OperationalStatus operationalStatus() {
        return this.operationalStatus;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (deploymentType() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property deploymentType in model ClusterServiceResourceProperties"));
        }
        if (releaseVersion() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property releaseVersion in model ClusterServiceResourceProperties"));
        }
        if (clusterTypeSpecificData() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property clusterTypeSpecificData in model ClusterServiceResourceProperties"));
        } else {
            clusterTypeSpecificData().validate();
        }
        if (componentParameters() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property componentParameters in model ClusterServiceResourceProperties"));
        } else {
            componentParameters().forEach(e -> e.validate());
        }
        if (operationalStatus() != null) {
            operationalStatus().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ClusterServiceResourceProperties.class);
}

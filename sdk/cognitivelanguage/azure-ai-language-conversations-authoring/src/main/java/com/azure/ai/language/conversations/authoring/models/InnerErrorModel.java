// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * An object containing more specific information about the error. As per Microsoft One API guidelines -
 * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
 */
@Immutable
public final class InnerErrorModel implements JsonSerializable<InnerErrorModel> {
    /*
     * One of a server-defined set of error codes.
     */
    @Generated
    private final InnerErrorCode code;

    /*
     * Error message.
     */
    @Generated
    private final String message;

    /*
     * Error details.
     */
    @Generated
    private Map<String, String> details;

    /*
     * Error target.
     */
    @Generated
    private String target;

    /*
     * An object containing more specific information than the current object about the error.
     */
    @Generated
    private InnerErrorModel innererror;

    /**
     * Creates an instance of InnerErrorModel class.
     * 
     * @param code the code value to set.
     * @param message the message value to set.
     */
    @Generated
    private InnerErrorModel(InnerErrorCode code, String message) {
        this.code = code;
        this.message = message;
    }

    /**
     * Get the code property: One of a server-defined set of error codes.
     * 
     * @return the code value.
     */
    @Generated
    public InnerErrorCode getCode() {
        return this.code;
    }

    /**
     * Get the message property: Error message.
     * 
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the details property: Error details.
     * 
     * @return the details value.
     */
    @Generated
    public Map<String, String> getDetails() {
        return this.details;
    }

    /**
     * Get the target property: Error target.
     * 
     * @return the target value.
     */
    @Generated
    public String getTarget() {
        return this.target;
    }

    /**
     * Get the innererror property: An object containing more specific information than the current object about the
     * error.
     * 
     * @return the innererror value.
     */
    @Generated
    public InnerErrorModel getInnererror() {
        return this.innererror;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code == null ? null : this.code.toString());
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeMapField("details", this.details, (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("target", this.target);
        jsonWriter.writeJsonField("innererror", this.innererror);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of InnerErrorModel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of InnerErrorModel if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the InnerErrorModel.
     */
    @Generated
    public static InnerErrorModel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            InnerErrorCode code = null;
            String message = null;
            Map<String, String> details = null;
            String target = null;
            InnerErrorModel innererror = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    code = InnerErrorCode.fromString(reader.getString());
                } else if ("message".equals(fieldName)) {
                    message = reader.getString();
                } else if ("details".equals(fieldName)) {
                    details = reader.readMap(reader1 -> reader1.getString());
                } else if ("target".equals(fieldName)) {
                    target = reader.getString();
                } else if ("innererror".equals(fieldName)) {
                    innererror = InnerErrorModel.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            InnerErrorModel deserializedInnerErrorModel = new InnerErrorModel(code, message);
            deserializedInnerErrorModel.details = details;
            deserializedInnerErrorModel.target = target;
            deserializedInnerErrorModel.innererror = innererror;

            return deserializedInnerErrorModel;
        });
    }
}

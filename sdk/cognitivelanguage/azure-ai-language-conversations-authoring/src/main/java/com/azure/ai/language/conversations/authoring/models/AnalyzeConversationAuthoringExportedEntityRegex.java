// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Represents a regex component of an entity.
 */
@Fluent
public final class AnalyzeConversationAuthoringExportedEntityRegex
    implements JsonSerializable<AnalyzeConversationAuthoringExportedEntityRegex> {
    /*
     * The regex expressions of the regex component. These expressions follow the .NET regex syntax. For reference,
     * check here: https://learn.microsoft.com/dotnet/standard/base-types/regular-expressions
     */
    @Generated
    private List<AnalyzeConversationAuthoringExportedEntityRegexExpression> expressions;

    /**
     * Creates an instance of AnalyzeConversationAuthoringExportedEntityRegex class.
     */
    @Generated
    public AnalyzeConversationAuthoringExportedEntityRegex() {
    }

    /**
     * Get the expressions property: The regex expressions of the regex component. These expressions follow the .NET
     * regex syntax. For reference, check here:
     * https://learn.microsoft.com/dotnet/standard/base-types/regular-expressions.
     * 
     * @return the expressions value.
     */
    @Generated
    public List<AnalyzeConversationAuthoringExportedEntityRegexExpression> getExpressions() {
        return this.expressions;
    }

    /**
     * Set the expressions property: The regex expressions of the regex component. These expressions follow the .NET
     * regex syntax. For reference, check here:
     * https://learn.microsoft.com/dotnet/standard/base-types/regular-expressions.
     * 
     * @param expressions the expressions value to set.
     * @return the AnalyzeConversationAuthoringExportedEntityRegex object itself.
     */
    @Generated
    public AnalyzeConversationAuthoringExportedEntityRegex
        setExpressions(List<AnalyzeConversationAuthoringExportedEntityRegexExpression> expressions) {
        this.expressions = expressions;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("expressions", this.expressions, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringExportedEntityRegex from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringExportedEntityRegex if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringExportedEntityRegex.
     */
    @Generated
    public static AnalyzeConversationAuthoringExportedEntityRegex fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AnalyzeConversationAuthoringExportedEntityRegex deserializedAnalyzeConversationAuthoringExportedEntityRegex
                = new AnalyzeConversationAuthoringExportedEntityRegex();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("expressions".equals(fieldName)) {
                    List<AnalyzeConversationAuthoringExportedEntityRegexExpression> expressions = reader.readArray(
                        reader1 -> AnalyzeConversationAuthoringExportedEntityRegexExpression.fromJson(reader1));
                    deserializedAnalyzeConversationAuthoringExportedEntityRegex.expressions = expressions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAnalyzeConversationAuthoringExportedEntityRegex;
        });
    }
}

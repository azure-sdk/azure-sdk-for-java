// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Represents the options for creating or updating a project deployment.
 */
@Fluent
public final class AnalyzeConversationAuthoringCreateDeploymentOptions
    implements JsonSerializable<AnalyzeConversationAuthoringCreateDeploymentOptions> {
    /*
     * Represents the trained model label.
     */
    @Generated
    private final String trainedModelLabel;

    /*
     * Represents the resource IDs to be assigned to the deployment. If provided, the deployment will be rolled out to
     * the resources provided here as well as the original resource in which the project is created.
     */
    @Generated
    private List<String> assignedResourceIds;

    /**
     * Creates an instance of AnalyzeConversationAuthoringCreateDeploymentOptions class.
     * 
     * @param trainedModelLabel the trainedModelLabel value to set.
     */
    @Generated
    public AnalyzeConversationAuthoringCreateDeploymentOptions(String trainedModelLabel) {
        this.trainedModelLabel = trainedModelLabel;
    }

    /**
     * Get the trainedModelLabel property: Represents the trained model label.
     * 
     * @return the trainedModelLabel value.
     */
    @Generated
    public String getTrainedModelLabel() {
        return this.trainedModelLabel;
    }

    /**
     * Get the assignedResourceIds property: Represents the resource IDs to be assigned to the deployment. If provided,
     * the deployment will be rolled out to the resources provided here as well as the original resource in which the
     * project is created.
     * 
     * @return the assignedResourceIds value.
     */
    @Generated
    public List<String> getAssignedResourceIds() {
        return this.assignedResourceIds;
    }

    /**
     * Set the assignedResourceIds property: Represents the resource IDs to be assigned to the deployment. If provided,
     * the deployment will be rolled out to the resources provided here as well as the original resource in which the
     * project is created.
     * 
     * @param assignedResourceIds the assignedResourceIds value to set.
     * @return the AnalyzeConversationAuthoringCreateDeploymentOptions object itself.
     */
    @Generated
    public AnalyzeConversationAuthoringCreateDeploymentOptions
        setAssignedResourceIds(List<String> assignedResourceIds) {
        this.assignedResourceIds = assignedResourceIds;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("trainedModelLabel", this.trainedModelLabel);
        jsonWriter.writeArrayField("assignedResourceIds", this.assignedResourceIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringCreateDeploymentOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringCreateDeploymentOptions if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringCreateDeploymentOptions.
     */
    @Generated
    public static AnalyzeConversationAuthoringCreateDeploymentOptions fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String trainedModelLabel = null;
            List<String> assignedResourceIds = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("trainedModelLabel".equals(fieldName)) {
                    trainedModelLabel = reader.getString();
                } else if ("assignedResourceIds".equals(fieldName)) {
                    assignedResourceIds = reader.readArray(reader1 -> reader1.getString());
                } else {
                    reader.skipChildren();
                }
            }
            AnalyzeConversationAuthoringCreateDeploymentOptions deserializedAnalyzeConversationAuthoringCreateDeploymentOptions
                = new AnalyzeConversationAuthoringCreateDeploymentOptions(trainedModelLabel);
            deserializedAnalyzeConversationAuthoringCreateDeploymentOptions.assignedResourceIds = assignedResourceIds;

            return deserializedAnalyzeConversationAuthoringCreateDeploymentOptions;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the comparison between the expected and the predicted intent for an utterance.
 */
@Immutable
public final class AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult
    implements JsonSerializable<AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult> {
    /*
     * Represents the utterance's expected intent.
     */
    @Generated
    private final String expectedIntent;

    /*
     * Represents the utterance's predicted intent.
     */
    @Generated
    private final String predictedIntent;

    /**
     * Creates an instance of AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult class.
     * 
     * @param expectedIntent the expectedIntent value to set.
     * @param predictedIntent the predictedIntent value to set.
     */
    @Generated
    private AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult(String expectedIntent,
        String predictedIntent) {
        this.expectedIntent = expectedIntent;
        this.predictedIntent = predictedIntent;
    }

    /**
     * Get the expectedIntent property: Represents the utterance's expected intent.
     * 
     * @return the expectedIntent value.
     */
    @Generated
    public String getExpectedIntent() {
        return this.expectedIntent;
    }

    /**
     * Get the predictedIntent property: Represents the utterance's predicted intent.
     * 
     * @return the predictedIntent value.
     */
    @Generated
    public String getPredictedIntent() {
        return this.predictedIntent;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("expectedIntent", this.expectedIntent);
        jsonWriter.writeStringField("predictedIntent", this.predictedIntent);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult.
     */
    @Generated
    public static AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String expectedIntent = null;
            String predictedIntent = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("expectedIntent".equals(fieldName)) {
                    expectedIntent = reader.getString();
                } else if ("predictedIntent".equals(fieldName)) {
                    predictedIntent = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult(expectedIntent, predictedIntent);
        });
    }
}

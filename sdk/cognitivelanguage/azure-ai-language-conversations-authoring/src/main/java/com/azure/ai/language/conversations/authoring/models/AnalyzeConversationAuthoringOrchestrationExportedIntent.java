// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents an exported intent for an orchestration project.
 */
@Fluent
public final class AnalyzeConversationAuthoringOrchestrationExportedIntent
    implements JsonSerializable<AnalyzeConversationAuthoringOrchestrationExportedIntent> {
    /*
     * Specifies the behavior of this intent in the orchestration flow.
     */
    @Generated
    private AnalyzeConversationAuthoringExportedOrchestrationOptions orchestration;

    /*
     * The intent category.
     */
    @Generated
    private final String category;

    /**
     * Creates an instance of AnalyzeConversationAuthoringOrchestrationExportedIntent class.
     * 
     * @param category the category value to set.
     */
    @Generated
    public AnalyzeConversationAuthoringOrchestrationExportedIntent(String category) {
        this.category = category;
    }

    /**
     * Get the orchestration property: Specifies the behavior of this intent in the orchestration flow.
     * 
     * @return the orchestration value.
     */
    @Generated
    public AnalyzeConversationAuthoringExportedOrchestrationOptions getOrchestration() {
        return this.orchestration;
    }

    /**
     * Set the orchestration property: Specifies the behavior of this intent in the orchestration flow.
     * 
     * @param orchestration the orchestration value to set.
     * @return the AnalyzeConversationAuthoringOrchestrationExportedIntent object itself.
     */
    @Generated
    public AnalyzeConversationAuthoringOrchestrationExportedIntent
        setOrchestration(AnalyzeConversationAuthoringExportedOrchestrationOptions orchestration) {
        this.orchestration = orchestration;
        return this;
    }

    /**
     * Get the category property: The intent category.
     * 
     * @return the category value.
     */
    @Generated
    public String getCategory() {
        return this.category;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("category", this.category);
        jsonWriter.writeJsonField("orchestration", this.orchestration);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringOrchestrationExportedIntent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringOrchestrationExportedIntent if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringOrchestrationExportedIntent.
     */
    @Generated
    public static AnalyzeConversationAuthoringOrchestrationExportedIntent fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String category = null;
            AnalyzeConversationAuthoringExportedOrchestrationOptions orchestration = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("category".equals(fieldName)) {
                    category = reader.getString();
                } else if ("orchestration".equals(fieldName)) {
                    orchestration = AnalyzeConversationAuthoringExportedOrchestrationOptions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            AnalyzeConversationAuthoringOrchestrationExportedIntent deserializedAnalyzeConversationAuthoringOrchestrationExportedIntent
                = new AnalyzeConversationAuthoringOrchestrationExportedIntent(category);
            deserializedAnalyzeConversationAuthoringOrchestrationExportedIntent.orchestration = orchestration;

            return deserializedAnalyzeConversationAuthoringOrchestrationExportedIntent;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the evaluation result for an utterance.
 */
@Immutable
public final class AnalyzeConversationAuthoringUtteranceEvaluationResult
    implements JsonSerializable<AnalyzeConversationAuthoringUtteranceEvaluationResult> {
    /*
     * Represents the utterance text.
     */
    @Generated
    private String text;

    /*
     * Represents the utterance language. This is BCP-47 representation of a language. For example, use "en" for
     * English, "en-gb" for English (UK), "es" for Spanish etc.
     */
    @Generated
    private final String language;

    /*
     * Represents the entities results for the utterance.
     */
    @Generated
    private final AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult entitiesResult;

    /*
     * Represents the intents results for the utterance.
     */
    @Generated
    private final AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult intentsResult;

    /**
     * Creates an instance of AnalyzeConversationAuthoringUtteranceEvaluationResult class.
     * 
     * @param language the language value to set.
     * @param entitiesResult the entitiesResult value to set.
     * @param intentsResult the intentsResult value to set.
     */
    @Generated
    private AnalyzeConversationAuthoringUtteranceEvaluationResult(String language,
        AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult entitiesResult,
        AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult intentsResult) {
        this.language = language;
        this.entitiesResult = entitiesResult;
        this.intentsResult = intentsResult;
    }

    /**
     * Get the text property: Represents the utterance text.
     * 
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Get the language property: Represents the utterance language. This is BCP-47 representation of a language. For
     * example, use "en" for English, "en-gb" for English (UK), "es" for Spanish etc.
     * 
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * Get the entitiesResult property: Represents the entities results for the utterance.
     * 
     * @return the entitiesResult value.
     */
    @Generated
    public AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult getEntitiesResult() {
        return this.entitiesResult;
    }

    /**
     * Get the intentsResult property: Represents the intents results for the utterance.
     * 
     * @return the intentsResult value.
     */
    @Generated
    public AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult getIntentsResult() {
        return this.intentsResult;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("language", this.language);
        jsonWriter.writeJsonField("entitiesResult", this.entitiesResult);
        jsonWriter.writeJsonField("intentsResult", this.intentsResult);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringUtteranceEvaluationResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringUtteranceEvaluationResult if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringUtteranceEvaluationResult.
     */
    @Generated
    public static AnalyzeConversationAuthoringUtteranceEvaluationResult fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String text = null;
            String language = null;
            AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult entitiesResult = null;
            AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult intentsResult = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("language".equals(fieldName)) {
                    language = reader.getString();
                } else if ("entitiesResult".equals(fieldName)) {
                    entitiesResult = AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult.fromJson(reader);
                } else if ("intentsResult".equals(fieldName)) {
                    intentsResult = AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            AnalyzeConversationAuthoringUtteranceEvaluationResult deserializedAnalyzeConversationAuthoringUtteranceEvaluationResult
                = new AnalyzeConversationAuthoringUtteranceEvaluationResult(language, entitiesResult, intentsResult);
            deserializedAnalyzeConversationAuthoringUtteranceEvaluationResult.text = text;

            return deserializedAnalyzeConversationAuthoringUtteranceEvaluationResult;
        });
    }
}

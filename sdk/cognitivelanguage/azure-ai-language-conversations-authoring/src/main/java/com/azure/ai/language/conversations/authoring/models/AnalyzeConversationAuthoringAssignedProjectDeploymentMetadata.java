// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Objects;

/**
 * Represents the metadata for an assigned deployment.
 */
@Immutable
public final class AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata
    implements JsonSerializable<AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata> {
    /*
     * Represents the deployment name.
     */
    @Generated
    private final String deploymentName;

    /*
     * Represents deployment last deployed time.
     */
    @Generated
    private final OffsetDateTime lastDeployedDateTime;

    /*
     * Represents deployment expiration date in the runtime.
     */
    @Generated
    private final LocalDate deploymentExpirationDate;

    /**
     * Creates an instance of AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata class.
     * 
     * @param deploymentName the deploymentName value to set.
     * @param lastDeployedDateTime the lastDeployedDateTime value to set.
     * @param deploymentExpirationDate the deploymentExpirationDate value to set.
     */
    @Generated
    private AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata(String deploymentName,
        OffsetDateTime lastDeployedDateTime, LocalDate deploymentExpirationDate) {
        this.deploymentName = deploymentName;
        this.lastDeployedDateTime = lastDeployedDateTime;
        this.deploymentExpirationDate = deploymentExpirationDate;
    }

    /**
     * Get the deploymentName property: Represents the deployment name.
     * 
     * @return the deploymentName value.
     */
    @Generated
    public String getDeploymentName() {
        return this.deploymentName;
    }

    /**
     * Get the lastDeployedDateTime property: Represents deployment last deployed time.
     * 
     * @return the lastDeployedDateTime value.
     */
    @Generated
    public OffsetDateTime getLastDeployedDateTime() {
        return this.lastDeployedDateTime;
    }

    /**
     * Get the deploymentExpirationDate property: Represents deployment expiration date in the runtime.
     * 
     * @return the deploymentExpirationDate value.
     */
    @Generated
    public LocalDate getDeploymentExpirationDate() {
        return this.deploymentExpirationDate;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("deploymentName", this.deploymentName);
        jsonWriter.writeStringField("lastDeployedDateTime",
            this.lastDeployedDateTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastDeployedDateTime));
        jsonWriter.writeStringField("deploymentExpirationDate", Objects.toString(this.deploymentExpirationDate, null));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata.
     */
    @Generated
    public static AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String deploymentName = null;
            OffsetDateTime lastDeployedDateTime = null;
            LocalDate deploymentExpirationDate = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("deploymentName".equals(fieldName)) {
                    deploymentName = reader.getString();
                } else if ("lastDeployedDateTime".equals(fieldName)) {
                    lastDeployedDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("deploymentExpirationDate".equals(fieldName)) {
                    deploymentExpirationDate
                        = reader.getNullable(nonNullReader -> LocalDate.parse(nonNullReader.getString()));
                } else {
                    reader.skipChildren();
                }
            }
            return new AnalyzeConversationAuthoringAssignedProjectDeploymentMetadata(deploymentName,
                lastDeployedDateTime, deploymentExpirationDate);
        });
    }
}

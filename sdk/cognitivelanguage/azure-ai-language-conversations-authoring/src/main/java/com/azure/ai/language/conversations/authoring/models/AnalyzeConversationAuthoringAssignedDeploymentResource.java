// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the assigned deployment resource.
 */
@Immutable
public final class AnalyzeConversationAuthoringAssignedDeploymentResource
    implements JsonSerializable<AnalyzeConversationAuthoringAssignedDeploymentResource> {
    /*
     * The resource ID.
     */
    @Generated
    private String azureResourceId;

    /*
     * The resource region.
     */
    @Generated
    private final String region;

    /**
     * Creates an instance of AnalyzeConversationAuthoringAssignedDeploymentResource class.
     * 
     * @param region the region value to set.
     */
    @Generated
    private AnalyzeConversationAuthoringAssignedDeploymentResource(String region) {
        this.region = region;
    }

    /**
     * Get the azureResourceId property: The resource ID.
     * 
     * @return the azureResourceId value.
     */
    @Generated
    public String getAzureResourceId() {
        return this.azureResourceId;
    }

    /**
     * Get the region property: The resource region.
     * 
     * @return the region value.
     */
    @Generated
    public String getRegion() {
        return this.region;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("region", this.region);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringAssignedDeploymentResource from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringAssignedDeploymentResource if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringAssignedDeploymentResource.
     */
    @Generated
    public static AnalyzeConversationAuthoringAssignedDeploymentResource fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String azureResourceId = null;
            String region = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureResourceId".equals(fieldName)) {
                    azureResourceId = reader.getString();
                } else if ("region".equals(fieldName)) {
                    region = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            AnalyzeConversationAuthoringAssignedDeploymentResource deserializedAnalyzeConversationAuthoringAssignedDeploymentResource
                = new AnalyzeConversationAuthoringAssignedDeploymentResource(region);
            deserializedAnalyzeConversationAuthoringAssignedDeploymentResource.azureResourceId = azureResourceId;

            return deserializedAnalyzeConversationAuthoringAssignedDeploymentResource;
        });
    }
}

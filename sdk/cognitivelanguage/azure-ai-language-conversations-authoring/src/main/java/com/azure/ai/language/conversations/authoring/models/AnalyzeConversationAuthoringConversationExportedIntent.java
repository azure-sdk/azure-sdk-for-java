// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents an exported intent of a conversational project.
 */
@Immutable
public final class AnalyzeConversationAuthoringConversationExportedIntent
    implements JsonSerializable<AnalyzeConversationAuthoringConversationExportedIntent> {
    /*
     * The intent category.
     */
    @Generated
    private final String category;

    /**
     * Creates an instance of AnalyzeConversationAuthoringConversationExportedIntent class.
     * 
     * @param category the category value to set.
     */
    @Generated
    public AnalyzeConversationAuthoringConversationExportedIntent(String category) {
        this.category = category;
    }

    /**
     * Get the category property: The intent category.
     * 
     * @return the category value.
     */
    @Generated
    public String getCategory() {
        return this.category;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("category", this.category);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringConversationExportedIntent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringConversationExportedIntent if the JsonReader was pointing to
     * an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringConversationExportedIntent.
     */
    @Generated
    public static AnalyzeConversationAuthoringConversationExportedIntent fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String category = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("category".equals(fieldName)) {
                    category = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new AnalyzeConversationAuthoringConversationExportedIntent(category);
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.conversations.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the evaluation result summary.
 */
@Immutable
public final class AnalyzeConversationAuthoringEvaluationSummary
    implements JsonSerializable<AnalyzeConversationAuthoringEvaluationSummary> {
    /*
     * Contains the data related to entities evaluation.
     */
    @Generated
    private final AnalyzeConversationAuthoringEntitiesEvaluationSummary entitiesEvaluation;

    /*
     * Contains the data related to intents evaluation.
     */
    @Generated
    private final AnalyzeConversationAuthoringIntentsEvaluationSummary intentsEvaluation;

    /*
     * The options that were used while running the evaluation.
     */
    @Generated
    private AnalyzeConversationAuthoringEvaluationOptions evaluationOptions;

    /**
     * Creates an instance of AnalyzeConversationAuthoringEvaluationSummary class.
     * 
     * @param entitiesEvaluation the entitiesEvaluation value to set.
     * @param intentsEvaluation the intentsEvaluation value to set.
     */
    @Generated
    private AnalyzeConversationAuthoringEvaluationSummary(
        AnalyzeConversationAuthoringEntitiesEvaluationSummary entitiesEvaluation,
        AnalyzeConversationAuthoringIntentsEvaluationSummary intentsEvaluation) {
        this.entitiesEvaluation = entitiesEvaluation;
        this.intentsEvaluation = intentsEvaluation;
    }

    /**
     * Get the entitiesEvaluation property: Contains the data related to entities evaluation.
     * 
     * @return the entitiesEvaluation value.
     */
    @Generated
    public AnalyzeConversationAuthoringEntitiesEvaluationSummary getEntitiesEvaluation() {
        return this.entitiesEvaluation;
    }

    /**
     * Get the intentsEvaluation property: Contains the data related to intents evaluation.
     * 
     * @return the intentsEvaluation value.
     */
    @Generated
    public AnalyzeConversationAuthoringIntentsEvaluationSummary getIntentsEvaluation() {
        return this.intentsEvaluation;
    }

    /**
     * Get the evaluationOptions property: The options that were used while running the evaluation.
     * 
     * @return the evaluationOptions value.
     */
    @Generated
    public AnalyzeConversationAuthoringEvaluationOptions getEvaluationOptions() {
        return this.evaluationOptions;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("entitiesEvaluation", this.entitiesEvaluation);
        jsonWriter.writeJsonField("intentsEvaluation", this.intentsEvaluation);
        jsonWriter.writeJsonField("evaluationOptions", this.evaluationOptions);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AnalyzeConversationAuthoringEvaluationSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AnalyzeConversationAuthoringEvaluationSummary if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AnalyzeConversationAuthoringEvaluationSummary.
     */
    @Generated
    public static AnalyzeConversationAuthoringEvaluationSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AnalyzeConversationAuthoringEntitiesEvaluationSummary entitiesEvaluation = null;
            AnalyzeConversationAuthoringIntentsEvaluationSummary intentsEvaluation = null;
            AnalyzeConversationAuthoringEvaluationOptions evaluationOptions = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("entitiesEvaluation".equals(fieldName)) {
                    entitiesEvaluation = AnalyzeConversationAuthoringEntitiesEvaluationSummary.fromJson(reader);
                } else if ("intentsEvaluation".equals(fieldName)) {
                    intentsEvaluation = AnalyzeConversationAuthoringIntentsEvaluationSummary.fromJson(reader);
                } else if ("evaluationOptions".equals(fieldName)) {
                    evaluationOptions = AnalyzeConversationAuthoringEvaluationOptions.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            AnalyzeConversationAuthoringEvaluationSummary deserializedAnalyzeConversationAuthoringEvaluationSummary
                = new AnalyzeConversationAuthoringEvaluationSummary(entitiesEvaluation, intentsEvaluation);
            deserializedAnalyzeConversationAuthoringEvaluationSummary.evaluationOptions = evaluationOptions;

            return deserializedAnalyzeConversationAuthoringEvaluationSummary;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the options for creating or replacing an exported model.
 */
@Immutable
public final class TextAnalysisAuthoringExportedModelOptions
    implements JsonSerializable<TextAnalysisAuthoringExportedModelOptions> {
    /*
     * The trained model label.
     */
    @Generated
    private final String trainedModelLabel;

    /**
     * Creates an instance of TextAnalysisAuthoringExportedModelOptions class.
     * 
     * @param trainedModelLabel the trainedModelLabel value to set.
     */
    @Generated
    public TextAnalysisAuthoringExportedModelOptions(String trainedModelLabel) {
        this.trainedModelLabel = trainedModelLabel;
    }

    /**
     * Get the trainedModelLabel property: The trained model label.
     * 
     * @return the trainedModelLabel value.
     */
    @Generated
    public String getTrainedModelLabel() {
        return this.trainedModelLabel;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("trainedModelLabel", this.trainedModelLabel);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringExportedModelOptions from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringExportedModelOptions if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TextAnalysisAuthoringExportedModelOptions.
     */
    @Generated
    public static TextAnalysisAuthoringExportedModelOptions fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String trainedModelLabel = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("trainedModelLabel".equals(fieldName)) {
                    trainedModelLabel = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new TextAnalysisAuthoringExportedModelOptions(trainedModelLabel);
        });
    }
}

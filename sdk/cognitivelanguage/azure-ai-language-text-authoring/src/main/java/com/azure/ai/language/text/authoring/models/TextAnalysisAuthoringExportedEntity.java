// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents an entity in an exported project.
 */
@Fluent
public final class TextAnalysisAuthoringExportedEntity
    implements JsonSerializable<TextAnalysisAuthoringExportedEntity> {
    /*
     * The entity category.
     */
    @Generated
    private String category;

    /*
     * Short description for entity category. Required when enabling synthetic data generation.
     */
    @Generated
    private String description;

    /**
     * Creates an instance of TextAnalysisAuthoringExportedEntity class.
     */
    @Generated
    public TextAnalysisAuthoringExportedEntity() {
    }

    /**
     * Get the category property: The entity category.
     * 
     * @return the category value.
     */
    @Generated
    public String getCategory() {
        return this.category;
    }

    /**
     * Set the category property: The entity category.
     * 
     * @param category the category value to set.
     * @return the TextAnalysisAuthoringExportedEntity object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedEntity setCategory(String category) {
        this.category = category;
        return this;
    }

    /**
     * Get the description property: Short description for entity category. Required when enabling synthetic data
     * generation.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: Short description for entity category. Required when enabling synthetic data
     * generation.
     * 
     * @param description the description value to set.
     * @return the TextAnalysisAuthoringExportedEntity object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedEntity setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("category", this.category);
        jsonWriter.writeStringField("description", this.description);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringExportedEntity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringExportedEntity if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TextAnalysisAuthoringExportedEntity.
     */
    @Generated
    public static TextAnalysisAuthoringExportedEntity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TextAnalysisAuthoringExportedEntity deserializedTextAnalysisAuthoringExportedEntity
                = new TextAnalysisAuthoringExportedEntity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("category".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedEntity.category = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedEntity.description = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTextAnalysisAuthoringExportedEntity;
        });
    }
}

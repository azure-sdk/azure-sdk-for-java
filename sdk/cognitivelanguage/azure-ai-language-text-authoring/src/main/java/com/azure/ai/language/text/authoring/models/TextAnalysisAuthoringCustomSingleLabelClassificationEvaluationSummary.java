// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the evaluation summary for a custom single-label classification project.
 */
@Immutable
public final class TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary
    extends TextAnalysisAuthoringEvaluationSummary {
    /*
     * Represents the project type that the evaluation ran on.
     */
    @Generated
    private ProjectKind projectKind = ProjectKind.CUSTOM_SINGLE_LABEL_CLASSIFICATION;

    /*
     * Contains the data related to single label classification evaluation.
     */
    @Generated
    private final TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary customSingleLabelClassificationEvaluation;

    /**
     * Creates an instance of TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary class.
     * 
     * @param evaluationOptions the evaluationOptions value to set.
     * @param customSingleLabelClassificationEvaluation the customSingleLabelClassificationEvaluation value to set.
     */
    @Generated
    private TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary(
        TextAnalysisAuthoringEvaluationOptions evaluationOptions,
        TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary customSingleLabelClassificationEvaluation) {
        super(evaluationOptions);
        this.customSingleLabelClassificationEvaluation = customSingleLabelClassificationEvaluation;
    }

    /**
     * Get the projectKind property: Represents the project type that the evaluation ran on.
     * 
     * @return the projectKind value.
     */
    @Generated
    @Override
    public ProjectKind getProjectKind() {
        return this.projectKind;
    }

    /**
     * Get the customSingleLabelClassificationEvaluation property: Contains the data related to single label
     * classification evaluation.
     * 
     * @return the customSingleLabelClassificationEvaluation value.
     */
    @Generated
    public TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary
        getCustomSingleLabelClassificationEvaluation() {
        return this.customSingleLabelClassificationEvaluation;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("evaluationOptions", getEvaluationOptions());
        jsonWriter.writeJsonField("customSingleLabelClassificationEvaluation",
            this.customSingleLabelClassificationEvaluation);
        jsonWriter.writeStringField("projectKind", this.projectKind == null ? null : this.projectKind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary if the JsonReader
     * was pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary.
     */
    @Generated
    public static TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            TextAnalysisAuthoringEvaluationOptions evaluationOptions = null;
            TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary customSingleLabelClassificationEvaluation
                = null;
            ProjectKind projectKind = ProjectKind.CUSTOM_SINGLE_LABEL_CLASSIFICATION;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("evaluationOptions".equals(fieldName)) {
                    evaluationOptions = TextAnalysisAuthoringEvaluationOptions.fromJson(reader);
                } else if ("customSingleLabelClassificationEvaluation".equals(fieldName)) {
                    customSingleLabelClassificationEvaluation
                        = TextAnalysisAuthoringSingleLabelClassificationEvaluationSummary.fromJson(reader);
                } else if ("projectKind".equals(fieldName)) {
                    projectKind = ProjectKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary deserializedTextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary
                = new TextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary(evaluationOptions,
                    customSingleLabelClassificationEvaluation);
            deserializedTextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary.projectKind = projectKind;

            return deserializedTextAnalysisAuthoringCustomSingleLabelClassificationEvaluationSummary;
        });
    }
}

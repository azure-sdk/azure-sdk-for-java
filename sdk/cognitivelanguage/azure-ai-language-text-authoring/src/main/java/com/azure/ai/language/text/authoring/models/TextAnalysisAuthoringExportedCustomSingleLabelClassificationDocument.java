// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents an exported document for a custom single-label classification project.
 */
@Fluent
public final class TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument
    implements JsonSerializable<TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument> {
    /*
     * The class of the documents.
     */
    @Generated
    private TextAnalysisAuthoringExportedDocumentClass classProperty;

    /*
     * The location of the document in the storage.
     */
    @Generated
    private String location;

    /*
     * Represents the document language. This is BCP-47 representation of a language. For example, use "en" for English,
     * "en-gb" for English (UK), "es" for Spanish etc.
     */
    @Generated
    private String language;

    /*
     * The dataset for this document. Allowed values are 'Train' and 'Test'.
     */
    @Generated
    private String dataset;

    /**
     * Creates an instance of TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument class.
     */
    @Generated
    public TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument() {
    }

    /**
     * Get the classProperty property: The class of the documents.
     * 
     * @return the classProperty value.
     */
    @Generated
    public TextAnalysisAuthoringExportedDocumentClass getClassProperty() {
        return this.classProperty;
    }

    /**
     * Set the classProperty property: The class of the documents.
     * 
     * @param classProperty the classProperty value to set.
     * @return the TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument
        setClassProperty(TextAnalysisAuthoringExportedDocumentClass classProperty) {
        this.classProperty = classProperty;
        return this;
    }

    /**
     * Get the location property: The location of the document in the storage.
     * 
     * @return the location value.
     */
    @Generated
    public String getLocation() {
        return this.location;
    }

    /**
     * Set the location property: The location of the document in the storage.
     * 
     * @param location the location value to set.
     * @return the TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument setLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the language property: Represents the document language. This is BCP-47 representation of a language. For
     * example, use "en" for English, "en-gb" for English (UK), "es" for Spanish etc.
     * 
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * Set the language property: Represents the document language. This is BCP-47 representation of a language. For
     * example, use "en" for English, "en-gb" for English (UK), "es" for Spanish etc.
     * 
     * @param language the language value to set.
     * @return the TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Get the dataset property: The dataset for this document. Allowed values are 'Train' and 'Test'.
     * 
     * @return the dataset value.
     */
    @Generated
    public String getDataset() {
        return this.dataset;
    }

    /**
     * Set the dataset property: The dataset for this document. Allowed values are 'Train' and 'Test'.
     * 
     * @param dataset the dataset value to set.
     * @return the TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument setDataset(String dataset) {
        this.dataset = dataset;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("class", this.classProperty);
        jsonWriter.writeStringField("location", this.location);
        jsonWriter.writeStringField("language", this.language);
        jsonWriter.writeStringField("dataset", this.dataset);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the
     * TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument.
     */
    @Generated
    public static TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument deserializedTextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument
                = new TextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("class".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument.classProperty
                        = TextAnalysisAuthoringExportedDocumentClass.fromJson(reader);
                } else if ("location".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument.location
                        = reader.getString();
                } else if ("language".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument.language
                        = reader.getString();
                } else if ("dataset".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument.dataset
                        = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTextAnalysisAuthoringExportedCustomSingleLabelClassificationDocument;
        });
    }
}

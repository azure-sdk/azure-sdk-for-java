// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Represents a region in a document for entity labeling.
 */
@Fluent
public final class TextAnalysisAuthoringExportedDocumentEntityRegion
    implements JsonSerializable<TextAnalysisAuthoringExportedDocumentEntityRegion> {
    /*
     * Start position for the region.
     */
    @Generated
    private Integer regionOffset;

    /*
     * Length for the region text.
     */
    @Generated
    private Integer regionLength;

    /*
     * The list of entity labels belonging to this region.
     */
    @Generated
    private List<TextAnalysisAuthoringExportedDocumentEntityLabel> labels;

    /**
     * Creates an instance of TextAnalysisAuthoringExportedDocumentEntityRegion class.
     */
    @Generated
    public TextAnalysisAuthoringExportedDocumentEntityRegion() {
    }

    /**
     * Get the regionOffset property: Start position for the region.
     * 
     * @return the regionOffset value.
     */
    @Generated
    public Integer getRegionOffset() {
        return this.regionOffset;
    }

    /**
     * Set the regionOffset property: Start position for the region.
     * 
     * @param regionOffset the regionOffset value to set.
     * @return the TextAnalysisAuthoringExportedDocumentEntityRegion object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedDocumentEntityRegion setRegionOffset(Integer regionOffset) {
        this.regionOffset = regionOffset;
        return this;
    }

    /**
     * Get the regionLength property: Length for the region text.
     * 
     * @return the regionLength value.
     */
    @Generated
    public Integer getRegionLength() {
        return this.regionLength;
    }

    /**
     * Set the regionLength property: Length for the region text.
     * 
     * @param regionLength the regionLength value to set.
     * @return the TextAnalysisAuthoringExportedDocumentEntityRegion object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedDocumentEntityRegion setRegionLength(Integer regionLength) {
        this.regionLength = regionLength;
        return this;
    }

    /**
     * Get the labels property: The list of entity labels belonging to this region.
     * 
     * @return the labels value.
     */
    @Generated
    public List<TextAnalysisAuthoringExportedDocumentEntityLabel> getLabels() {
        return this.labels;
    }

    /**
     * Set the labels property: The list of entity labels belonging to this region.
     * 
     * @param labels the labels value to set.
     * @return the TextAnalysisAuthoringExportedDocumentEntityRegion object itself.
     */
    @Generated
    public TextAnalysisAuthoringExportedDocumentEntityRegion
        setLabels(List<TextAnalysisAuthoringExportedDocumentEntityLabel> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("regionOffset", this.regionOffset);
        jsonWriter.writeNumberField("regionLength", this.regionLength);
        jsonWriter.writeArrayField("labels", this.labels, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringExportedDocumentEntityRegion from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringExportedDocumentEntityRegion if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the TextAnalysisAuthoringExportedDocumentEntityRegion.
     */
    @Generated
    public static TextAnalysisAuthoringExportedDocumentEntityRegion fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            TextAnalysisAuthoringExportedDocumentEntityRegion deserializedTextAnalysisAuthoringExportedDocumentEntityRegion
                = new TextAnalysisAuthoringExportedDocumentEntityRegion();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("regionOffset".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedDocumentEntityRegion.regionOffset
                        = reader.getNullable(JsonReader::getInt);
                } else if ("regionLength".equals(fieldName)) {
                    deserializedTextAnalysisAuthoringExportedDocumentEntityRegion.regionLength
                        = reader.getNullable(JsonReader::getInt);
                } else if ("labels".equals(fieldName)) {
                    List<TextAnalysisAuthoringExportedDocumentEntityLabel> labels = reader
                        .readArray(reader1 -> TextAnalysisAuthoringExportedDocumentEntityLabel.fromJson(reader1));
                    deserializedTextAnalysisAuthoringExportedDocumentEntityRegion.labels = labels;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedTextAnalysisAuthoringExportedDocumentEntityRegion;
        });
    }
}

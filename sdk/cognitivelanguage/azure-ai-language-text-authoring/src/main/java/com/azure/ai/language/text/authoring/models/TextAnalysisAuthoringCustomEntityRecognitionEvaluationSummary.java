// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the evaluation summary for a custom entity recognition project.
 */
@Immutable
public final class TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary
    extends TextAnalysisAuthoringEvaluationSummary {
    /*
     * Represents the project type that the evaluation ran on.
     */
    @Generated
    private ProjectKind projectKind = ProjectKind.CUSTOM_ENTITY_RECOGNITION;

    /*
     * Contains the data related to extraction evaluation.
     */
    @Generated
    private final TextAnalysisAuthoringEntityRecognitionEvaluationSummary customEntityRecognitionEvaluation;

    /**
     * Creates an instance of TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary class.
     * 
     * @param evaluationOptions the evaluationOptions value to set.
     * @param customEntityRecognitionEvaluation the customEntityRecognitionEvaluation value to set.
     */
    @Generated
    private TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary(
        TextAnalysisAuthoringEvaluationOptions evaluationOptions,
        TextAnalysisAuthoringEntityRecognitionEvaluationSummary customEntityRecognitionEvaluation) {
        super(evaluationOptions);
        this.customEntityRecognitionEvaluation = customEntityRecognitionEvaluation;
    }

    /**
     * Get the projectKind property: Represents the project type that the evaluation ran on.
     * 
     * @return the projectKind value.
     */
    @Generated
    @Override
    public ProjectKind getProjectKind() {
        return this.projectKind;
    }

    /**
     * Get the customEntityRecognitionEvaluation property: Contains the data related to extraction evaluation.
     * 
     * @return the customEntityRecognitionEvaluation value.
     */
    @Generated
    public TextAnalysisAuthoringEntityRecognitionEvaluationSummary getCustomEntityRecognitionEvaluation() {
        return this.customEntityRecognitionEvaluation;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("evaluationOptions", getEvaluationOptions());
        jsonWriter.writeJsonField("customEntityRecognitionEvaluation", this.customEntityRecognitionEvaluation);
        jsonWriter.writeStringField("projectKind", this.projectKind == null ? null : this.projectKind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary.
     */
    @Generated
    public static TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            TextAnalysisAuthoringEvaluationOptions evaluationOptions = null;
            TextAnalysisAuthoringEntityRecognitionEvaluationSummary customEntityRecognitionEvaluation = null;
            ProjectKind projectKind = ProjectKind.CUSTOM_ENTITY_RECOGNITION;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("evaluationOptions".equals(fieldName)) {
                    evaluationOptions = TextAnalysisAuthoringEvaluationOptions.fromJson(reader);
                } else if ("customEntityRecognitionEvaluation".equals(fieldName)) {
                    customEntityRecognitionEvaluation
                        = TextAnalysisAuthoringEntityRecognitionEvaluationSummary.fromJson(reader);
                } else if ("projectKind".equals(fieldName)) {
                    projectKind = ProjectKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary deserializedTextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary
                = new TextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary(evaluationOptions,
                    customEntityRecognitionEvaluation);
            deserializedTextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary.projectKind = projectKind;

            return deserializedTextAnalysisAuthoringCustomEntityRecognitionEvaluationSummary;
        });
    }
}

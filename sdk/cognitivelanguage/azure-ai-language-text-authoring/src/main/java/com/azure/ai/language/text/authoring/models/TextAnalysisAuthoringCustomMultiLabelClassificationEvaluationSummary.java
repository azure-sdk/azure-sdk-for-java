// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the evaluation summary for a custom multi-label classification project.
 */
@Immutable
public final class TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary
    extends TextAnalysisAuthoringEvaluationSummary {
    /*
     * Represents the project type that the evaluation ran on.
     */
    @Generated
    private ProjectKind projectKind = ProjectKind.CUSTOM_MULTI_LABEL_CLASSIFICATION;

    /*
     * Contains the data related to multi label classification evaluation.
     */
    @Generated
    private final TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary customMultiLabelClassificationEvaluation;

    /**
     * Creates an instance of TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary class.
     * 
     * @param evaluationOptions the evaluationOptions value to set.
     * @param customMultiLabelClassificationEvaluation the customMultiLabelClassificationEvaluation value to set.
     */
    @Generated
    private TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary(
        TextAnalysisAuthoringEvaluationOptions evaluationOptions,
        TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary customMultiLabelClassificationEvaluation) {
        super(evaluationOptions);
        this.customMultiLabelClassificationEvaluation = customMultiLabelClassificationEvaluation;
    }

    /**
     * Get the projectKind property: Represents the project type that the evaluation ran on.
     * 
     * @return the projectKind value.
     */
    @Generated
    @Override
    public ProjectKind getProjectKind() {
        return this.projectKind;
    }

    /**
     * Get the customMultiLabelClassificationEvaluation property: Contains the data related to multi label
     * classification evaluation.
     * 
     * @return the customMultiLabelClassificationEvaluation value.
     */
    @Generated
    public TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary
        getCustomMultiLabelClassificationEvaluation() {
        return this.customMultiLabelClassificationEvaluation;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("evaluationOptions", getEvaluationOptions());
        jsonWriter.writeJsonField("customMultiLabelClassificationEvaluation",
            this.customMultiLabelClassificationEvaluation);
        jsonWriter.writeStringField("projectKind", this.projectKind == null ? null : this.projectKind.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary if the JsonReader was
     * pointing to an instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the
     * TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary.
     */
    @Generated
    public static TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            TextAnalysisAuthoringEvaluationOptions evaluationOptions = null;
            TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary customMultiLabelClassificationEvaluation
                = null;
            ProjectKind projectKind = ProjectKind.CUSTOM_MULTI_LABEL_CLASSIFICATION;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("evaluationOptions".equals(fieldName)) {
                    evaluationOptions = TextAnalysisAuthoringEvaluationOptions.fromJson(reader);
                } else if ("customMultiLabelClassificationEvaluation".equals(fieldName)) {
                    customMultiLabelClassificationEvaluation
                        = TextAnalysisAuthoringMultiLabelClassificationEvaluationSummary.fromJson(reader);
                } else if ("projectKind".equals(fieldName)) {
                    projectKind = ProjectKind.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary deserializedTextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary
                = new TextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary(evaluationOptions,
                    customMultiLabelClassificationEvaluation);
            deserializedTextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary.projectKind = projectKind;

            return deserializedTextAnalysisAuthoringCustomMultiLabelClassificationEvaluationSummary;
        });
    }
}

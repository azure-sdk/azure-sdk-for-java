// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.ai.language.text.authoring.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Represents the metadata of a project.
 */
@Immutable
public final class TextAnalysisAuthoringProjectMetadata
    implements JsonSerializable<TextAnalysisAuthoringProjectMetadata> {
    /*
     * Represents the project creation datetime.
     */
    @Generated
    private final OffsetDateTime createdDateTime;

    /*
     * Represents the project last modification datetime.
     */
    @Generated
    private final OffsetDateTime lastModifiedDateTime;

    /*
     * Represents the project last training datetime.
     */
    @Generated
    private OffsetDateTime lastTrainedDateTime;

    /*
     * Represents the project last deployment datetime.
     */
    @Generated
    private OffsetDateTime lastDeployedDateTime;

    /*
     * The project kind.
     */
    @Generated
    private final ProjectKind projectKind;

    /*
     * The storage container name.
     */
    @Generated
    private final String storageInputContainerName;

    /*
     * The project settings.
     */
    @Generated
    private ProjectSettings settings;

    /*
     * The new project name.
     */
    @Generated
    private String projectName;

    /*
     * Whether the project would be used for multiple languages or not.
     */
    @Generated
    private Boolean multilingual;

    /*
     * The project description.
     */
    @Generated
    private String description;

    /*
     * The project language. This is BCP-47 representation of a language. For example, use "en" for English, "en-gb" for
     * English (UK), "es" for Spanish etc.
     */
    @Generated
    private final String language;

    /**
     * Creates an instance of TextAnalysisAuthoringProjectMetadata class.
     * 
     * @param createdDateTime the createdDateTime value to set.
     * @param lastModifiedDateTime the lastModifiedDateTime value to set.
     * @param projectKind the projectKind value to set.
     * @param storageInputContainerName the storageInputContainerName value to set.
     * @param language the language value to set.
     */
    @Generated
    private TextAnalysisAuthoringProjectMetadata(OffsetDateTime createdDateTime, OffsetDateTime lastModifiedDateTime,
        ProjectKind projectKind, String storageInputContainerName, String language) {
        this.createdDateTime = createdDateTime;
        this.lastModifiedDateTime = lastModifiedDateTime;
        this.projectKind = projectKind;
        this.storageInputContainerName = storageInputContainerName;
        this.language = language;
    }

    /**
     * Get the createdDateTime property: Represents the project creation datetime.
     * 
     * @return the createdDateTime value.
     */
    @Generated
    public OffsetDateTime getCreatedDateTime() {
        return this.createdDateTime;
    }

    /**
     * Get the lastModifiedDateTime property: Represents the project last modification datetime.
     * 
     * @return the lastModifiedDateTime value.
     */
    @Generated
    public OffsetDateTime getLastModifiedDateTime() {
        return this.lastModifiedDateTime;
    }

    /**
     * Get the lastTrainedDateTime property: Represents the project last training datetime.
     * 
     * @return the lastTrainedDateTime value.
     */
    @Generated
    public OffsetDateTime getLastTrainedDateTime() {
        return this.lastTrainedDateTime;
    }

    /**
     * Get the lastDeployedDateTime property: Represents the project last deployment datetime.
     * 
     * @return the lastDeployedDateTime value.
     */
    @Generated
    public OffsetDateTime getLastDeployedDateTime() {
        return this.lastDeployedDateTime;
    }

    /**
     * Get the projectKind property: The project kind.
     * 
     * @return the projectKind value.
     */
    @Generated
    public ProjectKind getProjectKind() {
        return this.projectKind;
    }

    /**
     * Get the storageInputContainerName property: The storage container name.
     * 
     * @return the storageInputContainerName value.
     */
    @Generated
    public String getStorageInputContainerName() {
        return this.storageInputContainerName;
    }

    /**
     * Get the settings property: The project settings.
     * 
     * @return the settings value.
     */
    @Generated
    public ProjectSettings getSettings() {
        return this.settings;
    }

    /**
     * Get the projectName property: The new project name.
     * 
     * @return the projectName value.
     */
    @Generated
    public String getProjectName() {
        return this.projectName;
    }

    /**
     * Get the multilingual property: Whether the project would be used for multiple languages or not.
     * 
     * @return the multilingual value.
     */
    @Generated
    public Boolean isMultilingual() {
        return this.multilingual;
    }

    /**
     * Get the description property: The project description.
     * 
     * @return the description value.
     */
    @Generated
    public String getDescription() {
        return this.description;
    }

    /**
     * Get the language property: The project language. This is BCP-47 representation of a language. For example, use
     * "en" for English, "en-gb" for English (UK), "es" for Spanish etc.
     * 
     * @return the language value.
     */
    @Generated
    public String getLanguage() {
        return this.language;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("createdDateTime",
            this.createdDateTime == null ? null : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.createdDateTime));
        jsonWriter.writeStringField("lastModifiedDateTime",
            this.lastModifiedDateTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastModifiedDateTime));
        jsonWriter.writeStringField("projectKind", this.projectKind == null ? null : this.projectKind.toString());
        jsonWriter.writeStringField("storageInputContainerName", this.storageInputContainerName);
        jsonWriter.writeStringField("language", this.language);
        jsonWriter.writeStringField("lastTrainedDateTime",
            this.lastTrainedDateTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastTrainedDateTime));
        jsonWriter.writeStringField("lastDeployedDateTime",
            this.lastDeployedDateTime == null
                ? null
                : DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(this.lastDeployedDateTime));
        jsonWriter.writeJsonField("settings", this.settings);
        jsonWriter.writeBooleanField("multilingual", this.multilingual);
        jsonWriter.writeStringField("description", this.description);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of TextAnalysisAuthoringProjectMetadata from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of TextAnalysisAuthoringProjectMetadata if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the TextAnalysisAuthoringProjectMetadata.
     */
    @Generated
    public static TextAnalysisAuthoringProjectMetadata fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OffsetDateTime createdDateTime = null;
            OffsetDateTime lastModifiedDateTime = null;
            ProjectKind projectKind = null;
            String storageInputContainerName = null;
            String projectName = null;
            String language = null;
            OffsetDateTime lastTrainedDateTime = null;
            OffsetDateTime lastDeployedDateTime = null;
            ProjectSettings settings = null;
            Boolean multilingual = null;
            String description = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("createdDateTime".equals(fieldName)) {
                    createdDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("lastModifiedDateTime".equals(fieldName)) {
                    lastModifiedDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("projectKind".equals(fieldName)) {
                    projectKind = ProjectKind.fromString(reader.getString());
                } else if ("storageInputContainerName".equals(fieldName)) {
                    storageInputContainerName = reader.getString();
                } else if ("projectName".equals(fieldName)) {
                    projectName = reader.getString();
                } else if ("language".equals(fieldName)) {
                    language = reader.getString();
                } else if ("lastTrainedDateTime".equals(fieldName)) {
                    lastTrainedDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("lastDeployedDateTime".equals(fieldName)) {
                    lastDeployedDateTime = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("settings".equals(fieldName)) {
                    settings = ProjectSettings.fromJson(reader);
                } else if ("multilingual".equals(fieldName)) {
                    multilingual = reader.getNullable(JsonReader::getBoolean);
                } else if ("description".equals(fieldName)) {
                    description = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            TextAnalysisAuthoringProjectMetadata deserializedTextAnalysisAuthoringProjectMetadata
                = new TextAnalysisAuthoringProjectMetadata(createdDateTime, lastModifiedDateTime, projectKind,
                    storageInputContainerName, language);
            deserializedTextAnalysisAuthoringProjectMetadata.projectName = projectName;
            deserializedTextAnalysisAuthoringProjectMetadata.lastTrainedDateTime = lastTrainedDateTime;
            deserializedTextAnalysisAuthoringProjectMetadata.lastDeployedDateTime = lastDeployedDateTime;
            deserializedTextAnalysisAuthoringProjectMetadata.settings = settings;
            deserializedTextAnalysisAuthoringProjectMetadata.multilingual = multilingual;
            deserializedTextAnalysisAuthoringProjectMetadata.description = description;

            return deserializedTextAnalysisAuthoringProjectMetadata;
        });
    }
}

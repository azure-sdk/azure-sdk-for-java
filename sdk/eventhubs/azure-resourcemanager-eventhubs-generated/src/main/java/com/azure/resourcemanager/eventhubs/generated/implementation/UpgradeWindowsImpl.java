// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.eventhubs.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.eventhubs.generated.fluent.UpgradeWindowsClient;
import com.azure.resourcemanager.eventhubs.generated.fluent.models.ClusterUpgradeWindowInner;
import com.azure.resourcemanager.eventhubs.generated.models.ClusterUpgradeWindow;
import com.azure.resourcemanager.eventhubs.generated.models.UpgradeWindows;

public final class UpgradeWindowsImpl implements UpgradeWindows {
    private static final ClientLogger LOGGER = new ClientLogger(UpgradeWindowsImpl.class);

    private final UpgradeWindowsClient innerClient;

    private final com.azure.resourcemanager.eventhubs.generated.EventHubsManager serviceManager;

    public UpgradeWindowsImpl(
        UpgradeWindowsClient innerClient,
        com.azure.resourcemanager.eventhubs.generated.EventHubsManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ClusterUpgradeWindow> patchWithResponse(
        String resourceGroupName, String clusterName, ClusterUpgradeWindowInner parameters, Context context) {
        Response<ClusterUpgradeWindowInner> inner =
            this.serviceClient().patchWithResponse(resourceGroupName, clusterName, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ClusterUpgradeWindowImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ClusterUpgradeWindow patch(
        String resourceGroupName, String clusterName, ClusterUpgradeWindowInner parameters) {
        ClusterUpgradeWindowInner inner = this.serviceClient().patch(resourceGroupName, clusterName, parameters);
        if (inner != null) {
            return new ClusterUpgradeWindowImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ClusterUpgradeWindow> getWithResponse(
        String resourceGroupName, String clusterName, Context context) {
        Response<ClusterUpgradeWindowInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, clusterName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ClusterUpgradeWindowImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ClusterUpgradeWindow get(String resourceGroupName, String clusterName) {
        ClusterUpgradeWindowInner inner = this.serviceClient().get(resourceGroupName, clusterName);
        if (inner != null) {
            return new ClusterUpgradeWindowImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private UpgradeWindowsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.eventhubs.generated.EventHubsManager manager() {
        return this.serviceManager;
    }
}

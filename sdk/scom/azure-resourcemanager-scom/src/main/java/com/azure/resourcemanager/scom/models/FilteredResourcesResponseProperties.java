// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The properties of a filtered resource.
 */
@Fluent
public final class FilteredResourcesResponseProperties {
    /*
     * ArmId of the filtered resource.
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * Location of the filtered resource.
     */
    @JsonProperty(value = "resourceLocation")
    private String resourceLocation;

    /*
     * ComputerName of the filtered resource.
     */
    @JsonProperty(value = "computerName")
    private String computerName;

    /*
     * The domain name associated with the filtered resource.
     */
    @JsonProperty(value = "domainName")
    private String domainName;

    /*
     * The status of the resource onboarding process that is being installed.
     */
    @JsonProperty(value = "onboardingStatus")
    private OnboardingStatusProperties onboardingStatus;

    /*
     * The management server endpoint to which the filtered resource is directed.
     */
    @JsonProperty(value = "managementServerEndpoint", access = JsonProperty.Access.WRITE_ONLY)
    private String managementServerEndpoint;

    /*
     * The health status of the filtered resource.
     */
    @JsonProperty(value = "healthStatus", access = JsonProperty.Access.WRITE_ONLY)
    private String healthStatus;

    /*
     * The connection status of the filtered resource.
     */
    @JsonProperty(value = "connectionStatus", access = JsonProperty.Access.WRITE_ONLY)
    private String connectionStatus;

    /*
     * Install type of filtered resource.
     */
    @JsonProperty(value = "installType", access = JsonProperty.Access.WRITE_ONLY)
    private String installType;

    /*
     * Update type of filtered resource.
     */
    @JsonProperty(value = "autoUpgrade", access = JsonProperty.Access.WRITE_ONLY)
    private AutoUpgrade autoUpgrade;

    /*
     * operatingSystem of filtered resource.
     */
    @JsonProperty(value = "operatingSystem", access = JsonProperty.Access.WRITE_ONLY)
    private String operatingSystem;

    /*
     * machineType of filtered resource.
     */
    @JsonProperty(value = "machineType", access = JsonProperty.Access.WRITE_ONLY)
    private MachineType machineType;

    /*
     * The additional properties of filtered resource.
     */
    @JsonProperty(value = "resourceAdditionalProperties")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> resourceAdditionalProperties;

    /**
     * Creates an instance of FilteredResourcesResponseProperties class.
     */
    public FilteredResourcesResponseProperties() {
    }

    /**
     * Get the resourceId property: ArmId of the filtered resource.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: ArmId of the filtered resource.
     * 
     * @param resourceId the resourceId value to set.
     * @return the FilteredResourcesResponseProperties object itself.
     */
    public FilteredResourcesResponseProperties withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the resourceLocation property: Location of the filtered resource.
     * 
     * @return the resourceLocation value.
     */
    public String resourceLocation() {
        return this.resourceLocation;
    }

    /**
     * Set the resourceLocation property: Location of the filtered resource.
     * 
     * @param resourceLocation the resourceLocation value to set.
     * @return the FilteredResourcesResponseProperties object itself.
     */
    public FilteredResourcesResponseProperties withResourceLocation(String resourceLocation) {
        this.resourceLocation = resourceLocation;
        return this;
    }

    /**
     * Get the computerName property: ComputerName of the filtered resource.
     * 
     * @return the computerName value.
     */
    public String computerName() {
        return this.computerName;
    }

    /**
     * Set the computerName property: ComputerName of the filtered resource.
     * 
     * @param computerName the computerName value to set.
     * @return the FilteredResourcesResponseProperties object itself.
     */
    public FilteredResourcesResponseProperties withComputerName(String computerName) {
        this.computerName = computerName;
        return this;
    }

    /**
     * Get the domainName property: The domain name associated with the filtered resource.
     * 
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: The domain name associated with the filtered resource.
     * 
     * @param domainName the domainName value to set.
     * @return the FilteredResourcesResponseProperties object itself.
     */
    public FilteredResourcesResponseProperties withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Get the onboardingStatus property: The status of the resource onboarding process that is being installed.
     * 
     * @return the onboardingStatus value.
     */
    public OnboardingStatusProperties onboardingStatus() {
        return this.onboardingStatus;
    }

    /**
     * Set the onboardingStatus property: The status of the resource onboarding process that is being installed.
     * 
     * @param onboardingStatus the onboardingStatus value to set.
     * @return the FilteredResourcesResponseProperties object itself.
     */
    public FilteredResourcesResponseProperties withOnboardingStatus(OnboardingStatusProperties onboardingStatus) {
        this.onboardingStatus = onboardingStatus;
        return this;
    }

    /**
     * Get the managementServerEndpoint property: The management server endpoint to which the filtered resource is
     * directed.
     * 
     * @return the managementServerEndpoint value.
     */
    public String managementServerEndpoint() {
        return this.managementServerEndpoint;
    }

    /**
     * Get the healthStatus property: The health status of the filtered resource.
     * 
     * @return the healthStatus value.
     */
    public String healthStatus() {
        return this.healthStatus;
    }

    /**
     * Get the connectionStatus property: The connection status of the filtered resource.
     * 
     * @return the connectionStatus value.
     */
    public String connectionStatus() {
        return this.connectionStatus;
    }

    /**
     * Get the installType property: Install type of filtered resource.
     * 
     * @return the installType value.
     */
    public String installType() {
        return this.installType;
    }

    /**
     * Get the autoUpgrade property: Update type of filtered resource.
     * 
     * @return the autoUpgrade value.
     */
    public AutoUpgrade autoUpgrade() {
        return this.autoUpgrade;
    }

    /**
     * Get the operatingSystem property: operatingSystem of filtered resource.
     * 
     * @return the operatingSystem value.
     */
    public String operatingSystem() {
        return this.operatingSystem;
    }

    /**
     * Get the machineType property: machineType of filtered resource.
     * 
     * @return the machineType value.
     */
    public MachineType machineType() {
        return this.machineType;
    }

    /**
     * Get the resourceAdditionalProperties property: The additional properties of filtered resource.
     * 
     * @return the resourceAdditionalProperties value.
     */
    public Map<String, String> resourceAdditionalProperties() {
        return this.resourceAdditionalProperties;
    }

    /**
     * Set the resourceAdditionalProperties property: The additional properties of filtered resource.
     * 
     * @param resourceAdditionalProperties the resourceAdditionalProperties value to set.
     * @return the FilteredResourcesResponseProperties object itself.
     */
    public FilteredResourcesResponseProperties
        withResourceAdditionalProperties(Map<String, String> resourceAdditionalProperties) {
        this.resourceAdditionalProperties = resourceAdditionalProperties;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (onboardingStatus() != null) {
            onboardingStatus().validate();
        }
    }
}

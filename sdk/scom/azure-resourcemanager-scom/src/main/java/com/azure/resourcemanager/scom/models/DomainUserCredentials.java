// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Domain user name and password.
 */
@Fluent
public final class DomainUserCredentials {
    /*
     * Key vault url to get the domain username and password (not used)
     */
    @JsonProperty(value = "keyVaultUrl")
    private String keyVaultUrl;

    /*
     * Domain user name
     */
    @JsonProperty(value = "userNameSecret")
    private String usernameSecret;

    /*
     * Domain password
     */
    @JsonProperty(value = "passwordSecret")
    private String passwordSecret;

    /**
     * Creates an instance of DomainUserCredentials class.
     */
    public DomainUserCredentials() {
    }

    /**
     * Get the keyVaultUrl property: Key vault url to get the domain username and password (not used).
     * 
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.keyVaultUrl;
    }

    /**
     * Set the keyVaultUrl property: Key vault url to get the domain username and password (not used).
     * 
     * @param keyVaultUrl the keyVaultUrl value to set.
     * @return the DomainUserCredentials object itself.
     */
    public DomainUserCredentials withKeyVaultUrl(String keyVaultUrl) {
        this.keyVaultUrl = keyVaultUrl;
        return this;
    }

    /**
     * Get the usernameSecret property: Domain user name.
     * 
     * @return the usernameSecret value.
     */
    public String usernameSecret() {
        return this.usernameSecret;
    }

    /**
     * Set the usernameSecret property: Domain user name.
     * 
     * @param usernameSecret the usernameSecret value to set.
     * @return the DomainUserCredentials object itself.
     */
    public DomainUserCredentials withUsernameSecret(String usernameSecret) {
        this.usernameSecret = usernameSecret;
        return this;
    }

    /**
     * Get the passwordSecret property: Domain password.
     * 
     * @return the passwordSecret value.
     */
    public String passwordSecret() {
        return this.passwordSecret;
    }

    /**
     * Set the passwordSecret property: Domain password.
     * 
     * @param passwordSecret the passwordSecret value to set.
     * @return the DomainUserCredentials object itself.
     */
    public DomainUserCredentials withPasswordSecret(String passwordSecret) {
        this.passwordSecret = passwordSecret;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of MonitoredResourcesOperations.
 */
public interface MonitoredResourcesOperations {
    /**
     * Retrieve the details of the monitored resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM managed instance.
     * @param monitoredResourceName The monitored resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a monitored resource along with {@link Response}.
     */
    Response<MonitoredResource> getWithResponse(String resourceGroupName, String instanceName,
        String monitoredResourceName, Context context);

    /**
     * Retrieve the details of the monitored resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM managed instance.
     * @param monitoredResourceName The monitored resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a monitored resource.
     */
    MonitoredResource get(String resourceGroupName, String instanceName, String monitoredResourceName);

    /**
     * Delete a monitored resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM managed instance.
     * @param monitoredResourceName The monitored resource name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String instanceName, String monitoredResourceName,
        Context context);

    /**
     * Delete a monitored resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM managed instance.
     * @param monitoredResourceName The monitored resource name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String instanceName, String monitoredResourceName);

    /**
     * A comprehensive list of all monitored resources within a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM managed instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of SCOM monitored resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MonitoredResource> listByManagedInstance(String resourceGroupName, String instanceName);

    /**
     * A comprehensive list of all monitored resources within a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM managed instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of SCOM monitored resources as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MonitoredResource> listByManagedInstance(String resourceGroupName, String instanceName,
        Context context);

    /**
     * Retrieve the details of the monitored resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a monitored resource along with {@link Response}.
     */
    MonitoredResource getById(String id);

    /**
     * Retrieve the details of the monitored resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a monitored resource along with {@link Response}.
     */
    Response<MonitoredResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a monitored resource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a monitored resource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MonitoredResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new MonitoredResource definition.
     */
    MonitoredResource.DefinitionStages.Blank define(String name);
}

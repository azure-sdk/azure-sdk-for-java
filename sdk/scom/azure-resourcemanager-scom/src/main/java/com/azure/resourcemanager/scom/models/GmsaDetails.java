// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Gmsa Details.
 */
@Fluent
public final class GmsaDetails {
    /*
     * Frontend IP configuration for Load Balancer, which should be an available IP in customer VNet
     */
    @JsonProperty(value = "loadBalancerIP")
    private String loadBalancerIp;

    /*
     * gMSA account under which context all Management Server services will run
     */
    @JsonProperty(value = "gmsaAccount")
    private String gmsaAccount;

    /*
     * OnPrem AD Computer Group where we will join VMs for ease of management
     */
    @JsonProperty(value = "managementServerGroupName")
    private String managementServerGroupName;

    /*
     * Frontend DNS name for Load Balancer which will be used by Agents to initiate communication
     */
    @JsonProperty(value = "dnsName")
    private String dnsName;

    /**
     * Creates an instance of GmsaDetails class.
     */
    public GmsaDetails() {
    }

    /**
     * Get the loadBalancerIp property: Frontend IP configuration for Load Balancer, which should be an available IP in
     * customer VNet.
     * 
     * @return the loadBalancerIp value.
     */
    public String loadBalancerIp() {
        return this.loadBalancerIp;
    }

    /**
     * Set the loadBalancerIp property: Frontend IP configuration for Load Balancer, which should be an available IP in
     * customer VNet.
     * 
     * @param loadBalancerIp the loadBalancerIp value to set.
     * @return the GmsaDetails object itself.
     */
    public GmsaDetails withLoadBalancerIp(String loadBalancerIp) {
        this.loadBalancerIp = loadBalancerIp;
        return this;
    }

    /**
     * Get the gmsaAccount property: gMSA account under which context all Management Server services will run.
     * 
     * @return the gmsaAccount value.
     */
    public String gmsaAccount() {
        return this.gmsaAccount;
    }

    /**
     * Set the gmsaAccount property: gMSA account under which context all Management Server services will run.
     * 
     * @param gmsaAccount the gmsaAccount value to set.
     * @return the GmsaDetails object itself.
     */
    public GmsaDetails withGmsaAccount(String gmsaAccount) {
        this.gmsaAccount = gmsaAccount;
        return this;
    }

    /**
     * Get the managementServerGroupName property: OnPrem AD Computer Group where we will join VMs for ease of
     * management.
     * 
     * @return the managementServerGroupName value.
     */
    public String managementServerGroupName() {
        return this.managementServerGroupName;
    }

    /**
     * Set the managementServerGroupName property: OnPrem AD Computer Group where we will join VMs for ease of
     * management.
     * 
     * @param managementServerGroupName the managementServerGroupName value to set.
     * @return the GmsaDetails object itself.
     */
    public GmsaDetails withManagementServerGroupName(String managementServerGroupName) {
        this.managementServerGroupName = managementServerGroupName;
        return this;
    }

    /**
     * Get the dnsName property: Frontend DNS name for Load Balancer which will be used by Agents to initiate
     * communication.
     * 
     * @return the dnsName value.
     */
    public String dnsName() {
        return this.dnsName;
    }

    /**
     * Set the dnsName property: Frontend DNS name for Load Balancer which will be used by Agents to initiate
     * communication.
     * 
     * @param dnsName the dnsName value to set.
     * @return the GmsaDetails object itself.
     */
    public GmsaDetails withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

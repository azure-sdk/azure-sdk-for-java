// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Instances. */
public interface Instances {
    /**
     * Lists all SCOM monitoring instances in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paged list of SCOM monitoring instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MonitoringInstance> listByResourceGroup(String resourceGroupName);

    /**
     * Lists all SCOM monitoring instances in a resource group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paged list of SCOM monitoring instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MonitoringInstance> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Lists all SCOM monitoring instances in a subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paged list of SCOM monitoring instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MonitoringInstance> list();

    /**
     * Lists all SCOM monitoring instances in a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paged list of SCOM monitoring instances as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MonitoringInstance> list(Context context);

    /**
     * Get SCOM monitoring instance details.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return sCOM monitoring instance details along with {@link Response}.
     */
    Response<MonitoringInstance> getByResourceGroupWithResponse(
        String resourceGroupName, String instanceName, Context context);

    /**
     * Get SCOM monitoring instance details.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return sCOM monitoring instance details.
     */
    MonitoringInstance getByResourceGroup(String resourceGroupName, String instanceName);

    /**
     * Delete a SCOM monitoring instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String instanceName);

    /**
     * Delete a SCOM monitoring instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String instanceName, Context context);

    /**
     * Scaling SCOM monitoring instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @param body Properties for Scaling.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void scale(String resourceGroupName, String instanceName, ScalingProperties body);

    /**
     * Scaling SCOM monitoring instance.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @param body Properties for Scaling.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void scale(String resourceGroupName, String instanceName, ScalingProperties body, Context context);

    /**
     * Update SCOM servers with latest scom software.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void patchServers(String resourceGroupName, String instanceName);

    /**
     * Update SCOM servers with latest scom software.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the SCOM monitoring instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void patchServers(String resourceGroupName, String instanceName, Context context);

    /**
     * Get SCOM monitoring instance details.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return sCOM monitoring instance details along with {@link Response}.
     */
    MonitoringInstance getById(String id);

    /**
     * Get SCOM monitoring instance details.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return sCOM monitoring instance details along with {@link Response}.
     */
    Response<MonitoringInstance> getByIdWithResponse(String id, Context context);

    /**
     * Delete a SCOM monitoring instance.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a SCOM monitoring instance.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MonitoringInstance resource.
     *
     * @param name resource name.
     * @return the first stage of the new MonitoringInstance definition.
     */
    MonitoringInstance.DefinitionStages.Blank define(String name);
}

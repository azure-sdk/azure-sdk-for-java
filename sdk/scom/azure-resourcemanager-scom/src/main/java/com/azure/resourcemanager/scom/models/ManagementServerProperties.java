// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of management server.
 */
@Immutable
public final class ManagementServerProperties {
    /*
     * Management server Name
     */
    @JsonProperty(value = "serverName", access = JsonProperty.Access.WRITE_ONLY)
    private String serverName;

    /*
     * Azure VM Resource Id of the Management server.
     */
    @JsonProperty(value = "vmResId", access = JsonProperty.Access.WRITE_ONLY)
    private String vmResId;

    /*
     * Management server Fully Qualified Domain Name.
     */
    @JsonProperty(value = "fqdn", access = JsonProperty.Access.WRITE_ONLY)
    private String fqdn;

    /*
     * Represent whether the Server is a Management Server and/or Web Console Server.
     */
    @JsonProperty(value = "serverRoles", access = JsonProperty.Access.WRITE_ONLY)
    private String serverRoles;

    /*
     * Management server health state.
     */
    @JsonProperty(value = "healthState", access = JsonProperty.Access.WRITE_ONLY)
    private String healthState;

    /**
     * Creates an instance of ManagementServerProperties class.
     */
    public ManagementServerProperties() {
    }

    /**
     * Get the serverName property: Management server Name.
     * 
     * @return the serverName value.
     */
    public String serverName() {
        return this.serverName;
    }

    /**
     * Get the vmResId property: Azure VM Resource Id of the Management server.
     * 
     * @return the vmResId value.
     */
    public String vmResId() {
        return this.vmResId;
    }

    /**
     * Get the fqdn property: Management server Fully Qualified Domain Name.
     * 
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * Get the serverRoles property: Represent whether the Server is a Management Server and/or Web Console Server.
     * 
     * @return the serverRoles value.
     */
    public String serverRoles() {
        return this.serverRoles;
    }

    /**
     * Get the healthState property: Management server health state.
     * 
     * @return the healthState value.
     */
    public String healthState() {
        return this.healthState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

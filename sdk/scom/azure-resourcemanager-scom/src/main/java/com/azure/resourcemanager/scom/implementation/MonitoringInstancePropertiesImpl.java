// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.implementation;

import com.azure.resourcemanager.scom.fluent.models.LogAnalyticsConfigurationInner;
import com.azure.resourcemanager.scom.fluent.models.MonitoringInstancePropertiesInner;
import com.azure.resourcemanager.scom.models.AzureHybridBenefitProperties;
import com.azure.resourcemanager.scom.models.DatabaseInstanceProperties;
import com.azure.resourcemanager.scom.models.DomainControllerProperties;
import com.azure.resourcemanager.scom.models.DomainUserCredentials;
import com.azure.resourcemanager.scom.models.GmsaDetails;
import com.azure.resourcemanager.scom.models.LogAnalyticsConfiguration;
import com.azure.resourcemanager.scom.models.ManagedInstanceOperationStatus;
import com.azure.resourcemanager.scom.models.ManagementServerProperties;
import com.azure.resourcemanager.scom.models.MonitoringInstanceProperties;
import java.util.Collections;
import java.util.List;

public final class MonitoringInstancePropertiesImpl implements MonitoringInstanceProperties {
    private MonitoringInstancePropertiesInner innerObject;

    private final com.azure.resourcemanager.scom.ScomManager serviceManager;

    MonitoringInstancePropertiesImpl(MonitoringInstancePropertiesInner innerObject,
        com.azure.resourcemanager.scom.ScomManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String productVersion() {
        return this.innerModel().productVersion();
    }

    public String vNetSubnetId() {
        return this.innerModel().vNetSubnetId();
    }

    public List<ManagementServerProperties> managementEndpoints() {
        List<ManagementServerProperties> inner = this.innerModel().managementEndpoints();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public DatabaseInstanceProperties databaseInstance() {
        return this.innerModel().databaseInstance();
    }

    public DomainControllerProperties domainController() {
        return this.innerModel().domainController();
    }

    public DomainUserCredentials domainUserCredentials() {
        return this.innerModel().domainUserCredentials();
    }

    public GmsaDetails gmsaDetails() {
        return this.innerModel().gmsaDetails();
    }

    public AzureHybridBenefitProperties azureHybridBenefit() {
        return this.innerModel().azureHybridBenefit();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public LogAnalyticsConfiguration logAnalyticsProperties() {
        LogAnalyticsConfigurationInner inner = this.innerModel().logAnalyticsProperties();
        if (inner != null) {
            return new LogAnalyticsConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public List<ManagedInstanceOperationStatus> operationsStatus() {
        List<ManagedInstanceOperationStatus> inner = this.innerModel().operationsStatus();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public MonitoringInstancePropertiesInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.scom.ScomManager manager() {
        return this.serviceManager;
    }
}

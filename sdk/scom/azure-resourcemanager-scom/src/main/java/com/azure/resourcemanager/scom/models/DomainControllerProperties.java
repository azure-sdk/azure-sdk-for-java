// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of domain controller to which SCOM and SQL servers join for AuthN/AuthZ.
 */
@Fluent
public final class DomainControllerProperties {
    /*
     * Fully qualified domain name
     */
    @JsonProperty(value = "domainName")
    private String domainName;

    /*
     * IP address of DNS server
     */
    @JsonProperty(value = "dnsServer")
    private String dnsServer;

    /*
     * Organizational Unit path in which the SCOM servers will be present
     */
    @JsonProperty(value = "ouPath")
    private String ouPath;

    /**
     * Creates an instance of DomainControllerProperties class.
     */
    public DomainControllerProperties() {
    }

    /**
     * Get the domainName property: Fully qualified domain name.
     * 
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: Fully qualified domain name.
     * 
     * @param domainName the domainName value to set.
     * @return the DomainControllerProperties object itself.
     */
    public DomainControllerProperties withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Get the dnsServer property: IP address of DNS server.
     * 
     * @return the dnsServer value.
     */
    public String dnsServer() {
        return this.dnsServer;
    }

    /**
     * Set the dnsServer property: IP address of DNS server.
     * 
     * @param dnsServer the dnsServer value to set.
     * @return the DomainControllerProperties object itself.
     */
    public DomainControllerProperties withDnsServer(String dnsServer) {
        this.dnsServer = dnsServer;
        return this;
    }

    /**
     * Get the ouPath property: Organizational Unit path in which the SCOM servers will be present.
     * 
     * @return the ouPath value.
     */
    public String ouPath() {
        return this.ouPath;
    }

    /**
     * Set the ouPath property: Organizational Unit path in which the SCOM servers will be present.
     * 
     * @param ouPath the ouPath value to set.
     * @return the DomainControllerProperties object itself.
     */
    public DomainControllerProperties withOuPath(String ouPath) {
        this.ouPath = ouPath;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

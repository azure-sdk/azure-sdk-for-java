// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of database instance.
 */
@Fluent
public final class DatabaseInstanceProperties {
    /*
     * Resource Id of existing database instance
     */
    @JsonProperty(value = "databaseInstanceId")
    private String databaseInstanceId;

    /*
     * Fully qualified domain name of public endpoint of existing database instance.
     */
    @JsonProperty(value = "databaseFqdn")
    private String databaseFqdn;

    /*
     * Name of warehouse database on database instance
     */
    @JsonProperty(value = "dwDatabaseName", access = JsonProperty.Access.WRITE_ONLY)
    private String dwDatabaseName;

    /*
     * Resource Id of operational database on database instance
     */
    @JsonProperty(value = "operationalDatabaseId", access = JsonProperty.Access.WRITE_ONLY)
    private String operationalDatabaseId;

    /*
     * Resource Id of warehouse database on database instance
     */
    @JsonProperty(value = "dwDatabaseId", access = JsonProperty.Access.WRITE_ONLY)
    private String dwDatabaseId;

    /**
     * Creates an instance of DatabaseInstanceProperties class.
     */
    public DatabaseInstanceProperties() {
    }

    /**
     * Get the databaseInstanceId property: Resource Id of existing database instance.
     * 
     * @return the databaseInstanceId value.
     */
    public String databaseInstanceId() {
        return this.databaseInstanceId;
    }

    /**
     * Set the databaseInstanceId property: Resource Id of existing database instance.
     * 
     * @param databaseInstanceId the databaseInstanceId value to set.
     * @return the DatabaseInstanceProperties object itself.
     */
    public DatabaseInstanceProperties withDatabaseInstanceId(String databaseInstanceId) {
        this.databaseInstanceId = databaseInstanceId;
        return this;
    }

    /**
     * Get the databaseFqdn property: Fully qualified domain name of public endpoint of existing database instance.
     * 
     * @return the databaseFqdn value.
     */
    public String databaseFqdn() {
        return this.databaseFqdn;
    }

    /**
     * Set the databaseFqdn property: Fully qualified domain name of public endpoint of existing database instance.
     * 
     * @param databaseFqdn the databaseFqdn value to set.
     * @return the DatabaseInstanceProperties object itself.
     */
    public DatabaseInstanceProperties withDatabaseFqdn(String databaseFqdn) {
        this.databaseFqdn = databaseFqdn;
        return this;
    }

    /**
     * Get the dwDatabaseName property: Name of warehouse database on database instance.
     * 
     * @return the dwDatabaseName value.
     */
    public String dwDatabaseName() {
        return this.dwDatabaseName;
    }

    /**
     * Get the operationalDatabaseId property: Resource Id of operational database on database instance.
     * 
     * @return the operationalDatabaseId value.
     */
    public String operationalDatabaseId() {
        return this.operationalDatabaseId;
    }

    /**
     * Get the dwDatabaseId property: Resource Id of warehouse database on database instance.
     * 
     * @return the dwDatabaseId value.
     */
    public String dwDatabaseId() {
        return this.dwDatabaseId;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

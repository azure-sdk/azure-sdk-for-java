// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.scom.fluent.models.ManagedGatewayInner;
import com.azure.resourcemanager.scom.models.ManagedGateway;

public final class ManagedGatewayImpl implements ManagedGateway, ManagedGateway.Definition, ManagedGateway.Update {
    private ManagedGatewayInner innerObject;

    private final com.azure.resourcemanager.scom.ScomManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceId() {
        return this.innerModel().resourceId();
    }

    public String resourceLocation() {
        return this.innerModel().resourceLocation();
    }

    public String computerName() {
        return this.innerModel().computerName();
    }

    public String domainName() {
        return this.innerModel().domainName();
    }

    public String managementServerEndpoint() {
        return this.innerModel().managementServerEndpoint();
    }

    public String healthStatus() {
        return this.innerModel().healthStatus();
    }

    public String connectionStatus() {
        return this.innerModel().connectionStatus();
    }

    public String version() {
        return this.innerModel().version();
    }

    public String installType() {
        return this.innerModel().installType();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ManagedGatewayInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.scom.ScomManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String instanceName;

    private String managedGatewayName;

    public ManagedGatewayImpl withExistingManagedInstance(String resourceGroupName, String instanceName) {
        this.resourceGroupName = resourceGroupName;
        this.instanceName = instanceName;
        return this;
    }

    public ManagedGateway create() {
        this.innerObject
            = serviceManager.serviceClient().getManagedGateways().createOrUpdateWithResponse(resourceGroupName,
                instanceName, managedGatewayName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public ManagedGateway create(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedGateways()
            .createOrUpdateWithResponse(resourceGroupName, instanceName, managedGatewayName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ManagedGatewayImpl(String name, com.azure.resourcemanager.scom.ScomManager serviceManager) {
        this.innerObject = new ManagedGatewayInner();
        this.serviceManager = serviceManager;
        this.managedGatewayName = name;
    }

    public ManagedGatewayImpl update() {
        return this;
    }

    public ManagedGateway apply() {
        this.innerObject
            = serviceManager.serviceClient().getManagedGateways().createOrUpdateWithResponse(resourceGroupName,
                instanceName, managedGatewayName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public ManagedGateway apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedGateways()
            .createOrUpdateWithResponse(resourceGroupName, instanceName, managedGatewayName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ManagedGatewayImpl(ManagedGatewayInner innerObject, com.azure.resourcemanager.scom.ScomManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.instanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.managedGatewayName = Utils.getValueFromIdByName(innerObject.id(), "managedGateways");
    }

    public ManagedGateway refresh() {
        this.innerObject = serviceManager.serviceClient().getManagedGateways()
            .getWithResponse(resourceGroupName, instanceName, managedGatewayName, Context.NONE).getValue();
        return this;
    }

    public ManagedGateway refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedGateways()
            .getWithResponse(resourceGroupName, instanceName, managedGatewayName, context).getValue();
        return this;
    }

    public ManagedGatewayImpl withResourceId(String resourceId) {
        this.innerModel().withResourceId(resourceId);
        return this;
    }

    public ManagedGatewayImpl withResourceLocation(String resourceLocation) {
        this.innerModel().withResourceLocation(resourceLocation);
        return this;
    }

    public ManagedGatewayImpl withComputerName(String computerName) {
        this.innerModel().withComputerName(computerName);
        return this;
    }

    public ManagedGatewayImpl withDomainName(String domainName) {
        this.innerModel().withDomainName(domainName);
        return this;
    }
}

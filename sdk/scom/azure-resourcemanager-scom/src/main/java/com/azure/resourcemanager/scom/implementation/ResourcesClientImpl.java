// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.scom.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Headers;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.management.exception.ManagementException;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.resourcemanager.scom.fluent.ResourcesClient;
import com.azure.resourcemanager.scom.fluent.models.GetResourcesListResponsePropertiesInner;
import com.azure.resourcemanager.scom.fluent.models.GetResourceSummaryResponsePropertiesInner;
import com.azure.resourcemanager.scom.models.GetResourceListProperties;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in ResourcesClient.
 */
public final class ResourcesClientImpl implements ResourcesClient {
    /**
     * The proxy service used to perform REST calls.
     */
    private final ResourcesService service;

    /**
     * The service client containing this operation class.
     */
    private final AzureApiForManagingScomManagedInstancesAndMonitoredResourcesImpl client;

    /**
     * Initializes an instance of ResourcesClientImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    ResourcesClientImpl(AzureApiForManagingScomManagedInstancesAndMonitoredResourcesImpl client) {
        this.service
            = RestProxy.create(ResourcesService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for AzureApiForManagingScomManagedInstancesAndMonitoredResourcesResources
     * to be used by the proxy service to perform REST calls.
     */
    @Host("{$host}")
    @ServiceInterface(name = "AzureApiForManagingS")
    public interface ResourcesService {
        @Headers({ "Content-Type: application/json" })
        @Post("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/getResourceSummary")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(ManagementException.class)
        Mono<Response<GetResourceSummaryResponsePropertiesInner>> summary(@HostParam("$host") String endpoint,
            @PathParam("subscriptionId") String subscriptionId,
            @PathParam("resourceGroupName") String resourceGroupName, @PathParam("instanceName") String instanceName,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Accept") String accept, Context context);

        @Headers({ "Content-Type: application/json" })
        @Post("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/getResourcesList")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(ManagementException.class)
        Mono<Response<GetResourcesListResponsePropertiesInner>> list(@HostParam("$host") String endpoint,
            @PathParam("subscriptionId") String subscriptionId,
            @PathParam("resourceGroupName") String resourceGroupName, @PathParam("instanceName") String instanceName,
            @QueryParam("api-version") String apiVersion, @BodyParam("application/json") GetResourceListProperties body,
            @HeaderParam("Accept") String accept, Context context);
    }

    /**
     * Getting the summary of monitored resources and manage gateway attached to a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties for get resources summary operation along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<Response<GetResourceSummaryResponsePropertiesInner>> summaryWithResponseAsync(String resourceGroupName,
        String instanceName) {
        if (this.client.getEndpoint() == null) {
            return Mono.error(
                new IllegalArgumentException("Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            return Mono.error(new IllegalArgumentException(
                "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            return Mono
                .error(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (instanceName == null) {
            return Mono.error(new IllegalArgumentException("Parameter instanceName is required and cannot be null."));
        }
        final String accept = "application/json";
        return FluxUtil
            .withContext(context -> service.summary(this.client.getEndpoint(), this.client.getSubscriptionId(),
                resourceGroupName, instanceName, this.client.getApiVersion(), accept, context))
            .contextWrite(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext()).readOnly()));
    }

    /**
     * Getting the summary of monitored resources and manage gateway attached to a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties for get resources summary operation along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<Response<GetResourceSummaryResponsePropertiesInner>> summaryWithResponseAsync(String resourceGroupName,
        String instanceName, Context context) {
        if (this.client.getEndpoint() == null) {
            return Mono.error(
                new IllegalArgumentException("Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            return Mono.error(new IllegalArgumentException(
                "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            return Mono
                .error(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (instanceName == null) {
            return Mono.error(new IllegalArgumentException("Parameter instanceName is required and cannot be null."));
        }
        final String accept = "application/json";
        context = this.client.mergeContext(context);
        return service.summary(this.client.getEndpoint(), this.client.getSubscriptionId(), resourceGroupName,
            instanceName, this.client.getApiVersion(), accept, context);
    }

    /**
     * Getting the summary of monitored resources and manage gateway attached to a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties for get resources summary operation on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<GetResourceSummaryResponsePropertiesInner> summaryAsync(String resourceGroupName,
        String instanceName) {
        return summaryWithResponseAsync(resourceGroupName, instanceName)
            .flatMap(res -> Mono.justOrEmpty(res.getValue()));
    }

    /**
     * Getting the summary of monitored resources and manage gateway attached to a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties for get resources summary operation along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<GetResourceSummaryResponsePropertiesInner> summaryWithResponse(String resourceGroupName,
        String instanceName, Context context) {
        return summaryWithResponseAsync(resourceGroupName, instanceName, context).block();
    }

    /**
     * Getting the summary of monitored resources and manage gateway attached to a SCOM managed instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return properties for get resources summary operation.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GetResourceSummaryResponsePropertiesInner summary(String resourceGroupName, String instanceName) {
        return summaryWithResponse(resourceGroupName, instanceName, Context.NONE).getValue();
    }

    /**
     * Getting the List of specified type of resource attached to a SCOM managed instance based on filter and sorting
     * conditions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param body Properties for filtering resource list.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resourceList based on filters along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<Response<GetResourcesListResponsePropertiesInner>> listWithResponseAsync(String resourceGroupName,
        String instanceName, GetResourceListProperties body) {
        if (this.client.getEndpoint() == null) {
            return Mono.error(
                new IllegalArgumentException("Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            return Mono.error(new IllegalArgumentException(
                "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            return Mono
                .error(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (instanceName == null) {
            return Mono.error(new IllegalArgumentException("Parameter instanceName is required and cannot be null."));
        }
        if (body == null) {
            return Mono.error(new IllegalArgumentException("Parameter body is required and cannot be null."));
        } else {
            body.validate();
        }
        final String accept = "application/json";
        return FluxUtil
            .withContext(context -> service.list(this.client.getEndpoint(), this.client.getSubscriptionId(),
                resourceGroupName, instanceName, this.client.getApiVersion(), body, accept, context))
            .contextWrite(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext()).readOnly()));
    }

    /**
     * Getting the List of specified type of resource attached to a SCOM managed instance based on filter and sorting
     * conditions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param body Properties for filtering resource list.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resourceList based on filters along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<Response<GetResourcesListResponsePropertiesInner>> listWithResponseAsync(String resourceGroupName,
        String instanceName, GetResourceListProperties body, Context context) {
        if (this.client.getEndpoint() == null) {
            return Mono.error(
                new IllegalArgumentException("Parameter this.client.getEndpoint() is required and cannot be null."));
        }
        if (this.client.getSubscriptionId() == null) {
            return Mono.error(new IllegalArgumentException(
                "Parameter this.client.getSubscriptionId() is required and cannot be null."));
        }
        if (resourceGroupName == null) {
            return Mono
                .error(new IllegalArgumentException("Parameter resourceGroupName is required and cannot be null."));
        }
        if (instanceName == null) {
            return Mono.error(new IllegalArgumentException("Parameter instanceName is required and cannot be null."));
        }
        if (body == null) {
            return Mono.error(new IllegalArgumentException("Parameter body is required and cannot be null."));
        } else {
            body.validate();
        }
        final String accept = "application/json";
        context = this.client.mergeContext(context);
        return service.list(this.client.getEndpoint(), this.client.getSubscriptionId(), resourceGroupName, instanceName,
            this.client.getApiVersion(), body, accept, context);
    }

    /**
     * Getting the List of specified type of resource attached to a SCOM managed instance based on filter and sorting
     * conditions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param body Properties for filtering resource list.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resourceList based on filters on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<GetResourcesListResponsePropertiesInner> listAsync(String resourceGroupName, String instanceName,
        GetResourceListProperties body) {
        return listWithResponseAsync(resourceGroupName, instanceName, body)
            .flatMap(res -> Mono.justOrEmpty(res.getValue()));
    }

    /**
     * Getting the List of specified type of resource attached to a SCOM managed instance based on filter and sorting
     * conditions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param body Properties for filtering resource list.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resourceList based on filters along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<GetResourcesListResponsePropertiesInner> listWithResponse(String resourceGroupName,
        String instanceName, GetResourceListProperties body, Context context) {
        return listWithResponseAsync(resourceGroupName, instanceName, body, context).block();
    }

    /**
     * Getting the List of specified type of resource attached to a SCOM managed instance based on filter and sorting
     * conditions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI).
     * @param body Properties for filtering resource list.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return resourceList based on filters.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GetResourcesListResponsePropertiesInner list(String resourceGroupName, String instanceName,
        GetResourceListProperties body) {
        return listWithResponse(resourceGroupName, instanceName, body, Context.NONE).getValue();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The language to use for a Snowball token filter.
 */
public final class SnowballTokenFilterLanguage extends ExpandableStringEnum<SnowballTokenFilterLanguage> {
    /**
     * Selects the Lucene Snowball stemming tokenizer for Armenian.
     */
    @Generated
    public static final SnowballTokenFilterLanguage ARMENIAN = fromString("armenian");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Basque.
     */
    @Generated
    public static final SnowballTokenFilterLanguage BASQUE = fromString("basque");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Catalan.
     */
    @Generated
    public static final SnowballTokenFilterLanguage CATALAN = fromString("catalan");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Danish.
     */
    @Generated
    public static final SnowballTokenFilterLanguage DANISH = fromString("danish");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Dutch.
     */
    @Generated
    public static final SnowballTokenFilterLanguage DUTCH = fromString("dutch");

    /**
     * Selects the Lucene Snowball stemming tokenizer for English.
     */
    @Generated
    public static final SnowballTokenFilterLanguage ENGLISH = fromString("english");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Finnish.
     */
    @Generated
    public static final SnowballTokenFilterLanguage FINNISH = fromString("finnish");

    /**
     * Selects the Lucene Snowball stemming tokenizer for French.
     */
    @Generated
    public static final SnowballTokenFilterLanguage FRENCH = fromString("french");

    /**
     * Selects the Lucene Snowball stemming tokenizer for German.
     */
    @Generated
    public static final SnowballTokenFilterLanguage GERMAN = fromString("german");

    /**
     * Selects the Lucene Snowball stemming tokenizer that uses the German variant
     * algorithm.
     */
    @Generated
    public static final SnowballTokenFilterLanguage GERMAN2 = fromString("german2");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Hungarian.
     */
    @Generated
    public static final SnowballTokenFilterLanguage HUNGARIAN = fromString("hungarian");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Italian.
     */
    @Generated
    public static final SnowballTokenFilterLanguage ITALIAN = fromString("italian");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Dutch that uses the
     * Kraaij-Pohlmann stemming algorithm.
     */
    @Generated
    public static final SnowballTokenFilterLanguage KP = fromString("kp");

    /**
     * Selects the Lucene Snowball stemming tokenizer for English that uses the Lovins
     * stemming algorithm.
     */
    @Generated
    public static final SnowballTokenFilterLanguage LOVINS = fromString("lovins");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Norwegian.
     */
    @Generated
    public static final SnowballTokenFilterLanguage NORWEGIAN = fromString("norwegian");

    /**
     * Selects the Lucene Snowball stemming tokenizer for English that uses the Porter
     * stemming algorithm.
     */
    @Generated
    public static final SnowballTokenFilterLanguage PORTER = fromString("porter");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Portuguese.
     */
    @Generated
    public static final SnowballTokenFilterLanguage PORTUGUESE = fromString("portuguese");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Romanian.
     */
    @Generated
    public static final SnowballTokenFilterLanguage ROMANIAN = fromString("romanian");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Russian.
     */
    @Generated
    public static final SnowballTokenFilterLanguage RUSSIAN = fromString("russian");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Spanish.
     */
    @Generated
    public static final SnowballTokenFilterLanguage SPANISH = fromString("spanish");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Swedish.
     */
    @Generated
    public static final SnowballTokenFilterLanguage SWEDISH = fromString("swedish");

    /**
     * Selects the Lucene Snowball stemming tokenizer for Turkish.
     */
    @Generated
    public static final SnowballTokenFilterLanguage TURKISH = fromString("turkish");

    /**
     * Creates a new instance of SnowballTokenFilterLanguage value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public SnowballTokenFilterLanguage() {
    }

    /**
     * Creates or finds a SnowballTokenFilterLanguage from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding SnowballTokenFilterLanguage.
     */
    @Generated
    public static SnowballTokenFilterLanguage fromString(String name) {
        return fromString(name, SnowballTokenFilterLanguage.class);
    }

    /**
     * Gets known SnowballTokenFilterLanguage values.
     * 
     * @return known SnowballTokenFilterLanguage values.
     */
    @Generated
    public static Collection<SnowballTokenFilterLanguage> values() {
        return values(SnowballTokenFilterLanguage.class);
    }
}

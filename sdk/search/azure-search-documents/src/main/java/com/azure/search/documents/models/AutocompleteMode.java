// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms'
 * to get shingles and 'oneTermWithContext' to use the current context in
 * producing autocomplete terms.
 */
public final class AutocompleteMode extends ExpandableStringEnum<AutocompleteMode> {
    /**
     * Only one term is suggested. If the query has two terms, only the last term is
     * completed. For example, if the input is 'washington medic', the suggested terms
     * could include 'medicaid', 'medicare', and 'medicine'.
     */
    @Generated
    public static final AutocompleteMode ONE_TERM = fromString("oneTerm");

    /**
     * Matching two-term phrases in the index will be suggested. For example, if the
     * input is 'medic', the suggested terms could include 'medicare coverage' and 'medical assistant'.
     */
    @Generated
    public static final AutocompleteMode TWO_TERMS = fromString("twoTerms");

    /**
     * Completes the last term in a query with two or more terms, where the last two
     * terms are a phrase that exists in the index. For example, if the input is 'washington medic', the suggested terms
     * could include 'washington medicaid' and 'washington medical'.
     */
    @Generated
    public static final AutocompleteMode ONE_TERM_WITH_CONTEXT = fromString("oneTermWithContext");

    /**
     * Creates a new instance of AutocompleteMode value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public AutocompleteMode() {
    }

    /**
     * Creates or finds a AutocompleteMode from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding AutocompleteMode.
     */
    @Generated
    public static AutocompleteMode fromString(String name) {
        return fromString(name, AutocompleteMode.class);
    }

    /**
     * Gets known AutocompleteMode values.
     * 
     * @return known AutocompleteMode values.
     */
    @Generated
    public static Collection<AutocompleteMode> values() {
        return values(AutocompleteMode.class);
    }
}

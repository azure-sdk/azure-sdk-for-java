// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.implementation;

import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.search.documents.SearchServiceVersion;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the SearchClient type.
 */
public final class SearchClientImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final SearchClientService service;

    /**
     * Service host.
     */
    private final String endpoint;

    /**
     * Gets Service host.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final SearchServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public SearchServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The DataSourcesImpl object to access its operations.
     */
    private final DataSourcesImpl dataSources;

    /**
     * Gets the DataSourcesImpl object to access its operations.
     * 
     * @return the DataSourcesImpl object.
     */
    public DataSourcesImpl getDataSources() {
        return this.dataSources;
    }

    /**
     * The IndexersImpl object to access its operations.
     */
    private final IndexersImpl indexers;

    /**
     * Gets the IndexersImpl object to access its operations.
     * 
     * @return the IndexersImpl object.
     */
    public IndexersImpl getIndexers() {
        return this.indexers;
    }

    /**
     * The SkillsetsImpl object to access its operations.
     */
    private final SkillsetsImpl skillsets;

    /**
     * Gets the SkillsetsImpl object to access its operations.
     * 
     * @return the SkillsetsImpl object.
     */
    public SkillsetsImpl getSkillsets() {
        return this.skillsets;
    }

    /**
     * The SynonymMapsImpl object to access its operations.
     */
    private final SynonymMapsImpl synonymMaps;

    /**
     * Gets the SynonymMapsImpl object to access its operations.
     * 
     * @return the SynonymMapsImpl object.
     */
    public SynonymMapsImpl getSynonymMaps() {
        return this.synonymMaps;
    }

    /**
     * The IndexesImpl object to access its operations.
     */
    private final IndexesImpl indexes;

    /**
     * Gets the IndexesImpl object to access its operations.
     * 
     * @return the IndexesImpl object.
     */
    public IndexesImpl getIndexes() {
        return this.indexes;
    }

    /**
     * The AliasesOperationsImpl object to access its operations.
     */
    private final AliasesOperationsImpl aliasesOperations;

    /**
     * Gets the AliasesOperationsImpl object to access its operations.
     * 
     * @return the AliasesOperationsImpl object.
     */
    public AliasesOperationsImpl getAliasesOperations() {
        return this.aliasesOperations;
    }

    /**
     * The DocumentsImpl object to access its operations.
     */
    private final DocumentsImpl documents;

    /**
     * Gets the DocumentsImpl object to access its operations.
     * 
     * @return the DocumentsImpl object.
     */
    public DocumentsImpl getDocuments() {
        return this.documents;
    }

    /**
     * Initializes an instance of SearchClient client.
     * 
     * @param endpoint Service host.
     * @param serviceVersion Service version.
     */
    public SearchClientImpl(String endpoint, SearchServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of SearchClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Service host.
     * @param serviceVersion Service version.
     */
    public SearchClientImpl(HttpPipeline httpPipeline, String endpoint, SearchServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of SearchClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Service host.
     * @param serviceVersion Service version.
     */
    public SearchClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        SearchServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.dataSources = new DataSourcesImpl(this);
        this.indexers = new IndexersImpl(this);
        this.skillsets = new SkillsetsImpl(this);
        this.synonymMaps = new SynonymMapsImpl(this);
        this.indexes = new IndexesImpl(this);
        this.aliasesOperations = new AliasesOperationsImpl(this);
        this.documents = new DocumentsImpl(this);
        this.service = RestProxy.create(SearchClientService.class, this.httpPipeline, this.getSerializerAdapter());
    }

    /**
     * The interface defining all the services for SearchClient to be used by the proxy service to perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "SearchClient")
    public interface SearchClientService {
        @Get("/servicestats")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getServiceStatistics(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Accept") String accept,
            RequestOptions requestOptions, Context context);

        @Get("/servicestats")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getServiceStatisticsSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Accept") String accept,
            RequestOptions requestOptions, Context context);
    }

    /**
     * Gets service level statistics for a search service.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     counters (Required): {
     *         aliasesCount (Required): {
     *             usage: long (Required)
     *             quota: Long (Optional)
     *         }
     *         documentCount (Required): (recursive schema, see documentCount above)
     *         indexesCount (Required): (recursive schema, see indexesCount above)
     *         indexersCount (Required): (recursive schema, see indexersCount above)
     *         dataSourcesCount (Required): (recursive schema, see dataSourcesCount above)
     *         storageSize (Required): (recursive schema, see storageSize above)
     *         synonymMaps (Required): (recursive schema, see synonymMaps above)
     *         skillsetCount (Required): (recursive schema, see skillsetCount above)
     *         vectorIndexSize (Required): (recursive schema, see vectorIndexSize above)
     *     }
     *     limits (Required): {
     *         maxFieldsPerIndex: Integer (Optional)
     *         maxFieldNestingDepthPerIndex: Integer (Optional)
     *         maxComplexCollectionFieldsPerIndex: Integer (Optional)
     *         maxComplexObjectsInCollectionsPerDocument: Integer (Optional)
     *         maxStoragePerIndex: Long (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return service level statistics for a search service along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getServiceStatisticsWithResponseAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.getServiceStatistics(this.getEndpoint(),
            this.getServiceVersion().getVersion(), accept, requestOptions, context));
    }

    /**
     * Gets service level statistics for a search service.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     counters (Required): {
     *         aliasesCount (Required): {
     *             usage: long (Required)
     *             quota: Long (Optional)
     *         }
     *         documentCount (Required): (recursive schema, see documentCount above)
     *         indexesCount (Required): (recursive schema, see indexesCount above)
     *         indexersCount (Required): (recursive schema, see indexersCount above)
     *         dataSourcesCount (Required): (recursive schema, see dataSourcesCount above)
     *         storageSize (Required): (recursive schema, see storageSize above)
     *         synonymMaps (Required): (recursive schema, see synonymMaps above)
     *         skillsetCount (Required): (recursive schema, see skillsetCount above)
     *         vectorIndexSize (Required): (recursive schema, see vectorIndexSize above)
     *     }
     *     limits (Required): {
     *         maxFieldsPerIndex: Integer (Optional)
     *         maxFieldNestingDepthPerIndex: Integer (Optional)
     *         maxComplexCollectionFieldsPerIndex: Integer (Optional)
     *         maxComplexObjectsInCollectionsPerDocument: Integer (Optional)
     *         maxStoragePerIndex: Long (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return service level statistics for a search service along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getServiceStatisticsWithResponse(RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.getServiceStatisticsSync(this.getEndpoint(), this.getServiceVersion().getVersion(), accept,
            requestOptions, Context.NONE);
    }
}

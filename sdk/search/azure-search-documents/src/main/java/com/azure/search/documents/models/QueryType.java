// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Specifies the syntax of the search query. The default is 'simple'. Use 'full'
 * if your query uses the Lucene query syntax and 'semantic' if query syntax is
 * not needed.
 */
public final class QueryType extends ExpandableStringEnum<QueryType> {
    /**
     * Uses the simple query syntax for searches. Search text is interpreted using a
     * simple query language that allows for symbols such as +, * and "". Queries are
     * evaluated across all searchable fields by default, unless the searchFields
     * parameter is specified.
     */
    @Generated
    public static final QueryType SIMPLE = fromString("simple");

    /**
     * Uses the full Lucene query syntax for searches. Search text is interpreted
     * using the Lucene query language which allows field-specific and weighted
     * searches, as well as other advanced features.
     */
    @Generated
    public static final QueryType FULL = fromString("full");

    /**
     * Best suited for queries expressed in natural language as opposed to keywords.
     * Improves precision of search results by re-ranking the top search results using
     * a ranking model trained on the Web corpus.
     */
    @Generated
    public static final QueryType SEMANTIC = fromString("semantic");

    /**
     * Creates a new instance of QueryType value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public QueryType() {
    }

    /**
     * Creates or finds a QueryType from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding QueryType.
     */
    @Generated
    public static QueryType fromString(String name) {
        return fromString(name, QueryType.class);
    }

    /**
     * Gets known QueryType values.
     * 
     * @return known QueryType values.
     */
    @Generated
    public static Collection<QueryType> values() {
        return values(QueryType.class);
    }
}

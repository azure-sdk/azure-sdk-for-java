// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Identifies the type of phonetic encoder to use with a PhoneticTokenFilter.
 */
public final class PhoneticEncoder extends ExpandableStringEnum<PhoneticEncoder> {
    /**
     * Encodes a token into a Metaphone value.
     */
    @Generated
    public static final PhoneticEncoder METAPHONE = fromString("metaphone");

    /**
     * Encodes a token into a double metaphone value.
     */
    @Generated
    public static final PhoneticEncoder DOUBLE_METAPHONE = fromString("doubleMetaphone");

    /**
     * Encodes a token into a Soundex value.
     */
    @Generated
    public static final PhoneticEncoder SOUNDEX = fromString("soundex");

    /**
     * Encodes a token into a Refined Soundex value.
     */
    @Generated
    public static final PhoneticEncoder REFINED_SOUNDEX = fromString("refinedSoundex");

    /**
     * Encodes a token into a Caverphone 1.0 value.
     */
    @Generated
    public static final PhoneticEncoder CAVERPHONE1 = fromString("caverphone1");

    /**
     * Encodes a token into a Caverphone 2.0 value.
     */
    @Generated
    public static final PhoneticEncoder CAVERPHONE2 = fromString("caverphone2");

    /**
     * Encodes a token into a Cologne Phonetic value.
     */
    @Generated
    public static final PhoneticEncoder COLOGNE = fromString("cologne");

    /**
     * Encodes a token into a NYSIIS value.
     */
    @Generated
    public static final PhoneticEncoder NYSIIS = fromString("nysiis");

    /**
     * Encodes a token using the Kölner Phonetik algorithm.
     */
    @Generated
    public static final PhoneticEncoder KOELNER_PHONETIK = fromString("koelnerPhonetik");

    /**
     * Encodes a token using the Haase refinement of the Kölner Phonetik algorithm.
     */
    @Generated
    public static final PhoneticEncoder HAASE_PHONETIK = fromString("haasePhonetik");

    /**
     * Encodes a token into a Beider-Morse value.
     */
    @Generated
    public static final PhoneticEncoder BEIDER_MORSE = fromString("beiderMorse");

    /**
     * Creates a new instance of PhoneticEncoder value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public PhoneticEncoder() {
    }

    /**
     * Creates or finds a PhoneticEncoder from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding PhoneticEncoder.
     */
    @Generated
    public static PhoneticEncoder fromString(String name) {
        return fromString(name, PhoneticEncoder.class);
    }

    /**
     * Gets known PhoneticEncoder values.
     * 
     * @return known PhoneticEncoder values.
     */
    @Generated
    public static Collection<PhoneticEncoder> values() {
        return values(PhoneticEncoder.class);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.Delete;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.Put;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.PagedResponse;
import com.azure.core.http.rest.PagedResponseBase;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.search.documents.SearchServiceVersion;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in Indexes.
 */
public final class IndexesImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final IndexesService service;

    /**
     * The service client containing this operation class.
     */
    private final SearchClientImpl client;

    /**
     * Initializes an instance of IndexesImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    IndexesImpl(SearchClientImpl client) {
        this.service = RestProxy.create(IndexesService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public SearchServiceVersion getServiceVersion() {
        return client.getServiceVersion();
    }

    /**
     * The interface defining all the services for SearchClientIndexes to be used by the proxy service to perform REST
     * calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "SearchClientIndexes")
    public interface IndexesService {
        @Post("/indexes")
        @ExpectedResponses({ 201 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> create(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Content-Type") String contentType,
            @HeaderParam("Accept") String accept, @BodyParam("application/json") BinaryData index,
            RequestOptions requestOptions, Context context);

        @Post("/indexes")
        @ExpectedResponses({ 201 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> createSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Content-Type") String contentType,
            @HeaderParam("Accept") String accept, @BodyParam("application/json") BinaryData index,
            RequestOptions requestOptions, Context context);

        @Get("/indexes")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> list(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Accept") String accept,
            RequestOptions requestOptions, Context context);

        @Get("/indexes")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> listSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Accept") String accept,
            RequestOptions requestOptions, Context context);

        @Put("/indexes('{indexName}')")
        @ExpectedResponses({ 200, 201 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> createOrUpdate(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Prefer") String prefer,
            @PathParam("indexName") String indexName, @HeaderParam("Content-Type") String contentType,
            @HeaderParam("Accept") String accept, @BodyParam("application/json") BinaryData index,
            RequestOptions requestOptions, Context context);

        @Put("/indexes('{indexName}')")
        @ExpectedResponses({ 200, 201 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> createOrUpdateSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("Prefer") String prefer,
            @PathParam("indexName") String indexName, @HeaderParam("Content-Type") String contentType,
            @HeaderParam("Accept") String accept, @BodyParam("application/json") BinaryData index,
            RequestOptions requestOptions, Context context);

        @Delete("/indexes('{indexName}')")
        @ExpectedResponses({ 204, 404 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> delete(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Delete("/indexes('{indexName}')")
        @ExpectedResponses({ 204, 404 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<Void> deleteSync(@HostParam("endpoint") String endpoint, @QueryParam("api-version") String apiVersion,
            @PathParam("indexName") String indexName, @HeaderParam("Accept") String accept,
            RequestOptions requestOptions, Context context);

        @Get("/indexes('{indexName}')")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> get(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/indexes('{indexName}')")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/indexes('{indexName}')/search.stats")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> getStatistics(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/indexes('{indexName}')/search.stats")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> getStatisticsSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Accept") String accept, RequestOptions requestOptions, Context context);

        @Post("/indexes('{indexName}')/search.analyze")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> analyze(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData request, RequestOptions requestOptions, Context context);

        @Post("/indexes('{indexName}')/search.analyze")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> analyzeSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @PathParam("indexName") String indexName,
            @HeaderParam("Content-Type") String contentType, @HeaderParam("Accept") String accept,
            @BodyParam("application/json") BinaryData request, RequestOptions requestOptions, Context context);
    }

    /**
     * Creates a new search index.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param index The definition of the index to create.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a search index definition, which describes the fields and search
     * behavior of an index along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createWithResponseAsync(BinaryData index, RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.create(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), contentType, accept, index, requestOptions, context));
    }

    /**
     * Creates a new search index.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param index The definition of the index to create.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a search index definition, which describes the fields and search
     * behavior of an index along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createWithResponse(BinaryData index, RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.createSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(), contentType,
            accept, index, requestOptions, Context.NONE);
    }

    /**
     * Lists all indexes available for a search service.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>$select</td><td>String</td><td>No</td><td>Selects which top-level properties to retrieve.
     * Specified as a comma-separated list of JSON property names,
     * or '*' for all properties. The default is all properties.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response from a List Indexes request along with {@link PagedResponse} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<PagedResponse<BinaryData>> listSinglePageAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil
            .withContext(context -> service.list(this.client.getEndpoint(),
                this.client.getServiceVersion().getVersion(), accept, requestOptions, context))
            .map(res -> new PagedResponseBase<>(res.getRequest(), res.getStatusCode(), res.getHeaders(),
                getValues(res.getValue(), "value"), null, null));
    }

    /**
     * Lists all indexes available for a search service.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>$select</td><td>String</td><td>No</td><td>Selects which top-level properties to retrieve.
     * Specified as a comma-separated list of JSON property names,
     * or '*' for all properties. The default is all properties.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response from a List Indexes request as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedFlux<BinaryData> listAsync(RequestOptions requestOptions) {
        return new PagedFlux<>(() -> listSinglePageAsync(requestOptions));
    }

    /**
     * Lists all indexes available for a search service.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>$select</td><td>String</td><td>No</td><td>Selects which top-level properties to retrieve.
     * Specified as a comma-separated list of JSON property names,
     * or '*' for all properties. The default is all properties.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response from a List Indexes request along with {@link PagedResponse}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private PagedResponse<BinaryData> listSinglePage(RequestOptions requestOptions) {
        final String accept = "application/json";
        Response<BinaryData> res = service.listSync(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), accept, requestOptions, Context.NONE);
        return new PagedResponseBase<>(res.getRequest(), res.getStatusCode(), res.getHeaders(),
            getValues(res.getValue(), "value"), null, null);
    }

    /**
     * Lists all indexes available for a search service.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>$select</td><td>String</td><td>No</td><td>Selects which top-level properties to retrieve.
     * Specified as a comma-separated list of JSON property names,
     * or '*' for all properties. The default is all properties.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return response from a List Indexes request as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<BinaryData> list(RequestOptions requestOptions) {
        return new PagedIterable<>(() -> listSinglePage(requestOptions));
    }

    /**
     * Creates a new search index or updates an index if it already exists.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>allowIndexDowntime</td><td>Boolean</td><td>No</td><td>Allows new analyzers, tokenizers, token filters, or
     * char filters to be added to
     * an index by taking the index offline for at least a few seconds. This
     * temporarily causes indexing and query requests to fail. Performance and write
     * availability of the index can be impaired for several minutes after the index
     * is updated, or longer for very large indexes.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>Defines the If-Match condition. The operation will be
     * performed only if the ETag on the server matches this value.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>Defines the If-None-Match condition. The operation will
     * be performed only if the ETag on the server does not match this value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param index The definition of the index to create or update.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a search index definition, which describes the fields and search
     * behavior of an index along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createOrUpdateWithResponseAsync(String indexName, BinaryData index,
        RequestOptions requestOptions) {
        final String prefer = "return=representation";
        final String contentType = "application/json";
        final String accept = "application/json";
        return FluxUtil.withContext(
            context -> service.createOrUpdate(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(),
                prefer, indexName, contentType, accept, index, requestOptions, context));
    }

    /**
     * Creates a new search index or updates an index if it already exists.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>allowIndexDowntime</td><td>Boolean</td><td>No</td><td>Allows new analyzers, tokenizers, token filters, or
     * char filters to be added to
     * an index by taking the index offline for at least a few seconds. This
     * temporarily causes indexing and query requests to fail. Performance and write
     * availability of the index can be impaired for several minutes after the index
     * is updated, or longer for very large indexes.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>Defines the If-Match condition. The operation will be
     * performed only if the ETag on the server matches this value.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>Defines the If-None-Match condition. The operation will
     * be performed only if the ETag on the server does not match this value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param index The definition of the index to create or update.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a search index definition, which describes the fields and search
     * behavior of an index along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createOrUpdateWithResponse(String indexName, BinaryData index,
        RequestOptions requestOptions) {
        final String prefer = "return=representation";
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.createOrUpdateSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(),
            prefer, indexName, contentType, accept, index, requestOptions, Context.NONE);
    }

    /**
     * Deletes a search index and all the documents it contains. This operation is
     * permanent, with no recovery option. Make sure you have a master copy of your
     * index definition, data ingestion code, and a backup of the primary data source
     * in case you need to re-build the index.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>Defines the If-Match condition. The operation will be
     * performed only if the ETag on the server matches this value.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>Defines the If-None-Match condition. The operation will
     * be performed only if the ETag on the server does not match this value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param indexName The name of the index.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> deleteWithResponseAsync(String indexName, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.delete(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), indexName, accept, requestOptions, context));
    }

    /**
     * Deletes a search index and all the documents it contains. This operation is
     * permanent, with no recovery option. Make sure you have a master copy of your
     * index definition, data ingestion code, and a backup of the primary data source
     * in case you need to re-build the index.
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>If-Match</td><td>String</td><td>No</td><td>Defines the If-Match condition. The operation will be
     * performed only if the ETag on the server matches this value.</td></tr>
     * <tr><td>If-None-Match</td><td>String</td><td>No</td><td>Defines the If-None-Match condition. The operation will
     * be performed only if the ETag on the server does not match this value.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * 
     * @param indexName The name of the index.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> deleteWithResponse(String indexName, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.deleteSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(), indexName,
            accept, requestOptions, Context.NONE);
    }

    /**
     * Retrieves an index definition.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a search index definition, which describes the fields and search
     * behavior of an index along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getWithResponseAsync(String indexName, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.get(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), indexName, accept, requestOptions, context));
    }

    /**
     * Retrieves an index definition.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     *     fields (Required): [
     *          (Required){
     *             name: String (Required)
     *             type: String(Edm.String/Edm.Int32/Edm.Int64/Edm.Double/Edm.Boolean/Edm.DateTimeOffset/Edm.GeographyPoint/Edm.ComplexType/Edm.Single/Edm.Half/Edm.Int16/Edm.SByte/Edm.Byte) (Required)
     *             key: Boolean (Optional)
     *             retrievable: Boolean (Optional)
     *             stored: Boolean (Optional)
     *             searchable: Boolean (Optional)
     *             filterable: Boolean (Optional)
     *             sortable: Boolean (Optional)
     *             facetable: Boolean (Optional)
     *             analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             searchAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             indexAnalyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *             normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *             dimensions: Integer (Optional)
     *             vectorSearchProfile: String (Optional)
     *             vectorEncoding: String(packedBit) (Optional)
     *             synonymMaps (Optional): [
     *                 String (Optional)
     *             ]
     *             fields (Optional): [
     *                 (recursive schema, see above)
     *             ]
     *         }
     *     ]
     *     scoringProfiles (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             text (Optional): {
     *                 weights (Required): {
     *                     String: double (Required)
     *                 }
     *             }
     *             functions (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                     fieldName: String (Required)
     *                     boost: double (Required)
     *                     interpolation: String(linear/constant/quadratic/logarithmic) (Optional)
     *                 }
     *             ]
     *             functionAggregation: String(sum/average/minimum/maximum/firstMatching) (Optional)
     *         }
     *     ]
     *     defaultScoringProfile: String (Optional)
     *     corsOptions (Optional): {
     *         allowedOrigins (Required): [
     *             String (Required)
     *         ]
     *         maxAgeInSeconds: Long (Optional)
     *     }
     *     suggesters (Optional): [
     *          (Optional){
     *             name: String (Required)
     *             searchMode: String (Required)
     *             sourceFields (Required): [
     *                 String (Required)
     *             ]
     *         }
     *     ]
     *     analyzers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     tokenFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     charFilters (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     normalizers (Optional): [
     *          (Optional){
     *             &#64;odata.type: String (Required)
     *             name: String (Required)
     *         }
     *     ]
     *     encryptionKey (Optional): {
     *         keyVaultKeyName: String (Required)
     *         keyVaultKeyVersion: String (Optional)
     *         keyVaultUri: String (Required)
     *         accessCredentials (Optional): {
     *             applicationId: String (Required)
     *             applicationSecret: String (Optional)
     *         }
     *         identity (Optional): {
     *             &#64;odata.type: String (Required)
     *         }
     *     }
     *     similarity (Optional): {
     *         &#64;odata.type: String (Required)
     *     }
     *     semantic (Optional): {
     *         defaultConfiguration: String (Optional)
     *         configurations (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 prioritizedFields (Required): {
     *                     titleField (Optional): {
     *                         fieldName: String (Required)
     *                     }
     *                     prioritizedContentFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                     prioritizedKeywordsFields (Optional): [
     *                         (recursive schema, see above)
     *                     ]
     *                 }
     *                 flightingOptIn: Boolean (Optional)
     *             }
     *         ]
     *     }
     *     vectorSearch (Optional): {
     *         profiles (Optional): [
     *              (Optional){
     *                 name: String (Required)
     *                 algorithm: String (Required)
     *                 vectorizer: String (Optional)
     *                 compression: String (Optional)
     *             }
     *         ]
     *         algorithms (Optional): [
     *              (Optional){
     *                 kind: String(hnsw/exhaustiveKnn) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         vectorizers (Optional): [
     *              (Optional){
     *                 kind: String(azureOpenAI/customWebApi/aiServicesVision/aml) (Required)
     *                 name: String (Required)
     *             }
     *         ]
     *         compressions (Optional): [
     *              (Optional){
     *                 kind: String(scalarQuantization/binaryQuantization) (Required)
     *                 name: String (Required)
     *                 rerankWithOriginalVectors: Boolean (Optional)
     *                 defaultOversampling: Double (Optional)
     *                 rescoringOptions (Optional): {
     *                     enableRescoring: Boolean (Optional)
     *                     defaultOversampling: Double (Optional)
     *                     rescoreStorageMethod: String(preserveOriginals/discardOriginals) (Optional)
     *                 }
     *                 truncationDimension: Integer (Optional)
     *             }
     *         ]
     *     }
     *     &#64;odata.etag: String (Optional)
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return represents a search index definition, which describes the fields and search
     * behavior of an index along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getWithResponse(String indexName, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.getSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(), indexName,
            accept, requestOptions, Context.NONE);
    }

    /**
     * Returns statistics for the given index, including a document count and storage
     * usage.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     documentCount: long (Required)
     *     storageSize: long (Required)
     *     vectorIndexSize: long (Required)
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return statistics for a given index along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getStatisticsWithResponseAsync(String indexName, RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.getStatistics(this.client.getEndpoint(),
            this.client.getServiceVersion().getVersion(), indexName, accept, requestOptions, context));
    }

    /**
     * Returns statistics for the given index, including a document count and storage
     * usage.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     documentCount: long (Required)
     *     storageSize: long (Required)
     *     vectorIndexSize: long (Required)
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return statistics for a given index along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> getStatisticsWithResponse(String indexName, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.getStatisticsSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(),
            indexName, accept, requestOptions, Context.NONE);
    }

    /**
     * Shows how an analyzer breaks text into tokens.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     text: String (Required)
     *     analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *     tokenizer: String(classic/edgeNGram/keyword_v2/letter/lowercase/microsoft_language_tokenizer/microsoft_language_stemming_tokenizer/nGram/path_hierarchy_v2/pattern/standard_v2/uax_url_email/whitespace) (Optional)
     *     normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *     tokenFilters (Optional): [
     *         String(arabic_normalization/apostrophe/asciifolding/cjk_bigram/cjk_width/classic/common_grams/edgeNGram_v2/elision/german_normalization/hindi_normalization/indic_normalization/keyword_repeat/kstem/length/limit/lowercase/nGram_v2/persian_normalization/phonetic/porter_stem/reverse/scandinavian_normalization/scandinavian_folding/shingle/snowball/sorani_normalization/stemmer/stopwords/trim/truncate/unique/uppercase/word_delimiter) (Optional)
     *     ]
     *     charFilters (Optional): [
     *         String(html_strip) (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tokens (Required): [
     *          (Required){
     *             token: String (Required)
     *             startOffset: int (Required)
     *             endOffset: int (Required)
     *             position: int (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param request The text and analyzer or analysis components to test.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the result of testing an analyzer on text along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> analyzeWithResponseAsync(String indexName, BinaryData request,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return FluxUtil.withContext(
            context -> service.analyze(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(),
                indexName, contentType, accept, request, requestOptions, context));
    }

    /**
     * Shows how an analyzer breaks text into tokens.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     text: String (Required)
     *     analyzer: String(ar.microsoft/ar.lucene/hy.lucene/bn.microsoft/eu.lucene/bg.microsoft/bg.lucene/ca.microsoft/ca.lucene/zh-Hans.microsoft/zh-Hans.lucene/zh-Hant.microsoft/zh-Hant.lucene/hr.microsoft/cs.microsoft/cs.lucene/da.microsoft/da.lucene/nl.microsoft/nl.lucene/en.microsoft/en.lucene/et.microsoft/fi.microsoft/fi.lucene/fr.microsoft/fr.lucene/gl.lucene/de.microsoft/de.lucene/el.microsoft/el.lucene/gu.microsoft/he.microsoft/hi.microsoft/hi.lucene/hu.microsoft/hu.lucene/is.microsoft/id.microsoft/id.lucene/ga.lucene/it.microsoft/it.lucene/ja.microsoft/ja.lucene/kn.microsoft/ko.microsoft/ko.lucene/lv.microsoft/lv.lucene/lt.microsoft/ml.microsoft/ms.microsoft/mr.microsoft/nb.microsoft/no.lucene/fa.lucene/pl.microsoft/pl.lucene/pt-BR.microsoft/pt-BR.lucene/pt-PT.microsoft/pt-PT.lucene/pa.microsoft/ro.microsoft/ro.lucene/ru.microsoft/ru.lucene/sr-cyrillic.microsoft/sr-latin.microsoft/sk.microsoft/sl.microsoft/es.microsoft/es.lucene/sv.microsoft/sv.lucene/ta.microsoft/te.microsoft/th.microsoft/th.lucene/tr.microsoft/tr.lucene/uk.microsoft/ur.microsoft/vi.microsoft/standard.lucene/standardasciifolding.lucene/keyword/pattern/simple/stop/whitespace) (Optional)
     *     tokenizer: String(classic/edgeNGram/keyword_v2/letter/lowercase/microsoft_language_tokenizer/microsoft_language_stemming_tokenizer/nGram/path_hierarchy_v2/pattern/standard_v2/uax_url_email/whitespace) (Optional)
     *     normalizer: String(asciifolding/elision/lowercase/standard/uppercase) (Optional)
     *     tokenFilters (Optional): [
     *         String(arabic_normalization/apostrophe/asciifolding/cjk_bigram/cjk_width/classic/common_grams/edgeNGram_v2/elision/german_normalization/hindi_normalization/indic_normalization/keyword_repeat/kstem/length/limit/lowercase/nGram_v2/persian_normalization/phonetic/porter_stem/reverse/scandinavian_normalization/scandinavian_folding/shingle/snowball/sorani_normalization/stemmer/stopwords/trim/truncate/unique/uppercase/word_delimiter) (Optional)
     *     ]
     *     charFilters (Optional): [
     *         String(html_strip) (Optional)
     *     ]
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     tokens (Required): [
     *          (Required){
     *             token: String (Required)
     *             startOffset: int (Required)
     *             endOffset: int (Required)
     *             position: int (Required)
     *         }
     *     ]
     * }
     * }
     * </pre>
     * 
     * @param indexName The name of the index.
     * @param request The text and analyzer or analysis components to test.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the result of testing an analyzer on text along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> analyzeWithResponse(String indexName, BinaryData request,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.analyzeSync(this.client.getEndpoint(), this.client.getServiceVersion().getVersion(), indexName,
            contentType, accept, request, requestOptions, Context.NONE);
    }

    private List<BinaryData> getValues(BinaryData binaryData, String path) {
        try {
            Map<?, ?> obj = binaryData.toObject(Map.class);
            List<?> values = (List<?>) obj.get(path);
            return values.stream().map(BinaryData::fromObject).collect(Collectors.toList());
        } catch (RuntimeException e) {
            return null;
        }
    }

    private String getNextLink(BinaryData binaryData, String path) {
        try {
            Map<?, ?> obj = binaryData.toObject(Map.class);
            return (String) obj.get(path);
        } catch (RuntimeException e) {
            return null;
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * Represents classes of characters on which a token filter can operate.
 */
public final class TokenCharacterKind extends ExpandableStringEnum<TokenCharacterKind> {
    /**
     * Keeps letters in tokens.
     */
    @Generated
    public static final TokenCharacterKind LETTER = fromString("letter");

    /**
     * Keeps digits in tokens.
     */
    @Generated
    public static final TokenCharacterKind DIGIT = fromString("digit");

    /**
     * Keeps whitespace in tokens.
     */
    @Generated
    public static final TokenCharacterKind WHITESPACE = fromString("whitespace");

    /**
     * Keeps punctuation in tokens.
     */
    @Generated
    public static final TokenCharacterKind PUNCTUATION = fromString("punctuation");

    /**
     * Keeps symbols in tokens.
     */
    @Generated
    public static final TokenCharacterKind SYMBOL = fromString("symbol");

    /**
     * Creates a new instance of TokenCharacterKind value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public TokenCharacterKind() {
    }

    /**
     * Creates or finds a TokenCharacterKind from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding TokenCharacterKind.
     */
    @Generated
    public static TokenCharacterKind fromString(String name) {
        return fromString(name, TokenCharacterKind.class);
    }

    /**
     * Gets known TokenCharacterKind values.
     * 
     * @return known TokenCharacterKind values.
     */
    @Generated
    public static Collection<TokenCharacterKind> values() {
        return values(TokenCharacterKind.class);
    }
}

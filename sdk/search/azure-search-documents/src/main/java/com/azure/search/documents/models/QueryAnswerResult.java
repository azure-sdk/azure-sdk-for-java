// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.BinaryData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * An answer is a text passage extracted from the contents of the most relevant
 * documents that matched the query. Answers are extracted from the top search
 * results. Answer candidates are scored and the top answers are selected.
 */
@Immutable
public final class QueryAnswerResult implements JsonSerializable<QueryAnswerResult> {
    /*
     * The score value represents how relevant the answer is to the query relative to
     * other answers returned for the query.
     */
    @Generated
    private Double score;

    /*
     * The key of the document the answer was extracted from.
     */
    @Generated
    private String key;

    /*
     * The text passage extracted from the document contents as the answer.
     */
    @Generated
    private String text;

    /*
     * Same text passage as in the Text property with highlighted text phrases most
     * relevant to the query.
     */
    @Generated
    private String highlights;

    /*
     * An answer is a text passage extracted from the contents of the most relevant
     * documents that matched the query. Answers are extracted from the top search
     * results. Answer candidates are scored and the top answers are selected.
     */
    @Generated
    private Map<String, BinaryData> additionalProperties;

    /**
     * Creates an instance of QueryAnswerResult class.
     */
    @Generated
    private QueryAnswerResult() {
    }

    /**
     * Get the score property: The score value represents how relevant the answer is to the query relative to
     * other answers returned for the query.
     * 
     * @return the score value.
     */
    @Generated
    public Double getScore() {
        return this.score;
    }

    /**
     * Get the key property: The key of the document the answer was extracted from.
     * 
     * @return the key value.
     */
    @Generated
    public String getKey() {
        return this.key;
    }

    /**
     * Get the text property: The text passage extracted from the document contents as the answer.
     * 
     * @return the text value.
     */
    @Generated
    public String getText() {
        return this.text;
    }

    /**
     * Get the highlights property: Same text passage as in the Text property with highlighted text phrases most
     * relevant to the query.
     * 
     * @return the highlights value.
     */
    @Generated
    public String getHighlights() {
        return this.highlights;
    }

    /**
     * Get the additionalProperties property: An answer is a text passage extracted from the contents of the most
     * relevant
     * documents that matched the query. Answers are extracted from the top search
     * results. Answer candidates are scored and the top answers are selected.
     * 
     * @return the additionalProperties value.
     */
    @Generated
    public Map<String, BinaryData> getAdditionalProperties() {
        return this.additionalProperties;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("score", this.score);
        jsonWriter.writeStringField("key", this.key);
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeStringField("highlights", this.highlights);
        if (additionalProperties != null) {
            for (Map.Entry<String, BinaryData> additionalProperty : additionalProperties.entrySet()) {
                jsonWriter.writeFieldName(additionalProperty.getKey());
                if (additionalProperty.getValue() == null) {
                    jsonWriter.writeNull();
                } else {
                    additionalProperty.getValue().writeTo(jsonWriter);
                }
            }
        }
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of QueryAnswerResult from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of QueryAnswerResult if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the QueryAnswerResult.
     */
    @Generated
    public static QueryAnswerResult fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            QueryAnswerResult deserializedQueryAnswerResult = new QueryAnswerResult();
            Map<String, BinaryData> additionalProperties = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("score".equals(fieldName)) {
                    deserializedQueryAnswerResult.score = reader.getNullable(JsonReader::getDouble);
                } else if ("key".equals(fieldName)) {
                    deserializedQueryAnswerResult.key = reader.getString();
                } else if ("text".equals(fieldName)) {
                    deserializedQueryAnswerResult.text = reader.getString();
                } else if ("highlights".equals(fieldName)) {
                    deserializedQueryAnswerResult.highlights = reader.getString();
                } else {
                    if (additionalProperties == null) {
                        additionalProperties = new LinkedHashMap<>();
                    }

                    additionalProperties.put(fieldName,
                        reader.getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped())));
                }
            }
            deserializedQueryAnswerResult.additionalProperties = additionalProperties;

            return deserializedQueryAnswerResult;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.generated;

import com.azure.core.http.MatchConditions;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.search.documents.SearchClientBuilder;
import com.azure.search.documents.SkillsetsClient;
import com.azure.search.documents.models.AIServicesAccountKey;
import com.azure.search.documents.models.AzureActiveDirectoryApplicationCredentials;
import com.azure.search.documents.models.AzureOpenAITokenizerParameters;
import com.azure.search.documents.models.DocumentIntelligenceLayoutSkill;
import com.azure.search.documents.models.DocumentIntelligenceLayoutSkillMarkdownHeaderDepth;
import com.azure.search.documents.models.DocumentIntelligenceLayoutSkillOutputMode;
import com.azure.search.documents.models.InputFieldMappingEntry;
import com.azure.search.documents.models.KeyPhraseExtractionSkill;
import com.azure.search.documents.models.LanguageDetectionSkill;
import com.azure.search.documents.models.OutputFieldMappingEntry;
import com.azure.search.documents.models.SearchIndexerSkillset;
import com.azure.search.documents.models.SearchResourceEncryptionKey;
import com.azure.search.documents.models.SplitSkill;
import com.azure.search.documents.models.SplitSkillEncoderModelName;
import com.azure.search.documents.models.SplitSkillUnit;
import com.azure.search.documents.models.TextSplitMode;
import com.azure.search.documents.models.WebApiSkill;
import java.time.Duration;
import java.util.Arrays;

public class SearchServiceCreateOrUpdateSkillset {
    public static void main(String[] args) {
        SkillsetsClient skillsetsClient
            = new SearchClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint("https://previewexampleservice.search.windows.net")
                .buildSkillsetsClient();
        // BEGIN:com.azure.search.documents.generated.skillsetscreateorupdate.searchservicecreateorupdateskillset
        SearchIndexerSkillset response = skillsetsClient.createOrUpdate("tempskillset",
            new SearchIndexerSkillset("tempskillset", Arrays.asList(
                new LanguageDetectionSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("countryHint").setSource("/document/countryHint")),
                    Arrays.asList(new OutputFieldMappingEntry("languageCode").setTargetName("languageCode")))
                        .setName("skill2"),
                new SplitSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("languageCode").setSource("/document/languageCode")),
                    Arrays.asList(new OutputFieldMappingEntry("textItems").setTargetName("pages"))).setName("skill3")
                        .setTextSplitMode(TextSplitMode.PAGES)
                        .setMaximumPageLength(4000)
                        .setUnit(SplitSkillUnit.AZURE_OPEN_AITOKENS)
                        .setAzureOpenAITokenizerParameters(new AzureOpenAITokenizerParameters()
                            .setEncoderModelName(SplitSkillEncoderModelName.CL100K_BASE)
                            .setAllowedSpecialTokens(Arrays.asList("[START]", "[END]"))),
                new KeyPhraseExtractionSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("languageCode").setSource("/document/languageCode")),
                    Arrays.asList(new OutputFieldMappingEntry("keyPhrases").setTargetName("keyPhrases")))
                        .setName("skill4")
                        .setContext("/document/pages/*"),
                new WebApiSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("languageCode").setSource("/document/languageCode")),
                    Arrays.asList(new OutputFieldMappingEntry("customresult").setTargetName("result")),
                    "https://contoso.example.org/").setName("skill5")
                        .setHttpMethod("POST")
                        .setTimeout(Duration.parse("PT5S")),
                new DocumentIntelligenceLayoutSkill(
                    Arrays.asList(new InputFieldMappingEntry("file_data").setSource("/document/content")),
                    Arrays.asList(new OutputFieldMappingEntry("markdown_document").setTargetName("markdown_document")))
                        .setName("docIntelligenceLayoutSkill")
                        .setContext("/document")
                        .setOutputMode(DocumentIntelligenceLayoutSkillOutputMode.ONE_TO_MANY)
                        .setMarkdownHeaderDepth(DocumentIntelligenceLayoutSkillMarkdownHeaderDepth.H3)))
                            .setDescription("Skillset for extracting entities and more")
                            .setCognitiveServicesAccount(new AIServicesAccountKey("fakeTokenPlaceholder",
                                "https://mySubdomainName.cognitiveservices.azure.com"))
                            .setEncryptionKey(new SearchResourceEncryptionKey("fakeTokenPlaceholder",
                                "fakeTokenPlaceholder", "fakeTokenPlaceholder")
                                    .setAccessCredentials(new AzureActiveDirectoryApplicationCredentials(
                                        "00000000-0000-0000-0000-000000000000")
                                            .setApplicationSecret("fakeTokenPlaceholder"))),
            null, null, new MatchConditions());
        // END:com.azure.search.documents.generated.skillsetscreateorupdate.searchservicecreateorupdateskillset
    }
}

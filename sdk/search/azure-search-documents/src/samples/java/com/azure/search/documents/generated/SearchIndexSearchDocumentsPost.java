// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.generated;

import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.search.documents.DocumentsClient;
import com.azure.search.documents.SearchClientBuilder;
import com.azure.search.documents.models.HybridCountAndFacetMode;
import com.azure.search.documents.models.HybridSearch;
import com.azure.search.documents.models.QueryType;
import com.azure.search.documents.models.ScoringStatistics;
import com.azure.search.documents.models.SearchDocumentsResult;
import com.azure.search.documents.models.SearchMode;
import com.azure.search.documents.models.SearchRequest;
import com.azure.search.documents.models.VectorFilterMode;
import com.azure.search.documents.models.VectorSimilarityThreshold;
import com.azure.search.documents.models.VectorizedQuery;
import java.util.Arrays;

public class SearchIndexSearchDocumentsPost {
    public static void main(String[] args) {
        DocumentsClient documentsClient
            = new SearchClientBuilder().credential(new DefaultAzureCredentialBuilder().build())
                .endpoint("https://previewexampleservice.search.windows.net")
                .buildDocumentsClient();
        // BEGIN:com.azure.search.documents.generated.documentssearchpost.searchindexsearchdocumentspost
        SearchDocumentsResult response = documentsClient.searchPost("preview-test",
            new SearchRequest().setIncludeTotalResultCount(true)
                .setFacets(Arrays.asList("ownerId"))
                .setFilter("category eq 'purple' or category eq 'pink'")
                .setHighlightFields("category")
                .setHighlightPostTag("</em>")
                .setHighlightPreTag("</em>")
                .setOrderBy("id desc")
                .setQueryType(QueryType.SIMPLE)
                .setScoringStatistics(ScoringStatistics.GLOBAL)
                .setSessionId("mysessionid")
                .setScoringParameters(Arrays.asList("categoryTag:desiredCategoryValue"))
                .setScoringProfile("stringFieldBoost")
                .setSearchText("purple")
                .setSearchFields("id,name,description,category,ownerId")
                .setSearchMode(SearchMode.ANY)
                .setSelect("id,name,description,category,ownerId")
                .setSkip(0)
                .setTop(10)
                .setVectorQueries(
                    Arrays.asList(new VectorizedQuery(Arrays.asList(0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0))
                        .setKNearestNeighbors(50)
                        .setFields("vector22, vector1b")
                        .setOversampling(20.0D)
                        .setWeight(1.0D)
                        .setThreshold(new VectorSimilarityThreshold(0.984))
                        .setFilterOverride("ownerId eq 'sam'")))
                .setVectorFilterMode(VectorFilterMode.PRE_FILTER)
                .setHybridSearch(new HybridSearch().setMaxTextRecallSize(100)
                    .setCountAndFacetMode(HybridCountAndFacetMode.COUNT_ALL_RESULTS)));
        // END:com.azure.search.documents.generated.documentssearchpost.searchindexsearchdocumentspost
    }
}

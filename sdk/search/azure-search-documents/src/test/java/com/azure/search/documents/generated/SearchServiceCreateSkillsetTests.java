// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.generated;

import com.azure.search.documents.models.AIServicesAccountKey;
import com.azure.search.documents.models.AzureActiveDirectoryApplicationCredentials;
import com.azure.search.documents.models.AzureOpenAITokenizerParameters;
import com.azure.search.documents.models.CognitiveServicesAccount;
import com.azure.search.documents.models.DocumentIntelligenceLayoutSkill;
import com.azure.search.documents.models.DocumentIntelligenceLayoutSkillMarkdownHeaderDepth;
import com.azure.search.documents.models.DocumentIntelligenceLayoutSkillOutputMode;
import com.azure.search.documents.models.InputFieldMappingEntry;
import com.azure.search.documents.models.KeyPhraseExtractionSkill;
import com.azure.search.documents.models.LanguageDetectionSkill;
import com.azure.search.documents.models.OutputFieldMappingEntry;
import com.azure.search.documents.models.SearchIndexerSkill;
import com.azure.search.documents.models.SearchIndexerSkillset;
import com.azure.search.documents.models.SearchResourceEncryptionKey;
import com.azure.search.documents.models.SplitSkill;
import com.azure.search.documents.models.SplitSkillEncoderModelName;
import com.azure.search.documents.models.SplitSkillUnit;
import com.azure.search.documents.models.TextSplitMode;
import com.azure.search.documents.models.WebApiSkill;
import java.time.Duration;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SearchServiceCreateSkillsetTests extends SearchClientTestBase {
    @Test
    @Disabled
    public void testSearchServiceCreateSkillsetTests() {
        // method invocation
        SearchIndexerSkillset response = skillsetsClient.create(new SearchIndexerSkillset("tempskillset",
            Arrays.asList(
                new LanguageDetectionSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("countryHint").setSource("/document/countryHint")),
                    Arrays.asList(new OutputFieldMappingEntry("languageCode").setTargetName("languageCode")))
                        .setName("skill2"),
                new SplitSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("languageCode").setSource("/document/languageCode")),
                    Arrays.asList(new OutputFieldMappingEntry("textItems").setTargetName("pages"))).setName("skill3")
                        .setTextSplitMode(TextSplitMode.PAGES)
                        .setMaximumPageLength(4000)
                        .setUnit(SplitSkillUnit.AZURE_OPEN_AITOKENS)
                        .setAzureOpenAITokenizerParameters(new AzureOpenAITokenizerParameters()
                            .setEncoderModelName(SplitSkillEncoderModelName.CL100K_BASE)
                            .setAllowedSpecialTokens(Arrays.asList("[START]", "[END]"))),
                new KeyPhraseExtractionSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("languageCode").setSource("/document/languageCode")),
                    Arrays.asList(new OutputFieldMappingEntry("keyPhrases").setTargetName("keyPhrases")))
                        .setName("skill4")
                        .setContext("/document/pages/*"),
                new WebApiSkill(
                    Arrays.asList(new InputFieldMappingEntry("text").setSource("/document/content"),
                        new InputFieldMappingEntry("languageCode").setSource("/document/languageCode")),
                    Arrays.asList(new OutputFieldMappingEntry("customresult").setTargetName("result")),
                    "https://contoso.example.org/").setName("skill5")
                        .setHttpMethod("POST")
                        .setTimeout(Duration.parse("PT5S")),
                new DocumentIntelligenceLayoutSkill(
                    Arrays.asList(new InputFieldMappingEntry("file_data").setSource("/document/content")),
                    Arrays.asList(new OutputFieldMappingEntry("markdown_document").setTargetName("markdown_document")))
                        .setName("docIntelligenceLayoutSkill")
                        .setContext("/document")
                        .setOutputMode(DocumentIntelligenceLayoutSkillOutputMode.ONE_TO_MANY)
                        .setMarkdownHeaderDepth(DocumentIntelligenceLayoutSkillMarkdownHeaderDepth.H3)))
                            .setDescription("Skillset for extracting entities and more")
                            .setCognitiveServicesAccount(new AIServicesAccountKey("fakeTokenPlaceholder",
                                "https://mySubdomainName.cognitiveservices.azure.com").setDescription(
                                    "Description of the Azure AI service resource attached to a skillset"))
                            .setEncryptionKey(
                                new SearchResourceEncryptionKey("fakeTokenPlaceholder", "fakeTokenPlaceholder")
                                    .setKeyVersion("fakeTokenPlaceholder")
                                    .setAccessCredentials(new AzureActiveDirectoryApplicationCredentials(
                                        "00000000-0000-0000-0000-000000000000")
                                            .setApplicationSecret("fakeTokenPlaceholder"))));

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "name"
        Assertions.assertEquals("tempskillset", response.getName());
        // verify property "description"
        Assertions.assertEquals("Skillset for extracting entities and more", response.getDescription());
        // verify property "skills"
        List<SearchIndexerSkill> responseSkills = response.getSkills();
        SearchIndexerSkill responseSkillsFirstItem = responseSkills.iterator().next();
        Assertions.assertNotNull(responseSkillsFirstItem);
        Assertions.assertEquals("#Microsoft.Skills.Text.LanguageDetectionSkill",
            responseSkillsFirstItem.getOdataType());
        Assertions.assertEquals("skill2", responseSkillsFirstItem.getName());
        List<InputFieldMappingEntry> responseSkillsFirstItemInputs = responseSkillsFirstItem.getInputs();
        InputFieldMappingEntry responseSkillsFirstItemInputsFirstItem = responseSkillsFirstItemInputs.iterator().next();
        Assertions.assertNotNull(responseSkillsFirstItemInputsFirstItem);
        Assertions.assertEquals("text", responseSkillsFirstItemInputsFirstItem.getName());
        Assertions.assertEquals("/document/content", responseSkillsFirstItemInputsFirstItem.getSource());
        List<InputFieldMappingEntry> responseSkillsFirstItemInputsFirstItemInputs
            = responseSkillsFirstItemInputsFirstItem.getInputs();
        Assertions.assertEquals(0, responseSkillsFirstItemInputsFirstItemInputs.size());
        List<OutputFieldMappingEntry> responseSkillsFirstItemOutputs = responseSkillsFirstItem.getOutputs();
        OutputFieldMappingEntry responseSkillsFirstItemOutputsFirstItem
            = responseSkillsFirstItemOutputs.iterator().next();
        Assertions.assertNotNull(responseSkillsFirstItemOutputsFirstItem);
        Assertions.assertEquals("languageCode", responseSkillsFirstItemOutputsFirstItem.getName());
        Assertions.assertEquals("languageCode", responseSkillsFirstItemOutputsFirstItem.getTargetName());
        // verify property "cognitiveServicesAccount"
        CognitiveServicesAccount responseCognitiveServicesAccount = response.getCognitiveServicesAccount();
        Assertions.assertNotNull(responseCognitiveServicesAccount);
        Assertions.assertEquals("#Microsoft.Azure.Search.AIServicesByKey",
            responseCognitiveServicesAccount.getOdataType());
        Assertions.assertEquals("Description of the Azure AI service resource attached to a skillset",
            responseCognitiveServicesAccount.getDescription());
        // verify property "encryptionKey"
        SearchResourceEncryptionKey responseEncryptionKey = response.getEncryptionKey();
        Assertions.assertNotNull(responseEncryptionKey);
        Assertions.assertEquals("myUserManagedEncryptionKey-createdinAzureKeyVault",
            responseEncryptionKey.getKeyName());
        Assertions.assertEquals("myKeyVersion-32charAlphaNumericString", responseEncryptionKey.getKeyVersion());
        Assertions.assertEquals("https://myKeyVault.vault.azure.net", responseEncryptionKey.getVaultUri());
        AzureActiveDirectoryApplicationCredentials responseEncryptionKeyAccessCredentials
            = responseEncryptionKey.getAccessCredentials();
        Assertions.assertNotNull(responseEncryptionKeyAccessCredentials);
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000",
            responseEncryptionKeyAccessCredentials.getApplicationId());
        Assertions.assertEquals("<applicationSecret>", responseEncryptionKeyAccessCredentials.getApplicationSecret());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.generated;

import com.azure.search.documents.models.AzureActiveDirectoryApplicationCredentials;
import com.azure.search.documents.models.InputFieldMappingEntry;
import com.azure.search.documents.models.ListSkillsetsResult;
import com.azure.search.documents.models.OutputFieldMappingEntry;
import com.azure.search.documents.models.SearchIndexerSkill;
import com.azure.search.documents.models.SearchIndexerSkillset;
import com.azure.search.documents.models.SearchResourceEncryptionKey;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SearchServiceListSkillsetsTests extends SearchClientTestBase {
    @Test
    @Disabled
    public void testSearchServiceListSkillsetsTests() {
        // method invocation
        ListSkillsetsResult response = skillsetsClient.list(null);

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "skillsets"
        List<SearchIndexerSkillset> responseSkillsets = response.getSkillsets();
        SearchIndexerSkillset responseSkillsetsFirstItem = responseSkillsets.iterator().next();
        Assertions.assertNotNull(responseSkillsetsFirstItem);
        Assertions.assertEquals("myskillset", responseSkillsetsFirstItem.getName());
        Assertions.assertEquals("Skillset for extracting entities and more",
            responseSkillsetsFirstItem.getDescription());
        List<SearchIndexerSkill> responseSkillsetsFirstItemSkills = responseSkillsetsFirstItem.getSkills();
        SearchIndexerSkill responseSkillsetsFirstItemSkillsFirstItem
            = responseSkillsetsFirstItemSkills.iterator().next();
        Assertions.assertNotNull(responseSkillsetsFirstItemSkillsFirstItem);
        Assertions.assertEquals("#Microsoft.Skills.Text.LanguageDetectionSkill",
            responseSkillsetsFirstItemSkillsFirstItem.getOdataType());
        Assertions.assertEquals("skill2", responseSkillsetsFirstItemSkillsFirstItem.getName());
        Assertions.assertEquals("/document", responseSkillsetsFirstItemSkillsFirstItem.getContext());
        List<InputFieldMappingEntry> responseSkillsetsFirstItemSkillsFirstItemInputs
            = responseSkillsetsFirstItemSkillsFirstItem.getInputs();
        InputFieldMappingEntry responseSkillsetsFirstItemSkillsFirstItemInputsFirstItem
            = responseSkillsetsFirstItemSkillsFirstItemInputs.iterator().next();
        Assertions.assertNotNull(responseSkillsetsFirstItemSkillsFirstItemInputsFirstItem);
        Assertions.assertEquals("text", responseSkillsetsFirstItemSkillsFirstItemInputsFirstItem.getName());
        Assertions.assertEquals("/document/content",
            responseSkillsetsFirstItemSkillsFirstItemInputsFirstItem.getSource());
        List<InputFieldMappingEntry> responseSkillsetsFirstItemSkillsFirstItemInputsFirstItemInputs
            = responseSkillsetsFirstItemSkillsFirstItemInputsFirstItem.getInputs();
        Assertions.assertEquals(0, responseSkillsetsFirstItemSkillsFirstItemInputsFirstItemInputs.size());
        List<OutputFieldMappingEntry> responseSkillsetsFirstItemSkillsFirstItemOutputs
            = responseSkillsetsFirstItemSkillsFirstItem.getOutputs();
        OutputFieldMappingEntry responseSkillsetsFirstItemSkillsFirstItemOutputsFirstItem
            = responseSkillsetsFirstItemSkillsFirstItemOutputs.iterator().next();
        Assertions.assertNotNull(responseSkillsetsFirstItemSkillsFirstItemOutputsFirstItem);
        Assertions.assertEquals("languageCode", responseSkillsetsFirstItemSkillsFirstItemOutputsFirstItem.getName());
        Assertions.assertEquals("languageCode",
            responseSkillsetsFirstItemSkillsFirstItemOutputsFirstItem.getTargetName());
        Assertions.assertEquals("0x1234568AE7E58A1", responseSkillsetsFirstItem.getETag());
        SearchResourceEncryptionKey responseSkillsetsFirstItemEncryptionKey
            = responseSkillsetsFirstItem.getEncryptionKey();
        Assertions.assertNotNull(responseSkillsetsFirstItemEncryptionKey);
        Assertions.assertEquals("myUserManagedEncryptionKey-createdinAzureKeyVault",
            responseSkillsetsFirstItemEncryptionKey.getKeyName());
        Assertions.assertEquals("myKeyVersion-32charAlphaNumericString",
            responseSkillsetsFirstItemEncryptionKey.getKeyVersion());
        Assertions.assertEquals("https://myKeyVault.vault.azure.net",
            responseSkillsetsFirstItemEncryptionKey.getVaultUri());
        AzureActiveDirectoryApplicationCredentials responseSkillsetsFirstItemEncryptionKeyAccessCredentials
            = responseSkillsetsFirstItemEncryptionKey.getAccessCredentials();
        Assertions.assertNotNull(responseSkillsetsFirstItemEncryptionKeyAccessCredentials);
        Assertions.assertEquals("00000000-0000-0000-0000-000000000000",
            responseSkillsetsFirstItemEncryptionKeyAccessCredentials.getApplicationId());
        Assertions.assertEquals("<applicationSecret>",
            responseSkillsetsFirstItemEncryptionKeyAccessCredentials.getApplicationSecret());
    }
}

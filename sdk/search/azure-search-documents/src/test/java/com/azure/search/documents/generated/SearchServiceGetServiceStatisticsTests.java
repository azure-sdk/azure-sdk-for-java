// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.generated;

import com.azure.search.documents.models.ResourceCounter;
import com.azure.search.documents.models.SearchServiceCounters;
import com.azure.search.documents.models.SearchServiceLimits;
import com.azure.search.documents.models.SearchServiceStatistics;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class SearchServiceGetServiceStatisticsTests extends SearchClientTestBase {
    @Test
    @Disabled
    public void testSearchServiceGetServiceStatisticsTests() {
        // method invocation
        SearchServiceStatistics response = searchClient.getServiceStatistics();

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "counters"
        SearchServiceCounters responseCounters = response.getCounters();
        Assertions.assertNotNull(responseCounters);
        ResourceCounter responseCountersAliasCounter = responseCounters.getAliasCounter();
        Assertions.assertNotNull(responseCountersAliasCounter);
        Assertions.assertEquals(4L, responseCountersAliasCounter.getUsage());
        Assertions.assertEquals(4L, responseCountersAliasCounter.getQuota());
        ResourceCounter responseCountersDocumentCounter = responseCounters.getDocumentCounter();
        Assertions.assertNotNull(responseCountersDocumentCounter);
        Assertions.assertEquals(12L, responseCountersDocumentCounter.getUsage());
        ResourceCounter responseCountersIndexCounter = responseCounters.getIndexCounter();
        Assertions.assertNotNull(responseCountersIndexCounter);
        Assertions.assertEquals(2L, responseCountersIndexCounter.getUsage());
        Assertions.assertEquals(2L, responseCountersIndexCounter.getQuota());
        ResourceCounter responseCountersIndexerCounter = responseCounters.getIndexerCounter();
        Assertions.assertNotNull(responseCountersIndexerCounter);
        Assertions.assertEquals(2L, responseCountersIndexerCounter.getUsage());
        Assertions.assertEquals(2L, responseCountersIndexerCounter.getQuota());
        ResourceCounter responseCountersDataSourceCounter = responseCounters.getDataSourceCounter();
        Assertions.assertNotNull(responseCountersDataSourceCounter);
        Assertions.assertEquals(2L, responseCountersDataSourceCounter.getUsage());
        Assertions.assertEquals(2L, responseCountersDataSourceCounter.getQuota());
        ResourceCounter responseCountersStorageSizeCounter = responseCounters.getStorageSizeCounter();
        Assertions.assertNotNull(responseCountersStorageSizeCounter);
        Assertions.assertEquals(123456L, responseCountersStorageSizeCounter.getUsage());
        Assertions.assertEquals(10485760L, responseCountersStorageSizeCounter.getQuota());
        ResourceCounter responseCountersSynonymMapCounter = responseCounters.getSynonymMapCounter();
        Assertions.assertNotNull(responseCountersSynonymMapCounter);
        Assertions.assertEquals(3L, responseCountersSynonymMapCounter.getUsage());
        Assertions.assertEquals(3L, responseCountersSynonymMapCounter.getQuota());
        ResourceCounter responseCountersSkillsetCounter = responseCounters.getSkillsetCounter();
        Assertions.assertNotNull(responseCountersSkillsetCounter);
        Assertions.assertEquals(2L, responseCountersSkillsetCounter.getUsage());
        Assertions.assertEquals(2L, responseCountersSkillsetCounter.getQuota());
        ResourceCounter responseCountersVectorIndexSizeCounter = responseCounters.getVectorIndexSizeCounter();
        Assertions.assertNotNull(responseCountersVectorIndexSizeCounter);
        Assertions.assertEquals(123456L, responseCountersVectorIndexSizeCounter.getUsage());
        // verify property "limits"
        SearchServiceLimits responseLimits = response.getLimits();
        Assertions.assertNotNull(responseLimits);
        Assertions.assertEquals(1000, responseLimits.getMaxFieldsPerIndex());
        Assertions.assertEquals(10, responseLimits.getMaxFieldNestingDepthPerIndex());
        Assertions.assertEquals(40, responseLimits.getMaxComplexCollectionFieldsPerIndex());
        Assertions.assertEquals(3000, responseLimits.getMaxComplexObjectsInCollectionsPerDocument());
        Assertions.assertEquals(10485760L, responseLimits.getMaxStoragePerIndexInBytes());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.search.documents.generated;

import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public final class SearchServiceGetServiceStatisticsTests extends SearchClientTestBase {
    @Test
    @Disabled
    public void testSearchServiceGetServiceStatisticsTests() {
        RequestOptions requestOptions = new RequestOptions();
        Response<BinaryData> response = dataSourcesClient.getServiceStatisticsWithResponse(requestOptions);
        Assertions.assertEquals(200, response.getStatusCode());
        Assertions.assertEquals(BinaryData.fromString(
            "{\"counters\":{\"documentCount\":{\"usage\":12},\"indexesCount\":{\"usage\":2,\"quota\":2},\"indexersCount\":{\"usage\":2,\"quota\":2},\"dataSourcesCount\":{\"usage\":2,\"quota\":2},\"storageSize\":{\"usage\":123456,\"quota\":10485760},\"synonymMaps\":{\"usage\":3,\"quota\":3},\"skillsetCount\":{\"usage\":2,\"quota\":2},\"aliasesCount\":{\"usage\":4,\"quota\":4},\"vectorIndexSize\":{\"usage\":123456}},\"limits\":{\"maxStoragePerIndex\":10485760,\"maxFieldsPerIndex\":1000,\"maxFieldNestingDepthPerIndex\":10,\"maxComplexCollectionFieldsPerIndex\":40,\"maxComplexObjectsInCollectionsPerDocument\":3000}}")
            .toObject(Object.class), response.getValue().toObject(Object.class));
    }
}

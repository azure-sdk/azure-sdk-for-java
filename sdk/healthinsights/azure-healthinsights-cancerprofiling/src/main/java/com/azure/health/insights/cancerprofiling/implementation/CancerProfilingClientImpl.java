// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.health.insights.cancerprofiling.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpHeaderName;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.DateTimeRfc1123;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.polling.PollOperationDetails;
import com.azure.core.util.polling.PollerFlux;
import com.azure.core.util.polling.PollingStrategyOptions;
import com.azure.core.util.polling.SyncPoller;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.core.util.serializer.TypeReference;
import com.azure.health.insights.cancerprofiling.AzureHealthInsightsServiceVersion;
import com.azure.health.insights.cancerprofiling.models.OncoPhenotypeInferenceResult;
import java.time.Duration;
import java.time.OffsetDateTime;
import java.util.UUID;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the CancerProfilingClient type.
 */
public final class CancerProfilingClientImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final CancerProfilingClientService service;

    /**
     * Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus2.api.cognitive.microsoft.com).
     */
    private final String endpoint;

    /**
     * Gets Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus2.api.cognitive.microsoft.com).
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final AzureHealthInsightsServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public AzureHealthInsightsServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * Initializes an instance of CancerProfilingClient client.
     * 
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus2.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public CancerProfilingClientImpl(String endpoint, AzureHealthInsightsServiceVersion serviceVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of CancerProfilingClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus2.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public CancerProfilingClientImpl(HttpPipeline httpPipeline, String endpoint,
        AzureHealthInsightsServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of CancerProfilingClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
     * https://westus2.api.cognitive.microsoft.com).
     * @param serviceVersion Service version.
     */
    public CancerProfilingClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint,
        AzureHealthInsightsServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.service
            = RestProxy.create(CancerProfilingClientService.class, this.httpPipeline, this.getSerializerAdapter());
    }

    /**
     * The interface defining all the services for CancerProfilingClient to be used by the proxy service to perform
     * REST calls.
     */
    @Host("{endpoint}/health-insights")
    @ServiceInterface(name = "CancerProfilingClien")
    public interface CancerProfilingClientService {
        @Post("/onco-phenotype/jobs")
        @ExpectedResponses({ 202 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> inferCancerProfile(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("accept") String accept,
            @BodyParam("application/json") BinaryData oncoPhenotypeData, RequestOptions requestOptions,
            Context context);

        @Post("/onco-phenotype/jobs")
        @ExpectedResponses({ 202 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> inferCancerProfileSync(@HostParam("endpoint") String endpoint,
            @QueryParam("api-version") String apiVersion, @HeaderParam("accept") String accept,
            @BodyParam("application/json") BinaryData oncoPhenotypeData, RequestOptions requestOptions,
            Context context);
    }

    /**
     * Create Onco Phenotype job
     * 
     * Creates an Onco Phenotype job with the given request body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>repeatability-request-id</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability request ID header</td>
     * </tr>
     * <tr>
     * <td>repeatability-first-sent</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability first sent header as HTTP-date</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     patients (Required): [
     *          (Required){
     *             id: String (Required)
     *             info (Optional): {
     *                 sex: String(female/male/unspecified) (Optional)
     *                 birthDate: LocalDate (Optional)
     *                 clinicalInfo (Optional): [
     *                      (Optional){
     *                         resourceType: String (Required)
     *                         id: String (Optional)
     *                         meta (Optional): {
     *                             versionId: String (Optional)
     *                             lastUpdated: String (Optional)
     *                             source: String (Optional)
     *                             profile (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             security (Optional): [
     *                                  (Optional){
     *                                     id: String (Optional)
     *                                     extension (Optional): [
     *                                          (Optional){
     *                                             id: String (Optional)
     *                                             extension (Optional): [
     *                                                 (recursive schema, see above)
     *                                             ]
     *                                             url: String (Required)
     *                                             valueQuantity (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 value: Double (Optional)
     *                                                 comparator: String (Optional)
     *                                                 unit: String (Optional)
     *                                                 system: String (Optional)
     *                                                 code: String (Optional)
     *                                             }
     *                                             valueCodeableConcept (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 coding (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 text: String (Optional)
     *                                             }
     *                                             valueString: String (Optional)
     *                                             valueBoolean: Boolean (Optional)
     *                                             valueInteger: Integer (Optional)
     *                                             valueRange (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 low (Optional): (recursive schema, see low above)
     *                                                 high (Optional): (recursive schema, see high above)
     *                                             }
     *                                             valueRatio (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 numerator (Optional): (recursive schema, see numerator above)
     *                                                 denominator (Optional): (recursive schema, see denominator above)
     *                                             }
     *                                             valueSampledData (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 origin (Required): (recursive schema, see origin above)
     *                                                 period: double (Required)
     *                                                 factor: Double (Optional)
     *                                                 lowerLimit: Double (Optional)
     *                                                 upperLimit: Double (Optional)
     *                                                 dimensions: int (Required)
     *                                                 data: String (Optional)
     *                                             }
     *                                             valueTime: String (Optional)
     *                                             valueDateTime: String (Optional)
     *                                             valuePeriod (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 start: String (Optional)
     *                                                 end: String (Optional)
     *                                             }
     *                                             valueReference (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 reference: String (Optional)
     *                                                 type: String (Optional)
     *                                                 identifier (Optional): {
     *                                                     id: String (Optional)
     *                                                     extension (Optional): [
     *                                                         (recursive schema, see above)
     *                                                     ]
     *                                                     use: String (Optional)
     *                                                     type (Optional): (recursive schema, see type above)
     *                                                     system: String (Optional)
     *                                                     value: String (Optional)
     *                                                     period (Optional): (recursive schema, see period above)
     *                                                     assigner (Optional): (recursive schema, see assigner above)
     *                                                 }
     *                                                 display: String (Optional)
     *                                             }
     *                                         }
     *                                     ]
     *                                     system: String (Optional)
     *                                     version: String (Optional)
     *                                     code: String (Optional)
     *                                     display: String (Optional)
     *                                 }
     *                             ]
     *                             tag (Optional): [
     *                                 (recursive schema, see above)
     *                             ]
     *                         }
     *                         implicitRules: String (Optional)
     *                         language: String (Optional)
     *                          (Optional): {
     *                             String: Object (Required)
     *                         }
     *                     }
     *                 ]
     *             }
     *             encounters (Optional): [
     *                  (Optional){
     *                     id: String (Required)
     *                     period (Optional): {
     *                         start: OffsetDateTime (Optional)
     *                         end: OffsetDateTime (Optional)
     *                     }
     *                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)
     *                 }
     *             ]
     *             patientDocuments (Optional): [
     *                  (Optional){
     *                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)
     *                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)
     *                     id: String (Required)
     *                     language: String (Optional)
     *                     createdDateTime: OffsetDateTime (Optional)
     *                     authors (Optional): [
     *                          (Optional){
     *                             id: String (Optional)
     *                             fullName: String (Optional)
     *                         }
     *                     ]
     *                     specialtyType: String(pathology/radiology) (Optional)
     *                     administrativeMetadata (Optional): {
     *                         orderedProcedures (Optional): [
     *                              (Optional){
     *                                 extension (Optional): [
     *                                     (recursive schema, see above)
     *                                 ]
     *                                 code (Optional): (recursive schema, see code above)
     *                                 description: String (Optional)
     *                             }
     *                         ]
     *                         encounterId: String (Optional)
     *                     }
     *                     content (Required): {
     *                         sourceType: String(inline/reference) (Required)
     *                         value: String (Required)
     *                     }
     *                 }
     *             ]
     *         }
     *     ]
     *     configuration (Optional): {
     *         verbose: Boolean (Optional)
     *         includeEvidence: Boolean (Optional)
     *         inferenceTypes (Optional): [
     *             String(tumorSite/histology/clinicalStageT/clinicalStageN/clinicalStageM/pathologicStageT/pathologicStageN/pathologicStageM/diagnosisDate) (Optional)
     *         ]
     *         checkForCancerCase: Boolean (Optional)
     *     }
     * }
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     id: String (Required)
     *     status: String (Required)
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         target: String (Optional)
     *         details (Optional): [
     *             (recursive schema, see above)
     *         ]
     *     }
     * }
     * }</pre>
     * 
     * @param oncoPhenotypeData The body of the Onco Phenotype request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return status details for long running operations along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Mono<Response<BinaryData>> inferCancerProfileWithResponseAsync(BinaryData oncoPhenotypeData,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
        String repeatabilityRequestId = UUID.randomUUID().toString();
        String repeatabilityFirstSent = DateTimeRfc1123.toRfc1123String(OffsetDateTime.now());
        requestOptionsLocal.addRequestCallback(requestLocal -> {
            if (requestLocal.getHeaders().get(HttpHeaderName.fromString("repeatability-request-id")) == null) {
                requestLocal.getHeaders().set(HttpHeaderName.fromString("repeatability-request-id"),
                    repeatabilityRequestId);
            }
        });
        requestOptionsLocal.addRequestCallback(requestLocal -> {
            if (requestLocal.getHeaders().get(HttpHeaderName.fromString("repeatability-first-sent")) == null) {
                requestLocal.getHeaders().set(HttpHeaderName.fromString("repeatability-first-sent"),
                    repeatabilityFirstSent);
            }
        });
        return FluxUtil.withContext(context -> service.inferCancerProfile(this.getEndpoint(),
            this.getServiceVersion().getVersion(), accept, oncoPhenotypeData, requestOptionsLocal, context));
    }

    /**
     * Create Onco Phenotype job
     * 
     * Creates an Onco Phenotype job with the given request body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>repeatability-request-id</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability request ID header</td>
     * </tr>
     * <tr>
     * <td>repeatability-first-sent</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability first sent header as HTTP-date</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     patients (Required): [
     *          (Required){
     *             id: String (Required)
     *             info (Optional): {
     *                 sex: String(female/male/unspecified) (Optional)
     *                 birthDate: LocalDate (Optional)
     *                 clinicalInfo (Optional): [
     *                      (Optional){
     *                         resourceType: String (Required)
     *                         id: String (Optional)
     *                         meta (Optional): {
     *                             versionId: String (Optional)
     *                             lastUpdated: String (Optional)
     *                             source: String (Optional)
     *                             profile (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             security (Optional): [
     *                                  (Optional){
     *                                     id: String (Optional)
     *                                     extension (Optional): [
     *                                          (Optional){
     *                                             id: String (Optional)
     *                                             extension (Optional): [
     *                                                 (recursive schema, see above)
     *                                             ]
     *                                             url: String (Required)
     *                                             valueQuantity (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 value: Double (Optional)
     *                                                 comparator: String (Optional)
     *                                                 unit: String (Optional)
     *                                                 system: String (Optional)
     *                                                 code: String (Optional)
     *                                             }
     *                                             valueCodeableConcept (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 coding (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 text: String (Optional)
     *                                             }
     *                                             valueString: String (Optional)
     *                                             valueBoolean: Boolean (Optional)
     *                                             valueInteger: Integer (Optional)
     *                                             valueRange (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 low (Optional): (recursive schema, see low above)
     *                                                 high (Optional): (recursive schema, see high above)
     *                                             }
     *                                             valueRatio (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 numerator (Optional): (recursive schema, see numerator above)
     *                                                 denominator (Optional): (recursive schema, see denominator above)
     *                                             }
     *                                             valueSampledData (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 origin (Required): (recursive schema, see origin above)
     *                                                 period: double (Required)
     *                                                 factor: Double (Optional)
     *                                                 lowerLimit: Double (Optional)
     *                                                 upperLimit: Double (Optional)
     *                                                 dimensions: int (Required)
     *                                                 data: String (Optional)
     *                                             }
     *                                             valueTime: String (Optional)
     *                                             valueDateTime: String (Optional)
     *                                             valuePeriod (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 start: String (Optional)
     *                                                 end: String (Optional)
     *                                             }
     *                                             valueReference (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 reference: String (Optional)
     *                                                 type: String (Optional)
     *                                                 identifier (Optional): {
     *                                                     id: String (Optional)
     *                                                     extension (Optional): [
     *                                                         (recursive schema, see above)
     *                                                     ]
     *                                                     use: String (Optional)
     *                                                     type (Optional): (recursive schema, see type above)
     *                                                     system: String (Optional)
     *                                                     value: String (Optional)
     *                                                     period (Optional): (recursive schema, see period above)
     *                                                     assigner (Optional): (recursive schema, see assigner above)
     *                                                 }
     *                                                 display: String (Optional)
     *                                             }
     *                                         }
     *                                     ]
     *                                     system: String (Optional)
     *                                     version: String (Optional)
     *                                     code: String (Optional)
     *                                     display: String (Optional)
     *                                 }
     *                             ]
     *                             tag (Optional): [
     *                                 (recursive schema, see above)
     *                             ]
     *                         }
     *                         implicitRules: String (Optional)
     *                         language: String (Optional)
     *                          (Optional): {
     *                             String: Object (Required)
     *                         }
     *                     }
     *                 ]
     *             }
     *             encounters (Optional): [
     *                  (Optional){
     *                     id: String (Required)
     *                     period (Optional): {
     *                         start: OffsetDateTime (Optional)
     *                         end: OffsetDateTime (Optional)
     *                     }
     *                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)
     *                 }
     *             ]
     *             patientDocuments (Optional): [
     *                  (Optional){
     *                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)
     *                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)
     *                     id: String (Required)
     *                     language: String (Optional)
     *                     createdDateTime: OffsetDateTime (Optional)
     *                     authors (Optional): [
     *                          (Optional){
     *                             id: String (Optional)
     *                             fullName: String (Optional)
     *                         }
     *                     ]
     *                     specialtyType: String(pathology/radiology) (Optional)
     *                     administrativeMetadata (Optional): {
     *                         orderedProcedures (Optional): [
     *                              (Optional){
     *                                 extension (Optional): [
     *                                     (recursive schema, see above)
     *                                 ]
     *                                 code (Optional): (recursive schema, see code above)
     *                                 description: String (Optional)
     *                             }
     *                         ]
     *                         encounterId: String (Optional)
     *                     }
     *                     content (Required): {
     *                         sourceType: String(inline/reference) (Required)
     *                         value: String (Required)
     *                     }
     *                 }
     *             ]
     *         }
     *     ]
     *     configuration (Optional): {
     *         verbose: Boolean (Optional)
     *         includeEvidence: Boolean (Optional)
     *         inferenceTypes (Optional): [
     *             String(tumorSite/histology/clinicalStageT/clinicalStageN/clinicalStageM/pathologicStageT/pathologicStageN/pathologicStageM/diagnosisDate) (Optional)
     *         ]
     *         checkForCancerCase: Boolean (Optional)
     *     }
     * }
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     id: String (Required)
     *     status: String (Required)
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         target: String (Optional)
     *         details (Optional): [
     *             (recursive schema, see above)
     *         ]
     *     }
     * }
     * }</pre>
     * 
     * @param oncoPhenotypeData The body of the Onco Phenotype request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return status details for long running operations along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    private Response<BinaryData> inferCancerProfileWithResponse(BinaryData oncoPhenotypeData,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        RequestOptions requestOptionsLocal = requestOptions == null ? new RequestOptions() : requestOptions;
        String repeatabilityRequestId = UUID.randomUUID().toString();
        String repeatabilityFirstSent = DateTimeRfc1123.toRfc1123String(OffsetDateTime.now());
        requestOptionsLocal.addRequestCallback(requestLocal -> {
            if (requestLocal.getHeaders().get(HttpHeaderName.fromString("repeatability-request-id")) == null) {
                requestLocal.getHeaders().set(HttpHeaderName.fromString("repeatability-request-id"),
                    repeatabilityRequestId);
            }
        });
        requestOptionsLocal.addRequestCallback(requestLocal -> {
            if (requestLocal.getHeaders().get(HttpHeaderName.fromString("repeatability-first-sent")) == null) {
                requestLocal.getHeaders().set(HttpHeaderName.fromString("repeatability-first-sent"),
                    repeatabilityFirstSent);
            }
        });
        return service.inferCancerProfileSync(this.getEndpoint(), this.getServiceVersion().getVersion(), accept,
            oncoPhenotypeData, requestOptionsLocal, Context.NONE);
    }

    /**
     * Create Onco Phenotype job
     * 
     * Creates an Onco Phenotype job with the given request body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>repeatability-request-id</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability request ID header</td>
     * </tr>
     * <tr>
     * <td>repeatability-first-sent</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability first sent header as HTTP-date</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     patients (Required): [
     *          (Required){
     *             id: String (Required)
     *             info (Optional): {
     *                 sex: String(female/male/unspecified) (Optional)
     *                 birthDate: LocalDate (Optional)
     *                 clinicalInfo (Optional): [
     *                      (Optional){
     *                         resourceType: String (Required)
     *                         id: String (Optional)
     *                         meta (Optional): {
     *                             versionId: String (Optional)
     *                             lastUpdated: String (Optional)
     *                             source: String (Optional)
     *                             profile (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             security (Optional): [
     *                                  (Optional){
     *                                     id: String (Optional)
     *                                     extension (Optional): [
     *                                          (Optional){
     *                                             id: String (Optional)
     *                                             extension (Optional): [
     *                                                 (recursive schema, see above)
     *                                             ]
     *                                             url: String (Required)
     *                                             valueQuantity (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 value: Double (Optional)
     *                                                 comparator: String (Optional)
     *                                                 unit: String (Optional)
     *                                                 system: String (Optional)
     *                                                 code: String (Optional)
     *                                             }
     *                                             valueCodeableConcept (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 coding (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 text: String (Optional)
     *                                             }
     *                                             valueString: String (Optional)
     *                                             valueBoolean: Boolean (Optional)
     *                                             valueInteger: Integer (Optional)
     *                                             valueRange (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 low (Optional): (recursive schema, see low above)
     *                                                 high (Optional): (recursive schema, see high above)
     *                                             }
     *                                             valueRatio (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 numerator (Optional): (recursive schema, see numerator above)
     *                                                 denominator (Optional): (recursive schema, see denominator above)
     *                                             }
     *                                             valueSampledData (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 origin (Required): (recursive schema, see origin above)
     *                                                 period: double (Required)
     *                                                 factor: Double (Optional)
     *                                                 lowerLimit: Double (Optional)
     *                                                 upperLimit: Double (Optional)
     *                                                 dimensions: int (Required)
     *                                                 data: String (Optional)
     *                                             }
     *                                             valueTime: String (Optional)
     *                                             valueDateTime: String (Optional)
     *                                             valuePeriod (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 start: String (Optional)
     *                                                 end: String (Optional)
     *                                             }
     *                                             valueReference (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 reference: String (Optional)
     *                                                 type: String (Optional)
     *                                                 identifier (Optional): {
     *                                                     id: String (Optional)
     *                                                     extension (Optional): [
     *                                                         (recursive schema, see above)
     *                                                     ]
     *                                                     use: String (Optional)
     *                                                     type (Optional): (recursive schema, see type above)
     *                                                     system: String (Optional)
     *                                                     value: String (Optional)
     *                                                     period (Optional): (recursive schema, see period above)
     *                                                     assigner (Optional): (recursive schema, see assigner above)
     *                                                 }
     *                                                 display: String (Optional)
     *                                             }
     *                                         }
     *                                     ]
     *                                     system: String (Optional)
     *                                     version: String (Optional)
     *                                     code: String (Optional)
     *                                     display: String (Optional)
     *                                 }
     *                             ]
     *                             tag (Optional): [
     *                                 (recursive schema, see above)
     *                             ]
     *                         }
     *                         implicitRules: String (Optional)
     *                         language: String (Optional)
     *                          (Optional): {
     *                             String: Object (Required)
     *                         }
     *                     }
     *                 ]
     *             }
     *             encounters (Optional): [
     *                  (Optional){
     *                     id: String (Required)
     *                     period (Optional): {
     *                         start: OffsetDateTime (Optional)
     *                         end: OffsetDateTime (Optional)
     *                     }
     *                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)
     *                 }
     *             ]
     *             patientDocuments (Optional): [
     *                  (Optional){
     *                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)
     *                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)
     *                     id: String (Required)
     *                     language: String (Optional)
     *                     createdDateTime: OffsetDateTime (Optional)
     *                     authors (Optional): [
     *                          (Optional){
     *                             id: String (Optional)
     *                             fullName: String (Optional)
     *                         }
     *                     ]
     *                     specialtyType: String(pathology/radiology) (Optional)
     *                     administrativeMetadata (Optional): {
     *                         orderedProcedures (Optional): [
     *                              (Optional){
     *                                 extension (Optional): [
     *                                     (recursive schema, see above)
     *                                 ]
     *                                 code (Optional): (recursive schema, see code above)
     *                                 description: String (Optional)
     *                             }
     *                         ]
     *                         encounterId: String (Optional)
     *                     }
     *                     content (Required): {
     *                         sourceType: String(inline/reference) (Required)
     *                         value: String (Required)
     *                     }
     *                 }
     *             ]
     *         }
     *     ]
     *     configuration (Optional): {
     *         verbose: Boolean (Optional)
     *         includeEvidence: Boolean (Optional)
     *         inferenceTypes (Optional): [
     *             String(tumorSite/histology/clinicalStageT/clinicalStageN/clinicalStageM/pathologicStageT/pathologicStageN/pathologicStageM/diagnosisDate) (Optional)
     *         ]
     *         checkForCancerCase: Boolean (Optional)
     *     }
     * }
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     id: String (Required)
     *     status: String (Required)
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         target: String (Optional)
     *         details (Optional): [
     *             (recursive schema, see above)
     *         ]
     *     }
     * }
     * }</pre>
     * 
     * @param oncoPhenotypeData The body of the Onco Phenotype request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link PollerFlux} for polling of status details for long running operations.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public PollerFlux<BinaryData, BinaryData> beginInferCancerProfileAsync(BinaryData oncoPhenotypeData,
        RequestOptions requestOptions) {
        return PollerFlux.create(Duration.ofSeconds(1),
            () -> this.inferCancerProfileWithResponseAsync(oncoPhenotypeData, requestOptions),
            new com.azure.core.experimental.util.polling.OperationLocationPollingStrategy<>(
                new PollingStrategyOptions(this.getHttpPipeline())
                    .setEndpoint("{endpoint}/health-insights".replace("{endpoint}", this.getEndpoint()))
                    .setContext(requestOptions != null && requestOptions.getContext() != null
                        ? requestOptions.getContext() : Context.NONE)
                    .setServiceVersion(this.getServiceVersion().getVersion())),
            TypeReference.createInstance(BinaryData.class), TypeReference.createInstance(BinaryData.class));
    }

    /**
     * Create Onco Phenotype job
     * 
     * Creates an Onco Phenotype job with the given request body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>repeatability-request-id</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability request ID header</td>
     * </tr>
     * <tr>
     * <td>repeatability-first-sent</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability first sent header as HTTP-date</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     patients (Required): [
     *          (Required){
     *             id: String (Required)
     *             info (Optional): {
     *                 sex: String(female/male/unspecified) (Optional)
     *                 birthDate: LocalDate (Optional)
     *                 clinicalInfo (Optional): [
     *                      (Optional){
     *                         resourceType: String (Required)
     *                         id: String (Optional)
     *                         meta (Optional): {
     *                             versionId: String (Optional)
     *                             lastUpdated: String (Optional)
     *                             source: String (Optional)
     *                             profile (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             security (Optional): [
     *                                  (Optional){
     *                                     id: String (Optional)
     *                                     extension (Optional): [
     *                                          (Optional){
     *                                             id: String (Optional)
     *                                             extension (Optional): [
     *                                                 (recursive schema, see above)
     *                                             ]
     *                                             url: String (Required)
     *                                             valueQuantity (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 value: Double (Optional)
     *                                                 comparator: String (Optional)
     *                                                 unit: String (Optional)
     *                                                 system: String (Optional)
     *                                                 code: String (Optional)
     *                                             }
     *                                             valueCodeableConcept (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 coding (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 text: String (Optional)
     *                                             }
     *                                             valueString: String (Optional)
     *                                             valueBoolean: Boolean (Optional)
     *                                             valueInteger: Integer (Optional)
     *                                             valueRange (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 low (Optional): (recursive schema, see low above)
     *                                                 high (Optional): (recursive schema, see high above)
     *                                             }
     *                                             valueRatio (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 numerator (Optional): (recursive schema, see numerator above)
     *                                                 denominator (Optional): (recursive schema, see denominator above)
     *                                             }
     *                                             valueSampledData (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 origin (Required): (recursive schema, see origin above)
     *                                                 period: double (Required)
     *                                                 factor: Double (Optional)
     *                                                 lowerLimit: Double (Optional)
     *                                                 upperLimit: Double (Optional)
     *                                                 dimensions: int (Required)
     *                                                 data: String (Optional)
     *                                             }
     *                                             valueTime: String (Optional)
     *                                             valueDateTime: String (Optional)
     *                                             valuePeriod (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 start: String (Optional)
     *                                                 end: String (Optional)
     *                                             }
     *                                             valueReference (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 reference: String (Optional)
     *                                                 type: String (Optional)
     *                                                 identifier (Optional): {
     *                                                     id: String (Optional)
     *                                                     extension (Optional): [
     *                                                         (recursive schema, see above)
     *                                                     ]
     *                                                     use: String (Optional)
     *                                                     type (Optional): (recursive schema, see type above)
     *                                                     system: String (Optional)
     *                                                     value: String (Optional)
     *                                                     period (Optional): (recursive schema, see period above)
     *                                                     assigner (Optional): (recursive schema, see assigner above)
     *                                                 }
     *                                                 display: String (Optional)
     *                                             }
     *                                         }
     *                                     ]
     *                                     system: String (Optional)
     *                                     version: String (Optional)
     *                                     code: String (Optional)
     *                                     display: String (Optional)
     *                                 }
     *                             ]
     *                             tag (Optional): [
     *                                 (recursive schema, see above)
     *                             ]
     *                         }
     *                         implicitRules: String (Optional)
     *                         language: String (Optional)
     *                          (Optional): {
     *                             String: Object (Required)
     *                         }
     *                     }
     *                 ]
     *             }
     *             encounters (Optional): [
     *                  (Optional){
     *                     id: String (Required)
     *                     period (Optional): {
     *                         start: OffsetDateTime (Optional)
     *                         end: OffsetDateTime (Optional)
     *                     }
     *                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)
     *                 }
     *             ]
     *             patientDocuments (Optional): [
     *                  (Optional){
     *                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)
     *                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)
     *                     id: String (Required)
     *                     language: String (Optional)
     *                     createdDateTime: OffsetDateTime (Optional)
     *                     authors (Optional): [
     *                          (Optional){
     *                             id: String (Optional)
     *                             fullName: String (Optional)
     *                         }
     *                     ]
     *                     specialtyType: String(pathology/radiology) (Optional)
     *                     administrativeMetadata (Optional): {
     *                         orderedProcedures (Optional): [
     *                              (Optional){
     *                                 extension (Optional): [
     *                                     (recursive schema, see above)
     *                                 ]
     *                                 code (Optional): (recursive schema, see code above)
     *                                 description: String (Optional)
     *                             }
     *                         ]
     *                         encounterId: String (Optional)
     *                     }
     *                     content (Required): {
     *                         sourceType: String(inline/reference) (Required)
     *                         value: String (Required)
     *                     }
     *                 }
     *             ]
     *         }
     *     ]
     *     configuration (Optional): {
     *         verbose: Boolean (Optional)
     *         includeEvidence: Boolean (Optional)
     *         inferenceTypes (Optional): [
     *             String(tumorSite/histology/clinicalStageT/clinicalStageN/clinicalStageM/pathologicStageT/pathologicStageN/pathologicStageM/diagnosisDate) (Optional)
     *         ]
     *         checkForCancerCase: Boolean (Optional)
     *     }
     * }
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     id: String (Required)
     *     status: String (Required)
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         target: String (Optional)
     *         details (Optional): [
     *             (recursive schema, see above)
     *         ]
     *     }
     * }
     * }</pre>
     * 
     * @param oncoPhenotypeData The body of the Onco Phenotype request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link SyncPoller} for polling of status details for long running operations.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<BinaryData, BinaryData> beginInferCancerProfile(BinaryData oncoPhenotypeData,
        RequestOptions requestOptions) {
        return SyncPoller.createPoller(Duration.ofSeconds(1),
            () -> this.inferCancerProfileWithResponse(oncoPhenotypeData, requestOptions),
            new com.azure.core.experimental.util.polling.SyncOperationLocationPollingStrategy<>(
                new PollingStrategyOptions(this.getHttpPipeline())
                    .setEndpoint("{endpoint}/health-insights".replace("{endpoint}", this.getEndpoint()))
                    .setContext(requestOptions != null && requestOptions.getContext() != null
                        ? requestOptions.getContext() : Context.NONE)
                    .setServiceVersion(this.getServiceVersion().getVersion())),
            TypeReference.createInstance(BinaryData.class), TypeReference.createInstance(BinaryData.class));
    }

    /**
     * Create Onco Phenotype job
     * 
     * Creates an Onco Phenotype job with the given request body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>repeatability-request-id</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability request ID header</td>
     * </tr>
     * <tr>
     * <td>repeatability-first-sent</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability first sent header as HTTP-date</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     patients (Required): [
     *          (Required){
     *             id: String (Required)
     *             info (Optional): {
     *                 sex: String(female/male/unspecified) (Optional)
     *                 birthDate: LocalDate (Optional)
     *                 clinicalInfo (Optional): [
     *                      (Optional){
     *                         resourceType: String (Required)
     *                         id: String (Optional)
     *                         meta (Optional): {
     *                             versionId: String (Optional)
     *                             lastUpdated: String (Optional)
     *                             source: String (Optional)
     *                             profile (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             security (Optional): [
     *                                  (Optional){
     *                                     id: String (Optional)
     *                                     extension (Optional): [
     *                                          (Optional){
     *                                             id: String (Optional)
     *                                             extension (Optional): [
     *                                                 (recursive schema, see above)
     *                                             ]
     *                                             url: String (Required)
     *                                             valueQuantity (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 value: Double (Optional)
     *                                                 comparator: String (Optional)
     *                                                 unit: String (Optional)
     *                                                 system: String (Optional)
     *                                                 code: String (Optional)
     *                                             }
     *                                             valueCodeableConcept (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 coding (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 text: String (Optional)
     *                                             }
     *                                             valueString: String (Optional)
     *                                             valueBoolean: Boolean (Optional)
     *                                             valueInteger: Integer (Optional)
     *                                             valueRange (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 low (Optional): (recursive schema, see low above)
     *                                                 high (Optional): (recursive schema, see high above)
     *                                             }
     *                                             valueRatio (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 numerator (Optional): (recursive schema, see numerator above)
     *                                                 denominator (Optional): (recursive schema, see denominator above)
     *                                             }
     *                                             valueSampledData (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 origin (Required): (recursive schema, see origin above)
     *                                                 period: double (Required)
     *                                                 factor: Double (Optional)
     *                                                 lowerLimit: Double (Optional)
     *                                                 upperLimit: Double (Optional)
     *                                                 dimensions: int (Required)
     *                                                 data: String (Optional)
     *                                             }
     *                                             valueTime: String (Optional)
     *                                             valueDateTime: String (Optional)
     *                                             valuePeriod (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 start: String (Optional)
     *                                                 end: String (Optional)
     *                                             }
     *                                             valueReference (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 reference: String (Optional)
     *                                                 type: String (Optional)
     *                                                 identifier (Optional): {
     *                                                     id: String (Optional)
     *                                                     extension (Optional): [
     *                                                         (recursive schema, see above)
     *                                                     ]
     *                                                     use: String (Optional)
     *                                                     type (Optional): (recursive schema, see type above)
     *                                                     system: String (Optional)
     *                                                     value: String (Optional)
     *                                                     period (Optional): (recursive schema, see period above)
     *                                                     assigner (Optional): (recursive schema, see assigner above)
     *                                                 }
     *                                                 display: String (Optional)
     *                                             }
     *                                         }
     *                                     ]
     *                                     system: String (Optional)
     *                                     version: String (Optional)
     *                                     code: String (Optional)
     *                                     display: String (Optional)
     *                                 }
     *                             ]
     *                             tag (Optional): [
     *                                 (recursive schema, see above)
     *                             ]
     *                         }
     *                         implicitRules: String (Optional)
     *                         language: String (Optional)
     *                          (Optional): {
     *                             String: Object (Required)
     *                         }
     *                     }
     *                 ]
     *             }
     *             encounters (Optional): [
     *                  (Optional){
     *                     id: String (Required)
     *                     period (Optional): {
     *                         start: OffsetDateTime (Optional)
     *                         end: OffsetDateTime (Optional)
     *                     }
     *                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)
     *                 }
     *             ]
     *             patientDocuments (Optional): [
     *                  (Optional){
     *                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)
     *                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)
     *                     id: String (Required)
     *                     language: String (Optional)
     *                     createdDateTime: OffsetDateTime (Optional)
     *                     authors (Optional): [
     *                          (Optional){
     *                             id: String (Optional)
     *                             fullName: String (Optional)
     *                         }
     *                     ]
     *                     specialtyType: String(pathology/radiology) (Optional)
     *                     administrativeMetadata (Optional): {
     *                         orderedProcedures (Optional): [
     *                              (Optional){
     *                                 extension (Optional): [
     *                                     (recursive schema, see above)
     *                                 ]
     *                                 code (Optional): (recursive schema, see code above)
     *                                 description: String (Optional)
     *                             }
     *                         ]
     *                         encounterId: String (Optional)
     *                     }
     *                     content (Required): {
     *                         sourceType: String(inline/reference) (Required)
     *                         value: String (Required)
     *                     }
     *                 }
     *             ]
     *         }
     *     ]
     *     configuration (Optional): {
     *         verbose: Boolean (Optional)
     *         includeEvidence: Boolean (Optional)
     *         inferenceTypes (Optional): [
     *             String(tumorSite/histology/clinicalStageT/clinicalStageN/clinicalStageM/pathologicStageT/pathologicStageN/pathologicStageM/diagnosisDate) (Optional)
     *         ]
     *         checkForCancerCase: Boolean (Optional)
     *     }
     * }
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     id: String (Required)
     *     status: String (Required)
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         target: String (Optional)
     *         details (Optional): [
     *             (recursive schema, see above)
     *         ]
     *     }
     * }
     * }</pre>
     * 
     * @param oncoPhenotypeData The body of the Onco Phenotype request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link PollerFlux} for polling of status details for long running operations.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public PollerFlux<PollOperationDetails, OncoPhenotypeInferenceResult>
        beginInferCancerProfileWithModelAsync(BinaryData oncoPhenotypeData, RequestOptions requestOptions) {
        return PollerFlux.create(Duration.ofSeconds(1),
            () -> this.inferCancerProfileWithResponseAsync(oncoPhenotypeData, requestOptions),
            new com.azure.core.experimental.util.polling.OperationLocationPollingStrategy<>(
                new PollingStrategyOptions(this.getHttpPipeline())
                    .setEndpoint("{endpoint}/health-insights".replace("{endpoint}", this.getEndpoint()))
                    .setContext(requestOptions != null && requestOptions.getContext() != null
                        ? requestOptions.getContext() : Context.NONE)
                    .setServiceVersion(this.getServiceVersion().getVersion())),
            TypeReference.createInstance(PollOperationDetails.class),
            TypeReference.createInstance(OncoPhenotypeInferenceResult.class));
    }

    /**
     * Create Onco Phenotype job
     * 
     * Creates an Onco Phenotype job with the given request body.
     * <p>
     * <strong>Header Parameters</strong>
     * </p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr>
     * <th>Name</th>
     * <th>Type</th>
     * <th>Required</th>
     * <th>Description</th>
     * </tr>
     * <tr>
     * <td>repeatability-request-id</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability request ID header</td>
     * </tr>
     * <tr>
     * <td>repeatability-first-sent</td>
     * <td>String</td>
     * <td>No</td>
     * <td>Repeatability first sent header as HTTP-date</td>
     * </tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     patients (Required): [
     *          (Required){
     *             id: String (Required)
     *             info (Optional): {
     *                 sex: String(female/male/unspecified) (Optional)
     *                 birthDate: LocalDate (Optional)
     *                 clinicalInfo (Optional): [
     *                      (Optional){
     *                         resourceType: String (Required)
     *                         id: String (Optional)
     *                         meta (Optional): {
     *                             versionId: String (Optional)
     *                             lastUpdated: String (Optional)
     *                             source: String (Optional)
     *                             profile (Optional): [
     *                                 String (Optional)
     *                             ]
     *                             security (Optional): [
     *                                  (Optional){
     *                                     id: String (Optional)
     *                                     extension (Optional): [
     *                                          (Optional){
     *                                             id: String (Optional)
     *                                             extension (Optional): [
     *                                                 (recursive schema, see above)
     *                                             ]
     *                                             url: String (Required)
     *                                             valueQuantity (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 value: Double (Optional)
     *                                                 comparator: String (Optional)
     *                                                 unit: String (Optional)
     *                                                 system: String (Optional)
     *                                                 code: String (Optional)
     *                                             }
     *                                             valueCodeableConcept (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 coding (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 text: String (Optional)
     *                                             }
     *                                             valueString: String (Optional)
     *                                             valueBoolean: Boolean (Optional)
     *                                             valueInteger: Integer (Optional)
     *                                             valueRange (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 low (Optional): (recursive schema, see low above)
     *                                                 high (Optional): (recursive schema, see high above)
     *                                             }
     *                                             valueRatio (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 numerator (Optional): (recursive schema, see numerator above)
     *                                                 denominator (Optional): (recursive schema, see denominator above)
     *                                             }
     *                                             valueSampledData (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 origin (Required): (recursive schema, see origin above)
     *                                                 period: double (Required)
     *                                                 factor: Double (Optional)
     *                                                 lowerLimit: Double (Optional)
     *                                                 upperLimit: Double (Optional)
     *                                                 dimensions: int (Required)
     *                                                 data: String (Optional)
     *                                             }
     *                                             valueTime: String (Optional)
     *                                             valueDateTime: String (Optional)
     *                                             valuePeriod (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 start: String (Optional)
     *                                                 end: String (Optional)
     *                                             }
     *                                             valueReference (Optional): {
     *                                                 id: String (Optional)
     *                                                 extension (Optional): [
     *                                                     (recursive schema, see above)
     *                                                 ]
     *                                                 reference: String (Optional)
     *                                                 type: String (Optional)
     *                                                 identifier (Optional): {
     *                                                     id: String (Optional)
     *                                                     extension (Optional): [
     *                                                         (recursive schema, see above)
     *                                                     ]
     *                                                     use: String (Optional)
     *                                                     type (Optional): (recursive schema, see type above)
     *                                                     system: String (Optional)
     *                                                     value: String (Optional)
     *                                                     period (Optional): (recursive schema, see period above)
     *                                                     assigner (Optional): (recursive schema, see assigner above)
     *                                                 }
     *                                                 display: String (Optional)
     *                                             }
     *                                         }
     *                                     ]
     *                                     system: String (Optional)
     *                                     version: String (Optional)
     *                                     code: String (Optional)
     *                                     display: String (Optional)
     *                                 }
     *                             ]
     *                             tag (Optional): [
     *                                 (recursive schema, see above)
     *                             ]
     *                         }
     *                         implicitRules: String (Optional)
     *                         language: String (Optional)
     *                          (Optional): {
     *                             String: Object (Required)
     *                         }
     *                     }
     *                 ]
     *             }
     *             encounters (Optional): [
     *                  (Optional){
     *                     id: String (Required)
     *                     period (Optional): {
     *                         start: OffsetDateTime (Optional)
     *                         end: OffsetDateTime (Optional)
     *                     }
     *                     class: String(inpatient/ambulatory/observation/emergency/virtual/healthHome) (Optional)
     *                 }
     *             ]
     *             patientDocuments (Optional): [
     *                  (Optional){
     *                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)
     *                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/radiologyReport/procedure/progress/laboratory/pathologyReport) (Optional)
     *                     id: String (Required)
     *                     language: String (Optional)
     *                     createdDateTime: OffsetDateTime (Optional)
     *                     authors (Optional): [
     *                          (Optional){
     *                             id: String (Optional)
     *                             fullName: String (Optional)
     *                         }
     *                     ]
     *                     specialtyType: String(pathology/radiology) (Optional)
     *                     administrativeMetadata (Optional): {
     *                         orderedProcedures (Optional): [
     *                              (Optional){
     *                                 extension (Optional): [
     *                                     (recursive schema, see above)
     *                                 ]
     *                                 code (Optional): (recursive schema, see code above)
     *                                 description: String (Optional)
     *                             }
     *                         ]
     *                         encounterId: String (Optional)
     *                     }
     *                     content (Required): {
     *                         sourceType: String(inline/reference) (Required)
     *                         value: String (Required)
     *                     }
     *                 }
     *             ]
     *         }
     *     ]
     *     configuration (Optional): {
     *         verbose: Boolean (Optional)
     *         includeEvidence: Boolean (Optional)
     *         inferenceTypes (Optional): [
     *             String(tumorSite/histology/clinicalStageT/clinicalStageN/clinicalStageM/pathologicStageT/pathologicStageN/pathologicStageM/diagnosisDate) (Optional)
     *         ]
     *         checkForCancerCase: Boolean (Optional)
     *     }
     * }
     * }</pre>
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     id: String (Required)
     *     status: String (Required)
     *     error (Optional): {
     *         code: String (Required)
     *         message: String (Required)
     *         target: String (Optional)
     *         details (Optional): [
     *             (recursive schema, see above)
     *         ]
     *     }
     * }
     * }</pre>
     * 
     * @param oncoPhenotypeData The body of the Onco Phenotype request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link SyncPoller} for polling of status details for long running operations.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    public SyncPoller<PollOperationDetails, OncoPhenotypeInferenceResult>
        beginInferCancerProfileWithModel(BinaryData oncoPhenotypeData, RequestOptions requestOptions) {
        return SyncPoller.createPoller(Duration.ofSeconds(1),
            () -> this.inferCancerProfileWithResponse(oncoPhenotypeData, requestOptions),
            new com.azure.core.experimental.util.polling.SyncOperationLocationPollingStrategy<>(
                new PollingStrategyOptions(this.getHttpPipeline())
                    .setEndpoint("{endpoint}/health-insights".replace("{endpoint}", this.getEndpoint()))
                    .setContext(requestOptions != null && requestOptions.getContext() != null
                        ? requestOptions.getContext() : Context.NONE)
                    .setServiceVersion(this.getServiceVersion().getVersion())),
            TypeReference.createInstance(PollOperationDetails.class),
            TypeReference.createInstance(OncoPhenotypeInferenceResult.class));
    }
}

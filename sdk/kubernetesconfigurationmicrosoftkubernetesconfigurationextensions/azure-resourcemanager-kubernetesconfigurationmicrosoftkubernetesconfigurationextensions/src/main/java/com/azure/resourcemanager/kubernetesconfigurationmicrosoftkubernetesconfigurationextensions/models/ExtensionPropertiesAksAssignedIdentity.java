// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfigurationmicrosoftkubernetesconfigurationextensions.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Identity of the Extension resource in an AKS cluster.
 */
@Fluent
public final class ExtensionPropertiesAksAssignedIdentity
    implements JsonSerializable<ExtensionPropertiesAksAssignedIdentity> {
    /*
     * The principal ID of resource identity.
     */
    private String principalId;

    /*
     * The tenant ID of resource.
     */
    private String tenantId;

    /*
     * The identity type.
     */
    private AksIdentityType type;

    /*
     * The object ID of resource identity.
     */
    private String objectId;

    /*
     * The client ID of resource identity.
     */
    private String clientId;

    /*
     * The ID of the resource identity.
     */
    private String resourceId;

    /**
     * Creates an instance of ExtensionPropertiesAksAssignedIdentity class.
     */
    public ExtensionPropertiesAksAssignedIdentity() {
    }

    /**
     * Get the principalId property: The principal ID of resource identity.
     * 
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Get the tenantId property: The tenant ID of resource.
     * 
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Get the type property: The identity type.
     * 
     * @return the type value.
     */
    public AksIdentityType type() {
        return this.type;
    }

    /**
     * Set the type property: The identity type.
     * 
     * @param type the type value to set.
     * @return the ExtensionPropertiesAksAssignedIdentity object itself.
     */
    public ExtensionPropertiesAksAssignedIdentity withType(AksIdentityType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the objectId property: The object ID of resource identity.
     * 
     * @return the objectId value.
     */
    public String objectId() {
        return this.objectId;
    }

    /**
     * Set the objectId property: The object ID of resource identity.
     * 
     * @param objectId the objectId value to set.
     * @return the ExtensionPropertiesAksAssignedIdentity object itself.
     */
    public ExtensionPropertiesAksAssignedIdentity withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }

    /**
     * Get the clientId property: The client ID of resource identity.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: The client ID of resource identity.
     * 
     * @param clientId the clientId value to set.
     * @return the ExtensionPropertiesAksAssignedIdentity object itself.
     */
    public ExtensionPropertiesAksAssignedIdentity withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the resourceId property: The ID of the resource identity.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The ID of the resource identity.
     * 
     * @param resourceId the resourceId value to set.
     * @return the ExtensionPropertiesAksAssignedIdentity object itself.
     */
    public ExtensionPropertiesAksAssignedIdentity withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("objectId", this.objectId);
        jsonWriter.writeStringField("clientId", this.clientId);
        jsonWriter.writeStringField("resourceId", this.resourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ExtensionPropertiesAksAssignedIdentity from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ExtensionPropertiesAksAssignedIdentity if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ExtensionPropertiesAksAssignedIdentity.
     */
    public static ExtensionPropertiesAksAssignedIdentity fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ExtensionPropertiesAksAssignedIdentity deserializedExtensionPropertiesAksAssignedIdentity
                = new ExtensionPropertiesAksAssignedIdentity();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("principalId".equals(fieldName)) {
                    deserializedExtensionPropertiesAksAssignedIdentity.principalId = reader.getString();
                } else if ("tenantId".equals(fieldName)) {
                    deserializedExtensionPropertiesAksAssignedIdentity.tenantId = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedExtensionPropertiesAksAssignedIdentity.type
                        = AksIdentityType.fromString(reader.getString());
                } else if ("objectId".equals(fieldName)) {
                    deserializedExtensionPropertiesAksAssignedIdentity.objectId = reader.getString();
                } else if ("clientId".equals(fieldName)) {
                    deserializedExtensionPropertiesAksAssignedIdentity.clientId = reader.getString();
                } else if ("resourceId".equals(fieldName)) {
                    deserializedExtensionPropertiesAksAssignedIdentity.resourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedExtensionPropertiesAksAssignedIdentity;
        });
    }
}

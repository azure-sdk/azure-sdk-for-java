// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfigurationmicrosoftkubernetesconfigurationextensions.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Additional details provided by the publisher of the extension.
 */
@Fluent
public final class AdditionalDetails implements JsonSerializable<AdditionalDetails> {
    /*
     * The docs property.
     */
    private String docs;

    /*
     * The releaseNotes property.
     */
    private String releaseNotes;

    /*
     * The troubleshootingGuide property.
     */
    private String troubleshootingGuide;

    /**
     * Creates an instance of AdditionalDetails class.
     */
    public AdditionalDetails() {
    }

    /**
     * Get the docs property: The docs property.
     * 
     * @return the docs value.
     */
    public String docs() {
        return this.docs;
    }

    /**
     * Set the docs property: The docs property.
     * 
     * @param docs the docs value to set.
     * @return the AdditionalDetails object itself.
     */
    public AdditionalDetails withDocs(String docs) {
        this.docs = docs;
        return this;
    }

    /**
     * Get the releaseNotes property: The releaseNotes property.
     * 
     * @return the releaseNotes value.
     */
    public String releaseNotes() {
        return this.releaseNotes;
    }

    /**
     * Set the releaseNotes property: The releaseNotes property.
     * 
     * @param releaseNotes the releaseNotes value to set.
     * @return the AdditionalDetails object itself.
     */
    public AdditionalDetails withReleaseNotes(String releaseNotes) {
        this.releaseNotes = releaseNotes;
        return this;
    }

    /**
     * Get the troubleshootingGuide property: The troubleshootingGuide property.
     * 
     * @return the troubleshootingGuide value.
     */
    public String troubleshootingGuide() {
        return this.troubleshootingGuide;
    }

    /**
     * Set the troubleshootingGuide property: The troubleshootingGuide property.
     * 
     * @param troubleshootingGuide the troubleshootingGuide value to set.
     * @return the AdditionalDetails object itself.
     */
    public AdditionalDetails withTroubleshootingGuide(String troubleshootingGuide) {
        this.troubleshootingGuide = troubleshootingGuide;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("docs", this.docs);
        jsonWriter.writeStringField("releaseNotes", this.releaseNotes);
        jsonWriter.writeStringField("troubleshootingGuide", this.troubleshootingGuide);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdditionalDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdditionalDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdditionalDetails.
     */
    public static AdditionalDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdditionalDetails deserializedAdditionalDetails = new AdditionalDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("docs".equals(fieldName)) {
                    deserializedAdditionalDetails.docs = reader.getString();
                } else if ("releaseNotes".equals(fieldName)) {
                    deserializedAdditionalDetails.releaseNotes = reader.getString();
                } else if ("troubleshootingGuide".equals(fieldName)) {
                    deserializedAdditionalDetails.troubleshootingGuide = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdditionalDetails;
        });
    }
}

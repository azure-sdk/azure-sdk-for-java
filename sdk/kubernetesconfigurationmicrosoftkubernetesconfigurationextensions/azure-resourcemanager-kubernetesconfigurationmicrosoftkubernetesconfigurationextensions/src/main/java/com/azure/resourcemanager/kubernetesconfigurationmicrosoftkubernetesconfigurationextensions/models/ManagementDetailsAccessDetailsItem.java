// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfigurationmicrosoftkubernetesconfigurationextensions.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ManagementDetailsAccessDetailsItem model.
 */
@Fluent
public final class ManagementDetailsAccessDetailsItem implements JsonSerializable<ManagementDetailsAccessDetailsItem> {
    /*
     * The entity property.
     */
    private String entity;

    /*
     * The allowedActions property.
     */
    private List<String> allowedActions;

    /*
     * The description property.
     */
    private String description;

    /**
     * Creates an instance of ManagementDetailsAccessDetailsItem class.
     */
    public ManagementDetailsAccessDetailsItem() {
    }

    /**
     * Get the entity property: The entity property.
     * 
     * @return the entity value.
     */
    public String entity() {
        return this.entity;
    }

    /**
     * Set the entity property: The entity property.
     * 
     * @param entity the entity value to set.
     * @return the ManagementDetailsAccessDetailsItem object itself.
     */
    public ManagementDetailsAccessDetailsItem withEntity(String entity) {
        this.entity = entity;
        return this;
    }

    /**
     * Get the allowedActions property: The allowedActions property.
     * 
     * @return the allowedActions value.
     */
    public List<String> allowedActions() {
        return this.allowedActions;
    }

    /**
     * Set the allowedActions property: The allowedActions property.
     * 
     * @param allowedActions the allowedActions value to set.
     * @return the ManagementDetailsAccessDetailsItem object itself.
     */
    public ManagementDetailsAccessDetailsItem withAllowedActions(List<String> allowedActions) {
        this.allowedActions = allowedActions;
        return this;
    }

    /**
     * Get the description property: The description property.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description property.
     * 
     * @param description the description value to set.
     * @return the ManagementDetailsAccessDetailsItem object itself.
     */
    public ManagementDetailsAccessDetailsItem withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("entity", this.entity);
        jsonWriter.writeArrayField("allowedActions", this.allowedActions,
            (writer, element) -> writer.writeString(element));
        jsonWriter.writeStringField("description", this.description);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ManagementDetailsAccessDetailsItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ManagementDetailsAccessDetailsItem if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ManagementDetailsAccessDetailsItem.
     */
    public static ManagementDetailsAccessDetailsItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ManagementDetailsAccessDetailsItem deserializedManagementDetailsAccessDetailsItem
                = new ManagementDetailsAccessDetailsItem();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("entity".equals(fieldName)) {
                    deserializedManagementDetailsAccessDetailsItem.entity = reader.getString();
                } else if ("allowedActions".equals(fieldName)) {
                    List<String> allowedActions = reader.readArray(reader1 -> reader1.getString());
                    deserializedManagementDetailsAccessDetailsItem.allowedActions = allowedActions;
                } else if ("description".equals(fieldName)) {
                    deserializedManagementDetailsAccessDetailsItem.description = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedManagementDetailsAccessDetailsItem;
        });
    }
}

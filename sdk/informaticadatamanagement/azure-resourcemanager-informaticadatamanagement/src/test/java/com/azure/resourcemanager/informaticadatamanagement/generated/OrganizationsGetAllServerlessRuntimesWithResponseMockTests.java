// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.informaticadatamanagement.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.informaticadatamanagement.InformaticaDataManagementManager;
import com.azure.resourcemanager.informaticadatamanagement.models.InformaticaServerlessRuntimeResourceList;
import com.azure.resourcemanager.informaticadatamanagement.models.RuntimeType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OrganizationsGetAllServerlessRuntimesWithResponseMockTests {
    @Test
    public void testGetAllServerlessRuntimesWithResponse() throws Exception {
        String responseStr
            = "{\"informaticaRuntimeResources\":[{\"name\":\"ybar\",\"createdTime\":\"euayjkqabqgzsles\",\"updatedTime\":\"cbhernntiewdj\",\"createdBy\":\"vbquwr\",\"updatedBy\":\"ehwagoh\",\"id\":\"uffkmrqemvvh\",\"type\":\"SERVERLESS\",\"status\":\"tdrjfutacoebj\",\"statusLocalized\":\"ewzcjznmwcp\",\"statusMessage\":\"guaadraufactkahz\",\"serverlessConfigProperties\":{\"subnet\":\"ajjziuxxpshne\",\"applicationType\":\"ulfgslqu\",\"resourceGroupName\":\"wdlenrdsut\",\"advancedCustomProperties\":\"bazpjuohmi\",\"supplementaryFileLocation\":\"flnorwmduvwp\",\"platform\":\"vxwmygd\",\"tags\":\"gpqch\",\"vnet\":\"zepn\",\"executionTimeout\":\"jcrxgibbdaxcon\",\"computeUnits\":\"zauorsuk\",\"tenantId\":\"wbqpl\",\"subscriptionId\":\"vnuuepzl\",\"region\":\"hw\",\"serverlessArmResourceId\":\"oldweyuqdu\"},\"description\":\"mnnrwr\"},{\"name\":\"i\",\"createdTime\":\"rk\",\"updatedTime\":\"alywjhhgdn\",\"createdBy\":\"xmsivfomiloxggdu\",\"updatedBy\":\"iqndieuzaofj\",\"id\":\"hvcyyysfg\",\"type\":\"SERVERLESS\",\"status\":\"tcubiipuipwoqonm\",\"statusLocalized\":\"cje\",\"statusMessage\":\"nizshqvcim\",\"serverlessConfigProperties\":{\"subnet\":\"vfgmblrrilby\",\"applicationType\":\"xsmiccwrwfscjf\",\"resourceGroupName\":\"nszqujiz\",\"advancedCustomProperties\":\"oqytibyowbblgy\",\"supplementaryFileLocation\":\"utp\",\"platform\":\"joxoism\",\"tags\":\"sbpimlq\",\"vnet\":\"jxkcgxxlxsff\",\"executionTimeout\":\"vizqzdwl\",\"computeUnits\":\"lyoupfgfbkju\",\"tenantId\":\"yhgk\",\"subscriptionId\":\"in\",\"region\":\"owzfttsttkt\",\"serverlessArmResourceId\":\"hbq\"},\"description\":\"tx\"},{\"name\":\"gzukxitmm\",\"createdTime\":\"tg\",\"updatedTime\":\"qqxhrnxrxcpj\",\"createdBy\":\"isavok\",\"updatedBy\":\"dzf\",\"id\":\"azivjlfrqttbajl\",\"type\":\"SERVERLESS\",\"status\":\"tnwxy\",\"statusLocalized\":\"opidkqqfkuv\",\"statusMessage\":\"cxkdmligovi\",\"serverlessConfigProperties\":{\"subnet\":\"xk\",\"applicationType\":\"loazuruocbgoo\",\"resourceGroupName\":\"te\",\"advancedCustomProperties\":\"bfhjxakvvjgsl\",\"supplementaryFileLocation\":\"dilmyww\",\"platform\":\"gkxnyedabg\",\"tags\":\"udtjuewbc\",\"vnet\":\"xuuwhcj\",\"executionTimeout\":\"ccybvp\",\"computeUnits\":\"akkud\",\"tenantId\":\"xgwjplmagstcyoh\",\"subscriptionId\":\"kyrk\",\"region\":\"dg\",\"serverlessArmResourceId\":\"gsj\"},\"description\":\"nwqjnoba\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        InformaticaDataManagementManager manager = InformaticaDataManagementManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        InformaticaServerlessRuntimeResourceList response = manager.organizations()
            .getAllServerlessRuntimesWithResponse("fqjbvleo", "fmluiqtqzfavyvn", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ybar", response.informaticaRuntimeResources().get(0).name());
        Assertions.assertEquals("euayjkqabqgzsles", response.informaticaRuntimeResources().get(0).createdTime());
        Assertions.assertEquals("cbhernntiewdj", response.informaticaRuntimeResources().get(0).updatedTime());
        Assertions.assertEquals("vbquwr", response.informaticaRuntimeResources().get(0).createdBy());
        Assertions.assertEquals("ehwagoh", response.informaticaRuntimeResources().get(0).updatedBy());
        Assertions.assertEquals("uffkmrqemvvh", response.informaticaRuntimeResources().get(0).id());
        Assertions.assertEquals(RuntimeType.SERVERLESS, response.informaticaRuntimeResources().get(0).type());
        Assertions.assertEquals("tdrjfutacoebj", response.informaticaRuntimeResources().get(0).status());
        Assertions.assertEquals("ewzcjznmwcp", response.informaticaRuntimeResources().get(0).statusLocalized());
        Assertions.assertEquals("guaadraufactkahz", response.informaticaRuntimeResources().get(0).statusMessage());
        Assertions.assertEquals("ajjziuxxpshne",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().subnet());
        Assertions.assertEquals("ulfgslqu",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().applicationType());
        Assertions.assertEquals("wdlenrdsut",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().resourceGroupName());
        Assertions.assertEquals("bazpjuohmi",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().advancedCustomProperties());
        Assertions.assertEquals("flnorwmduvwp",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().supplementaryFileLocation());
        Assertions.assertEquals("vxwmygd",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().platform());
        Assertions.assertEquals("gpqch",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().tags());
        Assertions.assertEquals("zepn",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().vnet());
        Assertions.assertEquals("jcrxgibbdaxcon",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().executionTimeout());
        Assertions.assertEquals("zauorsuk",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().computeUnits());
        Assertions.assertEquals("wbqpl",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().tenantId());
        Assertions.assertEquals("vnuuepzl",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().subscriptionId());
        Assertions.assertEquals("hw",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().region());
        Assertions.assertEquals("oldweyuqdu",
            response.informaticaRuntimeResources().get(0).serverlessConfigProperties().serverlessArmResourceId());
        Assertions.assertEquals("mnnrwr", response.informaticaRuntimeResources().get(0).description());
    }
}

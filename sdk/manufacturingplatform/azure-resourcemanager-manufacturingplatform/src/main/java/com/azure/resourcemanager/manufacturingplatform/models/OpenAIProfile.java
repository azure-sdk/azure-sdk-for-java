// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.manufacturingplatform.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The properties related to OpenAI Resource.
 */
@Fluent
public final class OpenAIProfile implements JsonSerializable<OpenAIProfile> {
    /*
     * Resource Id of OpenAI Resource
     */
    private String id;

    /*
     * GPT Model Name
     */
    private String gptModelName;

    /*
     * GPT Model Version
     */
    private String gptModelVersion;

    /*
     * GPT Model Capacity
     */
    private Integer gptModelCapacity;

    /*
     * GPT Model SKU Name
     */
    private String gptModelSkuName;

    /*
     * Embedding Model Name
     */
    private String embeddingModelName;

    /*
     * Embedding Model Version
     */
    private String embeddingModelVersion;

    /*
     * Embedding Model SKU Name
     */
    private String embeddingModelSkuName;

    /*
     * Embedding Model Capacity
     */
    private Integer embeddingModelCapacity;

    /**
     * Creates an instance of OpenAIProfile class.
     */
    public OpenAIProfile() {
    }

    /**
     * Get the id property: Resource Id of OpenAI Resource.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the gptModelName property: GPT Model Name.
     * 
     * @return the gptModelName value.
     */
    public String gptModelName() {
        return this.gptModelName;
    }

    /**
     * Set the gptModelName property: GPT Model Name.
     * 
     * @param gptModelName the gptModelName value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withGptModelName(String gptModelName) {
        this.gptModelName = gptModelName;
        return this;
    }

    /**
     * Get the gptModelVersion property: GPT Model Version.
     * 
     * @return the gptModelVersion value.
     */
    public String gptModelVersion() {
        return this.gptModelVersion;
    }

    /**
     * Set the gptModelVersion property: GPT Model Version.
     * 
     * @param gptModelVersion the gptModelVersion value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withGptModelVersion(String gptModelVersion) {
        this.gptModelVersion = gptModelVersion;
        return this;
    }

    /**
     * Get the gptModelCapacity property: GPT Model Capacity.
     * 
     * @return the gptModelCapacity value.
     */
    public Integer gptModelCapacity() {
        return this.gptModelCapacity;
    }

    /**
     * Set the gptModelCapacity property: GPT Model Capacity.
     * 
     * @param gptModelCapacity the gptModelCapacity value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withGptModelCapacity(Integer gptModelCapacity) {
        this.gptModelCapacity = gptModelCapacity;
        return this;
    }

    /**
     * Get the gptModelSkuName property: GPT Model SKU Name.
     * 
     * @return the gptModelSkuName value.
     */
    public String gptModelSkuName() {
        return this.gptModelSkuName;
    }

    /**
     * Set the gptModelSkuName property: GPT Model SKU Name.
     * 
     * @param gptModelSkuName the gptModelSkuName value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withGptModelSkuName(String gptModelSkuName) {
        this.gptModelSkuName = gptModelSkuName;
        return this;
    }

    /**
     * Get the embeddingModelName property: Embedding Model Name.
     * 
     * @return the embeddingModelName value.
     */
    public String embeddingModelName() {
        return this.embeddingModelName;
    }

    /**
     * Set the embeddingModelName property: Embedding Model Name.
     * 
     * @param embeddingModelName the embeddingModelName value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withEmbeddingModelName(String embeddingModelName) {
        this.embeddingModelName = embeddingModelName;
        return this;
    }

    /**
     * Get the embeddingModelVersion property: Embedding Model Version.
     * 
     * @return the embeddingModelVersion value.
     */
    public String embeddingModelVersion() {
        return this.embeddingModelVersion;
    }

    /**
     * Set the embeddingModelVersion property: Embedding Model Version.
     * 
     * @param embeddingModelVersion the embeddingModelVersion value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withEmbeddingModelVersion(String embeddingModelVersion) {
        this.embeddingModelVersion = embeddingModelVersion;
        return this;
    }

    /**
     * Get the embeddingModelSkuName property: Embedding Model SKU Name.
     * 
     * @return the embeddingModelSkuName value.
     */
    public String embeddingModelSkuName() {
        return this.embeddingModelSkuName;
    }

    /**
     * Set the embeddingModelSkuName property: Embedding Model SKU Name.
     * 
     * @param embeddingModelSkuName the embeddingModelSkuName value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withEmbeddingModelSkuName(String embeddingModelSkuName) {
        this.embeddingModelSkuName = embeddingModelSkuName;
        return this;
    }

    /**
     * Get the embeddingModelCapacity property: Embedding Model Capacity.
     * 
     * @return the embeddingModelCapacity value.
     */
    public Integer embeddingModelCapacity() {
        return this.embeddingModelCapacity;
    }

    /**
     * Set the embeddingModelCapacity property: Embedding Model Capacity.
     * 
     * @param embeddingModelCapacity the embeddingModelCapacity value to set.
     * @return the OpenAIProfile object itself.
     */
    public OpenAIProfile withEmbeddingModelCapacity(Integer embeddingModelCapacity) {
        this.embeddingModelCapacity = embeddingModelCapacity;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("gptModelName", this.gptModelName);
        jsonWriter.writeStringField("gptModelVersion", this.gptModelVersion);
        jsonWriter.writeNumberField("gptModelCapacity", this.gptModelCapacity);
        jsonWriter.writeStringField("gptModelSkuName", this.gptModelSkuName);
        jsonWriter.writeStringField("embeddingModelName", this.embeddingModelName);
        jsonWriter.writeStringField("embeddingModelVersion", this.embeddingModelVersion);
        jsonWriter.writeStringField("embeddingModelSkuName", this.embeddingModelSkuName);
        jsonWriter.writeNumberField("embeddingModelCapacity", this.embeddingModelCapacity);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of OpenAIProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of OpenAIProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the OpenAIProfile.
     */
    public static OpenAIProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            OpenAIProfile deserializedOpenAIProfile = new OpenAIProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedOpenAIProfile.id = reader.getString();
                } else if ("gptModelName".equals(fieldName)) {
                    deserializedOpenAIProfile.gptModelName = reader.getString();
                } else if ("gptModelVersion".equals(fieldName)) {
                    deserializedOpenAIProfile.gptModelVersion = reader.getString();
                } else if ("gptModelCapacity".equals(fieldName)) {
                    deserializedOpenAIProfile.gptModelCapacity = reader.getNullable(JsonReader::getInt);
                } else if ("gptModelSkuName".equals(fieldName)) {
                    deserializedOpenAIProfile.gptModelSkuName = reader.getString();
                } else if ("embeddingModelName".equals(fieldName)) {
                    deserializedOpenAIProfile.embeddingModelName = reader.getString();
                } else if ("embeddingModelVersion".equals(fieldName)) {
                    deserializedOpenAIProfile.embeddingModelVersion = reader.getString();
                } else if ("embeddingModelSkuName".equals(fieldName)) {
                    deserializedOpenAIProfile.embeddingModelSkuName = reader.getString();
                } else if ("embeddingModelCapacity".equals(fieldName)) {
                    deserializedOpenAIProfile.embeddingModelCapacity = reader.getNullable(JsonReader::getInt);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedOpenAIProfile;
        });
    }
}

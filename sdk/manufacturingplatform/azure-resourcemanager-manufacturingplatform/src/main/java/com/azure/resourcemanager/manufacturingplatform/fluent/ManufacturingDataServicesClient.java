// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.manufacturingplatform.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.manufacturingplatform.fluent.models.AvailableVersionListResultInner;
import com.azure.resourcemanager.manufacturingplatform.fluent.models.MdsResourceInner;
import com.azure.resourcemanager.manufacturingplatform.models.MdsResourceUpdate;

/**
 * An instance of this class provides access to all the operations defined in ManufacturingDataServicesClient.
 */
public interface ManufacturingDataServicesClient {
    /**
     * List MdsResource resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MdsResourceInner> list();

    /**
     * List MdsResource resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MdsResourceInner> list(Context context);

    /**
     * List MdsResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MdsResourceInner> listByResourceGroup(String resourceGroupName);

    /**
     * List MdsResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<MdsResourceInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MdsResource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<MdsResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String mdsResourceName,
        Context context);

    /**
     * Get a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MdsResource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MdsResourceInner getByResourceGroup(String resourceGroupName, String mdsResourceName);

    /**
     * Create a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MdsResourceInner>, MdsResourceInner> beginCreateOrUpdate(String resourceGroupName,
        String mdsResourceName, MdsResourceInner resource);

    /**
     * Create a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MdsResourceInner>, MdsResourceInner> beginCreateOrUpdate(String resourceGroupName,
        String mdsResourceName, MdsResourceInner resource, Context context);

    /**
     * Create a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MdsResourceInner createOrUpdate(String resourceGroupName, String mdsResourceName, MdsResourceInner resource);

    /**
     * Create a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MdsResourceInner createOrUpdate(String resourceGroupName, String mdsResourceName, MdsResourceInner resource,
        Context context);

    /**
     * Update a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MdsResourceInner>, MdsResourceInner> beginUpdate(String resourceGroupName,
        String mdsResourceName, MdsResourceUpdate properties);

    /**
     * Update a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<MdsResourceInner>, MdsResourceInner> beginUpdate(String resourceGroupName,
        String mdsResourceName, MdsResourceUpdate properties, Context context);

    /**
     * Update a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MdsResourceInner update(String resourceGroupName, String mdsResourceName, MdsResourceUpdate properties);

    /**
     * Update a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ManufacturingPlatformProviderHub resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    MdsResourceInner update(String resourceGroupName, String mdsResourceName, MdsResourceUpdate properties,
        Context context);

    /**
     * Delete a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String mdsResourceName);

    /**
     * Delete a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String mdsResourceName, Context context);

    /**
     * Delete a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String mdsResourceName);

    /**
     * Delete a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String mdsResourceName, Context context);

    /**
     * Returns the list of available versions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of available versions along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AvailableVersionListResultInner> listAvailableVersionsWithResponse(String resourceGroupName,
        String mdsResourceName, Context context);

    /**
     * Returns the list of available versions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of available versions.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AvailableVersionListResultInner listAvailableVersions(String resourceGroupName, String mdsResourceName);
}

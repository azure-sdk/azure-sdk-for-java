// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.manufacturingplatform.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ManufacturingDataServices.
 */
public interface ManufacturingDataServices {
    /**
     * List MdsResource resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MdsResource> list();

    /**
     * List MdsResource resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MdsResource> list(Context context);

    /**
     * List MdsResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MdsResource> listByResourceGroup(String resourceGroupName);

    /**
     * List MdsResource resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a MdsResource list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<MdsResource> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MdsResource along with {@link Response}.
     */
    Response<MdsResource> getByResourceGroupWithResponse(String resourceGroupName, String mdsResourceName,
        Context context);

    /**
     * Get a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MdsResource.
     */
    MdsResource getByResourceGroup(String resourceGroupName, String mdsResourceName);

    /**
     * Delete a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String mdsResourceName);

    /**
     * Delete a MdsResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String mdsResourceName, Context context);

    /**
     * Returns the list of available versions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of available versions along with {@link Response}.
     */
    Response<AvailableVersionListResult> listAvailableVersionsWithResponse(String resourceGroupName,
        String mdsResourceName, Context context);

    /**
     * Returns the list of available versions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mdsResourceName Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of available versions.
     */
    AvailableVersionListResult listAvailableVersions(String resourceGroupName, String mdsResourceName);

    /**
     * Get a MdsResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MdsResource along with {@link Response}.
     */
    MdsResource getById(String id);

    /**
     * Get a MdsResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a MdsResource along with {@link Response}.
     */
    Response<MdsResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a MdsResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a MdsResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new MdsResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new MdsResource definition.
     */
    MdsResource.DefinitionStages.Blank define(String name);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.manufacturingplatform.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The updatable properties of the MdsResource.
 */
@Fluent
public final class MdsResourceUpdateProperties implements JsonSerializable<MdsResourceUpdateProperties> {
    /*
     * Mds Resource Version.
     */
    private String version;

    /*
     * Enable Teams Notification.
     */
    private Boolean enableTeamsNotification;

    /*
     * Enable Copilot.
     */
    private Boolean enableCopilot;

    /*
     * Enable Diagnostic Settings.
     */
    private Boolean enableDiagnosticSettings;

    /*
     * Profile of OpenAI Resource.
     */
    private OpenAIProfile openAIProfile;

    /*
     * Profile of Azure Machine Learning Resource.
     */
    private AmlProfileUpdate amlProfile;

    /*
     * Profile of Fabric resources.
     */
    private FabricProfileUpdate fabricProfile;

    /*
     * Profile of User Managed OpenAI Resource.
     */
    private UserManagedOpenAIProfileUpdate userManagedOpenAIProfile;

    /*
     * Deny Assignments exclusion list.
     */
    private List<DenyAssignmentExclusion> denyAssignmentExclusions;

    /*
     * State of the resource
     */
    private ResourceState resourceState;

    /**
     * Creates an instance of MdsResourceUpdateProperties class.
     */
    public MdsResourceUpdateProperties() {
    }

    /**
     * Get the version property: Mds Resource Version.
     * 
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version property: Mds Resource Version.
     * 
     * @param version the version value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the enableTeamsNotification property: Enable Teams Notification.
     * 
     * @return the enableTeamsNotification value.
     */
    public Boolean enableTeamsNotification() {
        return this.enableTeamsNotification;
    }

    /**
     * Set the enableTeamsNotification property: Enable Teams Notification.
     * 
     * @param enableTeamsNotification the enableTeamsNotification value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withEnableTeamsNotification(Boolean enableTeamsNotification) {
        this.enableTeamsNotification = enableTeamsNotification;
        return this;
    }

    /**
     * Get the enableCopilot property: Enable Copilot.
     * 
     * @return the enableCopilot value.
     */
    public Boolean enableCopilot() {
        return this.enableCopilot;
    }

    /**
     * Set the enableCopilot property: Enable Copilot.
     * 
     * @param enableCopilot the enableCopilot value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withEnableCopilot(Boolean enableCopilot) {
        this.enableCopilot = enableCopilot;
        return this;
    }

    /**
     * Get the enableDiagnosticSettings property: Enable Diagnostic Settings.
     * 
     * @return the enableDiagnosticSettings value.
     */
    public Boolean enableDiagnosticSettings() {
        return this.enableDiagnosticSettings;
    }

    /**
     * Set the enableDiagnosticSettings property: Enable Diagnostic Settings.
     * 
     * @param enableDiagnosticSettings the enableDiagnosticSettings value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withEnableDiagnosticSettings(Boolean enableDiagnosticSettings) {
        this.enableDiagnosticSettings = enableDiagnosticSettings;
        return this;
    }

    /**
     * Get the openAIProfile property: Profile of OpenAI Resource.
     * 
     * @return the openAIProfile value.
     */
    public OpenAIProfile openAIProfile() {
        return this.openAIProfile;
    }

    /**
     * Set the openAIProfile property: Profile of OpenAI Resource.
     * 
     * @param openAIProfile the openAIProfile value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withOpenAIProfile(OpenAIProfile openAIProfile) {
        this.openAIProfile = openAIProfile;
        return this;
    }

    /**
     * Get the amlProfile property: Profile of Azure Machine Learning Resource.
     * 
     * @return the amlProfile value.
     */
    public AmlProfileUpdate amlProfile() {
        return this.amlProfile;
    }

    /**
     * Set the amlProfile property: Profile of Azure Machine Learning Resource.
     * 
     * @param amlProfile the amlProfile value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withAmlProfile(AmlProfileUpdate amlProfile) {
        this.amlProfile = amlProfile;
        return this;
    }

    /**
     * Get the fabricProfile property: Profile of Fabric resources.
     * 
     * @return the fabricProfile value.
     */
    public FabricProfileUpdate fabricProfile() {
        return this.fabricProfile;
    }

    /**
     * Set the fabricProfile property: Profile of Fabric resources.
     * 
     * @param fabricProfile the fabricProfile value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withFabricProfile(FabricProfileUpdate fabricProfile) {
        this.fabricProfile = fabricProfile;
        return this;
    }

    /**
     * Get the userManagedOpenAIProfile property: Profile of User Managed OpenAI Resource.
     * 
     * @return the userManagedOpenAIProfile value.
     */
    public UserManagedOpenAIProfileUpdate userManagedOpenAIProfile() {
        return this.userManagedOpenAIProfile;
    }

    /**
     * Set the userManagedOpenAIProfile property: Profile of User Managed OpenAI Resource.
     * 
     * @param userManagedOpenAIProfile the userManagedOpenAIProfile value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties
        withUserManagedOpenAIProfile(UserManagedOpenAIProfileUpdate userManagedOpenAIProfile) {
        this.userManagedOpenAIProfile = userManagedOpenAIProfile;
        return this;
    }

    /**
     * Get the denyAssignmentExclusions property: Deny Assignments exclusion list.
     * 
     * @return the denyAssignmentExclusions value.
     */
    public List<DenyAssignmentExclusion> denyAssignmentExclusions() {
        return this.denyAssignmentExclusions;
    }

    /**
     * Set the denyAssignmentExclusions property: Deny Assignments exclusion list.
     * 
     * @param denyAssignmentExclusions the denyAssignmentExclusions value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties
        withDenyAssignmentExclusions(List<DenyAssignmentExclusion> denyAssignmentExclusions) {
        this.denyAssignmentExclusions = denyAssignmentExclusions;
        return this;
    }

    /**
     * Get the resourceState property: State of the resource.
     * 
     * @return the resourceState value.
     */
    public ResourceState resourceState() {
        return this.resourceState;
    }

    /**
     * Set the resourceState property: State of the resource.
     * 
     * @param resourceState the resourceState value to set.
     * @return the MdsResourceUpdateProperties object itself.
     */
    public MdsResourceUpdateProperties withResourceState(ResourceState resourceState) {
        this.resourceState = resourceState;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (openAIProfile() != null) {
            openAIProfile().validate();
        }
        if (amlProfile() != null) {
            amlProfile().validate();
        }
        if (fabricProfile() != null) {
            fabricProfile().validate();
        }
        if (userManagedOpenAIProfile() != null) {
            userManagedOpenAIProfile().validate();
        }
        if (denyAssignmentExclusions() != null) {
            denyAssignmentExclusions().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("version", this.version);
        jsonWriter.writeBooleanField("enableTeamsNotification", this.enableTeamsNotification);
        jsonWriter.writeBooleanField("enableCopilot", this.enableCopilot);
        jsonWriter.writeBooleanField("enableDiagnosticSettings", this.enableDiagnosticSettings);
        jsonWriter.writeJsonField("openAIProfile", this.openAIProfile);
        jsonWriter.writeJsonField("amlProfile", this.amlProfile);
        jsonWriter.writeJsonField("fabricProfile", this.fabricProfile);
        jsonWriter.writeJsonField("userManagedOpenAIProfile", this.userManagedOpenAIProfile);
        jsonWriter.writeArrayField("denyAssignmentExclusions", this.denyAssignmentExclusions,
            (writer, element) -> writer.writeJson(element));
        jsonWriter.writeStringField("resourceState", this.resourceState == null ? null : this.resourceState.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MdsResourceUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MdsResourceUpdateProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MdsResourceUpdateProperties.
     */
    public static MdsResourceUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MdsResourceUpdateProperties deserializedMdsResourceUpdateProperties = new MdsResourceUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("version".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.version = reader.getString();
                } else if ("enableTeamsNotification".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.enableTeamsNotification
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableCopilot".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.enableCopilot = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableDiagnosticSettings".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.enableDiagnosticSettings
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("openAIProfile".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.openAIProfile = OpenAIProfile.fromJson(reader);
                } else if ("amlProfile".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.amlProfile = AmlProfileUpdate.fromJson(reader);
                } else if ("fabricProfile".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.fabricProfile = FabricProfileUpdate.fromJson(reader);
                } else if ("userManagedOpenAIProfile".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.userManagedOpenAIProfile
                        = UserManagedOpenAIProfileUpdate.fromJson(reader);
                } else if ("denyAssignmentExclusions".equals(fieldName)) {
                    List<DenyAssignmentExclusion> denyAssignmentExclusions
                        = reader.readArray(reader1 -> DenyAssignmentExclusion.fromJson(reader1));
                    deserializedMdsResourceUpdateProperties.denyAssignmentExclusions = denyAssignmentExclusions;
                } else if ("resourceState".equals(fieldName)) {
                    deserializedMdsResourceUpdateProperties.resourceState
                        = ResourceState.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMdsResourceUpdateProperties;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.manufacturingplatform.generated;

import com.azure.resourcemanager.manufacturingplatform.models.CmkProfile;
import com.azure.resourcemanager.manufacturingplatform.models.DenyAssignmentExclusion;
import com.azure.resourcemanager.manufacturingplatform.models.FabricProfile;
import com.azure.resourcemanager.manufacturingplatform.models.ManagedServiceIdentity;
import com.azure.resourcemanager.manufacturingplatform.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.manufacturingplatform.models.MdsResourceProperties;
import com.azure.resourcemanager.manufacturingplatform.models.OpenAIProfile;
import com.azure.resourcemanager.manufacturingplatform.models.RedundancyState;
import com.azure.resourcemanager.manufacturingplatform.models.ResourceState;
import com.azure.resourcemanager.manufacturingplatform.models.Sku;
import com.azure.resourcemanager.manufacturingplatform.models.SkuTier;
import com.azure.resourcemanager.manufacturingplatform.models.UserAssignedIdentity;
import com.azure.resourcemanager.manufacturingplatform.models.UserManagedOpenAIProfile;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for ManufacturingDataServices CreateOrUpdate.
 */
public final class ManufacturingDataServicesCreateOrUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/manufacturingplatform/resource-manager/Microsoft.ManufacturingPlatform/stable/2025-03-01/examples/
     * ManufacturingDataServices_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: ManufacturingDataServices_CreateOrUpdate_MaximumSet.
     * 
     * @param manager Entry point to ManufacturingplatformManager.
     */
    public static void manufacturingDataServicesCreateOrUpdateMaximumSet(
        com.azure.resourcemanager.manufacturingplatform.ManufacturingplatformManager manager) {
        manager.manufacturingDataServices()
            .define("-JC180-G53HQ-DV45--2")
            .withRegion("tehys")
            .withExistingResourceGroup("rgmanufacturingplatform")
            .withTags(mapOf("key9958", "fakeTokenPlaceholder"))
            .withProperties(new MdsResourceProperties().withVersion("edudfrrjbywcurasjbnjwtdkflk")
                .withEnableCopilot(true)
                .withEnableDiagnosticSettings(true)
                .withAadApplicationId("cBaEC5DF-CEaB-Ddae-ecbD-1Afabbd6DAe3")
                .withAksAdminGroupId("dccAbeC7-84Eb-cbde-02Bd-B2cdfcaebb0D")
                .withOpenAIProfile(new OpenAIProfile().withGptModelName("dsbzdlz")
                    .withGptModelVersion("zvhjpcupzpgcwfooqynjsnexzb")
                    .withGptModelCapacity(17)
                    .withGptModelSkuName("okujmvpatodobzxiagptxmcmzlfu")
                    .withEmbeddingModelName("gvmbmegz")
                    .withEmbeddingModelVersion("jcywywrzkspz")
                    .withEmbeddingModelSkuName("ptrebrxvcytfvutzysjbsiepenjkbz")
                    .withEmbeddingModelCapacity(16))
                .withCmkProfile(new CmkProfile().withKeyUri("fakeTokenPlaceholder"))
                .withFabricProfile(
                    new FabricProfile().withKeyUri("fakeTokenPlaceholder").withOneLakeUri("wir").withOneLakePath("yy"))
                .withUserManagedOpenAIProfile(new UserManagedOpenAIProfile().withId("debpgpsj")
                    .withGptModelDeploymentName("vtflduhntrh")
                    .withEmbeddingModelDeploymentName("kvrtq"))
                .withDenyAssignmentExclusions(Arrays
                    .asList(new DenyAssignmentExclusion().withId("jgkmcnaiascxqner").withType("pkwxzngyovmeunimdk")))
                .withResourceState(ResourceState.ACTIVE)
                .withRedundancyState(RedundancyState.ZONAL))
            .withIdentity(new ManagedServiceIdentity().withType(ManagedServiceIdentityType.NONE)
                .withUserAssignedIdentities(mapOf("key3165", new UserAssignedIdentity())))
            .withSku(new Sku().withName("fdspjymsjulumvnbml")
                .withTier(SkuTier.FREE)
                .withSize("loyqckvl")
                .withFamily("rjuwebwtvuivyjypcee")
                .withCapacity(2))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

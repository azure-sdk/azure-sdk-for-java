// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SessionHostConfigurationsOperationStatus. */
public interface SessionHostConfigurationsOperationStatus {
    /**
     * Get Operation status for SessionHostManagement.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param operationId The Guid of the operation status.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement along with {@link Response}.
     */
    Response<SessionHostConfigurationOperationStatus> getWithResponse(
        String resourceGroupName, String hostPoolName, String operationId, Context context);

    /**
     * Get Operation status for SessionHostManagement.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param operationId The Guid of the operation status.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement.
     */
    SessionHostConfigurationOperationStatus get(String resourceGroupName, String hostPoolName, String operationId);

    /**
     * Get Operation status for SessionHostConfiguration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostConfiguration as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SessionHostConfigurationOperationStatus> list(String resourceGroupName, String hostPoolName);

    /**
     * Get Operation status for SessionHostConfiguration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param isLatest Returns the most recent sessionHostConfiguration operation.
     * @param isNonTerminal Returns currently running operations. Ignored if 'isLatest' is true.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostConfiguration as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SessionHostConfigurationOperationStatus> list(
        String resourceGroupName, String hostPoolName, Boolean isLatest, Boolean isNonTerminal, Context context);
}

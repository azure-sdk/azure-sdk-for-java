// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Image configurations of session host in a HostPool.
 */
@Fluent
public final class ImageInfoProperties {
    /*
     * The type of image session hosts use in the hostpool.
     */
    @JsonProperty(value = "type", required = true)
    private Type type;

    /*
     * The values to uniquely identify a marketplace image. Only one should be populated based on the image type.
     */
    @JsonProperty(value = "marketplaceInfo")
    private MarketplaceInfoProperties marketplaceInfo;

    /*
     * The values to uniquely identify a custom image. Only one should be populated based on the image type.
     */
    @JsonProperty(value = "customInfo")
    private CustomInfoProperties customInfo;

    /**
     * Creates an instance of ImageInfoProperties class.
     */
    public ImageInfoProperties() {
    }

    /**
     * Get the type property: The type of image session hosts use in the hostpool.
     * 
     * @return the type value.
     */
    public Type type() {
        return this.type;
    }

    /**
     * Set the type property: The type of image session hosts use in the hostpool.
     * 
     * @param type the type value to set.
     * @return the ImageInfoProperties object itself.
     */
    public ImageInfoProperties withType(Type type) {
        this.type = type;
        return this;
    }

    /**
     * Get the marketplaceInfo property: The values to uniquely identify a marketplace image. Only one should be
     * populated based on the image type.
     * 
     * @return the marketplaceInfo value.
     */
    public MarketplaceInfoProperties marketplaceInfo() {
        return this.marketplaceInfo;
    }

    /**
     * Set the marketplaceInfo property: The values to uniquely identify a marketplace image. Only one should be
     * populated based on the image type.
     * 
     * @param marketplaceInfo the marketplaceInfo value to set.
     * @return the ImageInfoProperties object itself.
     */
    public ImageInfoProperties withMarketplaceInfo(MarketplaceInfoProperties marketplaceInfo) {
        this.marketplaceInfo = marketplaceInfo;
        return this;
    }

    /**
     * Get the customInfo property: The values to uniquely identify a custom image. Only one should be populated based
     * on the image type.
     * 
     * @return the customInfo value.
     */
    public CustomInfoProperties customInfo() {
        return this.customInfo;
    }

    /**
     * Set the customInfo property: The values to uniquely identify a custom image. Only one should be populated based
     * on the image type.
     * 
     * @param customInfo the customInfo value to set.
     * @return the ImageInfoProperties object itself.
     */
    public ImageInfoProperties withCustomInfo(CustomInfoProperties customInfo) {
        this.customInfo = customInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw LOGGER.logExceptionAsError(
                new IllegalArgumentException("Missing required property type in model ImageInfoProperties"));
        }
        if (marketplaceInfo() != null) {
            marketplaceInfo().validate();
        }
        if (customInfo() != null) {
            customInfo().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ImageInfoProperties.class);
}

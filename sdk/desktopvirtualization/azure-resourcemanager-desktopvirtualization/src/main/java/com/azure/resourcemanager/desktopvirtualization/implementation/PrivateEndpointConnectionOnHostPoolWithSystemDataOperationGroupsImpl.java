// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.fluent.PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsClient;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.PrivateEndpointConnectionOnHostPoolWithSystemDataInner;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointConnectionOnHostPoolWithSystemData;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroups;

public final class PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsImpl
    implements PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroups {
    private static final ClientLogger LOGGER
        = new ClientLogger(PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsImpl.class);

    private final PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsClient innerClient;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsImpl(
        PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsClient innerClient,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemData> listByHostPool(String resourceGroupName,
        String hostPoolName) {
        PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemDataInner> inner
            = this.serviceClient().listByHostPool(resourceGroupName, hostPoolName);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemData> listByHostPool(String resourceGroupName,
        String hostPoolName, Integer pageSize, Boolean isDescending, Integer initialSkip, Context context) {
        PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemDataInner> inner = this.serviceClient()
            .listByHostPool(resourceGroupName, hostPoolName, pageSize, isDescending, initialSkip, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner1, this.manager()));
    }

    public Response<PrivateEndpointConnectionOnHostPoolWithSystemData> getByHostPoolWithResponse(
        String resourceGroupName, String hostPoolName, String privateEndpointConnectionName, Context context) {
        Response<PrivateEndpointConnectionOnHostPoolWithSystemDataInner> inner = this.serviceClient()
            .getByHostPoolWithResponse(resourceGroupName, hostPoolName, privateEndpointConnectionName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateEndpointConnectionOnHostPoolWithSystemData getByHostPool(String resourceGroupName,
        String hostPoolName, String privateEndpointConnectionName) {
        PrivateEndpointConnectionOnHostPoolWithSystemDataInner inner
            = this.serviceClient().getByHostPool(resourceGroupName, hostPoolName, privateEndpointConnectionName);
        if (inner != null) {
            return new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PrivateEndpointConnectionOnHostPoolWithSystemData> updateByHostPoolWithResponse(
        String resourceGroupName, String hostPoolName, String privateEndpointConnectionName,
        PrivateEndpointConnectionOnHostPoolWithSystemDataInner resource, Context context) {
        Response<PrivateEndpointConnectionOnHostPoolWithSystemDataInner> inner = this.serviceClient()
            .updateByHostPoolWithResponse(resourceGroupName, hostPoolName, privateEndpointConnectionName, resource,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateEndpointConnectionOnHostPoolWithSystemData updateByHostPool(String resourceGroupName,
        String hostPoolName, String privateEndpointConnectionName,
        PrivateEndpointConnectionOnHostPoolWithSystemDataInner resource) {
        PrivateEndpointConnectionOnHostPoolWithSystemDataInner inner = this.serviceClient()
            .updateByHostPool(resourceGroupName, hostPoolName, privateEndpointConnectionName, resource);
        if (inner != null) {
            return new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByHostPoolWithResponse(String resourceGroupName, String hostPoolName,
        String privateEndpointConnectionName, Context context) {
        return this.serviceClient()
            .deleteByHostPoolWithResponse(resourceGroupName, hostPoolName, privateEndpointConnectionName, context);
    }

    public void deleteByHostPool(String resourceGroupName, String hostPoolName, String privateEndpointConnectionName) {
        this.serviceClient().deleteByHostPool(resourceGroupName, hostPoolName, privateEndpointConnectionName);
    }

    private PrivateEndpointConnectionOnHostPoolWithSystemDataOperationGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}

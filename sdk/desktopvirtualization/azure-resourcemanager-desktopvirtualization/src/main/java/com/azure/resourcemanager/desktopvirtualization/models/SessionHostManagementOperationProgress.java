// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * SessionHostManagement Operation Progress information.
 */
@Fluent
public final class SessionHostManagementOperationProgress {
    /*
     * Time that the sessionHostManagement operation was created.
     */
    @JsonProperty(value = "executionStartTime")
    private OffsetDateTime executionStartTime;

    /*
     * The number of sessionHosts to be started in the sessionHostManagement operation.
     */
    @JsonProperty(value = "totalSessionHosts")
    private Integer totalSessionHosts;

    /*
     * The number of sessionHosts in progress in the sessionHostManagement operation.
     */
    @JsonProperty(value = "sessionHostsInProgress")
    private Integer sessionHostsInProgress;

    /*
     * The number of sessionHosts completed in the sessionHostManagement operation.
     */
    @JsonProperty(value = "sessionHostsCompleted")
    private Integer sessionHostsCompleted;

    /*
     * The number of sessionHosts rollback failed in the sessionHostManagement operation.
     */
    @JsonProperty(value = "sessionHostsRollbackFailed")
    private Integer sessionHostsRollbackFailed;

    /**
     * Creates an instance of SessionHostManagementOperationProgress class.
     */
    public SessionHostManagementOperationProgress() {
    }

    /**
     * Get the executionStartTime property: Time that the sessionHostManagement operation was created.
     * 
     * @return the executionStartTime value.
     */
    public OffsetDateTime executionStartTime() {
        return this.executionStartTime;
    }

    /**
     * Set the executionStartTime property: Time that the sessionHostManagement operation was created.
     * 
     * @param executionStartTime the executionStartTime value to set.
     * @return the SessionHostManagementOperationProgress object itself.
     */
    public SessionHostManagementOperationProgress withExecutionStartTime(OffsetDateTime executionStartTime) {
        this.executionStartTime = executionStartTime;
        return this;
    }

    /**
     * Get the totalSessionHosts property: The number of sessionHosts to be started in the sessionHostManagement
     * operation.
     * 
     * @return the totalSessionHosts value.
     */
    public Integer totalSessionHosts() {
        return this.totalSessionHosts;
    }

    /**
     * Set the totalSessionHosts property: The number of sessionHosts to be started in the sessionHostManagement
     * operation.
     * 
     * @param totalSessionHosts the totalSessionHosts value to set.
     * @return the SessionHostManagementOperationProgress object itself.
     */
    public SessionHostManagementOperationProgress withTotalSessionHosts(Integer totalSessionHosts) {
        this.totalSessionHosts = totalSessionHosts;
        return this;
    }

    /**
     * Get the sessionHostsInProgress property: The number of sessionHosts in progress in the sessionHostManagement
     * operation.
     * 
     * @return the sessionHostsInProgress value.
     */
    public Integer sessionHostsInProgress() {
        return this.sessionHostsInProgress;
    }

    /**
     * Set the sessionHostsInProgress property: The number of sessionHosts in progress in the sessionHostManagement
     * operation.
     * 
     * @param sessionHostsInProgress the sessionHostsInProgress value to set.
     * @return the SessionHostManagementOperationProgress object itself.
     */
    public SessionHostManagementOperationProgress withSessionHostsInProgress(Integer sessionHostsInProgress) {
        this.sessionHostsInProgress = sessionHostsInProgress;
        return this;
    }

    /**
     * Get the sessionHostsCompleted property: The number of sessionHosts completed in the sessionHostManagement
     * operation.
     * 
     * @return the sessionHostsCompleted value.
     */
    public Integer sessionHostsCompleted() {
        return this.sessionHostsCompleted;
    }

    /**
     * Set the sessionHostsCompleted property: The number of sessionHosts completed in the sessionHostManagement
     * operation.
     * 
     * @param sessionHostsCompleted the sessionHostsCompleted value to set.
     * @return the SessionHostManagementOperationProgress object itself.
     */
    public SessionHostManagementOperationProgress withSessionHostsCompleted(Integer sessionHostsCompleted) {
        this.sessionHostsCompleted = sessionHostsCompleted;
        return this;
    }

    /**
     * Get the sessionHostsRollbackFailed property: The number of sessionHosts rollback failed in the
     * sessionHostManagement operation.
     * 
     * @return the sessionHostsRollbackFailed value.
     */
    public Integer sessionHostsRollbackFailed() {
        return this.sessionHostsRollbackFailed;
    }

    /**
     * Set the sessionHostsRollbackFailed property: The number of sessionHosts rollback failed in the
     * sessionHostManagement operation.
     * 
     * @param sessionHostsRollbackFailed the sessionHostsRollbackFailed value to set.
     * @return the SessionHostManagementOperationProgress object itself.
     */
    public SessionHostManagementOperationProgress withSessionHostsRollbackFailed(Integer sessionHostsRollbackFailed) {
        this.sessionHostsRollbackFailed = sessionHostsRollbackFailed;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

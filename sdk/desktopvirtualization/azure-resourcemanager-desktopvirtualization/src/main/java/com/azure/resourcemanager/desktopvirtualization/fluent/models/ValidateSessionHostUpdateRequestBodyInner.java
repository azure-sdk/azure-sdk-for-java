// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Object containing the definition for properties to be used in the sessionHostUpdate validation. */
@Fluent
public final class ValidateSessionHostUpdateRequestBodyInner {
    /*
     * Object containing the definition for the SessionHostConfiguration to be validated.  If none is provided the
     * update will use the SessionHostConfiguration settings associated with the HostPool.
     */
    @JsonProperty(value = "sessionHostConfiguration")
    private SessionHostConfigurationInner sessionHostConfiguration;

    /*
     * Object containing the definition for the SessionHostManagement to be validated. If none is provided the update
     * will use the settings saved in the sessionHostManagement object.
     */
    @JsonProperty(value = "sessionHostManagement")
    private SessionHostManagementInner sessionHostManagement;

    /*
     * The timestamp that the update validation is scheduled for. If none is provided, the update will be executed
     * immediately
     */
    @JsonProperty(value = "scheduledDateTime")
    private OffsetDateTime scheduledDateTime;

    /** Creates an instance of ValidateSessionHostUpdateRequestBodyInner class. */
    public ValidateSessionHostUpdateRequestBodyInner() {
    }

    /**
     * Get the sessionHostConfiguration property: Object containing the definition for the SessionHostConfiguration to
     * be validated. If none is provided the update will use the SessionHostConfiguration settings associated with the
     * HostPool.
     *
     * @return the sessionHostConfiguration value.
     */
    public SessionHostConfigurationInner sessionHostConfiguration() {
        return this.sessionHostConfiguration;
    }

    /**
     * Set the sessionHostConfiguration property: Object containing the definition for the SessionHostConfiguration to
     * be validated. If none is provided the update will use the SessionHostConfiguration settings associated with the
     * HostPool.
     *
     * @param sessionHostConfiguration the sessionHostConfiguration value to set.
     * @return the ValidateSessionHostUpdateRequestBodyInner object itself.
     */
    public ValidateSessionHostUpdateRequestBodyInner withSessionHostConfiguration(
        SessionHostConfigurationInner sessionHostConfiguration) {
        this.sessionHostConfiguration = sessionHostConfiguration;
        return this;
    }

    /**
     * Get the sessionHostManagement property: Object containing the definition for the SessionHostManagement to be
     * validated. If none is provided the update will use the settings saved in the sessionHostManagement object.
     *
     * @return the sessionHostManagement value.
     */
    public SessionHostManagementInner sessionHostManagement() {
        return this.sessionHostManagement;
    }

    /**
     * Set the sessionHostManagement property: Object containing the definition for the SessionHostManagement to be
     * validated. If none is provided the update will use the settings saved in the sessionHostManagement object.
     *
     * @param sessionHostManagement the sessionHostManagement value to set.
     * @return the ValidateSessionHostUpdateRequestBodyInner object itself.
     */
    public ValidateSessionHostUpdateRequestBodyInner withSessionHostManagement(
        SessionHostManagementInner sessionHostManagement) {
        this.sessionHostManagement = sessionHostManagement;
        return this;
    }

    /**
     * Get the scheduledDateTime property: The timestamp that the update validation is scheduled for. If none is
     * provided, the update will be executed immediately.
     *
     * @return the scheduledDateTime value.
     */
    public OffsetDateTime scheduledDateTime() {
        return this.scheduledDateTime;
    }

    /**
     * Set the scheduledDateTime property: The timestamp that the update validation is scheduled for. If none is
     * provided, the update will be executed immediately.
     *
     * @param scheduledDateTime the scheduledDateTime value to set.
     * @return the ValidateSessionHostUpdateRequestBodyInner object itself.
     */
    public ValidateSessionHostUpdateRequestBodyInner withScheduledDateTime(OffsetDateTime scheduledDateTime) {
        this.scheduledDateTime = scheduledDateTime;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sessionHostConfiguration() != null) {
            sessionHostConfiguration().validate();
        }
        if (sessionHostManagement() != null) {
            sessionHostManagement().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Schema for patchable fields on an App Attach Package.
 */
@Fluent
public final class AppAttachPackagePatchProperties {
    /*
     * Detailed properties for App Attach Package
     */
    @JsonProperty(value = "image")
    private AppAttachPackageInfoProperties image;

    /*
     * List of Hostpool resource Ids.
     */
    @JsonProperty(value = "hostPoolReferences")
    private List<String> hostPoolReferences;

    /*
     * URL of keyvault location to store certificate
     */
    @JsonProperty(value = "keyVaultURL")
    private String keyVaultUrl;

    /*
     * Parameter indicating how the health check should behave if this package fails staging
     */
    @JsonProperty(value = "failHealthCheckOnStagingFailure")
    private FailHealthCheckOnStagingFailure failHealthCheckOnStagingFailure;

    /*
     * Lookback url to third party control plane, should be null for first party packages
     */
    @JsonProperty(value = "packageLookbackUrl")
    private String packageLookbackUrl;

    /*
     * Field that can be populated with custom data and filtered on in list GET calls
     */
    @JsonProperty(value = "customData")
    private String customData;

    /**
     * Creates an instance of AppAttachPackagePatchProperties class.
     */
    public AppAttachPackagePatchProperties() {
    }

    /**
     * Get the image property: Detailed properties for App Attach Package.
     * 
     * @return the image value.
     */
    public AppAttachPackageInfoProperties image() {
        return this.image;
    }

    /**
     * Set the image property: Detailed properties for App Attach Package.
     * 
     * @param image the image value to set.
     * @return the AppAttachPackagePatchProperties object itself.
     */
    public AppAttachPackagePatchProperties withImage(AppAttachPackageInfoProperties image) {
        this.image = image;
        return this;
    }

    /**
     * Get the hostPoolReferences property: List of Hostpool resource Ids.
     * 
     * @return the hostPoolReferences value.
     */
    public List<String> hostPoolReferences() {
        return this.hostPoolReferences;
    }

    /**
     * Set the hostPoolReferences property: List of Hostpool resource Ids.
     * 
     * @param hostPoolReferences the hostPoolReferences value to set.
     * @return the AppAttachPackagePatchProperties object itself.
     */
    public AppAttachPackagePatchProperties withHostPoolReferences(List<String> hostPoolReferences) {
        this.hostPoolReferences = hostPoolReferences;
        return this;
    }

    /**
     * Get the keyVaultUrl property: URL of keyvault location to store certificate.
     * 
     * @return the keyVaultUrl value.
     */
    public String keyVaultUrl() {
        return this.keyVaultUrl;
    }

    /**
     * Set the keyVaultUrl property: URL of keyvault location to store certificate.
     * 
     * @param keyVaultUrl the keyVaultUrl value to set.
     * @return the AppAttachPackagePatchProperties object itself.
     */
    public AppAttachPackagePatchProperties withKeyVaultUrl(String keyVaultUrl) {
        this.keyVaultUrl = keyVaultUrl;
        return this;
    }

    /**
     * Get the failHealthCheckOnStagingFailure property: Parameter indicating how the health check should behave if
     * this package fails staging.
     * 
     * @return the failHealthCheckOnStagingFailure value.
     */
    public FailHealthCheckOnStagingFailure failHealthCheckOnStagingFailure() {
        return this.failHealthCheckOnStagingFailure;
    }

    /**
     * Set the failHealthCheckOnStagingFailure property: Parameter indicating how the health check should behave if
     * this package fails staging.
     * 
     * @param failHealthCheckOnStagingFailure the failHealthCheckOnStagingFailure value to set.
     * @return the AppAttachPackagePatchProperties object itself.
     */
    public AppAttachPackagePatchProperties
        withFailHealthCheckOnStagingFailure(FailHealthCheckOnStagingFailure failHealthCheckOnStagingFailure) {
        this.failHealthCheckOnStagingFailure = failHealthCheckOnStagingFailure;
        return this;
    }

    /**
     * Get the packageLookbackUrl property: Lookback url to third party control plane, should be null for first party
     * packages.
     * 
     * @return the packageLookbackUrl value.
     */
    public String packageLookbackUrl() {
        return this.packageLookbackUrl;
    }

    /**
     * Set the packageLookbackUrl property: Lookback url to third party control plane, should be null for first party
     * packages.
     * 
     * @param packageLookbackUrl the packageLookbackUrl value to set.
     * @return the AppAttachPackagePatchProperties object itself.
     */
    public AppAttachPackagePatchProperties withPackageLookbackUrl(String packageLookbackUrl) {
        this.packageLookbackUrl = packageLookbackUrl;
        return this;
    }

    /**
     * Get the customData property: Field that can be populated with custom data and filtered on in list GET calls.
     * 
     * @return the customData value.
     */
    public String customData() {
        return this.customData;
    }

    /**
     * Set the customData property: Field that can be populated with custom data and filtered on in list GET calls.
     * 
     * @param customData the customData value to set.
     * @return the AppAttachPackagePatchProperties object itself.
     */
    public AppAttachPackagePatchProperties withCustomData(String customData) {
        this.customData = customData;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (image() != null) {
            image().validate();
        }
    }
}

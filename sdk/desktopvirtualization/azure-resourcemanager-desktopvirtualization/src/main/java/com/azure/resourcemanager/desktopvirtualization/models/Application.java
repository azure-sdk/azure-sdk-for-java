// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ApplicationInner;
import java.util.Map;

/**
 * An immutable client-side representation of Application.
 */
public interface Application {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the properties property: Detailed properties for Application.
     * 
     * @return the properties value.
     */
    ApplicationProperties properties();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.desktopvirtualization.fluent.models.ApplicationInner object.
     * 
     * @return the inner object.
     */
    ApplicationInner innerModel();

    /**
     * The entirety of the Application definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithParentResource,
        DefinitionStages.WithProperties, DefinitionStages.WithCreate {
    }

    /**
     * The Application definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the Application definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the Application definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, applicationGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param applicationGroupName The name of the application group.
             * @return the next definition stage.
             */
            WithProperties withExistingApplicationGroup(String resourceGroupName, String applicationGroupName);
        }

        /**
         * The stage of the Application definition allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Detailed properties for Application.
             * 
             * @param properties Detailed properties for Application.
             * @return the next definition stage.
             */
            WithCreate withProperties(ApplicationProperties properties);
        }

        /**
         * The stage of the Application definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            Application create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Application create(Context context);
        }
    }

    /**
     * Begins update for the Application resource.
     * 
     * @return the stage of resource update.
     */
    Application.Update update();

    /**
     * The template for Application update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        Application apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Application apply(Context context);
    }

    /**
     * The Application update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the Application update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: tags to be updated.
             * 
             * @param tags tags to be updated.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the Application update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Detailed properties for Application.
             * 
             * @param properties Detailed properties for Application.
             * @return the next definition stage.
             */
            Update withProperties(ApplicationPatchProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    Application refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Application refresh(Context context);
}

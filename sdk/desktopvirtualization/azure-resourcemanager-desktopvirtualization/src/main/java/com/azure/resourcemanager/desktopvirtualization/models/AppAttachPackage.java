// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.AppAttachPackageInner;
import java.util.List;
import java.util.Map;

/**
 * An immutable client-side representation of AppAttachPackage.
 */
public interface AppAttachPackage {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The provisioning state of the App Attach Package.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the image property: Detailed properties for App Attach Package.
     * 
     * @return the image value.
     */
    AppAttachPackageInfoProperties image();

    /**
     * Gets the hostPoolReferences property: List of Hostpool resource Ids.
     * 
     * @return the hostPoolReferences value.
     */
    List<String> hostPoolReferences();

    /**
     * Gets the keyVaultUrl property: URL path to certificate name located in keyVault.
     * 
     * @return the keyVaultUrl value.
     */
    String keyVaultUrl();

    /**
     * Gets the failHealthCheckOnStagingFailure property: Parameter indicating how the health check should behave if
     * this package fails staging.
     * 
     * @return the failHealthCheckOnStagingFailure value.
     */
    FailHealthCheckOnStagingFailure failHealthCheckOnStagingFailure();

    /**
     * Gets the packageOwnerName property: Specific name of package owner, is "AppAttach" for native app attach
     * packages.
     * 
     * @return the packageOwnerName value.
     */
    String packageOwnerName();

    /**
     * Gets the packageLookbackUrl property: Lookback url to third party control plane, is null for native app attach
     * packages.
     * 
     * @return the packageLookbackUrl value.
     */
    String packageLookbackUrl();

    /**
     * Gets the customData property: Field that can be populated with custom data and filtered on in list GET calls.
     * 
     * @return the customData value.
     */
    String customData();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.desktopvirtualization.fluent.models.AppAttachPackageInner object.
     * 
     * @return the inner object.
     */
    AppAttachPackageInner innerModel();

    /**
     * The entirety of the AppAttachPackage definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * The AppAttachPackage definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the AppAttachPackage definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify parent resource.
         */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }

        /**
         * The stage of the AppAttachPackage definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithImage,
            DefinitionStages.WithHostPoolReferences, DefinitionStages.WithKeyVaultUrl,
            DefinitionStages.WithFailHealthCheckOnStagingFailure, DefinitionStages.WithPackageOwnerName,
            DefinitionStages.WithPackageLookbackUrl, DefinitionStages.WithCustomData {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            AppAttachPackage create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AppAttachPackage create(Context context);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify image.
         */
        interface WithImage {
            /**
             * Specifies the image property: Detailed properties for App Attach Package.
             * 
             * @param image Detailed properties for App Attach Package.
             * @return the next definition stage.
             */
            WithCreate withImage(AppAttachPackageInfoProperties image);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify hostPoolReferences.
         */
        interface WithHostPoolReferences {
            /**
             * Specifies the hostPoolReferences property: List of Hostpool resource Ids..
             * 
             * @param hostPoolReferences List of Hostpool resource Ids.
             * @return the next definition stage.
             */
            WithCreate withHostPoolReferences(List<String> hostPoolReferences);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify keyVaultUrl.
         */
        interface WithKeyVaultUrl {
            /**
             * Specifies the keyVaultUrl property: URL path to certificate name located in keyVault.
             * 
             * @param keyVaultUrl URL path to certificate name located in keyVault.
             * @return the next definition stage.
             */
            WithCreate withKeyVaultUrl(String keyVaultUrl);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify failHealthCheckOnStagingFailure.
         */
        interface WithFailHealthCheckOnStagingFailure {
            /**
             * Specifies the failHealthCheckOnStagingFailure property: Parameter indicating how the health check should
             * behave if this package fails staging.
             * 
             * @param failHealthCheckOnStagingFailure Parameter indicating how the health check should behave if this
             * package fails staging.
             * @return the next definition stage.
             */
            WithCreate
                withFailHealthCheckOnStagingFailure(FailHealthCheckOnStagingFailure failHealthCheckOnStagingFailure);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify packageOwnerName.
         */
        interface WithPackageOwnerName {
            /**
             * Specifies the packageOwnerName property: Specific name of package owner, is "AppAttach" for native app
             * attach packages.
             * 
             * @param packageOwnerName Specific name of package owner, is "AppAttach" for native app attach packages.
             * @return the next definition stage.
             */
            WithCreate withPackageOwnerName(String packageOwnerName);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify packageLookbackUrl.
         */
        interface WithPackageLookbackUrl {
            /**
             * Specifies the packageLookbackUrl property: Lookback url to third party control plane, is null for native
             * app attach packages.
             * 
             * @param packageLookbackUrl Lookback url to third party control plane, is null for native app attach
             * packages.
             * @return the next definition stage.
             */
            WithCreate withPackageLookbackUrl(String packageLookbackUrl);
        }

        /**
         * The stage of the AppAttachPackage definition allowing to specify customData.
         */
        interface WithCustomData {
            /**
             * Specifies the customData property: Field that can be populated with custom data and filtered on in list
             * GET calls.
             * 
             * @param customData Field that can be populated with custom data and filtered on in list GET calls.
             * @return the next definition stage.
             */
            WithCreate withCustomData(String customData);
        }
    }

    /**
     * Begins update for the AppAttachPackage resource.
     * 
     * @return the stage of resource update.
     */
    AppAttachPackage.Update update();

    /**
     * The template for AppAttachPackage update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        AppAttachPackage apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AppAttachPackage apply(Context context);
    }

    /**
     * The AppAttachPackage update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the AppAttachPackage update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: tags to be updated.
             * 
             * @param tags tags to be updated.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AppAttachPackage update allowing to specify properties.
         */
        interface WithProperties {
            /**
             * Specifies the properties property: Detailed properties for App Attach Package.
             * 
             * @param properties Detailed properties for App Attach Package.
             * @return the next definition stage.
             */
            Update withProperties(AppAttachPackagePatchProperties properties);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    AppAttachPackage refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AppAttachPackage refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ApplicationInner;
import com.azure.resourcemanager.desktopvirtualization.models.Application;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationPatch;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationPatchProperties;
import com.azure.resourcemanager.desktopvirtualization.models.ApplicationProperties;
import java.util.Map;

public final class ApplicationImpl implements Application, Application.Definition, Application.Update {
    private ApplicationInner innerObject;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ApplicationProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApplicationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String applicationGroupName;

    private String applicationName;

    private ApplicationPatch updateProperties;

    public ApplicationImpl withExistingApplicationGroup(String resourceGroupName, String applicationGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.applicationGroupName = applicationGroupName;
        return this;
    }

    public Application create() {
        this.innerObject = serviceManager.serviceClient()
            .getApplications()
            .createOrUpdateWithResponse(resourceGroupName, applicationGroupName, applicationName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public Application create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApplications()
            .createOrUpdateWithResponse(resourceGroupName, applicationGroupName, applicationName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    ApplicationImpl(String name,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerObject = new ApplicationInner();
        this.serviceManager = serviceManager;
        this.applicationName = name;
    }

    public ApplicationImpl update() {
        this.updateProperties = new ApplicationPatch();
        return this;
    }

    public Application apply() {
        this.innerObject = serviceManager.serviceClient()
            .getApplications()
            .updateWithResponse(resourceGroupName, applicationGroupName, applicationName, updateProperties,
                Context.NONE)
            .getValue();
        return this;
    }

    public Application apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApplications()
            .updateWithResponse(resourceGroupName, applicationGroupName, applicationName, updateProperties, context)
            .getValue();
        return this;
    }

    ApplicationImpl(ApplicationInner innerObject,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.applicationGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "applicationGroups");
        this.applicationName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "applications");
    }

    public Application refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getApplications()
            .getWithResponse(resourceGroupName, applicationGroupName, applicationName, Context.NONE)
            .getValue();
        return this;
    }

    public Application refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getApplications()
            .getWithResponse(resourceGroupName, applicationGroupName, applicationName, context)
            .getValue();
        return this;
    }

    public ApplicationImpl withProperties(ApplicationProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public ApplicationImpl withTags(Map<String, String> tags) {
        this.updateProperties.withTags(tags);
        return this;
    }

    public ApplicationImpl withProperties(ApplicationPatchProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }
}

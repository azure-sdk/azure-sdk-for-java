// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The resource model definition containing the full set of allowed properties for a resource. Except properties bag,
 * there cannot be a top level property outside of this set.
 */
@Fluent
public class ResourceModelWithAllowedPropertySet extends Resource {
    /*
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     */
    @JsonProperty(value = "managedBy")
    private String managedBy;

    /*
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. 
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * Managed service identity (system assigned and/or user assigned identities)
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /*
     * The resource model definition representing SKU
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /*
     * Plan for the resource.
     */
    @JsonProperty(value = "plan")
    private Plan plan;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of ResourceModelWithAllowedPropertySet class.
     */
    public ResourceModelWithAllowedPropertySet() {
    }

    /**
     * Get the managedBy property: The fully qualified resource ID of the resource that manages this resource. Indicates
     * if this resource is managed by another Azure resource. If this is present, complete mode deployment will not
     * delete the resource if it is removed from the template since it is managed by another resource.
     * 
     * @return the managedBy value.
     */
    public String managedBy() {
        return this.managedBy;
    }

    /**
     * Set the managedBy property: The fully qualified resource ID of the resource that manages this resource. Indicates
     * if this resource is managed by another Azure resource. If this is present, complete mode deployment will not
     * delete the resource if it is removed from the template since it is managed by another resource.
     * 
     * @param managedBy the managedBy value to set.
     * @return the ResourceModelWithAllowedPropertySet object itself.
     */
    public ResourceModelWithAllowedPropertySet withManagedBy(String managedBy) {
        this.managedBy = managedBy;
        return this;
    }

    /**
     * Get the kind property: Metadata used by portal/tooling/etc to render different UX experiences for resources of
     * the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type. If supported, the resource provider must
     * validate and persist this value.
     * 
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Metadata used by portal/tooling/etc to render different UX experiences for resources of
     * the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type. If supported, the resource provider must
     * validate and persist this value.
     * 
     * @param kind the kind value to set.
     * @return the ResourceModelWithAllowedPropertySet object itself.
     */
    public ResourceModelWithAllowedPropertySet withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the etag property: The etag field is *not* required. If it is provided in the response body, it must also be
     * provided as a header per the normal etag convention. Entity tags are used for comparing two or more entities from
     * the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24),
     * If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the identity property: Managed service identity (system assigned and/or user assigned identities).
     * 
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Managed service identity (system assigned and/or user assigned identities).
     * 
     * @param identity the identity value to set.
     * @return the ResourceModelWithAllowedPropertySet object itself.
     */
    public ResourceModelWithAllowedPropertySet withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the sku property: The resource model definition representing SKU.
     * 
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: The resource model definition representing SKU.
     * 
     * @param sku the sku value to set.
     * @return the ResourceModelWithAllowedPropertySet object itself.
     */
    public ResourceModelWithAllowedPropertySet withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the plan property: Plan for the resource.
     * 
     * @return the plan value.
     */
    public Plan plan() {
        return this.plan;
    }

    /**
     * Set the plan property: Plan for the resource.
     * 
     * @param plan the plan value to set.
     * @return the ResourceModelWithAllowedPropertySet object itself.
     */
    public ResourceModelWithAllowedPropertySet withPlan(Plan plan) {
        this.plan = plan;
        return this;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceModelWithAllowedPropertySet withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourceModelWithAllowedPropertySet withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (sku() != null) {
            sku().validate();
        }
        if (plan() != null) {
            plan().validate();
        }
    }
}

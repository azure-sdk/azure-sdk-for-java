// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.fluent.SessionHostConfigurationsOperationStatusClient;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.SessionHostConfigurationOperationStatusInner;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHostConfigurationOperationStatus;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHostConfigurationsOperationStatus;

public final class SessionHostConfigurationsOperationStatusImpl implements SessionHostConfigurationsOperationStatus {
    private static final ClientLogger LOGGER = new ClientLogger(SessionHostConfigurationsOperationStatusImpl.class);

    private final SessionHostConfigurationsOperationStatusClient innerClient;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public SessionHostConfigurationsOperationStatusImpl(
        SessionHostConfigurationsOperationStatusClient innerClient,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<SessionHostConfigurationOperationStatus> getWithResponse(
        String resourceGroupName, String hostPoolName, String operationId, Context context) {
        Response<SessionHostConfigurationOperationStatusInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, hostPoolName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SessionHostConfigurationOperationStatusImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SessionHostConfigurationOperationStatus get(
        String resourceGroupName, String hostPoolName, String operationId) {
        SessionHostConfigurationOperationStatusInner inner =
            this.serviceClient().get(resourceGroupName, hostPoolName, operationId);
        if (inner != null) {
            return new SessionHostConfigurationOperationStatusImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<SessionHostConfigurationOperationStatus> list(String resourceGroupName, String hostPoolName) {
        PagedIterable<SessionHostConfigurationOperationStatusInner> inner =
            this.serviceClient().list(resourceGroupName, hostPoolName);
        return Utils.mapPage(inner, inner1 -> new SessionHostConfigurationOperationStatusImpl(inner1, this.manager()));
    }

    public PagedIterable<SessionHostConfigurationOperationStatus> list(
        String resourceGroupName, String hostPoolName, Boolean isLatest, Boolean isNonTerminal, Context context) {
        PagedIterable<SessionHostConfigurationOperationStatusInner> inner =
            this.serviceClient().list(resourceGroupName, hostPoolName, isLatest, isNonTerminal, context);
        return Utils.mapPage(inner, inner1 -> new SessionHostConfigurationOperationStatusImpl(inner1, this.manager()));
    }

    private SessionHostConfigurationsOperationStatusClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}

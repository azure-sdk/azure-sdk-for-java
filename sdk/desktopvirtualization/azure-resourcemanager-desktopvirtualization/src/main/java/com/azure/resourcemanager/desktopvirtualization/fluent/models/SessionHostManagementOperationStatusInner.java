// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.models.OperationActionShm;
import com.azure.resourcemanager.desktopvirtualization.models.OperationTypeShm;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHostManagementOperationProgress;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * The current status of an async operation.
 */
@Fluent
public final class SessionHostManagementOperationStatusInner {
    /*
     * Fully qualified ID for the async operation.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Name of the async operation.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Operation status. Current defined values are < Scheduled | UpdatingSessionHosts | ValidatingSessionHostUpdate |
     * Paused | Pausing | Cancelling | Resuming | Starting > | Succeeded | Failed | Canceled
     */
    @JsonProperty(value = "status", required = true)
    private String status;

    /*
     * Percent of the operation that is complete.
     */
    @JsonProperty(value = "percentComplete")
    private Float percentComplete;

    /*
     * The start time of the operation.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * The end time of the operation.
     */
    @JsonProperty(value = "endTime")
    private OffsetDateTime endTime;

    /*
     * The operations list.
     */
    @JsonProperty(value = "operations")
    private List<SessionHostManagementOperationStatusInner> operations;

    /*
     * If present, details of the operation error.
     */
    @JsonProperty(value = "error")
    private ManagementError error;

    /*
     * The custom properties of the OperationStatus.
     */
    @JsonProperty(value = "properties")
    private SessionHostManagementOperationStatusPropertiesInner innerProperties;

    /**
     * Creates an instance of SessionHostManagementOperationStatusInner class.
     */
    public SessionHostManagementOperationStatusInner() {
    }

    /**
     * Get the id property: Fully qualified ID for the async operation.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Fully qualified ID for the async operation.
     * 
     * @param id the id value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Name of the async operation.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of the async operation.
     * 
     * @param name the name value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the status property: Operation status. Current defined values are &lt; Scheduled | UpdatingSessionHosts |
     * ValidatingSessionHostUpdate | Paused | Pausing | Cancelling | Resuming | Starting &gt; | Succeeded | Failed |
     * Canceled.
     * 
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status property: Operation status. Current defined values are &lt; Scheduled | UpdatingSessionHosts |
     * ValidatingSessionHostUpdate | Paused | Pausing | Cancelling | Resuming | Starting &gt; | Succeeded | Failed |
     * Canceled.
     * 
     * @param status the status value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get the percentComplete property: Percent of the operation that is complete.
     * 
     * @return the percentComplete value.
     */
    public Float percentComplete() {
        return this.percentComplete;
    }

    /**
     * Set the percentComplete property: Percent of the operation that is complete.
     * 
     * @param percentComplete the percentComplete value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withPercentComplete(Float percentComplete) {
        this.percentComplete = percentComplete;
        return this;
    }

    /**
     * Get the startTime property: The start time of the operation.
     * 
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The start time of the operation.
     * 
     * @param startTime the startTime value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the endTime property: The end time of the operation.
     * 
     * @return the endTime value.
     */
    public OffsetDateTime endTime() {
        return this.endTime;
    }

    /**
     * Set the endTime property: The end time of the operation.
     * 
     * @param endTime the endTime value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get the operations property: The operations list.
     * 
     * @return the operations value.
     */
    public List<SessionHostManagementOperationStatusInner> operations() {
        return this.operations;
    }

    /**
     * Set the operations property: The operations list.
     * 
     * @param operations the operations value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner
        withOperations(List<SessionHostManagementOperationStatusInner> operations) {
        this.operations = operations;
        return this;
    }

    /**
     * Get the error property: If present, details of the operation error.
     * 
     * @return the error value.
     */
    public ManagementError error() {
        return this.error;
    }

    /**
     * Set the error property: If present, details of the operation error.
     * 
     * @param error the error value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withError(ManagementError error) {
        this.error = error;
        return this;
    }

    /**
     * Get the innerProperties property: The custom properties of the OperationStatus.
     * 
     * @return the innerProperties value.
     */
    private SessionHostManagementOperationStatusPropertiesInner innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the correlationId property: The Log Analytics.
     * 
     * @return the correlationId value.
     */
    public String correlationId() {
        return this.innerProperties() == null ? null : this.innerProperties().correlationId();
    }

    /**
     * Set the correlationId property: The Log Analytics.
     * 
     * @param correlationId the correlationId value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withCorrelationId(String correlationId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SessionHostManagementOperationStatusPropertiesInner();
        }
        this.innerProperties().withCorrelationId(correlationId);
        return this;
    }

    /**
     * Get the type property: Type of sessionHostManagement operation.
     * 
     * @return the type value.
     */
    public OperationTypeShm type() {
        return this.innerProperties() == null ? null : this.innerProperties().type();
    }

    /**
     * Set the type property: Type of sessionHostManagement operation.
     * 
     * @param type the type value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withType(OperationTypeShm type) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SessionHostManagementOperationStatusPropertiesInner();
        }
        this.innerProperties().withType(type);
        return this;
    }

    /**
     * Get the action property: Action type of the current sessionHostManagement operation.
     * 
     * @return the action value.
     */
    public OperationActionShm action() {
        return this.innerProperties() == null ? null : this.innerProperties().action();
    }

    /**
     * Get the progress property: Progress information on the sessionHostManagement operation.
     * 
     * @return the progress value.
     */
    public SessionHostManagementOperationProgress progress() {
        return this.innerProperties() == null ? null : this.innerProperties().progress();
    }

    /**
     * Set the progress property: Progress information on the sessionHostManagement operation.
     * 
     * @param progress the progress value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withProgress(SessionHostManagementOperationProgress progress) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SessionHostManagementOperationStatusPropertiesInner();
        }
        this.innerProperties().withProgress(progress);
        return this;
    }

    /**
     * Get the scheduledDateTime property: The timestamp that the update is scheduled for.
     * 
     * @return the scheduledDateTime value.
     */
    public OffsetDateTime scheduledDateTime() {
        return this.innerProperties() == null ? null : this.innerProperties().scheduledDateTime();
    }

    /**
     * Set the scheduledDateTime property: The timestamp that the update is scheduled for.
     * 
     * @param scheduledDateTime the scheduledDateTime value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withScheduledDateTime(OffsetDateTime scheduledDateTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SessionHostManagementOperationStatusPropertiesInner();
        }
        this.innerProperties().withScheduledDateTime(scheduledDateTime);
        return this;
    }

    /**
     * Get the sessionHostManagement property: SessionHostManagement properties used for the operation.
     * 
     * @return the sessionHostManagement value.
     */
    public SessionHostManagementInner sessionHostManagement() {
        return this.innerProperties() == null ? null : this.innerProperties().sessionHostManagement();
    }

    /**
     * Set the sessionHostManagement property: SessionHostManagement properties used for the operation.
     * 
     * @param sessionHostManagement the sessionHostManagement value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner
        withSessionHostManagement(SessionHostManagementInner sessionHostManagement) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SessionHostManagementOperationStatusPropertiesInner();
        }
        this.innerProperties().withSessionHostManagement(sessionHostManagement);
        return this;
    }

    /**
     * Get the parentId property: The resource ID of the operation that started this process.
     * 
     * @return the parentId value.
     */
    public String parentId() {
        return this.innerProperties() == null ? null : this.innerProperties().parentId();
    }

    /**
     * Set the parentId property: The resource ID of the operation that started this process.
     * 
     * @param parentId the parentId value to set.
     * @return the SessionHostManagementOperationStatusInner object itself.
     */
    public SessionHostManagementOperationStatusInner withParentId(String parentId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SessionHostManagementOperationStatusPropertiesInner();
        }
        this.innerProperties().withParentId(parentId);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (status() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property status in model SessionHostManagementOperationStatusInner"));
        }
        if (operations() != null) {
            operations().forEach(e -> e.validate());
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SessionHostManagementOperationStatusInner.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ActiveSessionHostConfigurationInner;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in ActiveSessionHostConfigurationsClient.
 */
public interface ActiveSessionHostConfigurationsClient {
    /**
     * Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations
     * along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<ActiveSessionHostConfigurationInner>> getWithResponseAsync(String resourceGroupName,
        String hostPoolName);

    /**
     * Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations on
     * successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<ActiveSessionHostConfigurationInner> getAsync(String resourceGroupName, String hostPoolName);

    /**
     * Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations
     * along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ActiveSessionHostConfigurationInner> getWithResponse(String resourceGroupName, String hostPoolName,
        Context context);

    /**
     * Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ActiveSessionHostConfigurationInner get(String resourceGroupName, String hostPoolName);

    /**
     * List activeSessionHostConfigurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return activeSessionHostConfigurationList as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<ActiveSessionHostConfigurationInner> listByHostPoolAsync(String resourceGroupName, String hostPoolName);

    /**
     * List activeSessionHostConfigurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return activeSessionHostConfigurationList as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ActiveSessionHostConfigurationInner> listByHostPool(String resourceGroupName, String hostPoolName);

    /**
     * List activeSessionHostConfigurations.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return activeSessionHostConfigurationList as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ActiveSessionHostConfigurationInner> listByHostPool(String resourceGroupName, String hostPoolName,
        Context context);
}

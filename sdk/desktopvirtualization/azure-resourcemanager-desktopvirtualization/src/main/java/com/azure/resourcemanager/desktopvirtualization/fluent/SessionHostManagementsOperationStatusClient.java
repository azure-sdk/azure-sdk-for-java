// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedFlux;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.SessionHostManagementOperationStatusInner;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in
 * SessionHostManagementsOperationStatusClient.
 */
public interface SessionHostManagementsOperationStatusClient {
    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param operationId The Guid of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<SessionHostManagementOperationStatusInner>> getWithResponseAsync(String resourceGroupName,
        String hostPoolName, String operationId);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param operationId The Guid of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<SessionHostManagementOperationStatusInner> getAsync(String resourceGroupName, String hostPoolName,
        String operationId);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param operationId The Guid of the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SessionHostManagementOperationStatusInner> getWithResponse(String resourceGroupName, String hostPoolName,
        String operationId, Context context);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param operationId The Guid of the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SessionHostManagementOperationStatusInner get(String resourceGroupName, String hostPoolName, String operationId);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param isLatest Returns the most recent sessionHostManagement operation.
     * @param type Filter based on the type of sessionHostManagement operation. Valid values are
     * 'InitiateSessionHostUpdate' and 'ValidateSessionHostUpdate'.
     * @param isNonTerminal Returns currently running operations. Ignored if 'isLatest' is true.
     * @param correlationId CorrelationId of the sessionHostManagement operations to be returned.
     * @param action Action type for the Operation Status list to be filtered on. Valid actions are: start | retry |
     * pause | resume | cancel).
     * @param isInitiatingOperation Filter option to only return operations that initiated a sessionHostManagement
     * operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<SessionHostManagementOperationStatusInner> listAsync(String resourceGroupName, String hostPoolName,
        Boolean isLatest, String type, Boolean isNonTerminal, String correlationId, String action,
        Boolean isInitiatingOperation);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement as paginated response with {@link PagedFlux}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedFlux<SessionHostManagementOperationStatusInner> listAsync(String resourceGroupName, String hostPoolName);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SessionHostManagementOperationStatusInner> list(String resourceGroupName, String hostPoolName);

    /**
     * Get Operation status for SessionHostManagement.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param isLatest Returns the most recent sessionHostManagement operation.
     * @param type Filter based on the type of sessionHostManagement operation. Valid values are
     * 'InitiateSessionHostUpdate' and 'ValidateSessionHostUpdate'.
     * @param isNonTerminal Returns currently running operations. Ignored if 'isLatest' is true.
     * @param correlationId CorrelationId of the sessionHostManagement operations to be returned.
     * @param action Action type for the Operation Status list to be filtered on. Valid actions are: start | retry |
     * pause | resume | cancel).
     * @param isInitiatingOperation Filter option to only return operations that initiated a sessionHostManagement
     * operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return operation status for SessionHostManagement as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SessionHostManagementOperationStatusInner> list(String resourceGroupName, String hostPoolName,
        Boolean isLatest, String type, Boolean isNonTerminal, String correlationId, String action,
        Boolean isInitiatingOperation, Context context);
}

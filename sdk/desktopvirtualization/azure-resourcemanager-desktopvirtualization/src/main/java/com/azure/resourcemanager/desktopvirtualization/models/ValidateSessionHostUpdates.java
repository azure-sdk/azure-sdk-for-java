// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ValidateSessionHostUpdateRequestBodyInner;

/**
 * Resource collection API of ValidateSessionHostUpdates.
 */
public interface ValidateSessionHostUpdates {
    /**
     * Validates a session host update operation for validation errors. When Session Host Configuration and Session Host
     * Management values are not provided the ones saved in the Host Pool will be used.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void post(String resourceGroupName, String hostPoolName);

    /**
     * Validates a session host update operation for validation errors. When Session Host Configuration and Session Host
     * Management values are not provided the ones saved in the Host Pool will be used.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param validateSessionHostUpdateRequestBody Object containing the definition for properties to be used in the
     * sessionHostUpdate validation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void post(String resourceGroupName, String hostPoolName,
        ValidateSessionHostUpdateRequestBodyInner validateSessionHostUpdateRequestBody, Context context);
}

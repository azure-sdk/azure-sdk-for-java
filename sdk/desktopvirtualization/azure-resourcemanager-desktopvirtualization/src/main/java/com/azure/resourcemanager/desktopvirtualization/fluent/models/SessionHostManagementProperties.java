// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.models.HostPoolUpdateConfigurationProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Session host Managements of HostPool. */
@Fluent
public final class SessionHostManagementProperties {
    /*
     * Time zone for sessionHostManagement operations as defined in
     * https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set
     * if useLocalTime is true.
     */
    @JsonProperty(value = "scheduledDateTimeZone", required = true)
    private String scheduledDateTimeZone;

    /*
     * Parameters for a hostpool update.
     */
    @JsonProperty(value = "update", required = true)
    private HostPoolUpdateConfigurationProperties update;

    /** Creates an instance of SessionHostManagementProperties class. */
    public SessionHostManagementProperties() {
    }

    /**
     * Get the scheduledDateTimeZone property: Time zone for sessionHostManagement operations as defined in
     * https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set
     * if useLocalTime is true.
     *
     * @return the scheduledDateTimeZone value.
     */
    public String scheduledDateTimeZone() {
        return this.scheduledDateTimeZone;
    }

    /**
     * Set the scheduledDateTimeZone property: Time zone for sessionHostManagement operations as defined in
     * https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set
     * if useLocalTime is true.
     *
     * @param scheduledDateTimeZone the scheduledDateTimeZone value to set.
     * @return the SessionHostManagementProperties object itself.
     */
    public SessionHostManagementProperties withScheduledDateTimeZone(String scheduledDateTimeZone) {
        this.scheduledDateTimeZone = scheduledDateTimeZone;
        return this;
    }

    /**
     * Get the update property: Parameters for a hostpool update.
     *
     * @return the update value.
     */
    public HostPoolUpdateConfigurationProperties update() {
        return this.update;
    }

    /**
     * Set the update property: Parameters for a hostpool update.
     *
     * @param update the update value to set.
     * @return the SessionHostManagementProperties object itself.
     */
    public SessionHostManagementProperties withUpdate(HostPoolUpdateConfigurationProperties update) {
        this.update = update;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (scheduledDateTimeZone() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property scheduledDateTimeZone in model SessionHostManagementProperties"));
        }
        if (update() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property update in model SessionHostManagementProperties"));
        } else {
            update().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(SessionHostManagementProperties.class);
}

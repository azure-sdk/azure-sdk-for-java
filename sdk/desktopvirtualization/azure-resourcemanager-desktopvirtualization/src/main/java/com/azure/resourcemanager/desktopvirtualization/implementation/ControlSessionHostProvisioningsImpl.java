// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.fluent.ControlSessionHostProvisioningsClient;
import com.azure.resourcemanager.desktopvirtualization.models.ControlSessionHostProvisionings;
import com.azure.resourcemanager.desktopvirtualization.models.HostPoolProvisioningControlParameter;

public final class ControlSessionHostProvisioningsImpl implements ControlSessionHostProvisionings {
    private static final ClientLogger LOGGER = new ClientLogger(ControlSessionHostProvisioningsImpl.class);

    private final ControlSessionHostProvisioningsClient innerClient;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public ControlSessionHostProvisioningsImpl(ControlSessionHostProvisioningsClient innerClient,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void post(String resourceGroupName, String hostPoolName,
        HostPoolProvisioningControlParameter hostPoolProvisioningControlParameter) {
        this.serviceClient().post(resourceGroupName, hostPoolName, hostPoolProvisioningControlParameter);
    }

    public void post(String resourceGroupName, String hostPoolName,
        HostPoolProvisioningControlParameter hostPoolProvisioningControlParameter, Context context) {
        this.serviceClient().post(resourceGroupName, hostPoolName, hostPoolProvisioningControlParameter, context);
    }

    private ControlSessionHostProvisioningsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}

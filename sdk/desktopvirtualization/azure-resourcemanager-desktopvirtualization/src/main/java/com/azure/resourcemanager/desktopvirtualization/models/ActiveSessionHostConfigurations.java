// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ActiveSessionHostConfigurations. */
public interface ActiveSessionHostConfigurations {
    /**
     * Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations
     *     along with {@link Response}.
     */
    Response<ActiveSessionHostConfiguration> getWithResponse(
        String resourceGroupName, String hostPoolName, Context context);

    /**
     * Get the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the ActiveSessionHostConfiguration for the hostPool that is currently being used for update operations.
     */
    ActiveSessionHostConfiguration get(String resourceGroupName, String hostPoolName);

    /**
     * List activeSessionHostConfigurations.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return activeSessionHostConfigurationList as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ActiveSessionHostConfiguration> listByHostPool(String resourceGroupName, String hostPoolName);

    /**
     * List activeSessionHostConfigurations.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return activeSessionHostConfigurationList as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ActiveSessionHostConfiguration> listByHostPool(
        String resourceGroupName, String hostPoolName, Context context);
}

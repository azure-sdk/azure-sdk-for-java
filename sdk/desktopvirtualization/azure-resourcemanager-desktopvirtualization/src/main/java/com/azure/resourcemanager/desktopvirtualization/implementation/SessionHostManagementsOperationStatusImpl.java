// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.fluent.SessionHostManagementsOperationStatusClient;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.SessionHostManagementOperationStatusInner;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHostManagementOperationStatus;
import com.azure.resourcemanager.desktopvirtualization.models.SessionHostManagementsOperationStatus;

public final class SessionHostManagementsOperationStatusImpl implements SessionHostManagementsOperationStatus {
    private static final ClientLogger LOGGER = new ClientLogger(SessionHostManagementsOperationStatusImpl.class);

    private final SessionHostManagementsOperationStatusClient innerClient;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public SessionHostManagementsOperationStatusImpl(
        SessionHostManagementsOperationStatusClient innerClient,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<SessionHostManagementOperationStatus> getWithResponse(
        String resourceGroupName, String hostPoolName, String operationId, Context context) {
        Response<SessionHostManagementOperationStatusInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, hostPoolName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SessionHostManagementOperationStatusImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SessionHostManagementOperationStatus get(String resourceGroupName, String hostPoolName, String operationId) {
        SessionHostManagementOperationStatusInner inner =
            this.serviceClient().get(resourceGroupName, hostPoolName, operationId);
        if (inner != null) {
            return new SessionHostManagementOperationStatusImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public PagedIterable<SessionHostManagementOperationStatus> list(String resourceGroupName, String hostPoolName) {
        PagedIterable<SessionHostManagementOperationStatusInner> inner =
            this.serviceClient().list(resourceGroupName, hostPoolName);
        return Utils.mapPage(inner, inner1 -> new SessionHostManagementOperationStatusImpl(inner1, this.manager()));
    }

    public PagedIterable<SessionHostManagementOperationStatus> list(
        String resourceGroupName,
        String hostPoolName,
        Boolean isLatest,
        String type,
        Boolean isNonTerminal,
        String correlationId,
        String action,
        Boolean isInitiatingOperation,
        Context context) {
        PagedIterable<SessionHostManagementOperationStatusInner> inner =
            this
                .serviceClient()
                .list(
                    resourceGroupName,
                    hostPoolName,
                    isLatest,
                    type,
                    isNonTerminal,
                    correlationId,
                    action,
                    isInitiatingOperation,
                    context);
        return Utils.mapPage(inner, inner1 -> new SessionHostManagementOperationStatusImpl(inner1, this.manager()));
    }

    private SessionHostManagementsOperationStatusClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}

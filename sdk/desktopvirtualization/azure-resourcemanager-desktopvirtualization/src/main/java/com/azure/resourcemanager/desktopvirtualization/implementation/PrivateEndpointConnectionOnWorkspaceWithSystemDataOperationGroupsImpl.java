// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.desktopvirtualization.fluent.PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsClient;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.PrivateEndpointConnectionOnHostPoolWithSystemDataInner;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.PrivateEndpointConnectionOnWorkspaceWithSystemDataInner;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointConnectionOnHostPoolWithSystemData;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointConnectionOnWorkspaceWithSystemData;
import com.azure.resourcemanager.desktopvirtualization.models.PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroups;

public final class PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsImpl
    implements PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroups {
    private static final ClientLogger LOGGER
        = new ClientLogger(PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsImpl.class);

    private final PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsClient innerClient;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    public PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsImpl(
        PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsClient innerClient,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemData> listByWorkspace(String resourceGroupName,
        String workspaceName) {
        PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemDataInner> inner
            = this.serviceClient().listByWorkspace(resourceGroupName, workspaceName);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemData> listByWorkspace(String resourceGroupName,
        String workspaceName, Integer pageSize, Boolean isDescending, Integer initialSkip, Context context) {
        PagedIterable<PrivateEndpointConnectionOnHostPoolWithSystemDataInner> inner = this.serviceClient()
            .listByWorkspace(resourceGroupName, workspaceName, pageSize, isDescending, initialSkip, context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new PrivateEndpointConnectionOnHostPoolWithSystemDataImpl(inner1, this.manager()));
    }

    public Response<PrivateEndpointConnectionOnWorkspaceWithSystemData> getByWorkspaceWithResponse(
        String resourceGroupName, String workspaceName, String privateEndpointConnectionName, Context context) {
        Response<PrivateEndpointConnectionOnWorkspaceWithSystemDataInner> inner = this.serviceClient()
            .getByWorkspaceWithResponse(resourceGroupName, workspaceName, privateEndpointConnectionName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateEndpointConnectionOnWorkspaceWithSystemDataImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateEndpointConnectionOnWorkspaceWithSystemData getByWorkspace(String resourceGroupName,
        String workspaceName, String privateEndpointConnectionName) {
        PrivateEndpointConnectionOnWorkspaceWithSystemDataInner inner
            = this.serviceClient().getByWorkspace(resourceGroupName, workspaceName, privateEndpointConnectionName);
        if (inner != null) {
            return new PrivateEndpointConnectionOnWorkspaceWithSystemDataImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PrivateEndpointConnectionOnWorkspaceWithSystemData> updateByWorkspaceWithResponse(
        String resourceGroupName, String workspaceName, String privateEndpointConnectionName,
        PrivateEndpointConnectionOnWorkspaceWithSystemDataInner resource, Context context) {
        Response<PrivateEndpointConnectionOnWorkspaceWithSystemDataInner> inner = this.serviceClient()
            .updateByWorkspaceWithResponse(resourceGroupName, workspaceName, privateEndpointConnectionName, resource,
                context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new PrivateEndpointConnectionOnWorkspaceWithSystemDataImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PrivateEndpointConnectionOnWorkspaceWithSystemData updateByWorkspace(String resourceGroupName,
        String workspaceName, String privateEndpointConnectionName,
        PrivateEndpointConnectionOnWorkspaceWithSystemDataInner resource) {
        PrivateEndpointConnectionOnWorkspaceWithSystemDataInner inner = this.serviceClient()
            .updateByWorkspace(resourceGroupName, workspaceName, privateEndpointConnectionName, resource);
        if (inner != null) {
            return new PrivateEndpointConnectionOnWorkspaceWithSystemDataImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteByWorkspaceWithResponse(String resourceGroupName, String workspaceName,
        String privateEndpointConnectionName, Context context) {
        return this.serviceClient()
            .deleteByWorkspaceWithResponse(resourceGroupName, workspaceName, privateEndpointConnectionName, context);
    }

    public void deleteByWorkspace(String resourceGroupName, String workspaceName,
        String privateEndpointConnectionName) {
        this.serviceClient().deleteByWorkspace(resourceGroupName, workspaceName, privateEndpointConnectionName);
    }

    private PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}

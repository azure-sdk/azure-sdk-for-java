// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Domain configurations of session hosts.
 */
@Fluent
public final class DomainInfoProperties {
    /*
     * The type of domain join done by the virtual machine.
     */
    @JsonProperty(value = "joinType", required = true)
    private DomainJoinType joinType;

    /*
     * Active directory info. Only one should be populated based on the join type.
     */
    @JsonProperty(value = "activeDirectoryInfo")
    private ActiveDirectoryInfoProperties activeDirectoryInfo;

    /*
     * Azure active directory info. Only one should be populated based on the join type.
     */
    @JsonProperty(value = "azureActiveDirectoryInfo")
    private AzureActiveDirectoryInfoProperties azureActiveDirectoryInfo;

    /**
     * Creates an instance of DomainInfoProperties class.
     */
    public DomainInfoProperties() {
    }

    /**
     * Get the joinType property: The type of domain join done by the virtual machine.
     * 
     * @return the joinType value.
     */
    public DomainJoinType joinType() {
        return this.joinType;
    }

    /**
     * Set the joinType property: The type of domain join done by the virtual machine.
     * 
     * @param joinType the joinType value to set.
     * @return the DomainInfoProperties object itself.
     */
    public DomainInfoProperties withJoinType(DomainJoinType joinType) {
        this.joinType = joinType;
        return this;
    }

    /**
     * Get the activeDirectoryInfo property: Active directory info. Only one should be populated based on the join type.
     * 
     * @return the activeDirectoryInfo value.
     */
    public ActiveDirectoryInfoProperties activeDirectoryInfo() {
        return this.activeDirectoryInfo;
    }

    /**
     * Set the activeDirectoryInfo property: Active directory info. Only one should be populated based on the join type.
     * 
     * @param activeDirectoryInfo the activeDirectoryInfo value to set.
     * @return the DomainInfoProperties object itself.
     */
    public DomainInfoProperties withActiveDirectoryInfo(ActiveDirectoryInfoProperties activeDirectoryInfo) {
        this.activeDirectoryInfo = activeDirectoryInfo;
        return this;
    }

    /**
     * Get the azureActiveDirectoryInfo property: Azure active directory info. Only one should be populated based on the
     * join type.
     * 
     * @return the azureActiveDirectoryInfo value.
     */
    public AzureActiveDirectoryInfoProperties azureActiveDirectoryInfo() {
        return this.azureActiveDirectoryInfo;
    }

    /**
     * Set the azureActiveDirectoryInfo property: Azure active directory info. Only one should be populated based on the
     * join type.
     * 
     * @param azureActiveDirectoryInfo the azureActiveDirectoryInfo value to set.
     * @return the DomainInfoProperties object itself.
     */
    public DomainInfoProperties
        withAzureActiveDirectoryInfo(AzureActiveDirectoryInfoProperties azureActiveDirectoryInfo) {
        this.azureActiveDirectoryInfo = azureActiveDirectoryInfo;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (joinType() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException("Missing required property joinType in model DomainInfoProperties"));
        }
        if (activeDirectoryInfo() != null) {
            activeDirectoryInfo().validate();
        }
        if (azureActiveDirectoryInfo() != null) {
            azureActiveDirectoryInfo().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(DomainInfoProperties.class);
}

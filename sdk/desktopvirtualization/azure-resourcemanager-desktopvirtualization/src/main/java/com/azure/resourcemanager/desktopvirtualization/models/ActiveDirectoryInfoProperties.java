// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Active directory info. Only one should be populated based on the join type.
 */
@Fluent
public final class ActiveDirectoryInfoProperties {
    /*
     * Credentials needed to create the virtual machine.
     */
    @JsonProperty(value = "domainCredentials", required = true)
    private KeyVaultCredentialsProperties domainCredentials;

    /*
     * The ou path.
     */
    @JsonProperty(value = "ouPath", required = true)
    private String ouPath;

    /*
     * The domain a virtual machine connected to a hostpool will join.
     */
    @JsonProperty(value = "domainName")
    private String domainName;

    /**
     * Creates an instance of ActiveDirectoryInfoProperties class.
     */
    public ActiveDirectoryInfoProperties() {
    }

    /**
     * Get the domainCredentials property: Credentials needed to create the virtual machine.
     * 
     * @return the domainCredentials value.
     */
    public KeyVaultCredentialsProperties domainCredentials() {
        return this.domainCredentials;
    }

    /**
     * Set the domainCredentials property: Credentials needed to create the virtual machine.
     * 
     * @param domainCredentials the domainCredentials value to set.
     * @return the ActiveDirectoryInfoProperties object itself.
     */
    public ActiveDirectoryInfoProperties withDomainCredentials(KeyVaultCredentialsProperties domainCredentials) {
        this.domainCredentials = domainCredentials;
        return this;
    }

    /**
     * Get the ouPath property: The ou path.
     * 
     * @return the ouPath value.
     */
    public String ouPath() {
        return this.ouPath;
    }

    /**
     * Set the ouPath property: The ou path.
     * 
     * @param ouPath the ouPath value to set.
     * @return the ActiveDirectoryInfoProperties object itself.
     */
    public ActiveDirectoryInfoProperties withOuPath(String ouPath) {
        this.ouPath = ouPath;
        return this;
    }

    /**
     * Get the domainName property: The domain a virtual machine connected to a hostpool will join.
     * 
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: The domain a virtual machine connected to a hostpool will join.
     * 
     * @param domainName the domainName value to set.
     * @return the ActiveDirectoryInfoProperties object itself.
     */
    public ActiveDirectoryInfoProperties withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (domainCredentials() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property domainCredentials in model ActiveDirectoryInfoProperties"));
        } else {
            domainCredentials().validate();
        }
        if (ouPath() == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                "Missing required property ouPath in model ActiveDirectoryInfoProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ActiveDirectoryInfoProperties.class);
}

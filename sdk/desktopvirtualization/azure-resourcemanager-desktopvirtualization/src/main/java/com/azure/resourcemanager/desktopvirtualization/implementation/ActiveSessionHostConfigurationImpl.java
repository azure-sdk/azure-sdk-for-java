// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ActiveSessionHostConfigurationInner;
import com.azure.resourcemanager.desktopvirtualization.models.ActiveSessionHostConfiguration;
import com.azure.resourcemanager.desktopvirtualization.models.BootDiagnosticsInfoProperties;
import com.azure.resourcemanager.desktopvirtualization.models.DiskInfoProperties;
import com.azure.resourcemanager.desktopvirtualization.models.DomainInfoProperties;
import com.azure.resourcemanager.desktopvirtualization.models.ImageInfoProperties;
import com.azure.resourcemanager.desktopvirtualization.models.KeyVaultCredentialsProperties;
import com.azure.resourcemanager.desktopvirtualization.models.NetworkInfoProperties;
import com.azure.resourcemanager.desktopvirtualization.models.SecurityInfoProperties;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ActiveSessionHostConfigurationImpl implements ActiveSessionHostConfiguration {
    private ActiveSessionHostConfigurationInner innerObject;

    private final com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager;

    ActiveSessionHostConfigurationImpl(ActiveSessionHostConfigurationInner innerObject,
        com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public OffsetDateTime version() {
        return this.innerModel().version();
    }

    public String friendlyName() {
        return this.innerModel().friendlyName();
    }

    public Map<String, String> vmTags() {
        Map<String, String> inner = this.innerModel().vmTags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String vmLocation() {
        return this.innerModel().vmLocation();
    }

    public String vmResourceGroup() {
        return this.innerModel().vmResourceGroup();
    }

    public String vmNamePrefix() {
        return this.innerModel().vmNamePrefix();
    }

    public List<Integer> availabilityZones() {
        List<Integer> inner = this.innerModel().availabilityZones();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public NetworkInfoProperties networkInfo() {
        return this.innerModel().networkInfo();
    }

    public String vmSizeId() {
        return this.innerModel().vmSizeId();
    }

    public DiskInfoProperties diskInfo() {
        return this.innerModel().diskInfo();
    }

    public String customConfigurationScriptUrl() {
        return this.innerModel().customConfigurationScriptUrl();
    }

    public ImageInfoProperties imageInfo() {
        return this.innerModel().imageInfo();
    }

    public DomainInfoProperties domainInfo() {
        return this.innerModel().domainInfo();
    }

    public SecurityInfoProperties securityInfo() {
        return this.innerModel().securityInfo();
    }

    public KeyVaultCredentialsProperties vmAdminCredentials() {
        return this.innerModel().vmAdminCredentials();
    }

    public BootDiagnosticsInfoProperties bootDiagnosticsInfo() {
        return this.innerModel().bootDiagnosticsInfo();
    }

    public ActiveSessionHostConfigurationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.desktopvirtualization.DesktopVirtualizationManager manager() {
        return this.serviceManager;
    }
}

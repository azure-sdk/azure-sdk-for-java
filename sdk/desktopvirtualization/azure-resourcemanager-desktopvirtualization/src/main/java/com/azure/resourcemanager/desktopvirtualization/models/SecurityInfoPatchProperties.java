// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Security information.
 */
@Fluent
public final class SecurityInfoPatchProperties implements JsonSerializable<SecurityInfoPatchProperties> {
    /*
     * The security type used by virtual machine in hostpool session host.
     */
    private VirtualMachineSecurityType type;

    /*
     * Whether to use secureBoot on the virtual machine.
     */
    private Boolean secureBootEnabled;

    /*
     * Whether to use vTPM on the virtual machine.
     */
    private Boolean vTpmEnabled;

    /**
     * Creates an instance of SecurityInfoPatchProperties class.
     */
    public SecurityInfoPatchProperties() {
    }

    /**
     * Get the type property: The security type used by virtual machine in hostpool session host.
     * 
     * @return the type value.
     */
    public VirtualMachineSecurityType type() {
        return this.type;
    }

    /**
     * Set the type property: The security type used by virtual machine in hostpool session host.
     * 
     * @param type the type value to set.
     * @return the SecurityInfoPatchProperties object itself.
     */
    public SecurityInfoPatchProperties withType(VirtualMachineSecurityType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the secureBootEnabled property: Whether to use secureBoot on the virtual machine.
     * 
     * @return the secureBootEnabled value.
     */
    public Boolean secureBootEnabled() {
        return this.secureBootEnabled;
    }

    /**
     * Set the secureBootEnabled property: Whether to use secureBoot on the virtual machine.
     * 
     * @param secureBootEnabled the secureBootEnabled value to set.
     * @return the SecurityInfoPatchProperties object itself.
     */
    public SecurityInfoPatchProperties withSecureBootEnabled(Boolean secureBootEnabled) {
        this.secureBootEnabled = secureBootEnabled;
        return this;
    }

    /**
     * Get the vTpmEnabled property: Whether to use vTPM on the virtual machine.
     * 
     * @return the vTpmEnabled value.
     */
    public Boolean vTpmEnabled() {
        return this.vTpmEnabled;
    }

    /**
     * Set the vTpmEnabled property: Whether to use vTPM on the virtual machine.
     * 
     * @param vTpmEnabled the vTpmEnabled value to set.
     * @return the SecurityInfoPatchProperties object itself.
     */
    public SecurityInfoPatchProperties withVTpmEnabled(Boolean vTpmEnabled) {
        this.vTpmEnabled = vTpmEnabled;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeBooleanField("secureBootEnabled", this.secureBootEnabled);
        jsonWriter.writeBooleanField("vTpmEnabled", this.vTpmEnabled);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SecurityInfoPatchProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SecurityInfoPatchProperties if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SecurityInfoPatchProperties.
     */
    public static SecurityInfoPatchProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SecurityInfoPatchProperties deserializedSecurityInfoPatchProperties = new SecurityInfoPatchProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedSecurityInfoPatchProperties.type
                        = VirtualMachineSecurityType.fromString(reader.getString());
                } else if ("secureBootEnabled".equals(fieldName)) {
                    deserializedSecurityInfoPatchProperties.secureBootEnabled
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("vTpmEnabled".equals(fieldName)) {
                    deserializedSecurityInfoPatchProperties.vTpmEnabled = reader.getNullable(JsonReader::getBoolean);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSecurityInfoPatchProperties;
        });
    }
}

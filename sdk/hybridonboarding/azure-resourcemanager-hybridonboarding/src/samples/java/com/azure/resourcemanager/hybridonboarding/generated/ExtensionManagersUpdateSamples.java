// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybridonboarding.generated;

import com.azure.resourcemanager.hybridonboarding.models.ExtensionManager;
import com.azure.resourcemanager.hybridonboarding.models.ManagedIdentityType;
import com.azure.resourcemanager.hybridonboarding.models.ManagedIdentityUpdate;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for ExtensionManagers Update.
 */
public final class ExtensionManagersUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/hybridonboarding/resource-manager/Microsoft.HybridOnboarding/preview/2024-06-01-preview/examples/
     * ExtensionManagers_Update_MaximumSet_Gen.json
     */
    /**
     * Sample code: ExtensionManagers_Update.
     * 
     * @param manager Entry point to HybridonboardingManager.
     */
    public static void
        extensionManagersUpdate(com.azure.resourcemanager.hybridonboarding.HybridonboardingManager manager) {
        ExtensionManager resource = manager.extensionManagers()
            .getByResourceGroupWithResponse("rgopenapi", "I", com.azure.core.util.Context.NONE).getValue();
        resource.update().withTags(mapOf("key4031", "fakeTokenPlaceholder"))
            .withIdentity(new ManagedIdentityUpdate().withType(ManagedIdentityType.SYSTEM_ASSIGNED)).apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}

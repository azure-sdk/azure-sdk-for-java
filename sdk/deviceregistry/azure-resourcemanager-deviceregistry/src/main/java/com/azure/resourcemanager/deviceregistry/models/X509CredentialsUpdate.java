// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.deviceregistry.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The x509 certificate for authentication mode Certificate.
 */
@Fluent
public final class X509CredentialsUpdate implements JsonSerializable<X509CredentialsUpdate> {
    /*
     * A reference to secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx).
     */
    private String certificateReference;

    /**
     * Creates an instance of X509CredentialsUpdate class.
     */
    public X509CredentialsUpdate() {
    }

    /**
     * Get the certificateReference property: A reference to secret containing the certificate and private key (e.g.
     * stored as .der/.pem or .der/.pfx).
     * 
     * @return the certificateReference value.
     */
    public String certificateReference() {
        return this.certificateReference;
    }

    /**
     * Set the certificateReference property: A reference to secret containing the certificate and private key (e.g.
     * stored as .der/.pem or .der/.pfx).
     * 
     * @param certificateReference the certificateReference value to set.
     * @return the X509CredentialsUpdate object itself.
     */
    public X509CredentialsUpdate withCertificateReference(String certificateReference) {
        this.certificateReference = certificateReference;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("certificateReference", this.certificateReference);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of X509CredentialsUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of X509CredentialsUpdate if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the X509CredentialsUpdate.
     */
    public static X509CredentialsUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            X509CredentialsUpdate deserializedX509CredentialsUpdate = new X509CredentialsUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("certificateReference".equals(fieldName)) {
                    deserializedX509CredentialsUpdate.certificateReference = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedX509CredentialsUpdate;
        });
    }
}

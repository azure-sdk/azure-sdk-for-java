// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.deviceprovisioningservices.device.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.deviceprovisioningservices.device.ProvisioningDeviceServiceVersion;

/** Initializes a new instance of the ProvisioningDeviceClient type. */
public final class ProvisioningDeviceClientImpl {
    /** server parameter. */
    private final String host;

    /**
     * Gets server parameter.
     *
     * @return the host value.
     */
    public String getHost() {
        return this.host;
    }

    /** Service version. */
    private final ProvisioningDeviceServiceVersion serviceVersion;

    /**
     * Gets Service version.
     *
     * @return the serviceVersion value.
     */
    public ProvisioningDeviceServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The CertificateIssuancesImpl object to access its operations. */
    private final CertificateIssuancesImpl certificateIssuances;

    /**
     * Gets the CertificateIssuancesImpl object to access its operations.
     *
     * @return the CertificateIssuancesImpl object.
     */
    public CertificateIssuancesImpl getCertificateIssuances() {
        return this.certificateIssuances;
    }

    /** The DevicesImpl object to access its operations. */
    private final DevicesImpl devices;

    /**
     * Gets the DevicesImpl object to access its operations.
     *
     * @return the DevicesImpl object.
     */
    public DevicesImpl getDevices() {
        return this.devices;
    }

    /** The RuntimeRegistrationsImpl object to access its operations. */
    private final RuntimeRegistrationsImpl runtimeRegistrations;

    /**
     * Gets the RuntimeRegistrationsImpl object to access its operations.
     *
     * @return the RuntimeRegistrationsImpl object.
     */
    public RuntimeRegistrationsImpl getRuntimeRegistrations() {
        return this.runtimeRegistrations;
    }

    /**
     * Initializes an instance of ProvisioningDeviceClient client.
     *
     * @param host server parameter.
     * @param serviceVersion Service version.
     */
    public ProvisioningDeviceClientImpl(String host, ProvisioningDeviceServiceVersion serviceVersion) {
        this(
                new HttpPipelineBuilder()
                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                        .build(),
                JacksonAdapter.createDefaultSerializerAdapter(),
                host,
                serviceVersion);
    }

    /**
     * Initializes an instance of ProvisioningDeviceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param host server parameter.
     * @param serviceVersion Service version.
     */
    public ProvisioningDeviceClientImpl(
            HttpPipeline httpPipeline, String host, ProvisioningDeviceServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), host, serviceVersion);
    }

    /**
     * Initializes an instance of ProvisioningDeviceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param host server parameter.
     * @param serviceVersion Service version.
     */
    public ProvisioningDeviceClientImpl(
            HttpPipeline httpPipeline,
            SerializerAdapter serializerAdapter,
            String host,
            ProvisioningDeviceServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.host = host;
        this.serviceVersion = serviceVersion;
        this.certificateIssuances = new CertificateIssuancesImpl(this);
        this.devices = new DevicesImpl(this);
        this.runtimeRegistrations = new RuntimeRegistrationsImpl(this);
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.qumulo.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.qumulo.models.FileSystemResourceUpdateProperties;
import com.azure.resourcemanager.qumulo.models.MarketplaceDetails;
import com.azure.resourcemanager.qumulo.models.UserDetails;
import org.junit.jupiter.api.Assertions;

public final class FileSystemResourceUpdatePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FileSystemResourceUpdateProperties model = BinaryData.fromString(
            "{\"marketplaceDetails\":{\"marketplaceSubscriptionId\":\"ypl\",\"planId\":\"ckbasyypndd\",\"offerId\":\"sgcbac\",\"publisherId\":\"ejk\",\"termUnit\":\"ynqgoulzndlikwyq\",\"marketplaceSubscriptionStatus\":\"Suspended\"},\"userDetails\":{\"email\":\"ibmadgakeqsrxy\"},\"delegatedSubnetId\":\"qqedqytbciqfou\"}")
            .toObject(FileSystemResourceUpdateProperties.class);
        Assertions.assertEquals("ypl", model.marketplaceDetails().marketplaceSubscriptionId());
        Assertions.assertEquals("ckbasyypndd", model.marketplaceDetails().planId());
        Assertions.assertEquals("sgcbac", model.marketplaceDetails().offerId());
        Assertions.assertEquals("ejk", model.marketplaceDetails().publisherId());
        Assertions.assertEquals("ynqgoulzndlikwyq", model.marketplaceDetails().termUnit());
        Assertions.assertEquals("ibmadgakeqsrxy", model.userDetails().email());
        Assertions.assertEquals("qqedqytbciqfou", model.delegatedSubnetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FileSystemResourceUpdateProperties model = new FileSystemResourceUpdateProperties()
            .withMarketplaceDetails(new MarketplaceDetails().withMarketplaceSubscriptionId("ypl")
                .withPlanId("ckbasyypndd")
                .withOfferId("sgcbac")
                .withPublisherId("ejk")
                .withTermUnit("ynqgoulzndlikwyq"))
            .withUserDetails(new UserDetails().withEmail("ibmadgakeqsrxy"))
            .withDelegatedSubnetId("qqedqytbciqfou");
        model = BinaryData.fromObject(model).toObject(FileSystemResourceUpdateProperties.class);
        Assertions.assertEquals("ypl", model.marketplaceDetails().marketplaceSubscriptionId());
        Assertions.assertEquals("ckbasyypndd", model.marketplaceDetails().planId());
        Assertions.assertEquals("sgcbac", model.marketplaceDetails().offerId());
        Assertions.assertEquals("ejk", model.marketplaceDetails().publisherId());
        Assertions.assertEquals("ynqgoulzndlikwyq", model.marketplaceDetails().termUnit());
        Assertions.assertEquals("ibmadgakeqsrxy", model.userDetails().email());
        Assertions.assertEquals("qqedqytbciqfou", model.delegatedSubnetId());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.qumulo.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.qumulo.fluent.models.LiftrBaseStorageFileSystemResourceInner;
import com.azure.resourcemanager.qumulo.models.LiftrBaseMarketplaceDetails;
import com.azure.resourcemanager.qumulo.models.LiftrBaseStorageFileSystemResource;
import com.azure.resourcemanager.qumulo.models.LiftrBaseStorageFileSystemResourceUpdate;
import com.azure.resourcemanager.qumulo.models.LiftrBaseStorageFileSystemResourceUpdateProperties;
import com.azure.resourcemanager.qumulo.models.LiftrBaseUserDetails;
import com.azure.resourcemanager.qumulo.models.ManagedServiceIdentity;
import com.azure.resourcemanager.qumulo.models.ProvisioningState;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class LiftrBaseStorageFileSystemResourceImpl implements LiftrBaseStorageFileSystemResource,
    LiftrBaseStorageFileSystemResource.Definition, LiftrBaseStorageFileSystemResource.Update {
    private LiftrBaseStorageFileSystemResourceInner innerObject;

    private final com.azure.resourcemanager.qumulo.QumuloManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ManagedServiceIdentity identity() {
        return this.innerModel().identity();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public LiftrBaseMarketplaceDetails marketplaceDetails() {
        return this.innerModel().marketplaceDetails();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String storageSku() {
        return this.innerModel().storageSku();
    }

    public LiftrBaseUserDetails userDetails() {
        return this.innerModel().userDetails();
    }

    public String delegatedSubnetId() {
        return this.innerModel().delegatedSubnetId();
    }

    public String clusterLoginUrl() {
        return this.innerModel().clusterLoginUrl();
    }

    public List<String> privateIPs() {
        List<String> inner = this.innerModel().privateIPs();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String adminPassword() {
        return this.innerModel().adminPassword();
    }

    public String availabilityZone() {
        return this.innerModel().availabilityZone();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public LiftrBaseStorageFileSystemResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.qumulo.QumuloManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String fileSystemName;

    private LiftrBaseStorageFileSystemResourceUpdate updateProperties;

    public LiftrBaseStorageFileSystemResourceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public LiftrBaseStorageFileSystemResource create() {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .createOrUpdate(resourceGroupName, fileSystemName, this.innerModel(), Context.NONE);
        return this;
    }

    public LiftrBaseStorageFileSystemResource create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .createOrUpdate(resourceGroupName, fileSystemName, this.innerModel(), context);
        return this;
    }

    LiftrBaseStorageFileSystemResourceImpl(String name, com.azure.resourcemanager.qumulo.QumuloManager serviceManager) {
        this.innerObject = new LiftrBaseStorageFileSystemResourceInner();
        this.serviceManager = serviceManager;
        this.fileSystemName = name;
    }

    public LiftrBaseStorageFileSystemResourceImpl update() {
        this.updateProperties = new LiftrBaseStorageFileSystemResourceUpdate();
        return this;
    }

    public LiftrBaseStorageFileSystemResource apply() {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .updateWithResponse(resourceGroupName, fileSystemName, updateProperties, Context.NONE)
            .getValue();
        return this;
    }

    public LiftrBaseStorageFileSystemResource apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .updateWithResponse(resourceGroupName, fileSystemName, updateProperties, context)
            .getValue();
        return this;
    }

    LiftrBaseStorageFileSystemResourceImpl(LiftrBaseStorageFileSystemResourceInner innerObject,
        com.azure.resourcemanager.qumulo.QumuloManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.fileSystemName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fileSystems");
    }

    public LiftrBaseStorageFileSystemResource refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .getByResourceGroupWithResponse(resourceGroupName, fileSystemName, Context.NONE)
            .getValue();
        return this;
    }

    public LiftrBaseStorageFileSystemResource refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getFileSystems()
            .getByResourceGroupWithResponse(resourceGroupName, fileSystemName, context)
            .getValue();
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateProperties.withTags(tags);
            return this;
        }
    }

    public LiftrBaseStorageFileSystemResourceImpl withIdentity(ManagedServiceIdentity identity) {
        if (isInCreateMode()) {
            this.innerModel().withIdentity(identity);
            return this;
        } else {
            this.updateProperties.withIdentity(identity);
            return this;
        }
    }

    public LiftrBaseStorageFileSystemResourceImpl
        withMarketplaceDetails(LiftrBaseMarketplaceDetails marketplaceDetails) {
        this.innerModel().withMarketplaceDetails(marketplaceDetails);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withStorageSku(String storageSku) {
        this.innerModel().withStorageSku(storageSku);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withUserDetails(LiftrBaseUserDetails userDetails) {
        this.innerModel().withUserDetails(userDetails);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withDelegatedSubnetId(String delegatedSubnetId) {
        this.innerModel().withDelegatedSubnetId(delegatedSubnetId);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withClusterLoginUrl(String clusterLoginUrl) {
        this.innerModel().withClusterLoginUrl(clusterLoginUrl);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withPrivateIPs(List<String> privateIPs) {
        this.innerModel().withPrivateIPs(privateIPs);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withAdminPassword(String adminPassword) {
        this.innerModel().withAdminPassword(adminPassword);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl withAvailabilityZone(String availabilityZone) {
        this.innerModel().withAvailabilityZone(availabilityZone);
        return this;
    }

    public LiftrBaseStorageFileSystemResourceImpl
        withProperties(LiftrBaseStorageFileSystemResourceUpdateProperties properties) {
        this.updateProperties.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

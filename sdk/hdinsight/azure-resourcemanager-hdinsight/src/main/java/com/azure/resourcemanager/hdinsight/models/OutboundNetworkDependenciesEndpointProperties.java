// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Outbound network dependencies endpoint properties. */
@Fluent
public final class OutboundNetworkDependenciesEndpointProperties {
    /*
     * The domain name of endpoint
     */
    @JsonProperty(value = "domainName")
    private String domainName;

    /*
     * Array of endpoint details
     */
    @JsonProperty(value = "endpointDetails")
    private List<OutboundNetworkDependenciesEndpointDetail> endpointDetails;

    /**
     * Get the domainName property: The domain name of endpoint.
     *
     * @return the domainName value.
     */
    public String domainName() {
        return this.domainName;
    }

    /**
     * Set the domainName property: The domain name of endpoint.
     *
     * @param domainName the domainName value to set.
     * @return the OutboundNetworkDependenciesEndpointProperties object itself.
     */
    public OutboundNetworkDependenciesEndpointProperties withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * Get the endpointDetails property: Array of endpoint details.
     *
     * @return the endpointDetails value.
     */
    public List<OutboundNetworkDependenciesEndpointDetail> endpointDetails() {
        return this.endpointDetails;
    }

    /**
     * Set the endpointDetails property: Array of endpoint details.
     *
     * @param endpointDetails the endpointDetails value to set.
     * @return the OutboundNetworkDependenciesEndpointProperties object itself.
     */
    public OutboundNetworkDependenciesEndpointProperties withEndpointDetails(
        List<OutboundNetworkDependenciesEndpointDetail> endpointDetails) {
        this.endpointDetails = endpointDetails;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (endpointDetails() != null) {
            endpointDetails().forEach(e -> e.validate());
        }
    }
}

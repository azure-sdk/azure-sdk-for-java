// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Cluster pool aks upgrade history properties.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "upgradeType",
    defaultImpl = ClusterPoolAksPatchUpgradeHistoryProperties.class,
    visible = true)
@JsonTypeName("AKSPatchUpgrade")
@Fluent
public final class ClusterPoolAksPatchUpgradeHistoryProperties extends ClusterPoolUpgradeHistoryProperties {
    /*
     * Type of upgrade.
     */
    @JsonTypeId
    @JsonProperty(value = "upgradeType", required = true)
    private ClusterPoolUpgradeHistoryType upgradeType = ClusterPoolUpgradeHistoryType.AKSPATCH_UPGRADE;

    /*
     * Whether upgrade cluster pool.
     */
    @JsonProperty(value = "upgradeClusterPool")
    private Boolean upgradeClusterPool;

    /*
     * Whether upgrade all cluster nodes.
     */
    @JsonProperty(value = "upgradeAllClusterNodes")
    private Boolean upgradeAllClusterNodes;

    /*
     * Version before update.
     */
    @JsonProperty(value = "originalVersion")
    private String originalVersion;

    /*
     * Version going to update.
     */
    @JsonProperty(value = "newVersion")
    private String newVersion;

    /**
     * Creates an instance of ClusterPoolAksPatchUpgradeHistoryProperties class.
     */
    public ClusterPoolAksPatchUpgradeHistoryProperties() {
    }

    /**
     * Get the upgradeType property: Type of upgrade.
     * 
     * @return the upgradeType value.
     */
    @Override
    public ClusterPoolUpgradeHistoryType upgradeType() {
        return this.upgradeType;
    }

    /**
     * Get the upgradeClusterPool property: Whether upgrade cluster pool.
     * 
     * @return the upgradeClusterPool value.
     */
    public Boolean upgradeClusterPool() {
        return this.upgradeClusterPool;
    }

    /**
     * Set the upgradeClusterPool property: Whether upgrade cluster pool.
     * 
     * @param upgradeClusterPool the upgradeClusterPool value to set.
     * @return the ClusterPoolAksPatchUpgradeHistoryProperties object itself.
     */
    public ClusterPoolAksPatchUpgradeHistoryProperties withUpgradeClusterPool(Boolean upgradeClusterPool) {
        this.upgradeClusterPool = upgradeClusterPool;
        return this;
    }

    /**
     * Get the upgradeAllClusterNodes property: Whether upgrade all cluster nodes.
     * 
     * @return the upgradeAllClusterNodes value.
     */
    public Boolean upgradeAllClusterNodes() {
        return this.upgradeAllClusterNodes;
    }

    /**
     * Set the upgradeAllClusterNodes property: Whether upgrade all cluster nodes.
     * 
     * @param upgradeAllClusterNodes the upgradeAllClusterNodes value to set.
     * @return the ClusterPoolAksPatchUpgradeHistoryProperties object itself.
     */
    public ClusterPoolAksPatchUpgradeHistoryProperties withUpgradeAllClusterNodes(Boolean upgradeAllClusterNodes) {
        this.upgradeAllClusterNodes = upgradeAllClusterNodes;
        return this;
    }

    /**
     * Get the originalVersion property: Version before update.
     * 
     * @return the originalVersion value.
     */
    public String originalVersion() {
        return this.originalVersion;
    }

    /**
     * Set the originalVersion property: Version before update.
     * 
     * @param originalVersion the originalVersion value to set.
     * @return the ClusterPoolAksPatchUpgradeHistoryProperties object itself.
     */
    public ClusterPoolAksPatchUpgradeHistoryProperties withOriginalVersion(String originalVersion) {
        this.originalVersion = originalVersion;
        return this;
    }

    /**
     * Get the newVersion property: Version going to update.
     * 
     * @return the newVersion value.
     */
    public String newVersion() {
        return this.newVersion;
    }

    /**
     * Set the newVersion property: Version going to update.
     * 
     * @param newVersion the newVersion value to set.
     * @return the ClusterPoolAksPatchUpgradeHistoryProperties object itself.
     */
    public ClusterPoolAksPatchUpgradeHistoryProperties withNewVersion(String newVersion) {
        this.newVersion = newVersion;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterPoolAksPatchUpgradeHistoryProperties withUtcTime(String utcTime) {
        super.withUtcTime(utcTime);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterPoolAksPatchUpgradeHistoryProperties
        withUpgradeResult(ClusterPoolUpgradeHistoryUpgradeResultType upgradeResult) {
        super.withUpgradeResult(upgradeResult);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

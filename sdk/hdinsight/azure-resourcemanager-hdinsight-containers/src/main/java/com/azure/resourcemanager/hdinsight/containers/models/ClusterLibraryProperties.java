// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;

/**
 * Properties of a library in the cluster.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "type",
    defaultImpl = ClusterLibraryProperties.class,
    visible = true)
@JsonTypeName("ClusterLibraryProperties")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "pypi", value = PyPiLibraryProperties.class),
    @JsonSubTypes.Type(name = "maven", value = MavenLibraryProperties.class) })
@Fluent
public class ClusterLibraryProperties {
    /*
     * Type of the library.
     */
    @JsonTypeId
    @JsonProperty(value = "type", required = true)
    private Type type;

    /*
     * Remark of the latest library management operation.
     */
    @JsonProperty(value = "remarks")
    private String remarks;

    /*
     * Timestamp of the latest library management operation.
     */
    @JsonProperty(value = "timestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime timestamp;

    /*
     * Status of the library.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private Status status;

    /*
     * Error message of the library operation when a failure occurs.
     */
    @JsonProperty(value = "message", access = JsonProperty.Access.WRITE_ONLY)
    private String message;

    /**
     * Creates an instance of ClusterLibraryProperties class.
     */
    public ClusterLibraryProperties() {
        this.type = Type.fromString("ClusterLibraryProperties");
    }

    /**
     * Get the type property: Type of the library.
     * 
     * @return the type value.
     */
    public Type type() {
        return this.type;
    }

    /**
     * Get the remarks property: Remark of the latest library management operation.
     * 
     * @return the remarks value.
     */
    public String remarks() {
        return this.remarks;
    }

    /**
     * Set the remarks property: Remark of the latest library management operation.
     * 
     * @param remarks the remarks value to set.
     * @return the ClusterLibraryProperties object itself.
     */
    public ClusterLibraryProperties withRemarks(String remarks) {
        this.remarks = remarks;
        return this;
    }

    /**
     * Get the timestamp property: Timestamp of the latest library management operation.
     * 
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Get the status property: Status of the library.
     * 
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the message property: Error message of the library operation when a failure occurs.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Cluster hotfix upgrade rollback history properties.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    property = "upgradeType",
    defaultImpl = ClusterHotfixUpgradeRollbackHistoryProperties.class,
    visible = true)
@JsonTypeName("HotfixUpgradeRollback")
@Fluent
public final class ClusterHotfixUpgradeRollbackHistoryProperties extends ClusterInPlaceUpgradeHistoryProperties {
    /*
     * Type of upgrade.
     */
    @JsonTypeId
    @JsonProperty(value = "upgradeType", required = true)
    private ClusterUpgradeHistoryType upgradeType = ClusterUpgradeHistoryType.HOTFIX_UPGRADE_ROLLBACK;

    /**
     * Creates an instance of ClusterHotfixUpgradeRollbackHistoryProperties class.
     */
    public ClusterHotfixUpgradeRollbackHistoryProperties() {
    }

    /**
     * Get the upgradeType property: Type of upgrade.
     * 
     * @return the upgradeType value.
     */
    @Override
    public ClusterUpgradeHistoryType upgradeType() {
        return this.upgradeType;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withSourceClusterVersion(String sourceClusterVersion) {
        super.withSourceClusterVersion(sourceClusterVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withSourceOssVersion(String sourceOssVersion) {
        super.withSourceOssVersion(sourceOssVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withSourceBuildNumber(String sourceBuildNumber) {
        super.withSourceBuildNumber(sourceBuildNumber);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withTargetClusterVersion(String targetClusterVersion) {
        super.withTargetClusterVersion(targetClusterVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withTargetOssVersion(String targetOssVersion) {
        super.withTargetOssVersion(targetOssVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withTargetBuildNumber(String targetBuildNumber) {
        super.withTargetBuildNumber(targetBuildNumber);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withComponentName(String componentName) {
        super.withComponentName(componentName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withSeverity(ClusterUpgradeHistorySeverityType severity) {
        super.withSeverity(severity);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties withUtcTime(String utcTime) {
        super.withUtcTime(utcTime);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterHotfixUpgradeRollbackHistoryProperties
        withUpgradeResult(ClusterUpgradeHistoryUpgradeResultType upgradeResult) {
        super.withUpgradeResult(upgradeResult);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

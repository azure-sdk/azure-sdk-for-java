// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;

/**
 * Cluster available patch version upgrade.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "upgradeType")
@JsonTypeName("PatchVersionUpgrade")
@Fluent
public final class ClusterAvailableUpgradePatchVersionUpgradeProperties
    extends ClusterAvailableInPlaceUpgradeProperties {
    /**
     * Creates an instance of ClusterAvailableUpgradePatchVersionUpgradeProperties class.
     */
    public ClusterAvailableUpgradePatchVersionUpgradeProperties() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withSourceOssVersion(String sourceOssVersion) {
        super.withSourceOssVersion(sourceOssVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withSourceClusterVersion(String sourceClusterVersion) {
        super.withSourceClusterVersion(sourceClusterVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withSourceBuildNumber(String sourceBuildNumber) {
        super.withSourceBuildNumber(sourceBuildNumber);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withTargetOssVersion(String targetOssVersion) {
        super.withTargetOssVersion(targetOssVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withTargetClusterVersion(String targetClusterVersion) {
        super.withTargetClusterVersion(targetClusterVersion);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withTargetBuildNumber(String targetBuildNumber) {
        super.withTargetBuildNumber(targetBuildNumber);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withComponentName(String componentName) {
        super.withComponentName(componentName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withSeverity(Severity severity) {
        super.withSeverity(severity);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withExtendedProperties(String extendedProperties) {
        super.withExtendedProperties(extendedProperties);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterAvailableUpgradePatchVersionUpgradeProperties withCreatedTime(OffsetDateTime createdTime) {
        super.withCreatedTime(createdTime);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hdinsight.containers.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Cluster pool node os upgrade history properties.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "upgradeType")
@JsonTypeName("NodeOsUpgrade")
@Fluent
public final class ClusterPoolNodeOsUpgradeHistoryProperties extends ClusterPoolUpgradeHistoryProperties {
    /*
     * New Node Os version.
     */
    @JsonProperty(value = "newNodeOs")
    private String newNodeOs;

    /**
     * Creates an instance of ClusterPoolNodeOsUpgradeHistoryProperties class.
     */
    public ClusterPoolNodeOsUpgradeHistoryProperties() {
    }

    /**
     * Get the newNodeOs property: New Node Os version.
     * 
     * @return the newNodeOs value.
     */
    public String newNodeOs() {
        return this.newNodeOs;
    }

    /**
     * Set the newNodeOs property: New Node Os version.
     * 
     * @param newNodeOs the newNodeOs value to set.
     * @return the ClusterPoolNodeOsUpgradeHistoryProperties object itself.
     */
    public ClusterPoolNodeOsUpgradeHistoryProperties withNewNodeOs(String newNodeOs) {
        this.newNodeOs = newNodeOs;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterPoolNodeOsUpgradeHistoryProperties withUtcTime(String utcTime) {
        super.withUtcTime(utcTime);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClusterPoolNodeOsUpgradeHistoryProperties
        withUpgradeResult(ClusterPoolUpgradeHistoryUpgradeResultType upgradeResult) {
        super.withUpgradeResult(upgradeResult);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.redis.generated.models.AccessPolicyAssignmentProvisioningState;
import com.azure.resourcemanager.redis.generated.models.RedisCacheAccessPolicyAssignment;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Properties of an access policy assignment set. */
@Fluent
public final class RedisCacheAccessPolicyAssignmentSetProperties {
    /*
     * Provisioning state of an access policy assignment set
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private AccessPolicyAssignmentProvisioningState provisioningState;

    /*
     * The assignments property.
     */
    @JsonProperty(value = "assignments")
    private List<RedisCacheAccessPolicyAssignment> assignments;

    /** Creates an instance of RedisCacheAccessPolicyAssignmentSetProperties class. */
    public RedisCacheAccessPolicyAssignmentSetProperties() {
    }

    /**
     * Get the provisioningState property: Provisioning state of an access policy assignment set.
     *
     * @return the provisioningState value.
     */
    public AccessPolicyAssignmentProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the assignments property: The assignments property.
     *
     * @return the assignments value.
     */
    public List<RedisCacheAccessPolicyAssignment> assignments() {
        return this.assignments;
    }

    /**
     * Set the assignments property: The assignments property.
     *
     * @param assignments the assignments value to set.
     * @return the RedisCacheAccessPolicyAssignmentSetProperties object itself.
     */
    public RedisCacheAccessPolicyAssignmentSetProperties withAssignments(
        List<RedisCacheAccessPolicyAssignment> assignments) {
        this.assignments = assignments;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (assignments() != null) {
            assignments().forEach(e -> e.validate());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisCacheAccessPolicyAssignmentSetInner;
import java.util.List;

/** An immutable client-side representation of RedisCacheAccessPolicyAssignmentSet. */
public interface RedisCacheAccessPolicyAssignmentSet {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the provisioningState property: Provisioning state of an access policy assignment set.
     *
     * @return the provisioningState value.
     */
    AccessPolicyAssignmentProvisioningState provisioningState();

    /**
     * Gets the assignments property: The assignments property.
     *
     * @return the assignments value.
     */
    List<RedisCacheAccessPolicyAssignment> assignments();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.redis.generated.fluent.models.RedisCacheAccessPolicyAssignmentSetInner
     * object.
     *
     * @return the inner object.
     */
    RedisCacheAccessPolicyAssignmentSetInner innerModel();

    /** The entirety of the RedisCacheAccessPolicyAssignmentSet definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The RedisCacheAccessPolicyAssignmentSet definition stages. */
    interface DefinitionStages {
        /** The first stage of the RedisCacheAccessPolicyAssignmentSet definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the RedisCacheAccessPolicyAssignmentSet definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, cacheName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param cacheName The name of the Redis cache.
             * @return the next definition stage.
             */
            WithCreate withExistingRedi(String resourceGroupName, String cacheName);
        }
        /**
         * The stage of the RedisCacheAccessPolicyAssignmentSet definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithAssignments {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            RedisCacheAccessPolicyAssignmentSet create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RedisCacheAccessPolicyAssignmentSet create(Context context);
        }
        /** The stage of the RedisCacheAccessPolicyAssignmentSet definition allowing to specify assignments. */
        interface WithAssignments {
            /**
             * Specifies the assignments property: The assignments property..
             *
             * @param assignments The assignments property.
             * @return the next definition stage.
             */
            WithCreate withAssignments(List<RedisCacheAccessPolicyAssignment> assignments);
        }
    }
    /**
     * Begins update for the RedisCacheAccessPolicyAssignmentSet resource.
     *
     * @return the stage of resource update.
     */
    RedisCacheAccessPolicyAssignmentSet.Update update();

    /** The template for RedisCacheAccessPolicyAssignmentSet update. */
    interface Update extends UpdateStages.WithAssignments {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        RedisCacheAccessPolicyAssignmentSet apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RedisCacheAccessPolicyAssignmentSet apply(Context context);
    }
    /** The RedisCacheAccessPolicyAssignmentSet update stages. */
    interface UpdateStages {
        /** The stage of the RedisCacheAccessPolicyAssignmentSet update allowing to specify assignments. */
        interface WithAssignments {
            /**
             * Specifies the assignments property: The assignments property..
             *
             * @param assignments The assignments property.
             * @return the next definition stage.
             */
            Update withAssignments(List<RedisCacheAccessPolicyAssignment> assignments);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    RedisCacheAccessPolicyAssignmentSet refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RedisCacheAccessPolicyAssignmentSet refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/**
 * Optional: Specifies the method in which zones are allocated to the Redis cache. 'Automatic' refers to allocation of
 * zones automatically by the Azure based on the availability zones support in the region and number of instances.
 * 'UserDefined' refers to usage of zones passed in by you for allocation. 'NoZones' refers to the non-zonal cache. If
 * 'zonalAllocation' is not passed, it will be set to 'UserDefined' when zones are passed in, otherwise, will be set to
 * 'NoZones'.
 */
public final class ZonalAllocation extends ExpandableStringEnum<ZonalAllocation> {
    /**
     * Static value Automatic for ZonalAllocation.
     */
    public static final ZonalAllocation AUTOMATIC = fromString("Automatic");

    /**
     * Static value UserDefined for ZonalAllocation.
     */
    public static final ZonalAllocation USER_DEFINED = fromString("UserDefined");

    /**
     * Static value NoZones for ZonalAllocation.
     */
    public static final ZonalAllocation NO_ZONES = fromString("NoZones");

    /**
     * Creates a new instance of ZonalAllocation value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Deprecated
    public ZonalAllocation() {
    }

    /**
     * Creates or finds a ZonalAllocation from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ZonalAllocation.
     */
    @JsonCreator
    public static ZonalAllocation fromString(String name) {
        return fromString(name, ZonalAllocation.class);
    }

    /**
     * Gets known ZonalAllocation values.
     * 
     * @return known ZonalAllocation values.
     */
    public static Collection<ZonalAllocation> values() {
        return values(ZonalAllocation.class);
    }
}

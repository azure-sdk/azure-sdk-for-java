// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.redis.generated.fluent.PatchSchedulesClient;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisPatchScheduleInner;
import com.azure.resourcemanager.redis.generated.models.DefaultName;
import com.azure.resourcemanager.redis.generated.models.PatchSchedules;
import com.azure.resourcemanager.redis.generated.models.RedisPatchSchedule;

public final class PatchSchedulesImpl implements PatchSchedules {
    private static final ClientLogger LOGGER = new ClientLogger(PatchSchedulesImpl.class);

    private final PatchSchedulesClient innerClient;

    private final com.azure.resourcemanager.redis.generated.RedisManager serviceManager;

    public PatchSchedulesImpl(
        PatchSchedulesClient innerClient, com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<RedisPatchSchedule> listByRedisResource(String resourceGroupName, String cacheName) {
        PagedIterable<RedisPatchScheduleInner> inner =
            this.serviceClient().listByRedisResource(resourceGroupName, cacheName);
        return Utils.mapPage(inner, inner1 -> new RedisPatchScheduleImpl(inner1, this.manager()));
    }

    public PagedIterable<RedisPatchSchedule> listByRedisResource(
        String resourceGroupName, String cacheName, Context context) {
        PagedIterable<RedisPatchScheduleInner> inner =
            this.serviceClient().listByRedisResource(resourceGroupName, cacheName, context);
        return Utils.mapPage(inner, inner1 -> new RedisPatchScheduleImpl(inner1, this.manager()));
    }

    public ProxyResource createOrUpdate(
        String resourceGroupName, String name, DefaultName defaultParameter, RedisPatchScheduleInner parameters) {
        return this.serviceClient().createOrUpdate(resourceGroupName, name, defaultParameter, parameters);
    }

    public ProxyResource createOrUpdate(
        String resourceGroupName,
        String name,
        DefaultName defaultParameter,
        RedisPatchScheduleInner parameters,
        Context context) {
        return this.serviceClient().createOrUpdate(resourceGroupName, name, defaultParameter, parameters, context);
    }

    public void delete(String resourceGroupName, String name, DefaultName defaultParameter) {
        this.serviceClient().delete(resourceGroupName, name, defaultParameter);
    }

    public void delete(String resourceGroupName, String name, DefaultName defaultParameter, Context context) {
        this.serviceClient().delete(resourceGroupName, name, defaultParameter, context);
    }

    public Response<RedisPatchSchedule> getWithResponse(
        String resourceGroupName, String name, DefaultName defaultParameter, Context context) {
        Response<RedisPatchScheduleInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, name, defaultParameter, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RedisPatchScheduleImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public RedisPatchSchedule get(String resourceGroupName, String name, DefaultName defaultParameter) {
        RedisPatchScheduleInner inner = this.serviceClient().get(resourceGroupName, name, defaultParameter);
        if (inner != null) {
            return new RedisPatchScheduleImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private PatchSchedulesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.redis.generated.RedisManager manager() {
        return this.serviceManager;
    }
}

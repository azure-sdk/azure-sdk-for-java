// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisCacheAccessPolicyAssignmentInner;

/**
 * An immutable client-side representation of RedisCacheAccessPolicyAssignment.
 */
public interface RedisCacheAccessPolicyAssignment {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the provisioningState property: Provisioning state of an access policy assignment set.
     * 
     * @return the provisioningState value.
     */
    AccessPolicyAssignmentProvisioningState provisioningState();

    /**
     * Gets the objectId property: Object Id to assign access policy to.
     * 
     * @return the objectId value.
     */
    String objectId();

    /**
     * Gets the objectIdAlias property: User friendly name for object id. Also represents username for token based
     * authentication.
     * 
     * @return the objectIdAlias value.
     */
    String objectIdAlias();

    /**
     * Gets the accessPolicyName property: The name of the access policy that is being assigned.
     * 
     * @return the accessPolicyName value.
     */
    String accessPolicyName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.redis.generated.fluent.models.RedisCacheAccessPolicyAssignmentInner
     * object.
     * 
     * @return the inner object.
     */
    RedisCacheAccessPolicyAssignmentInner innerModel();

    /**
     * The entirety of the RedisCacheAccessPolicyAssignment definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The RedisCacheAccessPolicyAssignment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the RedisCacheAccessPolicyAssignment definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, cacheName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param cacheName The name of the Redis cache.
             * @return the next definition stage.
             */
            WithCreate withExistingRedi(String resourceGroupName, String cacheName);
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithObjectId, DefinitionStages.WithObjectIdAlias,
            DefinitionStages.WithAccessPolicyName {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            RedisCacheAccessPolicyAssignment create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            RedisCacheAccessPolicyAssignment create(Context context);
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment definition allowing to specify objectId.
         */
        interface WithObjectId {
            /**
             * Specifies the objectId property: Object Id to assign access policy to.
             * 
             * @param objectId Object Id to assign access policy to.
             * @return the next definition stage.
             */
            WithCreate withObjectId(String objectId);
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment definition allowing to specify objectIdAlias.
         */
        interface WithObjectIdAlias {
            /**
             * Specifies the objectIdAlias property: User friendly name for object id. Also represents username for
             * token based authentication.
             * 
             * @param objectIdAlias User friendly name for object id. Also represents username for token based
             * authentication.
             * @return the next definition stage.
             */
            WithCreate withObjectIdAlias(String objectIdAlias);
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment definition allowing to specify accessPolicyName.
         */
        interface WithAccessPolicyName {
            /**
             * Specifies the accessPolicyName property: The name of the access policy that is being assigned.
             * 
             * @param accessPolicyName The name of the access policy that is being assigned.
             * @return the next definition stage.
             */
            WithCreate withAccessPolicyName(String accessPolicyName);
        }
    }

    /**
     * Begins update for the RedisCacheAccessPolicyAssignment resource.
     * 
     * @return the stage of resource update.
     */
    RedisCacheAccessPolicyAssignment.Update update();

    /**
     * The template for RedisCacheAccessPolicyAssignment update.
     */
    interface Update
        extends UpdateStages.WithObjectId, UpdateStages.WithObjectIdAlias, UpdateStages.WithAccessPolicyName {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        RedisCacheAccessPolicyAssignment apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        RedisCacheAccessPolicyAssignment apply(Context context);
    }

    /**
     * The RedisCacheAccessPolicyAssignment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the RedisCacheAccessPolicyAssignment update allowing to specify objectId.
         */
        interface WithObjectId {
            /**
             * Specifies the objectId property: Object Id to assign access policy to.
             * 
             * @param objectId Object Id to assign access policy to.
             * @return the next definition stage.
             */
            Update withObjectId(String objectId);
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment update allowing to specify objectIdAlias.
         */
        interface WithObjectIdAlias {
            /**
             * Specifies the objectIdAlias property: User friendly name for object id. Also represents username for
             * token based authentication.
             * 
             * @param objectIdAlias User friendly name for object id. Also represents username for token based
             * authentication.
             * @return the next definition stage.
             */
            Update withObjectIdAlias(String objectIdAlias);
        }

        /**
         * The stage of the RedisCacheAccessPolicyAssignment update allowing to specify accessPolicyName.
         */
        interface WithAccessPolicyName {
            /**
             * Specifies the accessPolicyName property: The name of the access policy that is being assigned.
             * 
             * @param accessPolicyName The name of the access policy that is being assigned.
             * @return the next definition stage.
             */
            Update withAccessPolicyName(String accessPolicyName);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    RedisCacheAccessPolicyAssignment refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    RedisCacheAccessPolicyAssignment refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisCacheAccessPolicyAssignmentInner;
import com.azure.resourcemanager.redis.generated.models.AccessPolicyAssignmentProvisioningState;
import com.azure.resourcemanager.redis.generated.models.RedisCacheAccessPolicyAssignment;

public final class RedisCacheAccessPolicyAssignmentImpl implements RedisCacheAccessPolicyAssignment,
    RedisCacheAccessPolicyAssignment.Definition, RedisCacheAccessPolicyAssignment.Update {
    private RedisCacheAccessPolicyAssignmentInner innerObject;

    private final com.azure.resourcemanager.redis.generated.RedisManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public AccessPolicyAssignmentProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String objectId() {
        return this.innerModel().objectId();
    }

    public String objectIdAlias() {
        return this.innerModel().objectIdAlias();
    }

    public String accessPolicyName() {
        return this.innerModel().accessPolicyName();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public RedisCacheAccessPolicyAssignmentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.redis.generated.RedisManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String cacheName;

    private String accessPolicyAssignmentName;

    public RedisCacheAccessPolicyAssignmentImpl withExistingRedi(String resourceGroupName, String cacheName) {
        this.resourceGroupName = resourceGroupName;
        this.cacheName = cacheName;
        return this;
    }

    public RedisCacheAccessPolicyAssignment create() {
        this.innerObject = serviceManager.serviceClient().getAccessPolicyAssignments().createUpdate(resourceGroupName,
            cacheName, accessPolicyAssignmentName, this.innerModel(), Context.NONE);
        return this;
    }

    public RedisCacheAccessPolicyAssignment create(Context context) {
        this.innerObject = serviceManager.serviceClient().getAccessPolicyAssignments().createUpdate(resourceGroupName,
            cacheName, accessPolicyAssignmentName, this.innerModel(), context);
        return this;
    }

    RedisCacheAccessPolicyAssignmentImpl(String name,
        com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerObject = new RedisCacheAccessPolicyAssignmentInner();
        this.serviceManager = serviceManager;
        this.accessPolicyAssignmentName = name;
    }

    public RedisCacheAccessPolicyAssignmentImpl update() {
        return this;
    }

    public RedisCacheAccessPolicyAssignment apply() {
        this.innerObject = serviceManager.serviceClient().getAccessPolicyAssignments().createUpdate(resourceGroupName,
            cacheName, accessPolicyAssignmentName, this.innerModel(), Context.NONE);
        return this;
    }

    public RedisCacheAccessPolicyAssignment apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getAccessPolicyAssignments().createUpdate(resourceGroupName,
            cacheName, accessPolicyAssignmentName, this.innerModel(), context);
        return this;
    }

    RedisCacheAccessPolicyAssignmentImpl(RedisCacheAccessPolicyAssignmentInner innerObject,
        com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.cacheName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "redis");
        this.accessPolicyAssignmentName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "accessPolicyAssignments");
    }

    public RedisCacheAccessPolicyAssignment refresh() {
        this.innerObject = serviceManager.serviceClient().getAccessPolicyAssignments()
            .getWithResponse(resourceGroupName, cacheName, accessPolicyAssignmentName, Context.NONE).getValue();
        return this;
    }

    public RedisCacheAccessPolicyAssignment refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getAccessPolicyAssignments()
            .getWithResponse(resourceGroupName, cacheName, accessPolicyAssignmentName, context).getValue();
        return this;
    }

    public RedisCacheAccessPolicyAssignmentImpl withObjectId(String objectId) {
        this.innerModel().withObjectId(objectId);
        return this;
    }

    public RedisCacheAccessPolicyAssignmentImpl withObjectIdAlias(String objectIdAlias) {
        this.innerModel().withObjectIdAlias(objectIdAlias);
        return this;
    }

    public RedisCacheAccessPolicyAssignmentImpl withAccessPolicyName(String accessPolicyName) {
        this.innerModel().withAccessPolicyName(accessPolicyName);
        return this;
    }
}

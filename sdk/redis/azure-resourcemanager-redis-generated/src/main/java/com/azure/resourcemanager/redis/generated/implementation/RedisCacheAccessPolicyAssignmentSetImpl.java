// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.redis.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.redis.generated.fluent.models.RedisCacheAccessPolicyAssignmentSetInner;
import com.azure.resourcemanager.redis.generated.models.AccessPolicyAssignmentProvisioningState;
import com.azure.resourcemanager.redis.generated.models.RedisCacheAccessPolicyAssignment;
import com.azure.resourcemanager.redis.generated.models.RedisCacheAccessPolicyAssignmentSet;
import java.util.Collections;
import java.util.List;

public final class RedisCacheAccessPolicyAssignmentSetImpl
    implements RedisCacheAccessPolicyAssignmentSet,
        RedisCacheAccessPolicyAssignmentSet.Definition,
        RedisCacheAccessPolicyAssignmentSet.Update {
    private RedisCacheAccessPolicyAssignmentSetInner innerObject;

    private final com.azure.resourcemanager.redis.generated.RedisManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public AccessPolicyAssignmentProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<RedisCacheAccessPolicyAssignment> assignments() {
        List<RedisCacheAccessPolicyAssignment> inner = this.innerModel().assignments();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public RedisCacheAccessPolicyAssignmentSetInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.redis.generated.RedisManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String cacheName;

    private String accessPolicyName;

    public RedisCacheAccessPolicyAssignmentSetImpl withExistingRedi(String resourceGroupName, String cacheName) {
        this.resourceGroupName = resourceGroupName;
        this.cacheName = cacheName;
        return this;
    }

    public RedisCacheAccessPolicyAssignmentSet create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessPolicyAssignments()
                .createUpdate(resourceGroupName, cacheName, accessPolicyName, this.innerModel(), Context.NONE);
        return this;
    }

    public RedisCacheAccessPolicyAssignmentSet create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessPolicyAssignments()
                .createUpdate(resourceGroupName, cacheName, accessPolicyName, this.innerModel(), context);
        return this;
    }

    RedisCacheAccessPolicyAssignmentSetImpl(
        String name, com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerObject = new RedisCacheAccessPolicyAssignmentSetInner();
        this.serviceManager = serviceManager;
        this.accessPolicyName = name;
    }

    public RedisCacheAccessPolicyAssignmentSetImpl update() {
        return this;
    }

    public RedisCacheAccessPolicyAssignmentSet apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessPolicyAssignments()
                .createUpdate(resourceGroupName, cacheName, accessPolicyName, this.innerModel(), Context.NONE);
        return this;
    }

    public RedisCacheAccessPolicyAssignmentSet apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessPolicyAssignments()
                .createUpdate(resourceGroupName, cacheName, accessPolicyName, this.innerModel(), context);
        return this;
    }

    RedisCacheAccessPolicyAssignmentSetImpl(
        RedisCacheAccessPolicyAssignmentSetInner innerObject,
        com.azure.resourcemanager.redis.generated.RedisManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.cacheName = Utils.getValueFromIdByName(innerObject.id(), "redis");
        this.accessPolicyName = Utils.getValueFromIdByName(innerObject.id(), "accessPolicyAssignments");
    }

    public RedisCacheAccessPolicyAssignmentSet refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessPolicyAssignments()
                .getWithResponse(resourceGroupName, cacheName, accessPolicyName, Context.NONE)
                .getValue();
        return this;
    }

    public RedisCacheAccessPolicyAssignmentSet refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccessPolicyAssignments()
                .getWithResponse(resourceGroupName, cacheName, accessPolicyName, context)
                .getValue();
        return this;
    }

    public RedisCacheAccessPolicyAssignmentSetImpl withAssignments(List<RedisCacheAccessPolicyAssignment> assignments) {
        this.innerModel().withAssignments(assignments);
        return this;
    }
}

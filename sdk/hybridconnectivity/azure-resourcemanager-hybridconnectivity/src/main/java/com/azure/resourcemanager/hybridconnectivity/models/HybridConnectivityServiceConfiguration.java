// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.HybridConnectivityServiceConfigurationInner;

/**
 * An immutable client-side representation of HybridConnectivityServiceConfiguration.
 */
public interface HybridConnectivityServiceConfiguration {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the serviceName property: Name of the service.
     * 
     * @return the serviceName value.
     */
    HybridConnectivityServiceName serviceName();

    /**
     * Gets the resourceId property: The resource Id of the connectivity endpoint (optional).
     * 
     * @return the resourceId value.
     */
    String resourceId();

    /**
     * Gets the port property: The port on which service is enabled.
     * 
     * @return the port value.
     */
    Long port();

    /**
     * Gets the provisioningState property: The resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    HybridConnectivityProvisioningState provisioningState();

    /**
     * Gets the inner
     * com.azure.resourcemanager.hybridconnectivity.fluent.models.HybridConnectivityServiceConfigurationInner object.
     * 
     * @return the inner object.
     */
    HybridConnectivityServiceConfigurationInner innerModel();

    /**
     * The entirety of the HybridConnectivityServiceConfiguration definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The HybridConnectivityServiceConfiguration definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the HybridConnectivityServiceConfiguration definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the HybridConnectivityServiceConfiguration definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceUri, endpointName.
             * 
             * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
             * @param endpointName The endpoint name.
             * @return the next definition stage.
             */
            WithCreate withExistingEndpoint(String resourceUri, String endpointName);
        }

        /**
         * The stage of the HybridConnectivityServiceConfiguration definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithServiceName, DefinitionStages.WithResourceId, DefinitionStages.WithPort {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            HybridConnectivityServiceConfiguration create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            HybridConnectivityServiceConfiguration create(Context context);
        }

        /**
         * The stage of the HybridConnectivityServiceConfiguration definition allowing to specify serviceName.
         */
        interface WithServiceName {
            /**
             * Specifies the serviceName property: Name of the service..
             * 
             * @param serviceName Name of the service.
             * @return the next definition stage.
             */
            WithCreate withServiceName(HybridConnectivityServiceName serviceName);
        }

        /**
         * The stage of the HybridConnectivityServiceConfiguration definition allowing to specify resourceId.
         */
        interface WithResourceId {
            /**
             * Specifies the resourceId property: The resource Id of the connectivity endpoint (optional)..
             * 
             * @param resourceId The resource Id of the connectivity endpoint (optional).
             * @return the next definition stage.
             */
            WithCreate withResourceId(String resourceId);
        }

        /**
         * The stage of the HybridConnectivityServiceConfiguration definition allowing to specify port.
         */
        interface WithPort {
            /**
             * Specifies the port property: The port on which service is enabled..
             * 
             * @param port The port on which service is enabled.
             * @return the next definition stage.
             */
            WithCreate withPort(Long port);
        }
    }

    /**
     * Begins update for the HybridConnectivityServiceConfiguration resource.
     * 
     * @return the stage of resource update.
     */
    HybridConnectivityServiceConfiguration.Update update();

    /**
     * The template for HybridConnectivityServiceConfiguration update.
     */
    interface Update extends UpdateStages.WithPort {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        HybridConnectivityServiceConfiguration apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        HybridConnectivityServiceConfiguration apply(Context context);
    }

    /**
     * The HybridConnectivityServiceConfiguration update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the HybridConnectivityServiceConfiguration update allowing to specify port.
         */
        interface WithPort {
            /**
             * Specifies the port property: The port on which service is enabled..
             * 
             * @param port The port on which service is enabled.
             * @return the next definition stage.
             */
            Update withPort(Long port);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    HybridConnectivityServiceConfiguration refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    HybridConnectivityServiceConfiguration refresh(Context context);
}

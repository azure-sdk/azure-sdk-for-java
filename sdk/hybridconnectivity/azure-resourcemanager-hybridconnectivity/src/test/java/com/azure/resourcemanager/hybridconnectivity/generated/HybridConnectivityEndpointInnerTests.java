// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.HybridConnectivityEndpointInner;
import com.azure.resourcemanager.hybridconnectivity.models.HybridConnectivityEndpointProperties;
import com.azure.resourcemanager.hybridconnectivity.models.HybridConnectivityEndpointType;
import org.junit.jupiter.api.Assertions;

public final class HybridConnectivityEndpointInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HybridConnectivityEndpointInner model = BinaryData.fromString(
            "{\"properties\":{\"type\":\"custom\",\"resourceId\":\"bpzvgn\",\"provisioningState\":\"symglzufcyz\"},\"id\":\"hdbihan\",\"name\":\"fhfcb\",\"type\":\"y\"}")
            .toObject(HybridConnectivityEndpointInner.class);
        Assertions.assertEquals(HybridConnectivityEndpointType.CUSTOM, model.properties().endpointType());
        Assertions.assertEquals("bpzvgn", model.properties().resourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HybridConnectivityEndpointInner model = new HybridConnectivityEndpointInner().withProperties(
            new HybridConnectivityEndpointProperties().withEndpointType(HybridConnectivityEndpointType.CUSTOM)
                .withResourceId("bpzvgn"));
        model = BinaryData.fromObject(model).toObject(HybridConnectivityEndpointInner.class);
        Assertions.assertEquals(HybridConnectivityEndpointType.CUSTOM, model.properties().endpointType());
        Assertions.assertEquals("bpzvgn", model.properties().resourceId());
    }
}

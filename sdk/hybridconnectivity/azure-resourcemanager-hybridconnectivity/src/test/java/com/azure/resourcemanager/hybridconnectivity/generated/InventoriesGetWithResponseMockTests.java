// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.hybridconnectivity.HybridConnectivityManager;
import com.azure.resourcemanager.hybridconnectivity.models.CloudNativeType;
import com.azure.resourcemanager.hybridconnectivity.models.InventoryResource;
import com.azure.resourcemanager.hybridconnectivity.models.SolutionConfigurationStatus;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class InventoriesGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"cloudNativeType\":\"ec2\",\"cloudNativeResourceId\":\"wbw\",\"azureResourceId\":\"szzcmrvexztv\",\"status\":\"Failed\",\"statusDetails\":\"sfraoyzko\",\"provisioningState\":\"Failed\"},\"id\":\"mnguxawqaldsyu\",\"name\":\"ximerqfobwyznk\",\"type\":\"ykutwpf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        HybridConnectivityManager manager = HybridConnectivityManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        InventoryResource response = manager.inventories()
            .getWithResponse("p", "doamciodhkha", "xkhnzbonlwnto", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals(CloudNativeType.EC2, response.properties().cloudNativeType());
        Assertions.assertEquals("wbw", response.properties().cloudNativeResourceId());
        Assertions.assertEquals("szzcmrvexztv", response.properties().azureResourceId());
        Assertions.assertEquals(SolutionConfigurationStatus.FAILED, response.properties().status());
        Assertions.assertEquals("sfraoyzko", response.properties().statusDetails());
    }
}

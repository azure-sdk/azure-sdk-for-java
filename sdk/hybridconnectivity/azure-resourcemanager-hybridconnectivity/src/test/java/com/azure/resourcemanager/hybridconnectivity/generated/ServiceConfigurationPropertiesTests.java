// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.ServiceConfigurationProperties;
import com.azure.resourcemanager.hybridconnectivity.models.HybridConnectivityServiceName;
import org.junit.jupiter.api.Assertions;

public final class ServiceConfigurationPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServiceConfigurationProperties model = BinaryData.fromString(
            "{\"serviceName\":\"WAC\",\"resourceId\":\"podepoo\",\"port\":3846705136776148511,\"provisioningState\":\"Updating\"}")
            .toObject(ServiceConfigurationProperties.class);
        Assertions.assertEquals(HybridConnectivityServiceName.WAC, model.serviceName());
        Assertions.assertEquals("podepoo", model.resourceId());
        Assertions.assertEquals(3846705136776148511L, model.port());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServiceConfigurationProperties model
            = new ServiceConfigurationProperties().withServiceName(HybridConnectivityServiceName.WAC)
                .withResourceId("podepoo")
                .withPort(3846705136776148511L);
        model = BinaryData.fromObject(model).toObject(ServiceConfigurationProperties.class);
        Assertions.assertEquals(HybridConnectivityServiceName.WAC, model.serviceName());
        Assertions.assertEquals("podepoo", model.resourceId());
        Assertions.assertEquals(3846705136776148511L, model.port());
    }
}

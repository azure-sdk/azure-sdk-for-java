// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.hybridconnectivity.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.hybridconnectivity.fluent.models.HybridConnectivityServiceConfigurationInner;
import com.azure.resourcemanager.hybridconnectivity.models.HybridConnectivityServiceName;
import org.junit.jupiter.api.Assertions;

public final class HybridConnectivityServiceConfigurationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HybridConnectivityServiceConfigurationInner model = BinaryData.fromString(
            "{\"properties\":{\"serviceName\":\"SSH\",\"resourceId\":\"cjrwzoxxjtfellu\",\"port\":6619682147047690446,\"provisioningState\":\"Creating\"},\"id\":\"peqfpjkjl\",\"name\":\"ofpdvh\",\"type\":\"fxxypininmayhuy\"}")
            .toObject(HybridConnectivityServiceConfigurationInner.class);
        Assertions.assertEquals(HybridConnectivityServiceName.SSH, model.serviceName());
        Assertions.assertEquals("cjrwzoxxjtfellu", model.resourceId());
        Assertions.assertEquals(6619682147047690446L, model.port());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HybridConnectivityServiceConfigurationInner model
            = new HybridConnectivityServiceConfigurationInner().withServiceName(HybridConnectivityServiceName.SSH)
                .withResourceId("cjrwzoxxjtfellu")
                .withPort(6619682147047690446L);
        model = BinaryData.fromObject(model).toObject(HybridConnectivityServiceConfigurationInner.class);
        Assertions.assertEquals(HybridConnectivityServiceName.SSH, model.serviceName());
        Assertions.assertEquals("cjrwzoxxjtfellu", model.resourceId());
        Assertions.assertEquals(6619682147047690446L, model.port());
    }
}

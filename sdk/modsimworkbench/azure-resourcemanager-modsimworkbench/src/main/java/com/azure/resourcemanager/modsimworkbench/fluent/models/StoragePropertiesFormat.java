// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.modsimworkbench.models.PerformanceTier;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Storage properties. */
@Fluent
public final class StoragePropertiesFormat {
    /*
     * Gets the status of the storage at the time the operation was called
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Provisioned size of the ModSim Workbench chamber storage in terabytes
     */
    @JsonProperty(value = "capacityAllocated")
    private Integer capacityAllocated;

    /*
     * Specifies performance tier of the ModSim Workbench chamber storage.
     */
    @JsonProperty(value = "performanceTier")
    private PerformanceTier performanceTier;

    /*
     * Directory where the SDW Private Storage volume mounted.
     */
    @JsonProperty(value = "localMountPath")
    private String localMountPath;

    /*
     * Directory for the ModSim Workbench chamber data pipeline inbound.
     */
    @JsonProperty(value = "dataPipelineInboundPath")
    private String dataPipelineInboundPath;

    /*
     * Directory for the ModSim Workbench chamber data pipeline outbound.
     */
    @JsonProperty(value = "dataPipelineOutboundPath")
    private String dataPipelineOutboundPath;

    /*
     * Capacity used in the SDW Private Storage volume in gigabytes.
     */
    @JsonProperty(value = "capacityUsed")
    private Integer capacityUsed;

    /** Creates an instance of StoragePropertiesFormat class. */
    public StoragePropertiesFormat() {
    }

    /**
     * Get the provisioningState property: Gets the status of the storage at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the capacityAllocated property: Provisioned size of the ModSim Workbench chamber storage in terabytes.
     *
     * @return the capacityAllocated value.
     */
    public Integer capacityAllocated() {
        return this.capacityAllocated;
    }

    /**
     * Set the capacityAllocated property: Provisioned size of the ModSim Workbench chamber storage in terabytes.
     *
     * @param capacityAllocated the capacityAllocated value to set.
     * @return the StoragePropertiesFormat object itself.
     */
    public StoragePropertiesFormat withCapacityAllocated(Integer capacityAllocated) {
        this.capacityAllocated = capacityAllocated;
        return this;
    }

    /**
     * Get the performanceTier property: Specifies performance tier of the ModSim Workbench chamber storage.
     *
     * @return the performanceTier value.
     */
    public PerformanceTier performanceTier() {
        return this.performanceTier;
    }

    /**
     * Set the performanceTier property: Specifies performance tier of the ModSim Workbench chamber storage.
     *
     * @param performanceTier the performanceTier value to set.
     * @return the StoragePropertiesFormat object itself.
     */
    public StoragePropertiesFormat withPerformanceTier(PerformanceTier performanceTier) {
        this.performanceTier = performanceTier;
        return this;
    }

    /**
     * Get the localMountPath property: Directory where the SDW Private Storage volume mounted.
     *
     * @return the localMountPath value.
     */
    public String localMountPath() {
        return this.localMountPath;
    }

    /**
     * Set the localMountPath property: Directory where the SDW Private Storage volume mounted.
     *
     * @param localMountPath the localMountPath value to set.
     * @return the StoragePropertiesFormat object itself.
     */
    public StoragePropertiesFormat withLocalMountPath(String localMountPath) {
        this.localMountPath = localMountPath;
        return this;
    }

    /**
     * Get the dataPipelineInboundPath property: Directory for the ModSim Workbench chamber data pipeline inbound.
     *
     * @return the dataPipelineInboundPath value.
     */
    public String dataPipelineInboundPath() {
        return this.dataPipelineInboundPath;
    }

    /**
     * Set the dataPipelineInboundPath property: Directory for the ModSim Workbench chamber data pipeline inbound.
     *
     * @param dataPipelineInboundPath the dataPipelineInboundPath value to set.
     * @return the StoragePropertiesFormat object itself.
     */
    public StoragePropertiesFormat withDataPipelineInboundPath(String dataPipelineInboundPath) {
        this.dataPipelineInboundPath = dataPipelineInboundPath;
        return this;
    }

    /**
     * Get the dataPipelineOutboundPath property: Directory for the ModSim Workbench chamber data pipeline outbound.
     *
     * @return the dataPipelineOutboundPath value.
     */
    public String dataPipelineOutboundPath() {
        return this.dataPipelineOutboundPath;
    }

    /**
     * Set the dataPipelineOutboundPath property: Directory for the ModSim Workbench chamber data pipeline outbound.
     *
     * @param dataPipelineOutboundPath the dataPipelineOutboundPath value to set.
     * @return the StoragePropertiesFormat object itself.
     */
    public StoragePropertiesFormat withDataPipelineOutboundPath(String dataPipelineOutboundPath) {
        this.dataPipelineOutboundPath = dataPipelineOutboundPath;
        return this;
    }

    /**
     * Get the capacityUsed property: Capacity used in the SDW Private Storage volume in gigabytes.
     *
     * @return the capacityUsed value.
     */
    public Integer capacityUsed() {
        return this.capacityUsed;
    }

    /**
     * Set the capacityUsed property: Capacity used in the SDW Private Storage volume in gigabytes.
     *
     * @param capacityUsed the capacityUsed value to set.
     * @return the StoragePropertiesFormat object itself.
     */
    public StoragePropertiesFormat withCapacityUsed(Integer capacityUsed) {
        this.capacityUsed = capacityUsed;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

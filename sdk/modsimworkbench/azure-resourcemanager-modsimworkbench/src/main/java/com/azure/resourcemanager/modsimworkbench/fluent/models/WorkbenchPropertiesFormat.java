// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.modsimworkbench.models.AppOidc;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Workbench properties. */
@Fluent
public final class WorkbenchPropertiesFormat {
    /*
     * this is an extension of IPAddress which includes logic related to Classes Interdomain Routing (CIDR) formatted
     * IP Addresses.
     * E.g. 192.168.0.0/24, most people's default class C RFC 1918 IP space for their home router
     */
    @JsonProperty(value = "addressSpace")
    private String addressSpace;

    /*
     * Workbench properties.
     */
    @JsonProperty(value = "appOidc", required = true)
    private AppOidc appOidc;

    /*
     * Name of SKU.
     */
    @JsonProperty(value = "sku")
    private String sku;

    /*
     * Gets the status of the workbench at the time the operation was called
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of WorkbenchPropertiesFormat class. */
    public WorkbenchPropertiesFormat() {
    }

    /**
     * Get the addressSpace property: this is an extension of IPAddress which includes logic related to Classes
     * Interdomain Routing (CIDR) formatted IP Addresses. E.g. 192.168.0.0/24, most people's default class C RFC 1918 IP
     * space for their home router.
     *
     * @return the addressSpace value.
     */
    public String addressSpace() {
        return this.addressSpace;
    }

    /**
     * Set the addressSpace property: this is an extension of IPAddress which includes logic related to Classes
     * Interdomain Routing (CIDR) formatted IP Addresses. E.g. 192.168.0.0/24, most people's default class C RFC 1918 IP
     * space for their home router.
     *
     * @param addressSpace the addressSpace value to set.
     * @return the WorkbenchPropertiesFormat object itself.
     */
    public WorkbenchPropertiesFormat withAddressSpace(String addressSpace) {
        this.addressSpace = addressSpace;
        return this;
    }

    /**
     * Get the appOidc property: Workbench properties.
     *
     * @return the appOidc value.
     */
    public AppOidc appOidc() {
        return this.appOidc;
    }

    /**
     * Set the appOidc property: Workbench properties.
     *
     * @param appOidc the appOidc value to set.
     * @return the WorkbenchPropertiesFormat object itself.
     */
    public WorkbenchPropertiesFormat withAppOidc(AppOidc appOidc) {
        this.appOidc = appOidc;
        return this;
    }

    /**
     * Get the sku property: Name of SKU.
     *
     * @return the sku value.
     */
    public String sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Name of SKU.
     *
     * @param sku the sku value to set.
     * @return the WorkbenchPropertiesFormat object itself.
     */
    public WorkbenchPropertiesFormat withSku(String sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the provisioningState property: Gets the status of the workbench at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (appOidc() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property appOidc in model WorkbenchPropertiesFormat"));
        } else {
            appOidc().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(WorkbenchPropertiesFormat.class);
}

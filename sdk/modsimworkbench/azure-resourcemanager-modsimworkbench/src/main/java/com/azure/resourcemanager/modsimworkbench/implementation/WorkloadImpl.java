// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.modsimworkbench.fluent.models.WorkloadInner;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.azure.resourcemanager.modsimworkbench.models.Workload;
import java.util.Collections;
import java.util.Map;

public final class WorkloadImpl implements Workload, Workload.Definition, Workload.Update {
    private WorkloadInner innerObject;

    private final com.azure.resourcemanager.modsimworkbench.ModsimworkbenchManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String sku() {
        return this.innerModel().sku();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String vmSize() {
        return this.innerModel().vmSize();
    }

    public String edaType() {
        return this.innerModel().edaType();
    }

    public String status() {
        return this.innerModel().status();
    }

    public String privateIp() {
        return this.innerModel().privateIp();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroup;
    }

    public WorkloadInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.modsimworkbench.ModsimworkbenchManager manager() {
        return this.serviceManager;
    }

    private String resourceGroup;

    private String workbenchName;

    private String chamberName;

    private String workloadName;

    public WorkloadImpl withExistingChamber(String resourceGroup, String workbenchName, String chamberName) {
        this.resourceGroup = resourceGroup;
        this.workbenchName = workbenchName;
        this.chamberName = chamberName;
        return this;
    }

    public Workload create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkloads()
                .createOrUpdate(
                    resourceGroup, workbenchName, chamberName, workloadName, this.innerModel(), Context.NONE);
        return this;
    }

    public Workload create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkloads()
                .createOrUpdate(resourceGroup, workbenchName, chamberName, workloadName, this.innerModel(), context);
        return this;
    }

    WorkloadImpl(String name, com.azure.resourcemanager.modsimworkbench.ModsimworkbenchManager serviceManager) {
        this.innerObject = new WorkloadInner();
        this.serviceManager = serviceManager;
        this.workloadName = name;
    }

    public WorkloadImpl update() {
        return this;
    }

    public Workload apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkloads()
                .updateWithResponse(
                    resourceGroup, workbenchName, chamberName, workloadName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Workload apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkloads()
                .updateWithResponse(resourceGroup, workbenchName, chamberName, workloadName, this.innerModel(), context)
                .getValue();
        return this;
    }

    WorkloadImpl(
        WorkloadInner innerObject, com.azure.resourcemanager.modsimworkbench.ModsimworkbenchManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroup = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workbenchName = Utils.getValueFromIdByName(innerObject.id(), "workbenches");
        this.chamberName = Utils.getValueFromIdByName(innerObject.id(), "chambers");
        this.workloadName = Utils.getValueFromIdByName(innerObject.id(), "workloads");
    }

    public Workload refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkloads()
                .getWithResponse(resourceGroup, workbenchName, chamberName, workloadName, Context.NONE)
                .getValue();
        return this;
    }

    public Workload refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getWorkloads()
                .getWithResponse(resourceGroup, workbenchName, chamberName, workloadName, context)
                .getValue();
        return this;
    }

    public WorkloadImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public WorkloadImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public WorkloadImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public WorkloadImpl withSku(String sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public WorkloadImpl withVmSize(String vmSize) {
        this.innerModel().withVmSize(vmSize);
        return this;
    }

    public WorkloadImpl withEdaType(String edaType) {
        this.innerModel().withEdaType(edaType);
        return this;
    }
}

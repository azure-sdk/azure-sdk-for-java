// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** File properties. */
@Fluent
public final class FilePropertiesFormat {
    /*
     * Gets the status of the file at the time the operation was called
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The modified timestamp of the file.
     */
    @JsonProperty(value = "timestamp")
    private OffsetDateTime timestamp;

    /*
     * The direction of ModSim Workbench chamber data pipeline where the file located.
     */
    @JsonProperty(value = "dataPipeline")
    private String dataPipeline;

    /*
     * The resource ID of ModSim Workbench chamber data pipeline request Works and required only if requested is true.
     */
    @JsonProperty(value = "requestId")
    private String requestId;

    /*
     * The Linux File System path for the ModSim Workbench chamber data pipeline file.
     */
    @JsonProperty(value = "filePath")
    private String filePath;

    /*
     * The size of the file.
     */
    @JsonProperty(value = "size")
    private Long size;

    /*
     * The MD5 hash of the file.
     */
    @JsonProperty(value = "checksum")
    private String checksum;

    /** Creates an instance of FilePropertiesFormat class. */
    public FilePropertiesFormat() {
    }

    /**
     * Get the provisioningState property: Gets the status of the file at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the timestamp property: The modified timestamp of the file.
     *
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Set the timestamp property: The modified timestamp of the file.
     *
     * @param timestamp the timestamp value to set.
     * @return the FilePropertiesFormat object itself.
     */
    public FilePropertiesFormat withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get the dataPipeline property: The direction of ModSim Workbench chamber data pipeline where the file located.
     *
     * @return the dataPipeline value.
     */
    public String dataPipeline() {
        return this.dataPipeline;
    }

    /**
     * Set the dataPipeline property: The direction of ModSim Workbench chamber data pipeline where the file located.
     *
     * @param dataPipeline the dataPipeline value to set.
     * @return the FilePropertiesFormat object itself.
     */
    public FilePropertiesFormat withDataPipeline(String dataPipeline) {
        this.dataPipeline = dataPipeline;
        return this;
    }

    /**
     * Get the requestId property: The resource ID of ModSim Workbench chamber data pipeline request Works and required
     * only if requested is true.
     *
     * @return the requestId value.
     */
    public String requestId() {
        return this.requestId;
    }

    /**
     * Set the requestId property: The resource ID of ModSim Workbench chamber data pipeline request Works and required
     * only if requested is true.
     *
     * @param requestId the requestId value to set.
     * @return the FilePropertiesFormat object itself.
     */
    public FilePropertiesFormat withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    /**
     * Get the filePath property: The Linux File System path for the ModSim Workbench chamber data pipeline file.
     *
     * @return the filePath value.
     */
    public String filePath() {
        return this.filePath;
    }

    /**
     * Set the filePath property: The Linux File System path for the ModSim Workbench chamber data pipeline file.
     *
     * @param filePath the filePath value to set.
     * @return the FilePropertiesFormat object itself.
     */
    public FilePropertiesFormat withFilePath(String filePath) {
        this.filePath = filePath;
        return this;
    }

    /**
     * Get the size property: The size of the file.
     *
     * @return the size value.
     */
    public Long size() {
        return this.size;
    }

    /**
     * Set the size property: The size of the file.
     *
     * @param size the size value to set.
     * @return the FilePropertiesFormat object itself.
     */
    public FilePropertiesFormat withSize(Long size) {
        this.size = size;
        return this;
    }

    /**
     * Get the checksum property: The MD5 hash of the file.
     *
     * @return the checksum value.
     */
    public String checksum() {
        return this.checksum;
    }

    /**
     * Set the checksum property: The MD5 hash of the file.
     *
     * @param checksum the checksum value to set.
     * @return the FilePropertiesFormat object itself.
     */
    public FilePropertiesFormat withChecksum(String checksum) {
        this.checksum = checksum;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

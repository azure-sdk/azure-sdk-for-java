// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Connector properties. */
@Fluent
public final class ConnectorPropertiesFormat {
    /*
     * Gets or sets the Access Configuration.
     */
    @JsonProperty(value = "accessConfigurations")
    private Object accessConfigurations;

    /*
     * Gets or sets the Remote Desktop.
     */
    @JsonProperty(value = "remoteDesktop")
    private Object remoteDesktop;

    /*
     * Specifies set of source IP address ranges to allow access the ModSim Workbench workbench.
     */
    @JsonProperty(value = "networkAcls")
    private Object networkAcls;

    /*
     * Gets the status of the connector at the time the operation was called
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /** Creates an instance of ConnectorPropertiesFormat class. */
    public ConnectorPropertiesFormat() {
    }

    /**
     * Get the accessConfigurations property: Gets or sets the Access Configuration.
     *
     * @return the accessConfigurations value.
     */
    public Object accessConfigurations() {
        return this.accessConfigurations;
    }

    /**
     * Set the accessConfigurations property: Gets or sets the Access Configuration.
     *
     * @param accessConfigurations the accessConfigurations value to set.
     * @return the ConnectorPropertiesFormat object itself.
     */
    public ConnectorPropertiesFormat withAccessConfigurations(Object accessConfigurations) {
        this.accessConfigurations = accessConfigurations;
        return this;
    }

    /**
     * Get the remoteDesktop property: Gets or sets the Remote Desktop.
     *
     * @return the remoteDesktop value.
     */
    public Object remoteDesktop() {
        return this.remoteDesktop;
    }

    /**
     * Set the remoteDesktop property: Gets or sets the Remote Desktop.
     *
     * @param remoteDesktop the remoteDesktop value to set.
     * @return the ConnectorPropertiesFormat object itself.
     */
    public ConnectorPropertiesFormat withRemoteDesktop(Object remoteDesktop) {
        this.remoteDesktop = remoteDesktop;
        return this;
    }

    /**
     * Get the networkAcls property: Specifies set of source IP address ranges to allow access the ModSim Workbench
     * workbench.
     *
     * @return the networkAcls value.
     */
    public Object networkAcls() {
        return this.networkAcls;
    }

    /**
     * Set the networkAcls property: Specifies set of source IP address ranges to allow access the ModSim Workbench
     * workbench.
     *
     * @param networkAcls the networkAcls value to set.
     * @return the ConnectorPropertiesFormat object itself.
     */
    public ConnectorPropertiesFormat withNetworkAcls(Object networkAcls) {
        this.networkAcls = networkAcls;
        return this;
    }

    /**
     * Get the provisioningState property: Gets the status of the connector at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

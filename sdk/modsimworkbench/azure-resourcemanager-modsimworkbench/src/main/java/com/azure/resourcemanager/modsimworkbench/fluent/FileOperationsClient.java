// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.modsimworkbench.fluent.models.FilesManageInner;
import com.azure.resourcemanager.modsimworkbench.models.FilesManageParameters;

/** An instance of this class provides access to all the operations defined in FileOperationsClient. */
public interface FileOperationsClient {
    /**
     * Manage files in an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of manage files in an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FilesManageInner>, FilesManageInner> beginManage(
        String resourceGroupName, String workbenchName, String chamberName, String fileName);

    /**
     * Manage files in an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @param body Manage download file parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of manage files in an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FilesManageInner>, FilesManageInner> beginManage(
        String resourceGroupName,
        String workbenchName,
        String chamberName,
        String fileName,
        FilesManageParameters body,
        Context context);

    /**
     * Manage files in an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return manage files in an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FilesManageInner manage(String resourceGroupName, String workbenchName, String chamberName, String fileName);

    /**
     * Manage files in an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @param body Manage download file parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return manage files in an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FilesManageInner manage(
        String resourceGroupName,
        String workbenchName,
        String chamberName,
        String fileName,
        FilesManageParameters body,
        Context context);
}

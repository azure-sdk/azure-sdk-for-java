// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Chamber resource. */
@Fluent
public final class ChamberInner extends Resource {
    /*
     * Chamber properties.
     */
    @JsonProperty(value = "properties")
    private ChamberPropertiesFormat innerProperties;

    /*
     * system data
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Name of SKU.
     */
    @JsonProperty(value = "sku")
    private String sku;

    /** Creates an instance of ChamberInner class. */
    public ChamberInner() {
    }

    /**
     * Get the innerProperties property: Chamber properties.
     *
     * @return the innerProperties value.
     */
    private ChamberPropertiesFormat innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: system data.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the sku property: Name of SKU.
     *
     * @return the sku value.
     */
    public String sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Name of SKU.
     *
     * @param sku the sku value to set.
     * @return the ChamberInner object itself.
     */
    public ChamberInner withSku(String sku) {
        this.sku = sku;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ChamberInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ChamberInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the provisioningState property: Gets the status of the Chamber at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the enable property: Switch to show if License Service is activated.
     *
     * @return the enable value.
     */
    public Boolean enable() {
        return this.innerProperties() == null ? null : this.innerProperties().enable();
    }

    /**
     * Get the server property: License Service server.
     *
     * @return the server value.
     */
    public String server() {
        return this.innerProperties() == null ? null : this.innerProperties().server();
    }

    /**
     * Get the lmhostId property: Unique identifier of ModSim Workbench chamber license servers used by FlexNet
     * Licensing Service.
     *
     * @return the lmhostId value.
     */
    public List<String> lmhostId() {
        return this.innerProperties() == null ? null : this.innerProperties().lmhostId();
    }

    /**
     * Get the mfp property: License server information for Cadence License Manager.
     *
     * @return the mfp value.
     */
    public List<String> mfp() {
        return this.innerProperties() == null ? null : this.innerProperties().mfp();
    }

    /**
     * Get the enableAnsysEnable property: Switch to show if License Service is activated.
     *
     * @return the enableAnsysEnable value.
     */
    public Boolean enableAnsysEnable() {
        return this.innerProperties() == null ? null : this.innerProperties().enableAnsysEnable();
    }

    /**
     * Get the serverAnsysServer property: License Service server.
     *
     * @return the serverAnsysServer value.
     */
    public String serverAnsysServer() {
        return this.innerProperties() == null ? null : this.innerProperties().serverAnsysServer();
    }

    /**
     * Get the lmhostIdAnsysLmhostId property: Unique identifier of ModSim Workbench chamber license servers used by
     * FlexNet Licensing Service.
     *
     * @return the lmhostIdAnsysLmhostId value.
     */
    public List<String> lmhostIdAnsysLmhostId() {
        return this.innerProperties() == null ? null : this.innerProperties().lmhostIdAnsysLmhostId();
    }

    /**
     * Get the enableSiemensEnable property: Switch to show if License Service is activated.
     *
     * @return the enableSiemensEnable value.
     */
    public Boolean enableSiemensEnable() {
        return this.innerProperties() == null ? null : this.innerProperties().enableSiemensEnable();
    }

    /**
     * Get the serverSiemensServer property: License Service server.
     *
     * @return the serverSiemensServer value.
     */
    public String serverSiemensServer() {
        return this.innerProperties() == null ? null : this.innerProperties().serverSiemensServer();
    }

    /**
     * Get the lmhostIdSiemensLmhostId property: Unique identifier of ModSim Workbench chamber license servers used by
     * FlexNet Licensing Service.
     *
     * @return the lmhostIdSiemensLmhostId value.
     */
    public List<String> lmhostIdSiemensLmhostId() {
        return this.innerProperties() == null ? null : this.innerProperties().lmhostIdSiemensLmhostId();
    }

    /**
     * Get the enableSynopsysEnable property: Switch to show if License Service is activated.
     *
     * @return the enableSynopsysEnable value.
     */
    public Boolean enableSynopsysEnable() {
        return this.innerProperties() == null ? null : this.innerProperties().enableSynopsysEnable();
    }

    /**
     * Get the serverSynopsysServer property: License Service server.
     *
     * @return the serverSynopsysServer value.
     */
    public String serverSynopsysServer() {
        return this.innerProperties() == null ? null : this.innerProperties().serverSynopsysServer();
    }

    /**
     * Get the vmUuid property: Virtual machine universal unique identifier of ModSim Workbench chamber license servers
     * used by FlexNet Licensing Service.
     *
     * @return the vmUuid value.
     */
    public List<String> vmUuid() {
        return this.innerProperties() == null ? null : this.innerProperties().vmUuid();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

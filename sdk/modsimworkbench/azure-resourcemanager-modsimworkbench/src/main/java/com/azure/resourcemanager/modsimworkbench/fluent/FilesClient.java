// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.modsimworkbench.fluent.models.DownloadRequestInner;
import com.azure.resourcemanager.modsimworkbench.fluent.models.FileInner;
import com.azure.resourcemanager.modsimworkbench.models.FilesDownloadRequestParameters;

/** An instance of this class provides access to all the operations defined in FilesClient. */
public interface FilesClient {
    /**
     * Get a specific ModSim Workbench chamber data pipeline file resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific ModSim Workbench chamber data pipeline file resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<FileInner> getWithResponse(
        String resourceGroupName, String workbenchName, String chamberName, String fileName, Context context);

    /**
     * Get a specific ModSim Workbench chamber data pipeline file resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific ModSim Workbench chamber data pipeline file resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FileInner get(String resourceGroupName, String workbenchName, String chamberName, String fileName);

    /**
     * Request to download files from an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of request to download files from an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DownloadRequestInner>, DownloadRequestInner> beginDownloadRequest(
        String resourceGroupName, String workbenchName, String chamberName, String fileName);

    /**
     * Request to download files from an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @param body the file download request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of request to download files from an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<DownloadRequestInner>, DownloadRequestInner> beginDownloadRequest(
        String resourceGroupName,
        String workbenchName,
        String chamberName,
        String fileName,
        FilesDownloadRequestParameters body,
        Context context);

    /**
     * Request to download files from an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return request to download files from an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DownloadRequestInner downloadRequest(
        String resourceGroupName, String workbenchName, String chamberName, String fileName);

    /**
     * Request to download files from an ModSim Workbench chamber data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param fileName the file name.
     * @param body the file download request parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return request to download files from an chamber data pipeline.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DownloadRequestInner downloadRequest(
        String resourceGroupName,
        String workbenchName,
        String chamberName,
        String fileName,
        FilesDownloadRequestParameters body,
        Context context);

    /**
     * Get ModSim Workbench chamber data pipeline file resource collection.
     *
     * <p>Lists all files.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName The name of the workbench.
     * @param chamberName The name of the chamber.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
     *     Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1 as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FileInner> list(String resourceGroupName, String workbenchName, String chamberName);

    /**
     * Get ModSim Workbench chamber data pipeline file resource collection.
     *
     * <p>Lists all files.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName The name of the workbench.
     * @param chamberName The name of the chamber.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
     *     Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1 as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FileInner> list(String resourceGroupName, String workbenchName, String chamberName, Context context);
}

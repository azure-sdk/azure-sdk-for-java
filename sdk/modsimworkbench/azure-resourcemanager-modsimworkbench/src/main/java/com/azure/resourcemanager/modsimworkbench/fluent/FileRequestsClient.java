// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.modsimworkbench.fluent.models.FileRequestsManageInner;
import com.azure.resourcemanager.modsimworkbench.fluent.models.RequestInner;
import com.azure.resourcemanager.modsimworkbench.models.FileRequestsManageParameters;

/** An instance of this class provides access to all the operations defined in FileRequestsClient. */
public interface FileRequestsClient {
    /**
     * Get a specific ModSim Workbench chamber data pipeline file request resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param requestName the request name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific ModSim Workbench chamber data pipeline file request resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RequestInner> getWithResponse(
        String resourceGroupName, String workbenchName, String chamberName, String requestName, Context context);

    /**
     * Get a specific ModSim Workbench chamber data pipeline file request resource.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param requestName the request name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific ModSim Workbench chamber data pipeline file request resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RequestInner get(String resourceGroupName, String workbenchName, String chamberName, String requestName);

    /**
     * Manage download file requests in an ModSim Workbench chamber Data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param requestName the file request name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of manage download file requests in an chamber Data pipeline.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FileRequestsManageInner>, FileRequestsManageInner> beginManage(
        String resourceGroupName, String workbenchName, String chamberName, String requestName);

    /**
     * Manage download file requests in an ModSim Workbench chamber Data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param requestName the file request name.
     * @param body Manage download file requests parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of manage download file requests in an chamber Data pipeline.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FileRequestsManageInner>, FileRequestsManageInner> beginManage(
        String resourceGroupName,
        String workbenchName,
        String chamberName,
        String requestName,
        FileRequestsManageParameters body,
        Context context);

    /**
     * Manage download file requests in an ModSim Workbench chamber Data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param requestName the file request name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return manage download file requests in an chamber Data pipeline.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FileRequestsManageInner manage(
        String resourceGroupName, String workbenchName, String chamberName, String requestName);

    /**
     * Manage download file requests in an ModSim Workbench chamber Data pipeline.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName the workbench name.
     * @param chamberName the chamber name.
     * @param requestName the file request name.
     * @param body Manage download file requests parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return manage download file requests in an chamber Data pipeline.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FileRequestsManageInner manage(
        String resourceGroupName,
        String workbenchName,
        String chamberName,
        String requestName,
        FileRequestsManageParameters body,
        Context context);

    /**
     * Get ModSim Workbench chamber data pipeline file request resource collection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName The name of the workbench.
     * @param chamberName The name of the chamber.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return modSim Workbench chamber data pipeline file request resource collection as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RequestInner> list(String resourceGroupName, String workbenchName, String chamberName);

    /**
     * Get ModSim Workbench chamber data pipeline file request resource collection.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workbenchName The name of the workbench.
     * @param chamberName The name of the chamber.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return modSim Workbench chamber data pipeline file request resource collection as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RequestInner> list(
        String resourceGroupName, String workbenchName, String chamberName, Context context);
}

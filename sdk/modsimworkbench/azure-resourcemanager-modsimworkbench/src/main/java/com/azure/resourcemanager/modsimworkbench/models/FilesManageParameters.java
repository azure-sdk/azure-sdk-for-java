// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Manage files in an ModSim Workbench chamber data pipeline. */
@Fluent
public final class FilesManageParameters {
    /*
     * Inbound or outbound of the ModSim Workbench chamber Data pipeline.
     */
    @JsonProperty(value = "dataPipeline")
    private DataPipeline dataPipeline;

    /*
     * Specifies the file management action.
     */
    @JsonProperty(value = "action")
    private Action action;

    /*
     * Specifies whether to force delete. Works if action is Delete
     */
    @JsonProperty(value = "force")
    private Force force;

    /** Creates an instance of FilesManageParameters class. */
    public FilesManageParameters() {
    }

    /**
     * Get the dataPipeline property: Inbound or outbound of the ModSim Workbench chamber Data pipeline.
     *
     * @return the dataPipeline value.
     */
    public DataPipeline dataPipeline() {
        return this.dataPipeline;
    }

    /**
     * Set the dataPipeline property: Inbound or outbound of the ModSim Workbench chamber Data pipeline.
     *
     * @param dataPipeline the dataPipeline value to set.
     * @return the FilesManageParameters object itself.
     */
    public FilesManageParameters withDataPipeline(DataPipeline dataPipeline) {
        this.dataPipeline = dataPipeline;
        return this;
    }

    /**
     * Get the action property: Specifies the file management action.
     *
     * @return the action value.
     */
    public Action action() {
        return this.action;
    }

    /**
     * Set the action property: Specifies the file management action.
     *
     * @param action the action value to set.
     * @return the FilesManageParameters object itself.
     */
    public FilesManageParameters withAction(Action action) {
        this.action = action;
        return this;
    }

    /**
     * Get the force property: Specifies whether to force delete. Works if action is Delete.
     *
     * @return the force value.
     */
    public Force force() {
        return this.force;
    }

    /**
     * Set the force property: Specifies whether to force delete. Works if action is Delete.
     *
     * @param force the force value to set.
     * @return the FilesManageParameters object itself.
     */
    public FilesManageParameters withForce(Force force) {
        this.force = force;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}

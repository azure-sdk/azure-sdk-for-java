// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.modsimworkbench.fluent.models.WorkloadInner;
import java.util.Map;

/** An immutable client-side representation of Workload. */
public interface Workload {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: system data.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the sku property: Name of SKU.
     *
     * @return the sku value.
     */
    String sku();

    /**
     * Gets the provisioningState property: Gets the status of the workload at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the vmSize property: Gets or sets the VmSize.
     *
     * @return the vmSize value.
     */
    String vmSize();

    /**
     * Gets the edaType property: Gets or sets the edaType.
     *
     * @return the edaType value.
     */
    String edaType();

    /**
     * Gets the status property: Gets or sets the status.
     *
     * @return the status value.
     */
    String status();

    /**
     * Gets the privateIp property: Gets or sets the private IpAddress of workload.
     *
     * @return the privateIp value.
     */
    String privateIp();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.modsimworkbench.fluent.models.WorkloadInner object.
     *
     * @return the inner object.
     */
    WorkloadInner innerModel();

    /** The entirety of the Workload definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The Workload definition stages. */
    interface DefinitionStages {
        /** The first stage of the Workload definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Workload definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the Workload definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroup, workbenchName, chamberName.
             *
             * @param resourceGroup The name of the resource group.
             * @param workbenchName The name of the workbench.
             * @param chamberName The name of the chamber.
             * @return the next definition stage.
             */
            WithCreate withExistingChamber(String resourceGroup, String workbenchName, String chamberName);
        }
        /**
         * The stage of the Workload definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithSku,
                DefinitionStages.WithVmSize,
                DefinitionStages.WithEdaType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Workload create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Workload create(Context context);
        }
        /** The stage of the Workload definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Workload definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Name of SKU..
             *
             * @param sku Name of SKU.
             * @return the next definition stage.
             */
            WithCreate withSku(String sku);
        }
        /** The stage of the Workload definition allowing to specify vmSize. */
        interface WithVmSize {
            /**
             * Specifies the vmSize property: Gets or sets the VmSize..
             *
             * @param vmSize Gets or sets the VmSize.
             * @return the next definition stage.
             */
            WithCreate withVmSize(String vmSize);
        }
        /** The stage of the Workload definition allowing to specify edaType. */
        interface WithEdaType {
            /**
             * Specifies the edaType property: Gets or sets the edaType..
             *
             * @param edaType Gets or sets the edaType.
             * @return the next definition stage.
             */
            WithCreate withEdaType(String edaType);
        }
    }
    /**
     * Begins update for the Workload resource.
     *
     * @return the stage of resource update.
     */
    Workload.Update update();

    /** The template for Workload update. */
    interface Update
        extends UpdateStages.WithTags, UpdateStages.WithSku, UpdateStages.WithVmSize, UpdateStages.WithEdaType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Workload apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Workload apply(Context context);
    }
    /** The Workload update stages. */
    interface UpdateStages {
        /** The stage of the Workload update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the Workload update allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Name of SKU..
             *
             * @param sku Name of SKU.
             * @return the next definition stage.
             */
            Update withSku(String sku);
        }
        /** The stage of the Workload update allowing to specify vmSize. */
        interface WithVmSize {
            /**
             * Specifies the vmSize property: Gets or sets the VmSize..
             *
             * @param vmSize Gets or sets the VmSize.
             * @return the next definition stage.
             */
            Update withVmSize(String vmSize);
        }
        /** The stage of the Workload update allowing to specify edaType. */
        interface WithEdaType {
            /**
             * Specifies the edaType property: Gets or sets the edaType..
             *
             * @param edaType Gets or sets the edaType.
             * @return the next definition stage.
             */
            Update withEdaType(String edaType);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Workload refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Workload refresh(Context context);
}

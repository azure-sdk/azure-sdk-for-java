// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.modsimworkbench.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.modsimworkbench.models.PerformanceTier;
import com.azure.resourcemanager.modsimworkbench.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Storage resource. */
@Fluent
public final class StorageInner extends Resource {
    /*
     * Storage properties.
     */
    @JsonProperty(value = "properties")
    private StoragePropertiesFormat innerProperties;

    /*
     * system data
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * Name of SKU.
     */
    @JsonProperty(value = "sku")
    private String sku;

    /** Creates an instance of StorageInner class. */
    public StorageInner() {
    }

    /**
     * Get the innerProperties property: Storage properties.
     *
     * @return the innerProperties value.
     */
    private StoragePropertiesFormat innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: system data.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the sku property: Name of SKU.
     *
     * @return the sku value.
     */
    public String sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Name of SKU.
     *
     * @param sku the sku value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withSku(String sku) {
        this.sku = sku;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public StorageInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public StorageInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the provisioningState property: Gets the status of the storage at the time the operation was called.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the capacityAllocated property: Provisioned size of the ModSim Workbench chamber storage in terabytes.
     *
     * @return the capacityAllocated value.
     */
    public Integer capacityAllocated() {
        return this.innerProperties() == null ? null : this.innerProperties().capacityAllocated();
    }

    /**
     * Set the capacityAllocated property: Provisioned size of the ModSim Workbench chamber storage in terabytes.
     *
     * @param capacityAllocated the capacityAllocated value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withCapacityAllocated(Integer capacityAllocated) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StoragePropertiesFormat();
        }
        this.innerProperties().withCapacityAllocated(capacityAllocated);
        return this;
    }

    /**
     * Get the performanceTier property: Specifies performance tier of the ModSim Workbench chamber storage.
     *
     * @return the performanceTier value.
     */
    public PerformanceTier performanceTier() {
        return this.innerProperties() == null ? null : this.innerProperties().performanceTier();
    }

    /**
     * Set the performanceTier property: Specifies performance tier of the ModSim Workbench chamber storage.
     *
     * @param performanceTier the performanceTier value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withPerformanceTier(PerformanceTier performanceTier) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StoragePropertiesFormat();
        }
        this.innerProperties().withPerformanceTier(performanceTier);
        return this;
    }

    /**
     * Get the localMountPath property: Directory where the SDW Private Storage volume mounted.
     *
     * @return the localMountPath value.
     */
    public String localMountPath() {
        return this.innerProperties() == null ? null : this.innerProperties().localMountPath();
    }

    /**
     * Set the localMountPath property: Directory where the SDW Private Storage volume mounted.
     *
     * @param localMountPath the localMountPath value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withLocalMountPath(String localMountPath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StoragePropertiesFormat();
        }
        this.innerProperties().withLocalMountPath(localMountPath);
        return this;
    }

    /**
     * Get the dataPipelineInboundPath property: Directory for the ModSim Workbench chamber data pipeline inbound.
     *
     * @return the dataPipelineInboundPath value.
     */
    public String dataPipelineInboundPath() {
        return this.innerProperties() == null ? null : this.innerProperties().dataPipelineInboundPath();
    }

    /**
     * Set the dataPipelineInboundPath property: Directory for the ModSim Workbench chamber data pipeline inbound.
     *
     * @param dataPipelineInboundPath the dataPipelineInboundPath value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withDataPipelineInboundPath(String dataPipelineInboundPath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StoragePropertiesFormat();
        }
        this.innerProperties().withDataPipelineInboundPath(dataPipelineInboundPath);
        return this;
    }

    /**
     * Get the dataPipelineOutboundPath property: Directory for the ModSim Workbench chamber data pipeline outbound.
     *
     * @return the dataPipelineOutboundPath value.
     */
    public String dataPipelineOutboundPath() {
        return this.innerProperties() == null ? null : this.innerProperties().dataPipelineOutboundPath();
    }

    /**
     * Set the dataPipelineOutboundPath property: Directory for the ModSim Workbench chamber data pipeline outbound.
     *
     * @param dataPipelineOutboundPath the dataPipelineOutboundPath value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withDataPipelineOutboundPath(String dataPipelineOutboundPath) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StoragePropertiesFormat();
        }
        this.innerProperties().withDataPipelineOutboundPath(dataPipelineOutboundPath);
        return this;
    }

    /**
     * Get the capacityUsed property: Capacity used in the SDW Private Storage volume in gigabytes.
     *
     * @return the capacityUsed value.
     */
    public Integer capacityUsed() {
        return this.innerProperties() == null ? null : this.innerProperties().capacityUsed();
    }

    /**
     * Set the capacityUsed property: Capacity used in the SDW Private Storage volume in gigabytes.
     *
     * @param capacityUsed the capacityUsed value to set.
     * @return the StorageInner object itself.
     */
    public StorageInner withCapacityUsed(Integer capacityUsed) {
        if (this.innerProperties() == null) {
            this.innerProperties = new StoragePropertiesFormat();
        }
        this.innerProperties().withCapacityUsed(capacityUsed);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

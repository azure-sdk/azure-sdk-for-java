// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.offazurespringboot.fluent.models.SpringbootappsModelInner;
import com.azure.resourcemanager.offazurespringboot.models.SpringbootappsPatch;

/** An instance of this class provides access to all the operations defined in SpringbootappsClient. */
public interface SpringbootappsClient {
    /**
     * Get a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a springbootapps resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SpringbootappsModelInner> getWithResponse(
        String siteName, String resourceGroupName, String springbootappsName, Context context);

    /**
     * Get a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a springbootapps resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpringbootappsModelInner get(String siteName, String resourceGroupName, String springbootappsName);

    /**
     * Create a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @param springbootapps Create a springbootapps payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SpringbootappsModelInner> createOrUpdateWithResponse(
        String siteName,
        String resourceGroupName,
        String springbootappsName,
        SpringbootappsModelInner springbootapps,
        Context context);

    /**
     * Create a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @param springbootapps Create a springbootapps payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpringbootappsModelInner createOrUpdate(
        String siteName, String resourceGroupName, String springbootappsName, SpringbootappsModelInner springbootapps);

    /**
     * Delete a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SpringbootappsModelInner> deleteWithResponse(
        String siteName, String resourceGroupName, String springbootappsName, Context context);

    /**
     * Delete a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpringbootappsModelInner delete(String siteName, String resourceGroupName, String springbootappsName);

    /**
     * Update a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @param springbootapps Update a springbootapps payload.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SpringbootappsModelInner> updateWithResponse(
        String siteName,
        String resourceGroupName,
        String springbootappsName,
        SpringbootappsPatch springbootapps,
        Context context);

    /**
     * Update a springbootapps resource.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param springbootappsName The springbootapps name.
     * @param springbootapps Update a springbootapps payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps envelope resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SpringbootappsModelInner update(
        String siteName, String resourceGroupName, String springbootappsName, SpringbootappsPatch springbootapps);

    /**
     * List springbootapps resource by resourceGroup.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpringbootappsModelInner> listByResourceGroup(String siteName, String resourceGroupName);

    /**
     * List springbootapps resource by resourceGroup.
     *
     * @param siteName The springbootsites name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpringbootappsModelInner> listByResourceGroup(
        String siteName, String resourceGroupName, Context context);

    /**
     * List springbootapps resource by subscription.
     *
     * @param siteName The springbootsites name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpringbootappsModelInner> listBySubscription(String siteName);

    /**
     * List springbootapps resource by subscription.
     *
     * @param siteName The springbootsites name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the springbootapps list resource definition as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SpringbootappsModelInner> listBySubscription(String siteName, Context context);
}

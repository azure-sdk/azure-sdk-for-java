// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.offazurespringboot.models.Error;
import com.azure.resourcemanager.offazurespringboot.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The summary resource definition.
 */
@Fluent
public final class SummaryInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    @JsonProperty(value = "properties")
    private SummariesProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of SummaryInner class.
     */
    public SummaryInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private SummariesProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the discoveredServers property: The of number discovered spring boot servers.
     * 
     * @return the discoveredServers value.
     */
    public Integer discoveredServers() {
        return this.innerProperties() == null ? null : this.innerProperties().discoveredServers();
    }

    /**
     * Set the discoveredServers property: The of number discovered spring boot servers.
     * 
     * @param discoveredServers the discoveredServers value to set.
     * @return the SummaryInner object itself.
     */
    public SummaryInner withDiscoveredServers(Integer discoveredServers) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SummariesProperties();
        }
        this.innerProperties().withDiscoveredServers(discoveredServers);
        return this;
    }

    /**
     * Get the discoveredApps property: The of number discovered spring boot apps.
     * 
     * @return the discoveredApps value.
     */
    public Integer discoveredApps() {
        return this.innerProperties() == null ? null : this.innerProperties().discoveredApps();
    }

    /**
     * Set the discoveredApps property: The of number discovered spring boot apps.
     * 
     * @param discoveredApps the discoveredApps value to set.
     * @return the SummaryInner object itself.
     */
    public SummaryInner withDiscoveredApps(Integer discoveredApps) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SummariesProperties();
        }
        this.innerProperties().withDiscoveredApps(discoveredApps);
        return this;
    }

    /**
     * Get the errors property: The list of errors.
     * 
     * @return the errors value.
     */
    public List<Error> errors() {
        return this.innerProperties() == null ? null : this.innerProperties().errors();
    }

    /**
     * Set the errors property: The list of errors.
     * 
     * @param errors the errors value to set.
     * @return the SummaryInner object itself.
     */
    public SummaryInner withErrors(List<Error> errors) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SummariesProperties();
        }
        this.innerProperties().withErrors(errors);
        return this;
    }

    /**
     * Get the provisioningState property: The resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Set the provisioningState property: The resource provisioning state.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the SummaryInner object itself.
     */
    public SummaryInner withProvisioningState(ProvisioningState provisioningState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SummariesProperties();
        }
        this.innerProperties().withProvisioningState(provisioningState);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

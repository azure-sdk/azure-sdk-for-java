// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.offazurespringboot.fluent.models.SpringbootappsModelInner;
import com.azure.resourcemanager.offazurespringboot.models.Error;
import com.azure.resourcemanager.offazurespringboot.models.ProvisioningState;
import com.azure.resourcemanager.offazurespringboot.models.SpringbootappsModel;
import com.azure.resourcemanager.offazurespringboot.models.SpringbootappsPropertiesApplicationConfigurationsItem;
import com.azure.resourcemanager.offazurespringboot.models.SpringbootappsPropertiesInstancesItem;
import com.azure.resourcemanager.offazurespringboot.models.SpringbootappsPropertiesMiscsItem;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class SpringbootappsModelImpl implements SpringbootappsModel {
    private SpringbootappsModelInner innerObject;

    private final com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager;

    SpringbootappsModelImpl(SpringbootappsModelInner innerObject,
        com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String appName() {
        return this.innerModel().appName();
    }

    public String artifactName() {
        return this.innerModel().artifactName();
    }

    public Integer appPort() {
        return this.innerModel().appPort();
    }

    public String appType() {
        return this.innerModel().appType();
    }

    public List<SpringbootappsPropertiesApplicationConfigurationsItem> applicationConfigurations() {
        List<SpringbootappsPropertiesApplicationConfigurationsItem> inner
            = this.innerModel().applicationConfigurations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<Integer> bindingPorts() {
        List<Integer> inner = this.innerModel().bindingPorts();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String buildJdkVersion() {
        return this.innerModel().buildJdkVersion();
    }

    public List<String> certificates() {
        List<String> inner = this.innerModel().certificates();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String checksum() {
        return this.innerModel().checksum();
    }

    public List<String> dependencies() {
        List<String> inner = this.innerModel().dependencies();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> environments() {
        List<String> inner = this.innerModel().environments();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Integer instanceCount() {
        return this.innerModel().instanceCount();
    }

    public String jarFileLocation() {
        return this.innerModel().jarFileLocation();
    }

    public Integer jvmMemoryInMB() {
        return this.innerModel().jvmMemoryInMB();
    }

    public List<String> jvmOptions() {
        List<String> inner = this.innerModel().jvmOptions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SpringbootappsPropertiesMiscsItem> miscs() {
        List<SpringbootappsPropertiesMiscsItem> inner = this.innerModel().miscs();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SpringbootappsPropertiesInstancesItem> instances() {
        List<SpringbootappsPropertiesInstancesItem> inner = this.innerModel().instances();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String runtimeJdkVersion() {
        return this.innerModel().runtimeJdkVersion();
    }

    public List<String> servers() {
        List<String> inner = this.innerModel().servers();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> machineArmIds() {
        List<String> inner = this.innerModel().machineArmIds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String siteName() {
        return this.innerModel().siteName();
    }

    public String springBootVersion() {
        return this.innerModel().springBootVersion();
    }

    public List<String> staticContentLocations() {
        List<String> inner = this.innerModel().staticContentLocations();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> connectionStrings() {
        List<String> inner = this.innerModel().connectionStrings();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public OffsetDateTime lastModifiedTime() {
        return this.innerModel().lastModifiedTime();
    }

    public OffsetDateTime lastUpdatedTime() {
        return this.innerModel().lastUpdatedTime();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<Error> errors() {
        List<Error> inner = this.innerModel().errors();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SpringbootappsModelInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager manager() {
        return this.serviceManager;
    }
}

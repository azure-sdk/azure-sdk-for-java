// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.offazurespringboot.fluent.models.SummaryInner;
import com.azure.resourcemanager.offazurespringboot.models.SummariesProperties;
import com.azure.resourcemanager.offazurespringboot.models.SummariesResourcePatch;
import com.azure.resourcemanager.offazurespringboot.models.Summary;
import java.util.Collections;
import java.util.Map;

public final class SummaryImpl implements Summary, Summary.Definition, Summary.Update {
    private SummaryInner innerObject;

    private final com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SummariesProperties properties() {
        return this.innerModel().properties();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SummaryInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String siteName;

    private String summaryName;

    private SummariesResourcePatch updateBody;

    public SummaryImpl withExistingSpringbootsite(String resourceGroupName, String siteName) {
        this.resourceGroupName = resourceGroupName;
        this.siteName = siteName;
        return this;
    }

    public Summary create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .createOrUpdateWithResponse(resourceGroupName, siteName, summaryName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Summary create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .createOrUpdateWithResponse(resourceGroupName, siteName, summaryName, this.innerModel(), context)
                .getValue();
        return this;
    }

    SummaryImpl(String name, com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager) {
        this.innerObject = new SummaryInner();
        this.serviceManager = serviceManager;
        this.summaryName = name;
    }

    public SummaryImpl update() {
        this.updateBody = new SummariesResourcePatch();
        return this;
    }

    public Summary apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .updateWithResponse(resourceGroupName, siteName, summaryName, updateBody, Context.NONE)
                .getValue();
        return this;
    }

    public Summary apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .updateWithResponse(resourceGroupName, siteName, summaryName, updateBody, context)
                .getValue();
        return this;
    }

    SummaryImpl(
        SummaryInner innerObject,
        com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.siteName = Utils.getValueFromIdByName(innerObject.id(), "springbootsites");
        this.summaryName = Utils.getValueFromIdByName(innerObject.id(), "Summaries");
    }

    public Summary refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .getWithResponse(resourceGroupName, siteName, summaryName, Context.NONE)
                .getValue();
        return this;
    }

    public Summary refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSummaries()
                .getWithResponse(resourceGroupName, siteName, summaryName, context)
                .getValue();
        return this;
    }

    public SummaryImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public SummaryImpl withProperties(SummariesProperties properties) {
        if (isInCreateMode()) {
            this.innerModel().withProperties(properties);
            return this;
        } else {
            this.updateBody.withProperties(properties);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}

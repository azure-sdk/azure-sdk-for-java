// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.implementation;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.offazurespringboot.fluent.models.SummaryInner;
import com.azure.resourcemanager.offazurespringboot.models.Error;
import com.azure.resourcemanager.offazurespringboot.models.ProvisioningState;
import com.azure.resourcemanager.offazurespringboot.models.Summary;
import java.util.Collections;
import java.util.List;

public final class SummaryImpl implements Summary {
    private SummaryInner innerObject;

    private final com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager;

    SummaryImpl(SummaryInner innerObject,
        com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Integer discoveredServers() {
        return this.innerModel().discoveredServers();
    }

    public Integer discoveredApps() {
        return this.innerModel().discoveredApps();
    }

    public List<Error> errors() {
        List<Error> inner = this.innerModel().errors();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public SummaryInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.offazurespringboot.SpringAppsDiscoveryManager manager() {
        return this.serviceManager;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.models;

import com.azure.core.management.SystemData;
import com.azure.resourcemanager.offazurespringboot.fluent.models.SpringbootappsModelInner;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * An immutable client-side representation of SpringbootappsModel.
 */
public interface SpringbootappsModel {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the appName property: The name of SpringBootApp.
     * 
     * @return the appName value.
     */
    String appName();

    /**
     * Gets the artifactName property: The artifact name of SpringBootApp.
     * 
     * @return the artifactName value.
     */
    String artifactName();

    /**
     * Gets the appPort property: The application port.
     * 
     * @return the appPort value.
     */
    Integer appPort();

    /**
     * Gets the appType property: The application type, whether it is a SpringBoot app.
     * 
     * @return the appType value.
     */
    String appType();

    /**
     * Gets the applicationConfigurations property: The application configuration file list.
     * 
     * @return the applicationConfigurations value.
     */
    List<SpringbootappsPropertiesApplicationConfigurationsItem> applicationConfigurations();

    /**
     * Gets the bindingPorts property: The application binding port list.
     * 
     * @return the bindingPorts value.
     */
    List<Integer> bindingPorts();

    /**
     * Gets the buildJdkVersion property: The jdk version in build.
     * 
     * @return the buildJdkVersion value.
     */
    String buildJdkVersion();

    /**
     * Gets the certificates property: The certificate file list.
     * 
     * @return the certificates value.
     */
    List<String> certificates();

    /**
     * Gets the checksum property: The checksum of jar file.
     * 
     * @return the checksum value.
     */
    String checksum();

    /**
     * Gets the dependencies property: The dependency list.
     * 
     * @return the dependencies value.
     */
    List<String> dependencies();

    /**
     * Gets the environments property: The environment variable list.
     * 
     * @return the environments value.
     */
    List<String> environments();

    /**
     * Gets the instanceCount property: The total instance count the app deployed.
     * 
     * @return the instanceCount value.
     */
    Integer instanceCount();

    /**
     * Gets the jarFileLocation property: The jar file location on the server.
     * 
     * @return the jarFileLocation value.
     */
    String jarFileLocation();

    /**
     * Gets the jvmMemoryInMB property: The jvm heap memory allocated.
     * 
     * @return the jvmMemoryInMB value.
     */
    Integer jvmMemoryInMB();

    /**
     * Gets the jvmOptions property: The jvm options.
     * 
     * @return the jvmOptions value.
     */
    List<String> jvmOptions();

    /**
     * Gets the miscs property: The other types of date collected.
     * 
     * @return the miscs value.
     */
    List<SpringbootappsPropertiesMiscsItem> miscs();

    /**
     * Gets the instances property: The breakdown info for app instances on all the servers.
     * 
     * @return the instances value.
     */
    List<SpringbootappsPropertiesInstancesItem> instances();

    /**
     * Gets the runtimeJdkVersion property: The jdk version installed on server.
     * 
     * @return the runtimeJdkVersion value.
     */
    String runtimeJdkVersion();

    /**
     * Gets the servers property: The server list the app installed.
     * 
     * @return the servers value.
     */
    List<String> servers();

    /**
     * Gets the machineArmIds property: The machine ARM id list the app belongs to.
     * 
     * @return the machineArmIds value.
     */
    List<String> machineArmIds();

    /**
     * Gets the siteName property: The site name.
     * 
     * @return the siteName value.
     */
    String siteName();

    /**
     * Gets the springBootVersion property: The spring boot version.
     * 
     * @return the springBootVersion value.
     */
    String springBootVersion();

    /**
     * Gets the staticContentLocations property: The static content location list.
     * 
     * @return the staticContentLocations value.
     */
    List<String> staticContentLocations();

    /**
     * Gets the connectionStrings property: The connection string list.
     * 
     * @return the connectionStrings value.
     */
    List<String> connectionStrings();

    /**
     * Gets the lastModifiedTime property: Time when this springbootapps jar file was last modified.
     * 
     * @return the lastModifiedTime value.
     */
    OffsetDateTime lastModifiedTime();

    /**
     * Gets the lastUpdatedTime property: Time when this springbootapps instance was last refreshed.
     * 
     * @return the lastUpdatedTime value.
     */
    OffsetDateTime lastUpdatedTime();

    /**
     * Gets the provisioningState property: The resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the errors property: The list of errors.
     * 
     * @return the errors value.
     */
    List<Error> errors();

    /**
     * Gets the inner com.azure.resourcemanager.offazurespringboot.fluent.models.SpringbootappsModelInner object.
     * 
     * @return the inner object.
     */
    SpringbootappsModelInner innerModel();
}

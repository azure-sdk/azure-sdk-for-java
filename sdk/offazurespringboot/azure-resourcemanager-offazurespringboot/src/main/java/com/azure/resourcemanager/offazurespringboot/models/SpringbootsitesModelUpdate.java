// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.offazurespringboot.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.offazurespringboot.fluent.models.SpringbootsitesModelUpdateProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The type used for update operations of the SpringbootsitesModel.
 */
@Fluent
public final class SpringbootsitesModelUpdate {
    /*
     * The extended location definition.
     */
    @JsonProperty(value = "extendedLocation")
    private SpringbootsitesModelExtendedLocation extendedLocation;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /*
     * The updatable properties of the SpringbootsitesModel.
     */
    @JsonProperty(value = "properties")
    private SpringbootsitesModelUpdateProperties innerProperties;

    /**
     * Creates an instance of SpringbootsitesModelUpdate class.
     */
    public SpringbootsitesModelUpdate() {
    }

    /**
     * Get the extendedLocation property: The extended location definition.
     * 
     * @return the extendedLocation value.
     */
    public SpringbootsitesModelExtendedLocation extendedLocation() {
        return this.extendedLocation;
    }

    /**
     * Set the extendedLocation property: The extended location definition.
     * 
     * @param extendedLocation the extendedLocation value to set.
     * @return the SpringbootsitesModelUpdate object itself.
     */
    public SpringbootsitesModelUpdate withExtendedLocation(SpringbootsitesModelExtendedLocation extendedLocation) {
        this.extendedLocation = extendedLocation;
        return this;
    }

    /**
     * Get the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     * 
     * @param tags the tags value to set.
     * @return the SpringbootsitesModelUpdate object itself.
     */
    public SpringbootsitesModelUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the innerProperties property: The updatable properties of the SpringbootsitesModel.
     * 
     * @return the innerProperties value.
     */
    private SpringbootsitesModelUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the masterSiteId property: The master site ID from Azure Migrate.
     * 
     * @return the masterSiteId value.
     */
    public String masterSiteId() {
        return this.innerProperties() == null ? null : this.innerProperties().masterSiteId();
    }

    /**
     * Set the masterSiteId property: The master site ID from Azure Migrate.
     * 
     * @param masterSiteId the masterSiteId value to set.
     * @return the SpringbootsitesModelUpdate object itself.
     */
    public SpringbootsitesModelUpdate withMasterSiteId(String masterSiteId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SpringbootsitesModelUpdateProperties();
        }
        this.innerProperties().withMasterSiteId(masterSiteId);
        return this;
    }

    /**
     * Get the migrateProjectId property: The migrate project ID from Azure Migrate.
     * 
     * @return the migrateProjectId value.
     */
    public String migrateProjectId() {
        return this.innerProperties() == null ? null : this.innerProperties().migrateProjectId();
    }

    /**
     * Set the migrateProjectId property: The migrate project ID from Azure Migrate.
     * 
     * @param migrateProjectId the migrateProjectId value to set.
     * @return the SpringbootsitesModelUpdate object itself.
     */
    public SpringbootsitesModelUpdate withMigrateProjectId(String migrateProjectId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SpringbootsitesModelUpdateProperties();
        }
        this.innerProperties().withMigrateProjectId(migrateProjectId);
        return this;
    }

    /**
     * Get the provisioningState property: The resource provisioning state.
     * 
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Set the provisioningState property: The resource provisioning state.
     * 
     * @param provisioningState the provisioningState value to set.
     * @return the SpringbootsitesModelUpdate object itself.
     */
    public SpringbootsitesModelUpdate withProvisioningState(ProvisioningState provisioningState) {
        if (this.innerProperties() == null) {
            this.innerProperties = new SpringbootsitesModelUpdateProperties();
        }
        this.innerProperties().withProvisioningState(provisioningState);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (extendedLocation() != null) {
            extendedLocation().validate();
        }
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

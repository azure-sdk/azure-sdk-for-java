// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.AssemblyDefinitionInner;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * An immutable client-side representation of AssemblyDefinition.
 */
public interface AssemblyDefinition {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the assemblyName property: The assembly name.
     * 
     * @return the assemblyName value.
     */
    String assemblyName();

    /**
     * Gets the assemblyVersion property: The assembly version.
     * 
     * @return the assemblyVersion value.
     */
    String assemblyVersion();

    /**
     * Gets the assemblyCulture property: The assembly culture.
     * 
     * @return the assemblyCulture value.
     */
    String assemblyCulture();

    /**
     * Gets the assemblyPublicKeyToken property: The assembly public key token.
     * 
     * @return the assemblyPublicKeyToken value.
     */
    String assemblyPublicKeyToken();

    /**
     * Gets the content property: Anything.
     * 
     * @return the content value.
     */
    Object content();

    /**
     * Gets the contentType property: The content type.
     * 
     * @return the contentType value.
     */
    String contentType();

    /**
     * Gets the contentLink property: The content link.
     * 
     * @return the contentLink value.
     */
    ContentLink contentLink();

    /**
     * Gets the createdTime property: The artifact creation time.
     * 
     * @return the createdTime value.
     */
    OffsetDateTime createdTime();

    /**
     * Gets the changedTime property: The artifact changed time.
     * 
     * @return the changedTime value.
     */
    OffsetDateTime changedTime();

    /**
     * Gets the metadata property: Anything.
     * 
     * @return the metadata value.
     */
    Object metadata();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.logic.fluent.models.AssemblyDefinitionInner object.
     * 
     * @return the inner object.
     */
    AssemblyDefinitionInner innerModel();

    /**
     * The entirety of the AssemblyDefinition definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation,
        DefinitionStages.WithParentResource, DefinitionStages.WithAssemblyName, DefinitionStages.WithCreate {
    }

    /**
     * The AssemblyDefinition definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the AssemblyDefinition definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, integrationAccountName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param integrationAccountName The integration account name.
             * @return the next definition stage.
             */
            WithAssemblyName withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify assemblyName.
         */
        interface WithAssemblyName {
            /**
             * Specifies the assemblyName property: The assembly name..
             * 
             * @param assemblyName The assembly name.
             * @return the next definition stage.
             */
            WithCreate withAssemblyName(String assemblyName);
        }

        /**
         * The stage of the AssemblyDefinition definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithAssemblyVersion,
            DefinitionStages.WithAssemblyCulture, DefinitionStages.WithAssemblyPublicKeyToken,
            DefinitionStages.WithContent, DefinitionStages.WithContentType, DefinitionStages.WithContentLink,
            DefinitionStages.WithCreatedTime, DefinitionStages.WithChangedTime, DefinitionStages.WithMetadata {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            AssemblyDefinition create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AssemblyDefinition create(Context context);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify assemblyVersion.
         */
        interface WithAssemblyVersion {
            /**
             * Specifies the assemblyVersion property: The assembly version..
             * 
             * @param assemblyVersion The assembly version.
             * @return the next definition stage.
             */
            WithCreate withAssemblyVersion(String assemblyVersion);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify assemblyCulture.
         */
        interface WithAssemblyCulture {
            /**
             * Specifies the assemblyCulture property: The assembly culture..
             * 
             * @param assemblyCulture The assembly culture.
             * @return the next definition stage.
             */
            WithCreate withAssemblyCulture(String assemblyCulture);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify assemblyPublicKeyToken.
         */
        interface WithAssemblyPublicKeyToken {
            /**
             * Specifies the assemblyPublicKeyToken property: The assembly public key token..
             * 
             * @param assemblyPublicKeyToken The assembly public key token.
             * @return the next definition stage.
             */
            WithCreate withAssemblyPublicKeyToken(String assemblyPublicKeyToken);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify content.
         */
        interface WithContent {
            /**
             * Specifies the content property: Anything.
             * 
             * @param content Anything.
             * @return the next definition stage.
             */
            WithCreate withContent(Object content);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify contentType.
         */
        interface WithContentType {
            /**
             * Specifies the contentType property: The content type..
             * 
             * @param contentType The content type.
             * @return the next definition stage.
             */
            WithCreate withContentType(String contentType);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify contentLink.
         */
        interface WithContentLink {
            /**
             * Specifies the contentLink property: The content link..
             * 
             * @param contentLink The content link.
             * @return the next definition stage.
             */
            WithCreate withContentLink(ContentLink contentLink);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify createdTime.
         */
        interface WithCreatedTime {
            /**
             * Specifies the createdTime property: The artifact creation time..
             * 
             * @param createdTime The artifact creation time.
             * @return the next definition stage.
             */
            WithCreate withCreatedTime(OffsetDateTime createdTime);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify changedTime.
         */
        interface WithChangedTime {
            /**
             * Specifies the changedTime property: The artifact changed time..
             * 
             * @param changedTime The artifact changed time.
             * @return the next definition stage.
             */
            WithCreate withChangedTime(OffsetDateTime changedTime);
        }

        /**
         * The stage of the AssemblyDefinition definition allowing to specify metadata.
         */
        interface WithMetadata {
            /**
             * Specifies the metadata property: Anything.
             * 
             * @param metadata Anything.
             * @return the next definition stage.
             */
            WithCreate withMetadata(Object metadata);
        }
    }

    /**
     * Begins update for the AssemblyDefinition resource.
     * 
     * @return the stage of resource update.
     */
    AssemblyDefinition.Update update();

    /**
     * The template for AssemblyDefinition update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithAssemblyName, UpdateStages.WithAssemblyVersion,
        UpdateStages.WithAssemblyCulture, UpdateStages.WithAssemblyPublicKeyToken, UpdateStages.WithContent,
        UpdateStages.WithContentType, UpdateStages.WithContentLink, UpdateStages.WithCreatedTime,
        UpdateStages.WithChangedTime, UpdateStages.WithMetadata {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        AssemblyDefinition apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AssemblyDefinition apply(Context context);
    }

    /**
     * The AssemblyDefinition update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the AssemblyDefinition update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify assemblyName.
         */
        interface WithAssemblyName {
            /**
             * Specifies the assemblyName property: The assembly name..
             * 
             * @param assemblyName The assembly name.
             * @return the next definition stage.
             */
            Update withAssemblyName(String assemblyName);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify assemblyVersion.
         */
        interface WithAssemblyVersion {
            /**
             * Specifies the assemblyVersion property: The assembly version..
             * 
             * @param assemblyVersion The assembly version.
             * @return the next definition stage.
             */
            Update withAssemblyVersion(String assemblyVersion);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify assemblyCulture.
         */
        interface WithAssemblyCulture {
            /**
             * Specifies the assemblyCulture property: The assembly culture..
             * 
             * @param assemblyCulture The assembly culture.
             * @return the next definition stage.
             */
            Update withAssemblyCulture(String assemblyCulture);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify assemblyPublicKeyToken.
         */
        interface WithAssemblyPublicKeyToken {
            /**
             * Specifies the assemblyPublicKeyToken property: The assembly public key token..
             * 
             * @param assemblyPublicKeyToken The assembly public key token.
             * @return the next definition stage.
             */
            Update withAssemblyPublicKeyToken(String assemblyPublicKeyToken);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify content.
         */
        interface WithContent {
            /**
             * Specifies the content property: Anything.
             * 
             * @param content Anything.
             * @return the next definition stage.
             */
            Update withContent(Object content);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify contentType.
         */
        interface WithContentType {
            /**
             * Specifies the contentType property: The content type..
             * 
             * @param contentType The content type.
             * @return the next definition stage.
             */
            Update withContentType(String contentType);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify contentLink.
         */
        interface WithContentLink {
            /**
             * Specifies the contentLink property: The content link..
             * 
             * @param contentLink The content link.
             * @return the next definition stage.
             */
            Update withContentLink(ContentLink contentLink);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify createdTime.
         */
        interface WithCreatedTime {
            /**
             * Specifies the createdTime property: The artifact creation time..
             * 
             * @param createdTime The artifact creation time.
             * @return the next definition stage.
             */
            Update withCreatedTime(OffsetDateTime createdTime);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify changedTime.
         */
        interface WithChangedTime {
            /**
             * Specifies the changedTime property: The artifact changed time..
             * 
             * @param changedTime The artifact changed time.
             * @return the next definition stage.
             */
            Update withChangedTime(OffsetDateTime changedTime);
        }

        /**
         * The stage of the AssemblyDefinition update allowing to specify metadata.
         */
        interface WithMetadata {
            /**
             * Specifies the metadata property: Anything.
             * 
             * @param metadata Anything.
             * @return the next definition stage.
             */
            Update withMetadata(Object metadata);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    AssemblyDefinition refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AssemblyDefinition refresh(Context context);

    /**
     * Get the content callback url for an integration account assembly.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content callback url for an integration account assembly along with {@link Response}.
     */
    Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(Context context);

    /**
     * Get the content callback url for an integration account assembly.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the content callback url for an integration account assembly.
     */
    WorkflowTriggerCallbackUrl listContentCallbackUrl();
}

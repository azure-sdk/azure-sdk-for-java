// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationServiceEnvironmentManagedApiInner;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentManagedApi;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentManagedApiProperties;
import java.util.Collections;
import java.util.Map;

public final class IntegrationServiceEnvironmentManagedApiImpl implements IntegrationServiceEnvironmentManagedApi,
    IntegrationServiceEnvironmentManagedApi.Definition, IntegrationServiceEnvironmentManagedApi.Update {
    private IntegrationServiceEnvironmentManagedApiInner innerObject;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public IntegrationServiceEnvironmentManagedApiProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public IntegrationServiceEnvironmentManagedApiInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }

    private String integrationServiceEnvironmentName;

    private String apiName;

    public IntegrationServiceEnvironmentManagedApiImpl
        withExistingIntegrationServiceEnvironment(String integrationServiceEnvironmentName) {
        this.integrationServiceEnvironmentName = integrationServiceEnvironmentName;
        return this;
    }

    public IntegrationServiceEnvironmentManagedApi create() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationServiceEnvironmentManagedApis()
            .put(integrationServiceEnvironmentName, apiName, this.innerModel(), Context.NONE);
        return this;
    }

    public IntegrationServiceEnvironmentManagedApi create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationServiceEnvironmentManagedApis()
            .put(integrationServiceEnvironmentName, apiName, this.innerModel(), context);
        return this;
    }

    IntegrationServiceEnvironmentManagedApiImpl(String name,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = new IntegrationServiceEnvironmentManagedApiInner();
        this.serviceManager = serviceManager;
        this.apiName = name;
    }

    public IntegrationServiceEnvironmentManagedApiImpl update() {
        return this;
    }

    public IntegrationServiceEnvironmentManagedApi apply() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationServiceEnvironmentManagedApis()
            .put(integrationServiceEnvironmentName, apiName, this.innerModel(), Context.NONE);
        return this;
    }

    public IntegrationServiceEnvironmentManagedApi apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationServiceEnvironmentManagedApis()
            .put(integrationServiceEnvironmentName, apiName, this.innerModel(), context);
        return this;
    }

    IntegrationServiceEnvironmentManagedApiImpl(IntegrationServiceEnvironmentManagedApiInner innerObject,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.integrationServiceEnvironmentName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "integrationServiceEnvironments");
        this.apiName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "managedApis");
    }

    public IntegrationServiceEnvironmentManagedApi refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationServiceEnvironmentManagedApis()
            .getWithResponse(integrationServiceEnvironmentName, apiName, Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationServiceEnvironmentManagedApi refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationServiceEnvironmentManagedApis()
            .getWithResponse(integrationServiceEnvironmentName, apiName, context)
            .getValue();
        return this;
    }

    public IntegrationServiceEnvironmentManagedApiImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public IntegrationServiceEnvironmentManagedApiImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public IntegrationServiceEnvironmentManagedApiImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public IntegrationServiceEnvironmentManagedApiImpl
        withProperties(IntegrationServiceEnvironmentManagedApiProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

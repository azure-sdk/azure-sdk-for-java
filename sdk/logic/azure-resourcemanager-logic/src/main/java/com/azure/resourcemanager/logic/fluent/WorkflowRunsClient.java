// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.WorkflowRunInner;

/**
 * An instance of this class provides access to all the operations defined in WorkflowRunsClient.
 */
public interface WorkflowRunsClient {
    /**
     * Gets a workflow run.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The workflow name.
     * @param runName The workflow run name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a workflow run along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<WorkflowRunInner> getWithResponse(String resourceGroupName, String workflowName, String runName,
        Context context);

    /**
     * Gets a workflow run.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The workflow name.
     * @param runName The workflow run name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a workflow run.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    WorkflowRunInner get(String resourceGroupName, String workflowName, String runName);

    /**
     * Cancels a workflow run.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The workflow name.
     * @param runName The workflow run name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> cancelWithResponse(String resourceGroupName, String workflowName, String runName, Context context);

    /**
     * Cancels a workflow run.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The workflow name.
     * @param runName The workflow run name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void cancel(String resourceGroupName, String workflowName, String runName);
}

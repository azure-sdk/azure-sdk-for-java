// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationAccountMapInner;
import com.azure.resourcemanager.logic.models.GetCallbackUrlParameters;
import com.azure.resourcemanager.logic.models.IntegrationAccountMap;
import com.azure.resourcemanager.logic.models.IntegrationAccountMapProperties;
import com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl;

public final class IntegrationAccountMapImpl
    implements IntegrationAccountMap, IntegrationAccountMap.Definition, IntegrationAccountMap.Update {
    private IntegrationAccountMapInner innerObject;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public IntegrationAccountMapProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public IntegrationAccountMapInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String integrationAccountName;

    private String mapName;

    public IntegrationAccountMapImpl withExistingIntegrationAccount(String resourceGroupName,
        String integrationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.integrationAccountName = integrationAccountName;
        return this;
    }

    public IntegrationAccountMap create() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountMaps()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, mapName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountMap create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountMaps()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, mapName, this.innerModel(), context)
            .getValue();
        return this;
    }

    IntegrationAccountMapImpl(String name, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = new IntegrationAccountMapInner();
        this.serviceManager = serviceManager;
        this.mapName = name;
    }

    public IntegrationAccountMapImpl update() {
        return this;
    }

    public IntegrationAccountMap apply() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountMaps()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, mapName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountMap apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountMaps()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, mapName, this.innerModel(), context)
            .getValue();
        return this;
    }

    IntegrationAccountMapImpl(IntegrationAccountMapInner innerObject,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.integrationAccountName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "integrationAccounts");
        this.mapName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "maps");
    }

    public IntegrationAccountMap refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountMaps()
            .getWithResponse(resourceGroupName, integrationAccountName, mapName, Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountMap refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountMaps()
            .getWithResponse(resourceGroupName, integrationAccountName, mapName, context)
            .getValue();
        return this;
    }

    public Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(GetCallbackUrlParameters body,
        Context context) {
        return serviceManager.integrationAccountMaps()
            .listContentCallbackUrlWithResponse(resourceGroupName, integrationAccountName, mapName, body, context);
    }

    public WorkflowTriggerCallbackUrl listContentCallbackUrl(GetCallbackUrlParameters body) {
        return serviceManager.integrationAccountMaps()
            .listContentCallbackUrl(resourceGroupName, integrationAccountName, mapName, body);
    }

    public IntegrationAccountMapImpl withProperties(IntegrationAccountMapProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

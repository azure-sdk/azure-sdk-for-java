// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.AssemblyDefinitionInner;
import com.azure.resourcemanager.logic.models.AssemblyDefinition;
import com.azure.resourcemanager.logic.models.ContentLink;
import com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.Map;

public final class AssemblyDefinitionImpl
    implements AssemblyDefinition, AssemblyDefinition.Definition, AssemblyDefinition.Update {
    private AssemblyDefinitionInner innerObject;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String assemblyName() {
        return this.innerModel().assemblyName();
    }

    public String assemblyVersion() {
        return this.innerModel().assemblyVersion();
    }

    public String assemblyCulture() {
        return this.innerModel().assemblyCulture();
    }

    public String assemblyPublicKeyToken() {
        return this.innerModel().assemblyPublicKeyToken();
    }

    public Object content() {
        return this.innerModel().content();
    }

    public String contentType() {
        return this.innerModel().contentType();
    }

    public ContentLink contentLink() {
        return this.innerModel().contentLink();
    }

    public OffsetDateTime createdTime() {
        return this.innerModel().createdTime();
    }

    public OffsetDateTime changedTime() {
        return this.innerModel().changedTime();
    }

    public Object metadata() {
        return this.innerModel().metadata();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AssemblyDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String integrationAccountName;

    private String assemblyArtifactName;

    public AssemblyDefinitionImpl withExistingIntegrationAccount(String resourceGroupName,
        String integrationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.integrationAccountName = integrationAccountName;
        return this;
    }

    public AssemblyDefinition create() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountAssemblies()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public AssemblyDefinition create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountAssemblies()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    AssemblyDefinitionImpl(String name, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = new AssemblyDefinitionInner();
        this.serviceManager = serviceManager;
        this.assemblyArtifactName = name;
    }

    public AssemblyDefinitionImpl update() {
        return this;
    }

    public AssemblyDefinition apply() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountAssemblies()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public AssemblyDefinition apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountAssemblies()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    AssemblyDefinitionImpl(AssemblyDefinitionInner innerObject,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.integrationAccountName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "integrationAccounts");
        this.assemblyArtifactName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "assemblies");
    }

    public AssemblyDefinition refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountAssemblies()
            .getWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName, Context.NONE)
            .getValue();
        return this;
    }

    public AssemblyDefinition refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountAssemblies()
            .getWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName, context)
            .getValue();
        return this;
    }

    public Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(Context context) {
        return serviceManager.integrationAccountAssemblies()
            .listContentCallbackUrlWithResponse(resourceGroupName, integrationAccountName, assemblyArtifactName,
                context);
    }

    public WorkflowTriggerCallbackUrl listContentCallbackUrl() {
        return serviceManager.integrationAccountAssemblies()
            .listContentCallbackUrl(resourceGroupName, integrationAccountName, assemblyArtifactName);
    }

    public AssemblyDefinitionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AssemblyDefinitionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AssemblyDefinitionImpl withAssemblyName(String assemblyName) {
        this.innerModel().withAssemblyName(assemblyName);
        return this;
    }

    public AssemblyDefinitionImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public AssemblyDefinitionImpl withAssemblyVersion(String assemblyVersion) {
        this.innerModel().withAssemblyVersion(assemblyVersion);
        return this;
    }

    public AssemblyDefinitionImpl withAssemblyCulture(String assemblyCulture) {
        this.innerModel().withAssemblyCulture(assemblyCulture);
        return this;
    }

    public AssemblyDefinitionImpl withAssemblyPublicKeyToken(String assemblyPublicKeyToken) {
        this.innerModel().withAssemblyPublicKeyToken(assemblyPublicKeyToken);
        return this;
    }

    public AssemblyDefinitionImpl withContent(Object content) {
        this.innerModel().withContent(content);
        return this;
    }

    public AssemblyDefinitionImpl withContentType(String contentType) {
        this.innerModel().withContentType(contentType);
        return this;
    }

    public AssemblyDefinitionImpl withContentLink(ContentLink contentLink) {
        this.innerModel().withContentLink(contentLink);
        return this;
    }

    public AssemblyDefinitionImpl withCreatedTime(OffsetDateTime createdTime) {
        this.innerModel().withCreatedTime(createdTime);
        return this;
    }

    public AssemblyDefinitionImpl withChangedTime(OffsetDateTime changedTime) {
        this.innerModel().withChangedTime(changedTime);
        return this;
    }

    public AssemblyDefinitionImpl withMetadata(Object metadata) {
        this.innerModel().withMetadata(metadata);
        return this;
    }
}

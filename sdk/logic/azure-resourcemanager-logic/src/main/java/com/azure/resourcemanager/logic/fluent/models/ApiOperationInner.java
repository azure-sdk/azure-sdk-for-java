// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.logic.models.ApiOperationAnnotation;
import com.azure.resourcemanager.logic.models.ApiReference;
import com.azure.resourcemanager.logic.models.SwaggerSchema;
import java.io.IOException;
import java.util.Map;

/**
 * The integration service environment managed api's api operations.
 */
@Fluent
public final class ApiOperationInner extends ProxyResource {
    /*
     * The resource-specific properties for this resource.
     */
    private ApiOperationPropertiesDefinition innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    private SystemData systemData;

    /*
     * The type of the resource.
     */
    private String type;

    /*
     * The name of the resource.
     */
    private String name;

    /*
     * Fully qualified resource Id for the resource.
     */
    private String id;

    /**
     * Creates an instance of ApiOperationInner class.
     */
    public ApiOperationInner() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private ApiOperationPropertiesDefinition innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the type property: The type of the resource.
     * 
     * @return the type value.
     */
    @Override
    public String type() {
        return this.type;
    }

    /**
     * Get the name property: The name of the resource.
     * 
     * @return the name value.
     */
    @Override
    public String name() {
        return this.name;
    }

    /**
     * Get the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    @Override
    public String id() {
        return this.id;
    }

    /**
     * Get the summary property: The summary of the api operation.
     * 
     * @return the summary value.
     */
    public String summary() {
        return this.innerProperties() == null ? null : this.innerProperties().summary();
    }

    /**
     * Set the summary property: The summary of the api operation.
     * 
     * @param summary the summary value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withSummary(String summary) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withSummary(summary);
        return this;
    }

    /**
     * Get the description property: The description of the api operation.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of the api operation.
     * 
     * @param description the description value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the visibility property: The visibility of the api operation.
     * 
     * @return the visibility value.
     */
    public String visibility() {
        return this.innerProperties() == null ? null : this.innerProperties().visibility();
    }

    /**
     * Set the visibility property: The visibility of the api operation.
     * 
     * @param visibility the visibility value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withVisibility(String visibility) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withVisibility(visibility);
        return this;
    }

    /**
     * Get the trigger property: The trigger type of api operation.
     * 
     * @return the trigger value.
     */
    public String trigger() {
        return this.innerProperties() == null ? null : this.innerProperties().trigger();
    }

    /**
     * Set the trigger property: The trigger type of api operation.
     * 
     * @param trigger the trigger value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withTrigger(String trigger) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withTrigger(trigger);
        return this;
    }

    /**
     * Get the triggerHint property: The trigger hint for the api operation.
     * 
     * @return the triggerHint value.
     */
    public String triggerHint() {
        return this.innerProperties() == null ? null : this.innerProperties().triggerHint();
    }

    /**
     * Set the triggerHint property: The trigger hint for the api operation.
     * 
     * @param triggerHint the triggerHint value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withTriggerHint(String triggerHint) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withTriggerHint(triggerHint);
        return this;
    }

    /**
     * Get the pageable property: Indicates whether the api operation is pageable.
     * 
     * @return the pageable value.
     */
    public Boolean pageable() {
        return this.innerProperties() == null ? null : this.innerProperties().pageable();
    }

    /**
     * Set the pageable property: Indicates whether the api operation is pageable.
     * 
     * @param pageable the pageable value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withPageable(Boolean pageable) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withPageable(pageable);
        return this;
    }

    /**
     * Get the annotation property: The annotation of api operation.
     * 
     * @return the annotation value.
     */
    public ApiOperationAnnotation annotation() {
        return this.innerProperties() == null ? null : this.innerProperties().annotation();
    }

    /**
     * Set the annotation property: The annotation of api operation.
     * 
     * @param annotation the annotation value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withAnnotation(ApiOperationAnnotation annotation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withAnnotation(annotation);
        return this;
    }

    /**
     * Get the api property: The api reference.
     * 
     * @return the api value.
     */
    public ApiReference api() {
        return this.innerProperties() == null ? null : this.innerProperties().api();
    }

    /**
     * Set the api property: The api reference.
     * 
     * @param api the api value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withApi(ApiReference api) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withApi(api);
        return this;
    }

    /**
     * Get the inputsDefinition property: The operation inputs definition schema.
     * 
     * @return the inputsDefinition value.
     */
    public SwaggerSchema inputsDefinition() {
        return this.innerProperties() == null ? null : this.innerProperties().inputsDefinition();
    }

    /**
     * Set the inputsDefinition property: The operation inputs definition schema.
     * 
     * @param inputsDefinition the inputsDefinition value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withInputsDefinition(SwaggerSchema inputsDefinition) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withInputsDefinition(inputsDefinition);
        return this;
    }

    /**
     * Get the responsesDefinition property: The operation responses definition schemas.
     * 
     * @return the responsesDefinition value.
     */
    public Map<String, SwaggerSchema> responsesDefinition() {
        return this.innerProperties() == null ? null : this.innerProperties().responsesDefinition();
    }

    /**
     * Set the responsesDefinition property: The operation responses definition schemas.
     * 
     * @param responsesDefinition the responsesDefinition value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withResponsesDefinition(Map<String, SwaggerSchema> responsesDefinition) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withResponsesDefinition(responsesDefinition);
        return this;
    }

    /**
     * Get the isWebhook property: Indicates whether the API operation is webhook or not.
     * 
     * @return the isWebhook value.
     */
    public Boolean isWebhook() {
        return this.innerProperties() == null ? null : this.innerProperties().isWebhook();
    }

    /**
     * Set the isWebhook property: Indicates whether the API operation is webhook or not.
     * 
     * @param isWebhook the isWebhook value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withIsWebhook(Boolean isWebhook) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withIsWebhook(isWebhook);
        return this;
    }

    /**
     * Get the isNotification property: Indicates whether the API operation is notification or not.
     * 
     * @return the isNotification value.
     */
    public Boolean isNotification() {
        return this.innerProperties() == null ? null : this.innerProperties().isNotification();
    }

    /**
     * Set the isNotification property: Indicates whether the API operation is notification or not.
     * 
     * @param isNotification the isNotification value to set.
     * @return the ApiOperationInner object itself.
     */
    public ApiOperationInner withIsNotification(Boolean isNotification) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiOperationPropertiesDefinition();
        }
        this.innerProperties().withIsNotification(isNotification);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiOperationInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiOperationInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ApiOperationInner.
     */
    public static ApiOperationInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiOperationInner deserializedApiOperationInner = new ApiOperationInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    deserializedApiOperationInner.id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    deserializedApiOperationInner.name = reader.getString();
                } else if ("type".equals(fieldName)) {
                    deserializedApiOperationInner.type = reader.getString();
                } else if ("properties".equals(fieldName)) {
                    deserializedApiOperationInner.innerProperties = ApiOperationPropertiesDefinition.fromJson(reader);
                } else if ("systemData".equals(fieldName)) {
                    deserializedApiOperationInner.systemData = SystemData.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiOperationInner;
        });
    }
}

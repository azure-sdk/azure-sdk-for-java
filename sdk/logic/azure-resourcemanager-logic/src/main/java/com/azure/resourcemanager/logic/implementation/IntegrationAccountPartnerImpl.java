// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationAccountPartnerInner;
import com.azure.resourcemanager.logic.models.GetCallbackUrlParameters;
import com.azure.resourcemanager.logic.models.IntegrationAccountPartner;
import com.azure.resourcemanager.logic.models.IntegrationAccountPartnerProperties;
import com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl;

public final class IntegrationAccountPartnerImpl
    implements IntegrationAccountPartner, IntegrationAccountPartner.Definition, IntegrationAccountPartner.Update {
    private IntegrationAccountPartnerInner innerObject;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public IntegrationAccountPartnerProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public IntegrationAccountPartnerInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String integrationAccountName;

    private String partnerName;

    public IntegrationAccountPartnerImpl withExistingIntegrationAccount(String resourceGroupName,
        String integrationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.integrationAccountName = integrationAccountName;
        return this;
    }

    public IntegrationAccountPartner create() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountPartners()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, partnerName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountPartner create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountPartners()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, partnerName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    IntegrationAccountPartnerImpl(String name, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = new IntegrationAccountPartnerInner();
        this.serviceManager = serviceManager;
        this.partnerName = name;
    }

    public IntegrationAccountPartnerImpl update() {
        return this;
    }

    public IntegrationAccountPartner apply() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountPartners()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, partnerName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountPartner apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountPartners()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, partnerName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    IntegrationAccountPartnerImpl(IntegrationAccountPartnerInner innerObject,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.integrationAccountName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "integrationAccounts");
        this.partnerName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "partners");
    }

    public IntegrationAccountPartner refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountPartners()
            .getWithResponse(resourceGroupName, integrationAccountName, partnerName, Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountPartner refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountPartners()
            .getWithResponse(resourceGroupName, integrationAccountName, partnerName, context)
            .getValue();
        return this;
    }

    public Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(GetCallbackUrlParameters body,
        Context context) {
        return serviceManager.integrationAccountPartners()
            .listContentCallbackUrlWithResponse(resourceGroupName, integrationAccountName, partnerName, body, context);
    }

    public WorkflowTriggerCallbackUrl listContentCallbackUrl(GetCallbackUrlParameters body) {
        return serviceManager.integrationAccountPartners()
            .listContentCallbackUrl(resourceGroupName, integrationAccountName, partnerName, body);
    }

    public IntegrationAccountPartnerImpl withProperties(IntegrationAccountPartnerProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

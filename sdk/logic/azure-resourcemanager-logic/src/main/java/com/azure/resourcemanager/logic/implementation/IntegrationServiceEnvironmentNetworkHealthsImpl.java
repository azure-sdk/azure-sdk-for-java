// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.logic.fluent.IntegrationServiceEnvironmentNetworkHealthsClient;
import com.azure.resourcemanager.logic.fluent.models.IntegrationServiceEnvironmentNetworkHealthInner;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentNetworkHealth;
import com.azure.resourcemanager.logic.models.IntegrationServiceEnvironmentNetworkHealths;

public final class IntegrationServiceEnvironmentNetworkHealthsImpl
    implements IntegrationServiceEnvironmentNetworkHealths {
    private static final ClientLogger LOGGER = new ClientLogger(IntegrationServiceEnvironmentNetworkHealthsImpl.class);

    private final IntegrationServiceEnvironmentNetworkHealthsClient innerClient;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public IntegrationServiceEnvironmentNetworkHealthsImpl(
        IntegrationServiceEnvironmentNetworkHealthsClient innerClient,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<IntegrationServiceEnvironmentNetworkHealth>
        getWithResponse(String integrationServiceEnvironmentName, Context context) {
        Response<IntegrationServiceEnvironmentNetworkHealthInner> inner
            = this.serviceClient().getWithResponse(integrationServiceEnvironmentName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new IntegrationServiceEnvironmentNetworkHealthImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public IntegrationServiceEnvironmentNetworkHealth get(String integrationServiceEnvironmentName) {
        IntegrationServiceEnvironmentNetworkHealthInner inner
            = this.serviceClient().get(integrationServiceEnvironmentName);
        if (inner != null) {
            return new IntegrationServiceEnvironmentNetworkHealthImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private IntegrationServiceEnvironmentNetworkHealthsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }
}

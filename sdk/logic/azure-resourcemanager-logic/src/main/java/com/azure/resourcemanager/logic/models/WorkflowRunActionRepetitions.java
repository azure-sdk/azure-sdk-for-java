// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of WorkflowRunActionRepetitions.
 */
public interface WorkflowRunActionRepetitions {
    /**
     * Get a workflow run action repetition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The name of the Workflow.
     * @param runName The name of the WorkflowRun.
     * @param actionName The name of the WorkflowRunAction.
     * @param repetitionName The name of the WorkflowRunActionRepetitionDefinition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a workflow run action repetition along with {@link Response}.
     */
    Response<WorkflowRunActionRepetitionDefinition> getWithResponse(String resourceGroupName, String workflowName,
        String runName, String actionName, String repetitionName, Context context);

    /**
     * Get a workflow run action repetition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The name of the Workflow.
     * @param runName The name of the WorkflowRun.
     * @param actionName The name of the WorkflowRunAction.
     * @param repetitionName The name of the WorkflowRunActionRepetitionDefinition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a workflow run action repetition.
     */
    WorkflowRunActionRepetitionDefinition get(String resourceGroupName, String workflowName, String runName,
        String actionName, String repetitionName);

    /**
     * Lists a workflow run expression trace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The name of the Workflow.
     * @param runName The name of the WorkflowRun.
     * @param actionName The name of the WorkflowRunAction.
     * @param repetitionName The name of the WorkflowRunActionRepetitionDefinition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the expression traces along with {@link Response}.
     */
    Response<ExpressionTraces> listExpressionTracesWithResponse(String resourceGroupName, String workflowName,
        String runName, String actionName, String repetitionName, Context context);

    /**
     * Lists a workflow run expression trace.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workflowName The name of the Workflow.
     * @param runName The name of the WorkflowRun.
     * @param actionName The name of the WorkflowRunAction.
     * @param repetitionName The name of the WorkflowRunActionRepetitionDefinition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the expression traces.
     */
    ExpressionTraces listExpressionTraces(String resourceGroupName, String workflowName, String runName,
        String actionName, String repetitionName);
}

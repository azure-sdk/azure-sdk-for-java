// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.logic.models.ValidationState;
import com.azure.resourcemanager.logic.models.WorkflowExportValidity;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The workflow export validity result. */
@Fluent
public final class WorkflowExportValidityResultInner {
    /*
     * The validation state for the workflow export.
     */
    @JsonProperty(value = "validationState")
    private ValidationState validationState;

    /*
     * The workflows export validity.
     */
    @JsonProperty(value = "workflows")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, WorkflowExportValidity> workflows;

    /** Creates an instance of WorkflowExportValidityResultInner class. */
    public WorkflowExportValidityResultInner() {
    }

    /**
     * Get the validationState property: The validation state for the workflow export.
     *
     * @return the validationState value.
     */
    public ValidationState validationState() {
        return this.validationState;
    }

    /**
     * Set the validationState property: The validation state for the workflow export.
     *
     * @param validationState the validationState value to set.
     * @return the WorkflowExportValidityResultInner object itself.
     */
    public WorkflowExportValidityResultInner withValidationState(ValidationState validationState) {
        this.validationState = validationState;
        return this;
    }

    /**
     * Get the workflows property: The workflows export validity.
     *
     * @return the workflows value.
     */
    public Map<String, WorkflowExportValidity> workflows() {
        return this.workflows;
    }

    /**
     * Set the workflows property: The workflows export validity.
     *
     * @param workflows the workflows value to set.
     * @return the WorkflowExportValidityResultInner object itself.
     */
    public WorkflowExportValidityResultInner withWorkflows(Map<String, WorkflowExportValidity> workflows) {
        this.workflows = workflows;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (workflows() != null) {
            workflows()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
    }
}

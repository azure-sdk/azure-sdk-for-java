// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.logic.fluent.LocationsClient;
import com.azure.resourcemanager.logic.fluent.models.WorkflowExportResultInner;
import com.azure.resourcemanager.logic.fluent.models.WorkflowExportValidityResultInner;
import com.azure.resourcemanager.logic.models.Locations;
import com.azure.resourcemanager.logic.models.WorkflowExportRequest;
import com.azure.resourcemanager.logic.models.WorkflowExportResult;
import com.azure.resourcemanager.logic.models.WorkflowExportValidityResult;

public final class LocationsImpl implements Locations {
    private static final ClientLogger LOGGER = new ClientLogger(LocationsImpl.class);

    private final LocationsClient innerClient;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public LocationsImpl(LocationsClient innerClient, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<WorkflowExportValidityResult> validateWorkflowExportWithResponse(
        String location, WorkflowExportRequest workflowExportRequest, Context context) {
        Response<WorkflowExportValidityResultInner> inner =
            this.serviceClient().validateWorkflowExportWithResponse(location, workflowExportRequest, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new WorkflowExportValidityResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public WorkflowExportValidityResult validateWorkflowExport(
        String location, WorkflowExportRequest workflowExportRequest) {
        WorkflowExportValidityResultInner inner =
            this.serviceClient().validateWorkflowExport(location, workflowExportRequest);
        if (inner != null) {
            return new WorkflowExportValidityResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<WorkflowExportResult> workflowExportWithResponse(
        String location, WorkflowExportRequest workflowExportRequest, Context context) {
        Response<WorkflowExportResultInner> inner =
            this.serviceClient().workflowExportWithResponse(location, workflowExportRequest, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new WorkflowExportResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public WorkflowExportResult workflowExport(String location, WorkflowExportRequest workflowExportRequest) {
        WorkflowExportResultInner inner = this.serviceClient().workflowExport(location, workflowExportRequest);
        if (inner != null) {
            return new WorkflowExportResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private LocationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }
}

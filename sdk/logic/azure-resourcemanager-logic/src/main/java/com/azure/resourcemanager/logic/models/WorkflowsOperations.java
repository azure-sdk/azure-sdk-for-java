// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.WorkflowInner;

/**
 * Resource collection API of WorkflowsOperations.
 */
public interface WorkflowsOperations {
    /**
     * Validates the workflow definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of the Azure region.
     * @param workflowName The workflow name.
     * @param validate The workflow.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> validateByLocationWithResponse(String resourceGroupName, String location, String workflowName,
        WorkflowInner validate, Context context);

    /**
     * Validates the workflow definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The name of the Azure region.
     * @param workflowName The workflow name.
     * @param validate The workflow.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void validateByLocation(String resourceGroupName, String location, String workflowName, WorkflowInner validate);
}

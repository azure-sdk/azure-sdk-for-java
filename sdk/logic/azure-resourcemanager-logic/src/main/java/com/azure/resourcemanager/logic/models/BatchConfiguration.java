// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.BatchConfigurationInner;
import java.time.OffsetDateTime;
import java.util.Map;

/**
 * An immutable client-side representation of BatchConfiguration.
 */
public interface BatchConfiguration {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the batchGroupName property: The name of the batch group.
     * 
     * @return the batchGroupName value.
     */
    String batchGroupName();

    /**
     * Gets the releaseCriteria property: The batch release criteria.
     * 
     * @return the releaseCriteria value.
     */
    BatchReleaseCriteria releaseCriteria();

    /**
     * Gets the createdTime property: The artifact creation time.
     * 
     * @return the createdTime value.
     */
    OffsetDateTime createdTime();

    /**
     * Gets the changedTime property: The artifact changed time.
     * 
     * @return the changedTime value.
     */
    OffsetDateTime changedTime();

    /**
     * Gets the metadata property: Anything.
     * 
     * @return the metadata value.
     */
    Object metadata();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.logic.fluent.models.BatchConfigurationInner object.
     * 
     * @return the inner object.
     */
    BatchConfigurationInner innerModel();

    /**
     * The entirety of the BatchConfiguration definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithLocation, DefinitionStages.WithParentResource,
        DefinitionStages.WithBatchGroupName, DefinitionStages.WithReleaseCriteria, DefinitionStages.WithCreate {
    }

    /**
     * The BatchConfiguration definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the BatchConfiguration definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, integrationAccountName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param integrationAccountName The integration account name.
             * @return the next definition stage.
             */
            WithBatchGroupName withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify batchGroupName.
         */
        interface WithBatchGroupName {
            /**
             * Specifies the batchGroupName property: The name of the batch group..
             * 
             * @param batchGroupName The name of the batch group.
             * @return the next definition stage.
             */
            WithReleaseCriteria withBatchGroupName(String batchGroupName);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify releaseCriteria.
         */
        interface WithReleaseCriteria {
            /**
             * Specifies the releaseCriteria property: The batch release criteria..
             * 
             * @param releaseCriteria The batch release criteria.
             * @return the next definition stage.
             */
            WithCreate withReleaseCriteria(BatchReleaseCriteria releaseCriteria);
        }

        /**
         * The stage of the BatchConfiguration definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithCreatedTime,
            DefinitionStages.WithChangedTime, DefinitionStages.WithMetadata {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            BatchConfiguration create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            BatchConfiguration create(Context context);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify createdTime.
         */
        interface WithCreatedTime {
            /**
             * Specifies the createdTime property: The artifact creation time..
             * 
             * @param createdTime The artifact creation time.
             * @return the next definition stage.
             */
            WithCreate withCreatedTime(OffsetDateTime createdTime);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify changedTime.
         */
        interface WithChangedTime {
            /**
             * Specifies the changedTime property: The artifact changed time..
             * 
             * @param changedTime The artifact changed time.
             * @return the next definition stage.
             */
            WithCreate withChangedTime(OffsetDateTime changedTime);
        }

        /**
         * The stage of the BatchConfiguration definition allowing to specify metadata.
         */
        interface WithMetadata {
            /**
             * Specifies the metadata property: Anything.
             * 
             * @param metadata Anything.
             * @return the next definition stage.
             */
            WithCreate withMetadata(Object metadata);
        }
    }

    /**
     * Begins update for the BatchConfiguration resource.
     * 
     * @return the stage of resource update.
     */
    BatchConfiguration.Update update();

    /**
     * The template for BatchConfiguration update.
     */
    interface Update extends UpdateStages.WithTags, UpdateStages.WithBatchGroupName, UpdateStages.WithReleaseCriteria,
        UpdateStages.WithCreatedTime, UpdateStages.WithChangedTime, UpdateStages.WithMetadata {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        BatchConfiguration apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        BatchConfiguration apply(Context context);
    }

    /**
     * The BatchConfiguration update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the BatchConfiguration update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the BatchConfiguration update allowing to specify batchGroupName.
         */
        interface WithBatchGroupName {
            /**
             * Specifies the batchGroupName property: The name of the batch group..
             * 
             * @param batchGroupName The name of the batch group.
             * @return the next definition stage.
             */
            Update withBatchGroupName(String batchGroupName);
        }

        /**
         * The stage of the BatchConfiguration update allowing to specify releaseCriteria.
         */
        interface WithReleaseCriteria {
            /**
             * Specifies the releaseCriteria property: The batch release criteria..
             * 
             * @param releaseCriteria The batch release criteria.
             * @return the next definition stage.
             */
            Update withReleaseCriteria(BatchReleaseCriteria releaseCriteria);
        }

        /**
         * The stage of the BatchConfiguration update allowing to specify createdTime.
         */
        interface WithCreatedTime {
            /**
             * Specifies the createdTime property: The artifact creation time..
             * 
             * @param createdTime The artifact creation time.
             * @return the next definition stage.
             */
            Update withCreatedTime(OffsetDateTime createdTime);
        }

        /**
         * The stage of the BatchConfiguration update allowing to specify changedTime.
         */
        interface WithChangedTime {
            /**
             * Specifies the changedTime property: The artifact changed time..
             * 
             * @param changedTime The artifact changed time.
             * @return the next definition stage.
             */
            Update withChangedTime(OffsetDateTime changedTime);
        }

        /**
         * The stage of the BatchConfiguration update allowing to specify metadata.
         */
        interface WithMetadata {
            /**
             * Specifies the metadata property: Anything.
             * 
             * @param metadata Anything.
             * @return the next definition stage.
             */
            Update withMetadata(Object metadata);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    BatchConfiguration refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    BatchConfiguration refresh(Context context);
}

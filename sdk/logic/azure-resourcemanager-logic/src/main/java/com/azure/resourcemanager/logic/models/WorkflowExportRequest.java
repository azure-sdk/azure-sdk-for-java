// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The workflow export request. */
@Fluent
public final class WorkflowExportRequest {
    /*
     * The workflows for export.
     */
    @JsonProperty(value = "workflows", required = true)
    private List<ResourceReference> workflows;

    /*
     * The workflow export options flags. Possible options are: CloneConnections, GenerateInfrastructureTemplates
     */
    @JsonProperty(value = "workflowExportOptions", required = true)
    private WorkflowExportOptions workflowExportOptions;

    /** Creates an instance of WorkflowExportRequest class. */
    public WorkflowExportRequest() {
    }

    /**
     * Get the workflows property: The workflows for export.
     *
     * @return the workflows value.
     */
    public List<ResourceReference> workflows() {
        return this.workflows;
    }

    /**
     * Set the workflows property: The workflows for export.
     *
     * @param workflows the workflows value to set.
     * @return the WorkflowExportRequest object itself.
     */
    public WorkflowExportRequest withWorkflows(List<ResourceReference> workflows) {
        this.workflows = workflows;
        return this;
    }

    /**
     * Get the workflowExportOptions property: The workflow export options flags. Possible options are:
     * CloneConnections, GenerateInfrastructureTemplates.
     *
     * @return the workflowExportOptions value.
     */
    public WorkflowExportOptions workflowExportOptions() {
        return this.workflowExportOptions;
    }

    /**
     * Set the workflowExportOptions property: The workflow export options flags. Possible options are:
     * CloneConnections, GenerateInfrastructureTemplates.
     *
     * @param workflowExportOptions the workflowExportOptions value to set.
     * @return the WorkflowExportRequest object itself.
     */
    public WorkflowExportRequest withWorkflowExportOptions(WorkflowExportOptions workflowExportOptions) {
        this.workflowExportOptions = workflowExportOptions;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (workflows() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property workflows in model WorkflowExportRequest"));
        } else {
            workflows().forEach(e -> e.validate());
        }
        if (workflowExportOptions() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property workflowExportOptions in model WorkflowExportRequest"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(WorkflowExportRequest.class);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationServiceEnvironmentInner;
import java.util.Map;

/**
 * An immutable client-side representation of IntegrationServiceEnvironment.
 */
public interface IntegrationServiceEnvironment {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     * 
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     * 
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the sku property: The sku.
     * 
     * @return the sku value.
     */
    IntegrationServiceEnvironmentSku sku();

    /**
     * Gets the identity property: Managed service identity properties.
     * 
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: Gets the provisioning state.
     * 
     * @return the provisioningState value.
     */
    WorkflowProvisioningState provisioningState();

    /**
     * Gets the state property: The integration service environment state.
     * 
     * @return the state value.
     */
    WorkflowState state();

    /**
     * Gets the integrationServiceEnvironmentId property: Gets the tracking id.
     * 
     * @return the integrationServiceEnvironmentId value.
     */
    String integrationServiceEnvironmentId();

    /**
     * Gets the endpointsConfiguration property: The endpoints configuration.
     * 
     * @return the endpointsConfiguration value.
     */
    FlowEndpointsConfiguration endpointsConfiguration();

    /**
     * Gets the networkConfiguration property: The network configuration.
     * 
     * @return the networkConfiguration value.
     */
    NetworkConfiguration networkConfiguration();

    /**
     * Gets the encryptionConfiguration property: The encryption configuration.
     * 
     * @return the encryptionConfiguration value.
     */
    IntegrationServiceEnvironmenEncryptionConfiguration encryptionConfiguration();

    /**
     * Gets the region of the resource.
     * 
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     * 
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.logic.fluent.models.IntegrationServiceEnvironmentInner object.
     * 
     * @return the inner object.
     */
    IntegrationServiceEnvironmentInner innerModel();

    /**
     * The entirety of the IntegrationServiceEnvironment definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLocation, DefinitionStages.WithCreate {
    }

    /**
     * The IntegrationServiceEnvironment definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the IntegrationServiceEnvironment definition.
         */
        interface Blank extends WithLocation {
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify location.
         */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithCreate withRegion(Region location);

            /**
             * Specifies the region for the resource.
             * 
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithCreate withRegion(String location);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithSku, DefinitionStages.WithIdentity,
            DefinitionStages.WithState, DefinitionStages.WithIntegrationServiceEnvironmentId,
            DefinitionStages.WithEndpointsConfiguration, DefinitionStages.WithNetworkConfiguration,
            DefinitionStages.WithEncryptionConfiguration {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            IntegrationServiceEnvironment create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            IntegrationServiceEnvironment create(Context context);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify sku.
         */
        interface WithSku {
            /**
             * Specifies the sku property: The sku..
             * 
             * @param sku The sku.
             * @return the next definition stage.
             */
            WithCreate withSku(IntegrationServiceEnvironmentSku sku);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed service identity properties..
             * 
             * @param identity Managed service identity properties.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify state.
         */
        interface WithState {
            /**
             * Specifies the state property: The integration service environment state..
             * 
             * @param state The integration service environment state.
             * @return the next definition stage.
             */
            WithCreate withState(WorkflowState state);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify
         * integrationServiceEnvironmentId.
         */
        interface WithIntegrationServiceEnvironmentId {
            /**
             * Specifies the integrationServiceEnvironmentId property: Gets the tracking id..
             * 
             * @param integrationServiceEnvironmentId Gets the tracking id.
             * @return the next definition stage.
             */
            WithCreate withIntegrationServiceEnvironmentId(String integrationServiceEnvironmentId);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify endpointsConfiguration.
         */
        interface WithEndpointsConfiguration {
            /**
             * Specifies the endpointsConfiguration property: The endpoints configuration..
             * 
             * @param endpointsConfiguration The endpoints configuration.
             * @return the next definition stage.
             */
            WithCreate withEndpointsConfiguration(FlowEndpointsConfiguration endpointsConfiguration);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify networkConfiguration.
         */
        interface WithNetworkConfiguration {
            /**
             * Specifies the networkConfiguration property: The network configuration..
             * 
             * @param networkConfiguration The network configuration.
             * @return the next definition stage.
             */
            WithCreate withNetworkConfiguration(NetworkConfiguration networkConfiguration);
        }

        /**
         * The stage of the IntegrationServiceEnvironment definition allowing to specify encryptionConfiguration.
         */
        interface WithEncryptionConfiguration {
            /**
             * Specifies the encryptionConfiguration property: The encryption configuration..
             * 
             * @param encryptionConfiguration The encryption configuration.
             * @return the next definition stage.
             */
            WithCreate withEncryptionConfiguration(
                IntegrationServiceEnvironmenEncryptionConfiguration encryptionConfiguration);
        }
    }

    /**
     * Begins update for the IntegrationServiceEnvironment resource.
     * 
     * @return the stage of resource update.
     */
    IntegrationServiceEnvironment.Update update();

    /**
     * The template for IntegrationServiceEnvironment update.
     */
    interface Update
        extends UpdateStages.WithTags, UpdateStages.WithSku, UpdateStages.WithIdentity, UpdateStages.WithState,
        UpdateStages.WithIntegrationServiceEnvironmentId, UpdateStages.WithEndpointsConfiguration,
        UpdateStages.WithNetworkConfiguration, UpdateStages.WithEncryptionConfiguration {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        IntegrationServiceEnvironment apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        IntegrationServiceEnvironment apply(Context context);
    }

    /**
     * The IntegrationServiceEnvironment update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify tags.
         */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             * 
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify sku.
         */
        interface WithSku {
            /**
             * Specifies the sku property: The sku..
             * 
             * @param sku The sku.
             * @return the next definition stage.
             */
            Update withSku(IntegrationServiceEnvironmentSku sku);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify identity.
         */
        interface WithIdentity {
            /**
             * Specifies the identity property: Managed service identity properties..
             * 
             * @param identity Managed service identity properties.
             * @return the next definition stage.
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify state.
         */
        interface WithState {
            /**
             * Specifies the state property: The integration service environment state..
             * 
             * @param state The integration service environment state.
             * @return the next definition stage.
             */
            Update withState(WorkflowState state);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify integrationServiceEnvironmentId.
         */
        interface WithIntegrationServiceEnvironmentId {
            /**
             * Specifies the integrationServiceEnvironmentId property: Gets the tracking id..
             * 
             * @param integrationServiceEnvironmentId Gets the tracking id.
             * @return the next definition stage.
             */
            Update withIntegrationServiceEnvironmentId(String integrationServiceEnvironmentId);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify endpointsConfiguration.
         */
        interface WithEndpointsConfiguration {
            /**
             * Specifies the endpointsConfiguration property: The endpoints configuration..
             * 
             * @param endpointsConfiguration The endpoints configuration.
             * @return the next definition stage.
             */
            Update withEndpointsConfiguration(FlowEndpointsConfiguration endpointsConfiguration);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify networkConfiguration.
         */
        interface WithNetworkConfiguration {
            /**
             * Specifies the networkConfiguration property: The network configuration..
             * 
             * @param networkConfiguration The network configuration.
             * @return the next definition stage.
             */
            Update withNetworkConfiguration(NetworkConfiguration networkConfiguration);
        }

        /**
         * The stage of the IntegrationServiceEnvironment update allowing to specify encryptionConfiguration.
         */
        interface WithEncryptionConfiguration {
            /**
             * Specifies the encryptionConfiguration property: The encryption configuration..
             * 
             * @param encryptionConfiguration The encryption configuration.
             * @return the next definition stage.
             */
            Update withEncryptionConfiguration(
                IntegrationServiceEnvironmenEncryptionConfiguration encryptionConfiguration);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    IntegrationServiceEnvironment refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    IntegrationServiceEnvironment refresh(Context context);

    /**
     * Restarts an integration service environment.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> restartWithResponse(Context context);

    /**
     * Restarts an integration service environment.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void restart();
}

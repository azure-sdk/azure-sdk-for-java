// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.logic.models.ContentLink;
import com.azure.resourcemanager.logic.models.ExportDetail;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The workflow export result. */
@Fluent
public final class WorkflowExportResultInner {
    /*
     * The export details.
     */
    @JsonProperty(value = "details")
    private List<ExportDetail> details;

    /*
     * The link for the export package.
     */
    @JsonProperty(value = "packageLink")
    private ContentLink packageLink;

    /** Creates an instance of WorkflowExportResultInner class. */
    public WorkflowExportResultInner() {
    }

    /**
     * Get the details property: The export details.
     *
     * @return the details value.
     */
    public List<ExportDetail> details() {
        return this.details;
    }

    /**
     * Set the details property: The export details.
     *
     * @param details the details value to set.
     * @return the WorkflowExportResultInner object itself.
     */
    public WorkflowExportResultInner withDetails(List<ExportDetail> details) {
        this.details = details;
        return this;
    }

    /**
     * Get the packageLink property: The link for the export package.
     *
     * @return the packageLink value.
     */
    public ContentLink packageLink() {
        return this.packageLink;
    }

    /**
     * Set the packageLink property: The link for the export package.
     *
     * @param packageLink the packageLink value to set.
     * @return the WorkflowExportResultInner object itself.
     */
    public WorkflowExportResultInner withPackageLink(ContentLink packageLink) {
        this.packageLink = packageLink;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (details() != null) {
            details().forEach(e -> e.validate());
        }
        if (packageLink() != null) {
            packageLink().validate();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.logic.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner;
import com.azure.resourcemanager.logic.models.IntegrationAccountCertificate;
import com.azure.resourcemanager.logic.models.IntegrationAccountCertificateProperties;

public final class IntegrationAccountCertificateImpl implements IntegrationAccountCertificate,
    IntegrationAccountCertificate.Definition, IntegrationAccountCertificate.Update {
    private IntegrationAccountCertificateInner innerObject;

    private final com.azure.resourcemanager.logic.LogicManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public IntegrationAccountCertificateProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public IntegrationAccountCertificateInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.logic.LogicManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String integrationAccountName;

    private String certificateName;

    public IntegrationAccountCertificateImpl withExistingIntegrationAccount(String resourceGroupName,
        String integrationAccountName) {
        this.resourceGroupName = resourceGroupName;
        this.integrationAccountName = integrationAccountName;
        return this;
    }

    public IntegrationAccountCertificate create() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountCertificates()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, certificateName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountCertificate create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountCertificates()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, certificateName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    IntegrationAccountCertificateImpl(String name, com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = new IntegrationAccountCertificateInner();
        this.serviceManager = serviceManager;
        this.certificateName = name;
    }

    public IntegrationAccountCertificateImpl update() {
        return this;
    }

    public IntegrationAccountCertificate apply() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountCertificates()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, certificateName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountCertificate apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountCertificates()
            .createOrUpdateWithResponse(resourceGroupName, integrationAccountName, certificateName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    IntegrationAccountCertificateImpl(IntegrationAccountCertificateInner innerObject,
        com.azure.resourcemanager.logic.LogicManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.integrationAccountName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "integrationAccounts");
        this.certificateName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "certificates");
    }

    public IntegrationAccountCertificate refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountCertificates()
            .getWithResponse(resourceGroupName, integrationAccountName, certificateName, Context.NONE)
            .getValue();
        return this;
    }

    public IntegrationAccountCertificate refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getIntegrationAccountCertificates()
            .getWithResponse(resourceGroupName, integrationAccountName, certificateName, context)
            .getValue();
        return this;
    }

    public IntegrationAccountCertificateImpl withProperties(IntegrationAccountCertificateProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.resourcemanager.security.models.ApplicationMappingRuleMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The application mapping rule resource. */
@Fluent
public final class ApplicationMappingRuleInner extends ProxyResource {
    /*
     * Properties of an application mapping rule
     */
    @JsonProperty(value = "properties")
    private ApplicationMappingRuleProperties innerProperties;

    /** Creates an instance of ApplicationMappingRuleInner class. */
    public ApplicationMappingRuleInner() {
    }

    /**
     * Get the innerProperties property: Properties of an application mapping rule.
     *
     * @return the innerProperties value.
     */
    private ApplicationMappingRuleProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the tenantId property: The tenant Id associated with the application mapping rule (GUID).
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.innerProperties() == null ? null : this.innerProperties().tenantId();
    }

    /**
     * Set the tenantId property: The tenant Id associated with the application mapping rule (GUID).
     *
     * @param tenantId the tenantId value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withTenantId(String tenantId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withTenantId(tenantId);
        return this;
    }

    /**
     * Get the displayName property: The application mapping rule display name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.innerProperties() == null ? null : this.innerProperties().displayName();
    }

    /**
     * Set the displayName property: The application mapping rule display name.
     *
     * @param displayName the displayName value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withDisplayName(String displayName) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withDisplayName(displayName);
        return this;
    }

    /**
     * Get the description property: The application mapping rule description.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The application mapping rule description.
     *
     * @param description the description value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the mappingTagKeys property: The mapping tag key list.
     *
     * @return the mappingTagKeys value.
     */
    public List<String> mappingTagKeys() {
        return this.innerProperties() == null ? null : this.innerProperties().mappingTagKeys();
    }

    /**
     * Set the mappingTagKeys property: The mapping tag key list.
     *
     * @param mappingTagKeys the mappingTagKeys value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withMappingTagKeys(List<String> mappingTagKeys) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withMappingTagKeys(mappingTagKeys);
        return this;
    }

    /**
     * Get the includedMappingTagValues property: The included mapping tag values,for an empty array - all the values
     * should create applications.
     *
     * @return the includedMappingTagValues value.
     */
    public List<String> includedMappingTagValues() {
        return this.innerProperties() == null ? null : this.innerProperties().includedMappingTagValues();
    }

    /**
     * Set the includedMappingTagValues property: The included mapping tag values,for an empty array - all the values
     * should create applications.
     *
     * @param includedMappingTagValues the includedMappingTagValues value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withIncludedMappingTagValues(List<String> includedMappingTagValues) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withIncludedMappingTagValues(includedMappingTagValues);
        return this;
    }

    /**
     * Get the deploymentEnvironment property: The application mapping rule deployment environment tag.
     *
     * @return the deploymentEnvironment value.
     */
    public String deploymentEnvironment() {
        return this.innerProperties() == null ? null : this.innerProperties().deploymentEnvironment();
    }

    /**
     * Set the deploymentEnvironment property: The application mapping rule deployment environment tag.
     *
     * @param deploymentEnvironment the deploymentEnvironment value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withDeploymentEnvironment(String deploymentEnvironment) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withDeploymentEnvironment(deploymentEnvironment);
        return this;
    }

    /**
     * Get the excludedScopes property: Excluded Scopes, filter out the descendants of the scope.
     *
     * @return the excludedScopes value.
     */
    public List<String> excludedScopes() {
        return this.innerProperties() == null ? null : this.innerProperties().excludedScopes();
    }

    /**
     * Set the excludedScopes property: Excluded Scopes, filter out the descendants of the scope.
     *
     * @param excludedScopes the excludedScopes value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withExcludedScopes(List<String> excludedScopes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withExcludedScopes(excludedScopes);
        return this;
    }

    /**
     * Get the includeMemberScopes property: Defines whether the rule is management scope rule (management connector as
     * a single scope or management scope).
     *
     * @return the includeMemberScopes value.
     */
    public Boolean includeMemberScopes() {
        return this.innerProperties() == null ? null : this.innerProperties().includeMemberScopes();
    }

    /**
     * Set the includeMemberScopes property: Defines whether the rule is management scope rule (management connector as
     * a single scope or management scope).
     *
     * @param includeMemberScopes the includeMemberScopes value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withIncludeMemberScopes(Boolean includeMemberScopes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withIncludeMemberScopes(includeMemberScopes);
        return this;
    }

    /**
     * Get the metadata property: The applications mapping rule metadata.
     *
     * @return the metadata value.
     */
    public ApplicationMappingRuleMetadata metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Set the metadata property: The applications mapping rule metadata.
     *
     * @param metadata the metadata value to set.
     * @return the ApplicationMappingRuleInner object itself.
     */
    public ApplicationMappingRuleInner withMetadata(ApplicationMappingRuleMetadata metadata) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApplicationMappingRuleProperties();
        }
        this.innerProperties().withMetadata(metadata);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}

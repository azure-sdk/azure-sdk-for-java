// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of DataScanners.
 */
public interface DataScanners {
    /**
     * Get a list of all relevant security data scanners over a subscription level scope.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all relevant security data scanners over a subscription level scope as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<DataScanner> list();

    /**
     * Get a list of all relevant security data scanners over a subscription level scope.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of all relevant security data scanners over a subscription level scope as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<DataScanner> list(Context context);

    /**
     * Get a specific security data scanner for the requested scope.
     * 
     * @param dataScannerName Security data scanner name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific security data scanner for the requested scope along with {@link Response}.
     */
    Response<DataScanner> getWithResponse(String dataScannerName, Context context);

    /**
     * Get a specific security data scanner for the requested scope.
     * 
     * @param dataScannerName Security data scanner name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a specific security data scanner for the requested scope.
     */
    DataScanner get(String dataScannerName);

    /**
     * Create a security data scanner.
     * 
     * @param dataScannerName Name of the data scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return security Data Scanner resource along with {@link Response}.
     */
    Response<DataScanner> createOrUpdateWithResponse(String dataScannerName, Context context);

    /**
     * Create a security data scanner.
     * 
     * @param dataScannerName Name of the data scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return security Data Scanner resource.
     */
    DataScanner createOrUpdate(String dataScannerName);

    /**
     * Delete a security data scanners.
     * 
     * @param dataScannerName Security data scanner name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String dataScannerName, Context context);

    /**
     * Delete a security data scanners.
     * 
     * @param dataScannerName Security data scanner name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String dataScannerName);
}

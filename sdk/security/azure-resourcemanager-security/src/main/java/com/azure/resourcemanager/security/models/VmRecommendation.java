// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents a machine that is part of a machine group.
 */
@Fluent
public final class VmRecommendation implements JsonSerializable<VmRecommendation> {
    /*
     * The configuration status of the machines group or machine or rule
     */
    private ConfigurationStatus configurationStatus;

    /*
     * The recommendation action of the machine or rule
     */
    private RecommendationAction recommendationAction;

    /*
     * The full resource id of the machine
     */
    private String resourceId;

    /*
     * The machine supportability of Enforce feature
     */
    private EnforcementSupport enforcementSupport;

    /**
     * Creates an instance of VmRecommendation class.
     */
    public VmRecommendation() {
    }

    /**
     * Get the configurationStatus property: The configuration status of the machines group or machine or rule.
     * 
     * @return the configurationStatus value.
     */
    public ConfigurationStatus configurationStatus() {
        return this.configurationStatus;
    }

    /**
     * Set the configurationStatus property: The configuration status of the machines group or machine or rule.
     * 
     * @param configurationStatus the configurationStatus value to set.
     * @return the VmRecommendation object itself.
     */
    public VmRecommendation withConfigurationStatus(ConfigurationStatus configurationStatus) {
        this.configurationStatus = configurationStatus;
        return this;
    }

    /**
     * Get the recommendationAction property: The recommendation action of the machine or rule.
     * 
     * @return the recommendationAction value.
     */
    public RecommendationAction recommendationAction() {
        return this.recommendationAction;
    }

    /**
     * Set the recommendationAction property: The recommendation action of the machine or rule.
     * 
     * @param recommendationAction the recommendationAction value to set.
     * @return the VmRecommendation object itself.
     */
    public VmRecommendation withRecommendationAction(RecommendationAction recommendationAction) {
        this.recommendationAction = recommendationAction;
        return this;
    }

    /**
     * Get the resourceId property: The full resource id of the machine.
     * 
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The full resource id of the machine.
     * 
     * @param resourceId the resourceId value to set.
     * @return the VmRecommendation object itself.
     */
    public VmRecommendation withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the enforcementSupport property: The machine supportability of Enforce feature.
     * 
     * @return the enforcementSupport value.
     */
    public EnforcementSupport enforcementSupport() {
        return this.enforcementSupport;
    }

    /**
     * Set the enforcementSupport property: The machine supportability of Enforce feature.
     * 
     * @param enforcementSupport the enforcementSupport value to set.
     * @return the VmRecommendation object itself.
     */
    public VmRecommendation withEnforcementSupport(EnforcementSupport enforcementSupport) {
        this.enforcementSupport = enforcementSupport;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("configurationStatus",
            this.configurationStatus == null ? null : this.configurationStatus.toString());
        jsonWriter.writeStringField("recommendationAction",
            this.recommendationAction == null ? null : this.recommendationAction.toString());
        jsonWriter.writeStringField("resourceId", this.resourceId);
        jsonWriter.writeStringField("enforcementSupport",
            this.enforcementSupport == null ? null : this.enforcementSupport.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of VmRecommendation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of VmRecommendation if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the VmRecommendation.
     */
    public static VmRecommendation fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            VmRecommendation deserializedVmRecommendation = new VmRecommendation();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("configurationStatus".equals(fieldName)) {
                    deserializedVmRecommendation.configurationStatus
                        = ConfigurationStatus.fromString(reader.getString());
                } else if ("recommendationAction".equals(fieldName)) {
                    deserializedVmRecommendation.recommendationAction
                        = RecommendationAction.fromString(reader.getString());
                } else if ("resourceId".equals(fieldName)) {
                    deserializedVmRecommendation.resourceId = reader.getString();
                } else if ("enforcementSupport".equals(fieldName)) {
                    deserializedVmRecommendation.enforcementSupport = EnforcementSupport.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedVmRecommendation;
        });
    }
}

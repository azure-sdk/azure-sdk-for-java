// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A contextual path that was considered for calculating an assessment risk.
 */
@Fluent
public final class AssessmentRiskPath {
    /*
     * The ID of the path
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * List of node IDs in the path
     */
    @JsonProperty(value = "nodes")
    private List<AssessmentRiskPathReferenceItem> nodes;

    /*
     * List of edge IDs in the path
     */
    @JsonProperty(value = "edges")
    private List<AssessmentRiskPathReferenceItem> edges;

    /*
     * List of insight IDs in the path
     */
    @JsonProperty(value = "insights")
    private List<AssessmentRiskPathReferenceItem> insights;

    /**
     * Creates an instance of AssessmentRiskPath class.
     */
    public AssessmentRiskPath() {
    }

    /**
     * Get the id property: The ID of the path.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The ID of the path.
     * 
     * @param id the id value to set.
     * @return the AssessmentRiskPath object itself.
     */
    public AssessmentRiskPath withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the nodes property: List of node IDs in the path.
     * 
     * @return the nodes value.
     */
    public List<AssessmentRiskPathReferenceItem> nodes() {
        return this.nodes;
    }

    /**
     * Set the nodes property: List of node IDs in the path.
     * 
     * @param nodes the nodes value to set.
     * @return the AssessmentRiskPath object itself.
     */
    public AssessmentRiskPath withNodes(List<AssessmentRiskPathReferenceItem> nodes) {
        this.nodes = nodes;
        return this;
    }

    /**
     * Get the edges property: List of edge IDs in the path.
     * 
     * @return the edges value.
     */
    public List<AssessmentRiskPathReferenceItem> edges() {
        return this.edges;
    }

    /**
     * Set the edges property: List of edge IDs in the path.
     * 
     * @param edges the edges value to set.
     * @return the AssessmentRiskPath object itself.
     */
    public AssessmentRiskPath withEdges(List<AssessmentRiskPathReferenceItem> edges) {
        this.edges = edges;
        return this;
    }

    /**
     * Get the insights property: List of insight IDs in the path.
     * 
     * @return the insights value.
     */
    public List<AssessmentRiskPathReferenceItem> insights() {
        return this.insights;
    }

    /**
     * Set the insights property: List of insight IDs in the path.
     * 
     * @param insights the insights value to set.
     * @return the AssessmentRiskPath object itself.
     */
    public AssessmentRiskPath withInsights(List<AssessmentRiskPathReferenceItem> insights) {
        this.insights = insights;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (nodes() != null) {
            nodes().forEach(e -> e.validate());
        }
        if (edges() != null) {
            edges().forEach(e -> e.validate());
        }
        if (insights() != null) {
            insights().forEach(e -> e.validate());
        }
    }
}

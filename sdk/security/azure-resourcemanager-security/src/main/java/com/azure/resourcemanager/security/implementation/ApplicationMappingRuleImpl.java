// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.ApplicationMappingRuleInner;
import com.azure.resourcemanager.security.models.ApplicationMappingRule;
import com.azure.resourcemanager.security.models.ApplicationMappingRuleMetadata;
import java.util.Collections;
import java.util.List;

public final class ApplicationMappingRuleImpl
    implements ApplicationMappingRule, ApplicationMappingRule.Definition, ApplicationMappingRule.Update {
    private ApplicationMappingRuleInner innerObject;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String tenantId() {
        return this.innerModel().tenantId();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public List<String> mappingTagKeys() {
        List<String> inner = this.innerModel().mappingTagKeys();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> includedMappingTagValues() {
        List<String> inner = this.innerModel().includedMappingTagValues();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String deploymentEnvironment() {
        return this.innerModel().deploymentEnvironment();
    }

    public List<String> excludedScopes() {
        List<String> inner = this.innerModel().excludedScopes();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Boolean includeMemberScopes() {
        return this.innerModel().includeMemberScopes();
    }

    public ApplicationMappingRuleMetadata metadata() {
        return this.innerModel().metadata();
    }

    public ApplicationMappingRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }

    private String scope;

    private String ruleId;

    public ApplicationMappingRuleImpl withExistingScope(String scope) {
        this.scope = scope;
        return this;
    }

    public ApplicationMappingRule create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationMappingRules()
                .createOrUpdateWithResponse(scope, ruleId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationMappingRule create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationMappingRules()
                .createOrUpdateWithResponse(scope, ruleId, this.innerModel(), context)
                .getValue();
        return this;
    }

    ApplicationMappingRuleImpl(String name, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerObject = new ApplicationMappingRuleInner();
        this.serviceManager = serviceManager;
        this.ruleId = name;
    }

    public ApplicationMappingRuleImpl update() {
        return this;
    }

    public ApplicationMappingRule apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationMappingRules()
                .createOrUpdateWithResponse(scope, ruleId, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationMappingRule apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationMappingRules()
                .createOrUpdateWithResponse(scope, ruleId, this.innerModel(), context)
                .getValue();
        return this;
    }

    ApplicationMappingRuleImpl(
        ApplicationMappingRuleInner innerObject, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.scope =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{scope}/providers/Microsoft.Security/applicationMappingRules/{ruleId}",
                    "scope");
        this.ruleId =
            Utils
                .getValueFromIdByParameterName(
                    innerObject.id(),
                    "/{scope}/providers/Microsoft.Security/applicationMappingRules/{ruleId}",
                    "ruleId");
    }

    public ApplicationMappingRule refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationMappingRules()
                .getWithResponse(scope, ruleId, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationMappingRule refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplicationMappingRules()
                .getWithResponse(scope, ruleId, context)
                .getValue();
        return this;
    }

    public ApplicationMappingRuleImpl withTenantId(String tenantId) {
        this.innerModel().withTenantId(tenantId);
        return this;
    }

    public ApplicationMappingRuleImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public ApplicationMappingRuleImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public ApplicationMappingRuleImpl withMappingTagKeys(List<String> mappingTagKeys) {
        this.innerModel().withMappingTagKeys(mappingTagKeys);
        return this;
    }

    public ApplicationMappingRuleImpl withIncludedMappingTagValues(List<String> includedMappingTagValues) {
        this.innerModel().withIncludedMappingTagValues(includedMappingTagValues);
        return this;
    }

    public ApplicationMappingRuleImpl withDeploymentEnvironment(String deploymentEnvironment) {
        this.innerModel().withDeploymentEnvironment(deploymentEnvironment);
        return this;
    }

    public ApplicationMappingRuleImpl withExcludedScopes(List<String> excludedScopes) {
        this.innerModel().withExcludedScopes(excludedScopes);
        return this;
    }

    public ApplicationMappingRuleImpl withIncludeMemberScopes(Boolean includeMemberScopes) {
        this.innerModel().withIncludeMemberScopes(includeMemberScopes);
        return this;
    }

    public ApplicationMappingRuleImpl withMetadata(ApplicationMappingRuleMetadata metadata) {
        this.innerModel().withMetadata(metadata);
        return this;
    }
}

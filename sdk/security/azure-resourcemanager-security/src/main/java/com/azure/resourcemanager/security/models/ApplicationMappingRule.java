// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.ApplicationMappingRuleInner;
import java.util.List;

/** An immutable client-side representation of ApplicationMappingRule. */
public interface ApplicationMappingRule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the tenantId property: The tenant Id associated with the application mapping rule (GUID).
     *
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * Gets the displayName property: The application mapping rule display name.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: The application mapping rule description.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the mappingTagKeys property: The mapping tag key list.
     *
     * @return the mappingTagKeys value.
     */
    List<String> mappingTagKeys();

    /**
     * Gets the includedMappingTagValues property: The included mapping tag values,for an empty array - all the values
     * should create applications.
     *
     * @return the includedMappingTagValues value.
     */
    List<String> includedMappingTagValues();

    /**
     * Gets the deploymentEnvironment property: The application mapping rule deployment environment tag.
     *
     * @return the deploymentEnvironment value.
     */
    String deploymentEnvironment();

    /**
     * Gets the excludedScopes property: Excluded Scopes, filter out the descendants of the scope.
     *
     * @return the excludedScopes value.
     */
    List<String> excludedScopes();

    /**
     * Gets the includeMemberScopes property: Defines whether the rule is management scope rule (management connector as
     * a single scope or management scope).
     *
     * @return the includeMemberScopes value.
     */
    Boolean includeMemberScopes();

    /**
     * Gets the metadata property: The applications mapping rule metadata.
     *
     * @return the metadata value.
     */
    ApplicationMappingRuleMetadata metadata();

    /**
     * Gets the inner com.azure.resourcemanager.security.fluent.models.ApplicationMappingRuleInner object.
     *
     * @return the inner object.
     */
    ApplicationMappingRuleInner innerModel();

    /** The entirety of the ApplicationMappingRule definition. */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithScope, DefinitionStages.WithCreate {
    }
    /** The ApplicationMappingRule definition stages. */
    interface DefinitionStages {
        /** The first stage of the ApplicationMappingRule definition. */
        interface Blank extends WithScope {
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify parent resource. */
        interface WithScope {
            /**
             * Specifies scope.
             *
             * @param scope The scope of the application mapping rules rules. Valid scopes are: management group
             *     (format: 'providers/Microsoft.Management/managementGroups/{resourceName}'), subscription (format:
             *     'subscriptions/{subscriptionId}'), or security connector (format:
             *     'subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Security/securityConnectors/{resourceName})'.
             * @return the next definition stage.
             */
            WithCreate withExistingScope(String scope);
        }
        /**
         * The stage of the ApplicationMappingRule definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTenantId,
                DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithMappingTagKeys,
                DefinitionStages.WithIncludedMappingTagValues,
                DefinitionStages.WithDeploymentEnvironment,
                DefinitionStages.WithExcludedScopes,
                DefinitionStages.WithIncludeMemberScopes,
                DefinitionStages.WithMetadata {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ApplicationMappingRule create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ApplicationMappingRule create(Context context);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenant Id associated with the application mapping rule (GUID).
             *
             * @param tenantId The tenant Id associated with the application mapping rule (GUID).
             * @return the next definition stage.
             */
            WithCreate withTenantId(String tenantId);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The application mapping rule display name.
             *
             * @param displayName The application mapping rule display name.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The application mapping rule description.
             *
             * @param description The application mapping rule description.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify mappingTagKeys. */
        interface WithMappingTagKeys {
            /**
             * Specifies the mappingTagKeys property: The mapping tag key list.
             *
             * @param mappingTagKeys The mapping tag key list.
             * @return the next definition stage.
             */
            WithCreate withMappingTagKeys(List<String> mappingTagKeys);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify includedMappingTagValues. */
        interface WithIncludedMappingTagValues {
            /**
             * Specifies the includedMappingTagValues property: The included mapping tag values,for an empty array - all
             * the values should create applications.
             *
             * @param includedMappingTagValues The included mapping tag values,for an empty array - all the values
             *     should create applications.
             * @return the next definition stage.
             */
            WithCreate withIncludedMappingTagValues(List<String> includedMappingTagValues);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify deploymentEnvironment. */
        interface WithDeploymentEnvironment {
            /**
             * Specifies the deploymentEnvironment property: The application mapping rule deployment environment tag.
             *
             * @param deploymentEnvironment The application mapping rule deployment environment tag.
             * @return the next definition stage.
             */
            WithCreate withDeploymentEnvironment(String deploymentEnvironment);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify excludedScopes. */
        interface WithExcludedScopes {
            /**
             * Specifies the excludedScopes property: Excluded Scopes, filter out the descendants of the scope.
             *
             * @param excludedScopes Excluded Scopes, filter out the descendants of the scope.
             * @return the next definition stage.
             */
            WithCreate withExcludedScopes(List<String> excludedScopes);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify includeMemberScopes. */
        interface WithIncludeMemberScopes {
            /**
             * Specifies the includeMemberScopes property: Defines whether the rule is management scope rule (management
             * connector as a single scope or management scope).
             *
             * @param includeMemberScopes Defines whether the rule is management scope rule (management connector as a
             *     single scope or management scope).
             * @return the next definition stage.
             */
            WithCreate withIncludeMemberScopes(Boolean includeMemberScopes);
        }
        /** The stage of the ApplicationMappingRule definition allowing to specify metadata. */
        interface WithMetadata {
            /**
             * Specifies the metadata property: The applications mapping rule metadata.
             *
             * @param metadata The applications mapping rule metadata.
             * @return the next definition stage.
             */
            WithCreate withMetadata(ApplicationMappingRuleMetadata metadata);
        }
    }
    /**
     * Begins update for the ApplicationMappingRule resource.
     *
     * @return the stage of resource update.
     */
    ApplicationMappingRule.Update update();

    /** The template for ApplicationMappingRule update. */
    interface Update
        extends UpdateStages.WithTenantId,
            UpdateStages.WithDisplayName,
            UpdateStages.WithDescription,
            UpdateStages.WithMappingTagKeys,
            UpdateStages.WithIncludedMappingTagValues,
            UpdateStages.WithDeploymentEnvironment,
            UpdateStages.WithExcludedScopes,
            UpdateStages.WithIncludeMemberScopes,
            UpdateStages.WithMetadata {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ApplicationMappingRule apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ApplicationMappingRule apply(Context context);
    }
    /** The ApplicationMappingRule update stages. */
    interface UpdateStages {
        /** The stage of the ApplicationMappingRule update allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenant Id associated with the application mapping rule (GUID).
             *
             * @param tenantId The tenant Id associated with the application mapping rule (GUID).
             * @return the next definition stage.
             */
            Update withTenantId(String tenantId);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: The application mapping rule display name.
             *
             * @param displayName The application mapping rule display name.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The application mapping rule description.
             *
             * @param description The application mapping rule description.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify mappingTagKeys. */
        interface WithMappingTagKeys {
            /**
             * Specifies the mappingTagKeys property: The mapping tag key list.
             *
             * @param mappingTagKeys The mapping tag key list.
             * @return the next definition stage.
             */
            Update withMappingTagKeys(List<String> mappingTagKeys);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify includedMappingTagValues. */
        interface WithIncludedMappingTagValues {
            /**
             * Specifies the includedMappingTagValues property: The included mapping tag values,for an empty array - all
             * the values should create applications.
             *
             * @param includedMappingTagValues The included mapping tag values,for an empty array - all the values
             *     should create applications.
             * @return the next definition stage.
             */
            Update withIncludedMappingTagValues(List<String> includedMappingTagValues);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify deploymentEnvironment. */
        interface WithDeploymentEnvironment {
            /**
             * Specifies the deploymentEnvironment property: The application mapping rule deployment environment tag.
             *
             * @param deploymentEnvironment The application mapping rule deployment environment tag.
             * @return the next definition stage.
             */
            Update withDeploymentEnvironment(String deploymentEnvironment);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify excludedScopes. */
        interface WithExcludedScopes {
            /**
             * Specifies the excludedScopes property: Excluded Scopes, filter out the descendants of the scope.
             *
             * @param excludedScopes Excluded Scopes, filter out the descendants of the scope.
             * @return the next definition stage.
             */
            Update withExcludedScopes(List<String> excludedScopes);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify includeMemberScopes. */
        interface WithIncludeMemberScopes {
            /**
             * Specifies the includeMemberScopes property: Defines whether the rule is management scope rule (management
             * connector as a single scope or management scope).
             *
             * @param includeMemberScopes Defines whether the rule is management scope rule (management connector as a
             *     single scope or management scope).
             * @return the next definition stage.
             */
            Update withIncludeMemberScopes(Boolean includeMemberScopes);
        }
        /** The stage of the ApplicationMappingRule update allowing to specify metadata. */
        interface WithMetadata {
            /**
             * Specifies the metadata property: The applications mapping rule metadata.
             *
             * @param metadata The applications mapping rule metadata.
             * @return the next definition stage.
             */
            Update withMetadata(ApplicationMappingRuleMetadata metadata);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ApplicationMappingRule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ApplicationMappingRule refresh(Context context);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents a summary of the alerts of the machine group.
 */
@Fluent
public final class AdaptiveApplicationControlIssueSummary
    implements JsonSerializable<AdaptiveApplicationControlIssueSummary> {
    /*
     * An alert that machines within a group can have
     */
    private AdaptiveApplicationControlIssue issue;

    /*
     * The number of machines in the group that have this alert
     */
    private Float numberOfVms;

    /**
     * Creates an instance of AdaptiveApplicationControlIssueSummary class.
     */
    public AdaptiveApplicationControlIssueSummary() {
    }

    /**
     * Get the issue property: An alert that machines within a group can have.
     * 
     * @return the issue value.
     */
    public AdaptiveApplicationControlIssue issue() {
        return this.issue;
    }

    /**
     * Set the issue property: An alert that machines within a group can have.
     * 
     * @param issue the issue value to set.
     * @return the AdaptiveApplicationControlIssueSummary object itself.
     */
    public AdaptiveApplicationControlIssueSummary withIssue(AdaptiveApplicationControlIssue issue) {
        this.issue = issue;
        return this;
    }

    /**
     * Get the numberOfVms property: The number of machines in the group that have this alert.
     * 
     * @return the numberOfVms value.
     */
    public Float numberOfVms() {
        return this.numberOfVms;
    }

    /**
     * Set the numberOfVms property: The number of machines in the group that have this alert.
     * 
     * @param numberOfVms the numberOfVms value to set.
     * @return the AdaptiveApplicationControlIssueSummary object itself.
     */
    public AdaptiveApplicationControlIssueSummary withNumberOfVms(Float numberOfVms) {
        this.numberOfVms = numberOfVms;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("issue", this.issue == null ? null : this.issue.toString());
        jsonWriter.writeNumberField("numberOfVms", this.numberOfVms);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AdaptiveApplicationControlIssueSummary from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AdaptiveApplicationControlIssueSummary if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AdaptiveApplicationControlIssueSummary.
     */
    public static AdaptiveApplicationControlIssueSummary fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AdaptiveApplicationControlIssueSummary deserializedAdaptiveApplicationControlIssueSummary
                = new AdaptiveApplicationControlIssueSummary();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("issue".equals(fieldName)) {
                    deserializedAdaptiveApplicationControlIssueSummary.issue
                        = AdaptiveApplicationControlIssue.fromString(reader.getString());
                } else if ("numberOfVms".equals(fieldName)) {
                    deserializedAdaptiveApplicationControlIssueSummary.numberOfVms
                        = reader.getNullable(JsonReader::getFloat);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAdaptiveApplicationControlIssueSummary;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
 */
@Fluent
public final class ProtectionMode implements JsonSerializable<ProtectionMode> {
    /*
     * The application control policy enforcement/protection mode of the machine group
     */
    private EnforcementMode exe;

    /*
     * The application control policy enforcement/protection mode of the machine group
     */
    private EnforcementMode msi;

    /*
     * The application control policy enforcement/protection mode of the machine group
     */
    private EnforcementMode script;

    /*
     * The application control policy enforcement/protection mode of the machine group
     */
    private EnforcementMode executable;

    /**
     * Creates an instance of ProtectionMode class.
     */
    public ProtectionMode() {
    }

    /**
     * Get the exe property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @return the exe value.
     */
    public EnforcementMode exe() {
        return this.exe;
    }

    /**
     * Set the exe property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @param exe the exe value to set.
     * @return the ProtectionMode object itself.
     */
    public ProtectionMode withExe(EnforcementMode exe) {
        this.exe = exe;
        return this;
    }

    /**
     * Get the msi property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @return the msi value.
     */
    public EnforcementMode msi() {
        return this.msi;
    }

    /**
     * Set the msi property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @param msi the msi value to set.
     * @return the ProtectionMode object itself.
     */
    public ProtectionMode withMsi(EnforcementMode msi) {
        this.msi = msi;
        return this;
    }

    /**
     * Get the script property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @return the script value.
     */
    public EnforcementMode script() {
        return this.script;
    }

    /**
     * Set the script property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @param script the script value to set.
     * @return the ProtectionMode object itself.
     */
    public ProtectionMode withScript(EnforcementMode script) {
        this.script = script;
        return this;
    }

    /**
     * Get the executable property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @return the executable value.
     */
    public EnforcementMode executable() {
        return this.executable;
    }

    /**
     * Set the executable property: The application control policy enforcement/protection mode of the machine group.
     * 
     * @param executable the executable value to set.
     * @return the ProtectionMode object itself.
     */
    public ProtectionMode withExecutable(EnforcementMode executable) {
        this.executable = executable;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("exe", this.exe == null ? null : this.exe.toString());
        jsonWriter.writeStringField("msi", this.msi == null ? null : this.msi.toString());
        jsonWriter.writeStringField("script", this.script == null ? null : this.script.toString());
        jsonWriter.writeStringField("executable", this.executable == null ? null : this.executable.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ProtectionMode from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ProtectionMode if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ProtectionMode.
     */
    public static ProtectionMode fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ProtectionMode deserializedProtectionMode = new ProtectionMode();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("exe".equals(fieldName)) {
                    deserializedProtectionMode.exe = EnforcementMode.fromString(reader.getString());
                } else if ("msi".equals(fieldName)) {
                    deserializedProtectionMode.msi = EnforcementMode.fromString(reader.getString());
                } else if ("script".equals(fieldName)) {
                    deserializedProtectionMode.script = EnforcementMode.fromString(reader.getString());
                } else if ("executable".equals(fieldName)) {
                    deserializedProtectionMode.executable = EnforcementMode.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedProtectionMode;
        });
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.SqlVulnerabilityAssessmentScansClient;
import com.azure.resourcemanager.security.fluent.models.ScanV2Inner;
import com.azure.resourcemanager.security.fluent.models.ScansV2Inner;
import com.azure.resourcemanager.security.models.ScanV2;
import com.azure.resourcemanager.security.models.ScansV2;
import com.azure.resourcemanager.security.models.SqlVulnerabilityAssessmentScans;

public final class SqlVulnerabilityAssessmentScansImpl implements SqlVulnerabilityAssessmentScans {
    private static final ClientLogger LOGGER = new ClientLogger(SqlVulnerabilityAssessmentScansImpl.class);

    private final SqlVulnerabilityAssessmentScansClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public SqlVulnerabilityAssessmentScansImpl(
        SqlVulnerabilityAssessmentScansClient innerClient,
        com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ScanV2> getWithResponse(String resourceId, String scanId, String workspaceId, Context context) {
        Response<ScanV2Inner> inner = this.serviceClient().getWithResponse(resourceId, scanId, workspaceId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ScanV2Impl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ScanV2 get(String resourceId, String scanId, String workspaceId) {
        ScanV2Inner inner = this.serviceClient().get(resourceId, scanId, workspaceId);
        if (inner != null) {
            return new ScanV2Impl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ScansV2> listWithResponse(String resourceId, String workspaceId, Context context) {
        Response<ScansV2Inner> inner = this.serviceClient().listWithResponse(resourceId, workspaceId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ScansV2Impl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ScansV2 list(String resourceId, String workspaceId) {
        ScansV2Inner inner = this.serviceClient().list(resourceId, workspaceId);
        if (inner != null) {
            return new ScansV2Impl(inner, this.manager());
        } else {
            return null;
        }
    }

    private SqlVulnerabilityAssessmentScansClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}

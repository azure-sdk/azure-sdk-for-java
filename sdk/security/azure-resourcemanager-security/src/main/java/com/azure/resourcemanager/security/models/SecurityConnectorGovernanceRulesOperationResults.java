// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of SecurityConnectorGovernanceRulesOperationResults. */
public interface SecurityConnectorGovernanceRulesOperationResults {
    /**
     * Get governance rule long run operation result for the requested scope by ruleId and operationId.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param securityConnectorName The security connector name.
     * @param ruleId The governance rule key - unique key for the standard governance rule (GUID).
     * @param operationId The governance rule execution key - unique key for the execution of governance rule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return governance rule long run operation result for the requested scope by ruleId and operationId.
     */
    Response<OperationResultAutoGenerated> getWithResponse(
        String resourceGroupName, String securityConnectorName, String ruleId, String operationId, Context context);

    /**
     * Get governance rule long run operation result for the requested scope by ruleId and operationId.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param securityConnectorName The security connector name.
     * @param ruleId The governance rule key - unique key for the standard governance rule (GUID).
     * @param operationId The governance rule execution key - unique key for the execution of governance rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return governance rule long run operation result for the requested scope by ruleId and operationId.
     */
    OperationResultAutoGenerated get(
        String resourceGroupName, String securityConnectorName, String ruleId, String operationId);
}

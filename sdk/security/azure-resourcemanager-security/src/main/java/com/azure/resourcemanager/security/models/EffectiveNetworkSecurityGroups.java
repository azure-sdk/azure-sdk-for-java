// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Describes the Network Security Groups effective on a network interface.
 */
@Fluent
public final class EffectiveNetworkSecurityGroups implements JsonSerializable<EffectiveNetworkSecurityGroups> {
    /*
     * The Azure resource ID of the network interface
     */
    private String networkInterface;

    /*
     * The Network Security Groups effective on the network interface
     */
    private List<String> networkSecurityGroups;

    /**
     * Creates an instance of EffectiveNetworkSecurityGroups class.
     */
    public EffectiveNetworkSecurityGroups() {
    }

    /**
     * Get the networkInterface property: The Azure resource ID of the network interface.
     * 
     * @return the networkInterface value.
     */
    public String networkInterface() {
        return this.networkInterface;
    }

    /**
     * Set the networkInterface property: The Azure resource ID of the network interface.
     * 
     * @param networkInterface the networkInterface value to set.
     * @return the EffectiveNetworkSecurityGroups object itself.
     */
    public EffectiveNetworkSecurityGroups withNetworkInterface(String networkInterface) {
        this.networkInterface = networkInterface;
        return this;
    }

    /**
     * Get the networkSecurityGroups property: The Network Security Groups effective on the network interface.
     * 
     * @return the networkSecurityGroups value.
     */
    public List<String> networkSecurityGroups() {
        return this.networkSecurityGroups;
    }

    /**
     * Set the networkSecurityGroups property: The Network Security Groups effective on the network interface.
     * 
     * @param networkSecurityGroups the networkSecurityGroups value to set.
     * @return the EffectiveNetworkSecurityGroups object itself.
     */
    public EffectiveNetworkSecurityGroups withNetworkSecurityGroups(List<String> networkSecurityGroups) {
        this.networkSecurityGroups = networkSecurityGroups;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("networkInterface", this.networkInterface);
        jsonWriter.writeArrayField("networkSecurityGroups", this.networkSecurityGroups,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EffectiveNetworkSecurityGroups from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of EffectiveNetworkSecurityGroups if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the EffectiveNetworkSecurityGroups.
     */
    public static EffectiveNetworkSecurityGroups fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            EffectiveNetworkSecurityGroups deserializedEffectiveNetworkSecurityGroups
                = new EffectiveNetworkSecurityGroups();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("networkInterface".equals(fieldName)) {
                    deserializedEffectiveNetworkSecurityGroups.networkInterface = reader.getString();
                } else if ("networkSecurityGroups".equals(fieldName)) {
                    List<String> networkSecurityGroups = reader.readArray(reader1 -> reader1.getString());
                    deserializedEffectiveNetworkSecurityGroups.networkSecurityGroups = networkSecurityGroups;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedEffectiveNetworkSecurityGroups;
        });
    }
}

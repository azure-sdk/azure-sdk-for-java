// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.DataScannersClient;
import com.azure.resourcemanager.security.fluent.models.DataScannerInner;
import com.azure.resourcemanager.security.models.DataScanner;
import com.azure.resourcemanager.security.models.DataScanners;

public final class DataScannersImpl implements DataScanners {
    private static final ClientLogger LOGGER = new ClientLogger(DataScannersImpl.class);

    private final DataScannersClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public DataScannersImpl(DataScannersClient innerClient,
        com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DataScanner> list() {
        PagedIterable<DataScannerInner> inner = this.serviceClient().list();
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DataScannerImpl(inner1, this.manager()));
    }

    public PagedIterable<DataScanner> list(Context context) {
        PagedIterable<DataScannerInner> inner = this.serviceClient().list(context);
        return ResourceManagerUtils.mapPage(inner, inner1 -> new DataScannerImpl(inner1, this.manager()));
    }

    public Response<DataScanner> getWithResponse(String dataScannerName, Context context) {
        Response<DataScannerInner> inner = this.serviceClient().getWithResponse(dataScannerName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DataScannerImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DataScanner get(String dataScannerName) {
        DataScannerInner inner = this.serviceClient().get(dataScannerName);
        if (inner != null) {
            return new DataScannerImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DataScanner> createOrUpdateWithResponse(String dataScannerName, Context context) {
        Response<DataScannerInner> inner = this.serviceClient().createOrUpdateWithResponse(dataScannerName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DataScannerImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DataScanner createOrUpdate(String dataScannerName) {
        DataScannerInner inner = this.serviceClient().createOrUpdate(dataScannerName);
        if (inner != null) {
            return new DataScannerImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String dataScannerName, Context context) {
        return this.serviceClient().deleteWithResponse(dataScannerName, context);
    }

    public void delete(String dataScannerName) {
        this.serviceClient().delete(dataScannerName);
    }

    private DataScannersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}

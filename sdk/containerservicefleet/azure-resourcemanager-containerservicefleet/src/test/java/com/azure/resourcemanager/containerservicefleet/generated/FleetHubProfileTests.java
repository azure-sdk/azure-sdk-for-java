// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.models.AgentProfile;
import com.azure.resourcemanager.containerservicefleet.models.ApiServerAccessProfile;
import com.azure.resourcemanager.containerservicefleet.models.FleetHubProfile;
import org.junit.jupiter.api.Assertions;

public final class FleetHubProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetHubProfile model = BinaryData.fromString(
            "{\"dnsPrefix\":\"oginuvamiheognar\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true,\"enableVnetIntegration\":true,\"subnetId\":\"tusivyevcciqihn\"},\"agentProfile\":{\"subnetId\":\"gbwjzrnf\",\"vmSize\":\"xgispemvtzfkufu\"},\"fqdn\":\"jofxqe\",\"kubernetesVersion\":\"jaeq\",\"portalFqdn\":\"qjbasvms\"}")
            .toObject(FleetHubProfile.class);
        Assertions.assertEquals("oginuvamiheognar", model.dnsPrefix());
        Assertions.assertEquals(true, model.apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(true, model.apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("tusivyevcciqihn", model.apiServerAccessProfile().subnetId());
        Assertions.assertEquals("gbwjzrnf", model.agentProfile().subnetId());
        Assertions.assertEquals("xgispemvtzfkufu", model.agentProfile().vmSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FleetHubProfile model = new FleetHubProfile().withDnsPrefix("oginuvamiheognar")
            .withApiServerAccessProfile(new ApiServerAccessProfile().withEnablePrivateCluster(true)
                .withEnableVnetIntegration(true)
                .withSubnetId("tusivyevcciqihn"))
            .withAgentProfile(new AgentProfile().withSubnetId("gbwjzrnf").withVmSize("xgispemvtzfkufu"));
        model = BinaryData.fromObject(model).toObject(FleetHubProfile.class);
        Assertions.assertEquals("oginuvamiheognar", model.dnsPrefix());
        Assertions.assertEquals(true, model.apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(true, model.apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("tusivyevcciqihn", model.apiServerAccessProfile().subnetId());
        Assertions.assertEquals("gbwjzrnf", model.agentProfile().subnetId());
        Assertions.assertEquals("xgispemvtzfkufu", model.agentProfile().vmSize());
    }
}

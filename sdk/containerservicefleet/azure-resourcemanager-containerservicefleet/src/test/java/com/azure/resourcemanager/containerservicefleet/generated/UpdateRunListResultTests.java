// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.implementation.models.UpdateRunListResult;
import com.azure.resourcemanager.containerservicefleet.models.ManagedClusterUpgradeType;
import com.azure.resourcemanager.containerservicefleet.models.NodeImageSelectionType;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"updateStrategyId\":\"xywnytnrsynlqidy\",\"strategy\":{\"stages\":[{\"name\":\"czfc\"},{\"name\":\"haaxdbabphl\"}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"ControlPlaneOnly\",\"kubernetesVersion\":\"lfktsths\"},\"nodeImageSelection\":{\"type\":\"Latest\",\"customNodeImageVersions\":[{},{}]}},\"status\":{\"status\":{\"startTime\":\"2021-07-24T19:44:14Z\",\"completedTime\":\"2021-07-01T18:19:25Z\",\"state\":\"NotStarted\",\"error\":{}},\"stages\":[{},{}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{},{},{},{}]}}},\"eTag\":\"edckzywbiexzfey\",\"id\":\"axibxujw\",\"name\":\"hqwa\",\"type\":\"muzyoxaepdk\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"updateStrategyId\":\"ux\",\"strategy\":{\"stages\":[{\"name\":\"wbavxbniwdj\"}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"ControlPlaneOnly\",\"kubernetesVersion\":\"tsdbpgn\"},\"nodeImageSelection\":{\"type\":\"Consistent\",\"customNodeImageVersions\":[{},{},{}]}},\"status\":{\"status\":{\"startTime\":\"2021-04-28T02:43:47Z\",\"completedTime\":\"2021-03-08T11:52:03Z\",\"state\":\"Completed\",\"error\":{}},\"stages\":[{},{},{},{}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{},{},{},{}]}}},\"eTag\":\"xwtctyqiklbbovpl\",\"id\":\"bhvgy\",\"name\":\"gu\",\"type\":\"svmkfssxquk\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"updateStrategyId\":\"mg\",\"strategy\":{\"stages\":[{\"name\":\"kjz\"},{\"name\":\"deslp\"},{\"name\":\"lopwiyig\"},{\"name\":\"xpkd\"}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"NodeImageOnly\",\"kubernetesVersion\":\"aiuebbaumnyqu\"},\"nodeImageSelection\":{\"type\":\"Latest\",\"customNodeImageVersions\":[{},{},{},{}]}},\"status\":{\"status\":{\"startTime\":\"2021-01-03T07:35:22Z\",\"completedTime\":\"2021-01-27T09:46:32Z\",\"state\":\"Completed\",\"error\":{}},\"stages\":[{},{},{},{}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{}]}}},\"eTag\":\"btfhvpesaps\",\"id\":\"dqmh\",\"name\":\"jdhtldwkyzxu\",\"type\":\"tkncwsc\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"updateStrategyId\":\"otogtwrupqs\",\"strategy\":{\"stages\":[{\"name\":\"micykvceoveilo\"}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"NodeImageOnly\",\"kubernetesVersion\":\"tyfjfcnjbkcnxdhb\"},\"nodeImageSelection\":{\"type\":\"Latest\",\"customNodeImageVersions\":[{}]}},\"status\":{\"status\":{\"startTime\":\"2020-12-23T12:41:55Z\",\"completedTime\":\"2021-11-22T00:13:21Z\",\"state\":\"Completed\",\"error\":{}},\"stages\":[{},{},{},{}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{}]}}},\"eTag\":\"fpl\",\"id\":\"oxuscrpabgyepsbj\",\"name\":\"azqugxywpmueefj\",\"type\":\"wfqkquj\"}],\"nextLink\":\"suyonobglaocq\"}")
            .toObject(UpdateRunListResult.class);
        Assertions.assertEquals("xywnytnrsynlqidy", model.value().get(0).updateStrategyId());
        Assertions.assertEquals("czfc", model.value().get(0).strategy().stages().get(0).name());
        Assertions.assertEquals(ManagedClusterUpgradeType.CONTROL_PLANE_ONLY,
            model.value().get(0).managedClusterUpdate().upgrade().type());
        Assertions.assertEquals("lfktsths", model.value().get(0).managedClusterUpdate().upgrade().kubernetesVersion());
        Assertions.assertEquals(NodeImageSelectionType.LATEST,
            model.value().get(0).managedClusterUpdate().nodeImageSelection().type());
        Assertions.assertEquals("suyonobglaocq", model.nextLink());
    }
}

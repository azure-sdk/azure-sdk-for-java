// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.implementation.models.UpdateRunListResult;
import com.azure.resourcemanager.containerservicefleet.models.ManagedClusterUpgradeType;
import com.azure.resourcemanager.containerservicefleet.models.NodeImageSelectionType;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"updateStrategyId\":\"wbavxbniwdj\",\"strategy\":{\"stages\":[{\"name\":\"tsdbpgn\"}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"NodeImageOnly\",\"kubernetesVersion\":\"x\"},\"nodeImageSelection\":{\"type\":\"Consistent\",\"customNodeImageVersions\":[{},{}]}},\"status\":{\"status\":{\"startTime\":\"2021-01-14T15:07:39Z\",\"completedTime\":\"2021-03-26T15:31:42Z\",\"state\":\"Skipped\",\"error\":{}},\"stages\":[{}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{}]}},\"autoUpgradeProfileId\":\"tyq\"},\"eTag\":\"lbbovplw\",\"id\":\"hvgyuguosvmk\",\"name\":\"ss\",\"type\":\"qukkfp\"}],\"nextLink\":\"mg\"}")
            .toObject(UpdateRunListResult.class);
        Assertions.assertEquals("wbavxbniwdj", model.value().get(0).updateStrategyId());
        Assertions.assertEquals("tsdbpgn", model.value().get(0).strategy().stages().get(0).name());
        Assertions.assertEquals(ManagedClusterUpgradeType.NODE_IMAGE_ONLY,
            model.value().get(0).managedClusterUpdate().upgrade().type());
        Assertions.assertEquals("x", model.value().get(0).managedClusterUpdate().upgrade().kubernetesVersion());
        Assertions.assertEquals(NodeImageSelectionType.CONSISTENT,
            model.value().get(0).managedClusterUpdate().nodeImageSelection().type());
        Assertions.assertEquals("mg", model.nextLink());
    }
}

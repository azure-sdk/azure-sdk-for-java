// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.implementation.models.FleetListResult;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import org.junit.jupiter.api.Assertions;

public final class FleetListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"hubProfile\":{\"dnsPrefix\":\"rtumkdosvq\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true,\"enableVnetIntegration\":true,\"subnetId\":\"bjf\"},\"agentProfile\":{\"subnetId\":\"mbmbexppbh\",\"vmSize\":\"qrolfpf\"},\"fqdn\":\"algbquxigjyjg\",\"kubernetesVersion\":\"aoyfhrtxilnerkuj\",\"portalFqdn\":\"vlejuvfqa\"}},\"eTag\":\"lyxwjkcprbnwbx\",\"identity\":{\"principalId\":\"tbvpysszdnru\",\"tenantId\":\"guhmuouqfpr\",\"type\":\"None\",\"userAssignedIdentities\":{\"zga\":{\"clientId\":\"g\",\"principalId\":\"tnwu\"},\"htymw\":{\"clientId\":\"ufizuckyf\",\"principalId\":\"rfidfvzwdz\"}}},\"location\":\"dkfthwxmnt\",\"tags\":{\"km\":\"aop\",\"mzidnsezcxtb\":\"jcmmxdcufufsrp\",\"dwzjeiach\":\"sgfyccsnew\",\"sfqpteehz\":\"oosflnr\"},\"id\":\"vypyqrimzinpv\",\"name\":\"wjdk\",\"type\":\"rsoodqxhcrmnoh\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"hubProfile\":{\"dnsPrefix\":\"dsoifiyipj\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true,\"enableVnetIntegration\":false,\"subnetId\":\"jbznorc\"},\"agentProfile\":{\"subnetId\":\"snb\",\"vmSize\":\"qabnmoc\"},\"fqdn\":\"ysh\",\"kubernetesVersion\":\"zafb\",\"portalFqdn\":\"j\"}},\"eTag\":\"btoqcjmkljavbqid\",\"identity\":{\"principalId\":\"jzyulpk\",\"tenantId\":\"jkrlkhbzhfepg\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"aierhhb\":{\"clientId\":\"zloc\",\"principalId\":\"c\"}}},\"location\":\"glu\",\"tags\":{\"xo\":\"jtjaodxobnbdxkq\"},\"id\":\"ajionpimexgstxg\",\"name\":\"po\",\"type\":\"gmaajrm\"},{\"properties\":{\"provisioningState\":\"Failed\",\"hubProfile\":{\"dnsPrefix\":\"lovmclwhijcoe\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true,\"enableVnetIntegration\":true,\"subnetId\":\"s\"},\"agentProfile\":{\"subnetId\":\"cbkbfkg\",\"vmSize\":\"dkexxppofm\"},\"fqdn\":\"x\",\"kubernetesVersion\":\"jpgd\",\"portalFqdn\":\"ocjjxhvpmouexh\"}},\"eTag\":\"xibqeojnx\",\"identity\":{\"principalId\":\"vddntwn\",\"tenantId\":\"icbtwnpzao\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"ciwqvhk\":{\"clientId\":\"hcffcyddglmjthjq\",\"principalId\":\"pyeicxm\"},\"w\":{\"clientId\":\"xuigdtopbobj\",\"principalId\":\"hm\"},\"iotkftutqxl\":{\"clientId\":\"m\",\"principalId\":\"hrzayvvtpgvdf\"},\"tthzrvqd\":{\"clientId\":\"xlefgugnxkrx\",\"principalId\":\"mi\"}}},\"location\":\"bhj\",\"tags\":{\"tzlcuiywgqywgn\":\"gehoqfbowskany\",\"cgyncocpecf\":\"rvynhzgpph\"},\"id\":\"m\",\"name\":\"coofsxlzev\",\"type\":\"bmqj\"}],\"nextLink\":\"bcypmi\"}")
            .toObject(FleetListResult.class);
        Assertions.assertEquals("dkfthwxmnt", model.value().get(0).location());
        Assertions.assertEquals("aop", model.value().get(0).tags().get("km"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("rtumkdosvq", model.value().get(0).hubProfile().dnsPrefix());
        Assertions.assertEquals(true,
            model.value().get(0).hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(true,
            model.value().get(0).hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("bjf", model.value().get(0).hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("mbmbexppbh", model.value().get(0).hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("qrolfpf", model.value().get(0).hubProfile().agentProfile().vmSize());
        Assertions.assertEquals("bcypmi", model.nextLink());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.fluent.models.FleetUpdateStrategyInner;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FleetUpdateStrategyInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetUpdateStrategyInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Failed\",\"strategy\":{\"stages\":[{\"name\":\"wpzntxhdzh\",\"groups\":[{\"name\":\"jbhckfrlhr\"}],\"afterStageWaitInSeconds\":1228255689}]}},\"eTag\":\"yvpycanuzbpzk\",\"id\":\"kuwbcrnwb\",\"name\":\"ehhseyvjusrts\",\"type\":\"hspkdeemao\"}")
            .toObject(FleetUpdateStrategyInner.class);
        Assertions.assertEquals("wpzntxhdzh", model.strategy().stages().get(0).name());
        Assertions.assertEquals("jbhckfrlhr", model.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1228255689, model.strategy().stages().get(0).afterStageWaitInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FleetUpdateStrategyInner model = new FleetUpdateStrategyInner()
            .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(new UpdateStage().withName("wpzntxhdzh")
                .withGroups(Arrays.asList(new UpdateGroup().withName("jbhckfrlhr")))
                .withAfterStageWaitInSeconds(1228255689))));
        model = BinaryData.fromObject(model).toObject(FleetUpdateStrategyInner.class);
        Assertions.assertEquals("wpzntxhdzh", model.strategy().stages().get(0).name());
        Assertions.assertEquals("jbhckfrlhr", model.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1228255689, model.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}

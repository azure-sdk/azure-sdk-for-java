// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.models.GateConfiguration;
import com.azure.resourcemanager.containerservicefleet.models.GateType;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateGroupTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateGroup model = BinaryData.fromString(
            "{\"name\":\"dwtiukbldngkp\",\"beforeGates\":[{\"displayName\":\"azyxoegukg\",\"type\":\"Approval\"},{\"displayName\":\"iucgygevqzn\",\"type\":\"Approval\"},{\"displayName\":\"mrbpizcdrqj\",\"type\":\"Approval\"},{\"displayName\":\"ydnfyhxdeoejz\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"sjttgzfbish\",\"type\":\"Approval\"},{\"displayName\":\"hajdeyeamdpha\",\"type\":\"Approval\"},{\"displayName\":\"pbuxwgipwhon\",\"type\":\"Approval\"},{\"displayName\":\"gshwankixz\",\"type\":\"Approval\"}]}")
            .toObject(UpdateGroup.class);
        Assertions.assertEquals("dwtiukbldngkp", model.name());
        Assertions.assertEquals("azyxoegukg", model.beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.beforeGates().get(0).type());
        Assertions.assertEquals("sjttgzfbish", model.afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.afterGates().get(0).type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateGroup model = new UpdateGroup().withName("dwtiukbldngkp")
            .withBeforeGates(
                Arrays.asList(new GateConfiguration().withDisplayName("azyxoegukg").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("iucgygevqzn").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("mrbpizcdrqj").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("ydnfyhxdeoejz").withType(GateType.APPROVAL)))
            .withAfterGates(
                Arrays.asList(new GateConfiguration().withDisplayName("sjttgzfbish").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("hajdeyeamdpha").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("pbuxwgipwhon").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("gshwankixz").withType(GateType.APPROVAL)));
        model = BinaryData.fromObject(model).toObject(UpdateGroup.class);
        Assertions.assertEquals("dwtiukbldngkp", model.name());
        Assertions.assertEquals("azyxoegukg", model.beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.beforeGates().get(0).type());
        Assertions.assertEquals("sjttgzfbish", model.afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.afterGates().get(0).type());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.fluent.models.AutoUpgradeProfileInner;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeNodeImageSelection;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeNodeImageSelectionType;
import com.azure.resourcemanager.containerservicefleet.models.UpgradeChannel;
import org.junit.jupiter.api.Assertions;

public final class AutoUpgradeProfileInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutoUpgradeProfileInner model = BinaryData.fromString(
            "{\"properties\":{\"provisioningState\":\"Canceled\",\"updateStrategyId\":\"txhp\",\"channel\":\"NodeImage\",\"nodeImageSelection\":{\"type\":\"Consistent\"},\"disabled\":false},\"eTag\":\"abgl\",\"id\":\"hxw\",\"name\":\"ctyqik\",\"type\":\"bbovplwzbhvgyugu\"}")
            .toObject(AutoUpgradeProfileInner.class);
        Assertions.assertEquals("txhp", model.updateStrategyId());
        Assertions.assertEquals(UpgradeChannel.NODE_IMAGE, model.channel());
        Assertions.assertEquals(AutoUpgradeNodeImageSelectionType.CONSISTENT, model.nodeImageSelection().type());
        Assertions.assertEquals(false, model.disabled());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        AutoUpgradeProfileInner model = new AutoUpgradeProfileInner().withUpdateStrategyId("txhp")
            .withChannel(UpgradeChannel.NODE_IMAGE)
            .withNodeImageSelection(
                new AutoUpgradeNodeImageSelection().withType(AutoUpgradeNodeImageSelectionType.CONSISTENT))
            .withDisabled(false);
        model = BinaryData.fromObject(model).toObject(AutoUpgradeProfileInner.class);
        Assertions.assertEquals("txhp", model.updateStrategyId());
        Assertions.assertEquals(UpgradeChannel.NODE_IMAGE, model.channel());
        Assertions.assertEquals(AutoUpgradeNodeImageSelectionType.CONSISTENT, model.nodeImageSelection().type());
        Assertions.assertEquals(false, model.disabled());
    }
}

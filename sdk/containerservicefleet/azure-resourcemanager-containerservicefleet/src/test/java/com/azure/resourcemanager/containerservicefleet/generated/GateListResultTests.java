// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.implementation.models.GateListResult;
import com.azure.resourcemanager.containerservicefleet.models.GateState;
import com.azure.resourcemanager.containerservicefleet.models.GateType;
import com.azure.resourcemanager.containerservicefleet.models.Timing;
import org.junit.jupiter.api.Assertions;

public final class GateListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GateListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"displayName\":\"mngnzscxaqw\",\"gateType\":\"Approval\",\"target\":{\"updateRunProperties\":{\"name\":\"hcbonqvpkvlr\",\"stage\":\"jease\",\"group\":\"heoflokeyyienjbd\",\"timing\":\"After\"}},\"state\":\"Skipped\"},\"eTag\":\"rhpdjpjumas\",\"location\":\"zj\",\"tags\":{\"ualhbxxhejj\":\"e\"},\"id\":\"zvdudgwdslfhotwm\",\"name\":\"ynpwlbj\",\"type\":\"pgacftadehxnlty\"},{\"properties\":{\"provisioningState\":\"Canceled\",\"displayName\":\"usue\",\"gateType\":\"Approval\",\"target\":{\"updateRunProperties\":{\"name\":\"wd\",\"stage\":\"bavo\",\"group\":\"zdmohctbqvu\",\"timing\":\"After\"}},\"state\":\"Pending\"},\"eTag\":\"ndnvo\",\"location\":\"ujjugwdkcglh\",\"tags\":{\"yggdtjixh\":\"zj\",\"evfyexfwhybcib\":\"kuofqweykhme\"},\"id\":\"yvdcsitynnaa\",\"name\":\"dectehfiqsc\",\"type\":\"eypvhezrkg\"}],\"nextLink\":\"c\"}")
            .toObject(GateListResult.class);
        Assertions.assertEquals("zj", model.value().get(0).location());
        Assertions.assertEquals("e", model.value().get(0).tags().get("ualhbxxhejj"));
        Assertions.assertEquals("mngnzscxaqw", model.value().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.value().get(0).gateType());
        Assertions.assertEquals(Timing.AFTER, model.value().get(0).target().updateRunProperties().timing());
        Assertions.assertEquals(GateState.SKIPPED, model.value().get(0).state());
        Assertions.assertEquals("c", model.nextLink());
    }
}

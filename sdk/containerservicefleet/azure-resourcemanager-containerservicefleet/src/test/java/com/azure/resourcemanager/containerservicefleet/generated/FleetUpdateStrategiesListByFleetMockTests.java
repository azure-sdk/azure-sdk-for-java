// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.FleetUpdateStrategy;
import com.azure.resourcemanager.containerservicefleet.models.GateType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetUpdateStrategiesListByFleetMockTests {
    @Test
    public void testListByFleet() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"strategy\":{\"stages\":[{\"name\":\"zszrnwoiindfpw\",\"groups\":[{\"name\":\"lwbtlhf\"},{\"name\":\"sj\"},{\"name\":\"dhszfjv\"},{\"name\":\"bgofeljag\"}],\"afterStageWaitInSeconds\":128121457,\"beforeGates\":[{\"type\":\"Approval\"},{\"type\":\"Approval\"}],\"afterGates\":[{\"type\":\"Approval\"},{\"type\":\"Approval\"},{\"type\":\"Approval\"},{\"type\":\"Approval\"}]},{\"name\":\"jnalghf\",\"groups\":[{\"name\":\"vsexsowuelu\"},{\"name\":\"hhahhxvrhmzkwpjg\"},{\"name\":\"wspughftqsxhqx\"}],\"afterStageWaitInSeconds\":318834407,\"beforeGates\":[{\"type\":\"Approval\"},{\"type\":\"Approval\"},{\"type\":\"Approval\"}],\"afterGates\":[{\"type\":\"Approval\"},{\"type\":\"Approval\"},{\"type\":\"Approval\"}]},{\"name\":\"guufzd\",\"groups\":[{\"name\":\"qtfihwhbotzinga\"},{\"name\":\"vppho\"}],\"afterStageWaitInSeconds\":1799279870,\"beforeGates\":[{\"type\":\"Approval\"},{\"type\":\"Approval\"},{\"type\":\"Approval\"},{\"type\":\"Approval\"}],\"afterGates\":[{\"type\":\"Approval\"}]},{\"name\":\"dkfw\",\"groups\":[{\"name\":\"cvtbv\"},{\"name\":\"ayhmtnvyqiatkz\"},{\"name\":\"pcnp\"},{\"name\":\"zcjaesgvvsccy\"}],\"afterStageWaitInSeconds\":248286602,\"beforeGates\":[{\"type\":\"Approval\"},{\"type\":\"Approval\"}],\"afterGates\":[{\"type\":\"Approval\"}]}]}},\"eTag\":\"lvdnkfx\",\"id\":\"emdwzrmuhapfc\",\"name\":\"dpsqx\",\"type\":\"vpsvuoymgcce\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<FleetUpdateStrategy> response
            = manager.fleetUpdateStrategies().listByFleet("rjqc", "rgz", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("zszrnwoiindfpw", response.iterator().next().strategy().stages().get(0).name());
        Assertions.assertEquals("lwbtlhf",
            response.iterator().next().strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(128121457,
            response.iterator().next().strategy().stages().get(0).afterStageWaitInSeconds());
        Assertions.assertEquals(GateType.APPROVAL,
            response.iterator().next().strategy().stages().get(0).beforeGates().get(0).type());
        Assertions.assertEquals(GateType.APPROVAL,
            response.iterator().next().strategy().stages().get(0).afterGates().get(0).type());
    }
}

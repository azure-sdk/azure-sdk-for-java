// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.models.GateConfiguration;
import com.azure.resourcemanager.containerservicefleet.models.GateType;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateStageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateStage model = BinaryData.fromString(
            "{\"name\":\"bkyvp\",\"groups\":[{\"name\":\"n\",\"beforeGates\":[{\"displayName\":\"zka\",\"type\":\"Approval\"},{\"displayName\":\"wbcrnwbmehhseyv\",\"type\":\"Approval\"},{\"displayName\":\"rts\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"deemao\",\"type\":\"Approval\"},{\"displayName\":\"ag\",\"type\":\"Approval\"},{\"displayName\":\"melmqkrha\",\"type\":\"Approval\"},{\"displayName\":\"juahaquhcdhmdual\",\"type\":\"Approval\"}]},{\"name\":\"xqpvfadmw\",\"beforeGates\":[{\"displayName\":\"gvxp\",\"type\":\"Approval\"},{\"displayName\":\"mzlfmisgwb\",\"type\":\"Approval\"},{\"displayName\":\"e\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"zbaliourqha\",\"type\":\"Approval\"}]},{\"name\":\"uhashsfwx\",\"beforeGates\":[{\"displayName\":\"z\",\"type\":\"Approval\"},{\"displayName\":\"gicjooxdjeb\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"wfvovbv\",\"type\":\"Approval\"},{\"displayName\":\"ecivyh\",\"type\":\"Approval\"},{\"displayName\":\"uojgj\",\"type\":\"Approval\"}]},{\"name\":\"jueiotwmcdytd\",\"beforeGates\":[{\"displayName\":\"xnrj\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"gxhnisk\",\"type\":\"Approval\"},{\"displayName\":\"kpycgklwndnhjd\",\"type\":\"Approval\"},{\"displayName\":\"hvylwzbt\",\"type\":\"Approval\"}]}],\"afterStageWaitInSeconds\":1131914831,\"beforeGates\":[{\"displayName\":\"bm\",\"type\":\"Approval\"},{\"displayName\":\"uwprzql\",\"type\":\"Approval\"},{\"displayName\":\"alupjm\",\"type\":\"Approval\"},{\"displayName\":\"xobbcswsrt\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"rbpbewtghfgblcg\",\"type\":\"Approval\"},{\"displayName\":\"vlvqhjkbegi\",\"type\":\"Approval\"},{\"displayName\":\"mxiebw\",\"type\":\"Approval\"}]}")
            .toObject(UpdateStage.class);
        Assertions.assertEquals("bkyvp", model.name());
        Assertions.assertEquals("n", model.groups().get(0).name());
        Assertions.assertEquals("zka", model.groups().get(0).beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).beforeGates().get(0).type());
        Assertions.assertEquals("deemao", model.groups().get(0).afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).afterGates().get(0).type());
        Assertions.assertEquals(1131914831, model.afterStageWaitInSeconds());
        Assertions.assertEquals("bm", model.beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.beforeGates().get(0).type());
        Assertions.assertEquals("rbpbewtghfgblcg", model.afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.afterGates().get(0).type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateStage model
            = new UpdateStage().withName("bkyvp")
                .withGroups(
                    Arrays
                        .asList(
                            new UpdateGroup().withName("n")
                                .withBeforeGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("zka").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("wbcrnwbmehhseyv")
                                        .withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("rts").withType(GateType.APPROVAL)))
                                .withAfterGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("deemao").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("ag").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("melmqkrha").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("juahaquhcdhmdual")
                                        .withType(GateType.APPROVAL))),
                            new UpdateGroup().withName("xqpvfadmw")
                                .withBeforeGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("gvxp").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("mzlfmisgwb").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("e").withType(GateType.APPROVAL)))
                                .withAfterGates(Arrays.asList(new GateConfiguration().withDisplayName("zbaliourqha")
                                    .withType(GateType.APPROVAL))),
                            new UpdateGroup().withName("uhashsfwx")
                                .withBeforeGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("z").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("gicjooxdjeb").withType(GateType.APPROVAL)))
                                .withAfterGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("wfvovbv").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("ecivyh").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("uojgj").withType(GateType.APPROVAL))),
                            new UpdateGroup().withName("jueiotwmcdytd")
                                .withBeforeGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("xnrj").withType(GateType.APPROVAL)))
                                .withAfterGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("gxhnisk").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("kpycgklwndnhjd")
                                        .withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("hvylwzbt").withType(GateType.APPROVAL)))))
                .withAfterStageWaitInSeconds(1131914831)
                .withBeforeGates(
                    Arrays.asList(new GateConfiguration().withDisplayName("bm").withType(GateType.APPROVAL),
                        new GateConfiguration().withDisplayName("uwprzql").withType(GateType.APPROVAL),
                        new GateConfiguration().withDisplayName("alupjm").withType(GateType.APPROVAL),
                        new GateConfiguration().withDisplayName("xobbcswsrt").withType(GateType.APPROVAL)))
                .withAfterGates(Arrays.asList(
                    new GateConfiguration().withDisplayName("rbpbewtghfgblcg").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("vlvqhjkbegi").withType(GateType.APPROVAL),
                    new GateConfiguration().withDisplayName("mxiebw").withType(GateType.APPROVAL)));
        model = BinaryData.fromObject(model).toObject(UpdateStage.class);
        Assertions.assertEquals("bkyvp", model.name());
        Assertions.assertEquals("n", model.groups().get(0).name());
        Assertions.assertEquals("zka", model.groups().get(0).beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).beforeGates().get(0).type());
        Assertions.assertEquals("deemao", model.groups().get(0).afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).afterGates().get(0).type());
        Assertions.assertEquals(1131914831, model.afterStageWaitInSeconds());
        Assertions.assertEquals("bm", model.beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.beforeGates().get(0).type());
        Assertions.assertEquals("rbpbewtghfgblcg", model.afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.afterGates().get(0).type());
    }
}

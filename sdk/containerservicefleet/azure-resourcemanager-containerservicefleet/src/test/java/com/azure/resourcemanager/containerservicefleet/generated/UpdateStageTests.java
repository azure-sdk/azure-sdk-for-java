// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.models.GateConfiguration;
import com.azure.resourcemanager.containerservicefleet.models.GateType;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class UpdateStageTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateStage model = BinaryData.fromString(
            "{\"name\":\"qzbqjvsov\",\"groups\":[{\"name\":\"kacspkw\",\"beforeGates\":[{\"displayName\":\"obpxjmflbvvn\",\"type\":\"Approval\"},{\"displayName\":\"kcciwwzjuqkhr\",\"type\":\"Approval\"},{\"displayName\":\"iwkuofos\",\"type\":\"Approval\"},{\"displayName\":\"sauuimj\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"duugidyjr\",\"type\":\"Approval\"}]},{\"name\":\"byao\",\"beforeGates\":[{\"displayName\":\"csonpclhoco\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"vleggzfbuhfmvfax\",\"type\":\"Approval\"},{\"displayName\":\"eiithlvmez\",\"type\":\"Approval\"}]}],\"afterStageWaitInSeconds\":1090911341,\"beforeGates\":[{\"displayName\":\"sbbzo\",\"type\":\"Approval\"}],\"afterGates\":[{\"displayName\":\"xwburvjxxjns\",\"type\":\"Approval\"},{\"displayName\":\"ptkoenkoukn\",\"type\":\"Approval\"}]}")
            .toObject(UpdateStage.class);
        Assertions.assertEquals("qzbqjvsov", model.name());
        Assertions.assertEquals("kacspkw", model.groups().get(0).name());
        Assertions.assertEquals("obpxjmflbvvn", model.groups().get(0).beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).beforeGates().get(0).type());
        Assertions.assertEquals("duugidyjr", model.groups().get(0).afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).afterGates().get(0).type());
        Assertions.assertEquals(1090911341, model.afterStageWaitInSeconds());
        Assertions.assertEquals("sbbzo", model.beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.beforeGates().get(0).type());
        Assertions.assertEquals("xwburvjxxjns", model.afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.afterGates().get(0).type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        UpdateStage model
            = new UpdateStage().withName("qzbqjvsov")
                .withGroups(
                    Arrays
                        .asList(
                            new UpdateGroup().withName("kacspkw")
                                .withBeforeGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("obpxjmflbvvn").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("kcciwwzjuqkhr")
                                        .withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("iwkuofos").withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("sauuimj").withType(GateType.APPROVAL)))
                                .withAfterGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("duugidyjr").withType(GateType.APPROVAL))),
                            new UpdateGroup().withName("byao")
                                .withBeforeGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("csonpclhoco").withType(GateType.APPROVAL)))
                                .withAfterGates(Arrays.asList(
                                    new GateConfiguration().withDisplayName("vleggzfbuhfmvfax")
                                        .withType(GateType.APPROVAL),
                                    new GateConfiguration().withDisplayName("eiithlvmez")
                                        .withType(GateType.APPROVAL)))))
                .withAfterStageWaitInSeconds(1090911341)
                .withBeforeGates(
                    Arrays.asList(new GateConfiguration().withDisplayName("sbbzo").withType(GateType.APPROVAL)))
                .withAfterGates(
                    Arrays.asList(new GateConfiguration().withDisplayName("xwburvjxxjns").withType(GateType.APPROVAL),
                        new GateConfiguration().withDisplayName("ptkoenkoukn").withType(GateType.APPROVAL)));
        model = BinaryData.fromObject(model).toObject(UpdateStage.class);
        Assertions.assertEquals("qzbqjvsov", model.name());
        Assertions.assertEquals("kacspkw", model.groups().get(0).name());
        Assertions.assertEquals("obpxjmflbvvn", model.groups().get(0).beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).beforeGates().get(0).type());
        Assertions.assertEquals("duugidyjr", model.groups().get(0).afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.groups().get(0).afterGates().get(0).type());
        Assertions.assertEquals(1090911341, model.afterStageWaitInSeconds());
        Assertions.assertEquals("sbbzo", model.beforeGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.beforeGates().get(0).type());
        Assertions.assertEquals("xwburvjxxjns", model.afterGates().get(0).displayName());
        Assertions.assertEquals(GateType.APPROVAL, model.afterGates().get(0).type());
    }
}

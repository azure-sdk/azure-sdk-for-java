// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.FleetUpdateStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetUpdateStrategiesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"strategy\":{\"stages\":[{\"name\":\"ovvqfovljxywsu\",\"groups\":[{\"name\":\"rsndsytgadgvra\"}],\"afterStageWaitInSeconds\":350666785},{\"name\":\"neqn\",\"groups\":[{\"name\":\"rwlqu\"},{\"name\":\"ijfqkacewiipfp\"},{\"name\":\"bjibwwiftohq\"},{\"name\":\"vpuvks\"}],\"afterStageWaitInSeconds\":710710602},{\"name\":\"saknynfsyn\",\"groups\":[{\"name\":\"huopxodlqiynto\"}],\"afterStageWaitInSeconds\":1419616379}]}},\"eTag\":\"leosjswsrms\",\"id\":\"zrpzb\",\"name\":\"hckqqzqioxiy\",\"type\":\"uiizynke\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetUpdateStrategy response = manager.fleetUpdateStrategies()
            .define("xsdqrhzoymibmrqy")
            .withExistingFleet("dckcbc", "ejrjxgciqibrho")
            .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(
                new UpdateStage().withName("fluszdtm")
                    .withGroups(Arrays.asList(new UpdateGroup().withName("wofyyvoqacpiexp"),
                        new UpdateGroup().withName("tg"), new UpdateGroup().withName("wbwo")))
                    .withAfterStageWaitInSeconds(1119495390),
                new UpdateStage().withName("ashrt")
                    .withGroups(Arrays.asList(new UpdateGroup().withName("cnqxwbpokulpi"),
                        new UpdateGroup().withName("jwaa"), new UpdateGroup().withName("ipqiiobyuqerpq")))
                    .withAfterStageWaitInSeconds(2131221175))))
            .withIfMatch("h")
            .withIfNoneMatch("pkkpw")
            .create();

        Assertions.assertEquals("ovvqfovljxywsu", response.strategy().stages().get(0).name());
        Assertions.assertEquals("rsndsytgadgvra", response.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(350666785, response.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}

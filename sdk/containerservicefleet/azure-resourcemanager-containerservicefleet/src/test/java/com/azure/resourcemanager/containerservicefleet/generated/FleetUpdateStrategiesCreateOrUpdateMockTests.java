// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.FleetUpdateStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetUpdateStrategiesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"strategy\":{\"stages\":[{\"name\":\"htmdvy\",\"groups\":[{\"name\":\"kdgszywkbirr\"},{\"name\":\"uzhlhkjoqrv\"},{\"name\":\"qaatjinrv\"}],\"afterStageWaitInSeconds\":162856777},{\"name\":\"pmfi\",\"groups\":[{\"name\":\"ggjioolvr\"},{\"name\":\"x\"},{\"name\":\"v\"}],\"afterStageWaitInSeconds\":46928565},{\"name\":\"gllqwjy\",\"groups\":[{\"name\":\"ayvblmhvkzuhbx\"},{\"name\":\"vyhgs\"},{\"name\":\"pbyrqufegxu\"}],\"afterStageWaitInSeconds\":950135360}]}},\"eTag\":\"bnhlmc\",\"id\":\"p\",\"name\":\"ngitvgbmhrixkwm\",\"type\":\"ijejvegrhbpn\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetUpdateStrategy response
            = manager.fleetUpdateStrategies()
                .define("dphqamv")
                .withExistingFleet("gamv", "phoszqz")
                .withStrategy(
                    new UpdateRunStrategy().withStages(Arrays.asList(
                        new UpdateStage().withName("nwcvtbvkayhmtnv")
                            .withGroups(Arrays.asList(new UpdateGroup().withName("atkzwpcnpw"),
                                new UpdateGroup().withName("cjaesgvvs"), new UpdateGroup().withName("cyajguqf")))
                            .withAfterStageWaitInSeconds(589135345),
                        new UpdateStage().withName("gzlvdnkfxu")
                            .withGroups(Arrays.asList(new UpdateGroup().withName("dwzrmuh"),
                                new UpdateGroup().withName("pfcqdp"), new UpdateGroup().withName("qxqvpsvuoymgc"),
                                new UpdateGroup().withName("elvezrypq")))
                            .withAfterStageWaitInSeconds(643673289))))
                .withIfMatch("htjsying")
                .withIfNoneMatch("fq")
                .create();

        Assertions.assertEquals("htmdvy", response.strategy().stages().get(0).name());
        Assertions.assertEquals("kdgszywkbirr", response.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(162856777, response.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.FleetUpdateStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetUpdateStrategiesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"strategy\":{\"stages\":[{\"name\":\"hgw\",\"groups\":[{\"name\":\"nedgfbc\"},{\"name\":\"kcvqvpke\"}],\"afterStageWaitInSeconds\":914097739},{\"name\":\"vdrhvoo\",\"groups\":[{\"name\":\"tbobz\"},{\"name\":\"opcjwvnhd\"},{\"name\":\"d\"}],\"afterStageWaitInSeconds\":481946424},{\"name\":\"xcxrsl\",\"groups\":[{\"name\":\"twuoegrpkhjwni\"}],\"afterStageWaitInSeconds\":1045229648},{\"name\":\"luicpdggkzzlvmbm\",\"groups\":[{\"name\":\"modfvuefywsbpfvm\"},{\"name\":\"yhrfouyftaakcpw\"}],\"afterStageWaitInSeconds\":1040923285}]}},\"eTag\":\"qtmnubexkpzk\",\"id\":\"ondjmq\",\"name\":\"xvy\",\"type\":\"omgkopkwho\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetUpdateStrategy response
            = manager.fleetUpdateStrategies()
                .define("mnzb")
                .withExistingFleet("rp", "xe")
                .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(
                    new UpdateStage().withName("glkfg")
                        .withGroups(Arrays.asList(new UpdateGroup().withName("neuelfphsdyhtoz")))
                        .withAfterStageWaitInSeconds(369872117),
                    new UpdateStage().withName("dowwquuvxzxclvit")
                        .withGroups(Arrays.asList(new UpdateGroup().withName("zonosgg"),
                            new UpdateGroup().withName("hcohfwdsjnk"), new UpdateGroup().withName("ljuti"),
                            new UpdateGroup().withName("swacffgdkzz")))
                        .withAfterStageWaitInSeconds(1258640156))))
                .withIfMatch("lxyjr")
                .withIfNoneMatch("sag")
                .create();

        Assertions.assertEquals("hgw", response.strategy().stages().get(0).name());
        Assertions.assertEquals("nedgfbc", response.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(914097739, response.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}

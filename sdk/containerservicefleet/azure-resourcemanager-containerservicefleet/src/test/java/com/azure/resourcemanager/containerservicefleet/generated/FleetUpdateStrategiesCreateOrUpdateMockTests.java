// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.FleetUpdateStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetUpdateStrategiesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"strategy\":{\"stages\":[{\"name\":\"oulpjrv\",\"groups\":[{\"name\":\"l\"},{\"name\":\"vimjwos\"},{\"name\":\"tx\"},{\"name\":\"tcs\"}],\"afterStageWaitInSeconds\":1365275067},{\"name\":\"k\",\"groups\":[{\"name\":\"miekkezzikhlyfjh\"},{\"name\":\"gqggebdunygae\"},{\"name\":\"idb\"}],\"afterStageWaitInSeconds\":1233334035}]}},\"eTag\":\"pxllrx\",\"id\":\"jmoadsuv\",\"name\":\"r\",\"type\":\"ywdmjsjqbjh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetUpdateStrategy response = manager.fleetUpdateStrategies()
            .define("melwuipiccjz")
            .withExistingFleet("gxk", "lla")
            .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(
                new UpdateStage().withName("vvcnayr")
                    .withGroups(Arrays.asList(new UpdateGroup().withName("nxxmueedndrdv"),
                        new UpdateGroup().withName("tkwqqtchealm"), new UpdateGroup().withName("mtdaa")))
                    .withAfterStageWaitInSeconds(2035762000),
                new UpdateStage().withName("v")
                    .withGroups(Arrays.asList(new UpdateGroup().withName("piohgwxrtfu"),
                        new UpdateGroup().withName("xepxgyqagvrvmn"), new UpdateGroup().withName("k"),
                        new UpdateGroup().withName("kghimdblxgwimfnj")))
                    .withAfterStageWaitInSeconds(44093722),
                new UpdateStage().withName("xw")
                    .withGroups(Arrays.asList(new UpdateGroup().withName("kkfoqr")))
                    .withAfterStageWaitInSeconds(1631223460))))
            .withIfMatch("abfatkl")
            .withIfNoneMatch("dxbjhwuaanozj")
            .create();

        Assertions.assertEquals("oulpjrv", response.strategy().stages().get(0).name());
        Assertions.assertEquals("l", response.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1365275067, response.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}

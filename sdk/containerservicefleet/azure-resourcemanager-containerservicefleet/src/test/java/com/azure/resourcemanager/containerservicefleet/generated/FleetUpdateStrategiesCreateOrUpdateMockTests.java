// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.FleetUpdateStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetUpdateStrategiesCreateOrUpdateMockTests {
    @Test
    public void testCreateOrUpdate() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"strategy\":{\"stages\":[{\"name\":\"mmsbvdkcrodtjin\",\"groups\":[{\"name\":\"lfltka\"},{\"name\":\"jvefkdlfoakggkfp\"},{\"name\":\"gaowpulpqblylsyx\"},{\"name\":\"qjnsjervtia\"}],\"afterStageWaitInSeconds\":1353667842},{\"name\":\"dszue\",\"groups\":[{\"name\":\"bzkfzbeyvpn\"},{\"name\":\"icvi\"}],\"afterStageWaitInSeconds\":756169638},{\"name\":\"jjxd\",\"groups\":[{\"name\":\"uukzclewyhmlw\"},{\"name\":\"aztz\"},{\"name\":\"ofncckwyfzqwhxxb\"},{\"name\":\"yq\"}],\"afterStageWaitInSeconds\":437954475}]}},\"eTag\":\"eqz\",\"id\":\"priolx\",\"name\":\"rjaltolmncw\",\"type\":\"obqwcsdbnwdcfh\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        FleetUpdateStrategy response
            = manager.fleetUpdateStrategies()
                .define("exn")
                .withExistingFleet("yxbaaabjyvayf", "imrzrtuzqog")
                .withStrategy(
                    new UpdateRunStrategy().withStages(Arrays.asList(
                        new UpdateStage().withName("wnwmewzs")
                            .withGroups(Arrays.asList(
                                new UpdateGroup().withName("euzsoi"), new UpdateGroup().withName("judpfrxt"),
                                new UpdateGroup().withName("thzvaytdwkqbrqu"), new UpdateGroup().withName("paxh")))
                            .withAfterStageWaitInSeconds(1580176854),
                        new UpdateStage().withName("i")
                            .withGroups(
                                Arrays.asList(new UpdateGroup().withName("pdtii"), new UpdateGroup().withName("q"),
                                    new UpdateGroup().withName("d"), new UpdateGroup().withName("oaxoruzfgsqu")))
                            .withAfterStageWaitInSeconds(1674082550))))
                .withIfMatch("oo")
                .withIfNoneMatch("bw")
                .create();

        Assertions.assertEquals("mmsbvdkcrodtjin", response.strategy().stages().get(0).name());
        Assertions.assertEquals("lfltka", response.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1353667842, response.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}

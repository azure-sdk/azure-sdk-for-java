// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.implementation.models.AutoUpgradeProfileListResult;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeNodeImageSelectionType;
import com.azure.resourcemanager.containerservicefleet.models.UpgradeChannel;
import org.junit.jupiter.api.Assertions;

public final class AutoUpgradeProfileListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        AutoUpgradeProfileListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"updateStrategyId\":\"btdzumveekg\",\"channel\":\"Stable\",\"nodeImageSelection\":{\"type\":\"Consistent\"},\"disabled\":false},\"eTag\":\"fpbsjyofdxl\",\"id\":\"sd\",\"name\":\"touwaboekqv\",\"type\":\"elnsmvbxw\"},{\"properties\":{\"provisioningState\":\"Succeeded\",\"updateStrategyId\":\"hhcaal\",\"channel\":\"Stable\",\"nodeImageSelection\":{\"type\":\"Consistent\"},\"disabled\":true},\"eTag\":\"yaw\",\"id\":\"yaqcslyjpkiidz\",\"name\":\"exznelixhnr\",\"type\":\"tfolhbnx\"},{\"properties\":{\"provisioningState\":\"Failed\",\"updateStrategyId\":\"ulppggdtpnapnyir\",\"channel\":\"Stable\",\"nodeImageSelection\":{\"type\":\"Latest\"},\"disabled\":false},\"eTag\":\"vpgylgqgitxmed\",\"id\":\"c\",\"name\":\"lynqwwncwzzh\",\"type\":\"gktrmgucnapkte\"},{\"properties\":{\"provisioningState\":\"Failed\",\"updateStrategyId\":\"pt\",\"channel\":\"NodeImage\",\"nodeImageSelection\":{\"type\":\"Consistent\"},\"disabled\":true},\"eTag\":\"b\",\"id\":\"ceopzfqrhhuaopp\",\"name\":\"cq\",\"type\":\"qxolzdahzx\"}],\"nextLink\":\"obgbkdmoizp\"}")
            .toObject(AutoUpgradeProfileListResult.class);
        Assertions.assertEquals("btdzumveekg", model.value().get(0).updateStrategyId());
        Assertions.assertEquals(UpgradeChannel.STABLE, model.value().get(0).channel());
        Assertions.assertEquals(AutoUpgradeNodeImageSelectionType.CONSISTENT,
            model.value().get(0).nodeImageSelection().type());
        Assertions.assertEquals(false, model.value().get(0).disabled());
        Assertions.assertEquals("obgbkdmoizp", model.nextLink());
    }
}

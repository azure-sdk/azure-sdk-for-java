// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Creating\",\"hubProfile\":{\"dnsPrefix\":\"obl\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":false,\"enableVnetIntegration\":false,\"subnetId\":\"ewwwfbkrvrnsv\"},\"agentProfile\":{\"subnetId\":\"johxcrsb\",\"vmSize\":\"vasrruvwb\"},\"fqdn\":\"qfsubcgjbirx\",\"kubernetesVersion\":\"ybsrfbjfdtwss\",\"portalFqdn\":\"ftpvjzbexil\"}},\"eTag\":\"nfqqnvwp\",\"identity\":{\"principalId\":\"aruoujmkcjhwqyt\",\"tenantId\":\"ybn\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"thnzd\":{\"clientId\":\"drjervnaenqpehin\",\"principalId\":\"ygmi\"},\"qlkth\":{\"clientId\":\"sl\",\"principalId\":\"ayqigynduhav\"},\"vaolpsslqlf\":{\"clientId\":\"aqolbgycduiertg\",\"principalId\":\"y\"},\"bzmnvdfznud\":{\"clientId\":\"dnbbglzps\",\"principalId\":\"ydmcwyhzdxssa\"}}},\"location\":\"dvxzbncblylpst\",\"tags\":{\"ntnev\":\"hxsrzdzucersc\"},\"id\":\"iwjmygtdssls\",\"name\":\"tmweriofzpyq\",\"type\":\"emwabnet\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Fleet response = manager.fleets()
            .getByResourceGroupWithResponse("xv", "vxysl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("dvxzbncblylpst", response.location());
        Assertions.assertEquals("hxsrzdzucersc", response.tags().get("ntnev"));
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("obl", response.hubProfile().dnsPrefix());
        Assertions.assertEquals(false, response.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(false, response.hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("ewwwfbkrvrnsv", response.hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("johxcrsb", response.hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("vasrruvwb", response.hubProfile().agentProfile().vmSize());
    }
}

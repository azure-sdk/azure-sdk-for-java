// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"hubProfile\":{\"dnsPrefix\":\"lp\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true,\"enableVnetIntegration\":true,\"subnetId\":\"apnyiropuhpig\"},\"agentProfile\":{\"subnetId\":\"ylgqgitxmedjvcsl\",\"vmSize\":\"qwwncw\"},\"fqdn\":\"hxg\",\"kubernetesVersion\":\"rmgucnap\",\"portalFqdn\":\"eoellwptfdygp\"}},\"eTag\":\"b\",\"identity\":{\"principalId\":\"eopzfqrhhuaopp\",\"tenantId\":\"qeqxo\",\"type\":\"None\",\"userAssignedIdentities\":{\"mgrcfbu\":{\"clientId\":\"zxctobgb\",\"principalId\":\"moizpos\"},\"swbxqz\":{\"clientId\":\"mfqjhhkxbp\",\"principalId\":\"ymjhxxjyngudivkr\"},\"ivetvtcq\":{\"clientId\":\"zjf\",\"principalId\":\"vjfdx\"}}},\"location\":\"tdo\",\"tags\":{\"yslqbhsfx\":\"bxvwv\",\"lmpewwwfbkr\":\"blytk\",\"vshqjohxcr\":\"rn\",\"sub\":\"bfovasrruvwbhsq\"},\"id\":\"gjb\",\"name\":\"rxbpyb\",\"type\":\"rfbjf\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Fleet response = manager.fleets()
            .getByResourceGroupWithResponse("idzyexznelixhnr", "tfolhbnx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("tdo", response.location());
        Assertions.assertEquals("bxvwv", response.tags().get("yslqbhsfx"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
        Assertions.assertEquals("lp", response.hubProfile().dnsPrefix());
        Assertions.assertEquals(true, response.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(true, response.hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("apnyiropuhpig", response.hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("ylgqgitxmedjvcsl", response.hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("qwwncw", response.hubProfile().agentProfile().vmSize());
    }
}

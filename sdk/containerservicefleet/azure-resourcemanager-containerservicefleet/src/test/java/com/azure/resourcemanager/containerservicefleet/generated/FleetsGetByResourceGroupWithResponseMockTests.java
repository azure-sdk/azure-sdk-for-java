// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Canceled\",\"hubProfile\":{\"dnsPrefix\":\"lvqhjkbegibtnmx\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true,\"enableVnetIntegration\":true,\"subnetId\":\"oayqc\"},\"agentProfile\":{\"subnetId\":\"tzjuzgwyzmhtxo\",\"vmSize\":\"mtsavjcbpwxqp\"},\"fqdn\":\"knftguvriuh\",\"kubernetesVersion\":\"wmdyvxqtay\",\"portalFqdn\":\"ww\"}},\"eTag\":\"yqbexrmcqibycno\",\"identity\":{\"principalId\":\"nmefqsgzvahapj\",\"tenantId\":\"hpvgqz\",\"type\":\"None\",\"userAssignedIdentities\":{\"hzovawjvzunlut\":{\"clientId\":\"djzlmwlx\",\"principalId\":\"ug\"},\"jzuaejxdultskzbb\":{\"clientId\":\"n\",\"principalId\":\"nxipeil\"},\"yofd\":{\"clientId\":\"zumveekgpwo\",\"principalId\":\"hkfpbs\"},\"mvb\":{\"clientId\":\"uusdttouwa\",\"principalId\":\"ekqvkeln\"}}},\"location\":\"yjsflhhcaalnji\",\"tags\":{\"yaqcslyjpkiidz\":\"xyawj\",\"tfolhbnx\":\"exznelixhnr\",\"dtpnapnyiropuhp\":\"nalaulppg\"},\"id\":\"gvpgy\",\"name\":\"gqgitxmedjvcsl\",\"type\":\"n\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Fleet response = manager.fleets()
            .getByResourceGroupWithResponse("bbcswsrtjri", "lrbpbewtghfgbl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("yjsflhhcaalnji", response.location());
        Assertions.assertEquals("xyawj", response.tags().get("yaqcslyjpkiidz"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
        Assertions.assertEquals("lvqhjkbegibtnmx", response.hubProfile().dnsPrefix());
        Assertions.assertEquals(true, response.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(true, response.hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("oayqc", response.hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("tzjuzgwyzmhtxo", response.hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("mtsavjcbpwxqp", response.hubProfile().agentProfile().vmSize());
    }
}
